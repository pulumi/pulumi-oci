// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Adm
{
    public static class GetKnowledgebase
    {
        /// <summary>
        /// This data source provides details about a specific Knowledge Base resource in Oracle Cloud Infrastructure ADM service.
        /// 
        /// Returns the details of the specified Knowledge Base.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testKnowledgeBase = Oci.Adm.GetKnowledgebase.Invoke(new()
        ///     {
        ///         KnowledgeBaseId = oci_adm_knowledge_base.Test_knowledge_base.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetKnowledgebaseResult> InvokeAsync(GetKnowledgebaseArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetKnowledgebaseResult>("oci:Adm/getKnowledgebase:getKnowledgebase", args ?? new GetKnowledgebaseArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Knowledge Base resource in Oracle Cloud Infrastructure ADM service.
        /// 
        /// Returns the details of the specified Knowledge Base.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testKnowledgeBase = Oci.Adm.GetKnowledgebase.Invoke(new()
        ///     {
        ///         KnowledgeBaseId = oci_adm_knowledge_base.Test_knowledge_base.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetKnowledgebaseResult> Invoke(GetKnowledgebaseInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetKnowledgebaseResult>("oci:Adm/getKnowledgebase:getKnowledgebase", args ?? new GetKnowledgebaseInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetKnowledgebaseArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of a Knowledge Base, as a URL path parameter.
        /// </summary>
        [Input("knowledgeBaseId", required: true)]
        public string KnowledgeBaseId { get; set; } = null!;

        public GetKnowledgebaseArgs()
        {
        }
        public static new GetKnowledgebaseArgs Empty => new GetKnowledgebaseArgs();
    }

    public sealed class GetKnowledgebaseInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of a Knowledge Base, as a URL path parameter.
        /// </summary>
        [Input("knowledgeBaseId", required: true)]
        public Input<string> KnowledgeBaseId { get; set; } = null!;

        public GetKnowledgebaseInvokeArgs()
        {
        }
        public static new GetKnowledgebaseInvokeArgs Empty => new GetKnowledgebaseInvokeArgs();
    }


    [OutputType]
    public sealed class GetKnowledgebaseResult
    {
        /// <summary>
        /// The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the Knowledge Base's compartment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// The name of the Knowledge Base.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the Knowledge Base.
        /// </summary>
        public readonly string Id;
        public readonly string KnowledgeBaseId;
        /// <summary>
        /// The current lifecycle state of the Knowledge Base.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> SystemTags;
        /// <summary>
        /// The creation date and time of the Knowledge Base (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The date and time the Knowledge Base was last updated (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetKnowledgebaseResult(
            string compartmentId,

            ImmutableDictionary<string, object> definedTags,

            string displayName,

            ImmutableDictionary<string, object> freeformTags,

            string id,

            string knowledgeBaseId,

            string state,

            ImmutableDictionary<string, object> systemTags,

            string timeCreated,

            string timeUpdated)
        {
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            KnowledgeBaseId = knowledgeBaseId;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
