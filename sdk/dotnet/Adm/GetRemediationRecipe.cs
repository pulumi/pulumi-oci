// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Adm
{
    public static class GetRemediationRecipe
    {
        /// <summary>
        /// This data source provides details about a specific Remediation Recipe resource in Oracle Cloud Infrastructure Adm service.
        /// 
        /// Returns the details of the specified RemediationRecipe.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testRemediationRecipe = Oci.Adm.GetRemediationRecipe.Invoke(new()
        ///     {
        ///         RemediationRecipeId = testRemediationRecipeOciAdmRemediationRecipe.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetRemediationRecipeResult> InvokeAsync(GetRemediationRecipeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRemediationRecipeResult>("oci:Adm/getRemediationRecipe:getRemediationRecipe", args ?? new GetRemediationRecipeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Remediation Recipe resource in Oracle Cloud Infrastructure Adm service.
        /// 
        /// Returns the details of the specified RemediationRecipe.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testRemediationRecipe = Oci.Adm.GetRemediationRecipe.Invoke(new()
        ///     {
        ///         RemediationRecipeId = testRemediationRecipeOciAdmRemediationRecipe.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetRemediationRecipeResult> Invoke(GetRemediationRecipeInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRemediationRecipeResult>("oci:Adm/getRemediationRecipe:getRemediationRecipe", args ?? new GetRemediationRecipeInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRemediationRecipeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of a Remediation Recipe, as a URL path parameter.
        /// </summary>
        [Input("remediationRecipeId", required: true)]
        public string RemediationRecipeId { get; set; } = null!;

        public GetRemediationRecipeArgs()
        {
        }
        public static new GetRemediationRecipeArgs Empty => new GetRemediationRecipeArgs();
    }

    public sealed class GetRemediationRecipeInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of a Remediation Recipe, as a URL path parameter.
        /// </summary>
        [Input("remediationRecipeId", required: true)]
        public Input<string> RemediationRecipeId { get; set; } = null!;

        public GetRemediationRecipeInvokeArgs()
        {
        }
        public static new GetRemediationRecipeInvokeArgs Empty => new GetRemediationRecipeInvokeArgs();
    }


    [OutputType]
    public sealed class GetRemediationRecipeResult
    {
        /// <summary>
        /// The compartment Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the remediation recipe.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// A configuration to define the constraints when detecting vulnerable dependencies.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRemediationRecipeDetectConfigurationResult> DetectConfigurations;
        /// <summary>
        /// The name of the Remediation Recipe.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the remediation recipe.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Boolean indicating if a run should be automatically triggered once the Knowledge Base contents are updated.
        /// </summary>
        public readonly bool IsRunTriggeredOnKbChange;
        /// <summary>
        /// The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the knowledge base.
        /// </summary>
        public readonly string KnowledgeBaseId;
        /// <summary>
        /// A network configuration defines the required network characteristics for an ADM remediation recipe. A network configuration is required if the build service is one of: GitHub Actions, GitLab Pipeline, or Jenkins Pipeline.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRemediationRecipeNetworkConfigurationResult> NetworkConfigurations;
        public readonly string RemediationRecipeId;
        /// <summary>
        /// A configuration for the Source Code Management tool/platform used by a remediation recipe.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRemediationRecipeScmConfigurationResult> ScmConfigurations;
        /// <summary>
        /// The current lifecycle state of the Remediation Recipe.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// The creation date and time of the Remediation Recipe (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The date and time the Remediation Recipe was last updated (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        /// </summary>
        public readonly string TimeUpdated;
        /// <summary>
        /// The Verify stage configuration specifies a build service to run a pipeline for the recommended code changes. The build pipeline will be initiated to ensure that there is no breaking change after the dependency versions have been updated in source to avoid vulnerabilities.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRemediationRecipeVerifyConfigurationResult> VerifyConfigurations;

        [OutputConstructor]
        private GetRemediationRecipeResult(
            string compartmentId,

            ImmutableDictionary<string, string> definedTags,

            ImmutableArray<Outputs.GetRemediationRecipeDetectConfigurationResult> detectConfigurations,

            string displayName,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            bool isRunTriggeredOnKbChange,

            string knowledgeBaseId,

            ImmutableArray<Outputs.GetRemediationRecipeNetworkConfigurationResult> networkConfigurations,

            string remediationRecipeId,

            ImmutableArray<Outputs.GetRemediationRecipeScmConfigurationResult> scmConfigurations,

            string state,

            ImmutableDictionary<string, string> systemTags,

            string timeCreated,

            string timeUpdated,

            ImmutableArray<Outputs.GetRemediationRecipeVerifyConfigurationResult> verifyConfigurations)
        {
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            DetectConfigurations = detectConfigurations;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            IsRunTriggeredOnKbChange = isRunTriggeredOnKbChange;
            KnowledgeBaseId = knowledgeBaseId;
            NetworkConfigurations = networkConfigurations;
            RemediationRecipeId = remediationRecipeId;
            ScmConfigurations = scmConfigurations;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            VerifyConfigurations = verifyConfigurations;
        }
    }
}
