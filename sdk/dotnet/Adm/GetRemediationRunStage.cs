// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Adm
{
    public static class GetRemediationRunStage
    {
        /// <summary>
        /// This data source provides details about a specific Remediation Run Stage resource in Oracle Cloud Infrastructure Adm service.
        /// 
        /// Returns the details of the specified Remediation Run Stage.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testRemediationRunStage = Oci.Adm.GetRemediationRunStage.Invoke(new()
        ///     {
        ///         RemediationRunId = testRemediationRun.Id,
        ///         StageType = remediationRunStageStageType,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetRemediationRunStageResult> InvokeAsync(GetRemediationRunStageArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRemediationRunStageResult>("oci:Adm/getRemediationRunStage:getRemediationRunStage", args ?? new GetRemediationRunStageArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Remediation Run Stage resource in Oracle Cloud Infrastructure Adm service.
        /// 
        /// Returns the details of the specified Remediation Run Stage.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testRemediationRunStage = Oci.Adm.GetRemediationRunStage.Invoke(new()
        ///     {
        ///         RemediationRunId = testRemediationRun.Id,
        ///         StageType = remediationRunStageStageType,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetRemediationRunStageResult> Invoke(GetRemediationRunStageInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRemediationRunStageResult>("oci:Adm/getRemediationRunStage:getRemediationRunStage", args ?? new GetRemediationRunStageInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRemediationRunStageArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique Remediation Run identifier path parameter.
        /// </summary>
        [Input("remediationRunId", required: true)]
        public string RemediationRunId { get; set; } = null!;

        /// <summary>
        /// The type of Remediation Run Stage, as a URL path parameter.
        /// </summary>
        [Input("stageType", required: true)]
        public string StageType { get; set; } = null!;

        public GetRemediationRunStageArgs()
        {
        }
        public static new GetRemediationRunStageArgs Empty => new GetRemediationRunStageArgs();
    }

    public sealed class GetRemediationRunStageInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique Remediation Run identifier path parameter.
        /// </summary>
        [Input("remediationRunId", required: true)]
        public Input<string> RemediationRunId { get; set; } = null!;

        /// <summary>
        /// The type of Remediation Run Stage, as a URL path parameter.
        /// </summary>
        [Input("stageType", required: true)]
        public Input<string> StageType { get; set; } = null!;

        public GetRemediationRunStageInvokeArgs()
        {
        }
        public static new GetRemediationRunStageInvokeArgs Empty => new GetRemediationRunStageInvokeArgs();
    }


    [OutputType]
    public sealed class GetRemediationRunStageResult
    {
        /// <summary>
        /// The Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the vulnerability audit.
        /// </summary>
        public readonly string AuditId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The next type of stage in the remediation run.
        /// </summary>
        public readonly string NextStageType;
        /// <summary>
        /// Pipeline properties which result from the run of the verify stage.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRemediationRunStagePipelinePropertyResult> PipelineProperties;
        /// <summary>
        /// The previous type of stage in the remediation run.
        /// </summary>
        public readonly string PreviousStageType;
        /// <summary>
        /// Pull request properties from recommend stage of the remediation run.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRemediationRunStagePullRequestPropertyResult> PullRequestProperties;
        /// <summary>
        /// Count of recommended application dependencies to update.
        /// </summary>
        public readonly int RecommendedUpdatesCount;
        /// <summary>
        /// The Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the remediation run.
        /// </summary>
        public readonly string RemediationRunId;
        public readonly string StageType;
        /// <summary>
        /// The current status of a remediation run stage.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Information about the current step within the stage.
        /// </summary>
        public readonly string Summary;
        /// <summary>
        /// The creation date and time of the remediation run stage (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The date and time of the finish of the remediation run stage (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        /// </summary>
        public readonly string TimeFinished;
        /// <summary>
        /// The date and time of the start of the remediation run stage (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        /// </summary>
        public readonly string TimeStarted;
        /// <summary>
        /// The type of the remediation run stage.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetRemediationRunStageResult(
            string auditId,

            string id,

            string nextStageType,

            ImmutableArray<Outputs.GetRemediationRunStagePipelinePropertyResult> pipelineProperties,

            string previousStageType,

            ImmutableArray<Outputs.GetRemediationRunStagePullRequestPropertyResult> pullRequestProperties,

            int recommendedUpdatesCount,

            string remediationRunId,

            string stageType,

            string status,

            string summary,

            string timeCreated,

            string timeFinished,

            string timeStarted,

            string type)
        {
            AuditId = auditId;
            Id = id;
            NextStageType = nextStageType;
            PipelineProperties = pipelineProperties;
            PreviousStageType = previousStageType;
            PullRequestProperties = pullRequestProperties;
            RecommendedUpdatesCount = recommendedUpdatesCount;
            RemediationRunId = remediationRunId;
            StageType = stageType;
            Status = status;
            Summary = summary;
            TimeCreated = timeCreated;
            TimeFinished = timeFinished;
            TimeStarted = timeStarted;
            Type = type;
        }
    }
}
