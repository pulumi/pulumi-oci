// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Adm
{
    public static class GetRemediationRuns
    {
        /// <summary>
        /// This data source provides the list of Remediation Runs in Oracle Cloud Infrastructure Adm service.
        /// 
        /// Returns a list of remediation runs contained by a compartment.
        /// The query parameter `compartmentId` is required unless the query parameter `id` is specified.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testRemediationRuns = Oci.Adm.GetRemediationRuns.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = remediationRunDisplayName,
        ///         Id = remediationRunId,
        ///         RemediationRecipeId = testRemediationRecipe.Id,
        ///         State = remediationRunState,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetRemediationRunsResult> InvokeAsync(GetRemediationRunsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRemediationRunsResult>("oci:Adm/getRemediationRuns:getRemediationRuns", args ?? new GetRemediationRunsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Remediation Runs in Oracle Cloud Infrastructure Adm service.
        /// 
        /// Returns a list of remediation runs contained by a compartment.
        /// The query parameter `compartmentId` is required unless the query parameter `id` is specified.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testRemediationRuns = Oci.Adm.GetRemediationRuns.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = remediationRunDisplayName,
        ///         Id = remediationRunId,
        ///         RemediationRecipeId = testRemediationRecipe.Id,
        ///         State = remediationRunState,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetRemediationRunsResult> Invoke(GetRemediationRunsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRemediationRunsResult>("oci:Adm/getRemediationRuns:getRemediationRuns", args ?? new GetRemediationRunsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRemediationRunsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A filter to return only resources that belong to the specified compartment identifier. Required only if the id query param is not specified.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetRemediationRunsFilterArgs>? _filters;
        public List<Inputs.GetRemediationRunsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetRemediationRunsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only resources that match the specified identifier. Required only if the compartmentId query parameter is not specified.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// A filter to return only resources that match the specified Remediation Recipe identifier.
        /// </summary>
        [Input("remediationRecipeId")]
        public string? RemediationRecipeId { get; set; }

        /// <summary>
        /// A filter to return only Remediation Runs that match the specified lifecycleState.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetRemediationRunsArgs()
        {
        }
        public static new GetRemediationRunsArgs Empty => new GetRemediationRunsArgs();
    }

    public sealed class GetRemediationRunsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A filter to return only resources that belong to the specified compartment identifier. Required only if the id query param is not specified.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetRemediationRunsFilterInputArgs>? _filters;
        public InputList<Inputs.GetRemediationRunsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetRemediationRunsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only resources that match the specified identifier. Required only if the compartmentId query parameter is not specified.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// A filter to return only resources that match the specified Remediation Recipe identifier.
        /// </summary>
        [Input("remediationRecipeId")]
        public Input<string>? RemediationRecipeId { get; set; }

        /// <summary>
        /// A filter to return only Remediation Runs that match the specified lifecycleState.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetRemediationRunsInvokeArgs()
        {
        }
        public static new GetRemediationRunsInvokeArgs Empty => new GetRemediationRunsInvokeArgs();
    }


    [OutputType]
    public sealed class GetRemediationRunsResult
    {
        /// <summary>
        /// The compartment Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the remediation run.
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// The name of the remediation run.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetRemediationRunsFilterResult> Filters;
        /// <summary>
        /// The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the remediation run.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the Remediation Recipe.
        /// </summary>
        public readonly string? RemediationRecipeId;
        /// <summary>
        /// The list of remediation_run_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRemediationRunsRemediationRunCollectionResult> RemediationRunCollections;
        /// <summary>
        /// The current lifecycle state of the remediation run.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetRemediationRunsResult(
            string? compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetRemediationRunsFilterResult> filters,

            string? id,

            string? remediationRecipeId,

            ImmutableArray<Outputs.GetRemediationRunsRemediationRunCollectionResult> remediationRunCollections,

            string? state)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            RemediationRecipeId = remediationRecipeId;
            RemediationRunCollections = remediationRunCollections;
            State = state;
        }
    }
}
