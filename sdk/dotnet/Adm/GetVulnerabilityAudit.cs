// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Adm
{
    public static class GetVulnerabilityAudit
    {
        /// <summary>
        /// This data source provides details about a specific Vulnerability Audit resource in Oracle Cloud Infrastructure ADM service.
        /// 
        /// Returns the details of the specified Vulnerability Audit.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testVulnerabilityAudit = Output.Create(Oci.Adm.GetVulnerabilityAudit.InvokeAsync(new Oci.Adm.GetVulnerabilityAuditArgs
        ///         {
        ///             VulnerabilityAuditId = oci_adm_vulnerability_audit.Test_vulnerability_audit.Id,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetVulnerabilityAuditResult> InvokeAsync(GetVulnerabilityAuditArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetVulnerabilityAuditResult>("oci:Adm/getVulnerabilityAudit:getVulnerabilityAudit", args ?? new GetVulnerabilityAuditArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Vulnerability Audit resource in Oracle Cloud Infrastructure ADM service.
        /// 
        /// Returns the details of the specified Vulnerability Audit.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testVulnerabilityAudit = Output.Create(Oci.Adm.GetVulnerabilityAudit.InvokeAsync(new Oci.Adm.GetVulnerabilityAuditArgs
        ///         {
        ///             VulnerabilityAuditId = oci_adm_vulnerability_audit.Test_vulnerability_audit.Id,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetVulnerabilityAuditResult> Invoke(GetVulnerabilityAuditInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetVulnerabilityAuditResult>("oci:Adm/getVulnerabilityAudit:getVulnerabilityAudit", args ?? new GetVulnerabilityAuditInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVulnerabilityAuditArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique Vulnerability Audit identifier path parameter.
        /// </summary>
        [Input("vulnerabilityAuditId", required: true)]
        public string VulnerabilityAuditId { get; set; } = null!;

        public GetVulnerabilityAuditArgs()
        {
        }
    }

    public sealed class GetVulnerabilityAuditInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique Vulnerability Audit identifier path parameter.
        /// </summary>
        [Input("vulnerabilityAuditId", required: true)]
        public Input<string> VulnerabilityAuditId { get; set; } = null!;

        public GetVulnerabilityAuditInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetVulnerabilityAuditResult
    {
        public readonly ImmutableArray<Outputs.GetVulnerabilityAuditApplicationDependencyResult> ApplicationDependencies;
        /// <summary>
        /// The type of the build tool.
        /// </summary>
        public readonly string BuildType;
        /// <summary>
        /// The Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the compartment associated with the Vulnerability Audit.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Configuration for a Vulnerability Audit type: object
        /// </summary>
        public readonly ImmutableArray<Outputs.GetVulnerabilityAuditConfigurationResult> Configurations;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// The name of the Vulnerability Audit.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// Unique vulnerability identifier.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Indicates if an audit succeeded according to the configuration. The value is `null` if the audit is in the `CREATING` state.
        /// </summary>
        public readonly bool IsSuccess;
        /// <summary>
        /// The Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the Knowledge Base.
        /// </summary>
        public readonly string KnowledgeBaseId;
        /// <summary>
        /// Maximum Common Vulnerability Scoring System Version 2 score of vulnerabilities.
        /// </summary>
        public readonly double MaxObservedCvssV2score;
        /// <summary>
        /// Maximum Common Vulnerability Scoring System Version 3 score of vulnerabilities.
        /// </summary>
        public readonly double MaxObservedCvssV3score;
        /// <summary>
        /// The current lifecycle state of the Vulnerability Audit.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> SystemTags;
        /// <summary>
        /// The creation date and time of the Vulnerability Audit (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The update date and time of the Vulnerability Audit (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        /// </summary>
        public readonly string TimeUpdated;
        /// <summary>
        /// List of vulnerabilities found in the Vulnerability Audit.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetVulnerabilityAuditVulnerabilityResult> Vulnerabilities;
        public readonly string VulnerabilityAuditId;
        /// <summary>
        /// Count of vulnerable artifacts.
        /// </summary>
        public readonly int VulnerableArtifactsCount;

        [OutputConstructor]
        private GetVulnerabilityAuditResult(
            ImmutableArray<Outputs.GetVulnerabilityAuditApplicationDependencyResult> applicationDependencies,

            string buildType,

            string compartmentId,

            ImmutableArray<Outputs.GetVulnerabilityAuditConfigurationResult> configurations,

            ImmutableDictionary<string, object> definedTags,

            string displayName,

            ImmutableDictionary<string, object> freeformTags,

            string id,

            bool isSuccess,

            string knowledgeBaseId,

            double maxObservedCvssV2score,

            double maxObservedCvssV3score,

            string state,

            ImmutableDictionary<string, object> systemTags,

            string timeCreated,

            string timeUpdated,

            ImmutableArray<Outputs.GetVulnerabilityAuditVulnerabilityResult> vulnerabilities,

            string vulnerabilityAuditId,

            int vulnerableArtifactsCount)
        {
            ApplicationDependencies = applicationDependencies;
            BuildType = buildType;
            CompartmentId = compartmentId;
            Configurations = configurations;
            DefinedTags = definedTags;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            IsSuccess = isSuccess;
            KnowledgeBaseId = knowledgeBaseId;
            MaxObservedCvssV2score = maxObservedCvssV2score;
            MaxObservedCvssV3score = maxObservedCvssV3score;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            Vulnerabilities = vulnerabilities;
            VulnerabilityAuditId = vulnerabilityAuditId;
            VulnerableArtifactsCount = vulnerableArtifactsCount;
        }
    }
}
