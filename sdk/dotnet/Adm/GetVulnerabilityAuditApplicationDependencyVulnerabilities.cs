// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Adm
{
    public static class GetVulnerabilityAuditApplicationDependencyVulnerabilities
    {
        /// <summary>
        /// This data source provides the list of Vulnerability Audit Application Dependency Vulnerabilities in Oracle Cloud Infrastructure ADM service.
        /// 
        /// Returns a list of Application Dependencies with their associated vulnerabilities.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testVulnerabilityAuditApplicationDependencyVulnerabilities = Oci.Adm.GetVulnerabilityAuditApplicationDependencyVulnerabilities.Invoke(new()
        ///     {
        ///         VulnerabilityAuditId = oci_adm_vulnerability_audit.Test_vulnerability_audit.Id,
        ///         CvssV2greaterThanOrEqual = @var.Vulnerability_audit_application_dependency_vulnerability_cvss_v2greater_than_or_equal,
        ///         CvssV3greaterThanOrEqual = @var.Vulnerability_audit_application_dependency_vulnerability_cvss_v3greater_than_or_equal,
        ///         Depth = @var.Vulnerability_audit_application_dependency_vulnerability_depth,
        ///         Gav = @var.Vulnerability_audit_application_dependency_vulnerability_gav,
        ///         Purl = @var.Vulnerability_audit_application_dependency_vulnerability_purl,
        ///         RootNodeId = oci_adm_root_node.Test_root_node.Id,
        ///         SeverityGreaterThanOrEqual = @var.Vulnerability_audit_application_dependency_vulnerability_severity_greater_than_or_equal,
        ///         VulnerabilityId = oci_adm_vulnerability.Test_vulnerability.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetVulnerabilityAuditApplicationDependencyVulnerabilitiesResult> InvokeAsync(GetVulnerabilityAuditApplicationDependencyVulnerabilitiesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVulnerabilityAuditApplicationDependencyVulnerabilitiesResult>("oci:Adm/getVulnerabilityAuditApplicationDependencyVulnerabilities:getVulnerabilityAuditApplicationDependencyVulnerabilities", args ?? new GetVulnerabilityAuditApplicationDependencyVulnerabilitiesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Vulnerability Audit Application Dependency Vulnerabilities in Oracle Cloud Infrastructure ADM service.
        /// 
        /// Returns a list of Application Dependencies with their associated vulnerabilities.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testVulnerabilityAuditApplicationDependencyVulnerabilities = Oci.Adm.GetVulnerabilityAuditApplicationDependencyVulnerabilities.Invoke(new()
        ///     {
        ///         VulnerabilityAuditId = oci_adm_vulnerability_audit.Test_vulnerability_audit.Id,
        ///         CvssV2greaterThanOrEqual = @var.Vulnerability_audit_application_dependency_vulnerability_cvss_v2greater_than_or_equal,
        ///         CvssV3greaterThanOrEqual = @var.Vulnerability_audit_application_dependency_vulnerability_cvss_v3greater_than_or_equal,
        ///         Depth = @var.Vulnerability_audit_application_dependency_vulnerability_depth,
        ///         Gav = @var.Vulnerability_audit_application_dependency_vulnerability_gav,
        ///         Purl = @var.Vulnerability_audit_application_dependency_vulnerability_purl,
        ///         RootNodeId = oci_adm_root_node.Test_root_node.Id,
        ///         SeverityGreaterThanOrEqual = @var.Vulnerability_audit_application_dependency_vulnerability_severity_greater_than_or_equal,
        ///         VulnerabilityId = oci_adm_vulnerability.Test_vulnerability.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetVulnerabilityAuditApplicationDependencyVulnerabilitiesResult> Invoke(GetVulnerabilityAuditApplicationDependencyVulnerabilitiesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVulnerabilityAuditApplicationDependencyVulnerabilitiesResult>("oci:Adm/getVulnerabilityAuditApplicationDependencyVulnerabilities:getVulnerabilityAuditApplicationDependencyVulnerabilities", args ?? new GetVulnerabilityAuditApplicationDependencyVulnerabilitiesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVulnerabilityAuditApplicationDependencyVulnerabilitiesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A filter that returns only Vulnerabilities that have a Common Vulnerability Scoring System Version 2 (CVSS V2) greater than or equal to the specified value.
        /// </summary>
        [Input("cvssV2greaterThanOrEqual")]
        public double? CvssV2greaterThanOrEqual { get; set; }

        /// <summary>
        /// A filter that returns only Vulnerabilities that have a Common Vulnerability Scoring System Version 3 (CVSS V3) greater than or equal to the specified value.
        /// </summary>
        [Input("cvssV3greaterThanOrEqual")]
        public double? CvssV3greaterThanOrEqual { get; set; }

        /// <summary>
        /// A filter to limit depth of the application dependencies tree traversal. Additionally query parameters such as "cvssV2GreaterThanOrEqual", "cvssV3GreaterThanOrEqual", "gav" and "vulnerabilityId" can't be used in conjunction with this latter.
        /// </summary>
        [Input("depth")]
        public int? Depth { get; set; }

        [Input("filters")]
        private List<Inputs.GetVulnerabilityAuditApplicationDependencyVulnerabilitiesFilterArgs>? _filters;
        public List<Inputs.GetVulnerabilityAuditApplicationDependencyVulnerabilitiesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetVulnerabilityAuditApplicationDependencyVulnerabilitiesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only resources that match the entire GAV (Group Artifact Version) identifier given.
        /// </summary>
        [Input("gav")]
        public string? Gav { get; set; }

        /// <summary>
        /// A filter to return only resources that match the entire PURL given (https://github.com/package-url/purl-spec/).
        /// </summary>
        [Input("purl")]
        public string? Purl { get; set; }

        /// <summary>
        /// A filter to override the top level root identifier with the new given value. The application dependency tree will only be traversed from the given node. Query parameters "cvssV2GreaterThanOrEqual", "cvssV3GreaterThanOrEqual", "gav" and "vulnerabilityId" cannot be used in conjunction with this parameter.
        /// </summary>
        [Input("rootNodeId")]
        public string? RootNodeId { get; set; }

        /// <summary>
        /// A filter that returns only Vulnerabilities that have a severity greater than or equal to the specified value.
        /// </summary>
        [Input("severityGreaterThanOrEqual")]
        public string? SeverityGreaterThanOrEqual { get; set; }

        [Input("sortBy")]
        public string? SortBy { get; set; }

        /// <summary>
        /// Unique Vulnerability Audit identifier path parameter.
        /// </summary>
        [Input("vulnerabilityAuditId", required: true)]
        public string VulnerabilityAuditId { get; set; } = null!;

        /// <summary>
        /// A filter to return only Vulnerability Audits that match the specified id.
        /// </summary>
        [Input("vulnerabilityId")]
        public string? VulnerabilityId { get; set; }

        public GetVulnerabilityAuditApplicationDependencyVulnerabilitiesArgs()
        {
        }
        public static new GetVulnerabilityAuditApplicationDependencyVulnerabilitiesArgs Empty => new GetVulnerabilityAuditApplicationDependencyVulnerabilitiesArgs();
    }

    public sealed class GetVulnerabilityAuditApplicationDependencyVulnerabilitiesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A filter that returns only Vulnerabilities that have a Common Vulnerability Scoring System Version 2 (CVSS V2) greater than or equal to the specified value.
        /// </summary>
        [Input("cvssV2greaterThanOrEqual")]
        public Input<double>? CvssV2greaterThanOrEqual { get; set; }

        /// <summary>
        /// A filter that returns only Vulnerabilities that have a Common Vulnerability Scoring System Version 3 (CVSS V3) greater than or equal to the specified value.
        /// </summary>
        [Input("cvssV3greaterThanOrEqual")]
        public Input<double>? CvssV3greaterThanOrEqual { get; set; }

        /// <summary>
        /// A filter to limit depth of the application dependencies tree traversal. Additionally query parameters such as "cvssV2GreaterThanOrEqual", "cvssV3GreaterThanOrEqual", "gav" and "vulnerabilityId" can't be used in conjunction with this latter.
        /// </summary>
        [Input("depth")]
        public Input<int>? Depth { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetVulnerabilityAuditApplicationDependencyVulnerabilitiesFilterInputArgs>? _filters;
        public InputList<Inputs.GetVulnerabilityAuditApplicationDependencyVulnerabilitiesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetVulnerabilityAuditApplicationDependencyVulnerabilitiesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only resources that match the entire GAV (Group Artifact Version) identifier given.
        /// </summary>
        [Input("gav")]
        public Input<string>? Gav { get; set; }

        /// <summary>
        /// A filter to return only resources that match the entire PURL given (https://github.com/package-url/purl-spec/).
        /// </summary>
        [Input("purl")]
        public Input<string>? Purl { get; set; }

        /// <summary>
        /// A filter to override the top level root identifier with the new given value. The application dependency tree will only be traversed from the given node. Query parameters "cvssV2GreaterThanOrEqual", "cvssV3GreaterThanOrEqual", "gav" and "vulnerabilityId" cannot be used in conjunction with this parameter.
        /// </summary>
        [Input("rootNodeId")]
        public Input<string>? RootNodeId { get; set; }

        /// <summary>
        /// A filter that returns only Vulnerabilities that have a severity greater than or equal to the specified value.
        /// </summary>
        [Input("severityGreaterThanOrEqual")]
        public Input<string>? SeverityGreaterThanOrEqual { get; set; }

        [Input("sortBy")]
        public Input<string>? SortBy { get; set; }

        /// <summary>
        /// Unique Vulnerability Audit identifier path parameter.
        /// </summary>
        [Input("vulnerabilityAuditId", required: true)]
        public Input<string> VulnerabilityAuditId { get; set; } = null!;

        /// <summary>
        /// A filter to return only Vulnerability Audits that match the specified id.
        /// </summary>
        [Input("vulnerabilityId")]
        public Input<string>? VulnerabilityId { get; set; }

        public GetVulnerabilityAuditApplicationDependencyVulnerabilitiesInvokeArgs()
        {
        }
        public static new GetVulnerabilityAuditApplicationDependencyVulnerabilitiesInvokeArgs Empty => new GetVulnerabilityAuditApplicationDependencyVulnerabilitiesInvokeArgs();
    }


    [OutputType]
    public sealed class GetVulnerabilityAuditApplicationDependencyVulnerabilitiesResult
    {
        /// <summary>
        /// The list of VulnerabilityAuditApplicationDependencyVulnerability.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetVulnerabilityAuditApplicationDependencyVulnerabilitiesApplicationDependencyVulnerabilityCollectionResult> ApplicationDependencyVulnerabilityCollections;
        public readonly double? CvssV2greaterThanOrEqual;
        public readonly double? CvssV3greaterThanOrEqual;
        public readonly int? Depth;
        public readonly ImmutableArray<Outputs.GetVulnerabilityAuditApplicationDependencyVulnerabilitiesFilterResult> Filters;
        /// <summary>
        /// Group Artifact Version (GAV) identifier (Group:Artifact:Version). Example: org.graalvm.nativeimage:svm:21.1.0. "N/A" for non-maven artifacts.
        /// </summary>
        public readonly string? Gav;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Package URL defined in https://github.com/package-url/purl-spec, e.g. pkg:maven/org.graalvm.nativeimage/svm@21.1.0
        /// </summary>
        public readonly string? Purl;
        public readonly string? RootNodeId;
        public readonly string? SeverityGreaterThanOrEqual;
        public readonly string? SortBy;
        public readonly string VulnerabilityAuditId;
        public readonly string? VulnerabilityId;

        [OutputConstructor]
        private GetVulnerabilityAuditApplicationDependencyVulnerabilitiesResult(
            ImmutableArray<Outputs.GetVulnerabilityAuditApplicationDependencyVulnerabilitiesApplicationDependencyVulnerabilityCollectionResult> applicationDependencyVulnerabilityCollections,

            double? cvssV2greaterThanOrEqual,

            double? cvssV3greaterThanOrEqual,

            int? depth,

            ImmutableArray<Outputs.GetVulnerabilityAuditApplicationDependencyVulnerabilitiesFilterResult> filters,

            string? gav,

            string id,

            string? purl,

            string? rootNodeId,

            string? severityGreaterThanOrEqual,

            string? sortBy,

            string vulnerabilityAuditId,

            string? vulnerabilityId)
        {
            ApplicationDependencyVulnerabilityCollections = applicationDependencyVulnerabilityCollections;
            CvssV2greaterThanOrEqual = cvssV2greaterThanOrEqual;
            CvssV3greaterThanOrEqual = cvssV3greaterThanOrEqual;
            Depth = depth;
            Filters = filters;
            Gav = gav;
            Id = id;
            Purl = purl;
            RootNodeId = rootNodeId;
            SeverityGreaterThanOrEqual = severityGreaterThanOrEqual;
            SortBy = sortBy;
            VulnerabilityAuditId = vulnerabilityAuditId;
            VulnerabilityId = vulnerabilityId;
        }
    }
}
