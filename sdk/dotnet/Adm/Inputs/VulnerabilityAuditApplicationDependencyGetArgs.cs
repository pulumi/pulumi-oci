// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Adm.Inputs
{

    public sealed class VulnerabilityAuditApplicationDependencyGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("applicationDependencyNodeIds")]
        private InputList<string>? _applicationDependencyNodeIds;

        /// <summary>
        /// List of application dependencies on which this application dependency depends, each identified by its nodeId.
        /// </summary>
        public InputList<string> ApplicationDependencyNodeIds
        {
            get => _applicationDependencyNodeIds ?? (_applicationDependencyNodeIds = new InputList<string>());
            set => _applicationDependencyNodeIds = value;
        }

        /// <summary>
        /// Group Artifact Version (GAV) identifier (Group:Artifact:Version). Example: org.graalvm.nativeimage:svm:21.1.0. "N/A" for non-maven artifacts.
        /// </summary>
        [Input("gav")]
        public Input<string>? Gav { get; set; }

        /// <summary>
        /// Unique identifier of an application dependency, for example nodeId1. The nodeId can be generated by assigning a unique id to each application dependency in the tree of application dependencies. Every node, even those who share the same GAV, should have a different nodeId. The preferred way of constructing a nodeId is to assign incremental integers during a breadth first or depth first search. A nodeId can be reused only it refers to the same subtree of application dependencies. (This is not equivalent to referring to the same GAV, that is, a GAV can have multiple transitive dependencies.)
        /// </summary>
        [Input("nodeId", required: true)]
        public Input<string> NodeId { get; set; } = null!;

        /// <summary>
        /// Package URL identifier, e.g. pkg:maven/org.graalvm.nativeimage/svm@21.1.0
        /// </summary>
        [Input("purl")]
        public Input<string>? Purl { get; set; }

        public VulnerabilityAuditApplicationDependencyGetArgs()
        {
        }
        public static new VulnerabilityAuditApplicationDependencyGetArgs Empty => new VulnerabilityAuditApplicationDependencyGetArgs();
    }
}
