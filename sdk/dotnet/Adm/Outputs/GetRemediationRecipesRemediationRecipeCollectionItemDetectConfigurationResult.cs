// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Adm.Outputs
{

    [OutputType]
    public sealed class GetRemediationRecipesRemediationRecipeCollectionItemDetectConfigurationResult
    {
        /// <summary>
        /// The list of dependencies to be ignored by the recommendation algorithm. The dependency pattern is matched against the 'group:artifact:version' or the purl of a dependency. An asterisk (*) at the end in the dependency pattern acts as a wildcard and matches zero or more characters.
        /// </summary>
        public readonly ImmutableArray<string> Exclusions;
        /// <summary>
        /// The maximum Common Vulnerability Scoring System Version 2 (CVSS V2) score. A vulnerability with a CVSS V2 score below this value is not considered for remediation.
        /// </summary>
        public readonly double MaxPermissibleCvssV2score;
        /// <summary>
        /// The maximum Common Vulnerability Scoring System Version 3 (CVSS V3) score. A vulnerability with a CVSS V3 score below this value is not considered for patching.
        /// </summary>
        public readonly double MaxPermissibleCvssV3score;
        /// <summary>
        /// The maximum ADM Severity. A vulnerability with an severity below this value is not considered for remediation.
        /// </summary>
        public readonly string MaxPermissibleSeverity;
        /// <summary>
        /// The upgrade policy for recommendations. The `Nearest` upgrade policy upgrades a dependency to the oldest version that meets both of the following criteria: it is newer than the current version and it is not affected by a vulnerability.
        /// </summary>
        public readonly string UpgradePolicy;

        [OutputConstructor]
        private GetRemediationRecipesRemediationRecipeCollectionItemDetectConfigurationResult(
            ImmutableArray<string> exclusions,

            double maxPermissibleCvssV2score,

            double maxPermissibleCvssV3score,

            string maxPermissibleSeverity,

            string upgradePolicy)
        {
            Exclusions = exclusions;
            MaxPermissibleCvssV2score = maxPermissibleCvssV2score;
            MaxPermissibleCvssV3score = maxPermissibleCvssV3score;
            MaxPermissibleSeverity = maxPermissibleSeverity;
            UpgradePolicy = upgradePolicy;
        }
    }
}
