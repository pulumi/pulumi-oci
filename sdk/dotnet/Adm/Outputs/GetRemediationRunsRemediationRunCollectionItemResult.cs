// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Adm.Outputs
{

    [OutputType]
    public sealed class GetRemediationRunsRemediationRunCollectionItemResult
    {
        /// <summary>
        /// A filter to return only resources that belong to the specified compartment identifier. Required only if the id query param is not specified.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The type of the current stage of the remediation run.
        /// </summary>
        public readonly string CurrentStageType;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// A filter to return only resources that match the specified identifier. Required only if the compartmentId query parameter is not specified.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A filter to return only resources that match the specified Remediation Recipe identifier.
        /// </summary>
        public readonly string RemediationRecipeId;
        /// <summary>
        /// The source that triggered the Remediation Recipe.
        /// </summary>
        public readonly string RemediationRunSource;
        /// <summary>
        /// The list of remediation run stage summaries.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRemediationRunsRemediationRunCollectionItemStageResult> Stages;
        /// <summary>
        /// A filter to return only Remediation Runs that match the specified lifecycleState.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// The creation date and time of the remediation run (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The date and time of the finish of the remediation run (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        /// </summary>
        public readonly string TimeFinished;
        /// <summary>
        /// The date and time of the start of the remediation run (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        /// </summary>
        public readonly string TimeStarted;
        /// <summary>
        /// The date and time the remediation run was last updated (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetRemediationRunsRemediationRunCollectionItemResult(
            string compartmentId,

            string currentStageType,

            ImmutableDictionary<string, string> definedTags,

            string displayName,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            string remediationRecipeId,

            string remediationRunSource,

            ImmutableArray<Outputs.GetRemediationRunsRemediationRunCollectionItemStageResult> stages,

            string state,

            ImmutableDictionary<string, string> systemTags,

            string timeCreated,

            string timeFinished,

            string timeStarted,

            string timeUpdated)
        {
            CompartmentId = compartmentId;
            CurrentStageType = currentStageType;
            DefinedTags = definedTags;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            RemediationRecipeId = remediationRecipeId;
            RemediationRunSource = remediationRunSource;
            Stages = stages;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeFinished = timeFinished;
            TimeStarted = timeStarted;
            TimeUpdated = timeUpdated;
        }
    }
}
