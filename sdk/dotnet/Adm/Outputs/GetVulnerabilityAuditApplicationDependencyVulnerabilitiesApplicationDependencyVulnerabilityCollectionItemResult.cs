// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Adm.Outputs
{

    [OutputType]
    public sealed class GetVulnerabilityAuditApplicationDependencyVulnerabilitiesApplicationDependencyVulnerabilityCollectionItemResult
    {
        /// <summary>
        /// List of application dependencies on which this application dependency depends, each identified by its nodeId.
        /// </summary>
        public readonly ImmutableArray<string> ApplicationDependencyNodeIds;
        /// <summary>
        /// A filter to return only resources that match the entire GAV (Group Artifact Version) identifier given.
        /// </summary>
        public readonly string Gav;
        /// <summary>
        /// Indicates if the artifact is found in the knowledge base, this field is deprecated and will be removed in the future.
        /// </summary>
        public readonly bool IsFoundInKnowledgeBase;
        /// <summary>
        /// Unique identifier of an application dependency, for example nodeId1.
        /// </summary>
        public readonly string NodeId;
        /// <summary>
        /// A filter to return only resources that match the entire purl given.
        /// </summary>
        public readonly string Purl;
        /// <summary>
        /// List of vulnerabilities for the application dependency.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetVulnerabilityAuditApplicationDependencyVulnerabilitiesApplicationDependencyVulnerabilityCollectionItemVulnerabilityResult> Vulnerabilities;
        /// <summary>
        /// Potential issues in the artifact identifiers (purls) provided by the user, that the user is alerted about. ADM supports the following warnings:
        /// * MISSING_VERSION: Missing version
        /// * INCORRECT_FORMAT_VERSION: Version can not be parsed according to the ecosystem
        /// * UNKNOWN_ECOSYSTEM: The purl's ecosystem is unknown to ADM
        /// * INCORRECT_FORMAT_EPOCH: Epoch qualifier can not be parsed according to the ecosystem
        /// * MISSING_DISTRO: The distro qualifier is required for the ecosystem, but was not provided in the purl
        /// * UNKNOWN_DISTRO: ADM does not have data for the provided distro value for the given ecosystem
        /// * MISSING_ARCH: The arch qualifier is required for the ecosystem and distro, but was not provided in the purl
        /// * UNKNOWN_ARCH: ADM does not have data for the provided arch value for the given ecosystem and distro
        /// * EPOCH_VALUE_MISMATCH: Epoch value in qualifier is not the same as the epoch value in version
        /// * INVALID_PURL: The provided PURL could not be parsed
        /// </summary>
        public readonly ImmutableArray<string> Warnings;

        [OutputConstructor]
        private GetVulnerabilityAuditApplicationDependencyVulnerabilitiesApplicationDependencyVulnerabilityCollectionItemResult(
            ImmutableArray<string> applicationDependencyNodeIds,

            string gav,

            bool isFoundInKnowledgeBase,

            string nodeId,

            string purl,

            ImmutableArray<Outputs.GetVulnerabilityAuditApplicationDependencyVulnerabilitiesApplicationDependencyVulnerabilityCollectionItemVulnerabilityResult> vulnerabilities,

            ImmutableArray<string> warnings)
        {
            ApplicationDependencyNodeIds = applicationDependencyNodeIds;
            Gav = gav;
            IsFoundInKnowledgeBase = isFoundInKnowledgeBase;
            NodeId = nodeId;
            Purl = purl;
            Vulnerabilities = vulnerabilities;
            Warnings = warnings;
        }
    }
}
