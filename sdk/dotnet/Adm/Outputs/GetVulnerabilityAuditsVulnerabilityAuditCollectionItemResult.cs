// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Adm.Outputs
{

    [OutputType]
    public sealed class GetVulnerabilityAuditsVulnerabilityAuditCollectionItemResult
    {
        public readonly ImmutableArray<Outputs.GetVulnerabilityAuditsVulnerabilityAuditCollectionItemApplicationDependencyResult> ApplicationDependencies;
        /// <summary>
        /// The type of the build tool is restricted to only two values MAVEN or UNSET. Use UNSET when the list of application dependencies is not Maven-related or is a mix of Maven and other ecosystems. This option is soon to be deprecated.
        /// </summary>
        public readonly string BuildType;
        /// <summary>
        /// A filter to return only resources that belong to the specified compartment identifier. Required only if the id query param is not specified.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Configuration for a vulnerability audit. A vulnerable application dependency is ignored if its name does match any of the items in `Exclusions`, or all of the associated Vulnerabilies have a CVSS v2 score below `maxPermissibleCvssV2Score` and a CVSS v3 score below `maxPermissibleCvssV3Score`. type: object
        /// </summary>
        public readonly ImmutableArray<Outputs.GetVulnerabilityAuditsVulnerabilityAuditCollectionItemConfigurationResult> Configurations;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// A filter to return only resources that match the specified identifier. Required only if the compartmentId query parameter is not specified.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A filter to return only successful or failed Vulnerability Audits.
        /// </summary>
        public readonly bool IsSuccess;
        /// <summary>
        /// A filter to return only Vulnerability Audits that were created against the specified knowledge base.
        /// </summary>
        public readonly string KnowledgeBaseId;
        /// <summary>
        /// Details on the lifecycle state.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// Maximum Common Vulnerability Scoring System Version 2 score observed for non-ignored vulnerable application dependencies.
        /// </summary>
        public readonly double MaxObservedCvssV2score;
        /// <summary>
        /// Maximum Common Vulnerability Scoring System Version 2 score observed for vulnerable application dependencies including ignored ones.
        /// </summary>
        public readonly double MaxObservedCvssV2scoreWithIgnored;
        /// <summary>
        /// Maximum Common Vulnerability Scoring System Version 3 score observed for non-ignored vulnerable application dependencies.
        /// </summary>
        public readonly double MaxObservedCvssV3score;
        /// <summary>
        /// Maximum Common Vulnerability Scoring System Version 3 score observed for vulnerable application dependencies including ignored ones.
        /// </summary>
        public readonly double MaxObservedCvssV3scoreWithIgnored;
        /// <summary>
        /// Maximum ADM Severity observed for non-ignored vulnerable application dependencies.
        /// </summary>
        public readonly string MaxObservedSeverity;
        /// <summary>
        /// Maximum ADM Severity observed for vulnerable application dependencies including ignored ones.
        /// </summary>
        public readonly string MaxObservedSeverityWithIgnored;
        /// <summary>
        /// Source that published the vulnerability
        /// </summary>
        public readonly ImmutableArray<Outputs.GetVulnerabilityAuditsVulnerabilityAuditCollectionItemSourceResult> Sources;
        /// <summary>
        /// A filter to return only Vulnerability Audits that match the specified lifecycleState.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// The creation date and time of the vulnerability audit (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The update date and time of the vulnerability audit (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        /// </summary>
        public readonly string TimeUpdated;
        /// <summary>
        /// The source details of the usage data in object storage. The usage data file uploaded to object storage must be a gzip archive of the JSON usage data returned from the GraalVM native-image-inspect tool after a native-image build. Set `sourceType` to `objectStorageTuple` and use [UsageDataViaObjectStorageTupleDetails](https://docs.cloud.oracle.com/iaas/api/#/en/adm/latest/requests/UsageDataViaObjectStorageTupleDetails) when specifying the namespace, bucket name, and object name.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetVulnerabilityAuditsVulnerabilityAuditCollectionItemUsageDataResult> UsageDatas;
        /// <summary>
        /// List of vulnerabilities found in the vulnerability audit. If a vulnerability affects multiple dependencies, the metadata returned here consists of audit-wide aggregates.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetVulnerabilityAuditsVulnerabilityAuditCollectionItemVulnerabilityResult> Vulnerabilities;
        /// <summary>
        /// Count of non-ignored vulnerable application dependencies.
        /// </summary>
        public readonly int VulnerableArtifactsCount;
        /// <summary>
        /// Count of all vulnerable application dependencies.
        /// </summary>
        public readonly int VulnerableArtifactsCountWithIgnored;

        [OutputConstructor]
        private GetVulnerabilityAuditsVulnerabilityAuditCollectionItemResult(
            ImmutableArray<Outputs.GetVulnerabilityAuditsVulnerabilityAuditCollectionItemApplicationDependencyResult> applicationDependencies,

            string buildType,

            string compartmentId,

            ImmutableArray<Outputs.GetVulnerabilityAuditsVulnerabilityAuditCollectionItemConfigurationResult> configurations,

            ImmutableDictionary<string, string> definedTags,

            string displayName,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            bool isSuccess,

            string knowledgeBaseId,

            string lifecycleDetails,

            double maxObservedCvssV2score,

            double maxObservedCvssV2scoreWithIgnored,

            double maxObservedCvssV3score,

            double maxObservedCvssV3scoreWithIgnored,

            string maxObservedSeverity,

            string maxObservedSeverityWithIgnored,

            ImmutableArray<Outputs.GetVulnerabilityAuditsVulnerabilityAuditCollectionItemSourceResult> sources,

            string state,

            ImmutableDictionary<string, string> systemTags,

            string timeCreated,

            string timeUpdated,

            ImmutableArray<Outputs.GetVulnerabilityAuditsVulnerabilityAuditCollectionItemUsageDataResult> usageDatas,

            ImmutableArray<Outputs.GetVulnerabilityAuditsVulnerabilityAuditCollectionItemVulnerabilityResult> vulnerabilities,

            int vulnerableArtifactsCount,

            int vulnerableArtifactsCountWithIgnored)
        {
            ApplicationDependencies = applicationDependencies;
            BuildType = buildType;
            CompartmentId = compartmentId;
            Configurations = configurations;
            DefinedTags = definedTags;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            IsSuccess = isSuccess;
            KnowledgeBaseId = knowledgeBaseId;
            LifecycleDetails = lifecycleDetails;
            MaxObservedCvssV2score = maxObservedCvssV2score;
            MaxObservedCvssV2scoreWithIgnored = maxObservedCvssV2scoreWithIgnored;
            MaxObservedCvssV3score = maxObservedCvssV3score;
            MaxObservedCvssV3scoreWithIgnored = maxObservedCvssV3scoreWithIgnored;
            MaxObservedSeverity = maxObservedSeverity;
            MaxObservedSeverityWithIgnored = maxObservedSeverityWithIgnored;
            Sources = sources;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            UsageDatas = usageDatas;
            Vulnerabilities = vulnerabilities;
            VulnerableArtifactsCount = vulnerableArtifactsCount;
            VulnerableArtifactsCountWithIgnored = vulnerableArtifactsCountWithIgnored;
        }
    }
}
