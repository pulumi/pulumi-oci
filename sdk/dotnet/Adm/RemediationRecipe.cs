// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Adm
{
    /// <summary>
    /// This resource provides the Remediation Recipe resource in Oracle Cloud Infrastructure Adm service.
    /// 
    /// Creates a new Remediation Recipe.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testRemediationRecipe = new Oci.Adm.RemediationRecipe("test_remediation_recipe", new()
    ///     {
    ///         CompartmentId = compartmentId,
    ///         DetectConfiguration = new Oci.Adm.Inputs.RemediationRecipeDetectConfigurationArgs
    ///         {
    ///             Exclusions = remediationRecipeDetectConfigurationExclusions,
    ///             MaxPermissibleCvssV2score = remediationRecipeDetectConfigurationMaxPermissibleCvssV2score,
    ///             MaxPermissibleCvssV3score = remediationRecipeDetectConfigurationMaxPermissibleCvssV3score,
    ///             MaxPermissibleSeverity = remediationRecipeDetectConfigurationMaxPermissibleSeverity,
    ///             UpgradePolicy = remediationRecipeDetectConfigurationUpgradePolicy,
    ///         },
    ///         IsRunTriggeredOnKbChange = remediationRecipeIsRunTriggeredOnKbChange,
    ///         KnowledgeBaseId = testKnowledgeBase.Id,
    ///         NetworkConfiguration = new Oci.Adm.Inputs.RemediationRecipeNetworkConfigurationArgs
    ///         {
    ///             SubnetId = testSubnet.Id,
    ///             NsgIds = remediationRecipeNetworkConfigurationNsgIds,
    ///         },
    ///         ScmConfiguration = new Oci.Adm.Inputs.RemediationRecipeScmConfigurationArgs
    ///         {
    ///             Branch = remediationRecipeScmConfigurationBranch,
    ///             IsAutomergeEnabled = remediationRecipeScmConfigurationIsAutomergeEnabled,
    ///             ScmType = remediationRecipeScmConfigurationScmType,
    ///             BuildFileLocation = remediationRecipeScmConfigurationBuildFileLocation,
    ///             ExternalScmType = remediationRecipeScmConfigurationExternalScmType,
    ///             OciCodeRepositoryId = testRepository.Id,
    ///             PatSecretId = testSecret.Id,
    ///             RepositoryUrl = remediationRecipeScmConfigurationRepositoryUrl,
    ///             Username = remediationRecipeScmConfigurationUsername,
    ///         },
    ///         VerifyConfiguration = new Oci.Adm.Inputs.RemediationRecipeVerifyConfigurationArgs
    ///         {
    ///             BuildServiceType = remediationRecipeVerifyConfigurationBuildServiceType,
    ///             AdditionalParameters = remediationRecipeVerifyConfigurationAdditionalParameters,
    ///             JenkinsUrl = remediationRecipeVerifyConfigurationJenkinsUrl,
    ///             JobName = testJob.Name,
    ///             PatSecretId = testSecret.Id,
    ///             PipelineId = testPipeline.Id,
    ///             RepositoryUrl = remediationRecipeVerifyConfigurationRepositoryUrl,
    ///             TriggerSecretId = testSecret.Id,
    ///             Username = remediationRecipeVerifyConfigurationUsername,
    ///             WorkflowName = remediationRecipeVerifyConfigurationWorkflowName,
    ///         },
    ///         DefinedTags = 
    ///         {
    ///             { "foo-namespace.bar-key", "value" },
    ///         },
    ///         DisplayName = remediationRecipeDisplayName,
    ///         FreeformTags = 
    ///         {
    ///             { "bar-key", "value" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// RemediationRecipes can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:Adm/remediationRecipe:RemediationRecipe test_remediation_recipe "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:Adm/remediationRecipe:RemediationRecipe")]
    public partial class RemediationRecipe : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) The compartment Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the remediation recipe.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, object>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A configuration to define the constraints when detecting vulnerable dependencies.
        /// </summary>
        [Output("detectConfiguration")]
        public Output<Outputs.RemediationRecipeDetectConfiguration> DetectConfiguration { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The name of the remediation recipe.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, object>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Boolean indicating if a run should be automatically triggered once the knowledge base is updated.
        /// </summary>
        [Output("isRunTriggeredOnKbChange")]
        public Output<bool> IsRunTriggeredOnKbChange { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the knowledge base.
        /// </summary>
        [Output("knowledgeBaseId")]
        public Output<string> KnowledgeBaseId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A network configuration defines the required network characteristics for an ADM remediation recipe. A network configuration is required if the build service is one of: GitHub Actions, GitLab Pipeline, or Jenkins Pipeline.
        /// </summary>
        [Output("networkConfiguration")]
        public Output<Outputs.RemediationRecipeNetworkConfiguration> NetworkConfiguration { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A configuration for the Source Code Management tool/platform used by a remediation recipe.
        /// </summary>
        [Output("scmConfiguration")]
        public Output<Outputs.RemediationRecipeScmConfiguration> ScmConfiguration { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The target state for the Remediation Recipe. Could be set to `ACTIVE` or `INACTIVE`. 
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        [Output("systemTags")]
        public Output<ImmutableDictionary<string, object>> SystemTags { get; private set; } = null!;

        /// <summary>
        /// The creation date and time of the Remediation Recipe (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The date and time the Remediation Recipe was last updated (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The Verify stage configuration specifies a build service to run a pipeline for the recommended code changes. The build pipeline will be initiated to ensure that there is no breaking change after the dependency versions have been updated in source to avoid vulnerabilities.
        /// </summary>
        [Output("verifyConfiguration")]
        public Output<Outputs.RemediationRecipeVerifyConfiguration> VerifyConfiguration { get; private set; } = null!;


        /// <summary>
        /// Create a RemediationRecipe resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RemediationRecipe(string name, RemediationRecipeArgs args, CustomResourceOptions? options = null)
            : base("oci:Adm/remediationRecipe:RemediationRecipe", name, args ?? new RemediationRecipeArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RemediationRecipe(string name, Input<string> id, RemediationRecipeState? state = null, CustomResourceOptions? options = null)
            : base("oci:Adm/remediationRecipe:RemediationRecipe", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RemediationRecipe resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RemediationRecipe Get(string name, Input<string> id, RemediationRecipeState? state = null, CustomResourceOptions? options = null)
        {
            return new RemediationRecipe(name, id, state, options);
        }
    }

    public sealed class RemediationRecipeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The compartment Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the remediation recipe.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) A configuration to define the constraints when detecting vulnerable dependencies.
        /// </summary>
        [Input("detectConfiguration", required: true)]
        public Input<Inputs.RemediationRecipeDetectConfigurationArgs> DetectConfiguration { get; set; } = null!;

        /// <summary>
        /// (Updatable) The name of the remediation recipe.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) Boolean indicating if a run should be automatically triggered once the knowledge base is updated.
        /// </summary>
        [Input("isRunTriggeredOnKbChange", required: true)]
        public Input<bool> IsRunTriggeredOnKbChange { get; set; } = null!;

        /// <summary>
        /// (Updatable) The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the knowledge base.
        /// </summary>
        [Input("knowledgeBaseId", required: true)]
        public Input<string> KnowledgeBaseId { get; set; } = null!;

        /// <summary>
        /// (Updatable) A network configuration defines the required network characteristics for an ADM remediation recipe. A network configuration is required if the build service is one of: GitHub Actions, GitLab Pipeline, or Jenkins Pipeline.
        /// </summary>
        [Input("networkConfiguration", required: true)]
        public Input<Inputs.RemediationRecipeNetworkConfigurationArgs> NetworkConfiguration { get; set; } = null!;

        /// <summary>
        /// (Updatable) A configuration for the Source Code Management tool/platform used by a remediation recipe.
        /// </summary>
        [Input("scmConfiguration", required: true)]
        public Input<Inputs.RemediationRecipeScmConfigurationArgs> ScmConfiguration { get; set; } = null!;

        /// <summary>
        /// (Updatable) The target state for the Remediation Recipe. Could be set to `ACTIVE` or `INACTIVE`. 
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// (Updatable) The Verify stage configuration specifies a build service to run a pipeline for the recommended code changes. The build pipeline will be initiated to ensure that there is no breaking change after the dependency versions have been updated in source to avoid vulnerabilities.
        /// </summary>
        [Input("verifyConfiguration", required: true)]
        public Input<Inputs.RemediationRecipeVerifyConfigurationArgs> VerifyConfiguration { get; set; } = null!;

        public RemediationRecipeArgs()
        {
        }
        public static new RemediationRecipeArgs Empty => new RemediationRecipeArgs();
    }

    public sealed class RemediationRecipeState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The compartment Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the remediation recipe.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) A configuration to define the constraints when detecting vulnerable dependencies.
        /// </summary>
        [Input("detectConfiguration")]
        public Input<Inputs.RemediationRecipeDetectConfigurationGetArgs>? DetectConfiguration { get; set; }

        /// <summary>
        /// (Updatable) The name of the remediation recipe.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) Boolean indicating if a run should be automatically triggered once the knowledge base is updated.
        /// </summary>
        [Input("isRunTriggeredOnKbChange")]
        public Input<bool>? IsRunTriggeredOnKbChange { get; set; }

        /// <summary>
        /// (Updatable) The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the knowledge base.
        /// </summary>
        [Input("knowledgeBaseId")]
        public Input<string>? KnowledgeBaseId { get; set; }

        /// <summary>
        /// (Updatable) A network configuration defines the required network characteristics for an ADM remediation recipe. A network configuration is required if the build service is one of: GitHub Actions, GitLab Pipeline, or Jenkins Pipeline.
        /// </summary>
        [Input("networkConfiguration")]
        public Input<Inputs.RemediationRecipeNetworkConfigurationGetArgs>? NetworkConfiguration { get; set; }

        /// <summary>
        /// (Updatable) A configuration for the Source Code Management tool/platform used by a remediation recipe.
        /// </summary>
        [Input("scmConfiguration")]
        public Input<Inputs.RemediationRecipeScmConfigurationGetArgs>? ScmConfiguration { get; set; }

        /// <summary>
        /// (Updatable) The target state for the Remediation Recipe. Could be set to `ACTIVE` or `INACTIVE`. 
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("systemTags")]
        private InputMap<object>? _systemTags;

        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public InputMap<object> SystemTags
        {
            get => _systemTags ?? (_systemTags = new InputMap<object>());
            set => _systemTags = value;
        }

        /// <summary>
        /// The creation date and time of the Remediation Recipe (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The date and time the Remediation Recipe was last updated (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        /// <summary>
        /// (Updatable) The Verify stage configuration specifies a build service to run a pipeline for the recommended code changes. The build pipeline will be initiated to ensure that there is no breaking change after the dependency versions have been updated in source to avoid vulnerabilities.
        /// </summary>
        [Input("verifyConfiguration")]
        public Input<Inputs.RemediationRecipeVerifyConfigurationGetArgs>? VerifyConfiguration { get; set; }

        public RemediationRecipeState()
        {
        }
        public static new RemediationRecipeState Empty => new RemediationRecipeState();
    }
}
