// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.AiAnomalyDetection.Outputs
{

    [OutputType]
    public sealed class DataAssetDataSourceDetails
    {
        /// <summary>
        /// atp db password Secret Id
        /// </summary>
        public readonly string? AtpPasswordSecretId;
        /// <summary>
        /// atp db user name
        /// </summary>
        public readonly string? AtpUserName;
        /// <summary>
        /// Bucket Name for influx connection
        /// </summary>
        public readonly string? Bucket;
        /// <summary>
        /// OCID of the secret containing the containers certificates of ATP wallet
        /// </summary>
        public readonly string? CwalletFileSecretId;
        /// <summary>
        /// Data source type where actually data asset is being stored
        /// </summary>
        public readonly string DataSourceType;
        /// <summary>
        /// DB Name for influx connection
        /// </summary>
        public readonly string? DatabaseName;
        /// <summary>
        /// OCID of the secret containing the PDB'S certificates of ATP wallet
        /// </summary>
        public readonly string? EwalletFileSecretId;
        /// <summary>
        /// OCID of the secret containing Keystore.jks file of the ATP wallet
        /// </summary>
        public readonly string? KeyStoreFileSecretId;
        /// <summary>
        /// Measurement name for influx
        /// </summary>
        public readonly string? MeasurementName;
        /// <summary>
        /// Object storage namespace
        /// </summary>
        public readonly string? Namespace;
        /// <summary>
        /// File name
        /// </summary>
        public readonly string? Object;
        /// <summary>
        /// OCID of the secret that contains jdbc properties file of ATP wallet
        /// </summary>
        public readonly string? OjdbcFileSecretId;
        /// <summary>
        /// Password Secret Id for the influx connection
        /// </summary>
        public readonly string? PasswordSecretId;
        /// <summary>
        /// atp database table name
        /// </summary>
        public readonly string? TableName;
        /// <summary>
        /// OCID of the secret that contains the tnsnames file of ATP wallet
        /// </summary>
        public readonly string? TnsnamesFileSecretId;
        /// <summary>
        /// OCID of the secret containing truststore.jks file of the ATP wallet
        /// </summary>
        public readonly string? TruststoreFileSecretId;
        /// <summary>
        /// public IP address and port to influx DB
        /// </summary>
        public readonly string? Url;
        /// <summary>
        /// Username for connection to Influx
        /// </summary>
        public readonly string? UserName;
        /// <summary>
        /// Possible data sources
        /// </summary>
        public readonly Outputs.DataAssetDataSourceDetailsVersionSpecificDetails? VersionSpecificDetails;
        /// <summary>
        /// wallet password Secret ID in String format
        /// </summary>
        public readonly string? WalletPasswordSecretId;

        [OutputConstructor]
        private DataAssetDataSourceDetails(
            string? atpPasswordSecretId,

            string? atpUserName,

            string? bucket,

            string? cwalletFileSecretId,

            string dataSourceType,

            string? databaseName,

            string? ewalletFileSecretId,

            string? keyStoreFileSecretId,

            string? measurementName,

            string? @namespace,

            string? @object,

            string? ojdbcFileSecretId,

            string? passwordSecretId,

            string? tableName,

            string? tnsnamesFileSecretId,

            string? truststoreFileSecretId,

            string? url,

            string? userName,

            Outputs.DataAssetDataSourceDetailsVersionSpecificDetails? versionSpecificDetails,

            string? walletPasswordSecretId)
        {
            AtpPasswordSecretId = atpPasswordSecretId;
            AtpUserName = atpUserName;
            Bucket = bucket;
            CwalletFileSecretId = cwalletFileSecretId;
            DataSourceType = dataSourceType;
            DatabaseName = databaseName;
            EwalletFileSecretId = ewalletFileSecretId;
            KeyStoreFileSecretId = keyStoreFileSecretId;
            MeasurementName = measurementName;
            Namespace = @namespace;
            Object = @object;
            OjdbcFileSecretId = ojdbcFileSecretId;
            PasswordSecretId = passwordSecretId;
            TableName = tableName;
            TnsnamesFileSecretId = tnsnamesFileSecretId;
            TruststoreFileSecretId = truststoreFileSecretId;
            Url = url;
            UserName = userName;
            VersionSpecificDetails = versionSpecificDetails;
            WalletPasswordSecretId = walletPasswordSecretId;
        }
    }
}
