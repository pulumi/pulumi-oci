// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.AiDocument
{
    public static class GetModelType
    {
        /// <summary>
        /// This data source provides details about a specific Model Type resource in Oracle Cloud Infrastructure Ai Document service.
        /// 
        /// Gets model capabilities
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testModelType = Oci.AiDocument.GetModelType.Invoke(new()
        ///     {
        ///         ModelType = modelTypeModelType,
        ///         CompartmentId = compartmentId,
        ///         ModelSubType = modelTypeModelSubType,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetModelTypeResult> InvokeAsync(GetModelTypeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetModelTypeResult>("oci:AiDocument/getModelType:getModelType", args ?? new GetModelTypeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Model Type resource in Oracle Cloud Infrastructure Ai Document service.
        /// 
        /// Gets model capabilities
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testModelType = Oci.AiDocument.GetModelType.Invoke(new()
        ///     {
        ///         ModelType = modelTypeModelType,
        ///         CompartmentId = compartmentId,
        ///         ModelSubType = modelTypeModelSubType,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetModelTypeResult> Invoke(GetModelTypeInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetModelTypeResult>("oci:AiDocument/getModelType:getModelType", args ?? new GetModelTypeInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Model Type resource in Oracle Cloud Infrastructure Ai Document service.
        /// 
        /// Gets model capabilities
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testModelType = Oci.AiDocument.GetModelType.Invoke(new()
        ///     {
        ///         ModelType = modelTypeModelType,
        ///         CompartmentId = compartmentId,
        ///         ModelSubType = modelTypeModelSubType,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetModelTypeResult> Invoke(GetModelTypeInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetModelTypeResult>("oci:AiDocument/getModelType:getModelType", args ?? new GetModelTypeInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetModelTypeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        /// <summary>
        /// The sub type based upon model selected.
        /// </summary>
        [Input("modelSubType")]
        public string? ModelSubType { get; set; }

        /// <summary>
        /// The type of the Document model.
        /// </summary>
        [Input("modelType", required: true)]
        public string ModelType { get; set; } = null!;

        public GetModelTypeArgs()
        {
        }
        public static new GetModelTypeArgs Empty => new GetModelTypeArgs();
    }

    public sealed class GetModelTypeInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// The sub type based upon model selected.
        /// </summary>
        [Input("modelSubType")]
        public Input<string>? ModelSubType { get; set; }

        /// <summary>
        /// The type of the Document model.
        /// </summary>
        [Input("modelType", required: true)]
        public Input<string> ModelType { get; set; } = null!;

        public GetModelTypeInvokeArgs()
        {
        }
        public static new GetModelTypeInvokeArgs Empty => new GetModelTypeInvokeArgs();
    }


    [OutputType]
    public sealed class GetModelTypeResult
    {
        /// <summary>
        /// Model information capabilities related to version
        /// </summary>
        public readonly string Capabilities;
        public readonly string? CompartmentId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? ModelSubType;
        public readonly string ModelType;
        /// <summary>
        /// Model versions available for this model and submodel type
        /// </summary>
        public readonly ImmutableArray<string> Versions;

        [OutputConstructor]
        private GetModelTypeResult(
            string capabilities,

            string? compartmentId,

            string id,

            string? modelSubType,

            string modelType,

            ImmutableArray<string> versions)
        {
            Capabilities = capabilities;
            CompartmentId = compartmentId;
            Id = id;
            ModelSubType = modelSubType;
            ModelType = modelType;
            Versions = versions;
        }
    }
}
