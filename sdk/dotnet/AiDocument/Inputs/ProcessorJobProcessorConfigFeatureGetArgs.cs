// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.AiDocument.Inputs
{

    public sealed class ProcessorJobProcessorConfigFeatureGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The type of document analysis requested. The allowed values are:
        /// * `LANGUAGE_CLASSIFICATION`: Detect the language.
        /// * `TEXT_EXTRACTION`: Recognize text.
        /// * `TABLE_EXTRACTION`: Detect and extract data in tables.
        /// * `KEY_VALUE_EXTRACTION`: Extract form fields.
        /// * `DOCUMENT_CLASSIFICATION`: Identify the type of document.
        /// * `DOCUMENT_ELEMENTS_EXTRACTION`: Extract information from bar code
        /// </summary>
        [Input("featureType", required: true)]
        public Input<string> FeatureType { get; set; } = null!;

        /// <summary>
        /// Whether or not to generate a searchable PDF file.
        /// </summary>
        [Input("generateSearchablePdf")]
        public Input<bool>? GenerateSearchablePdf { get; set; }

        /// <summary>
        /// The maximum number of results to return.
        /// </summary>
        [Input("maxResults")]
        public Input<int>? MaxResults { get; set; }

        /// <summary>
        /// Unique identifier custom model OCID that should be used for inference.
        /// </summary>
        [Input("modelId")]
        public Input<string>? ModelId { get; set; }

        /// <summary>
        /// Whether checkbox detection feature is enabled or disabled.
        /// </summary>
        [Input("selectionMarkDetection")]
        public Input<bool>? SelectionMarkDetection { get; set; }

        /// <summary>
        /// The custom model tenancy ID when modelId represents aliasName.
        /// </summary>
        [Input("tenancyId")]
        public Input<string>? TenancyId { get; set; }

        public ProcessorJobProcessorConfigFeatureGetArgs()
        {
        }
        public static new ProcessorJobProcessorConfigFeatureGetArgs Empty => new ProcessorJobProcessorConfigFeatureGetArgs();
    }
}
