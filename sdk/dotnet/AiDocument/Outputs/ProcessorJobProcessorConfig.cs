// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.AiDocument.Outputs
{

    [OutputType]
    public sealed class ProcessorJobProcessorConfig
    {
        /// <summary>
        /// The document type.
        /// </summary>
        public readonly string? DocumentType;
        /// <summary>
        /// The types of document analysis requested.
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessorJobProcessorConfigFeature> Features;
        /// <summary>
        /// Whether or not to generate a ZIP file containing the results.
        /// </summary>
        public readonly bool? IsZipOutputEnabled;
        /// <summary>
        /// The document language, abbreviated according to the BCP 47 Language-Tag syntax.
        /// </summary>
        public readonly string? Language;
        /// <summary>
        /// Unique identifier custom model OCID that should be used for inference.
        /// </summary>
        public readonly string? ModelId;
        /// <summary>
        /// A string-to-object map where the key is the normalization field and the object contains information about the field.
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessorJobProcessorConfigNormalizationField> NormalizationFields;
        /// <summary>
        /// The type of the processor.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        public readonly string ProcessorType;

        [OutputConstructor]
        private ProcessorJobProcessorConfig(
            string? documentType,

            ImmutableArray<Outputs.ProcessorJobProcessorConfigFeature> features,

            bool? isZipOutputEnabled,

            string? language,

            string? modelId,

            ImmutableArray<Outputs.ProcessorJobProcessorConfigNormalizationField> normalizationFields,

            string processorType)
        {
            DocumentType = documentType;
            Features = features;
            IsZipOutputEnabled = isZipOutputEnabled;
            Language = language;
            ModelId = modelId;
            NormalizationFields = normalizationFields;
            ProcessorType = processorType;
        }
    }
}
