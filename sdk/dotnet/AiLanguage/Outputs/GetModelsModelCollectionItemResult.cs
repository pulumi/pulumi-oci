// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.AiLanguage.Outputs
{

    [OutputType]
    public sealed class GetModelsModelCollectionItemResult
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? DefinedTags;
        /// <summary>
        /// A short description of the Model.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// model training results of different models
        /// </summary>
        public readonly ImmutableArray<Outputs.GetModelsModelCollectionItemEvaluationResultResult> EvaluationResults;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? FreeformTags;
        /// <summary>
        /// Unique identifier model OCID of a model that is immutable on creation
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in failed state.
        /// </summary>
        public readonly string? LifecycleDetails;
        /// <summary>
        /// Possible model types
        /// </summary>
        public readonly ImmutableArray<Outputs.GetModelsModelCollectionItemModelDetailResult> ModelDetails;
        /// <summary>
        /// The ID of the project for which to list the objects.
        /// </summary>
        public readonly string? ProjectId;
        /// <summary>
        /// &lt;b&gt;Filter&lt;/b&gt; results by the specified lifecycle state. Must be a valid state for the resource type.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? SystemTags;
        /// <summary>
        /// Possible strategy as testing and validation(optional) dataset.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetModelsModelCollectionItemTestStrategyResult> TestStrategies;
        /// <summary>
        /// The time the the model was created. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string? TimeCreated;
        /// <summary>
        /// The time the model was updated. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string? TimeUpdated;
        /// <summary>
        /// Possible data set type
        /// </summary>
        public readonly ImmutableArray<Outputs.GetModelsModelCollectionItemTrainingDatasetResult> TrainingDatasets;
        /// <summary>
        /// For pre trained models this will identify model type version used for model creation For custom identifying the model by model id is difficult. This param provides ease of use for end customer. &lt;&lt;service&gt;&gt;::&lt;&lt;service-name&gt;&gt;_&lt;&lt;model-type-version&gt;&gt;::&lt;&lt;custom model on which this training has to be done&gt;&gt; ex: ai-lang::NER_V1::CUSTOM-V0
        /// </summary>
        public readonly string? Version;

        [OutputConstructor]
        private GetModelsModelCollectionItemResult(
            string? compartmentId,

            ImmutableDictionary<string, object>? definedTags,

            string? description,

            string? displayName,

            ImmutableArray<Outputs.GetModelsModelCollectionItemEvaluationResultResult> evaluationResults,

            ImmutableDictionary<string, object>? freeformTags,

            string? id,

            string? lifecycleDetails,

            ImmutableArray<Outputs.GetModelsModelCollectionItemModelDetailResult> modelDetails,

            string? projectId,

            string? state,

            ImmutableDictionary<string, object>? systemTags,

            ImmutableArray<Outputs.GetModelsModelCollectionItemTestStrategyResult> testStrategies,

            string? timeCreated,

            string? timeUpdated,

            ImmutableArray<Outputs.GetModelsModelCollectionItemTrainingDatasetResult> trainingDatasets,

            string? version)
        {
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            EvaluationResults = evaluationResults;
            FreeformTags = freeformTags;
            Id = id;
            LifecycleDetails = lifecycleDetails;
            ModelDetails = modelDetails;
            ProjectId = projectId;
            State = state;
            SystemTags = systemTags;
            TestStrategies = testStrategies;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            TrainingDatasets = trainingDatasets;
            Version = version;
        }
    }
}
