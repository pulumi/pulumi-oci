// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.AiVision
{
    public static class GetStreamJobs
    {
        /// <summary>
        /// This data source provides the list of Stream Jobs in Oracle Cloud Infrastructure Ai Vision service.
        /// 
        /// Get list of stream jobs
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testStreamJobs = Oci.AiVision.GetStreamJobs.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = streamJobDisplayName,
        ///         Id = streamJobId,
        ///         State = streamJobState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetStreamJobsResult> InvokeAsync(GetStreamJobsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetStreamJobsResult>("oci:AiVision/getStreamJobs:getStreamJobs", args ?? new GetStreamJobsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Stream Jobs in Oracle Cloud Infrastructure Ai Vision service.
        /// 
        /// Get list of stream jobs
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testStreamJobs = Oci.AiVision.GetStreamJobs.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = streamJobDisplayName,
        ///         Id = streamJobId,
        ///         State = streamJobState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetStreamJobsResult> Invoke(GetStreamJobsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetStreamJobsResult>("oci:AiVision/getStreamJobs:getStreamJobs", args ?? new GetStreamJobsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Stream Jobs in Oracle Cloud Infrastructure Ai Vision service.
        /// 
        /// Get list of stream jobs
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testStreamJobs = Oci.AiVision.GetStreamJobs.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = streamJobDisplayName,
        ///         Id = streamJobId,
        ///         State = streamJobState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetStreamJobsResult> Invoke(GetStreamJobsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetStreamJobsResult>("oci:AiVision/getStreamJobs:getStreamJobs", args ?? new GetStreamJobsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetStreamJobsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetStreamJobsFilterArgs>? _filters;
        public List<Inputs.GetStreamJobsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetStreamJobsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The filter to find the streamjob with the given identifier.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// The filter to match projects with the given lifecycleState.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetStreamJobsArgs()
        {
        }
        public static new GetStreamJobsArgs Empty => new GetStreamJobsArgs();
    }

    public sealed class GetStreamJobsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetStreamJobsFilterInputArgs>? _filters;
        public InputList<Inputs.GetStreamJobsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetStreamJobsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The filter to find the streamjob with the given identifier.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The filter to match projects with the given lifecycleState.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetStreamJobsInvokeArgs()
        {
        }
        public static new GetStreamJobsInvokeArgs Empty => new GetStreamJobsInvokeArgs();
    }


    [OutputType]
    public sealed class GetStreamJobsResult
    {
        /// <summary>
        /// [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of compartment
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// Stream job display name.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetStreamJobsFilterResult> Filters;
        /// <summary>
        /// [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the streamJob.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The current state of the Stream job.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// The list of stream_job_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetStreamJobsStreamJobCollectionResult> StreamJobCollections;

        [OutputConstructor]
        private GetStreamJobsResult(
            string? compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetStreamJobsFilterResult> filters,

            string? id,

            string? state,

            ImmutableArray<Outputs.GetStreamJobsStreamJobCollectionResult> streamJobCollections)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            State = state;
            StreamJobCollections = streamJobCollections;
        }
    }
}
