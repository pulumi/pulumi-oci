// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.AiVision
{
    public static class GetVisionPrivateEndpoints
    {
        /// <summary>
        /// This data source provides the list of Vision Private Endpoints in Oracle Cloud Infrastructure Ai Vision service.
        /// 
        /// Returns a list of visionPrivateEndpoints.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testVisionPrivateEndpoints = Oci.AiVision.GetVisionPrivateEndpoints.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = visionPrivateEndpointDisplayName,
        ///         Id = visionPrivateEndpointId,
        ///         State = visionPrivateEndpointState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetVisionPrivateEndpointsResult> InvokeAsync(GetVisionPrivateEndpointsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVisionPrivateEndpointsResult>("oci:AiVision/getVisionPrivateEndpoints:getVisionPrivateEndpoints", args ?? new GetVisionPrivateEndpointsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Vision Private Endpoints in Oracle Cloud Infrastructure Ai Vision service.
        /// 
        /// Returns a list of visionPrivateEndpoints.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testVisionPrivateEndpoints = Oci.AiVision.GetVisionPrivateEndpoints.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = visionPrivateEndpointDisplayName,
        ///         Id = visionPrivateEndpointId,
        ///         State = visionPrivateEndpointState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetVisionPrivateEndpointsResult> Invoke(GetVisionPrivateEndpointsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVisionPrivateEndpointsResult>("oci:AiVision/getVisionPrivateEndpoints:getVisionPrivateEndpoints", args ?? new GetVisionPrivateEndpointsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Vision Private Endpoints in Oracle Cloud Infrastructure Ai Vision service.
        /// 
        /// Returns a list of visionPrivateEndpoints.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testVisionPrivateEndpoints = Oci.AiVision.GetVisionPrivateEndpoints.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = visionPrivateEndpointDisplayName,
        ///         Id = visionPrivateEndpointId,
        ///         State = visionPrivateEndpointState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetVisionPrivateEndpointsResult> Invoke(GetVisionPrivateEndpointsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetVisionPrivateEndpointsResult>("oci:AiVision/getVisionPrivateEndpoints:getVisionPrivateEndpoints", args ?? new GetVisionPrivateEndpointsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVisionPrivateEndpointsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetVisionPrivateEndpointsFilterArgs>? _filters;
        public List<Inputs.GetVisionPrivateEndpointsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetVisionPrivateEndpointsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The filter to find the device with the given identifier.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// The filter to match projects with the given lifecycleState.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetVisionPrivateEndpointsArgs()
        {
        }
        public static new GetVisionPrivateEndpointsArgs Empty => new GetVisionPrivateEndpointsArgs();
    }

    public sealed class GetVisionPrivateEndpointsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetVisionPrivateEndpointsFilterInputArgs>? _filters;
        public InputList<Inputs.GetVisionPrivateEndpointsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetVisionPrivateEndpointsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The filter to find the device with the given identifier.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The filter to match projects with the given lifecycleState.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetVisionPrivateEndpointsInvokeArgs()
        {
        }
        public static new GetVisionPrivateEndpointsInvokeArgs Empty => new GetVisionPrivateEndpointsInvokeArgs();
    }


    [OutputType]
    public sealed class GetVisionPrivateEndpointsResult
    {
        /// <summary>
        /// A compartment identifier.
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// A human-friendly name for the visionPrivateEndpoint, which can be changed.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetVisionPrivateEndpointsFilterResult> Filters;
        /// <summary>
        /// [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of private endpoint
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The current state of the visionPrivateEndpoint.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// The list of vision_private_endpoint_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetVisionPrivateEndpointsVisionPrivateEndpointCollectionResult> VisionPrivateEndpointCollections;

        [OutputConstructor]
        private GetVisionPrivateEndpointsResult(
            string? compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetVisionPrivateEndpointsFilterResult> filters,

            string? id,

            string? state,

            ImmutableArray<Outputs.GetVisionPrivateEndpointsVisionPrivateEndpointCollectionResult> visionPrivateEndpointCollections)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            State = state;
            VisionPrivateEndpointCollections = visionPrivateEndpointCollections;
        }
    }
}
