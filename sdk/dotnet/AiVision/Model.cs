// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.AiVision
{
    /// <summary>
    /// This resource provides the Model resource in Oracle Cloud Infrastructure Ai Vision service.
    /// 
    /// Creates a new Model.
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testModel = new Oci.AiVision.Model("testModel", new()
    ///     {
    ///         CompartmentId = @var.Compartment_id,
    ///         ModelType = @var.Model_model_type,
    ///         ProjectId = oci_ai_vision_project.Test_project.Id,
    ///         TrainingDataset = new Oci.AiVision.Inputs.ModelTrainingDatasetArgs
    ///         {
    ///             DatasetType = @var.Model_training_dataset_dataset_type,
    ///             Bucket = @var.Model_training_dataset_bucket,
    ///             DatasetId = oci_data_labeling_service_dataset.Test_dataset.Id,
    ///             NamespaceName = @var.Model_training_dataset_namespace,
    ///             Object = @var.Model_training_dataset_object,
    ///         },
    ///         DefinedTags = 
    ///         {
    ///             { "foo-namespace.bar-key", "value" },
    ///         },
    ///         Description = @var.Model_description,
    ///         DisplayName = @var.Model_display_name,
    ///         FreeformTags = 
    ///         {
    ///             { "bar-key", "value" },
    ///         },
    ///         IsQuickMode = @var.Model_is_quick_mode,
    ///         MaxTrainingDurationInHours = @var.Model_max_training_duration_in_hours,
    ///         ModelVersion = @var.Model_model_version,
    ///         TestingDataset = new Oci.AiVision.Inputs.ModelTestingDatasetArgs
    ///         {
    ///             DatasetType = @var.Model_testing_dataset_dataset_type,
    ///             Bucket = @var.Model_testing_dataset_bucket,
    ///             DatasetId = oci_data_labeling_service_dataset.Test_dataset.Id,
    ///             NamespaceName = @var.Model_testing_dataset_namespace,
    ///             Object = @var.Model_testing_dataset_object,
    ///         },
    ///         ValidationDataset = new Oci.AiVision.Inputs.ModelValidationDatasetArgs
    ///         {
    ///             DatasetType = @var.Model_validation_dataset_dataset_type,
    ///             Bucket = @var.Model_validation_dataset_bucket,
    ///             DatasetId = oci_data_labeling_service_dataset.Test_dataset.Id,
    ///             NamespaceName = @var.Model_validation_dataset_namespace,
    ///             Object = @var.Model_validation_dataset_object,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// Models can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:AiVision/model:Model test_model "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:AiVision/model:Model")]
    public partial class Model : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Average precision of the trained model
        /// </summary>
        [Output("averagePrecision")]
        public Output<double> AveragePrecision { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Compartment Identifier
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// Confidence ratio of the calculation
        /// </summary>
        [Output("confidenceThreshold")]
        public Output<double> ConfidenceThreshold { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, object>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A short description of the Model.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Model Identifier
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, object>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// If It's true, Training is set for recommended epochs needed for quick training.
        /// </summary>
        [Output("isQuickMode")]
        public Output<bool> IsQuickMode { get; private set; } = null!;

        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        [Output("lifecycleDetails")]
        public Output<string> LifecycleDetails { get; private set; } = null!;

        /// <summary>
        /// The maximum duration in hours for which the training will run.
        /// </summary>
        [Output("maxTrainingDurationInHours")]
        public Output<double> MaxTrainingDurationInHours { get; private set; } = null!;

        /// <summary>
        /// Complete Training Metrics for successful trained model
        /// </summary>
        [Output("metrics")]
        public Output<string> Metrics { get; private set; } = null!;

        /// <summary>
        /// The  type of the model.
        /// </summary>
        [Output("modelType")]
        public Output<string> ModelType { get; private set; } = null!;

        /// <summary>
        /// Model version.
        /// </summary>
        [Output("modelVersion")]
        public Output<string> ModelVersion { get; private set; } = null!;

        /// <summary>
        /// Precision of the trained model
        /// </summary>
        [Output("precision")]
        public Output<double> Precision { get; private set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project to associate with the model.
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        /// <summary>
        /// Recall of the trained model
        /// </summary>
        [Output("recall")]
        public Output<double> Recall { get; private set; } = null!;

        /// <summary>
        /// The current state of the Model.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        [Output("systemTags")]
        public Output<ImmutableDictionary<string, object>> SystemTags { get; private set; } = null!;

        /// <summary>
        /// Total number of testing Images
        /// </summary>
        [Output("testImageCount")]
        public Output<int> TestImageCount { get; private set; } = null!;

        /// <summary>
        /// The base entity for a Dataset, which is the input for Model creation.
        /// </summary>
        [Output("testingDataset")]
        public Output<Outputs.ModelTestingDataset> TestingDataset { get; private set; } = null!;

        /// <summary>
        /// The time the Model was created. An RFC3339 formatted datetime string
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The time the Model was updated. An RFC3339 formatted datetime string
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;

        /// <summary>
        /// Total number of training Images
        /// </summary>
        [Output("totalImageCount")]
        public Output<int> TotalImageCount { get; private set; } = null!;

        /// <summary>
        /// Total hours actually used for training
        /// </summary>
        [Output("trainedDurationInHours")]
        public Output<double> TrainedDurationInHours { get; private set; } = null!;

        /// <summary>
        /// The base entity for a Dataset, which is the input for Model creation.
        /// </summary>
        [Output("trainingDataset")]
        public Output<Outputs.ModelTrainingDataset> TrainingDataset { get; private set; } = null!;

        /// <summary>
        /// The base entity for a Dataset, which is the input for Model creation.
        /// </summary>
        [Output("validationDataset")]
        public Output<Outputs.ModelValidationDataset> ValidationDataset { get; private set; } = null!;


        /// <summary>
        /// Create a Model resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Model(string name, ModelArgs args, CustomResourceOptions? options = null)
            : base("oci:AiVision/model:Model", name, args ?? new ModelArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Model(string name, Input<string> id, ModelState? state = null, CustomResourceOptions? options = null)
            : base("oci:AiVision/model:Model", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Model resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Model Get(string name, Input<string> id, ModelState? state = null, CustomResourceOptions? options = null)
        {
            return new Model(name, id, state, options);
        }
    }

    public sealed class ModelArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) Compartment Identifier
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) A short description of the Model.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) Model Identifier
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// If It's true, Training is set for recommended epochs needed for quick training.
        /// </summary>
        [Input("isQuickMode")]
        public Input<bool>? IsQuickMode { get; set; }

        /// <summary>
        /// The maximum duration in hours for which the training will run.
        /// </summary>
        [Input("maxTrainingDurationInHours")]
        public Input<double>? MaxTrainingDurationInHours { get; set; }

        /// <summary>
        /// The  type of the model.
        /// </summary>
        [Input("modelType", required: true)]
        public Input<string> ModelType { get; set; } = null!;

        /// <summary>
        /// Model version.
        /// </summary>
        [Input("modelVersion")]
        public Input<string>? ModelVersion { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project to associate with the model.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        /// <summary>
        /// The base entity for a Dataset, which is the input for Model creation.
        /// </summary>
        [Input("testingDataset")]
        public Input<Inputs.ModelTestingDatasetArgs>? TestingDataset { get; set; }

        /// <summary>
        /// The base entity for a Dataset, which is the input for Model creation.
        /// </summary>
        [Input("trainingDataset", required: true)]
        public Input<Inputs.ModelTrainingDatasetArgs> TrainingDataset { get; set; } = null!;

        /// <summary>
        /// The base entity for a Dataset, which is the input for Model creation.
        /// </summary>
        [Input("validationDataset")]
        public Input<Inputs.ModelValidationDatasetArgs>? ValidationDataset { get; set; }

        public ModelArgs()
        {
        }
        public static new ModelArgs Empty => new ModelArgs();
    }

    public sealed class ModelState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Average precision of the trained model
        /// </summary>
        [Input("averagePrecision")]
        public Input<double>? AveragePrecision { get; set; }

        /// <summary>
        /// (Updatable) Compartment Identifier
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// Confidence ratio of the calculation
        /// </summary>
        [Input("confidenceThreshold")]
        public Input<double>? ConfidenceThreshold { get; set; }

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) A short description of the Model.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) Model Identifier
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// If It's true, Training is set for recommended epochs needed for quick training.
        /// </summary>
        [Input("isQuickMode")]
        public Input<bool>? IsQuickMode { get; set; }

        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        [Input("lifecycleDetails")]
        public Input<string>? LifecycleDetails { get; set; }

        /// <summary>
        /// The maximum duration in hours for which the training will run.
        /// </summary>
        [Input("maxTrainingDurationInHours")]
        public Input<double>? MaxTrainingDurationInHours { get; set; }

        /// <summary>
        /// Complete Training Metrics for successful trained model
        /// </summary>
        [Input("metrics")]
        public Input<string>? Metrics { get; set; }

        /// <summary>
        /// The  type of the model.
        /// </summary>
        [Input("modelType")]
        public Input<string>? ModelType { get; set; }

        /// <summary>
        /// Model version.
        /// </summary>
        [Input("modelVersion")]
        public Input<string>? ModelVersion { get; set; }

        /// <summary>
        /// Precision of the trained model
        /// </summary>
        [Input("precision")]
        public Input<double>? Precision { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project to associate with the model.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// Recall of the trained model
        /// </summary>
        [Input("recall")]
        public Input<double>? Recall { get; set; }

        /// <summary>
        /// The current state of the Model.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("systemTags")]
        private InputMap<object>? _systemTags;

        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public InputMap<object> SystemTags
        {
            get => _systemTags ?? (_systemTags = new InputMap<object>());
            set => _systemTags = value;
        }

        /// <summary>
        /// Total number of testing Images
        /// </summary>
        [Input("testImageCount")]
        public Input<int>? TestImageCount { get; set; }

        /// <summary>
        /// The base entity for a Dataset, which is the input for Model creation.
        /// </summary>
        [Input("testingDataset")]
        public Input<Inputs.ModelTestingDatasetGetArgs>? TestingDataset { get; set; }

        /// <summary>
        /// The time the Model was created. An RFC3339 formatted datetime string
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The time the Model was updated. An RFC3339 formatted datetime string
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        /// <summary>
        /// Total number of training Images
        /// </summary>
        [Input("totalImageCount")]
        public Input<int>? TotalImageCount { get; set; }

        /// <summary>
        /// Total hours actually used for training
        /// </summary>
        [Input("trainedDurationInHours")]
        public Input<double>? TrainedDurationInHours { get; set; }

        /// <summary>
        /// The base entity for a Dataset, which is the input for Model creation.
        /// </summary>
        [Input("trainingDataset")]
        public Input<Inputs.ModelTrainingDatasetGetArgs>? TrainingDataset { get; set; }

        /// <summary>
        /// The base entity for a Dataset, which is the input for Model creation.
        /// </summary>
        [Input("validationDataset")]
        public Input<Inputs.ModelValidationDatasetGetArgs>? ValidationDataset { get; set; }

        public ModelState()
        {
        }
        public static new ModelState Empty => new ModelState();
    }
}
