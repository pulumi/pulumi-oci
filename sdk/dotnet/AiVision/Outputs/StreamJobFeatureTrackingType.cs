// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.AiVision.Outputs
{

    [OutputType]
    public sealed class StreamJobFeatureTrackingType
    {
        /// <summary>
        /// (Updatable) compartment Id of biometric compartment.
        /// </summary>
        public readonly string? BiometricStoreCompartmentId;
        /// <summary>
        /// (Updatable) Which biometric store user wants to do face recognition
        /// </summary>
        public readonly string? BiometricStoreId;
        /// <summary>
        /// (Updatable) The detection model OCID.
        /// </summary>
        public readonly string? DetectionModelId;
        /// <summary>
        /// (Updatable) The maximum number of results to return.
        /// </summary>
        public readonly int? MaxResults;
        /// <summary>
        /// (Updatable) List of the objects to be tracked.
        /// </summary>
        public readonly ImmutableArray<string> Objects;
        /// <summary>
        /// (Updatable) Whether or not return face landmarks.
        /// </summary>
        public readonly bool? ShouldReturnLandmarks;
        /// <summary>
        /// (Updatable) The tracking model OCID.
        /// </summary>
        public readonly string? TrackingModelId;

        [OutputConstructor]
        private StreamJobFeatureTrackingType(
            string? biometricStoreCompartmentId,

            string? biometricStoreId,

            string? detectionModelId,

            int? maxResults,

            ImmutableArray<string> objects,

            bool? shouldReturnLandmarks,

            string? trackingModelId)
        {
            BiometricStoreCompartmentId = biometricStoreCompartmentId;
            BiometricStoreId = biometricStoreId;
            DetectionModelId = detectionModelId;
            MaxResults = maxResults;
            Objects = objects;
            ShouldReturnLandmarks = shouldReturnLandmarks;
            TrackingModelId = trackingModelId;
        }
    }
}
