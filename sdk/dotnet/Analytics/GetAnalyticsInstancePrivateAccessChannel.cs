// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Analytics
{
    public static class GetAnalyticsInstancePrivateAccessChannel
    {
        /// <summary>
        /// This data source provides details about a specific Analytics Instance Private Access Channel resource in Oracle Cloud Infrastructure Analytics service.
        /// 
        /// Retrieve private access channel in the specified Analytics Instance.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAnalyticsInstancePrivateAccessChannel = Oci.Analytics.GetAnalyticsInstancePrivateAccessChannel.Invoke(new()
        ///     {
        ///         AnalyticsInstanceId = oci_analytics_analytics_instance.Test_analytics_instance.Id,
        ///         PrivateAccessChannelKey = @var.Analytics_instance_private_access_channel_private_access_channel_key,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetAnalyticsInstancePrivateAccessChannelResult> InvokeAsync(GetAnalyticsInstancePrivateAccessChannelArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAnalyticsInstancePrivateAccessChannelResult>("oci:Analytics/getAnalyticsInstancePrivateAccessChannel:getAnalyticsInstancePrivateAccessChannel", args ?? new GetAnalyticsInstancePrivateAccessChannelArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Analytics Instance Private Access Channel resource in Oracle Cloud Infrastructure Analytics service.
        /// 
        /// Retrieve private access channel in the specified Analytics Instance.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAnalyticsInstancePrivateAccessChannel = Oci.Analytics.GetAnalyticsInstancePrivateAccessChannel.Invoke(new()
        ///     {
        ///         AnalyticsInstanceId = oci_analytics_analytics_instance.Test_analytics_instance.Id,
        ///         PrivateAccessChannelKey = @var.Analytics_instance_private_access_channel_private_access_channel_key,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetAnalyticsInstancePrivateAccessChannelResult> Invoke(GetAnalyticsInstancePrivateAccessChannelInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAnalyticsInstancePrivateAccessChannelResult>("oci:Analytics/getAnalyticsInstancePrivateAccessChannel:getAnalyticsInstancePrivateAccessChannel", args ?? new GetAnalyticsInstancePrivateAccessChannelInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAnalyticsInstancePrivateAccessChannelArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the AnalyticsInstance.
        /// </summary>
        [Input("analyticsInstanceId", required: true)]
        public string AnalyticsInstanceId { get; set; } = null!;

        /// <summary>
        /// The unique identifier key of the Private Access Channel.
        /// </summary>
        [Input("privateAccessChannelKey", required: true)]
        public string PrivateAccessChannelKey { get; set; } = null!;

        public GetAnalyticsInstancePrivateAccessChannelArgs()
        {
        }
        public static new GetAnalyticsInstancePrivateAccessChannelArgs Empty => new GetAnalyticsInstancePrivateAccessChannelArgs();
    }

    public sealed class GetAnalyticsInstancePrivateAccessChannelInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the AnalyticsInstance.
        /// </summary>
        [Input("analyticsInstanceId", required: true)]
        public Input<string> AnalyticsInstanceId { get; set; } = null!;

        /// <summary>
        /// The unique identifier key of the Private Access Channel.
        /// </summary>
        [Input("privateAccessChannelKey", required: true)]
        public Input<string> PrivateAccessChannelKey { get; set; } = null!;

        public GetAnalyticsInstancePrivateAccessChannelInvokeArgs()
        {
        }
        public static new GetAnalyticsInstancePrivateAccessChannelInvokeArgs Empty => new GetAnalyticsInstancePrivateAccessChannelInvokeArgs();
    }


    [OutputType]
    public sealed class GetAnalyticsInstancePrivateAccessChannelResult
    {
        public readonly string AnalyticsInstanceId;
        /// <summary>
        /// Display Name of the Private Access Channel.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// The list of IP addresses from the customer subnet connected to private access channel, used as a source Ip by Private Access Channel for network traffic from the AnalyticsInstance to Private Sources.
        /// </summary>
        public readonly ImmutableArray<string> EgressSourceIpAddresses;
        public readonly string? Id;
        /// <summary>
        /// IP Address of the Private Access channel.
        /// </summary>
        public readonly string? IpAddress;
        /// <summary>
        /// Private Access Channel unique identifier key.
        /// </summary>
        public readonly string? Key;
        /// <summary>
        /// Network Security Group OCIDs for an Analytics instance.
        /// </summary>
        public readonly ImmutableArray<string> NetworkSecurityGroupIds;
        public readonly string PrivateAccessChannelKey;
        /// <summary>
        /// List of Private Source DNS zones registered with Private Access Channel, where datasource hostnames from these dns zones / domains will be resolved in the peered VCN for access from Analytics Instance. Min of 1 is required and Max of 30 Private Source DNS zones can be registered.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAnalyticsInstancePrivateAccessChannelPrivateSourceDnsZoneResult> PrivateSourceDnsZones;
        /// <summary>
        /// List of Private Source DB SCAN hosts registered with Private Access Channel for access from Analytics Instance.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAnalyticsInstancePrivateAccessChannelPrivateSourceScanHostResult> PrivateSourceScanHosts;
        /// <summary>
        /// OCID of the customer subnet connected to private access channel.
        /// </summary>
        public readonly string? SubnetId;
        /// <summary>
        /// OCID of the customer VCN peered with private access channel.
        /// </summary>
        public readonly string? VcnId;

        [OutputConstructor]
        private GetAnalyticsInstancePrivateAccessChannelResult(
            string analyticsInstanceId,

            string? displayName,

            ImmutableArray<string> egressSourceIpAddresses,

            string? id,

            string? ipAddress,

            string? key,

            ImmutableArray<string> networkSecurityGroupIds,

            string privateAccessChannelKey,

            ImmutableArray<Outputs.GetAnalyticsInstancePrivateAccessChannelPrivateSourceDnsZoneResult> privateSourceDnsZones,

            ImmutableArray<Outputs.GetAnalyticsInstancePrivateAccessChannelPrivateSourceScanHostResult> privateSourceScanHosts,

            string? subnetId,

            string? vcnId)
        {
            AnalyticsInstanceId = analyticsInstanceId;
            DisplayName = displayName;
            EgressSourceIpAddresses = egressSourceIpAddresses;
            Id = id;
            IpAddress = ipAddress;
            Key = key;
            NetworkSecurityGroupIds = networkSecurityGroupIds;
            PrivateAccessChannelKey = privateAccessChannelKey;
            PrivateSourceDnsZones = privateSourceDnsZones;
            PrivateSourceScanHosts = privateSourceScanHosts;
            SubnetId = subnetId;
            VcnId = vcnId;
        }
    }
}
