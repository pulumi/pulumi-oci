// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.AnnouncementsService
{
    /// <summary>
    /// This resource provides the Announcement Subscriptions Filter Group resource in Oracle Cloud Infrastructure Announcements Service service.
    /// 
    /// Creates a new filter group in the specified announcement subscription.
    /// 
    /// This call is subject to an Announcements limit that applies to the total number of requests across all read or write operations. Announcements might throttle this call to reject an otherwise valid request when the total rate of operations exceeds 20 requests per second for a given user. The service might also throttle this call to reject an otherwise valid request when the total rate of operations exceeds 100 requests per second for a given tenancy.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testAnnouncementSubscriptionsFilterGroup = new Oci.AnnouncementsService.AnnouncementSubscriptionsFilterGroup("test_announcement_subscriptions_filter_group", new()
    ///     {
    ///         AnnouncementSubscriptionId = testAnnouncementSubscription.Id,
    ///         Filters = new[]
    ///         {
    ///             new Oci.AnnouncementsService.Inputs.AnnouncementSubscriptionsFilterGroupFilterArgs
    ///             {
    ///                 Type = announcementSubscriptionsFilterGroupFiltersType,
    ///                 Value = announcementSubscriptionsFilterGroupFiltersValue,
    ///             },
    ///         },
    ///         Name = announcementSubscriptionsFilterGroupName,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// AnnouncementSubscriptionsFilterGroups can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:AnnouncementsService/announcementSubscriptionsFilterGroup:AnnouncementSubscriptionsFilterGroup test_announcement_subscriptions_filter_group "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:AnnouncementsService/announcementSubscriptionsFilterGroup:AnnouncementSubscriptionsFilterGroup")]
    public partial class AnnouncementSubscriptionsFilterGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The OCID of the announcement subscription.
        /// </summary>
        [Output("announcementSubscriptionId")]
        public Output<string> AnnouncementSubscriptionId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A list of filters against which the Announcements service will match announcements. You cannot have more than one of any given filter type within a filter group.
        /// </summary>
        [Output("filters")]
        public Output<ImmutableArray<Outputs.AnnouncementSubscriptionsFilterGroupFilter>> Filters { get; private set; } = null!;

        /// <summary>
        /// The name of the filter group. The name must be unique and it cannot be changed. Avoid entering confidential information.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;


        /// <summary>
        /// Create a AnnouncementSubscriptionsFilterGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AnnouncementSubscriptionsFilterGroup(string name, AnnouncementSubscriptionsFilterGroupArgs args, CustomResourceOptions? options = null)
            : base("oci:AnnouncementsService/announcementSubscriptionsFilterGroup:AnnouncementSubscriptionsFilterGroup", name, args ?? new AnnouncementSubscriptionsFilterGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AnnouncementSubscriptionsFilterGroup(string name, Input<string> id, AnnouncementSubscriptionsFilterGroupState? state = null, CustomResourceOptions? options = null)
            : base("oci:AnnouncementsService/announcementSubscriptionsFilterGroup:AnnouncementSubscriptionsFilterGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AnnouncementSubscriptionsFilterGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AnnouncementSubscriptionsFilterGroup Get(string name, Input<string> id, AnnouncementSubscriptionsFilterGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new AnnouncementSubscriptionsFilterGroup(name, id, state, options);
        }
    }

    public sealed class AnnouncementSubscriptionsFilterGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The OCID of the announcement subscription.
        /// </summary>
        [Input("announcementSubscriptionId", required: true)]
        public Input<string> AnnouncementSubscriptionId { get; set; } = null!;

        [Input("filters", required: true)]
        private InputList<Inputs.AnnouncementSubscriptionsFilterGroupFilterArgs>? _filters;

        /// <summary>
        /// (Updatable) A list of filters against which the Announcements service will match announcements. You cannot have more than one of any given filter type within a filter group.
        /// </summary>
        public InputList<Inputs.AnnouncementSubscriptionsFilterGroupFilterArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.AnnouncementSubscriptionsFilterGroupFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The name of the filter group. The name must be unique and it cannot be changed. Avoid entering confidential information.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public AnnouncementSubscriptionsFilterGroupArgs()
        {
        }
        public static new AnnouncementSubscriptionsFilterGroupArgs Empty => new AnnouncementSubscriptionsFilterGroupArgs();
    }

    public sealed class AnnouncementSubscriptionsFilterGroupState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The OCID of the announcement subscription.
        /// </summary>
        [Input("announcementSubscriptionId")]
        public Input<string>? AnnouncementSubscriptionId { get; set; }

        [Input("filters")]
        private InputList<Inputs.AnnouncementSubscriptionsFilterGroupFilterGetArgs>? _filters;

        /// <summary>
        /// (Updatable) A list of filters against which the Announcements service will match announcements. You cannot have more than one of any given filter type within a filter group.
        /// </summary>
        public InputList<Inputs.AnnouncementSubscriptionsFilterGroupFilterGetArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.AnnouncementSubscriptionsFilterGroupFilterGetArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The name of the filter group. The name must be unique and it cannot be changed. Avoid entering confidential information.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public AnnouncementSubscriptionsFilterGroupState()
        {
        }
        public static new AnnouncementSubscriptionsFilterGroupState Empty => new AnnouncementSubscriptionsFilterGroupState();
    }
}
