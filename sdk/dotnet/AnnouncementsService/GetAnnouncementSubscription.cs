// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.AnnouncementsService
{
    public static class GetAnnouncementSubscription
    {
        /// <summary>
        /// This data source provides details about a specific Announcement Subscription resource in Oracle Cloud Infrastructure Announcements Service service.
        /// 
        /// Gets the specified announcement subscription.
        /// 
        /// This call is subject to an Announcements limit that applies to the total number of requests across all read or write operations. Announcements might throttle this call to reject an otherwise valid request when the total rate of operations exceeds 20 requests per second for a given user. The service might also throttle this call to reject an otherwise valid request when the total rate of operations exceeds 100 requests per second for a given tenancy.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testAnnouncementSubscription = Output.Create(Oci.AnnouncementsService.GetAnnouncementSubscription.InvokeAsync(new Oci.AnnouncementsService.GetAnnouncementSubscriptionArgs
        ///         {
        ///             AnnouncementSubscriptionId = oci_announcements_service_announcement_subscription.Test_announcement_subscription.Id,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetAnnouncementSubscriptionResult> InvokeAsync(GetAnnouncementSubscriptionArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAnnouncementSubscriptionResult>("oci:AnnouncementsService/getAnnouncementSubscription:getAnnouncementSubscription", args ?? new GetAnnouncementSubscriptionArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Announcement Subscription resource in Oracle Cloud Infrastructure Announcements Service service.
        /// 
        /// Gets the specified announcement subscription.
        /// 
        /// This call is subject to an Announcements limit that applies to the total number of requests across all read or write operations. Announcements might throttle this call to reject an otherwise valid request when the total rate of operations exceeds 20 requests per second for a given user. The service might also throttle this call to reject an otherwise valid request when the total rate of operations exceeds 100 requests per second for a given tenancy.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testAnnouncementSubscription = Output.Create(Oci.AnnouncementsService.GetAnnouncementSubscription.InvokeAsync(new Oci.AnnouncementsService.GetAnnouncementSubscriptionArgs
        ///         {
        ///             AnnouncementSubscriptionId = oci_announcements_service_announcement_subscription.Test_announcement_subscription.Id,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetAnnouncementSubscriptionResult> Invoke(GetAnnouncementSubscriptionInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetAnnouncementSubscriptionResult>("oci:AnnouncementsService/getAnnouncementSubscription:getAnnouncementSubscription", args ?? new GetAnnouncementSubscriptionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAnnouncementSubscriptionArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the announcement subscription.
        /// </summary>
        [Input("announcementSubscriptionId", required: true)]
        public string AnnouncementSubscriptionId { get; set; } = null!;

        public GetAnnouncementSubscriptionArgs()
        {
        }
    }

    public sealed class GetAnnouncementSubscriptionInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the announcement subscription.
        /// </summary>
        [Input("announcementSubscriptionId", required: true)]
        public Input<string> AnnouncementSubscriptionId { get; set; } = null!;

        public GetAnnouncementSubscriptionInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetAnnouncementSubscriptionResult
    {
        public readonly string AnnouncementSubscriptionId;
        /// <summary>
        /// The OCID of the compartment that contains the announcement subscription.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// A description of the announcement subscription. Avoid entering confidential information.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// A user-friendly name for the announcement subscription. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// A list of filter groups for the announcement subscription. A filter group is a combination of multiple filters applied to announcements for matching purposes.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAnnouncementSubscriptionFilterGroupResult> FilterGroups;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the announcement subscription.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A message describing the current lifecycle state in more detail. For example, details might provide required or recommended actions for a resource in a Failed state.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// The OCID of the Notifications service topic that is the target for publishing announcements that match the configured announcement subscription.
        /// </summary>
        public readonly string OnsTopicId;
        /// <summary>
        /// The current lifecycle state of the announcement subscription.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> SystemTags;
        /// <summary>
        /// The date and time that the announcement subscription was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The date and time that the announcement subscription was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetAnnouncementSubscriptionResult(
            string announcementSubscriptionId,

            string compartmentId,

            ImmutableDictionary<string, object> definedTags,

            string description,

            string displayName,

            ImmutableArray<Outputs.GetAnnouncementSubscriptionFilterGroupResult> filterGroups,

            ImmutableDictionary<string, object> freeformTags,

            string id,

            string lifecycleDetails,

            string onsTopicId,

            string state,

            ImmutableDictionary<string, object> systemTags,

            string timeCreated,

            string timeUpdated)
        {
            AnnouncementSubscriptionId = announcementSubscriptionId;
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            FilterGroups = filterGroups;
            FreeformTags = freeformTags;
            Id = id;
            LifecycleDetails = lifecycleDetails;
            OnsTopicId = onsTopicId;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
