// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.AnnouncementsService
{
    public static class GetAnnouncementSubscriptions
    {
        /// <summary>
        /// This data source provides the list of Announcement Subscriptions in Oracle Cloud Infrastructure Announcements Service service.
        /// 
        /// Gets a list of all announcement subscriptions in the specified compartment.
        /// 
        /// This call is subject to an Announcements limit that applies to the total number of requests across all read or write operations. Announcements might throttle this call to reject an otherwise valid request when the total rate of operations exceeds 20 requests per second for a given user. The service might also throttle this call to reject an otherwise valid request when the total rate of operations exceeds 100 requests per second for a given tenancy.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testAnnouncementSubscriptions = Output.Create(Oci.AnnouncementsService.GetAnnouncementSubscriptions.InvokeAsync(new Oci.AnnouncementsService.GetAnnouncementSubscriptionsArgs
        ///         {
        ///             CompartmentId = @var.Compartment_id,
        ///             DisplayName = @var.Announcement_subscription_display_name,
        ///             Id = @var.Announcement_subscription_id,
        ///             State = @var.Announcement_subscription_state,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetAnnouncementSubscriptionsResult> InvokeAsync(GetAnnouncementSubscriptionsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAnnouncementSubscriptionsResult>("oci:AnnouncementsService/getAnnouncementSubscriptions:getAnnouncementSubscriptions", args ?? new GetAnnouncementSubscriptionsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Announcement Subscriptions in Oracle Cloud Infrastructure Announcements Service service.
        /// 
        /// Gets a list of all announcement subscriptions in the specified compartment.
        /// 
        /// This call is subject to an Announcements limit that applies to the total number of requests across all read or write operations. Announcements might throttle this call to reject an otherwise valid request when the total rate of operations exceeds 20 requests per second for a given user. The service might also throttle this call to reject an otherwise valid request when the total rate of operations exceeds 100 requests per second for a given tenancy.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testAnnouncementSubscriptions = Output.Create(Oci.AnnouncementsService.GetAnnouncementSubscriptions.InvokeAsync(new Oci.AnnouncementsService.GetAnnouncementSubscriptionsArgs
        ///         {
        ///             CompartmentId = @var.Compartment_id,
        ///             DisplayName = @var.Announcement_subscription_display_name,
        ///             Id = @var.Announcement_subscription_id,
        ///             State = @var.Announcement_subscription_state,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetAnnouncementSubscriptionsResult> Invoke(GetAnnouncementSubscriptionsInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetAnnouncementSubscriptionsResult>("oci:AnnouncementsService/getAnnouncementSubscriptions:getAnnouncementSubscriptions", args ?? new GetAnnouncementSubscriptionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAnnouncementSubscriptionsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetAnnouncementSubscriptionsFilterArgs>? _filters;
        public List<Inputs.GetAnnouncementSubscriptionsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetAnnouncementSubscriptionsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The OCID of the announcement subscription.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// A filter to return only announcement subscriptions that match the given lifecycle state.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetAnnouncementSubscriptionsArgs()
        {
        }
    }

    public sealed class GetAnnouncementSubscriptionsInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetAnnouncementSubscriptionsFilterInputArgs>? _filters;
        public InputList<Inputs.GetAnnouncementSubscriptionsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetAnnouncementSubscriptionsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The OCID of the announcement subscription.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// A filter to return only announcement subscriptions that match the given lifecycle state.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetAnnouncementSubscriptionsInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetAnnouncementSubscriptionsResult
    {
        /// <summary>
        /// The list of announcement_subscription_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAnnouncementSubscriptionsAnnouncementSubscriptionCollectionResult> AnnouncementSubscriptionCollections;
        /// <summary>
        /// The OCID of the compartment that contains the announcement subscription.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// A user-friendly name for the announcement subscription. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetAnnouncementSubscriptionsFilterResult> Filters;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the announcement subscription.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The current lifecycle state of the announcement subscription.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetAnnouncementSubscriptionsResult(
            ImmutableArray<Outputs.GetAnnouncementSubscriptionsAnnouncementSubscriptionCollectionResult> announcementSubscriptionCollections,

            string compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetAnnouncementSubscriptionsFilterResult> filters,

            string? id,

            string? state)
        {
            AnnouncementSubscriptionCollections = announcementSubscriptionCollections;
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            State = state;
        }
    }
}
