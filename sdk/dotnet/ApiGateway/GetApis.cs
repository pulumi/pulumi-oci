// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ApiGateway
{
    public static class GetApis
    {
        /// <summary>
        /// This data source provides the list of Apis in Oracle Cloud Infrastructure API Gateway service.
        /// 
        /// Returns a list of APIs.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testApis = Oci.ApiGateway.GetApis.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         DisplayName = @var.Api_display_name,
        ///         State = @var.Api_state,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetApisResult> InvokeAsync(GetApisArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetApisResult>("oci:ApiGateway/getApis:getApis", args ?? new GetApisArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Apis in Oracle Cloud Infrastructure API Gateway service.
        /// 
        /// Returns a list of APIs.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testApis = Oci.ApiGateway.GetApis.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         DisplayName = @var.Api_display_name,
        ///         State = @var.Api_state,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetApisResult> Invoke(GetApisInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetApisResult>("oci:ApiGateway/getApis:getApis", args ?? new GetApisInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApisArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ocid of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetApisFilterArgs>? _filters;
        public List<Inputs.GetApisFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetApisFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only resources that match the given lifecycle state.  Example: `ACTIVE`
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetApisArgs()
        {
        }
        public static new GetApisArgs Empty => new GetApisArgs();
    }

    public sealed class GetApisInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ocid of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetApisFilterInputArgs>? _filters;
        public InputList<Inputs.GetApisFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetApisFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only resources that match the given lifecycle state.  Example: `ACTIVE`
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetApisInvokeArgs()
        {
        }
        public static new GetApisInvokeArgs Empty => new GetApisInvokeArgs();
    }


    [OutputType]
    public sealed class GetApisResult
    {
        /// <summary>
        /// The list of api_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetApisApiCollectionResult> ApiCollections;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the resource is created.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetApisFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The current state of the API.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetApisResult(
            ImmutableArray<Outputs.GetApisApiCollectionResult> apiCollections,

            string compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetApisFilterResult> filters,

            string? id,

            string? state)
        {
            ApiCollections = apiCollections;
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            State = state;
        }
    }
}
