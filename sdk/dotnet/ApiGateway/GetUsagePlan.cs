// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ApiGateway
{
    public static class GetUsagePlan
    {
        /// <summary>
        /// This data source provides details about a specific Usage Plan resource in Oracle Cloud Infrastructure API Gateway service.
        /// 
        /// Gets a usage plan by identifier.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testUsagePlan = Oci.ApiGateway.GetUsagePlan.Invoke(new()
        ///     {
        ///         UsagePlanId = testUsagePlanOciApigatewayUsagePlan.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetUsagePlanResult> InvokeAsync(GetUsagePlanArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetUsagePlanResult>("oci:ApiGateway/getUsagePlan:getUsagePlan", args ?? new GetUsagePlanArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Usage Plan resource in Oracle Cloud Infrastructure API Gateway service.
        /// 
        /// Gets a usage plan by identifier.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testUsagePlan = Oci.ApiGateway.GetUsagePlan.Invoke(new()
        ///     {
        ///         UsagePlanId = testUsagePlanOciApigatewayUsagePlan.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetUsagePlanResult> Invoke(GetUsagePlanInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetUsagePlanResult>("oci:ApiGateway/getUsagePlan:getUsagePlan", args ?? new GetUsagePlanInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Usage Plan resource in Oracle Cloud Infrastructure API Gateway service.
        /// 
        /// Gets a usage plan by identifier.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testUsagePlan = Oci.ApiGateway.GetUsagePlan.Invoke(new()
        ///     {
        ///         UsagePlanId = testUsagePlanOciApigatewayUsagePlan.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetUsagePlanResult> Invoke(GetUsagePlanInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetUsagePlanResult>("oci:ApiGateway/getUsagePlan:getUsagePlan", args ?? new GetUsagePlanInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetUsagePlanArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ocid of the usage plan.
        /// </summary>
        [Input("usagePlanId", required: true)]
        public string UsagePlanId { get; set; } = null!;

        public GetUsagePlanArgs()
        {
        }
        public static new GetUsagePlanArgs Empty => new GetUsagePlanArgs();
    }

    public sealed class GetUsagePlanInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ocid of the usage plan.
        /// </summary>
        [Input("usagePlanId", required: true)]
        public Input<string> UsagePlanId { get; set; } = null!;

        public GetUsagePlanInvokeArgs()
        {
        }
        public static new GetUsagePlanInvokeArgs Empty => new GetUsagePlanInvokeArgs();
    }


    [OutputType]
    public sealed class GetUsagePlanResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the resource is created.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// A collection of entitlements currently assigned to the usage plan.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetUsagePlanEntitlementResult> Entitlements;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a usage plan resource.
        /// </summary>
        public readonly string Id;
        public readonly bool IsLockOverride;
        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed state.
        /// </summary>
        public readonly string LifecycleDetails;
        public readonly ImmutableArray<Outputs.GetUsagePlanLockResult> Locks;
        /// <summary>
        /// The current state of the usage plan.
        /// </summary>
        public readonly string State;
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// The time this resource was created. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time this resource was last updated. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeUpdated;
        public readonly string UsagePlanId;

        [OutputConstructor]
        private GetUsagePlanResult(
            string compartmentId,

            ImmutableDictionary<string, string> definedTags,

            string displayName,

            ImmutableArray<Outputs.GetUsagePlanEntitlementResult> entitlements,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            bool isLockOverride,

            string lifecycleDetails,

            ImmutableArray<Outputs.GetUsagePlanLockResult> locks,

            string state,

            ImmutableDictionary<string, string> systemTags,

            string timeCreated,

            string timeUpdated,

            string usagePlanId)
        {
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            DisplayName = displayName;
            Entitlements = entitlements;
            FreeformTags = freeformTags;
            Id = id;
            IsLockOverride = isLockOverride;
            LifecycleDetails = lifecycleDetails;
            Locks = locks;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            UsagePlanId = usagePlanId;
        }
    }
}
