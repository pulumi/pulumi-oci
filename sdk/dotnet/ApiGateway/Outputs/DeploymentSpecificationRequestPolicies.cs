// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ApiGateway.Outputs
{

    [OutputType]
    public sealed class DeploymentSpecificationRequestPolicies
    {
        /// <summary>
        /// (Updatable) Information on how to authenticate incoming requests.
        /// </summary>
        public readonly Outputs.DeploymentSpecificationRequestPoliciesAuthentication? Authentication;
        /// <summary>
        /// (Updatable) Enable CORS (Cross-Origin-Resource-Sharing) request handling.
        /// </summary>
        public readonly Outputs.DeploymentSpecificationRequestPoliciesCors? Cors;
        /// <summary>
        /// (Updatable) Properties used to configure client mTLS verification when API Consumer makes connection to the gateway.
        /// </summary>
        public readonly Outputs.DeploymentSpecificationRequestPoliciesMutualTls? MutualTls;
        /// <summary>
        /// (Updatable) Limit the number of requests that should be handled for the specified window using a specfic key.
        /// </summary>
        public readonly Outputs.DeploymentSpecificationRequestPoliciesRateLimiting? RateLimiting;
        /// <summary>
        /// (Updatable) Usage plan policies for this deployment
        /// </summary>
        public readonly Outputs.DeploymentSpecificationRequestPoliciesUsagePlans? UsagePlans;

        [OutputConstructor]
        private DeploymentSpecificationRequestPolicies(
            Outputs.DeploymentSpecificationRequestPoliciesAuthentication? authentication,

            Outputs.DeploymentSpecificationRequestPoliciesCors? cors,

            Outputs.DeploymentSpecificationRequestPoliciesMutualTls? mutualTls,

            Outputs.DeploymentSpecificationRequestPoliciesRateLimiting? rateLimiting,

            Outputs.DeploymentSpecificationRequestPoliciesUsagePlans? usagePlans)
        {
            Authentication = authentication;
            Cors = cors;
            MutualTls = mutualTls;
            RateLimiting = rateLimiting;
            UsagePlans = usagePlans;
        }
    }
}
