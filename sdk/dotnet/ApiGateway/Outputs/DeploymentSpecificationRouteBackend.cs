// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ApiGateway.Outputs
{

    [OutputType]
    public sealed class DeploymentSpecificationRouteBackend
    {
        /// <summary>
        /// (Updatable)
        /// </summary>
        public readonly ImmutableArray<string> AllowedPostLogoutUris;
        /// <summary>
        /// (Updatable) The body of the stock response from the mock backend.
        /// </summary>
        public readonly string? Body;
        /// <summary>
        /// (Updatable) Defines a timeout for establishing a connection with a proxied server.
        /// </summary>
        public readonly double? ConnectTimeoutInSeconds;
        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Functions function resource.
        /// </summary>
        public readonly string? FunctionId;
        /// <summary>
        /// (Updatable) The headers of the stock response from the mock backend.
        /// </summary>
        public readonly ImmutableArray<Outputs.DeploymentSpecificationRouteBackendHeader> Headers;
        /// <summary>
        /// (Updatable) Defines whether or not to uphold SSL verification.
        /// </summary>
        public readonly bool? IsSslVerifyDisabled;
        /// <summary>
        /// (Updatable) Defines a state that should be shared on redirecting to postLogout URL.
        /// </summary>
        public readonly string? PostLogoutState;
        /// <summary>
        /// (Updatable) Defines a timeout for reading a response from the proxied server.
        /// </summary>
        public readonly double? ReadTimeoutInSeconds;
        /// <summary>
        /// (Updatable) List of backends to chose from for Dynamic Routing.
        /// </summary>
        public readonly ImmutableArray<Outputs.DeploymentSpecificationRouteBackendRoutingBackend> RoutingBackends;
        /// <summary>
        /// (Updatable) Information around selector used for branching among routes/ authentication servers while dynamic routing/ authentication.
        /// </summary>
        public readonly Outputs.DeploymentSpecificationRouteBackendSelectionSource? SelectionSource;
        /// <summary>
        /// (Updatable) Defines a timeout for transmitting a request to the proxied server.
        /// </summary>
        public readonly double? SendTimeoutInSeconds;
        /// <summary>
        /// (Updatable) The status code of the stock response from the mock backend.
        /// </summary>
        public readonly int? Status;
        /// <summary>
        /// (Updatable) Type of the API backend.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// (Updatable)
        /// </summary>
        public readonly string? Url;

        [OutputConstructor]
        private DeploymentSpecificationRouteBackend(
            ImmutableArray<string> allowedPostLogoutUris,

            string? body,

            double? connectTimeoutInSeconds,

            string? functionId,

            ImmutableArray<Outputs.DeploymentSpecificationRouteBackendHeader> headers,

            bool? isSslVerifyDisabled,

            string? postLogoutState,

            double? readTimeoutInSeconds,

            ImmutableArray<Outputs.DeploymentSpecificationRouteBackendRoutingBackend> routingBackends,

            Outputs.DeploymentSpecificationRouteBackendSelectionSource? selectionSource,

            double? sendTimeoutInSeconds,

            int? status,

            string type,

            string? url)
        {
            AllowedPostLogoutUris = allowedPostLogoutUris;
            Body = body;
            ConnectTimeoutInSeconds = connectTimeoutInSeconds;
            FunctionId = functionId;
            Headers = headers;
            IsSslVerifyDisabled = isSslVerifyDisabled;
            PostLogoutState = postLogoutState;
            ReadTimeoutInSeconds = readTimeoutInSeconds;
            RoutingBackends = routingBackends;
            SelectionSource = selectionSource;
            SendTimeoutInSeconds = sendTimeoutInSeconds;
            Status = status;
            Type = type;
            Url = url;
        }
    }
}
