// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ApiGateway.Outputs
{

    [OutputType]
    public sealed class DeploymentSpecificationRouteRequestPolicies
    {
        /// <summary>
        /// (Updatable) If authentication has been performed, validate whether the request scope (if any) applies to this route. If no RouteAuthorizationPolicy is defined for a route, a policy with a type of AUTHENTICATION_ONLY is applied.
        /// </summary>
        public readonly Outputs.DeploymentSpecificationRouteRequestPoliciesAuthorization? Authorization;
        /// <summary>
        /// (Updatable) Validate the payload body of the incoming API requests on a specific route.
        /// </summary>
        public readonly Outputs.DeploymentSpecificationRouteRequestPoliciesBodyValidation? BodyValidation;
        /// <summary>
        /// (Updatable) Enable CORS (Cross-Origin-Resource-Sharing) request handling.
        /// </summary>
        public readonly Outputs.DeploymentSpecificationRouteRequestPoliciesCors? Cors;
        /// <summary>
        /// (Updatable) A set of transformations to apply to HTTP headers that pass through the gateway.
        /// </summary>
        public readonly Outputs.DeploymentSpecificationRouteRequestPoliciesHeaderTransformations? HeaderTransformations;
        /// <summary>
        /// (Updatable) Validate the HTTP headers on the incoming API requests on a specific route.
        /// </summary>
        public readonly Outputs.DeploymentSpecificationRouteRequestPoliciesHeaderValidations? HeaderValidations;
        /// <summary>
        /// (Updatable) A set of transformations to apply to query parameters that pass through the gateway.
        /// </summary>
        public readonly Outputs.DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformations? QueryParameterTransformations;
        /// <summary>
        /// (Updatable) Validate the URL query parameters on the incoming API requests on a specific route.
        /// </summary>
        public readonly Outputs.DeploymentSpecificationRouteRequestPoliciesQueryParameterValidations? QueryParameterValidations;
        /// <summary>
        /// (Updatable) Base policy for Response Cache lookup.
        /// </summary>
        public readonly Outputs.DeploymentSpecificationRouteRequestPoliciesResponseCacheLookup? ResponseCacheLookup;

        [OutputConstructor]
        private DeploymentSpecificationRouteRequestPolicies(
            Outputs.DeploymentSpecificationRouteRequestPoliciesAuthorization? authorization,

            Outputs.DeploymentSpecificationRouteRequestPoliciesBodyValidation? bodyValidation,

            Outputs.DeploymentSpecificationRouteRequestPoliciesCors? cors,

            Outputs.DeploymentSpecificationRouteRequestPoliciesHeaderTransformations? headerTransformations,

            Outputs.DeploymentSpecificationRouteRequestPoliciesHeaderValidations? headerValidations,

            Outputs.DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformations? queryParameterTransformations,

            Outputs.DeploymentSpecificationRouteRequestPoliciesQueryParameterValidations? queryParameterValidations,

            Outputs.DeploymentSpecificationRouteRequestPoliciesResponseCacheLookup? responseCacheLookup)
        {
            Authorization = authorization;
            BodyValidation = bodyValidation;
            Cors = cors;
            HeaderTransformations = headerTransformations;
            HeaderValidations = headerValidations;
            QueryParameterTransformations = queryParameterTransformations;
            QueryParameterValidations = queryParameterValidations;
            ResponseCacheLookup = responseCacheLookup;
        }
    }
}
