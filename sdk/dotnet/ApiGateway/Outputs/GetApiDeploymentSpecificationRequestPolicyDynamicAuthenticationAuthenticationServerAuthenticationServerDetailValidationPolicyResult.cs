// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ApiGateway.Outputs
{

    [OutputType]
    public sealed class GetApiDeploymentSpecificationRequestPolicyDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationPolicyResult
    {
        /// <summary>
        /// Additional JWT validation checks.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetApiDeploymentSpecificationRequestPolicyDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationPolicyAdditionalValidationPolicyResult> AdditionalValidationPolicies;
        /// <summary>
        /// Client App Credential details.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetApiDeploymentSpecificationRequestPolicyDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationPolicyClientDetailResult> ClientDetails;
        /// <summary>
        /// Defines whether or not to uphold SSL verification.
        /// </summary>
        public readonly bool IsSslVerifyDisabled;
        /// <summary>
        /// The set of static public keys.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetApiDeploymentSpecificationRequestPolicyDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationPolicyKeyResult> Keys;
        /// <summary>
        /// The duration for which the introspect URL response should be cached before it is fetched again.
        /// </summary>
        public readonly int MaxCacheDurationInHours;
        /// <summary>
        /// Auth endpoint details.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetApiDeploymentSpecificationRequestPolicyDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationPolicySourceUriDetailResult> SourceUriDetails;
        /// <summary>
        /// Type of the Response Cache Store Policy.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The uri from which to retrieve the key. It must be accessible without authentication.
        /// </summary>
        public readonly string Uri;

        [OutputConstructor]
        private GetApiDeploymentSpecificationRequestPolicyDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationPolicyResult(
            ImmutableArray<Outputs.GetApiDeploymentSpecificationRequestPolicyDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationPolicyAdditionalValidationPolicyResult> additionalValidationPolicies,

            ImmutableArray<Outputs.GetApiDeploymentSpecificationRequestPolicyDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationPolicyClientDetailResult> clientDetails,

            bool isSslVerifyDisabled,

            ImmutableArray<Outputs.GetApiDeploymentSpecificationRequestPolicyDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationPolicyKeyResult> keys,

            int maxCacheDurationInHours,

            ImmutableArray<Outputs.GetApiDeploymentSpecificationRequestPolicyDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationPolicySourceUriDetailResult> sourceUriDetails,

            string type,

            string uri)
        {
            AdditionalValidationPolicies = additionalValidationPolicies;
            ClientDetails = clientDetails;
            IsSslVerifyDisabled = isSslVerifyDisabled;
            Keys = keys;
            MaxCacheDurationInHours = maxCacheDurationInHours;
            SourceUriDetails = sourceUriDetails;
            Type = type;
            Uri = uri;
        }
    }
}
