// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ApiGateway.Outputs
{

    [OutputType]
    public sealed class GetApisApiCollectionItemResult
    {
        /// <summary>
        /// The ocid of the compartment in which to list resources.
        /// </summary>
        public readonly string CompartmentId;
        public readonly string Content;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A message describing the current lifecycleState in more detail. For ACTIVE state it describes if the document has been validated and the possible values are:
        /// * 'New' for just updated API Specifications
        /// * 'Validating' for a document which is being validated.
        /// * 'Valid' the document has been validated without any errors or warnings
        /// * 'Warning' the document has been validated and contains warnings
        /// * 'Error' the document has been validated and contains errors
        /// * 'Failed' the document validation failed
        /// * 'Canceled' the document validation was canceled
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// Type of API Specification file.
        /// </summary>
        public readonly string SpecificationType;
        /// <summary>
        /// A filter to return only resources that match the given lifecycle state.  Example: `ACTIVE`
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The time this resource was created. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time this resource was last updated. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeUpdated;
        /// <summary>
        /// Status of each feature available from the API.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetApisApiCollectionItemValidationResultResult> ValidationResults;

        [OutputConstructor]
        private GetApisApiCollectionItemResult(
            string compartmentId,

            string content,

            ImmutableDictionary<string, object> definedTags,

            string displayName,

            ImmutableDictionary<string, object> freeformTags,

            string id,

            string lifecycleDetails,

            string specificationType,

            string state,

            string timeCreated,

            string timeUpdated,

            ImmutableArray<Outputs.GetApisApiCollectionItemValidationResultResult> validationResults)
        {
            CompartmentId = compartmentId;
            Content = content;
            DefinedTags = definedTags;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            LifecycleDetails = lifecycleDetails;
            SpecificationType = specificationType;
            State = state;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            ValidationResults = validationResults;
        }
    }
}
