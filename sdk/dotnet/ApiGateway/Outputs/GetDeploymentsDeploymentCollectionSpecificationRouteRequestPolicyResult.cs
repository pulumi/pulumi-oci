// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ApiGateway.Outputs
{

    [OutputType]
    public sealed class GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyResult
    {
        /// <summary>
        /// If authentication has been performed, validate whether the request scope (if any) applies to this route. If no RouteAuthorizationPolicy is defined for a route, a policy with a type of AUTHENTICATION_ONLY is applied.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyAuthorizationResult> Authorizations;
        /// <summary>
        /// Validate the payload body of the incoming API requests on a specific route.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyBodyValidationResult> BodyValidations;
        /// <summary>
        /// Enable CORS (Cross-Origin-Resource-Sharing) request handling.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyCorResult> Cors;
        /// <summary>
        /// A set of transformations to apply to HTTP headers that pass through the gateway.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyHeaderTransformationResult> HeaderTransformations;
        /// <summary>
        /// Validate the HTTP headers on the incoming API requests on a specific route.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyHeaderValidationResult> HeaderValidations;
        /// <summary>
        /// A set of transformations to apply to query parameters that pass through the gateway.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyQueryParameterTransformationResult> QueryParameterTransformations;
        /// <summary>
        /// Validate the URL query parameters on the incoming API requests on a specific route.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyQueryParameterValidationResult> QueryParameterValidations;
        /// <summary>
        /// Base policy for Response Cache lookup.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyResponseCacheLookupResult> ResponseCacheLookups;

        [OutputConstructor]
        private GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyResult(
            ImmutableArray<Outputs.GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyAuthorizationResult> authorizations,

            ImmutableArray<Outputs.GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyBodyValidationResult> bodyValidations,

            ImmutableArray<Outputs.GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyCorResult> cors,

            ImmutableArray<Outputs.GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyHeaderTransformationResult> headerTransformations,

            ImmutableArray<Outputs.GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyHeaderValidationResult> headerValidations,

            ImmutableArray<Outputs.GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyQueryParameterTransformationResult> queryParameterTransformations,

            ImmutableArray<Outputs.GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyQueryParameterValidationResult> queryParameterValidations,

            ImmutableArray<Outputs.GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicyResponseCacheLookupResult> responseCacheLookups)
        {
            Authorizations = authorizations;
            BodyValidations = bodyValidations;
            Cors = cors;
            HeaderTransformations = headerTransformations;
            HeaderValidations = headerValidations;
            QueryParameterTransformations = queryParameterTransformations;
            QueryParameterValidations = queryParameterValidations;
            ResponseCacheLookups = responseCacheLookups;
        }
    }
}
