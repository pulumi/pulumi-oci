// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Apm
{
    public static class GetApmDomains
    {
        /// <summary>
        /// This data source provides the list of Apm Domains in Oracle Cloud Infrastructure Apm service.
        /// 
        /// Lists all APM domains for the specified tenant compartment.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testApmDomains = Oci.Apm.GetApmDomains.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         DisplayName = @var.Apm_domain_display_name,
        ///         State = @var.Apm_domain_state,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetApmDomainsResult> InvokeAsync(GetApmDomainsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetApmDomainsResult>("oci:Apm/getApmDomains:getApmDomains", args ?? new GetApmDomainsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Apm Domains in Oracle Cloud Infrastructure Apm service.
        /// 
        /// Lists all APM domains for the specified tenant compartment.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testApmDomains = Oci.Apm.GetApmDomains.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         DisplayName = @var.Apm_domain_display_name,
        ///         State = @var.Apm_domain_state,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetApmDomainsResult> Invoke(GetApmDomainsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetApmDomainsResult>("oci:Apm/getApmDomains:getApmDomains", args ?? new GetApmDomainsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApmDomainsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetApmDomainsFilterArgs>? _filters;
        public List<Inputs.GetApmDomainsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetApmDomainsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only resources that match the given life-cycle state.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetApmDomainsArgs()
        {
        }
        public static new GetApmDomainsArgs Empty => new GetApmDomainsArgs();
    }

    public sealed class GetApmDomainsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetApmDomainsFilterInputArgs>? _filters;
        public InputList<Inputs.GetApmDomainsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetApmDomainsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only resources that match the given life-cycle state.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetApmDomainsInvokeArgs()
        {
        }
        public static new GetApmDomainsInvokeArgs Empty => new GetApmDomainsInvokeArgs();
    }


    [OutputType]
    public sealed class GetApmDomainsResult
    {
        /// <summary>
        /// The list of apm_domains.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetApmDomainsApmDomainResult> ApmDomains;
        /// <summary>
        /// The OCID of the compartment corresponding to the APM domain.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Display name of the APM domain, which can be updated.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetApmDomainsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The current lifecycle state of the APM domain.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetApmDomainsResult(
            ImmutableArray<Outputs.GetApmDomainsApmDomainResult> apmDomains,

            string compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetApmDomainsFilterResult> filters,

            string id,

            string? state)
        {
            ApmDomains = apmDomains;
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            State = state;
        }
    }
}
