// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ApmConfig
{
    /// <summary>
    /// This resource provides the Config resource in Oracle Cloud Infrastructure Apm Config service.
    /// 
    /// Creates a new configuration item.
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testConfig = new Oci.ApmConfig.Config("test_config", new()
    ///     {
    ///         ApmDomainId = testApmDomain.Id,
    ///         ConfigType = configConfigType,
    ///         DisplayName = configDisplayName,
    ///         DefinedTags = 
    ///         {
    ///             { "foo-namespace.bar-key", "value" },
    ///         },
    ///         Description = configDescription,
    ///         Dimensions = new[]
    ///         {
    ///             new Oci.ApmConfig.Inputs.ConfigDimensionArgs
    ///             {
    ///                 Name = configDimensionsName,
    ///                 ValueSource = configDimensionsValueSource,
    ///             },
    ///         },
    ///         FilterId = testFilter.Id,
    ///         FilterText = configFilterText,
    ///         FreeformTags = 
    ///         {
    ///             { "bar-key", "value" },
    ///         },
    ///         Group = configGroup,
    ///         Metrics = new[]
    ///         {
    ///             new Oci.ApmConfig.Inputs.ConfigMetricArgs
    ///             {
    ///                 Description = configMetricsDescription,
    ///                 Name = configMetricsName,
    ///                 Unit = configMetricsUnit,
    ///                 ValueSource = configMetricsValueSource,
    ///             },
    ///         },
    ///         Namespace = configNamespace,
    ///         OpcDryRun = configOpcDryRun,
    ///         Options = configOptions,
    ///         Rules = new[]
    ///         {
    ///             new Oci.ApmConfig.Inputs.ConfigRuleArgs
    ///             {
    ///                 DisplayName = configRulesDisplayName,
    ///                 FilterText = configRulesFilterText,
    ///                 IsApplyToErrorSpans = configRulesIsApplyToErrorSpans,
    ///                 IsEnabled = configRulesIsEnabled,
    ///                 Priority = configRulesPriority,
    ///                 SatisfiedResponseTime = configRulesSatisfiedResponseTime,
    ///                 ToleratingResponseTime = configRulesToleratingResponseTime,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// Configs can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:ApmConfig/config:Config test_config "configs/{configId}/apmDomainId/{apmDomainId}"
    /// ```
    /// </summary>
    [OciResourceType("oci:ApmConfig/config:Config")]
    public partial class Config : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) The APM Domain ID the request is intended for.
        /// </summary>
        [Output("apmDomainId")]
        public Output<string> ApmDomainId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The type of configuration item.
        /// </summary>
        [Output("configType")]
        public Output<string> ConfigType { get; private set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a user.
        /// </summary>
        [Output("createdBy")]
        public Output<string> CreatedBy { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, object>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A description of the metric.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A list of dimensions for the metric. This variable should not be used.
        /// </summary>
        [Output("dimensions")]
        public Output<ImmutableArray<Outputs.ConfigDimension>> Dimensions { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The name by which a configuration entity is displayed to the end user.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// For optimistic concurrency control. See `if-match`.
        /// </summary>
        [Output("etag")]
        public Output<string> Etag { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a Span Filter. The filterId is mandatory for the creation of MetricGroups. A filterId is generated when a Span Filter is created.
        /// </summary>
        [Output("filterId")]
        public Output<string> FilterId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The string that defines the Span Filter expression.
        /// </summary>
        [Output("filterText")]
        public Output<string> FilterText { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, object>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A string that specifies the group that an OPTIONS item belongs to.
        /// </summary>
        [Output("group")]
        public Output<string> Group { get; private set; } = null!;

        /// <summary>
        /// The list of configuration items that reference the span filter.
        /// </summary>
        [Output("inUseBies")]
        public Output<ImmutableArray<Outputs.ConfigInUseBy>> InUseBies { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The list of metrics in this group.
        /// </summary>
        [Output("metrics")]
        public Output<ImmutableArray<Outputs.ConfigMetric>> Metrics { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The namespace to which the metrics are published. It must be one of several predefined namespaces.
        /// </summary>
        [Output("namespace")]
        public Output<string> Namespace { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Indicates that the request is a dry run, if set to "true". A dry run request does not modify the configuration item details and is used only to perform validation on the submitted data.
        /// </summary>
        [Output("opcDryRun")]
        public Output<string> OpcDryRun { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The options are stored here as JSON.
        /// </summary>
        [Output("options")]
        public Output<string> Options { get; private set; } = null!;

        /// <summary>
        /// (Updatable)
        /// </summary>
        [Output("rules")]
        public Output<ImmutableArray<Outputs.ConfigRule>> Rules { get; private set; } = null!;

        /// <summary>
        /// The time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-12T22:47:12.613Z`
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The time the resource was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a user.
        /// </summary>
        [Output("updatedBy")]
        public Output<string> UpdatedBy { get; private set; } = null!;


        /// <summary>
        /// Create a Config resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Config(string name, ConfigArgs args, CustomResourceOptions? options = null)
            : base("oci:ApmConfig/config:Config", name, args ?? new ConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Config(string name, Input<string> id, ConfigState? state = null, CustomResourceOptions? options = null)
            : base("oci:ApmConfig/config:Config", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Config resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Config Get(string name, Input<string> id, ConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new Config(name, id, state, options);
        }
    }

    public sealed class ConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The APM Domain ID the request is intended for.
        /// </summary>
        [Input("apmDomainId", required: true)]
        public Input<string> ApmDomainId { get; set; } = null!;

        /// <summary>
        /// (Updatable) The type of configuration item.
        /// </summary>
        [Input("configType", required: true)]
        public Input<string> ConfigType { get; set; } = null!;

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) A description of the metric.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("dimensions")]
        private InputList<Inputs.ConfigDimensionArgs>? _dimensions;

        /// <summary>
        /// (Updatable) A list of dimensions for the metric. This variable should not be used.
        /// </summary>
        public InputList<Inputs.ConfigDimensionArgs> Dimensions
        {
            get => _dimensions ?? (_dimensions = new InputList<Inputs.ConfigDimensionArgs>());
            set => _dimensions = value;
        }

        /// <summary>
        /// (Updatable) The name by which a configuration entity is displayed to the end user.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a Span Filter. The filterId is mandatory for the creation of MetricGroups. A filterId is generated when a Span Filter is created.
        /// </summary>
        [Input("filterId")]
        public Input<string>? FilterId { get; set; }

        /// <summary>
        /// (Updatable) The string that defines the Span Filter expression.
        /// </summary>
        [Input("filterText")]
        public Input<string>? FilterText { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) A string that specifies the group that an OPTIONS item belongs to.
        /// </summary>
        [Input("group")]
        public Input<string>? Group { get; set; }

        [Input("inUseBies")]
        private InputList<Inputs.ConfigInUseByArgs>? _inUseBies;

        /// <summary>
        /// The list of configuration items that reference the span filter.
        /// </summary>
        public InputList<Inputs.ConfigInUseByArgs> InUseBies
        {
            get => _inUseBies ?? (_inUseBies = new InputList<Inputs.ConfigInUseByArgs>());
            set => _inUseBies = value;
        }

        [Input("metrics")]
        private InputList<Inputs.ConfigMetricArgs>? _metrics;

        /// <summary>
        /// (Updatable) The list of metrics in this group.
        /// </summary>
        public InputList<Inputs.ConfigMetricArgs> Metrics
        {
            get => _metrics ?? (_metrics = new InputList<Inputs.ConfigMetricArgs>());
            set => _metrics = value;
        }

        /// <summary>
        /// (Updatable) The namespace to which the metrics are published. It must be one of several predefined namespaces.
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        /// <summary>
        /// (Updatable) Indicates that the request is a dry run, if set to "true". A dry run request does not modify the configuration item details and is used only to perform validation on the submitted data.
        /// </summary>
        [Input("opcDryRun")]
        public Input<string>? OpcDryRun { get; set; }

        /// <summary>
        /// (Updatable) The options are stored here as JSON.
        /// </summary>
        [Input("options")]
        public Input<string>? Options { get; set; }

        [Input("rules")]
        private InputList<Inputs.ConfigRuleArgs>? _rules;

        /// <summary>
        /// (Updatable)
        /// </summary>
        public InputList<Inputs.ConfigRuleArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.ConfigRuleArgs>());
            set => _rules = value;
        }

        public ConfigArgs()
        {
        }
        public static new ConfigArgs Empty => new ConfigArgs();
    }

    public sealed class ConfigState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The APM Domain ID the request is intended for.
        /// </summary>
        [Input("apmDomainId")]
        public Input<string>? ApmDomainId { get; set; }

        /// <summary>
        /// (Updatable) The type of configuration item.
        /// </summary>
        [Input("configType")]
        public Input<string>? ConfigType { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a user.
        /// </summary>
        [Input("createdBy")]
        public Input<string>? CreatedBy { get; set; }

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) A description of the metric.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("dimensions")]
        private InputList<Inputs.ConfigDimensionGetArgs>? _dimensions;

        /// <summary>
        /// (Updatable) A list of dimensions for the metric. This variable should not be used.
        /// </summary>
        public InputList<Inputs.ConfigDimensionGetArgs> Dimensions
        {
            get => _dimensions ?? (_dimensions = new InputList<Inputs.ConfigDimensionGetArgs>());
            set => _dimensions = value;
        }

        /// <summary>
        /// (Updatable) The name by which a configuration entity is displayed to the end user.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// For optimistic concurrency control. See `if-match`.
        /// </summary>
        [Input("etag")]
        public Input<string>? Etag { get; set; }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a Span Filter. The filterId is mandatory for the creation of MetricGroups. A filterId is generated when a Span Filter is created.
        /// </summary>
        [Input("filterId")]
        public Input<string>? FilterId { get; set; }

        /// <summary>
        /// (Updatable) The string that defines the Span Filter expression.
        /// </summary>
        [Input("filterText")]
        public Input<string>? FilterText { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) A string that specifies the group that an OPTIONS item belongs to.
        /// </summary>
        [Input("group")]
        public Input<string>? Group { get; set; }

        [Input("inUseBies")]
        private InputList<Inputs.ConfigInUseByGetArgs>? _inUseBies;

        /// <summary>
        /// The list of configuration items that reference the span filter.
        /// </summary>
        public InputList<Inputs.ConfigInUseByGetArgs> InUseBies
        {
            get => _inUseBies ?? (_inUseBies = new InputList<Inputs.ConfigInUseByGetArgs>());
            set => _inUseBies = value;
        }

        [Input("metrics")]
        private InputList<Inputs.ConfigMetricGetArgs>? _metrics;

        /// <summary>
        /// (Updatable) The list of metrics in this group.
        /// </summary>
        public InputList<Inputs.ConfigMetricGetArgs> Metrics
        {
            get => _metrics ?? (_metrics = new InputList<Inputs.ConfigMetricGetArgs>());
            set => _metrics = value;
        }

        /// <summary>
        /// (Updatable) The namespace to which the metrics are published. It must be one of several predefined namespaces.
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        /// <summary>
        /// (Updatable) Indicates that the request is a dry run, if set to "true". A dry run request does not modify the configuration item details and is used only to perform validation on the submitted data.
        /// </summary>
        [Input("opcDryRun")]
        public Input<string>? OpcDryRun { get; set; }

        /// <summary>
        /// (Updatable) The options are stored here as JSON.
        /// </summary>
        [Input("options")]
        public Input<string>? Options { get; set; }

        [Input("rules")]
        private InputList<Inputs.ConfigRuleGetArgs>? _rules;

        /// <summary>
        /// (Updatable)
        /// </summary>
        public InputList<Inputs.ConfigRuleGetArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.ConfigRuleGetArgs>());
            set => _rules = value;
        }

        /// <summary>
        /// The time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-12T22:47:12.613Z`
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The time the resource was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a user.
        /// </summary>
        [Input("updatedBy")]
        public Input<string>? UpdatedBy { get; set; }

        public ConfigState()
        {
        }
        public static new ConfigState Empty => new ConfigState();
    }
}
