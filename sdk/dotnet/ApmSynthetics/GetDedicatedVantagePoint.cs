// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ApmSynthetics
{
    public static class GetDedicatedVantagePoint
    {
        /// <summary>
        /// This data source provides details about a specific Dedicated Vantage Point resource in Oracle Cloud Infrastructure Apm Synthetics service.
        /// 
        /// Gets the details of the dedicated vantage point identified by the OCID.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDedicatedVantagePoint = Oci.ApmSynthetics.GetDedicatedVantagePoint.Invoke(new()
        ///     {
        ///         ApmDomainId = oci_apm_apm_domain.Test_apm_domain.Id,
        ///         DedicatedVantagePointId = oci_apm_synthetics_dedicated_vantage_point.Test_dedicated_vantage_point.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetDedicatedVantagePointResult> InvokeAsync(GetDedicatedVantagePointArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDedicatedVantagePointResult>("oci:ApmSynthetics/getDedicatedVantagePoint:getDedicatedVantagePoint", args ?? new GetDedicatedVantagePointArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Dedicated Vantage Point resource in Oracle Cloud Infrastructure Apm Synthetics service.
        /// 
        /// Gets the details of the dedicated vantage point identified by the OCID.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDedicatedVantagePoint = Oci.ApmSynthetics.GetDedicatedVantagePoint.Invoke(new()
        ///     {
        ///         ApmDomainId = oci_apm_apm_domain.Test_apm_domain.Id,
        ///         DedicatedVantagePointId = oci_apm_synthetics_dedicated_vantage_point.Test_dedicated_vantage_point.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetDedicatedVantagePointResult> Invoke(GetDedicatedVantagePointInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDedicatedVantagePointResult>("oci:ApmSynthetics/getDedicatedVantagePoint:getDedicatedVantagePoint", args ?? new GetDedicatedVantagePointInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDedicatedVantagePointArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The APM domain ID the request is intended for.
        /// </summary>
        [Input("apmDomainId", required: true)]
        public string ApmDomainId { get; set; } = null!;

        /// <summary>
        /// The OCID of the dedicated vantage point.
        /// </summary>
        [Input("dedicatedVantagePointId", required: true)]
        public string DedicatedVantagePointId { get; set; } = null!;

        public GetDedicatedVantagePointArgs()
        {
        }
        public static new GetDedicatedVantagePointArgs Empty => new GetDedicatedVantagePointArgs();
    }

    public sealed class GetDedicatedVantagePointInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The APM domain ID the request is intended for.
        /// </summary>
        [Input("apmDomainId", required: true)]
        public Input<string> ApmDomainId { get; set; } = null!;

        /// <summary>
        /// The OCID of the dedicated vantage point.
        /// </summary>
        [Input("dedicatedVantagePointId", required: true)]
        public Input<string> DedicatedVantagePointId { get; set; } = null!;

        public GetDedicatedVantagePointInvokeArgs()
        {
        }
        public static new GetDedicatedVantagePointInvokeArgs Empty => new GetDedicatedVantagePointInvokeArgs();
    }


    [OutputType]
    public sealed class GetDedicatedVantagePointResult
    {
        public readonly string ApmDomainId;
        public readonly string DedicatedVantagePointId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// Unique dedicated vantage point name that cannot be edited. The name should not contain any confidential information.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Details of a Dedicated Vantage Point (DVP) stack in Resource Manager.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDedicatedVantagePointDvpStackDetailResult> DvpStackDetails;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the dedicated vantage point.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Details of the monitor count per state. Example: `{ "total" : 5, "enabled" : 3 , "disabled" : 2, "invalid" : 0 }`
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDedicatedVantagePointMonitorStatusCountMapResult> MonitorStatusCountMaps;
        /// <summary>
        /// Unique permanent name of the dedicated vantage point. This is the same as the displayName.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Name of the region.
        /// </summary>
        public readonly string Region;
        /// <summary>
        /// Status of the dedicated vantage point.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-12T22:47:12.613Z`
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time the resource was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetDedicatedVantagePointResult(
            string apmDomainId,

            string dedicatedVantagePointId,

            ImmutableDictionary<string, object> definedTags,

            string displayName,

            ImmutableArray<Outputs.GetDedicatedVantagePointDvpStackDetailResult> dvpStackDetails,

            ImmutableDictionary<string, object> freeformTags,

            string id,

            ImmutableArray<Outputs.GetDedicatedVantagePointMonitorStatusCountMapResult> monitorStatusCountMaps,

            string name,

            string region,

            string status,

            string timeCreated,

            string timeUpdated)
        {
            ApmDomainId = apmDomainId;
            DedicatedVantagePointId = dedicatedVantagePointId;
            DefinedTags = definedTags;
            DisplayName = displayName;
            DvpStackDetails = dvpStackDetails;
            FreeformTags = freeformTags;
            Id = id;
            MonitorStatusCountMaps = monitorStatusCountMaps;
            Name = name;
            Region = region;
            Status = status;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
