// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ApmSynthetics.Inputs
{

    public sealed class ConfigConfigurationGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) Type of configuration.
        /// </summary>
        [Input("configType")]
        public Input<string>? ConfigType { get; set; }

        /// <summary>
        /// (Updatable) If certificate validation is enabled, then the call will fail in case of certification errors.
        /// </summary>
        [Input("isCertificateValidationEnabled")]
        public Input<bool>? IsCertificateValidationEnabled { get; set; }

        /// <summary>
        /// (Updatable) If isFailureRetried is enabled, then a failed call will be retried.
        /// </summary>
        [Input("isFailureRetried")]
        public Input<bool>? IsFailureRetried { get; set; }

        /// <summary>
        /// (Updatable) If redirection enabled, then redirects will be allowed while accessing target URL.
        /// </summary>
        [Input("isRedirectionEnabled")]
        public Input<bool>? IsRedirectionEnabled { get; set; }

        /// <summary>
        /// (Updatable) Details of the network configuration.
        /// </summary>
        [Input("networkConfiguration")]
        public Input<Inputs.ConfigConfigurationNetworkConfigurationGetArgs>? NetworkConfiguration { get; set; }

        /// <summary>
        /// (Updatable) Details for request HTTP authentication.
        /// </summary>
        [Input("reqAuthenticationDetails")]
        public Input<Inputs.ConfigConfigurationReqAuthenticationDetailsGetArgs>? ReqAuthenticationDetails { get; set; }

        /// <summary>
        /// (Updatable) Request http authentication scheme.
        /// </summary>
        [Input("reqAuthenticationScheme")]
        public Input<string>? ReqAuthenticationScheme { get; set; }

        [Input("requestHeaders")]
        private InputList<Inputs.ConfigConfigurationRequestHeaderGetArgs>? _requestHeaders;

        /// <summary>
        /// (Updatable) List of request headers. Example: `[{"headerName": "content-type", "headerValue":"json"}]`
        /// </summary>
        public InputList<Inputs.ConfigConfigurationRequestHeaderGetArgs> RequestHeaders
        {
            get => _requestHeaders ?? (_requestHeaders = new InputList<Inputs.ConfigConfigurationRequestHeaderGetArgs>());
            set => _requestHeaders = value;
        }

        /// <summary>
        /// (Updatable) Request HTTP method.
        /// </summary>
        [Input("requestMethod")]
        public Input<string>? RequestMethod { get; set; }

        /// <summary>
        /// (Updatable) Request post body content.
        /// </summary>
        [Input("requestPostBody")]
        public Input<string>? RequestPostBody { get; set; }

        [Input("requestQueryParams")]
        private InputList<Inputs.ConfigConfigurationRequestQueryParamGetArgs>? _requestQueryParams;

        /// <summary>
        /// (Updatable) List of request query params. Example: `[{"paramName": "sortOrder", "paramValue": "asc"}]`
        /// </summary>
        public InputList<Inputs.ConfigConfigurationRequestQueryParamGetArgs> RequestQueryParams
        {
            get => _requestQueryParams ?? (_requestQueryParams = new InputList<Inputs.ConfigConfigurationRequestQueryParamGetArgs>());
            set => _requestQueryParams = value;
        }

        [Input("verifyResponseCodes")]
        private InputList<string>? _verifyResponseCodes;

        /// <summary>
        /// (Updatable) Expected HTTP response codes. For status code range, set values such as 2xx, 3xx.
        /// </summary>
        public InputList<string> VerifyResponseCodes
        {
            get => _verifyResponseCodes ?? (_verifyResponseCodes = new InputList<string>());
            set => _verifyResponseCodes = value;
        }

        /// <summary>
        /// (Updatable) Verify response content against regular expression based string. If response content does not match the verifyResponseContent value, then it will be considered a failure.
        /// </summary>
        [Input("verifyResponseContent")]
        public Input<string>? VerifyResponseContent { get; set; }

        [Input("verifyTexts")]
        private InputList<Inputs.ConfigConfigurationVerifyTextGetArgs>? _verifyTexts;

        /// <summary>
        /// (Updatable) Verifies all the search strings present in the response. If any search string is not present in the response, then it will be considered as a failure.
        /// </summary>
        public InputList<Inputs.ConfigConfigurationVerifyTextGetArgs> VerifyTexts
        {
            get => _verifyTexts ?? (_verifyTexts = new InputList<Inputs.ConfigConfigurationVerifyTextGetArgs>());
            set => _verifyTexts = value;
        }

        public ConfigConfigurationGetArgs()
        {
        }
    }
}
