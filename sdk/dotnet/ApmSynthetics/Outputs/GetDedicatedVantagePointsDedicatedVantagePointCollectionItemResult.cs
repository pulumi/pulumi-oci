// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ApmSynthetics.Outputs
{

    [OutputType]
    public sealed class GetDedicatedVantagePointsDedicatedVantagePointCollectionItemResult
    {
        /// <summary>
        /// The APM domain ID the request is intended for.
        /// </summary>
        public readonly string? ApmDomainId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? DefinedTags;
        /// <summary>
        /// A filter to return only the resources that match the entire display name.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// Details of a Dedicated Vantage Point (DVP) stack in Resource Manager.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailResult> DvpStackDetails;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? FreeformTags;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the dedicated vantage point.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Details of the monitor count per state. Example: `{ "total" : 5, "enabled" : 3 , "disabled" : 2, "invalid" : 0 }`
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapResult> MonitorStatusCountMaps;
        /// <summary>
        /// A filter to return only the resources that match the entire name.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Name of the region.
        /// </summary>
        public readonly string? Region;
        /// <summary>
        /// A filter to return only the dedicated vantage points that match a given status.
        /// </summary>
        public readonly string? Status;
        /// <summary>
        /// The time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-12T22:47:12.613Z`
        /// </summary>
        public readonly string? TimeCreated;
        /// <summary>
        /// The time the resource was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
        /// </summary>
        public readonly string? TimeUpdated;

        [OutputConstructor]
        private GetDedicatedVantagePointsDedicatedVantagePointCollectionItemResult(
            string? apmDomainId,

            ImmutableDictionary<string, object>? definedTags,

            string? displayName,

            ImmutableArray<Outputs.GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailResult> dvpStackDetails,

            ImmutableDictionary<string, object>? freeformTags,

            string? id,

            ImmutableArray<Outputs.GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapResult> monitorStatusCountMaps,

            string? name,

            string? region,

            string? status,

            string? timeCreated,

            string? timeUpdated)
        {
            ApmDomainId = apmDomainId;
            DefinedTags = definedTags;
            DisplayName = displayName;
            DvpStackDetails = dvpStackDetails;
            FreeformTags = freeformTags;
            Id = id;
            MonitorStatusCountMaps = monitorStatusCountMaps;
            Name = name;
            Region = region;
            Status = status;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
