// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ApmTraces
{
    public static class GetQueryQuickPicks
    {
        /// <summary>
        /// This data source provides the list of Query Quick Picks in Oracle Cloud Infrastructure Apm Traces service.
        /// 
        /// Returns a list of predefined Quick Pick queries intended to assist the user
        /// to choose a query to run.  There is no sorting applied on the results.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testQueryQuickPicks = Oci.ApmTraces.GetQueryQuickPicks.Invoke(new()
        ///     {
        ///         ApmDomainId = oci_apm_apm_domain.Test_apm_domain.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetQueryQuickPicksResult> InvokeAsync(GetQueryQuickPicksArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetQueryQuickPicksResult>("oci:ApmTraces/getQueryQuickPicks:getQueryQuickPicks", args ?? new GetQueryQuickPicksArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Query Quick Picks in Oracle Cloud Infrastructure Apm Traces service.
        /// 
        /// Returns a list of predefined Quick Pick queries intended to assist the user
        /// to choose a query to run.  There is no sorting applied on the results.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testQueryQuickPicks = Oci.ApmTraces.GetQueryQuickPicks.Invoke(new()
        ///     {
        ///         ApmDomainId = oci_apm_apm_domain.Test_apm_domain.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetQueryQuickPicksResult> Invoke(GetQueryQuickPicksInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetQueryQuickPicksResult>("oci:ApmTraces/getQueryQuickPicks:getQueryQuickPicks", args ?? new GetQueryQuickPicksInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetQueryQuickPicksArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The APM Domain ID the request is intended for.
        /// </summary>
        [Input("apmDomainId", required: true)]
        public string ApmDomainId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetQueryQuickPicksFilterArgs>? _filters;
        public List<Inputs.GetQueryQuickPicksFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetQueryQuickPicksFilterArgs>());
            set => _filters = value;
        }

        public GetQueryQuickPicksArgs()
        {
        }
        public static new GetQueryQuickPicksArgs Empty => new GetQueryQuickPicksArgs();
    }

    public sealed class GetQueryQuickPicksInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The APM Domain ID the request is intended for.
        /// </summary>
        [Input("apmDomainId", required: true)]
        public Input<string> ApmDomainId { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetQueryQuickPicksFilterInputArgs>? _filters;
        public InputList<Inputs.GetQueryQuickPicksFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetQueryQuickPicksFilterInputArgs>());
            set => _filters = value;
        }

        public GetQueryQuickPicksInvokeArgs()
        {
        }
        public static new GetQueryQuickPicksInvokeArgs Empty => new GetQueryQuickPicksInvokeArgs();
    }


    [OutputType]
    public sealed class GetQueryQuickPicksResult
    {
        public readonly string ApmDomainId;
        public readonly ImmutableArray<Outputs.GetQueryQuickPicksFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The list of quick_picks.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetQueryQuickPicksQuickPickResult> QuickPicks;

        [OutputConstructor]
        private GetQueryQuickPicksResult(
            string apmDomainId,

            ImmutableArray<Outputs.GetQueryQuickPicksFilterResult> filters,

            string? id,

            ImmutableArray<Outputs.GetQueryQuickPicksQuickPickResult> quickPicks)
        {
            ApmDomainId = apmDomainId;
            Filters = filters;
            Id = id;
            QuickPicks = quickPicks;
        }
    }
}
