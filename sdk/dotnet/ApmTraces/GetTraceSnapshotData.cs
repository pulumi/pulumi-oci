// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ApmTraces
{
    public static class GetTraceSnapshotData
    {
        /// <summary>
        /// This data source provides details about a specific Trace Snapshot Data resource in Oracle Cloud Infrastructure Apm Traces service.
        /// 
        /// Gets the trace snapshots data identified by trace ID.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testTraceSnapshotData = Oci.ApmTraces.GetTraceSnapshotData.Invoke(new()
        ///     {
        ///         ApmDomainId = testApmDomain.Id,
        ///         TraceKey = traceSnapshotDataTraceKey,
        ///         IsSummarized = traceSnapshotDataIsSummarized,
        ///         SnapshotTime = traceSnapshotDataSnapshotTime,
        ///         ThreadId = testThread.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetTraceSnapshotDataResult> InvokeAsync(GetTraceSnapshotDataArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTraceSnapshotDataResult>("oci:ApmTraces/getTraceSnapshotData:getTraceSnapshotData", args ?? new GetTraceSnapshotDataArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Trace Snapshot Data resource in Oracle Cloud Infrastructure Apm Traces service.
        /// 
        /// Gets the trace snapshots data identified by trace ID.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testTraceSnapshotData = Oci.ApmTraces.GetTraceSnapshotData.Invoke(new()
        ///     {
        ///         ApmDomainId = testApmDomain.Id,
        ///         TraceKey = traceSnapshotDataTraceKey,
        ///         IsSummarized = traceSnapshotDataIsSummarized,
        ///         SnapshotTime = traceSnapshotDataSnapshotTime,
        ///         ThreadId = testThread.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetTraceSnapshotDataResult> Invoke(GetTraceSnapshotDataInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTraceSnapshotDataResult>("oci:ApmTraces/getTraceSnapshotData:getTraceSnapshotData", args ?? new GetTraceSnapshotDataInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTraceSnapshotDataArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The APM Domain ID for the intended request.
        /// </summary>
        [Input("apmDomainId", required: true)]
        public string ApmDomainId { get; set; } = null!;

        /// <summary>
        /// If enabled, only span level details are sent.
        /// </summary>
        [Input("isSummarized")]
        public bool? IsSummarized { get; set; }

        /// <summary>
        /// Epoch time of snapshot.
        /// </summary>
        [Input("snapshotTime")]
        public string? SnapshotTime { get; set; }

        /// <summary>
        /// Thread ID for which snapshots need to be retrieved. This identifier of a thread is a long positive number generated when a thread is created.
        /// </summary>
        [Input("threadId")]
        public string? ThreadId { get; set; }

        /// <summary>
        /// Unique Application Performance Monitoring trace identifier (traceId).
        /// </summary>
        [Input("traceKey", required: true)]
        public string TraceKey { get; set; } = null!;

        public GetTraceSnapshotDataArgs()
        {
        }
        public static new GetTraceSnapshotDataArgs Empty => new GetTraceSnapshotDataArgs();
    }

    public sealed class GetTraceSnapshotDataInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The APM Domain ID for the intended request.
        /// </summary>
        [Input("apmDomainId", required: true)]
        public Input<string> ApmDomainId { get; set; } = null!;

        /// <summary>
        /// If enabled, only span level details are sent.
        /// </summary>
        [Input("isSummarized")]
        public Input<bool>? IsSummarized { get; set; }

        /// <summary>
        /// Epoch time of snapshot.
        /// </summary>
        [Input("snapshotTime")]
        public Input<string>? SnapshotTime { get; set; }

        /// <summary>
        /// Thread ID for which snapshots need to be retrieved. This identifier of a thread is a long positive number generated when a thread is created.
        /// </summary>
        [Input("threadId")]
        public Input<string>? ThreadId { get; set; }

        /// <summary>
        /// Unique Application Performance Monitoring trace identifier (traceId).
        /// </summary>
        [Input("traceKey", required: true)]
        public Input<string> TraceKey { get; set; } = null!;

        public GetTraceSnapshotDataInvokeArgs()
        {
        }
        public static new GetTraceSnapshotDataInvokeArgs Empty => new GetTraceSnapshotDataInvokeArgs();
    }


    [OutputType]
    public sealed class GetTraceSnapshotDataResult
    {
        public readonly string ApmDomainId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool? IsSummarized;
        /// <summary>
        /// Name of the property.
        /// </summary>
        public readonly string Key;
        public readonly string? SnapshotTime;
        public readonly string? ThreadId;
        /// <summary>
        /// End time of the trace.
        /// </summary>
        public readonly string TimeEnded;
        /// <summary>
        /// Start time of the trace.
        /// </summary>
        public readonly string TimeStarted;
        public readonly string TraceKey;
        /// <summary>
        /// Trace snapshots properties.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTraceSnapshotDataTraceSnapshotDetailResult> TraceSnapshotDetails;

        [OutputConstructor]
        private GetTraceSnapshotDataResult(
            string apmDomainId,

            string id,

            bool? isSummarized,

            string key,

            string? snapshotTime,

            string? threadId,

            string timeEnded,

            string timeStarted,

            string traceKey,

            ImmutableArray<Outputs.GetTraceSnapshotDataTraceSnapshotDetailResult> traceSnapshotDetails)
        {
            ApmDomainId = apmDomainId;
            Id = id;
            IsSummarized = isSummarized;
            Key = key;
            SnapshotTime = snapshotTime;
            ThreadId = threadId;
            TimeEnded = timeEnded;
            TimeStarted = timeStarted;
            TraceKey = traceKey;
            TraceSnapshotDetails = traceSnapshotDetails;
        }
    }
}
