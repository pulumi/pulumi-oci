// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ApmTraces.Outputs
{

    [OutputType]
    public sealed class GetTraceSpanSummaryResult
    {
        /// <summary>
        /// The number of spans with errors that have been processed by the system for the trace. Note that the number of spans with errors will be less than or equal to the total number of spans in the trace.
        /// </summary>
        public readonly int? ErrorSpanCount;
        /// <summary>
        /// Boolean flag that indicates whether the trace has an error.
        /// </summary>
        public readonly bool? IsFault;
        /// <summary>
        /// Unique identifier (spanId) for the span.  Note that this field is defined as spanKey in the API and it maps to the spanId in the trace data in Application Performance Monitoring.
        /// </summary>
        public readonly string? Key;
        /// <summary>
        /// Time taken for the root span operation to complete in milliseconds.
        /// </summary>
        public readonly int? RootSpanDurationInMs;
        /// <summary>
        /// Root span name associated with the trace. This is the flow start operation name. Null is displayed if the root span is not yet completed.
        /// </summary>
        public readonly string? RootSpanOperationName;
        /// <summary>
        /// Service associated with the trace.
        /// </summary>
        public readonly string? RootSpanServiceName;
        /// <summary>
        /// A summary of the spans by service.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTraceSpanSummaryServiceSummaryResult> ServiceSummaries;
        /// <summary>
        /// The number of spans that have been processed by the system for the trace.  Note that there could be additional spans that have not been processed or reported yet if the trace is still in progress.
        /// </summary>
        public readonly int? SpanCount;
        /// <summary>
        /// Start time of the earliest span in the span collection.
        /// </summary>
        public readonly string? TimeEarliestSpanStarted;
        /// <summary>
        /// End time of the span that most recently ended in the span collection.
        /// </summary>
        public readonly string? TimeLatestSpanEnded;
        /// <summary>
        /// End time of the root span for the span collection.
        /// </summary>
        public readonly string? TimeRootSpanEnded;
        /// <summary>
        /// Start time of the root span for the span collection.
        /// </summary>
        public readonly string? TimeRootSpanStarted;
        /// <summary>
        /// Time between the start of the earliest span and the end of the most recent span in milliseconds.
        /// </summary>
        public readonly int? TraceDurationInMs;
        /// <summary>
        /// Error code of the trace.
        /// </summary>
        public readonly string? TraceErrorCode;
        /// <summary>
        /// Error type of the trace.
        /// </summary>
        public readonly string? TraceErrorType;
        /// <summary>
        /// The status of the trace. The trace statuses are defined as follows: complete - a root span has been recorded, but there is no information on the errors. success - a complete root span is recorded there is a successful error type and error code - HTTP 200. incomplete - the root span has not yet been received. error - the root span returned with an error. There may or may not be an associated error code or error type.
        /// </summary>
        public readonly string? TraceStatus;

        [OutputConstructor]
        private GetTraceSpanSummaryResult(
            int? errorSpanCount,

            bool? isFault,

            string? key,

            int? rootSpanDurationInMs,

            string? rootSpanOperationName,

            string? rootSpanServiceName,

            ImmutableArray<Outputs.GetTraceSpanSummaryServiceSummaryResult> serviceSummaries,

            int? spanCount,

            string? timeEarliestSpanStarted,

            string? timeLatestSpanEnded,

            string? timeRootSpanEnded,

            string? timeRootSpanStarted,

            int? traceDurationInMs,

            string? traceErrorCode,

            string? traceErrorType,

            string? traceStatus)
        {
            ErrorSpanCount = errorSpanCount;
            IsFault = isFault;
            Key = key;
            RootSpanDurationInMs = rootSpanDurationInMs;
            RootSpanOperationName = rootSpanOperationName;
            RootSpanServiceName = rootSpanServiceName;
            ServiceSummaries = serviceSummaries;
            SpanCount = spanCount;
            TimeEarliestSpanStarted = timeEarliestSpanStarted;
            TimeLatestSpanEnded = timeLatestSpanEnded;
            TimeRootSpanEnded = timeRootSpanEnded;
            TimeRootSpanStarted = timeRootSpanStarted;
            TraceDurationInMs = traceDurationInMs;
            TraceErrorCode = traceErrorCode;
            TraceErrorType = traceErrorType;
            TraceStatus = traceStatus;
        }
    }
}
