// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ApmTraces
{
    /// <summary>
    /// This resource provides the Scheduled Query resource in Oracle Cloud Infrastructure Apm Traces service.
    /// 
    /// Create a scheduled query in the APM Domain.
    /// 
    /// ## Import
    /// 
    /// ScheduledQueries can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:ApmTraces/scheduledQuery:ScheduledQuery test_scheduled_query "scheduledQueries/{scheduledQueryId}/apmDomainId/{apmDomainId}"
    /// ```
    /// </summary>
    [OciResourceType("oci:ApmTraces/scheduledQuery:ScheduledQuery")]
    public partial class ScheduledQuery : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) The APM Domain ID for the intended request.
        /// </summary>
        [Output("apmDomainId")]
        public Output<string> ApmDomainId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, string>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, string>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Indicates that the request is a dry run, if set to "true". A dry run request does not create or modify the resource  and is used only to perform validation on the submitted data.
        /// </summary>
        [Output("opcDryRun")]
        public Output<string> OpcDryRun { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Description for the scheduled query.
        /// </summary>
        [Output("scheduledQueryDescription")]
        public Output<string> ScheduledQueryDescription { get; private set; } = null!;

        /// <summary>
        /// Scheduled query instances.
        /// </summary>
        [Output("scheduledQueryInstances")]
        public Output<string> ScheduledQueryInstances { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Maximum runtime for the scheduled query in seconds.
        /// </summary>
        [Output("scheduledQueryMaximumRuntimeInSeconds")]
        public Output<string> ScheduledQueryMaximumRuntimeInSeconds { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Name of the scheduled query.
        /// </summary>
        [Output("scheduledQueryName")]
        public Output<string> ScheduledQueryName { get; private set; } = null!;

        /// <summary>
        /// Next run for the scheduled query.
        /// </summary>
        [Output("scheduledQueryNextRunInMs")]
        public Output<string> ScheduledQueryNextRunInMs { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Definition of the scheduled query processing configuration.
        /// </summary>
        [Output("scheduledQueryProcessingConfiguration")]
        public Output<Outputs.ScheduledQueryScheduledQueryProcessingConfiguration> ScheduledQueryProcessingConfiguration { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Processing sub type of the scheduled query.
        /// </summary>
        [Output("scheduledQueryProcessingSubType")]
        public Output<string> ScheduledQueryProcessingSubType { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Type of the scheduled query.
        /// </summary>
        [Output("scheduledQueryProcessingType")]
        public Output<string> ScheduledQueryProcessingType { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Retention criteria for the scheduled query.
        /// </summary>
        [Output("scheduledQueryRetentionCriteria")]
        public Output<string> ScheduledQueryRetentionCriteria { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Retention period for the scheduled query in milliseconds.
        /// </summary>
        [Output("scheduledQueryRetentionPeriodInMs")]
        public Output<string> ScheduledQueryRetentionPeriodInMs { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Schedule for the scheduled query.
        /// </summary>
        [Output("scheduledQuerySchedule")]
        public Output<string> ScheduledQuerySchedule { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Scheduled query to be run. 
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("scheduledQueryText")]
        public Output<string> ScheduledQueryText { get; private set; } = null!;

        /// <summary>
        /// The current lifecycle state of the Scheduled Query.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        [Output("systemTags")]
        public Output<ImmutableDictionary<string, string>> SystemTags { get; private set; } = null!;


        /// <summary>
        /// Create a ScheduledQuery resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ScheduledQuery(string name, ScheduledQueryArgs args, CustomResourceOptions? options = null)
            : base("oci:ApmTraces/scheduledQuery:ScheduledQuery", name, args ?? new ScheduledQueryArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ScheduledQuery(string name, Input<string> id, ScheduledQueryState? state = null, CustomResourceOptions? options = null)
            : base("oci:ApmTraces/scheduledQuery:ScheduledQuery", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ScheduledQuery resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ScheduledQuery Get(string name, Input<string> id, ScheduledQueryState? state = null, CustomResourceOptions? options = null)
        {
            return new ScheduledQuery(name, id, state, options);
        }
    }

    public sealed class ScheduledQueryArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The APM Domain ID for the intended request.
        /// </summary>
        [Input("apmDomainId", required: true)]
        public Input<string> ApmDomainId { get; set; } = null!;

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) Indicates that the request is a dry run, if set to "true". A dry run request does not create or modify the resource  and is used only to perform validation on the submitted data.
        /// </summary>
        [Input("opcDryRun")]
        public Input<string>? OpcDryRun { get; set; }

        /// <summary>
        /// (Updatable) Description for the scheduled query.
        /// </summary>
        [Input("scheduledQueryDescription")]
        public Input<string>? ScheduledQueryDescription { get; set; }

        /// <summary>
        /// (Updatable) Maximum runtime for the scheduled query in seconds.
        /// </summary>
        [Input("scheduledQueryMaximumRuntimeInSeconds")]
        public Input<string>? ScheduledQueryMaximumRuntimeInSeconds { get; set; }

        /// <summary>
        /// (Updatable) Name of the scheduled query.
        /// </summary>
        [Input("scheduledQueryName")]
        public Input<string>? ScheduledQueryName { get; set; }

        /// <summary>
        /// (Updatable) Definition of the scheduled query processing configuration.
        /// </summary>
        [Input("scheduledQueryProcessingConfiguration")]
        public Input<Inputs.ScheduledQueryScheduledQueryProcessingConfigurationArgs>? ScheduledQueryProcessingConfiguration { get; set; }

        /// <summary>
        /// (Updatable) Processing sub type of the scheduled query.
        /// </summary>
        [Input("scheduledQueryProcessingSubType")]
        public Input<string>? ScheduledQueryProcessingSubType { get; set; }

        /// <summary>
        /// (Updatable) Type of the scheduled query.
        /// </summary>
        [Input("scheduledQueryProcessingType")]
        public Input<string>? ScheduledQueryProcessingType { get; set; }

        /// <summary>
        /// (Updatable) Retention criteria for the scheduled query.
        /// </summary>
        [Input("scheduledQueryRetentionCriteria")]
        public Input<string>? ScheduledQueryRetentionCriteria { get; set; }

        /// <summary>
        /// (Updatable) Retention period for the scheduled query in milliseconds.
        /// </summary>
        [Input("scheduledQueryRetentionPeriodInMs")]
        public Input<string>? ScheduledQueryRetentionPeriodInMs { get; set; }

        /// <summary>
        /// (Updatable) Schedule for the scheduled query.
        /// </summary>
        [Input("scheduledQuerySchedule")]
        public Input<string>? ScheduledQuerySchedule { get; set; }

        /// <summary>
        /// (Updatable) Scheduled query to be run. 
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("scheduledQueryText")]
        public Input<string>? ScheduledQueryText { get; set; }

        public ScheduledQueryArgs()
        {
        }
        public static new ScheduledQueryArgs Empty => new ScheduledQueryArgs();
    }

    public sealed class ScheduledQueryState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The APM Domain ID for the intended request.
        /// </summary>
        [Input("apmDomainId")]
        public Input<string>? ApmDomainId { get; set; }

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) Indicates that the request is a dry run, if set to "true". A dry run request does not create or modify the resource  and is used only to perform validation on the submitted data.
        /// </summary>
        [Input("opcDryRun")]
        public Input<string>? OpcDryRun { get; set; }

        /// <summary>
        /// (Updatable) Description for the scheduled query.
        /// </summary>
        [Input("scheduledQueryDescription")]
        public Input<string>? ScheduledQueryDescription { get; set; }

        /// <summary>
        /// Scheduled query instances.
        /// </summary>
        [Input("scheduledQueryInstances")]
        public Input<string>? ScheduledQueryInstances { get; set; }

        /// <summary>
        /// (Updatable) Maximum runtime for the scheduled query in seconds.
        /// </summary>
        [Input("scheduledQueryMaximumRuntimeInSeconds")]
        public Input<string>? ScheduledQueryMaximumRuntimeInSeconds { get; set; }

        /// <summary>
        /// (Updatable) Name of the scheduled query.
        /// </summary>
        [Input("scheduledQueryName")]
        public Input<string>? ScheduledQueryName { get; set; }

        /// <summary>
        /// Next run for the scheduled query.
        /// </summary>
        [Input("scheduledQueryNextRunInMs")]
        public Input<string>? ScheduledQueryNextRunInMs { get; set; }

        /// <summary>
        /// (Updatable) Definition of the scheduled query processing configuration.
        /// </summary>
        [Input("scheduledQueryProcessingConfiguration")]
        public Input<Inputs.ScheduledQueryScheduledQueryProcessingConfigurationGetArgs>? ScheduledQueryProcessingConfiguration { get; set; }

        /// <summary>
        /// (Updatable) Processing sub type of the scheduled query.
        /// </summary>
        [Input("scheduledQueryProcessingSubType")]
        public Input<string>? ScheduledQueryProcessingSubType { get; set; }

        /// <summary>
        /// (Updatable) Type of the scheduled query.
        /// </summary>
        [Input("scheduledQueryProcessingType")]
        public Input<string>? ScheduledQueryProcessingType { get; set; }

        /// <summary>
        /// (Updatable) Retention criteria for the scheduled query.
        /// </summary>
        [Input("scheduledQueryRetentionCriteria")]
        public Input<string>? ScheduledQueryRetentionCriteria { get; set; }

        /// <summary>
        /// (Updatable) Retention period for the scheduled query in milliseconds.
        /// </summary>
        [Input("scheduledQueryRetentionPeriodInMs")]
        public Input<string>? ScheduledQueryRetentionPeriodInMs { get; set; }

        /// <summary>
        /// (Updatable) Schedule for the scheduled query.
        /// </summary>
        [Input("scheduledQuerySchedule")]
        public Input<string>? ScheduledQuerySchedule { get; set; }

        /// <summary>
        /// (Updatable) Scheduled query to be run. 
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("scheduledQueryText")]
        public Input<string>? ScheduledQueryText { get; set; }

        /// <summary>
        /// The current lifecycle state of the Scheduled Query.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("systemTags")]
        private InputMap<string>? _systemTags;

        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public InputMap<string> SystemTags
        {
            get => _systemTags ?? (_systemTags = new InputMap<string>());
            set => _systemTags = value;
        }

        public ScheduledQueryState()
        {
        }
        public static new ScheduledQueryState Empty => new ScheduledQueryState();
    }
}
