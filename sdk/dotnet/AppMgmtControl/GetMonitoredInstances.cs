// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.AppMgmtControl
{
    public static class GetMonitoredInstances
    {
        /// <summary>
        /// This data source provides the list of Monitored Instances in Oracle Cloud Infrastructure Appmgmt Control service.
        /// 
        /// Returns a list of monitored instances.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMonitoredInstances = Oci.AppMgmtControl.GetMonitoredInstances.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = monitoredInstanceDisplayName,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetMonitoredInstancesResult> InvokeAsync(GetMonitoredInstancesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMonitoredInstancesResult>("oci:AppMgmtControl/getMonitoredInstances:getMonitoredInstances", args ?? new GetMonitoredInstancesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Monitored Instances in Oracle Cloud Infrastructure Appmgmt Control service.
        /// 
        /// Returns a list of monitored instances.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMonitoredInstances = Oci.AppMgmtControl.GetMonitoredInstances.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = monitoredInstanceDisplayName,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetMonitoredInstancesResult> Invoke(GetMonitoredInstancesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMonitoredInstancesResult>("oci:AppMgmtControl/getMonitoredInstances:getMonitoredInstances", args ?? new GetMonitoredInstancesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMonitoredInstancesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetMonitoredInstancesFilterArgs>? _filters;
        public List<Inputs.GetMonitoredInstancesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetMonitoredInstancesFilterArgs>());
            set => _filters = value;
        }

        public GetMonitoredInstancesArgs()
        {
        }
        public static new GetMonitoredInstancesArgs Empty => new GetMonitoredInstancesArgs();
    }

    public sealed class GetMonitoredInstancesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetMonitoredInstancesFilterInputArgs>? _filters;
        public InputList<Inputs.GetMonitoredInstancesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetMonitoredInstancesFilterInputArgs>());
            set => _filters = value;
        }

        public GetMonitoredInstancesInvokeArgs()
        {
        }
        public static new GetMonitoredInstancesInvokeArgs Empty => new GetMonitoredInstancesInvokeArgs();
    }


    [OutputType]
    public sealed class GetMonitoredInstancesResult
    {
        /// <summary>
        /// Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// A user-friendly name of the monitored instance. It is binded to [Compute Instance](https://docs.cloud.oracle.com/iaas/Content/Compute/Concepts/computeoverview.htm). DisplayName is fetched from [Core Service API](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/Instance/).
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetMonitoredInstancesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of monitored_instance_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMonitoredInstancesMonitoredInstanceCollectionResult> MonitoredInstanceCollections;

        [OutputConstructor]
        private GetMonitoredInstancesResult(
            string compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetMonitoredInstancesFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetMonitoredInstancesMonitoredInstanceCollectionResult> monitoredInstanceCollections)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            MonitoredInstanceCollections = monitoredInstanceCollections;
        }
    }
}
