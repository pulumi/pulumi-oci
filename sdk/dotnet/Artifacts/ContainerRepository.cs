// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Artifacts
{
    /// <summary>
    /// This resource provides the Container Repository resource in Oracle Cloud Infrastructure Artifacts service.
    /// 
    /// Create a new empty container repository. Avoid entering confidential information.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testContainerRepository = new Oci.Artifacts.ContainerRepository("testContainerRepository", new()
    ///     {
    ///         CompartmentId = @var.Compartment_id,
    ///         DisplayName = @var.Container_repository_display_name,
    ///         IsImmutable = @var.Container_repository_is_immutable,
    ///         IsPublic = @var.Container_repository_is_public,
    ///         Readme = new Oci.Artifacts.Inputs.ContainerRepositoryReadmeArgs
    ///         {
    ///             Content = @var.Container_repository_readme_content,
    ///             Format = @var.Container_repository_readme_format,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ContainerRepositories can be imported using the `id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import oci:Artifacts/containerRepository:ContainerRepository test_container_repository "container/repositories/{repositoryId}"
    /// ```
    /// </summary>
    [OciResourceType("oci:Artifacts/containerRepository:ContainerRepository")]
    public partial class ContainerRepository : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Total storage size in GBs that will be charged.
        /// </summary>
        [Output("billableSizeInGbs")]
        public Output<string> BillableSizeInGbs { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to create the resource.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// The id of the user or principal that created the resource.
        /// </summary>
        [Output("createdBy")]
        public Output<string> CreatedBy { get; private set; } = null!;

        /// <summary>
        /// The container repository name.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Total number of images.
        /// </summary>
        [Output("imageCount")]
        public Output<int> ImageCount { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Whether the repository is immutable. Images cannot be overwritten in an immutable repository.
        /// </summary>
        [Output("isImmutable")]
        public Output<bool> IsImmutable { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Whether the repository is public. A public repository allows unauthenticated access.
        /// </summary>
        [Output("isPublic")]
        public Output<bool> IsPublic { get; private set; } = null!;

        /// <summary>
        /// Total number of layers.
        /// </summary>
        [Output("layerCount")]
        public Output<int> LayerCount { get; private set; } = null!;

        /// <summary>
        /// Total storage in bytes consumed by layers.
        /// </summary>
        [Output("layersSizeInBytes")]
        public Output<string> LayersSizeInBytes { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Container repository readme.
        /// </summary>
        [Output("readme")]
        public Output<Outputs.ContainerRepositoryReadme> Readme { get; private set; } = null!;

        /// <summary>
        /// The current state of the container repository.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// An RFC 3339 timestamp indicating when the repository was created.
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// An RFC 3339 timestamp indicating when an image was last pushed to the repository.
        /// </summary>
        [Output("timeLastPushed")]
        public Output<string> TimeLastPushed { get; private set; } = null!;


        /// <summary>
        /// Create a ContainerRepository resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ContainerRepository(string name, ContainerRepositoryArgs args, CustomResourceOptions? options = null)
            : base("oci:Artifacts/containerRepository:ContainerRepository", name, args ?? new ContainerRepositoryArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ContainerRepository(string name, Input<string> id, ContainerRepositoryState? state = null, CustomResourceOptions? options = null)
            : base("oci:Artifacts/containerRepository:ContainerRepository", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ContainerRepository resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ContainerRepository Get(string name, Input<string> id, ContainerRepositoryState? state = null, CustomResourceOptions? options = null)
        {
            return new ContainerRepository(name, id, state, options);
        }
    }

    public sealed class ContainerRepositoryArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to create the resource.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// The container repository name.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// (Updatable) Whether the repository is immutable. Images cannot be overwritten in an immutable repository.
        /// </summary>
        [Input("isImmutable")]
        public Input<bool>? IsImmutable { get; set; }

        /// <summary>
        /// (Updatable) Whether the repository is public. A public repository allows unauthenticated access.
        /// </summary>
        [Input("isPublic")]
        public Input<bool>? IsPublic { get; set; }

        /// <summary>
        /// (Updatable) Container repository readme.
        /// </summary>
        [Input("readme")]
        public Input<Inputs.ContainerRepositoryReadmeArgs>? Readme { get; set; }

        public ContainerRepositoryArgs()
        {
        }
        public static new ContainerRepositoryArgs Empty => new ContainerRepositoryArgs();
    }

    public sealed class ContainerRepositoryState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Total storage size in GBs that will be charged.
        /// </summary>
        [Input("billableSizeInGbs")]
        public Input<string>? BillableSizeInGbs { get; set; }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to create the resource.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// The id of the user or principal that created the resource.
        /// </summary>
        [Input("createdBy")]
        public Input<string>? CreatedBy { get; set; }

        /// <summary>
        /// The container repository name.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// Total number of images.
        /// </summary>
        [Input("imageCount")]
        public Input<int>? ImageCount { get; set; }

        /// <summary>
        /// (Updatable) Whether the repository is immutable. Images cannot be overwritten in an immutable repository.
        /// </summary>
        [Input("isImmutable")]
        public Input<bool>? IsImmutable { get; set; }

        /// <summary>
        /// (Updatable) Whether the repository is public. A public repository allows unauthenticated access.
        /// </summary>
        [Input("isPublic")]
        public Input<bool>? IsPublic { get; set; }

        /// <summary>
        /// Total number of layers.
        /// </summary>
        [Input("layerCount")]
        public Input<int>? LayerCount { get; set; }

        /// <summary>
        /// Total storage in bytes consumed by layers.
        /// </summary>
        [Input("layersSizeInBytes")]
        public Input<string>? LayersSizeInBytes { get; set; }

        /// <summary>
        /// (Updatable) Container repository readme.
        /// </summary>
        [Input("readme")]
        public Input<Inputs.ContainerRepositoryReadmeGetArgs>? Readme { get; set; }

        /// <summary>
        /// The current state of the container repository.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// An RFC 3339 timestamp indicating when the repository was created.
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// An RFC 3339 timestamp indicating when an image was last pushed to the repository.
        /// </summary>
        [Input("timeLastPushed")]
        public Input<string>? TimeLastPushed { get; set; }

        public ContainerRepositoryState()
        {
        }
        public static new ContainerRepositoryState Empty => new ContainerRepositoryState();
    }
}
