// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Artifacts
{
    public static class GetContainerConfiguration
    {
        /// <summary>
        /// This data source provides details about a specific Container Configuration resource in Oracle Cloud Infrastructure Artifacts service.
        /// 
        /// Get container configuration.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testContainerConfiguration = Oci.Artifacts.GetContainerConfiguration.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetContainerConfigurationResult> InvokeAsync(GetContainerConfigurationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetContainerConfigurationResult>("oci:Artifacts/getContainerConfiguration:getContainerConfiguration", args ?? new GetContainerConfigurationArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Container Configuration resource in Oracle Cloud Infrastructure Artifacts service.
        /// 
        /// Get container configuration.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testContainerConfiguration = Oci.Artifacts.GetContainerConfiguration.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetContainerConfigurationResult> Invoke(GetContainerConfigurationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetContainerConfigurationResult>("oci:Artifacts/getContainerConfiguration:getContainerConfiguration", args ?? new GetContainerConfigurationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetContainerConfigurationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        public GetContainerConfigurationArgs()
        {
        }
        public static new GetContainerConfigurationArgs Empty => new GetContainerConfigurationArgs();
    }

    public sealed class GetContainerConfigurationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        public GetContainerConfigurationInvokeArgs()
        {
        }
        public static new GetContainerConfigurationInvokeArgs Empty => new GetContainerConfigurationInvokeArgs();
    }


    [OutputType]
    public sealed class GetContainerConfigurationResult
    {
        public readonly string CompartmentId;
        public readonly string Id;
        /// <summary>
        /// Whether to create a new container repository when a container is pushed to a new repository path. Repositories created in this way belong to the root compartment.
        /// </summary>
        public readonly bool IsRepositoryCreatedOnFirstPush;
        /// <summary>
        /// The tenancy namespace used in the container repository path.
        /// </summary>
        public readonly string Namespace;

        [OutputConstructor]
        private GetContainerConfigurationResult(
            string compartmentId,

            string id,

            bool isRepositoryCreatedOnFirstPush,

            string @namespace)
        {
            CompartmentId = compartmentId;
            Id = id;
            IsRepositoryCreatedOnFirstPush = isRepositoryCreatedOnFirstPush;
            Namespace = @namespace;
        }
    }
}
