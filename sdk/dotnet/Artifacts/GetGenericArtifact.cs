// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Artifacts
{
    public static class GetGenericArtifact
    {
        /// <summary>
        /// This data source provides details about a specific Generic Artifact resource in Oracle Cloud Infrastructure Artifacts service.
        /// 
        /// Gets information about an artifact with a specified [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testGenericArtifact = Oci.Artifacts.GetGenericArtifact.Invoke(new()
        ///     {
        ///         ArtifactId = oci_artifacts_artifact.Test_artifact.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetGenericArtifactResult> InvokeAsync(GetGenericArtifactArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGenericArtifactResult>("oci:Artifacts/getGenericArtifact:getGenericArtifact", args ?? new GetGenericArtifactArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Generic Artifact resource in Oracle Cloud Infrastructure Artifacts service.
        /// 
        /// Gets information about an artifact with a specified [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testGenericArtifact = Oci.Artifacts.GetGenericArtifact.Invoke(new()
        ///     {
        ///         ArtifactId = oci_artifacts_artifact.Test_artifact.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetGenericArtifactResult> Invoke(GetGenericArtifactInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGenericArtifactResult>("oci:Artifacts/getGenericArtifact:getGenericArtifact", args ?? new GetGenericArtifactInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGenericArtifactArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the artifact.  Example: `ocid1.genericartifact.oc1..exampleuniqueID`
        /// </summary>
        [Input("artifactId", required: true)]
        public string ArtifactId { get; set; } = null!;

        public GetGenericArtifactArgs()
        {
        }
        public static new GetGenericArtifactArgs Empty => new GetGenericArtifactArgs();
    }

    public sealed class GetGenericArtifactInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the artifact.  Example: `ocid1.genericartifact.oc1..exampleuniqueID`
        /// </summary>
        [Input("artifactId", required: true)]
        public Input<string> ArtifactId { get; set; } = null!;

        public GetGenericArtifactInvokeArgs()
        {
        }
        public static new GetGenericArtifactInvokeArgs Empty => new GetGenericArtifactInvokeArgs();
    }


    [OutputType]
    public sealed class GetGenericArtifactResult
    {
        public readonly string ArtifactId;
        /// <summary>
        /// A user-defined path to describe the location of an artifact. Slashes do not create a directory structure, but you can use slashes to organize the repository. An artifact path does not include an artifact version.  Example: `project01/my-web-app/artifact-abc`
        /// </summary>
        public readonly string ArtifactPath;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the repository's compartment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// The artifact name with the format of `&lt;artifact-path&gt;:&lt;artifact-version&gt;`. The artifact name is truncated to a maximum length of 255.  Example: `project01/my-web-app/artifact-abc:1.0.0`
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the artifact.  Example: `ocid1.genericartifact.oc1..exampleuniqueID`
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the repository.
        /// </summary>
        public readonly string RepositoryId;
        /// <summary>
        /// The SHA256 digest for the artifact. When you upload an artifact to the repository, a SHA256 digest is calculated and added to the artifact properties.
        /// </summary>
        public readonly string Sha256;
        /// <summary>
        /// The size of the artifact in bytes.
        /// </summary>
        public readonly string SizeInBytes;
        /// <summary>
        /// The current state of the artifact.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// An RFC 3339 timestamp indicating when the repository was created.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// A user-defined string to describe the artifact version.  Example: `1.1.0` or `1.2-beta-2`
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private GetGenericArtifactResult(
            string artifactId,

            string artifactPath,

            string compartmentId,

            ImmutableDictionary<string, object> definedTags,

            string displayName,

            ImmutableDictionary<string, object> freeformTags,

            string id,

            string repositoryId,

            string sha256,

            string sizeInBytes,

            string state,

            string timeCreated,

            string version)
        {
            ArtifactId = artifactId;
            ArtifactPath = artifactPath;
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            RepositoryId = repositoryId;
            Sha256 = sha256;
            SizeInBytes = sizeInBytes;
            State = state;
            TimeCreated = timeCreated;
            Version = version;
        }
    }
}
