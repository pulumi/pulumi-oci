// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Artifacts
{
    public static class GetGenericArtifacts
    {
        /// <summary>
        /// This data source provides the list of Generic Artifacts in Oracle Cloud Infrastructure Artifacts service.
        /// 
        /// Lists artifacts in the specified repository.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testGenericArtifacts = Oci.Artifacts.GetGenericArtifacts.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         RepositoryId = testRepository.Id,
        ///         ArtifactPath = genericArtifactArtifactPath,
        ///         DisplayName = genericArtifactDisplayName,
        ///         Id = genericArtifactId,
        ///         Sha256 = genericArtifactSha256,
        ///         State = genericArtifactState,
        ///         Version = genericArtifactVersion,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetGenericArtifactsResult> InvokeAsync(GetGenericArtifactsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGenericArtifactsResult>("oci:Artifacts/getGenericArtifacts:getGenericArtifacts", args ?? new GetGenericArtifactsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Generic Artifacts in Oracle Cloud Infrastructure Artifacts service.
        /// 
        /// Lists artifacts in the specified repository.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testGenericArtifacts = Oci.Artifacts.GetGenericArtifacts.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         RepositoryId = testRepository.Id,
        ///         ArtifactPath = genericArtifactArtifactPath,
        ///         DisplayName = genericArtifactDisplayName,
        ///         Id = genericArtifactId,
        ///         Sha256 = genericArtifactSha256,
        ///         State = genericArtifactState,
        ///         Version = genericArtifactVersion,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetGenericArtifactsResult> Invoke(GetGenericArtifactsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGenericArtifactsResult>("oci:Artifacts/getGenericArtifacts:getGenericArtifacts", args ?? new GetGenericArtifactsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Generic Artifacts in Oracle Cloud Infrastructure Artifacts service.
        /// 
        /// Lists artifacts in the specified repository.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testGenericArtifacts = Oci.Artifacts.GetGenericArtifacts.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         RepositoryId = testRepository.Id,
        ///         ArtifactPath = genericArtifactArtifactPath,
        ///         DisplayName = genericArtifactDisplayName,
        ///         Id = genericArtifactId,
        ///         Sha256 = genericArtifactSha256,
        ///         State = genericArtifactState,
        ///         Version = genericArtifactVersion,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetGenericArtifactsResult> Invoke(GetGenericArtifactsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetGenericArtifactsResult>("oci:Artifacts/getGenericArtifacts:getGenericArtifacts", args ?? new GetGenericArtifactsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGenericArtifactsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Filter results by a prefix for the `artifactPath` and and return artifacts that begin with the specified prefix in their path.
        /// </summary>
        [Input("artifactPath")]
        public string? ArtifactPath { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the given display name exactly.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetGenericArtifactsFilterArgs>? _filters;
        public List<Inputs.GetGenericArtifactsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetGenericArtifactsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return the resources for the specified OCID.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// A filter to return the artifacts only for the specified repository OCID.
        /// </summary>
        [Input("repositoryId", required: true)]
        public string RepositoryId { get; set; } = null!;

        /// <summary>
        /// Filter results by a specified SHA256 digest for the artifact.
        /// </summary>
        [Input("sha256")]
        public string? Sha256 { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given lifecycle state name exactly.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        /// <summary>
        /// Filter results by a prefix for `version` and return artifacts that that begin with the specified prefix in their version.
        /// </summary>
        [Input("version")]
        public string? Version { get; set; }

        public GetGenericArtifactsArgs()
        {
        }
        public static new GetGenericArtifactsArgs Empty => new GetGenericArtifactsArgs();
    }

    public sealed class GetGenericArtifactsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Filter results by a prefix for the `artifactPath` and and return artifacts that begin with the specified prefix in their path.
        /// </summary>
        [Input("artifactPath")]
        public Input<string>? ArtifactPath { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the given display name exactly.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetGenericArtifactsFilterInputArgs>? _filters;
        public InputList<Inputs.GetGenericArtifactsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetGenericArtifactsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return the resources for the specified OCID.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// A filter to return the artifacts only for the specified repository OCID.
        /// </summary>
        [Input("repositoryId", required: true)]
        public Input<string> RepositoryId { get; set; } = null!;

        /// <summary>
        /// Filter results by a specified SHA256 digest for the artifact.
        /// </summary>
        [Input("sha256")]
        public Input<string>? Sha256 { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given lifecycle state name exactly.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// Filter results by a prefix for `version` and return artifacts that that begin with the specified prefix in their version.
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        public GetGenericArtifactsInvokeArgs()
        {
        }
        public static new GetGenericArtifactsInvokeArgs Empty => new GetGenericArtifactsInvokeArgs();
    }


    [OutputType]
    public sealed class GetGenericArtifactsResult
    {
        /// <summary>
        /// A user-defined path to describe the location of an artifact. Slashes do not create a directory structure, but you can use slashes to organize the repository. An artifact path does not include an artifact version.  Example: `project01/my-web-app/artifact-abc`
        /// </summary>
        public readonly string? ArtifactPath;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the repository's compartment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The artifact name with the format of `&lt;artifact-path&gt;:&lt;artifact-version&gt;`. The artifact name is truncated to a maximum length of 255.  Example: `project01/my-web-app/artifact-abc:1.0.0`
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetGenericArtifactsFilterResult> Filters;
        /// <summary>
        /// The list of generic_artifact_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetGenericArtifactsGenericArtifactCollectionResult> GenericArtifactCollections;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the artifact.  Example: `ocid1.genericartifact.oc1..exampleuniqueID`
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the repository.
        /// </summary>
        public readonly string RepositoryId;
        /// <summary>
        /// The SHA256 digest for the artifact. When you upload an artifact to the repository, a SHA256 digest is calculated and added to the artifact properties.
        /// </summary>
        public readonly string? Sha256;
        /// <summary>
        /// The current state of the artifact.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// A user-defined string to describe the artifact version.  Example: `1.1.0` or `1.2-beta-2`
        /// </summary>
        public readonly string? Version;

        [OutputConstructor]
        private GetGenericArtifactsResult(
            string? artifactPath,

            string compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetGenericArtifactsFilterResult> filters,

            ImmutableArray<Outputs.GetGenericArtifactsGenericArtifactCollectionResult> genericArtifactCollections,

            string? id,

            string repositoryId,

            string? sha256,

            string? state,

            string? version)
        {
            ArtifactPath = artifactPath;
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            GenericArtifactCollections = genericArtifactCollections;
            Id = id;
            RepositoryId = repositoryId;
            Sha256 = sha256;
            State = state;
            Version = version;
        }
    }
}
