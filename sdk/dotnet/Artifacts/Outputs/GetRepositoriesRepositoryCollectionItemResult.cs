// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Artifacts.Outputs
{

    [OutputType]
    public sealed class GetRepositoriesRepositoryCollectionItemResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// The repository description.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// A filter to return only resources that match the given display name exactly.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// A filter to return the resources for the specified OCID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A filter to return resources that match the isImmutable value.
        /// </summary>
        public readonly bool IsImmutable;
        /// <summary>
        /// The repository's supported artifact type.
        /// </summary>
        public readonly string RepositoryType;
        /// <summary>
        /// A filter to return only resources that match the given lifecycle state name exactly.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// An RFC 3339 timestamp indicating when the repository was created.
        /// </summary>
        public readonly string TimeCreated;

        [OutputConstructor]
        private GetRepositoriesRepositoryCollectionItemResult(
            string compartmentId,

            ImmutableDictionary<string, object> definedTags,

            string description,

            string displayName,

            ImmutableDictionary<string, object> freeformTags,

            string id,

            bool isImmutable,

            string repositoryType,

            string state,

            string timeCreated)
        {
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            IsImmutable = isImmutable;
            RepositoryType = repositoryType;
            State = state;
            TimeCreated = timeCreated;
        }
    }
}
