// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Autoscaling.Outputs
{

    [OutputType]
    public sealed class GetAutoScalingConfigurationPolicyRuleMetricResult
    {
        /// <summary>
        /// The OCID of the compartment containing the metrics.
        /// </summary>
        public readonly string MetricCompartmentId;
        /// <summary>
        /// Source of the metric data for creating the alarm used to trigger autoscaling actions.
        /// </summary>
        public readonly string MetricSource;
        /// <summary>
        /// Metric type example: CPU_UTILIZATION, MEMORY_UTILIZATION
        /// </summary>
        public readonly string MetricType;
        /// <summary>
        /// The namespace for the query.
        /// </summary>
        public readonly string Namespace;
        /// <summary>
        /// The period of time that the condition defined in the alarm must persist before the alarm state changes from "OK" to "FIRING" or vice versa. For example, a value of 5 minutes means that the alarm must persist in breaching the condition for five minutes before the alarm updates its state to "FIRING"; likewise, the alarm must persist in not breaching the condition for five minutes before the alarm updates its state to "OK."
        /// </summary>
        public readonly string PendingDuration;
        /// <summary>
        /// The Monitoring Query Language (MQL) expression to evaluate for the alarm. The Alarms feature of the Monitoring service interprets results for each returned time series as Boolean values, where zero represents false and a non-zero value represents true. A true value means that the trigger rule condition has been met. The query must specify a metric, statistic, interval, and trigger rule (threshold or absence). Supported values for interval: `1m`-`60m` (also `1h`). You can optionally specify dimensions and grouping functions. Supported grouping functions: `grouping()`, `groupBy()`.
        /// </summary>
        public readonly string Query;
        /// <summary>
        /// The resource group for the query.
        /// </summary>
        public readonly string ResourceGroup;
        public readonly ImmutableArray<Outputs.GetAutoScalingConfigurationPolicyRuleMetricThresholdResult> Thresholds;

        [OutputConstructor]
        private GetAutoScalingConfigurationPolicyRuleMetricResult(
            string metricCompartmentId,

            string metricSource,

            string metricType,

            string @namespace,

            string pendingDuration,

            string query,

            string resourceGroup,

            ImmutableArray<Outputs.GetAutoScalingConfigurationPolicyRuleMetricThresholdResult> thresholds)
        {
            MetricCompartmentId = metricCompartmentId;
            MetricSource = metricSource;
            MetricType = metricType;
            Namespace = @namespace;
            PendingDuration = pendingDuration;
            Query = query;
            ResourceGroup = resourceGroup;
            Thresholds = thresholds;
        }
    }
}
