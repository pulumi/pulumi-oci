// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Bastion
{
    public static class GetSession
    {
        /// <summary>
        /// This data source provides details about a specific Session resource in Oracle Cloud Infrastructure Bastion service.
        /// 
        /// Retrieves a session identified by the session ID. A bastion session lets authorized users connect to a target resource for a predetermined amount of time.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSession = Oci.Bastion.GetSession.Invoke(new()
        ///     {
        ///         SessionId = testSessionOciBastionSession.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSessionResult> InvokeAsync(GetSessionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSessionResult>("oci:Bastion/getSession:getSession", args ?? new GetSessionArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Session resource in Oracle Cloud Infrastructure Bastion service.
        /// 
        /// Retrieves a session identified by the session ID. A bastion session lets authorized users connect to a target resource for a predetermined amount of time.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSession = Oci.Bastion.GetSession.Invoke(new()
        ///     {
        ///         SessionId = testSessionOciBastionSession.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSessionResult> Invoke(GetSessionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSessionResult>("oci:Bastion/getSession:getSession", args ?? new GetSessionInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Session resource in Oracle Cloud Infrastructure Bastion service.
        /// 
        /// Retrieves a session identified by the session ID. A bastion session lets authorized users connect to a target resource for a predetermined amount of time.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSession = Oci.Bastion.GetSession.Invoke(new()
        ///     {
        ///         SessionId = testSessionOciBastionSession.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSessionResult> Invoke(GetSessionInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSessionResult>("oci:Bastion/getSession:getSession", args ?? new GetSessionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSessionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique identifier (OCID) of the session.
        /// </summary>
        [Input("sessionId", required: true)]
        public string SessionId { get; set; } = null!;

        public GetSessionArgs()
        {
        }
        public static new GetSessionArgs Empty => new GetSessionArgs();
    }

    public sealed class GetSessionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique identifier (OCID) of the session.
        /// </summary>
        [Input("sessionId", required: true)]
        public Input<string> SessionId { get; set; } = null!;

        public GetSessionInvokeArgs()
        {
        }
        public static new GetSessionInvokeArgs Empty => new GetSessionInvokeArgs();
    }


    [OutputType]
    public sealed class GetSessionResult
    {
        /// <summary>
        /// The unique identifier (OCID) of the bastion that is hosting this session.
        /// </summary>
        public readonly string BastionId;
        /// <summary>
        /// The name of the bastion that is hosting this session.
        /// </summary>
        public readonly string BastionName;
        /// <summary>
        /// The public key of the bastion host. You can use this to verify that you're connecting to the correct bastion.
        /// </summary>
        public readonly string BastionPublicHostKeyInfo;
        /// <summary>
        /// The username that the session uses to connect to the target resource.
        /// </summary>
        public readonly string BastionUserName;
        /// <summary>
        /// The name of the session.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// The unique identifier (OCID) of the session, which can't be changed after creation.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Public key details for a bastion session.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSessionKeyDetailResult> KeyDetails;
        /// <summary>
        /// The type of the key used to connect to the session. PUB is a standard public key in OpenSSH format.
        /// </summary>
        public readonly string KeyType;
        /// <summary>
        /// A message describing the current session state in more detail.
        /// </summary>
        public readonly string LifecycleDetails;
        public readonly string SessionId;
        /// <summary>
        /// The amount of time the session can remain active.
        /// </summary>
        public readonly int SessionTtlInSeconds;
        /// <summary>
        /// The connection message for the session.
        /// </summary>
        public readonly ImmutableDictionary<string, string> SshMetadata;
        /// <summary>
        /// The current state of the session.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Details about a bastion session's target resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSessionTargetResourceDetailResult> TargetResourceDetails;
        /// <summary>
        /// The time the session was created. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time the session was updated. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetSessionResult(
            string bastionId,

            string bastionName,

            string bastionPublicHostKeyInfo,

            string bastionUserName,

            string displayName,

            string id,

            ImmutableArray<Outputs.GetSessionKeyDetailResult> keyDetails,

            string keyType,

            string lifecycleDetails,

            string sessionId,

            int sessionTtlInSeconds,

            ImmutableDictionary<string, string> sshMetadata,

            string state,

            ImmutableArray<Outputs.GetSessionTargetResourceDetailResult> targetResourceDetails,

            string timeCreated,

            string timeUpdated)
        {
            BastionId = bastionId;
            BastionName = bastionName;
            BastionPublicHostKeyInfo = bastionPublicHostKeyInfo;
            BastionUserName = bastionUserName;
            DisplayName = displayName;
            Id = id;
            KeyDetails = keyDetails;
            KeyType = keyType;
            LifecycleDetails = lifecycleDetails;
            SessionId = sessionId;
            SessionTtlInSeconds = sessionTtlInSeconds;
            SshMetadata = sshMetadata;
            State = state;
            TargetResourceDetails = targetResourceDetails;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
