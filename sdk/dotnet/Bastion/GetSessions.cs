// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Bastion
{
    public static class GetSessions
    {
        /// <summary>
        /// This data source provides the list of Sessions in Oracle Cloud Infrastructure Bastion service.
        /// 
        /// Retrieves a list of SessionSummary objects for an existing bastion. Bastion sessions let authorized users connect to a target resource for a predetermined amount of time.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSessions = Oci.Bastion.GetSessions.Invoke(new()
        ///     {
        ///         BastionId = testBastion.Id,
        ///         DisplayName = sessionDisplayName,
        ///         SessionId = testSession.Id,
        ///         SessionLifecycleState = sessionSessionLifecycleState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSessionsResult> InvokeAsync(GetSessionsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSessionsResult>("oci:Bastion/getSessions:getSessions", args ?? new GetSessionsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Sessions in Oracle Cloud Infrastructure Bastion service.
        /// 
        /// Retrieves a list of SessionSummary objects for an existing bastion. Bastion sessions let authorized users connect to a target resource for a predetermined amount of time.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSessions = Oci.Bastion.GetSessions.Invoke(new()
        ///     {
        ///         BastionId = testBastion.Id,
        ///         DisplayName = sessionDisplayName,
        ///         SessionId = testSession.Id,
        ///         SessionLifecycleState = sessionSessionLifecycleState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSessionsResult> Invoke(GetSessionsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSessionsResult>("oci:Bastion/getSessions:getSessions", args ?? new GetSessionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSessionsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique identifier (OCID) of the bastion in which to list sessions.
        /// </summary>
        [Input("bastionId", required: true)]
        public string BastionId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetSessionsFilterArgs>? _filters;
        public List<Inputs.GetSessionsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetSessionsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The unique identifier (OCID) of the session in which to list resources.
        /// </summary>
        [Input("sessionId")]
        public string? SessionId { get; set; }

        /// <summary>
        /// A filter to return only resources their lifecycleState matches the given lifecycleState.
        /// </summary>
        [Input("sessionLifecycleState")]
        public string? SessionLifecycleState { get; set; }

        public GetSessionsArgs()
        {
        }
        public static new GetSessionsArgs Empty => new GetSessionsArgs();
    }

    public sealed class GetSessionsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique identifier (OCID) of the bastion in which to list sessions.
        /// </summary>
        [Input("bastionId", required: true)]
        public Input<string> BastionId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetSessionsFilterInputArgs>? _filters;
        public InputList<Inputs.GetSessionsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetSessionsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The unique identifier (OCID) of the session in which to list resources.
        /// </summary>
        [Input("sessionId")]
        public Input<string>? SessionId { get; set; }

        /// <summary>
        /// A filter to return only resources their lifecycleState matches the given lifecycleState.
        /// </summary>
        [Input("sessionLifecycleState")]
        public Input<string>? SessionLifecycleState { get; set; }

        public GetSessionsInvokeArgs()
        {
        }
        public static new GetSessionsInvokeArgs Empty => new GetSessionsInvokeArgs();
    }


    [OutputType]
    public sealed class GetSessionsResult
    {
        /// <summary>
        /// The unique identifier (OCID) of the bastion that is hosting this session.
        /// </summary>
        public readonly string BastionId;
        /// <summary>
        /// The name of the session.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetSessionsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? SessionId;
        public readonly string? SessionLifecycleState;
        /// <summary>
        /// The list of sessions.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSessionsSessionResult> Sessions;

        [OutputConstructor]
        private GetSessionsResult(
            string bastionId,

            string? displayName,

            ImmutableArray<Outputs.GetSessionsFilterResult> filters,

            string id,

            string? sessionId,

            string? sessionLifecycleState,

            ImmutableArray<Outputs.GetSessionsSessionResult> sessions)
        {
            BastionId = bastionId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            SessionId = sessionId;
            SessionLifecycleState = sessionLifecycleState;
            Sessions = sessions;
        }
    }
}
