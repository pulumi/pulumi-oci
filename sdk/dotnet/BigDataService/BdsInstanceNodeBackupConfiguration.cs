// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.BigDataService
{
    /// <summary>
    /// This resource provides the Bds Instance Node Backup Configuration resource in Oracle Cloud Infrastructure Big Data Service service.
    /// 
    /// Add a node volume backup configuration to the cluster for an indicated node type or node.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testBdsInstanceNodeBackupConfiguration = new Oci.BigDataService.BdsInstanceNodeBackupConfiguration("test_bds_instance_node_backup_configuration", new()
    ///     {
    ///         BdsInstanceId = testBdsInstance.Id,
    ///         LevelTypeDetails = new Oci.BigDataService.Inputs.BdsInstanceNodeBackupConfigurationLevelTypeDetailsArgs
    ///         {
    ///             LevelType = bdsInstanceNodeBackupConfigurationLevelTypeDetailsLevelType,
    ///             NodeHostName = bdsInstanceNodeBackupConfigurationLevelTypeDetailsNodeHostName,
    ///             NodeType = bdsInstanceNodeBackupConfigurationLevelTypeDetailsNodeType,
    ///         },
    ///         Schedule = bdsInstanceNodeBackupConfigurationSchedule,
    ///         BackupType = bdsInstanceNodeBackupConfigurationBackupType,
    ///         DisplayName = bdsInstanceNodeBackupConfigurationDisplayName,
    ///         NumberOfBackupsToRetain = bdsInstanceNodeBackupConfigurationNumberOfBackupsToRetain,
    ///         Timezone = bdsInstanceNodeBackupConfigurationTimezone,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// BdsInstanceNodeBackupConfigurations can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:BigDataService/bdsInstanceNodeBackupConfiguration:BdsInstanceNodeBackupConfiguration test_bds_instance_node_backup_configuration "bdsInstances/{bdsInstanceId}/nodeBackupConfigurations/{nodeBackupConfigurationId}"
    /// ```
    /// </summary>
    [OciResourceType("oci:BigDataService/bdsInstanceNodeBackupConfiguration:BdsInstanceNodeBackupConfiguration")]
    public partial class BdsInstanceNodeBackupConfiguration : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) Incremental backup type includes only the changes since the last backup. Full backup type includes all changes since the volume was created.
        /// </summary>
        [Output("backupType")]
        public Output<string> BackupType { get; private set; } = null!;

        /// <summary>
        /// The OCID of the cluster.
        /// </summary>
        [Output("bdsInstanceId")]
        public Output<string> BdsInstanceId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A user-friendly name. Only ASCII alphanumeric characters with no spaces allowed. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Details of the type of level used to trigger the creation of a new node backup configuration or node replacement configuration.
        /// </summary>
        [Output("levelTypeDetails")]
        public Output<Outputs.BdsInstanceNodeBackupConfigurationLevelTypeDetails> LevelTypeDetails { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Number of backup copies to retain.
        /// </summary>
        [Output("numberOfBackupsToRetain")]
        public Output<int> NumberOfBackupsToRetain { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Day/time recurrence (specified following RFC 5545) at which to trigger the backup process. Currently only DAILY, WEEKLY and MONTHLY frequency is supported. Days of the week are specified using BYDAY field. Time of the day is specified using BYHOUR. Other fields are not supported.
        /// </summary>
        [Output("schedule")]
        public Output<string> Schedule { get; private set; } = null!;

        /// <summary>
        /// The state of the NodeBackupConfiguration.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The time the NodeBackupConfiguration was created, shown as an RFC 3339 formatted datetime string.
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The time the NodeBackupConfiguration was updated, shown as an RFC 3339 formatted datetime string.
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The time zone of the execution schedule, in IANA time zone database name format
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("timezone")]
        public Output<string> Timezone { get; private set; } = null!;


        /// <summary>
        /// Create a BdsInstanceNodeBackupConfiguration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BdsInstanceNodeBackupConfiguration(string name, BdsInstanceNodeBackupConfigurationArgs args, CustomResourceOptions? options = null)
            : base("oci:BigDataService/bdsInstanceNodeBackupConfiguration:BdsInstanceNodeBackupConfiguration", name, args ?? new BdsInstanceNodeBackupConfigurationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BdsInstanceNodeBackupConfiguration(string name, Input<string> id, BdsInstanceNodeBackupConfigurationState? state = null, CustomResourceOptions? options = null)
            : base("oci:BigDataService/bdsInstanceNodeBackupConfiguration:BdsInstanceNodeBackupConfiguration", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BdsInstanceNodeBackupConfiguration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BdsInstanceNodeBackupConfiguration Get(string name, Input<string> id, BdsInstanceNodeBackupConfigurationState? state = null, CustomResourceOptions? options = null)
        {
            return new BdsInstanceNodeBackupConfiguration(name, id, state, options);
        }
    }

    public sealed class BdsInstanceNodeBackupConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) Incremental backup type includes only the changes since the last backup. Full backup type includes all changes since the volume was created.
        /// </summary>
        [Input("backupType")]
        public Input<string>? BackupType { get; set; }

        /// <summary>
        /// The OCID of the cluster.
        /// </summary>
        [Input("bdsInstanceId", required: true)]
        public Input<string> BdsInstanceId { get; set; } = null!;

        /// <summary>
        /// (Updatable) A user-friendly name. Only ASCII alphanumeric characters with no spaces allowed. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// (Updatable) Details of the type of level used to trigger the creation of a new node backup configuration or node replacement configuration.
        /// </summary>
        [Input("levelTypeDetails", required: true)]
        public Input<Inputs.BdsInstanceNodeBackupConfigurationLevelTypeDetailsArgs> LevelTypeDetails { get; set; } = null!;

        /// <summary>
        /// (Updatable) Number of backup copies to retain.
        /// </summary>
        [Input("numberOfBackupsToRetain")]
        public Input<int>? NumberOfBackupsToRetain { get; set; }

        /// <summary>
        /// (Updatable) Day/time recurrence (specified following RFC 5545) at which to trigger the backup process. Currently only DAILY, WEEKLY and MONTHLY frequency is supported. Days of the week are specified using BYDAY field. Time of the day is specified using BYHOUR. Other fields are not supported.
        /// </summary>
        [Input("schedule", required: true)]
        public Input<string> Schedule { get; set; } = null!;

        /// <summary>
        /// (Updatable) The time zone of the execution schedule, in IANA time zone database name format
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("timezone")]
        public Input<string>? Timezone { get; set; }

        public BdsInstanceNodeBackupConfigurationArgs()
        {
        }
        public static new BdsInstanceNodeBackupConfigurationArgs Empty => new BdsInstanceNodeBackupConfigurationArgs();
    }

    public sealed class BdsInstanceNodeBackupConfigurationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) Incremental backup type includes only the changes since the last backup. Full backup type includes all changes since the volume was created.
        /// </summary>
        [Input("backupType")]
        public Input<string>? BackupType { get; set; }

        /// <summary>
        /// The OCID of the cluster.
        /// </summary>
        [Input("bdsInstanceId")]
        public Input<string>? BdsInstanceId { get; set; }

        /// <summary>
        /// (Updatable) A user-friendly name. Only ASCII alphanumeric characters with no spaces allowed. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// (Updatable) Details of the type of level used to trigger the creation of a new node backup configuration or node replacement configuration.
        /// </summary>
        [Input("levelTypeDetails")]
        public Input<Inputs.BdsInstanceNodeBackupConfigurationLevelTypeDetailsGetArgs>? LevelTypeDetails { get; set; }

        /// <summary>
        /// (Updatable) Number of backup copies to retain.
        /// </summary>
        [Input("numberOfBackupsToRetain")]
        public Input<int>? NumberOfBackupsToRetain { get; set; }

        /// <summary>
        /// (Updatable) Day/time recurrence (specified following RFC 5545) at which to trigger the backup process. Currently only DAILY, WEEKLY and MONTHLY frequency is supported. Days of the week are specified using BYDAY field. Time of the day is specified using BYHOUR. Other fields are not supported.
        /// </summary>
        [Input("schedule")]
        public Input<string>? Schedule { get; set; }

        /// <summary>
        /// The state of the NodeBackupConfiguration.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The time the NodeBackupConfiguration was created, shown as an RFC 3339 formatted datetime string.
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The time the NodeBackupConfiguration was updated, shown as an RFC 3339 formatted datetime string.
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        /// <summary>
        /// (Updatable) The time zone of the execution schedule, in IANA time zone database name format
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("timezone")]
        public Input<string>? Timezone { get; set; }

        public BdsInstanceNodeBackupConfigurationState()
        {
        }
        public static new BdsInstanceNodeBackupConfigurationState Empty => new BdsInstanceNodeBackupConfigurationState();
    }
}
