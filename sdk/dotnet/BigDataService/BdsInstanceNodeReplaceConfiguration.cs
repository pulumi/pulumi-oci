// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.BigDataService
{
    /// <summary>
    /// This resource provides the Bds Instance Node Replace Configuration resource in Oracle Cloud Infrastructure Big Data Service service.
    /// 
    /// Add a nodeReplaceConfigurations to the cluster.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testBdsInstanceNodeReplaceConfiguration = new Oci.BigDataService.BdsInstanceNodeReplaceConfiguration("test_bds_instance_node_replace_configuration", new()
    ///     {
    ///         BdsInstanceId = testBdsInstance.Id,
    ///         ClusterAdminPassword = bdsInstanceNodeReplaceConfigurationClusterAdminPassword,
    ///         DurationInMinutes = bdsInstanceNodeReplaceConfigurationDurationInMinutes,
    ///         LevelTypeDetails = new Oci.BigDataService.Inputs.BdsInstanceNodeReplaceConfigurationLevelTypeDetailsArgs
    ///         {
    ///             LevelType = bdsInstanceNodeReplaceConfigurationLevelTypeDetailsLevelType,
    ///             NodeHostName = bdsInstanceNodeReplaceConfigurationLevelTypeDetailsNodeHostName,
    ///             NodeType = bdsInstanceNodeReplaceConfigurationLevelTypeDetailsNodeType,
    ///         },
    ///         MetricType = bdsInstanceNodeReplaceConfigurationMetricType,
    ///         DisplayName = bdsInstanceNodeReplaceConfigurationDisplayName,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// BdsInstanceNodeReplaceConfigurations can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:BigDataService/bdsInstanceNodeReplaceConfiguration:BdsInstanceNodeReplaceConfiguration test_bds_instance_node_replace_configuration "bdsInstances/{bdsInstanceId}/nodeReplaceConfigurations/{nodeReplaceConfigurationId}"
    /// ```
    /// </summary>
    [OciResourceType("oci:BigDataService/bdsInstanceNodeReplaceConfiguration:BdsInstanceNodeReplaceConfiguration")]
    public partial class BdsInstanceNodeReplaceConfiguration : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The OCID of the cluster.
        /// </summary>
        [Output("bdsInstanceId")]
        public Output<string> BdsInstanceId { get; private set; } = null!;

        /// <summary>
        /// Base-64 encoded password for the cluster admin user.
        /// </summary>
        [Output("clusterAdminPassword")]
        public Output<string> ClusterAdminPassword { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A user-friendly name. Only ASCII alphanumeric characters with no spaces allowed. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) This value is the minimum period of time to wait before triggering node replacement. The value is in minutes.
        /// </summary>
        [Output("durationInMinutes")]
        public Output<int> DurationInMinutes { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Details of the type of level used to trigger the creation of a new node backup configuration or node replacement configuration.
        /// </summary>
        [Output("levelTypeDetails")]
        public Output<Outputs.BdsInstanceNodeReplaceConfigurationLevelTypeDetails> LevelTypeDetails { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Type of compute instance health metric to use for node replacement
        /// </summary>
        [Output("metricType")]
        public Output<string> MetricType { get; private set; } = null!;

        /// <summary>
        /// The state of the NodeReplaceConfiguration.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The time the NodeReplaceConfiguration was created, shown as an RFC 3339 formatted datetime string.
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The time the NodeReplaceConfiguration was updated, shown as an RFC 3339 formatted datetime string.
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;


        /// <summary>
        /// Create a BdsInstanceNodeReplaceConfiguration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BdsInstanceNodeReplaceConfiguration(string name, BdsInstanceNodeReplaceConfigurationArgs args, CustomResourceOptions? options = null)
            : base("oci:BigDataService/bdsInstanceNodeReplaceConfiguration:BdsInstanceNodeReplaceConfiguration", name, args ?? new BdsInstanceNodeReplaceConfigurationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BdsInstanceNodeReplaceConfiguration(string name, Input<string> id, BdsInstanceNodeReplaceConfigurationState? state = null, CustomResourceOptions? options = null)
            : base("oci:BigDataService/bdsInstanceNodeReplaceConfiguration:BdsInstanceNodeReplaceConfiguration", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "clusterAdminPassword",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BdsInstanceNodeReplaceConfiguration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BdsInstanceNodeReplaceConfiguration Get(string name, Input<string> id, BdsInstanceNodeReplaceConfigurationState? state = null, CustomResourceOptions? options = null)
        {
            return new BdsInstanceNodeReplaceConfiguration(name, id, state, options);
        }
    }

    public sealed class BdsInstanceNodeReplaceConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The OCID of the cluster.
        /// </summary>
        [Input("bdsInstanceId", required: true)]
        public Input<string> BdsInstanceId { get; set; } = null!;

        [Input("clusterAdminPassword", required: true)]
        private Input<string>? _clusterAdminPassword;

        /// <summary>
        /// Base-64 encoded password for the cluster admin user.
        /// </summary>
        public Input<string>? ClusterAdminPassword
        {
            get => _clusterAdminPassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _clusterAdminPassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// (Updatable) A user-friendly name. Only ASCII alphanumeric characters with no spaces allowed. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// (Updatable) This value is the minimum period of time to wait before triggering node replacement. The value is in minutes.
        /// </summary>
        [Input("durationInMinutes", required: true)]
        public Input<int> DurationInMinutes { get; set; } = null!;

        /// <summary>
        /// (Updatable) Details of the type of level used to trigger the creation of a new node backup configuration or node replacement configuration.
        /// </summary>
        [Input("levelTypeDetails", required: true)]
        public Input<Inputs.BdsInstanceNodeReplaceConfigurationLevelTypeDetailsArgs> LevelTypeDetails { get; set; } = null!;

        /// <summary>
        /// (Updatable) Type of compute instance health metric to use for node replacement
        /// </summary>
        [Input("metricType", required: true)]
        public Input<string> MetricType { get; set; } = null!;

        public BdsInstanceNodeReplaceConfigurationArgs()
        {
        }
        public static new BdsInstanceNodeReplaceConfigurationArgs Empty => new BdsInstanceNodeReplaceConfigurationArgs();
    }

    public sealed class BdsInstanceNodeReplaceConfigurationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The OCID of the cluster.
        /// </summary>
        [Input("bdsInstanceId")]
        public Input<string>? BdsInstanceId { get; set; }

        [Input("clusterAdminPassword")]
        private Input<string>? _clusterAdminPassword;

        /// <summary>
        /// Base-64 encoded password for the cluster admin user.
        /// </summary>
        public Input<string>? ClusterAdminPassword
        {
            get => _clusterAdminPassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _clusterAdminPassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// (Updatable) A user-friendly name. Only ASCII alphanumeric characters with no spaces allowed. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// (Updatable) This value is the minimum period of time to wait before triggering node replacement. The value is in minutes.
        /// </summary>
        [Input("durationInMinutes")]
        public Input<int>? DurationInMinutes { get; set; }

        /// <summary>
        /// (Updatable) Details of the type of level used to trigger the creation of a new node backup configuration or node replacement configuration.
        /// </summary>
        [Input("levelTypeDetails")]
        public Input<Inputs.BdsInstanceNodeReplaceConfigurationLevelTypeDetailsGetArgs>? LevelTypeDetails { get; set; }

        /// <summary>
        /// (Updatable) Type of compute instance health metric to use for node replacement
        /// </summary>
        [Input("metricType")]
        public Input<string>? MetricType { get; set; }

        /// <summary>
        /// The state of the NodeReplaceConfiguration.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The time the NodeReplaceConfiguration was created, shown as an RFC 3339 formatted datetime string.
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The time the NodeReplaceConfiguration was updated, shown as an RFC 3339 formatted datetime string.
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        public BdsInstanceNodeReplaceConfigurationState()
        {
        }
        public static new BdsInstanceNodeReplaceConfigurationState Empty => new BdsInstanceNodeReplaceConfigurationState();
    }
}
