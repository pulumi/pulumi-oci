// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.BigDataService
{
    public static class GetBdsInstanceIdentityConfiguration
    {
        /// <summary>
        /// This data source provides details about a specific Bds Instance Identity Configuration resource in Oracle Cloud Infrastructure Big Data Service service.
        /// 
        /// Get details of one identity config on the cluster
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testBdsInstanceIdentityConfiguration = Oci.BigDataService.GetBdsInstanceIdentityConfiguration.Invoke(new()
        ///     {
        ///         BdsInstanceId = testBdsInstance.Id,
        ///         IdentityConfigurationId = testConfiguration.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetBdsInstanceIdentityConfigurationResult> InvokeAsync(GetBdsInstanceIdentityConfigurationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBdsInstanceIdentityConfigurationResult>("oci:BigDataService/getBdsInstanceIdentityConfiguration:getBdsInstanceIdentityConfiguration", args ?? new GetBdsInstanceIdentityConfigurationArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Bds Instance Identity Configuration resource in Oracle Cloud Infrastructure Big Data Service service.
        /// 
        /// Get details of one identity config on the cluster
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testBdsInstanceIdentityConfiguration = Oci.BigDataService.GetBdsInstanceIdentityConfiguration.Invoke(new()
        ///     {
        ///         BdsInstanceId = testBdsInstance.Id,
        ///         IdentityConfigurationId = testConfiguration.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetBdsInstanceIdentityConfigurationResult> Invoke(GetBdsInstanceIdentityConfigurationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBdsInstanceIdentityConfigurationResult>("oci:BigDataService/getBdsInstanceIdentityConfiguration:getBdsInstanceIdentityConfiguration", args ?? new GetBdsInstanceIdentityConfigurationInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Bds Instance Identity Configuration resource in Oracle Cloud Infrastructure Big Data Service service.
        /// 
        /// Get details of one identity config on the cluster
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testBdsInstanceIdentityConfiguration = Oci.BigDataService.GetBdsInstanceIdentityConfiguration.Invoke(new()
        ///     {
        ///         BdsInstanceId = testBdsInstance.Id,
        ///         IdentityConfigurationId = testConfiguration.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetBdsInstanceIdentityConfigurationResult> Invoke(GetBdsInstanceIdentityConfigurationInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetBdsInstanceIdentityConfigurationResult>("oci:BigDataService/getBdsInstanceIdentityConfiguration:getBdsInstanceIdentityConfiguration", args ?? new GetBdsInstanceIdentityConfigurationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBdsInstanceIdentityConfigurationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the cluster.
        /// </summary>
        [Input("bdsInstanceId", required: true)]
        public string BdsInstanceId { get; set; } = null!;

        /// <summary>
        /// The OCID of the identity configuration
        /// </summary>
        [Input("identityConfigurationId", required: true)]
        public string IdentityConfigurationId { get; set; } = null!;

        public GetBdsInstanceIdentityConfigurationArgs()
        {
        }
        public static new GetBdsInstanceIdentityConfigurationArgs Empty => new GetBdsInstanceIdentityConfigurationArgs();
    }

    public sealed class GetBdsInstanceIdentityConfigurationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the cluster.
        /// </summary>
        [Input("bdsInstanceId", required: true)]
        public Input<string> BdsInstanceId { get; set; } = null!;

        /// <summary>
        /// The OCID of the identity configuration
        /// </summary>
        [Input("identityConfigurationId", required: true)]
        public Input<string> IdentityConfigurationId { get; set; } = null!;

        public GetBdsInstanceIdentityConfigurationInvokeArgs()
        {
        }
        public static new GetBdsInstanceIdentityConfigurationInvokeArgs Empty => new GetBdsInstanceIdentityConfigurationInvokeArgs();
    }


    [OutputType]
    public sealed class GetBdsInstanceIdentityConfigurationResult
    {
        public readonly string ActivateIamUserSyncConfigurationTrigger;
        public readonly string ActivateUpstConfigurationTrigger;
        public readonly string BdsInstanceId;
        public readonly string ClusterAdminPassword;
        /// <summary>
        /// identity domain confidential application ID for the identity config
        /// </summary>
        public readonly string ConfidentialApplicationId;
        /// <summary>
        /// the display name of the identity configuration
        /// </summary>
        public readonly string DisplayName;
        public readonly ImmutableArray<Outputs.GetBdsInstanceIdentityConfigurationIamUserSyncConfigurationDetailResult> IamUserSyncConfigurationDetails;
        /// <summary>
        /// Information about the IAM user sync configuration.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBdsInstanceIdentityConfigurationIamUserSyncConfigurationResult> IamUserSyncConfigurations;
        /// <summary>
        /// The id of the identity config
        /// </summary>
        public readonly string Id;
        public readonly string IdentityConfigurationId;
        /// <summary>
        /// Identity domain to use for identity config
        /// </summary>
        public readonly string IdentityDomainId;
        public readonly string RefreshConfidentialApplicationTrigger;
        public readonly string RefreshUpstTokenExchangeKeytabTrigger;
        /// <summary>
        /// Lifecycle state of the UPST config
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Time when this UPST config was created, shown as an RFC 3339 formatted datetime string.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// Time when this UPST config was updated, shown as an RFC 3339 formatted datetime string.
        /// </summary>
        public readonly string TimeUpdated;
        public readonly ImmutableArray<Outputs.GetBdsInstanceIdentityConfigurationUpstConfigurationDetailResult> UpstConfigurationDetails;
        /// <summary>
        /// Information about the UPST configuration.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBdsInstanceIdentityConfigurationUpstConfigurationResult> UpstConfigurations;

        [OutputConstructor]
        private GetBdsInstanceIdentityConfigurationResult(
            string activateIamUserSyncConfigurationTrigger,

            string activateUpstConfigurationTrigger,

            string bdsInstanceId,

            string clusterAdminPassword,

            string confidentialApplicationId,

            string displayName,

            ImmutableArray<Outputs.GetBdsInstanceIdentityConfigurationIamUserSyncConfigurationDetailResult> iamUserSyncConfigurationDetails,

            ImmutableArray<Outputs.GetBdsInstanceIdentityConfigurationIamUserSyncConfigurationResult> iamUserSyncConfigurations,

            string id,

            string identityConfigurationId,

            string identityDomainId,

            string refreshConfidentialApplicationTrigger,

            string refreshUpstTokenExchangeKeytabTrigger,

            string state,

            string timeCreated,

            string timeUpdated,

            ImmutableArray<Outputs.GetBdsInstanceIdentityConfigurationUpstConfigurationDetailResult> upstConfigurationDetails,

            ImmutableArray<Outputs.GetBdsInstanceIdentityConfigurationUpstConfigurationResult> upstConfigurations)
        {
            ActivateIamUserSyncConfigurationTrigger = activateIamUserSyncConfigurationTrigger;
            ActivateUpstConfigurationTrigger = activateUpstConfigurationTrigger;
            BdsInstanceId = bdsInstanceId;
            ClusterAdminPassword = clusterAdminPassword;
            ConfidentialApplicationId = confidentialApplicationId;
            DisplayName = displayName;
            IamUserSyncConfigurationDetails = iamUserSyncConfigurationDetails;
            IamUserSyncConfigurations = iamUserSyncConfigurations;
            Id = id;
            IdentityConfigurationId = identityConfigurationId;
            IdentityDomainId = identityDomainId;
            RefreshConfidentialApplicationTrigger = refreshConfidentialApplicationTrigger;
            RefreshUpstTokenExchangeKeytabTrigger = refreshUpstTokenExchangeKeytabTrigger;
            State = state;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            UpstConfigurationDetails = upstConfigurationDetails;
            UpstConfigurations = upstConfigurations;
        }
    }
}
