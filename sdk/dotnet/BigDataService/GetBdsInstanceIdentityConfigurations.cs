// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.BigDataService
{
    public static class GetBdsInstanceIdentityConfigurations
    {
        /// <summary>
        /// This data source provides the list of Bds Instance Identity Configurations in Oracle Cloud Infrastructure Big Data Service service.
        /// 
        /// Returns a list of all identity configurations associated with this Big Data Service cluster.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testBdsInstanceIdentityConfigurations = Oci.BigDataService.GetBdsInstanceIdentityConfigurations.Invoke(new()
        ///     {
        ///         BdsInstanceId = testBdsInstance.Id,
        ///         CompartmentId = compartmentId,
        ///         DisplayName = bdsInstanceIdentityConfigurationDisplayName,
        ///         State = bdsInstanceIdentityConfigurationState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetBdsInstanceIdentityConfigurationsResult> InvokeAsync(GetBdsInstanceIdentityConfigurationsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBdsInstanceIdentityConfigurationsResult>("oci:BigDataService/getBdsInstanceIdentityConfigurations:getBdsInstanceIdentityConfigurations", args ?? new GetBdsInstanceIdentityConfigurationsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Bds Instance Identity Configurations in Oracle Cloud Infrastructure Big Data Service service.
        /// 
        /// Returns a list of all identity configurations associated with this Big Data Service cluster.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testBdsInstanceIdentityConfigurations = Oci.BigDataService.GetBdsInstanceIdentityConfigurations.Invoke(new()
        ///     {
        ///         BdsInstanceId = testBdsInstance.Id,
        ///         CompartmentId = compartmentId,
        ///         DisplayName = bdsInstanceIdentityConfigurationDisplayName,
        ///         State = bdsInstanceIdentityConfigurationState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetBdsInstanceIdentityConfigurationsResult> Invoke(GetBdsInstanceIdentityConfigurationsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBdsInstanceIdentityConfigurationsResult>("oci:BigDataService/getBdsInstanceIdentityConfigurations:getBdsInstanceIdentityConfigurations", args ?? new GetBdsInstanceIdentityConfigurationsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Bds Instance Identity Configurations in Oracle Cloud Infrastructure Big Data Service service.
        /// 
        /// Returns a list of all identity configurations associated with this Big Data Service cluster.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testBdsInstanceIdentityConfigurations = Oci.BigDataService.GetBdsInstanceIdentityConfigurations.Invoke(new()
        ///     {
        ///         BdsInstanceId = testBdsInstance.Id,
        ///         CompartmentId = compartmentId,
        ///         DisplayName = bdsInstanceIdentityConfigurationDisplayName,
        ///         State = bdsInstanceIdentityConfigurationState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetBdsInstanceIdentityConfigurationsResult> Invoke(GetBdsInstanceIdentityConfigurationsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetBdsInstanceIdentityConfigurationsResult>("oci:BigDataService/getBdsInstanceIdentityConfigurations:getBdsInstanceIdentityConfigurations", args ?? new GetBdsInstanceIdentityConfigurationsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBdsInstanceIdentityConfigurationsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the cluster.
        /// </summary>
        [Input("bdsInstanceId", required: true)]
        public string BdsInstanceId { get; set; } = null!;

        /// <summary>
        /// The OCID of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetBdsInstanceIdentityConfigurationsFilterArgs>? _filters;
        public List<Inputs.GetBdsInstanceIdentityConfigurationsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetBdsInstanceIdentityConfigurationsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The state of the identity config
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetBdsInstanceIdentityConfigurationsArgs()
        {
        }
        public static new GetBdsInstanceIdentityConfigurationsArgs Empty => new GetBdsInstanceIdentityConfigurationsArgs();
    }

    public sealed class GetBdsInstanceIdentityConfigurationsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the cluster.
        /// </summary>
        [Input("bdsInstanceId", required: true)]
        public Input<string> BdsInstanceId { get; set; } = null!;

        /// <summary>
        /// The OCID of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetBdsInstanceIdentityConfigurationsFilterInputArgs>? _filters;
        public InputList<Inputs.GetBdsInstanceIdentityConfigurationsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetBdsInstanceIdentityConfigurationsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The state of the identity config
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetBdsInstanceIdentityConfigurationsInvokeArgs()
        {
        }
        public static new GetBdsInstanceIdentityConfigurationsInvokeArgs Empty => new GetBdsInstanceIdentityConfigurationsInvokeArgs();
    }


    [OutputType]
    public sealed class GetBdsInstanceIdentityConfigurationsResult
    {
        public readonly string BdsInstanceId;
        public readonly string CompartmentId;
        /// <summary>
        /// the display name of the identity configuration
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetBdsInstanceIdentityConfigurationsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of identity_configurations.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBdsInstanceIdentityConfigurationsIdentityConfigurationResult> IdentityConfigurations;
        /// <summary>
        /// Lifecycle state of the UPST config
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetBdsInstanceIdentityConfigurationsResult(
            string bdsInstanceId,

            string compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetBdsInstanceIdentityConfigurationsFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetBdsInstanceIdentityConfigurationsIdentityConfigurationResult> identityConfigurations,

            string? state)
        {
            BdsInstanceId = bdsInstanceId;
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            IdentityConfigurations = identityConfigurations;
            State = state;
        }
    }
}
