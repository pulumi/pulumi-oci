// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.BigDataService
{
    public static class GetBdsInstanceMetastoreConfig
    {
        /// <summary>
        /// This data source provides details about a specific Bds Instance Metastore Config resource in Oracle Cloud Infrastructure Big Data Service service.
        /// 
        /// Returns the BDS Metastore configuration information for the given ID.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testBdsInstanceMetastoreConfig = Oci.BigDataService.GetBdsInstanceMetastoreConfig.Invoke(new()
        ///     {
        ///         BdsInstanceId = oci_bds_bds_instance.Test_bds_instance.Id,
        ///         MetastoreConfigId = oci_apm_config_config.Test_config.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetBdsInstanceMetastoreConfigResult> InvokeAsync(GetBdsInstanceMetastoreConfigArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBdsInstanceMetastoreConfigResult>("oci:BigDataService/getBdsInstanceMetastoreConfig:getBdsInstanceMetastoreConfig", args ?? new GetBdsInstanceMetastoreConfigArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Bds Instance Metastore Config resource in Oracle Cloud Infrastructure Big Data Service service.
        /// 
        /// Returns the BDS Metastore configuration information for the given ID.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testBdsInstanceMetastoreConfig = Oci.BigDataService.GetBdsInstanceMetastoreConfig.Invoke(new()
        ///     {
        ///         BdsInstanceId = oci_bds_bds_instance.Test_bds_instance.Id,
        ///         MetastoreConfigId = oci_apm_config_config.Test_config.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetBdsInstanceMetastoreConfigResult> Invoke(GetBdsInstanceMetastoreConfigInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBdsInstanceMetastoreConfigResult>("oci:BigDataService/getBdsInstanceMetastoreConfig:getBdsInstanceMetastoreConfig", args ?? new GetBdsInstanceMetastoreConfigInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBdsInstanceMetastoreConfigArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the cluster.
        /// </summary>
        [Input("bdsInstanceId", required: true)]
        public string BdsInstanceId { get; set; } = null!;

        /// <summary>
        /// The metastore configuration ID
        /// </summary>
        [Input("metastoreConfigId", required: true)]
        public string MetastoreConfigId { get; set; } = null!;

        public GetBdsInstanceMetastoreConfigArgs()
        {
        }
        public static new GetBdsInstanceMetastoreConfigArgs Empty => new GetBdsInstanceMetastoreConfigArgs();
    }

    public sealed class GetBdsInstanceMetastoreConfigInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the cluster.
        /// </summary>
        [Input("bdsInstanceId", required: true)]
        public Input<string> BdsInstanceId { get; set; } = null!;

        /// <summary>
        /// The metastore configuration ID
        /// </summary>
        [Input("metastoreConfigId", required: true)]
        public Input<string> MetastoreConfigId { get; set; } = null!;

        public GetBdsInstanceMetastoreConfigInvokeArgs()
        {
        }
        public static new GetBdsInstanceMetastoreConfigInvokeArgs Empty => new GetBdsInstanceMetastoreConfigInvokeArgs();
    }


    [OutputType]
    public sealed class GetBdsInstanceMetastoreConfigResult
    {
        public readonly int ActivateTrigger;
        /// <summary>
        /// The ID of BDS API Key used for metastore configuration. Set only if metastore's type is EXTERNAL.
        /// </summary>
        public readonly string BdsApiKeyId;
        public readonly string BdsApiKeyPassphrase;
        public readonly string BdsInstanceId;
        public readonly string ClusterAdminPassword;
        /// <summary>
        /// The display name of metastore configuration
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// The ID of the metastore configuration
        /// </summary>
        public readonly string Id;
        public readonly string MetastoreConfigId;
        /// <summary>
        /// The OCID of the Data Catalog metastore. Set only if metastore's type is EXTERNAL.
        /// </summary>
        public readonly string MetastoreId;
        /// <summary>
        /// The type of the metastore in the metastore configuration.
        /// </summary>
        public readonly string MetastoreType;
        /// <summary>
        /// the lifecycle state of the metastore configuration.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The time when the configuration was created, shown as an RFC 3339 formatted datetime string.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time when the configuration was updated, shown as an RFC 3339 formatted datetime string.
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetBdsInstanceMetastoreConfigResult(
            int activateTrigger,

            string bdsApiKeyId,

            string bdsApiKeyPassphrase,

            string bdsInstanceId,

            string clusterAdminPassword,

            string displayName,

            string id,

            string metastoreConfigId,

            string metastoreId,

            string metastoreType,

            string state,

            string timeCreated,

            string timeUpdated)
        {
            ActivateTrigger = activateTrigger;
            BdsApiKeyId = bdsApiKeyId;
            BdsApiKeyPassphrase = bdsApiKeyPassphrase;
            BdsInstanceId = bdsInstanceId;
            ClusterAdminPassword = clusterAdminPassword;
            DisplayName = displayName;
            Id = id;
            MetastoreConfigId = metastoreConfigId;
            MetastoreId = metastoreId;
            MetastoreType = metastoreType;
            State = state;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
