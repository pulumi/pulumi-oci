// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.BigDataService
{
    public static class GetBdsInstanceNodeBackupConfiguration
    {
        /// <summary>
        /// This data source provides details about a specific Bds Instance Node Backup Configuration resource in Oracle Cloud Infrastructure Big Data Service service.
        /// 
        /// Returns details of the NodeBackupConfiguration identified by the given ID.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testBdsInstanceNodeBackupConfiguration = Oci.BigDataService.GetBdsInstanceNodeBackupConfiguration.Invoke(new()
        ///     {
        ///         BdsInstanceId = testBdsInstance.Id,
        ///         NodeBackupConfigurationId = testConfiguration.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetBdsInstanceNodeBackupConfigurationResult> InvokeAsync(GetBdsInstanceNodeBackupConfigurationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBdsInstanceNodeBackupConfigurationResult>("oci:BigDataService/getBdsInstanceNodeBackupConfiguration:getBdsInstanceNodeBackupConfiguration", args ?? new GetBdsInstanceNodeBackupConfigurationArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Bds Instance Node Backup Configuration resource in Oracle Cloud Infrastructure Big Data Service service.
        /// 
        /// Returns details of the NodeBackupConfiguration identified by the given ID.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testBdsInstanceNodeBackupConfiguration = Oci.BigDataService.GetBdsInstanceNodeBackupConfiguration.Invoke(new()
        ///     {
        ///         BdsInstanceId = testBdsInstance.Id,
        ///         NodeBackupConfigurationId = testConfiguration.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetBdsInstanceNodeBackupConfigurationResult> Invoke(GetBdsInstanceNodeBackupConfigurationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBdsInstanceNodeBackupConfigurationResult>("oci:BigDataService/getBdsInstanceNodeBackupConfiguration:getBdsInstanceNodeBackupConfiguration", args ?? new GetBdsInstanceNodeBackupConfigurationInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Bds Instance Node Backup Configuration resource in Oracle Cloud Infrastructure Big Data Service service.
        /// 
        /// Returns details of the NodeBackupConfiguration identified by the given ID.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testBdsInstanceNodeBackupConfiguration = Oci.BigDataService.GetBdsInstanceNodeBackupConfiguration.Invoke(new()
        ///     {
        ///         BdsInstanceId = testBdsInstance.Id,
        ///         NodeBackupConfigurationId = testConfiguration.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetBdsInstanceNodeBackupConfigurationResult> Invoke(GetBdsInstanceNodeBackupConfigurationInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetBdsInstanceNodeBackupConfigurationResult>("oci:BigDataService/getBdsInstanceNodeBackupConfiguration:getBdsInstanceNodeBackupConfiguration", args ?? new GetBdsInstanceNodeBackupConfigurationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBdsInstanceNodeBackupConfigurationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the cluster.
        /// </summary>
        [Input("bdsInstanceId", required: true)]
        public string BdsInstanceId { get; set; } = null!;

        /// <summary>
        /// Unique Oracle-assigned identifier of the NodeBackupConfiguration.
        /// </summary>
        [Input("nodeBackupConfigurationId", required: true)]
        public string NodeBackupConfigurationId { get; set; } = null!;

        public GetBdsInstanceNodeBackupConfigurationArgs()
        {
        }
        public static new GetBdsInstanceNodeBackupConfigurationArgs Empty => new GetBdsInstanceNodeBackupConfigurationArgs();
    }

    public sealed class GetBdsInstanceNodeBackupConfigurationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the cluster.
        /// </summary>
        [Input("bdsInstanceId", required: true)]
        public Input<string> BdsInstanceId { get; set; } = null!;

        /// <summary>
        /// Unique Oracle-assigned identifier of the NodeBackupConfiguration.
        /// </summary>
        [Input("nodeBackupConfigurationId", required: true)]
        public Input<string> NodeBackupConfigurationId { get; set; } = null!;

        public GetBdsInstanceNodeBackupConfigurationInvokeArgs()
        {
        }
        public static new GetBdsInstanceNodeBackupConfigurationInvokeArgs Empty => new GetBdsInstanceNodeBackupConfigurationInvokeArgs();
    }


    [OutputType]
    public sealed class GetBdsInstanceNodeBackupConfigurationResult
    {
        /// <summary>
        /// Incremental backup type includes only the changes since the last backup. Full backup type includes all changes since the volume was created.
        /// </summary>
        public readonly string BackupType;
        /// <summary>
        /// The OCID of the bdsInstance which is the parent resource id.
        /// </summary>
        public readonly string BdsInstanceId;
        /// <summary>
        /// A user-friendly name. Only ASCII alphanumeric characters with no spaces allowed. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// The unique identifier for the NodeBackupConfiguration.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Details of the type of level used to trigger the creation of a new node backup configuration or node replacement configuration.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBdsInstanceNodeBackupConfigurationLevelTypeDetailResult> LevelTypeDetails;
        public readonly string NodeBackupConfigurationId;
        /// <summary>
        /// Number of backup copies to retain.
        /// </summary>
        public readonly int NumberOfBackupsToRetain;
        /// <summary>
        /// Day/time recurrence (specified following RFC 5545) at which to trigger the backup process. Currently only DAILY, WEEKLY and MONTHLY frequency is supported. Days of the week are specified using BYDAY field. Time of the day is specified using BYHOUR. Other fields are not supported.
        /// </summary>
        public readonly string Schedule;
        /// <summary>
        /// The state of the NodeBackupConfiguration.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The time the NodeBackupConfiguration was created, shown as an RFC 3339 formatted datetime string.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time the NodeBackupConfiguration was updated, shown as an RFC 3339 formatted datetime string.
        /// </summary>
        public readonly string TimeUpdated;
        /// <summary>
        /// The time zone of the execution schedule, in IANA time zone database name format
        /// </summary>
        public readonly string Timezone;

        [OutputConstructor]
        private GetBdsInstanceNodeBackupConfigurationResult(
            string backupType,

            string bdsInstanceId,

            string displayName,

            string id,

            ImmutableArray<Outputs.GetBdsInstanceNodeBackupConfigurationLevelTypeDetailResult> levelTypeDetails,

            string nodeBackupConfigurationId,

            int numberOfBackupsToRetain,

            string schedule,

            string state,

            string timeCreated,

            string timeUpdated,

            string timezone)
        {
            BackupType = backupType;
            BdsInstanceId = bdsInstanceId;
            DisplayName = displayName;
            Id = id;
            LevelTypeDetails = levelTypeDetails;
            NodeBackupConfigurationId = nodeBackupConfigurationId;
            NumberOfBackupsToRetain = numberOfBackupsToRetain;
            Schedule = schedule;
            State = state;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            Timezone = timezone;
        }
    }
}
