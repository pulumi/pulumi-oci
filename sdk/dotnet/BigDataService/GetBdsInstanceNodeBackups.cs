// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.BigDataService
{
    public static class GetBdsInstanceNodeBackups
    {
        /// <summary>
        /// This data source provides the list of Bds Instance Node Backups in Oracle Cloud Infrastructure Big Data Service service.
        /// 
        /// Returns information about the node Backups.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testBdsInstanceNodeBackups = Oci.BigDataService.GetBdsInstanceNodeBackups.Invoke(new()
        ///     {
        ///         BdsInstanceId = testBdsInstance.Id,
        ///         DisplayName = bdsInstanceNodeBackupDisplayName,
        ///         NodeHostName = bdsInstanceNodeBackupNodeHostName,
        ///         State = bdsInstanceNodeBackupState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetBdsInstanceNodeBackupsResult> InvokeAsync(GetBdsInstanceNodeBackupsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBdsInstanceNodeBackupsResult>("oci:BigDataService/getBdsInstanceNodeBackups:getBdsInstanceNodeBackups", args ?? new GetBdsInstanceNodeBackupsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Bds Instance Node Backups in Oracle Cloud Infrastructure Big Data Service service.
        /// 
        /// Returns information about the node Backups.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testBdsInstanceNodeBackups = Oci.BigDataService.GetBdsInstanceNodeBackups.Invoke(new()
        ///     {
        ///         BdsInstanceId = testBdsInstance.Id,
        ///         DisplayName = bdsInstanceNodeBackupDisplayName,
        ///         NodeHostName = bdsInstanceNodeBackupNodeHostName,
        ///         State = bdsInstanceNodeBackupState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetBdsInstanceNodeBackupsResult> Invoke(GetBdsInstanceNodeBackupsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBdsInstanceNodeBackupsResult>("oci:BigDataService/getBdsInstanceNodeBackups:getBdsInstanceNodeBackups", args ?? new GetBdsInstanceNodeBackupsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Bds Instance Node Backups in Oracle Cloud Infrastructure Big Data Service service.
        /// 
        /// Returns information about the node Backups.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testBdsInstanceNodeBackups = Oci.BigDataService.GetBdsInstanceNodeBackups.Invoke(new()
        ///     {
        ///         BdsInstanceId = testBdsInstance.Id,
        ///         DisplayName = bdsInstanceNodeBackupDisplayName,
        ///         NodeHostName = bdsInstanceNodeBackupNodeHostName,
        ///         State = bdsInstanceNodeBackupState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetBdsInstanceNodeBackupsResult> Invoke(GetBdsInstanceNodeBackupsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetBdsInstanceNodeBackupsResult>("oci:BigDataService/getBdsInstanceNodeBackups:getBdsInstanceNodeBackups", args ?? new GetBdsInstanceNodeBackupsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBdsInstanceNodeBackupsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the cluster.
        /// </summary>
        [Input("bdsInstanceId", required: true)]
        public string BdsInstanceId { get; set; } = null!;

        /// <summary>
        /// The display name belonged to the node backup.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetBdsInstanceNodeBackupsFilterArgs>? _filters;
        public List<Inputs.GetBdsInstanceNodeBackupsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetBdsInstanceNodeBackupsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The node host name belonged to a node that has a node backup.
        /// </summary>
        [Input("nodeHostName")]
        public string? NodeHostName { get; set; }

        /// <summary>
        /// The state of the Node's Backup.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetBdsInstanceNodeBackupsArgs()
        {
        }
        public static new GetBdsInstanceNodeBackupsArgs Empty => new GetBdsInstanceNodeBackupsArgs();
    }

    public sealed class GetBdsInstanceNodeBackupsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the cluster.
        /// </summary>
        [Input("bdsInstanceId", required: true)]
        public Input<string> BdsInstanceId { get; set; } = null!;

        /// <summary>
        /// The display name belonged to the node backup.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetBdsInstanceNodeBackupsFilterInputArgs>? _filters;
        public InputList<Inputs.GetBdsInstanceNodeBackupsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetBdsInstanceNodeBackupsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The node host name belonged to a node that has a node backup.
        /// </summary>
        [Input("nodeHostName")]
        public Input<string>? NodeHostName { get; set; }

        /// <summary>
        /// The state of the Node's Backup.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetBdsInstanceNodeBackupsInvokeArgs()
        {
        }
        public static new GetBdsInstanceNodeBackupsInvokeArgs Empty => new GetBdsInstanceNodeBackupsInvokeArgs();
    }


    [OutputType]
    public sealed class GetBdsInstanceNodeBackupsResult
    {
        public readonly string BdsInstanceId;
        /// <summary>
        /// BDS generated name for the backup. Format is nodeHostName_timeCreated.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetBdsInstanceNodeBackupsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of node_backups.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBdsInstanceNodeBackupsNodeBackupResult> NodeBackups;
        /// <summary>
        /// Host name of the node to which this backup belongs.
        /// </summary>
        public readonly string? NodeHostName;
        /// <summary>
        /// The state of the NodeBackup.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetBdsInstanceNodeBackupsResult(
            string bdsInstanceId,

            string? displayName,

            ImmutableArray<Outputs.GetBdsInstanceNodeBackupsFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetBdsInstanceNodeBackupsNodeBackupResult> nodeBackups,

            string? nodeHostName,

            string? state)
        {
            BdsInstanceId = bdsInstanceId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            NodeBackups = nodeBackups;
            NodeHostName = nodeHostName;
            State = state;
        }
    }
}
