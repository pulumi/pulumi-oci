// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.BigDataService
{
    public static class GetBdsInstancePatchHistories
    {
        /// <summary>
        /// This data source provides the list of Bds Instance Patch Histories in Oracle Cloud Infrastructure Big Data Service service.
        /// 
        /// List the patch history of this cluster.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testBdsInstancePatchHistories = Output.Create(Oci.BigDataService.GetBdsInstancePatchHistories.InvokeAsync(new Oci.BigDataService.GetBdsInstancePatchHistoriesArgs
        ///         {
        ///             BdsInstanceId = oci_bds_bds_instance.Test_bds_instance.Id,
        ///             PatchVersion = @var.Bds_instance_patch_history_patch_version,
        ///             State = @var.Bds_instance_patch_history_state,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetBdsInstancePatchHistoriesResult> InvokeAsync(GetBdsInstancePatchHistoriesArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetBdsInstancePatchHistoriesResult>("oci:BigDataService/getBdsInstancePatchHistories:getBdsInstancePatchHistories", args ?? new GetBdsInstancePatchHistoriesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Bds Instance Patch Histories in Oracle Cloud Infrastructure Big Data Service service.
        /// 
        /// List the patch history of this cluster.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testBdsInstancePatchHistories = Output.Create(Oci.BigDataService.GetBdsInstancePatchHistories.InvokeAsync(new Oci.BigDataService.GetBdsInstancePatchHistoriesArgs
        ///         {
        ///             BdsInstanceId = oci_bds_bds_instance.Test_bds_instance.Id,
        ///             PatchVersion = @var.Bds_instance_patch_history_patch_version,
        ///             State = @var.Bds_instance_patch_history_state,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetBdsInstancePatchHistoriesResult> Invoke(GetBdsInstancePatchHistoriesInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetBdsInstancePatchHistoriesResult>("oci:BigDataService/getBdsInstancePatchHistories:getBdsInstancePatchHistories", args ?? new GetBdsInstancePatchHistoriesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBdsInstancePatchHistoriesArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the cluster.
        /// </summary>
        [Input("bdsInstanceId", required: true)]
        public string BdsInstanceId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetBdsInstancePatchHistoriesFilterArgs>? _filters;
        public List<Inputs.GetBdsInstancePatchHistoriesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetBdsInstancePatchHistoriesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The version of the patch
        /// </summary>
        [Input("patchVersion")]
        public string? PatchVersion { get; set; }

        /// <summary>
        /// The status of the patch.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetBdsInstancePatchHistoriesArgs()
        {
        }
    }

    public sealed class GetBdsInstancePatchHistoriesInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the cluster.
        /// </summary>
        [Input("bdsInstanceId", required: true)]
        public Input<string> BdsInstanceId { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetBdsInstancePatchHistoriesFilterInputArgs>? _filters;
        public InputList<Inputs.GetBdsInstancePatchHistoriesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetBdsInstancePatchHistoriesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The version of the patch
        /// </summary>
        [Input("patchVersion")]
        public Input<string>? PatchVersion { get; set; }

        /// <summary>
        /// The status of the patch.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetBdsInstancePatchHistoriesInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetBdsInstancePatchHistoriesResult
    {
        public readonly string BdsInstanceId;
        public readonly ImmutableArray<Outputs.GetBdsInstancePatchHistoriesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of patch_histories.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBdsInstancePatchHistoriesPatchHistoryResult> PatchHistories;
        public readonly string? PatchVersion;
        /// <summary>
        /// The status of this patch.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetBdsInstancePatchHistoriesResult(
            string bdsInstanceId,

            ImmutableArray<Outputs.GetBdsInstancePatchHistoriesFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetBdsInstancePatchHistoriesPatchHistoryResult> patchHistories,

            string? patchVersion,

            string? state)
        {
            BdsInstanceId = bdsInstanceId;
            Filters = filters;
            Id = id;
            PatchHistories = patchHistories;
            PatchVersion = patchVersion;
            State = state;
        }
    }
}
