// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.BigDataService
{
    public static class GetBdsInstanceResourcePrincipalConfiguration
    {
        /// <summary>
        /// This data source provides details about a specific Bds Instance Resource Principal Configuration resource in Oracle Cloud Infrastructure Big Data Service service.
        /// 
        /// Returns details of the resourcePrincipalConfiguration identified by the given ID.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testBdsInstanceResourcePrincipalConfiguration = Oci.BigDataService.GetBdsInstanceResourcePrincipalConfiguration.Invoke(new()
        ///     {
        ///         BdsInstanceId = testBdsInstance.Id,
        ///         ResourcePrincipalConfigurationId = testConfiguration.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetBdsInstanceResourcePrincipalConfigurationResult> InvokeAsync(GetBdsInstanceResourcePrincipalConfigurationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBdsInstanceResourcePrincipalConfigurationResult>("oci:BigDataService/getBdsInstanceResourcePrincipalConfiguration:getBdsInstanceResourcePrincipalConfiguration", args ?? new GetBdsInstanceResourcePrincipalConfigurationArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Bds Instance Resource Principal Configuration resource in Oracle Cloud Infrastructure Big Data Service service.
        /// 
        /// Returns details of the resourcePrincipalConfiguration identified by the given ID.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testBdsInstanceResourcePrincipalConfiguration = Oci.BigDataService.GetBdsInstanceResourcePrincipalConfiguration.Invoke(new()
        ///     {
        ///         BdsInstanceId = testBdsInstance.Id,
        ///         ResourcePrincipalConfigurationId = testConfiguration.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetBdsInstanceResourcePrincipalConfigurationResult> Invoke(GetBdsInstanceResourcePrincipalConfigurationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBdsInstanceResourcePrincipalConfigurationResult>("oci:BigDataService/getBdsInstanceResourcePrincipalConfiguration:getBdsInstanceResourcePrincipalConfiguration", args ?? new GetBdsInstanceResourcePrincipalConfigurationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBdsInstanceResourcePrincipalConfigurationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the cluster.
        /// </summary>
        [Input("bdsInstanceId", required: true)]
        public string BdsInstanceId { get; set; } = null!;

        /// <summary>
        /// Unique Oracle-assigned identifier of the ResourcePrincipalConfiguration.
        /// </summary>
        [Input("resourcePrincipalConfigurationId", required: true)]
        public string ResourcePrincipalConfigurationId { get; set; } = null!;

        public GetBdsInstanceResourcePrincipalConfigurationArgs()
        {
        }
        public static new GetBdsInstanceResourcePrincipalConfigurationArgs Empty => new GetBdsInstanceResourcePrincipalConfigurationArgs();
    }

    public sealed class GetBdsInstanceResourcePrincipalConfigurationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the cluster.
        /// </summary>
        [Input("bdsInstanceId", required: true)]
        public Input<string> BdsInstanceId { get; set; } = null!;

        /// <summary>
        /// Unique Oracle-assigned identifier of the ResourcePrincipalConfiguration.
        /// </summary>
        [Input("resourcePrincipalConfigurationId", required: true)]
        public Input<string> ResourcePrincipalConfigurationId { get; set; } = null!;

        public GetBdsInstanceResourcePrincipalConfigurationInvokeArgs()
        {
        }
        public static new GetBdsInstanceResourcePrincipalConfigurationInvokeArgs Empty => new GetBdsInstanceResourcePrincipalConfigurationInvokeArgs();
    }


    [OutputType]
    public sealed class GetBdsInstanceResourcePrincipalConfigurationResult
    {
        /// <summary>
        /// The OCID of the bdsInstance which is the parent resource id.
        /// </summary>
        public readonly string BdsInstanceId;
        public readonly string ClusterAdminPassword;
        /// <summary>
        /// A user-friendly name. Only ASCII alphanumeric characters with no spaces allowed. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
        /// </summary>
        public readonly string DisplayName;
        public readonly int ForceRefreshResourcePrincipalTrigger;
        /// <summary>
        /// The id of the ResourcePrincipalConfiguration.
        /// </summary>
        public readonly string Id;
        public readonly string ResourcePrincipalConfigurationId;
        /// <summary>
        /// Life span in hours of each resource principal session token.
        /// </summary>
        public readonly int SessionTokenLifeSpanDurationInHours;
        /// <summary>
        /// The state of the ResourcePrincipalConfiguration.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The time the ResourcePrincipalConfiguration was created, shown as an RFC 3339 formatted datetime string.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// the time the resource principal session token will expired, shown as an rfc 3339 formatted datetime string.
        /// </summary>
        public readonly string TimeTokenExpiry;
        /// <summary>
        /// the time the resource principal session token was refreshed, shown as an rfc 3339 formatted datetime string.
        /// </summary>
        public readonly string TimeTokenRefreshed;
        /// <summary>
        /// The time the ResourcePrincipalConfiguration was updated, shown as an RFC 3339 formatted datetime string.
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetBdsInstanceResourcePrincipalConfigurationResult(
            string bdsInstanceId,

            string clusterAdminPassword,

            string displayName,

            int forceRefreshResourcePrincipalTrigger,

            string id,

            string resourcePrincipalConfigurationId,

            int sessionTokenLifeSpanDurationInHours,

            string state,

            string timeCreated,

            string timeTokenExpiry,

            string timeTokenRefreshed,

            string timeUpdated)
        {
            BdsInstanceId = bdsInstanceId;
            ClusterAdminPassword = clusterAdminPassword;
            DisplayName = displayName;
            ForceRefreshResourcePrincipalTrigger = forceRefreshResourcePrincipalTrigger;
            Id = id;
            ResourcePrincipalConfigurationId = resourcePrincipalConfigurationId;
            SessionTokenLifeSpanDurationInHours = sessionTokenLifeSpanDurationInHours;
            State = state;
            TimeCreated = timeCreated;
            TimeTokenExpiry = timeTokenExpiry;
            TimeTokenRefreshed = timeTokenRefreshed;
            TimeUpdated = timeUpdated;
        }
    }
}
