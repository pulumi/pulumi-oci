// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.BigDataService.Inputs
{

    public sealed class BdsInstanceEdgeNodeGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The size of block volume in GB that needs to be attached to a given node. All the necessary details needed for attachment are managed by service itself.
        /// </summary>
        [Input("blockVolumeSizeInGbs")]
        public Input<string>? BlockVolumeSizeInGbs { get; set; }

        /// <summary>
        /// Number of nodes that forming the cluster
        /// </summary>
        [Input("numberOfNodes", required: true)]
        public Input<int> NumberOfNodes { get; set; } = null!;

        /// <summary>
        /// Shape of the node
        /// </summary>
        [Input("shape", required: true)]
        public Input<string> Shape { get; set; } = null!;

        [Input("shapeConfig")]
        public Input<Inputs.BdsInstanceEdgeNodeShapeConfigGetArgs>? ShapeConfig { get; set; }

        /// <summary>
        /// The OCID of the subnet in which the node should be created
        /// </summary>
        [Input("subnetId", required: true)]
        public Input<string> SubnetId { get; set; } = null!;

        public BdsInstanceEdgeNodeGetArgs()
        {
        }
        public static new BdsInstanceEdgeNodeGetArgs Empty => new BdsInstanceEdgeNodeGetArgs();
    }
}
