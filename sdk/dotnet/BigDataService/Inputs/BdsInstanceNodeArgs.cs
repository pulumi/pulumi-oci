// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.BigDataService.Inputs
{

    public sealed class BdsInstanceNodeArgs : global::Pulumi.ResourceArgs
    {
        [Input("attachedBlockVolumes")]
        private InputList<Inputs.BdsInstanceNodeAttachedBlockVolumeArgs>? _attachedBlockVolumes;

        /// <summary>
        /// The list of block volumes attached to a given node.
        /// </summary>
        public InputList<Inputs.BdsInstanceNodeAttachedBlockVolumeArgs> AttachedBlockVolumes
        {
            get => _attachedBlockVolumes ?? (_attachedBlockVolumes = new InputList<Inputs.BdsInstanceNodeAttachedBlockVolumeArgs>());
            set => _attachedBlockVolumes = value;
        }

        /// <summary>
        /// The name of the availability domain the node is running in
        /// </summary>
        [Input("availabilityDomain")]
        public Input<string>? AvailabilityDomain { get; set; }

        /// <summary>
        /// (Updatable) Name of the BDS instance
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// The name of the fault domain the node is running in
        /// </summary>
        [Input("faultDomain")]
        public Input<string>? FaultDomain { get; set; }

        /// <summary>
        /// The fully-qualified hostname (FQDN) of the node
        /// </summary>
        [Input("hostname")]
        public Input<string>? Hostname { get; set; }

        /// <summary>
        /// The OCID of the image from which the node was created
        /// </summary>
        [Input("imageId")]
        public Input<string>? ImageId { get; set; }

        /// <summary>
        /// The OCID of the underlying compute instance
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// IP address of the node
        /// </summary>
        [Input("ipAddress")]
        public Input<string>? IpAddress { get; set; }

        /// <summary>
        /// Indicates if the node requires a reboot to either reflect the latest os kernel or take actions for maintenance reboot.
        /// </summary>
        [Input("isRebootRequired")]
        public Input<bool>? IsRebootRequired { get; set; }

        /// <summary>
        /// The aggregate size of all local disks, in gigabytes. If the instance does not have any local disks, this field is null.
        /// </summary>
        [Input("localDisksTotalSizeInGbs")]
        public Input<double>? LocalDisksTotalSizeInGbs { get; set; }

        /// <summary>
        /// The total amount of memory available to the node, in gigabytes.
        /// </summary>
        [Input("memoryInGbs")]
        public Input<int>? MemoryInGbs { get; set; }

        /// <summary>
        /// The Big Data Service cluster node type.
        /// </summary>
        [Input("nodeType")]
        public Input<string>? NodeType { get; set; }

        /// <summary>
        /// The number of NVMe drives to be used for storage. A single drive has 6.8 TB available.
        /// </summary>
        [Input("nvmes")]
        public Input<int>? Nvmes { get; set; }

        /// <summary>
        /// The total number of OCPUs available to the node.
        /// </summary>
        [Input("ocpus")]
        public Input<int>? Ocpus { get; set; }

        /// <summary>
        /// BDS-assigned Operating System version for the node.
        /// </summary>
        [Input("osVersion")]
        public Input<string>? OsVersion { get; set; }

        /// <summary>
        /// (Updatable) Shape of the node.
        /// </summary>
        [Input("shape")]
        public Input<string>? Shape { get; set; }

        /// <summary>
        /// The fingerprint of the SSH key used for node access
        /// </summary>
        [Input("sshFingerprint")]
        public Input<string>? SshFingerprint { get; set; }

        /// <summary>
        /// (Updatable) The target state for the Bds Instance. Could be set to `ACTIVE` or `INACTIVE` to start/stop the bds instance.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The OCID of the subnet in which the node will be created.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        /// <summary>
        /// The time the BDS instance was created. An RFC3339 formatted datetime string
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The date and time the instance is expected to be stopped / started, in the format defined by RFC3339.
        /// </summary>
        [Input("timeMaintenanceRebootDue")]
        public Input<string>? TimeMaintenanceRebootDue { get; set; }

        public BdsInstanceNodeArgs()
        {
        }
        public static new BdsInstanceNodeArgs Empty => new BdsInstanceNodeArgs();
    }
}
