// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.BigDataService.Outputs
{

    [OutputType]
    public sealed class GetBdsInstanceIdentityConfigurationsIdentityConfigurationResult
    {
        public readonly string ActivateIamUserSyncConfigurationTrigger;
        public readonly string ActivateUpstConfigurationTrigger;
        /// <summary>
        /// The OCID of the cluster.
        /// </summary>
        public readonly string BdsInstanceId;
        public readonly string ClusterAdminPassword;
        /// <summary>
        /// identity domain confidential application ID for the identity config
        /// </summary>
        public readonly string ConfidentialApplicationId;
        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        public readonly string DisplayName;
        public readonly ImmutableArray<Outputs.GetBdsInstanceIdentityConfigurationsIdentityConfigurationIamUserSyncConfigurationDetailResult> IamUserSyncConfigurationDetails;
        /// <summary>
        /// Information about the IAM user sync configuration.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBdsInstanceIdentityConfigurationsIdentityConfigurationIamUserSyncConfigurationResult> IamUserSyncConfigurations;
        /// <summary>
        /// The id of the identity config
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Identity domain to use for identity config
        /// </summary>
        public readonly string IdentityDomainId;
        public readonly string RefreshConfidentialApplicationTrigger;
        public readonly string RefreshUpstTokenExchangeKeytabTrigger;
        /// <summary>
        /// The state of the identity config
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Time when this UPST config was created, shown as an RFC 3339 formatted datetime string.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// Time when this UPST config was updated, shown as an RFC 3339 formatted datetime string.
        /// </summary>
        public readonly string TimeUpdated;
        public readonly ImmutableArray<Outputs.GetBdsInstanceIdentityConfigurationsIdentityConfigurationUpstConfigurationDetailResult> UpstConfigurationDetails;
        /// <summary>
        /// Information about the UPST configuration.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBdsInstanceIdentityConfigurationsIdentityConfigurationUpstConfigurationResult> UpstConfigurations;

        [OutputConstructor]
        private GetBdsInstanceIdentityConfigurationsIdentityConfigurationResult(
            string activateIamUserSyncConfigurationTrigger,

            string activateUpstConfigurationTrigger,

            string bdsInstanceId,

            string clusterAdminPassword,

            string confidentialApplicationId,

            string displayName,

            ImmutableArray<Outputs.GetBdsInstanceIdentityConfigurationsIdentityConfigurationIamUserSyncConfigurationDetailResult> iamUserSyncConfigurationDetails,

            ImmutableArray<Outputs.GetBdsInstanceIdentityConfigurationsIdentityConfigurationIamUserSyncConfigurationResult> iamUserSyncConfigurations,

            string id,

            string identityDomainId,

            string refreshConfidentialApplicationTrigger,

            string refreshUpstTokenExchangeKeytabTrigger,

            string state,

            string timeCreated,

            string timeUpdated,

            ImmutableArray<Outputs.GetBdsInstanceIdentityConfigurationsIdentityConfigurationUpstConfigurationDetailResult> upstConfigurationDetails,

            ImmutableArray<Outputs.GetBdsInstanceIdentityConfigurationsIdentityConfigurationUpstConfigurationResult> upstConfigurations)
        {
            ActivateIamUserSyncConfigurationTrigger = activateIamUserSyncConfigurationTrigger;
            ActivateUpstConfigurationTrigger = activateUpstConfigurationTrigger;
            BdsInstanceId = bdsInstanceId;
            ClusterAdminPassword = clusterAdminPassword;
            ConfidentialApplicationId = confidentialApplicationId;
            DisplayName = displayName;
            IamUserSyncConfigurationDetails = iamUserSyncConfigurationDetails;
            IamUserSyncConfigurations = iamUserSyncConfigurations;
            Id = id;
            IdentityDomainId = identityDomainId;
            RefreshConfidentialApplicationTrigger = refreshConfidentialApplicationTrigger;
            RefreshUpstTokenExchangeKeytabTrigger = refreshUpstTokenExchangeKeytabTrigger;
            State = state;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            UpstConfigurationDetails = upstConfigurationDetails;
            UpstConfigurations = upstConfigurations;
        }
    }
}
