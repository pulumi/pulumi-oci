// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.BigDataService.Outputs
{

    [OutputType]
    public sealed class GetBdsInstancesBdsInstanceResult
    {
        /// <summary>
        /// The information about added Cloud SQL capability
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBdsInstancesBdsInstanceCloudSqlDetailResult> CloudSqlDetails;
        public readonly string ClusterAdminPassword;
        /// <summary>
        /// Specific info about a Hadoop cluster
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBdsInstancesBdsInstanceClusterDetailResult> ClusterDetails;
        public readonly string ClusterPublicKey;
        /// <summary>
        /// Version of the Hadoop distribution.
        /// </summary>
        public readonly string ClusterVersion;
        /// <summary>
        /// The OCID of the compartment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The user who created the cluster.
        /// </summary>
        public readonly string CreatedBy;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For example, `{"foo-namespace": {"bar-key": "value"}}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. For example, `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// The OCID of the Big Data Service resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Boolean flag specifying whether or not Cloud SQL should be configured.
        /// </summary>
        public readonly bool IsCloudSqlConfigured;
        /// <summary>
        /// Boolean flag specifying whether or not the cluster is highly available (HA)
        /// </summary>
        public readonly bool IsHighAvailability;
        /// <summary>
        /// Boolean flag specifying whether or not the cluster should be set up as secure.
        /// </summary>
        public readonly bool IsSecure;
        public readonly ImmutableArray<Outputs.GetBdsInstancesBdsInstanceMasterNodeResult> MasterNodes;
        /// <summary>
        /// Additional configuration of the user's network.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBdsInstancesBdsInstanceNetworkConfigResult> NetworkConfigs;
        /// <summary>
        /// The list of nodes in the cluster.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBdsInstancesBdsInstanceNodeResult> Nodes;
        /// <summary>
        /// The number of nodes that form the cluster.
        /// </summary>
        public readonly int NumberOfNodes;
        /// <summary>
        /// The state of the cluster.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The time the cluster was created, shown as an RFC 3339 formatted datetime string.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time the cluster was updated, shown as an RFC 3339 formatted datetime string.
        /// </summary>
        public readonly string TimeUpdated;
        public readonly ImmutableArray<Outputs.GetBdsInstancesBdsInstanceUtilNodeResult> UtilNodes;
        public readonly ImmutableArray<Outputs.GetBdsInstancesBdsInstanceWorkerNodeResult> WorkerNodes;

        [OutputConstructor]
        private GetBdsInstancesBdsInstanceResult(
            ImmutableArray<Outputs.GetBdsInstancesBdsInstanceCloudSqlDetailResult> cloudSqlDetails,

            string clusterAdminPassword,

            ImmutableArray<Outputs.GetBdsInstancesBdsInstanceClusterDetailResult> clusterDetails,

            string clusterPublicKey,

            string clusterVersion,

            string compartmentId,

            string createdBy,

            ImmutableDictionary<string, object> definedTags,

            string displayName,

            ImmutableDictionary<string, object> freeformTags,

            string id,

            bool isCloudSqlConfigured,

            bool isHighAvailability,

            bool isSecure,

            ImmutableArray<Outputs.GetBdsInstancesBdsInstanceMasterNodeResult> masterNodes,

            ImmutableArray<Outputs.GetBdsInstancesBdsInstanceNetworkConfigResult> networkConfigs,

            ImmutableArray<Outputs.GetBdsInstancesBdsInstanceNodeResult> nodes,

            int numberOfNodes,

            string state,

            string timeCreated,

            string timeUpdated,

            ImmutableArray<Outputs.GetBdsInstancesBdsInstanceUtilNodeResult> utilNodes,

            ImmutableArray<Outputs.GetBdsInstancesBdsInstanceWorkerNodeResult> workerNodes)
        {
            CloudSqlDetails = cloudSqlDetails;
            ClusterAdminPassword = clusterAdminPassword;
            ClusterDetails = clusterDetails;
            ClusterPublicKey = clusterPublicKey;
            ClusterVersion = clusterVersion;
            CompartmentId = compartmentId;
            CreatedBy = createdBy;
            DefinedTags = definedTags;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            IsCloudSqlConfigured = isCloudSqlConfigured;
            IsHighAvailability = isHighAvailability;
            IsSecure = isSecure;
            MasterNodes = masterNodes;
            NetworkConfigs = networkConfigs;
            Nodes = nodes;
            NumberOfNodes = numberOfNodes;
            State = state;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            UtilNodes = utilNodes;
            WorkerNodes = workerNodes;
        }
    }
}
