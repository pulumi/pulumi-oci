// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Blockchain
{
    public static class GetBlockchainPlatform
    {
        /// <summary>
        /// This data source provides details about a specific Blockchain Platform resource in Oracle Cloud Infrastructure Blockchain service.
        /// 
        /// Gets information about a Blockchain Platform identified by the specific id
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testBlockchainPlatform = Oci.Blockchain.GetBlockchainPlatform.Invoke(new()
        ///     {
        ///         BlockchainPlatformId = oci_blockchain_blockchain_platform.Test_blockchain_platform.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetBlockchainPlatformResult> InvokeAsync(GetBlockchainPlatformArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBlockchainPlatformResult>("oci:Blockchain/getBlockchainPlatform:getBlockchainPlatform", args ?? new GetBlockchainPlatformArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Blockchain Platform resource in Oracle Cloud Infrastructure Blockchain service.
        /// 
        /// Gets information about a Blockchain Platform identified by the specific id
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testBlockchainPlatform = Oci.Blockchain.GetBlockchainPlatform.Invoke(new()
        ///     {
        ///         BlockchainPlatformId = oci_blockchain_blockchain_platform.Test_blockchain_platform.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetBlockchainPlatformResult> Invoke(GetBlockchainPlatformInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBlockchainPlatformResult>("oci:Blockchain/getBlockchainPlatform:getBlockchainPlatform", args ?? new GetBlockchainPlatformInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBlockchainPlatformArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique service identifier.
        /// </summary>
        [Input("blockchainPlatformId", required: true)]
        public string BlockchainPlatformId { get; set; } = null!;

        public GetBlockchainPlatformArgs()
        {
        }
        public static new GetBlockchainPlatformArgs Empty => new GetBlockchainPlatformArgs();
    }

    public sealed class GetBlockchainPlatformInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique service identifier.
        /// </summary>
        [Input("blockchainPlatformId", required: true)]
        public Input<string> BlockchainPlatformId { get; set; } = null!;

        public GetBlockchainPlatformInvokeArgs()
        {
        }
        public static new GetBlockchainPlatformInvokeArgs Empty => new GetBlockchainPlatformInvokeArgs();
    }


    [OutputType]
    public sealed class GetBlockchainPlatformResult
    {
        public readonly string BlockchainPlatformId;
        public readonly string CaCertArchiveText;
        /// <summary>
        /// Compartment Identifier
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Blockchain Platform component details.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBlockchainPlatformComponentDetailResult> ComponentDetails;
        /// <summary>
        /// Compute shape - STANDARD or ENTERPRISE_SMALL or ENTERPRISE_MEDIUM or ENTERPRISE_LARGE or ENTERPRISE_EXTRA_LARGE or ENTERPRISE_CUSTOM
        /// </summary>
        public readonly string ComputeShape;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// Platform Instance Description
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Platform Instance Display name, can be renamed
        /// </summary>
        public readonly string DisplayName;
        public readonly string FederatedUserId;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// List of OcpuUtilization for all hosts
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBlockchainPlatformHostOcpuUtilizationInfoResult> HostOcpuUtilizationInfos;
        /// <summary>
        /// unique identifier that is immutable on creation
        /// </summary>
        public readonly string Id;
        public readonly string IdcsAccessToken;
        /// <summary>
        /// Bring your own license
        /// </summary>
        public readonly bool IsByol;
        /// <summary>
        /// True for multi-AD blockchain plaforms, false for single-AD
        /// </summary>
        public readonly bool IsMultiAd;
        /// <summary>
        /// An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// Type of Load Balancer shape - LB_100_MBPS or LB_400_MBPS. Default is LB_100_MBPS.
        /// </summary>
        public readonly string LoadBalancerShape;
        /// <summary>
        /// Role of platform - FOUNDER or PARTICIPANT
        /// </summary>
        public readonly string PlatformRole;
        /// <summary>
        /// Type of Platform shape - DEFAULT or CUSTOM
        /// </summary>
        public readonly string PlatformShapeType;
        /// <summary>
        /// Platform Version
        /// </summary>
        public readonly string PlatformVersion;
        /// <summary>
        /// Number of replicas of service components like Rest Proxy, CA and Console
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBlockchainPlatformReplicaResult> Replicas;
        /// <summary>
        /// Service endpoint URL, valid post-provisioning
        /// </summary>
        public readonly string ServiceEndpoint;
        /// <summary>
        /// The version of the Platform Instance.
        /// </summary>
        public readonly string ServiceVersion;
        /// <summary>
        /// The current state of the Platform Instance.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Storage size in TBs
        /// </summary>
        public readonly double StorageSizeInTbs;
        /// <summary>
        /// Storage used in TBs
        /// </summary>
        public readonly double StorageUsedInTbs;
        /// <summary>
        /// The time the the Platform Instance was created. An RFC3339 formatted datetime string
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time the Platform Instance was updated. An RFC3339 formatted datetime string
        /// </summary>
        public readonly string TimeUpdated;
        /// <summary>
        /// Number of total OCPUs allocated to the platform cluster
        /// </summary>
        public readonly int TotalOcpuCapacity;

        [OutputConstructor]
        private GetBlockchainPlatformResult(
            string blockchainPlatformId,

            string caCertArchiveText,

            string compartmentId,

            ImmutableArray<Outputs.GetBlockchainPlatformComponentDetailResult> componentDetails,

            string computeShape,

            ImmutableDictionary<string, object> definedTags,

            string description,

            string displayName,

            string federatedUserId,

            ImmutableDictionary<string, object> freeformTags,

            ImmutableArray<Outputs.GetBlockchainPlatformHostOcpuUtilizationInfoResult> hostOcpuUtilizationInfos,

            string id,

            string idcsAccessToken,

            bool isByol,

            bool isMultiAd,

            string lifecycleDetails,

            string loadBalancerShape,

            string platformRole,

            string platformShapeType,

            string platformVersion,

            ImmutableArray<Outputs.GetBlockchainPlatformReplicaResult> replicas,

            string serviceEndpoint,

            string serviceVersion,

            string state,

            double storageSizeInTbs,

            double storageUsedInTbs,

            string timeCreated,

            string timeUpdated,

            int totalOcpuCapacity)
        {
            BlockchainPlatformId = blockchainPlatformId;
            CaCertArchiveText = caCertArchiveText;
            CompartmentId = compartmentId;
            ComponentDetails = componentDetails;
            ComputeShape = computeShape;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            FederatedUserId = federatedUserId;
            FreeformTags = freeformTags;
            HostOcpuUtilizationInfos = hostOcpuUtilizationInfos;
            Id = id;
            IdcsAccessToken = idcsAccessToken;
            IsByol = isByol;
            IsMultiAd = isMultiAd;
            LifecycleDetails = lifecycleDetails;
            LoadBalancerShape = loadBalancerShape;
            PlatformRole = platformRole;
            PlatformShapeType = platformShapeType;
            PlatformVersion = platformVersion;
            Replicas = replicas;
            ServiceEndpoint = serviceEndpoint;
            ServiceVersion = serviceVersion;
            State = state;
            StorageSizeInTbs = storageSizeInTbs;
            StorageUsedInTbs = storageUsedInTbs;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            TotalOcpuCapacity = totalOcpuCapacity;
        }
    }
}
