// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Blockchain
{
    public static class GetBlockchainPlatformPatches
    {
        /// <summary>
        /// This data source provides the list of Blockchain Platform Patches in Oracle Cloud Infrastructure Blockchain service.
        /// 
        /// List Blockchain Platform Patches
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testBlockchainPlatformPatches = Output.Create(Oci.Blockchain.GetBlockchainPlatformPatches.InvokeAsync(new Oci.Blockchain.GetBlockchainPlatformPatchesArgs
        ///         {
        ///             BlockchainPlatformId = oci_blockchain_blockchain_platform.Test_blockchain_platform.Id,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetBlockchainPlatformPatchesResult> InvokeAsync(GetBlockchainPlatformPatchesArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetBlockchainPlatformPatchesResult>("oci:Blockchain/getBlockchainPlatformPatches:getBlockchainPlatformPatches", args ?? new GetBlockchainPlatformPatchesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Blockchain Platform Patches in Oracle Cloud Infrastructure Blockchain service.
        /// 
        /// List Blockchain Platform Patches
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testBlockchainPlatformPatches = Output.Create(Oci.Blockchain.GetBlockchainPlatformPatches.InvokeAsync(new Oci.Blockchain.GetBlockchainPlatformPatchesArgs
        ///         {
        ///             BlockchainPlatformId = oci_blockchain_blockchain_platform.Test_blockchain_platform.Id,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetBlockchainPlatformPatchesResult> Invoke(GetBlockchainPlatformPatchesInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetBlockchainPlatformPatchesResult>("oci:Blockchain/getBlockchainPlatformPatches:getBlockchainPlatformPatches", args ?? new GetBlockchainPlatformPatchesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBlockchainPlatformPatchesArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique service identifier.
        /// </summary>
        [Input("blockchainPlatformId", required: true)]
        public string BlockchainPlatformId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetBlockchainPlatformPatchesFilterArgs>? _filters;
        public List<Inputs.GetBlockchainPlatformPatchesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetBlockchainPlatformPatchesFilterArgs>());
            set => _filters = value;
        }

        public GetBlockchainPlatformPatchesArgs()
        {
        }
    }

    public sealed class GetBlockchainPlatformPatchesInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique service identifier.
        /// </summary>
        [Input("blockchainPlatformId", required: true)]
        public Input<string> BlockchainPlatformId { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetBlockchainPlatformPatchesFilterInputArgs>? _filters;
        public InputList<Inputs.GetBlockchainPlatformPatchesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetBlockchainPlatformPatchesFilterInputArgs>());
            set => _filters = value;
        }

        public GetBlockchainPlatformPatchesInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetBlockchainPlatformPatchesResult
    {
        public readonly string BlockchainPlatformId;
        /// <summary>
        /// The list of blockchain_platform_patch_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBlockchainPlatformPatchesBlockchainPlatformPatchCollectionResult> BlockchainPlatformPatchCollections;
        public readonly ImmutableArray<Outputs.GetBlockchainPlatformPatchesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetBlockchainPlatformPatchesResult(
            string blockchainPlatformId,

            ImmutableArray<Outputs.GetBlockchainPlatformPatchesBlockchainPlatformPatchCollectionResult> blockchainPlatformPatchCollections,

            ImmutableArray<Outputs.GetBlockchainPlatformPatchesFilterResult> filters,

            string id)
        {
            BlockchainPlatformId = blockchainPlatformId;
            BlockchainPlatformPatchCollections = blockchainPlatformPatchCollections;
            Filters = filters;
            Id = id;
        }
    }
}
