// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Blockchain
{
    public static class GetBlockchainPlatforms
    {
        /// <summary>
        /// This data source provides the list of Blockchain Platforms in Oracle Cloud Infrastructure Blockchain service.
        /// 
        /// Returns a list Blockchain Platform Instances in a compartment
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testBlockchainPlatforms = Oci.Blockchain.GetBlockchainPlatforms.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         DisplayName = @var.Blockchain_platform_display_name,
        ///         State = @var.Blockchain_platform_state,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetBlockchainPlatformsResult> InvokeAsync(GetBlockchainPlatformsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetBlockchainPlatformsResult>("oci:Blockchain/getBlockchainPlatforms:getBlockchainPlatforms", args ?? new GetBlockchainPlatformsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Blockchain Platforms in Oracle Cloud Infrastructure Blockchain service.
        /// 
        /// Returns a list Blockchain Platform Instances in a compartment
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testBlockchainPlatforms = Oci.Blockchain.GetBlockchainPlatforms.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         DisplayName = @var.Blockchain_platform_display_name,
        ///         State = @var.Blockchain_platform_state,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetBlockchainPlatformsResult> Invoke(GetBlockchainPlatformsInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetBlockchainPlatformsResult>("oci:Blockchain/getBlockchainPlatforms:getBlockchainPlatforms", args ?? new GetBlockchainPlatformsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBlockchainPlatformsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable. Example: `My new resource`
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetBlockchainPlatformsFilterArgs>? _filters;
        public List<Inputs.GetBlockchainPlatformsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetBlockchainPlatformsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetBlockchainPlatformsArgs()
        {
        }
        public static new GetBlockchainPlatformsArgs Empty => new GetBlockchainPlatformsArgs();
    }

    public sealed class GetBlockchainPlatformsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable. Example: `My new resource`
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetBlockchainPlatformsFilterInputArgs>? _filters;
        public InputList<Inputs.GetBlockchainPlatformsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetBlockchainPlatformsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetBlockchainPlatformsInvokeArgs()
        {
        }
        public static new GetBlockchainPlatformsInvokeArgs Empty => new GetBlockchainPlatformsInvokeArgs();
    }


    [OutputType]
    public sealed class GetBlockchainPlatformsResult
    {
        /// <summary>
        /// The list of blockchain_platform_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBlockchainPlatformsBlockchainPlatformCollectionResult> BlockchainPlatformCollections;
        /// <summary>
        /// Compartment Identifier
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Platform Instance Display name, can be renamed
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetBlockchainPlatformsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The current state of the Platform Instance.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetBlockchainPlatformsResult(
            ImmutableArray<Outputs.GetBlockchainPlatformsBlockchainPlatformCollectionResult> blockchainPlatformCollections,

            string compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetBlockchainPlatformsFilterResult> filters,

            string id,

            string? state)
        {
            BlockchainPlatformCollections = blockchainPlatformCollections;
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            State = state;
        }
    }
}
