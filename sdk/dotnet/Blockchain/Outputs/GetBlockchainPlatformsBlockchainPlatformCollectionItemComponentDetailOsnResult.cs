// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Blockchain.Outputs
{

    [OutputType]
    public sealed class GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailOsnResult
    {
        /// <summary>
        /// Availability Domain of peer
        /// </summary>
        public readonly string Ad;
        /// <summary>
        /// OCPU allocation parameter
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailOsnOcpuAllocationParamResult> OcpuAllocationParams;
        /// <summary>
        /// OSN identifier
        /// </summary>
        public readonly string OsnKey;
        /// <summary>
        /// A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
        /// </summary>
        public readonly string State;

        [OutputConstructor]
        private GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailOsnResult(
            string ad,

            ImmutableArray<Outputs.GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailOsnOcpuAllocationParamResult> ocpuAllocationParams,

            string osnKey,

            string state)
        {
            Ad = ad;
            OcpuAllocationParams = ocpuAllocationParams;
            OsnKey = osnKey;
            State = state;
        }
    }
}
