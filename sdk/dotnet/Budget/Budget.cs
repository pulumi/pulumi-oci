// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Budget
{
    /// <summary>
    /// This resource provides the Budget resource in Oracle Cloud Infrastructure Budget service.
    /// 
    /// Creates a new budget.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testBudget = new Oci.Budget.Budget("testBudget", new()
    ///     {
    ///         Amount = @var.Budget_amount,
    ///         CompartmentId = @var.Tenancy_ocid,
    ///         ResetPeriod = @var.Budget_reset_period,
    ///         BudgetProcessingPeriodStartOffset = @var.Budget_budget_processing_period_start_offset,
    ///         DefinedTags = 
    ///         {
    ///             { "Operations.CostCenter", "42" },
    ///         },
    ///         Description = @var.Budget_description,
    ///         DisplayName = @var.Budget_display_name,
    ///         FreeformTags = 
    ///         {
    ///             { "Department", "Finance" },
    ///         },
    ///         ProcessingPeriodType = @var.Budget_processing_period_type,
    ///         TargetCompartmentId = oci_identity_compartment.Test_compartment.Id,
    ///         TargetType = @var.Budget_target_type,
    ///         Targets = @var.Budget_targets,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Budgets can be imported using the `id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import oci:Budget/budget:Budget test_budget "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:Budget/budget:Budget")]
    public partial class Budget : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The actual spend in currency for the current budget cycle.
        /// </summary>
        [Output("actualSpend")]
        public Output<double> ActualSpend { get; private set; } = null!;

        /// <summary>
        /// The total number of alert rules in the budget.
        /// </summary>
        [Output("alertRuleCount")]
        public Output<int> AlertRuleCount { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The amount of the budget expressed as a whole number in the currency of the customer's rate card.
        /// </summary>
        [Output("amount")]
        public Output<int> Amount { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The number of days offset from the first day of the month, at which the budget processing period starts. In months that have fewer days than this value, processing will begin on the last day of that month. For example, for a value of 12, processing starts every month on the 12th at midnight.
        /// </summary>
        [Output("budgetProcessingPeriodStartOffset")]
        public Output<int> BudgetProcessingPeriodStartOffset { get; private set; } = null!;

        /// <summary>
        /// The OCID of the compartment.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, object>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The description of the budget.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The displayName of the budget. Avoid entering confidential information.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// The forecasted spend in currency by the end of the current budget cycle.
        /// </summary>
        [Output("forecastedSpend")]
        public Output<double> ForecastedSpend { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, object>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The type of the budget processing period. Valid values are INVOICE and MONTH.
        /// </summary>
        [Output("processingPeriodType")]
        public Output<string> ProcessingPeriodType { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The reset period for the budget. Valid value is MONTHLY.
        /// </summary>
        [Output("resetPeriod")]
        public Output<string> ResetPeriod { get; private set; } = null!;

        /// <summary>
        /// The current state of the budget.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// This is DEPRECATED. Set the target compartment ID in targets instead.
        /// </summary>
        [Output("targetCompartmentId")]
        public Output<string> TargetCompartmentId { get; private set; } = null!;

        /// <summary>
        /// The type of target on which the budget is applied.
        /// </summary>
        [Output("targetType")]
        public Output<string> TargetType { get; private set; } = null!;

        /// <summary>
        /// The list of targets on which the budget is applied. If targetType is "COMPARTMENT", the targets contain the list of compartment OCIDs. If targetType is "TAG", the targets contain the list of cost tracking tag identifiers in the form of "{tagNamespace}.{tagKey}.{tagValue}". Curerntly, the array should contain exactly one item.
        /// </summary>
        [Output("targets")]
        public Output<ImmutableArray<string>> Targets { get; private set; } = null!;

        /// <summary>
        /// The time that the budget was created.
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The time that the budget spend was last computed.
        /// </summary>
        [Output("timeSpendComputed")]
        public Output<string> TimeSpendComputed { get; private set; } = null!;

        /// <summary>
        /// The time that the budget was updated.
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;

        /// <summary>
        /// The version of the budget. Starts from 1 and increments by 1.
        /// </summary>
        [Output("version")]
        public Output<int> Version { get; private set; } = null!;


        /// <summary>
        /// Create a Budget resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Budget(string name, BudgetArgs args, CustomResourceOptions? options = null)
            : base("oci:Budget/budget:Budget", name, args ?? new BudgetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Budget(string name, Input<string> id, BudgetState? state = null, CustomResourceOptions? options = null)
            : base("oci:Budget/budget:Budget", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Budget resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Budget Get(string name, Input<string> id, BudgetState? state = null, CustomResourceOptions? options = null)
        {
            return new Budget(name, id, state, options);
        }
    }

    public sealed class BudgetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The amount of the budget expressed as a whole number in the currency of the customer's rate card.
        /// </summary>
        [Input("amount", required: true)]
        public Input<int> Amount { get; set; } = null!;

        /// <summary>
        /// (Updatable) The number of days offset from the first day of the month, at which the budget processing period starts. In months that have fewer days than this value, processing will begin on the last day of that month. For example, for a value of 12, processing starts every month on the 12th at midnight.
        /// </summary>
        [Input("budgetProcessingPeriodStartOffset")]
        public Input<int>? BudgetProcessingPeriodStartOffset { get; set; }

        /// <summary>
        /// The OCID of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) The description of the budget.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) The displayName of the budget. Avoid entering confidential information.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) The type of the budget processing period. Valid values are INVOICE and MONTH.
        /// </summary>
        [Input("processingPeriodType")]
        public Input<string>? ProcessingPeriodType { get; set; }

        /// <summary>
        /// (Updatable) The reset period for the budget. Valid value is MONTHLY.
        /// </summary>
        [Input("resetPeriod", required: true)]
        public Input<string> ResetPeriod { get; set; } = null!;

        /// <summary>
        /// This is DEPRECATED. Set the target compartment ID in targets instead.
        /// </summary>
        [Input("targetCompartmentId")]
        public Input<string>? TargetCompartmentId { get; set; }

        /// <summary>
        /// The type of target on which the budget is applied.
        /// </summary>
        [Input("targetType")]
        public Input<string>? TargetType { get; set; }

        [Input("targets")]
        private InputList<string>? _targets;

        /// <summary>
        /// The list of targets on which the budget is applied. If targetType is "COMPARTMENT", the targets contain the list of compartment OCIDs. If targetType is "TAG", the targets contain the list of cost tracking tag identifiers in the form of "{tagNamespace}.{tagKey}.{tagValue}". Curerntly, the array should contain exactly one item.
        /// </summary>
        public InputList<string> Targets
        {
            get => _targets ?? (_targets = new InputList<string>());
            set => _targets = value;
        }

        public BudgetArgs()
        {
        }
        public static new BudgetArgs Empty => new BudgetArgs();
    }

    public sealed class BudgetState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The actual spend in currency for the current budget cycle.
        /// </summary>
        [Input("actualSpend")]
        public Input<double>? ActualSpend { get; set; }

        /// <summary>
        /// The total number of alert rules in the budget.
        /// </summary>
        [Input("alertRuleCount")]
        public Input<int>? AlertRuleCount { get; set; }

        /// <summary>
        /// (Updatable) The amount of the budget expressed as a whole number in the currency of the customer's rate card.
        /// </summary>
        [Input("amount")]
        public Input<int>? Amount { get; set; }

        /// <summary>
        /// (Updatable) The number of days offset from the first day of the month, at which the budget processing period starts. In months that have fewer days than this value, processing will begin on the last day of that month. For example, for a value of 12, processing starts every month on the 12th at midnight.
        /// </summary>
        [Input("budgetProcessingPeriodStartOffset")]
        public Input<int>? BudgetProcessingPeriodStartOffset { get; set; }

        /// <summary>
        /// The OCID of the compartment.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) The description of the budget.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) The displayName of the budget. Avoid entering confidential information.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// The forecasted spend in currency by the end of the current budget cycle.
        /// </summary>
        [Input("forecastedSpend")]
        public Input<double>? ForecastedSpend { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) The type of the budget processing period. Valid values are INVOICE and MONTH.
        /// </summary>
        [Input("processingPeriodType")]
        public Input<string>? ProcessingPeriodType { get; set; }

        /// <summary>
        /// (Updatable) The reset period for the budget. Valid value is MONTHLY.
        /// </summary>
        [Input("resetPeriod")]
        public Input<string>? ResetPeriod { get; set; }

        /// <summary>
        /// The current state of the budget.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// This is DEPRECATED. Set the target compartment ID in targets instead.
        /// </summary>
        [Input("targetCompartmentId")]
        public Input<string>? TargetCompartmentId { get; set; }

        /// <summary>
        /// The type of target on which the budget is applied.
        /// </summary>
        [Input("targetType")]
        public Input<string>? TargetType { get; set; }

        [Input("targets")]
        private InputList<string>? _targets;

        /// <summary>
        /// The list of targets on which the budget is applied. If targetType is "COMPARTMENT", the targets contain the list of compartment OCIDs. If targetType is "TAG", the targets contain the list of cost tracking tag identifiers in the form of "{tagNamespace}.{tagKey}.{tagValue}". Curerntly, the array should contain exactly one item.
        /// </summary>
        public InputList<string> Targets
        {
            get => _targets ?? (_targets = new InputList<string>());
            set => _targets = value;
        }

        /// <summary>
        /// The time that the budget was created.
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The time that the budget spend was last computed.
        /// </summary>
        [Input("timeSpendComputed")]
        public Input<string>? TimeSpendComputed { get; set; }

        /// <summary>
        /// The time that the budget was updated.
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        /// <summary>
        /// The version of the budget. Starts from 1 and increments by 1.
        /// </summary>
        [Input("version")]
        public Input<int>? Version { get; set; }

        public BudgetState()
        {
        }
        public static new BudgetState Empty => new BudgetState();
    }
}
