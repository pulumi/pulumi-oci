// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Budget
{
    public static class GetAlertRules
    {
        /// <summary>
        /// This data source provides the list of Alert Rules in Oracle Cloud Infrastructure Budget service.
        /// 
        /// Returns a list of Alert Rules for a specified budget.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAlertRules = Oci.Budget.GetAlertRules.Invoke(new()
        ///     {
        ///         BudgetId = oci_budget_budget.Test_budget.Id,
        ///         DisplayName = @var.Alert_rule_display_name,
        ///         State = @var.Alert_rule_state,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetAlertRulesResult> InvokeAsync(GetAlertRulesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAlertRulesResult>("oci:Budget/getAlertRules:getAlertRules", args ?? new GetAlertRulesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Alert Rules in Oracle Cloud Infrastructure Budget service.
        /// 
        /// Returns a list of Alert Rules for a specified budget.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAlertRules = Oci.Budget.GetAlertRules.Invoke(new()
        ///     {
        ///         BudgetId = oci_budget_budget.Test_budget.Id,
        ///         DisplayName = @var.Alert_rule_display_name,
        ///         State = @var.Alert_rule_state,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAlertRulesResult> Invoke(GetAlertRulesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAlertRulesResult>("oci:Budget/getAlertRules:getAlertRules", args ?? new GetAlertRulesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAlertRulesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique budget OCID.
        /// </summary>
        [Input("budgetId", required: true)]
        public string BudgetId { get; set; } = null!;

        /// <summary>
        /// A user-friendly name. This does not have to be unique, and it's changeable.  Example: `My new resource`
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetAlertRulesFilterArgs>? _filters;
        public List<Inputs.GetAlertRulesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetAlertRulesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The current state of the resource to filter by.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetAlertRulesArgs()
        {
        }
        public static new GetAlertRulesArgs Empty => new GetAlertRulesArgs();
    }

    public sealed class GetAlertRulesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique budget OCID.
        /// </summary>
        [Input("budgetId", required: true)]
        public Input<string> BudgetId { get; set; } = null!;

        /// <summary>
        /// A user-friendly name. This does not have to be unique, and it's changeable.  Example: `My new resource`
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetAlertRulesFilterInputArgs>? _filters;
        public InputList<Inputs.GetAlertRulesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetAlertRulesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The current state of the resource to filter by.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetAlertRulesInvokeArgs()
        {
        }
        public static new GetAlertRulesInvokeArgs Empty => new GetAlertRulesInvokeArgs();
    }


    [OutputType]
    public sealed class GetAlertRulesResult
    {
        /// <summary>
        /// The list of alert_rules.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAlertRulesAlertRuleResult> AlertRules;
        /// <summary>
        /// The OCID of the budget.
        /// </summary>
        public readonly string BudgetId;
        /// <summary>
        /// The name of the alert rule. Avoid entering confidential information.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetAlertRulesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The current state of the alert rule.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetAlertRulesResult(
            ImmutableArray<Outputs.GetAlertRulesAlertRuleResult> alertRules,

            string budgetId,

            string? displayName,

            ImmutableArray<Outputs.GetAlertRulesFilterResult> filters,

            string id,

            string? state)
        {
            AlertRules = alertRules;
            BudgetId = budgetId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            State = state;
        }
    }
}
