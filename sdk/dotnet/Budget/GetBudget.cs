// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Budget
{
    public static class GetBudget
    {
        /// <summary>
        /// This data source provides details about a specific Budget resource in Oracle Cloud Infrastructure Budget service.
        /// 
        /// Gets a budget by the identifier.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testBudget = Oci.Budget.GetBudget.Invoke(new()
        ///     {
        ///         BudgetId = oci_budget_budget.Test_budget.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetBudgetResult> InvokeAsync(GetBudgetArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBudgetResult>("oci:Budget/getBudget:getBudget", args ?? new GetBudgetArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Budget resource in Oracle Cloud Infrastructure Budget service.
        /// 
        /// Gets a budget by the identifier.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testBudget = Oci.Budget.GetBudget.Invoke(new()
        ///     {
        ///         BudgetId = oci_budget_budget.Test_budget.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetBudgetResult> Invoke(GetBudgetInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBudgetResult>("oci:Budget/getBudget:getBudget", args ?? new GetBudgetInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBudgetArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique budget OCID.
        /// </summary>
        [Input("budgetId", required: true)]
        public string BudgetId { get; set; } = null!;

        public GetBudgetArgs()
        {
        }
        public static new GetBudgetArgs Empty => new GetBudgetArgs();
    }

    public sealed class GetBudgetInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique budget OCID.
        /// </summary>
        [Input("budgetId", required: true)]
        public Input<string> BudgetId { get; set; } = null!;

        public GetBudgetInvokeArgs()
        {
        }
        public static new GetBudgetInvokeArgs Empty => new GetBudgetInvokeArgs();
    }


    [OutputType]
    public sealed class GetBudgetResult
    {
        /// <summary>
        /// The actual spend in currency for the current budget cycle.
        /// </summary>
        public readonly double ActualSpend;
        /// <summary>
        /// The total number of alert rules in the budget.
        /// </summary>
        public readonly int AlertRuleCount;
        /// <summary>
        /// The amount of the budget, expressed in the currency of the customer's rate card.
        /// </summary>
        public readonly int Amount;
        public readonly string BudgetId;
        /// <summary>
        /// The number of days offset from the first day of the month, at which the budget processing period starts. In months that have fewer days than this value, processing will begin on the last day of that month. For example, for a value of 12, processing starts every month on the 12th at midnight.
        /// </summary>
        public readonly int BudgetProcessingPeriodStartOffset;
        /// <summary>
        /// The OCID of the compartment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// The description of the budget.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The display name of the budget. Avoid entering confidential information.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// The forecasted spend in currency by the end of the current budget cycle.
        /// </summary>
        public readonly double ForecastedSpend;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// The OCID of the budget.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The type of the budget processing period. Valid values are INVOICE and MONTH.
        /// </summary>
        public readonly string ProcessingPeriodType;
        /// <summary>
        /// The reset period for the budget.
        /// </summary>
        public readonly string ResetPeriod;
        /// <summary>
        /// The current state of the budget.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// This is DEPRECATED. For backwards compatability, the property is populated when the targetType is "COMPARTMENT", and targets contain the specific target compartment OCID. For all other scenarios, this property will be left empty.
        /// </summary>
        public readonly string TargetCompartmentId;
        /// <summary>
        /// The type of target on which the budget is applied.
        /// </summary>
        public readonly string TargetType;
        /// <summary>
        /// The list of targets on which the budget is applied. If the targetType is "COMPARTMENT", the targets contain the list of compartment OCIDs. If the targetType is "TAG", the targets contain the list of cost tracking tag identifiers in the form of "{tagNamespace}.{tagKey}.{tagValue}".
        /// </summary>
        public readonly ImmutableArray<string> Targets;
        /// <summary>
        /// The time that the budget was created.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time that the budget spend was last computed.
        /// </summary>
        public readonly string TimeSpendComputed;
        /// <summary>
        /// The time that the budget was updated.
        /// </summary>
        public readonly string TimeUpdated;
        /// <summary>
        /// The version of the budget. Starts from 1 and increments by 1.
        /// </summary>
        public readonly int Version;

        [OutputConstructor]
        private GetBudgetResult(
            double actualSpend,

            int alertRuleCount,

            int amount,

            string budgetId,

            int budgetProcessingPeriodStartOffset,

            string compartmentId,

            ImmutableDictionary<string, object> definedTags,

            string description,

            string displayName,

            double forecastedSpend,

            ImmutableDictionary<string, object> freeformTags,

            string id,

            string processingPeriodType,

            string resetPeriod,

            string state,

            string targetCompartmentId,

            string targetType,

            ImmutableArray<string> targets,

            string timeCreated,

            string timeSpendComputed,

            string timeUpdated,

            int version)
        {
            ActualSpend = actualSpend;
            AlertRuleCount = alertRuleCount;
            Amount = amount;
            BudgetId = budgetId;
            BudgetProcessingPeriodStartOffset = budgetProcessingPeriodStartOffset;
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            ForecastedSpend = forecastedSpend;
            FreeformTags = freeformTags;
            Id = id;
            ProcessingPeriodType = processingPeriodType;
            ResetPeriod = resetPeriod;
            State = state;
            TargetCompartmentId = targetCompartmentId;
            TargetType = targetType;
            Targets = targets;
            TimeCreated = timeCreated;
            TimeSpendComputed = timeSpendComputed;
            TimeUpdated = timeUpdated;
            Version = version;
        }
    }
}
