// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Budget
{
    public static class GetBudgets
    {
        /// <summary>
        /// This data source provides the list of Budgets in Oracle Cloud Infrastructure Budget service.
        /// 
        /// Gets a list of budgets in a compartment.
        /// 
        /// By default, ListBudgets returns budgets of the 'COMPARTMENT' target type, and the budget records with only one target compartment OCID.
        /// 
        /// To list all budgets, set the targetType query parameter to ALL (for example: 'targetType=ALL').
        /// 
        /// Clients should ignore new targetTypes, or upgrade to the latest version of the client SDK to handle new targetTypes.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testBudgets = Oci.Budget.GetBudgets.Invoke(new()
        ///     {
        ///         CompartmentId = tenancyOcid,
        ///         DisplayName = budgetDisplayName,
        ///         State = budgetState,
        ///         TargetType = budgetTargetType,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetBudgetsResult> InvokeAsync(GetBudgetsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBudgetsResult>("oci:Budget/getBudgets:getBudgets", args ?? new GetBudgetsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Budgets in Oracle Cloud Infrastructure Budget service.
        /// 
        /// Gets a list of budgets in a compartment.
        /// 
        /// By default, ListBudgets returns budgets of the 'COMPARTMENT' target type, and the budget records with only one target compartment OCID.
        /// 
        /// To list all budgets, set the targetType query parameter to ALL (for example: 'targetType=ALL').
        /// 
        /// Clients should ignore new targetTypes, or upgrade to the latest version of the client SDK to handle new targetTypes.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testBudgets = Oci.Budget.GetBudgets.Invoke(new()
        ///     {
        ///         CompartmentId = tenancyOcid,
        ///         DisplayName = budgetDisplayName,
        ///         State = budgetState,
        ///         TargetType = budgetTargetType,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetBudgetsResult> Invoke(GetBudgetsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBudgetsResult>("oci:Budget/getBudgets:getBudgets", args ?? new GetBudgetsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBudgetsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A user-friendly name. This does not have to be unique, and it's changeable.  Example: `My new resource`
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetBudgetsFilterArgs>? _filters;
        public List<Inputs.GetBudgetsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetBudgetsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The current state of the resource to filter by.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        /// <summary>
        /// The type of target to filter by:
        /// * ALL - List all budgets
        /// * COMPARTMENT - List all budgets with targetType == "COMPARTMENT"
        /// * TAG - List all budgets with targetType == "TAG"
        /// </summary>
        [Input("targetType")]
        public string? TargetType { get; set; }

        public GetBudgetsArgs()
        {
        }
        public static new GetBudgetsArgs Empty => new GetBudgetsArgs();
    }

    public sealed class GetBudgetsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A user-friendly name. This does not have to be unique, and it's changeable.  Example: `My new resource`
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetBudgetsFilterInputArgs>? _filters;
        public InputList<Inputs.GetBudgetsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetBudgetsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The current state of the resource to filter by.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The type of target to filter by:
        /// * ALL - List all budgets
        /// * COMPARTMENT - List all budgets with targetType == "COMPARTMENT"
        /// * TAG - List all budgets with targetType == "TAG"
        /// </summary>
        [Input("targetType")]
        public Input<string>? TargetType { get; set; }

        public GetBudgetsInvokeArgs()
        {
        }
        public static new GetBudgetsInvokeArgs Empty => new GetBudgetsInvokeArgs();
    }


    [OutputType]
    public sealed class GetBudgetsResult
    {
        /// <summary>
        /// The list of budgets.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBudgetsBudgetResult> Budgets;
        /// <summary>
        /// The OCID of the compartment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The display name of the budget. Avoid entering confidential information.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetBudgetsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The current state of the budget.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// The type of target on which the budget is applied.
        /// </summary>
        public readonly string? TargetType;

        [OutputConstructor]
        private GetBudgetsResult(
            ImmutableArray<Outputs.GetBudgetsBudgetResult> budgets,

            string compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetBudgetsFilterResult> filters,

            string id,

            string? state,

            string? targetType)
        {
            Budgets = budgets;
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            State = state;
            TargetType = targetType;
        }
    }
}
