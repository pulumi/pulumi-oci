// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CapacityManagement
{
    public static class GetInternalOccAvailabilityCatalogs
    {
        /// <summary>
        /// This data source provides the list of Internal Occ Availability Catalogs in Oracle Cloud Infrastructure Capacity Management service.
        /// 
        /// An internal api to list availability catalogs.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testInternalOccAvailabilityCatalogs = Oci.CapacityManagement.GetInternalOccAvailabilityCatalogs.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         CatalogState = @var.Internal_occ_availability_catalog_catalog_state,
        ///         DisplayName = @var.Internal_occ_availability_catalog_display_name,
        ///         Id = @var.Internal_occ_availability_catalog_id,
        ///         Namespace = @var.Internal_occ_availability_catalog_namespace,
        ///         OccCustomerGroupId = oci_capacity_management_occ_customer_group.Test_occ_customer_group.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetInternalOccAvailabilityCatalogsResult> InvokeAsync(GetInternalOccAvailabilityCatalogsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetInternalOccAvailabilityCatalogsResult>("oci:CapacityManagement/getInternalOccAvailabilityCatalogs:getInternalOccAvailabilityCatalogs", args ?? new GetInternalOccAvailabilityCatalogsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Internal Occ Availability Catalogs in Oracle Cloud Infrastructure Capacity Management service.
        /// 
        /// An internal api to list availability catalogs.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testInternalOccAvailabilityCatalogs = Oci.CapacityManagement.GetInternalOccAvailabilityCatalogs.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         CatalogState = @var.Internal_occ_availability_catalog_catalog_state,
        ///         DisplayName = @var.Internal_occ_availability_catalog_display_name,
        ///         Id = @var.Internal_occ_availability_catalog_id,
        ///         Namespace = @var.Internal_occ_availability_catalog_namespace,
        ///         OccCustomerGroupId = oci_capacity_management_occ_customer_group.Test_occ_customer_group.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetInternalOccAvailabilityCatalogsResult> Invoke(GetInternalOccAvailabilityCatalogsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetInternalOccAvailabilityCatalogsResult>("oci:CapacityManagement/getInternalOccAvailabilityCatalogs:getInternalOccAvailabilityCatalogs", args ?? new GetInternalOccAvailabilityCatalogsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInternalOccAvailabilityCatalogsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Filter the list of availability catalogs based on the catalog state.
        /// </summary>
        [Input("catalogState")]
        public string? CatalogState { get; set; }

        /// <summary>
        /// The ocid of the compartment or tenancy in which resources are to be listed. This will also be used for authorization purposes.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only the resources that match the entire display name. The match is not case sensitive.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetInternalOccAvailabilityCatalogsFilterArgs>? _filters;
        public List<Inputs.GetInternalOccAvailabilityCatalogsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetInternalOccAvailabilityCatalogsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The OCID of the availability catalog to filter the list of availability catalogs.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// The namespace by which we would filter the list.
        /// </summary>
        [Input("namespace")]
        public string? Namespace { get; set; }

        /// <summary>
        /// The customer group ocid by which we would filter the list.
        /// </summary>
        [Input("occCustomerGroupId")]
        public string? OccCustomerGroupId { get; set; }

        public GetInternalOccAvailabilityCatalogsArgs()
        {
        }
        public static new GetInternalOccAvailabilityCatalogsArgs Empty => new GetInternalOccAvailabilityCatalogsArgs();
    }

    public sealed class GetInternalOccAvailabilityCatalogsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Filter the list of availability catalogs based on the catalog state.
        /// </summary>
        [Input("catalogState")]
        public Input<string>? CatalogState { get; set; }

        /// <summary>
        /// The ocid of the compartment or tenancy in which resources are to be listed. This will also be used for authorization purposes.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only the resources that match the entire display name. The match is not case sensitive.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetInternalOccAvailabilityCatalogsFilterInputArgs>? _filters;
        public InputList<Inputs.GetInternalOccAvailabilityCatalogsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetInternalOccAvailabilityCatalogsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The OCID of the availability catalog to filter the list of availability catalogs.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The namespace by which we would filter the list.
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        /// <summary>
        /// The customer group ocid by which we would filter the list.
        /// </summary>
        [Input("occCustomerGroupId")]
        public Input<string>? OccCustomerGroupId { get; set; }

        public GetInternalOccAvailabilityCatalogsInvokeArgs()
        {
        }
        public static new GetInternalOccAvailabilityCatalogsInvokeArgs Empty => new GetInternalOccAvailabilityCatalogsInvokeArgs();
    }


    [OutputType]
    public sealed class GetInternalOccAvailabilityCatalogsResult
    {
        /// <summary>
        /// Represents whether this version of the availability catalog has been made available to the customer. The state is No by default.
        /// </summary>
        public readonly string? CatalogState;
        /// <summary>
        /// The OCID of the tenancy where the availability catalog resides.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// An user-friendly name for the availability catalog. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetInternalOccAvailabilityCatalogsFilterResult> Filters;
        /// <summary>
        /// The OCID of the availability catalog.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The name of the Oracle Cloud Infrastructure service in consideration. For example, Compute, Exadata, and so on.
        /// </summary>
        public readonly string? Namespace;
        /// <summary>
        /// The list of occ_availability_catalog_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInternalOccAvailabilityCatalogsOccAvailabilityCatalogCollectionResult> OccAvailabilityCatalogCollections;
        /// <summary>
        /// The Customer Group OCID to which the availability catalog belongs.
        /// </summary>
        public readonly string? OccCustomerGroupId;

        [OutputConstructor]
        private GetInternalOccAvailabilityCatalogsResult(
            string? catalogState,

            string compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetInternalOccAvailabilityCatalogsFilterResult> filters,

            string? id,

            string? @namespace,

            ImmutableArray<Outputs.GetInternalOccAvailabilityCatalogsOccAvailabilityCatalogCollectionResult> occAvailabilityCatalogCollections,

            string? occCustomerGroupId)
        {
            CatalogState = catalogState;
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            Namespace = @namespace;
            OccAvailabilityCatalogCollections = occAvailabilityCatalogCollections;
            OccCustomerGroupId = occCustomerGroupId;
        }
    }
}
