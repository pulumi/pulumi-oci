// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CapacityManagement
{
    public static class GetInternalOccHandoverResourceBlocks
    {
        /// <summary>
        /// This data source provides the list of Internal Occ Handover Resource Blocks in Oracle Cloud Infrastructure Capacity Management service.
        /// 
        /// List Occ Handover Resource blocks.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testInternalOccHandoverResourceBlocks = Oci.CapacityManagement.GetInternalOccHandoverResourceBlocks.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         Namespace = internalOccHandoverResourceBlockNamespace,
        ///         OccCustomerGroupId = testOccCustomerGroup.Id,
        ///         HandoverDateGreaterThanOrEqualTo = internalOccHandoverResourceBlockHandoverDateGreaterThanOrEqualTo,
        ///         HandoverDateLessThanOrEqualTo = internalOccHandoverResourceBlockHandoverDateLessThanOrEqualTo,
        ///         HandoverResourceName = testResource.Name,
        ///         OccHandoverResourceBlockId = testOccHandoverResourceBlock.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetInternalOccHandoverResourceBlocksResult> InvokeAsync(GetInternalOccHandoverResourceBlocksArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetInternalOccHandoverResourceBlocksResult>("oci:CapacityManagement/getInternalOccHandoverResourceBlocks:getInternalOccHandoverResourceBlocks", args ?? new GetInternalOccHandoverResourceBlocksArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Internal Occ Handover Resource Blocks in Oracle Cloud Infrastructure Capacity Management service.
        /// 
        /// List Occ Handover Resource blocks.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testInternalOccHandoverResourceBlocks = Oci.CapacityManagement.GetInternalOccHandoverResourceBlocks.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         Namespace = internalOccHandoverResourceBlockNamespace,
        ///         OccCustomerGroupId = testOccCustomerGroup.Id,
        ///         HandoverDateGreaterThanOrEqualTo = internalOccHandoverResourceBlockHandoverDateGreaterThanOrEqualTo,
        ///         HandoverDateLessThanOrEqualTo = internalOccHandoverResourceBlockHandoverDateLessThanOrEqualTo,
        ///         HandoverResourceName = testResource.Name,
        ///         OccHandoverResourceBlockId = testOccHandoverResourceBlock.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetInternalOccHandoverResourceBlocksResult> Invoke(GetInternalOccHandoverResourceBlocksInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetInternalOccHandoverResourceBlocksResult>("oci:CapacityManagement/getInternalOccHandoverResourceBlocks:getInternalOccHandoverResourceBlocks", args ?? new GetInternalOccHandoverResourceBlocksInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Internal Occ Handover Resource Blocks in Oracle Cloud Infrastructure Capacity Management service.
        /// 
        /// List Occ Handover Resource blocks.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testInternalOccHandoverResourceBlocks = Oci.CapacityManagement.GetInternalOccHandoverResourceBlocks.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         Namespace = internalOccHandoverResourceBlockNamespace,
        ///         OccCustomerGroupId = testOccCustomerGroup.Id,
        ///         HandoverDateGreaterThanOrEqualTo = internalOccHandoverResourceBlockHandoverDateGreaterThanOrEqualTo,
        ///         HandoverDateLessThanOrEqualTo = internalOccHandoverResourceBlockHandoverDateLessThanOrEqualTo,
        ///         HandoverResourceName = testResource.Name,
        ///         OccHandoverResourceBlockId = testOccHandoverResourceBlock.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetInternalOccHandoverResourceBlocksResult> Invoke(GetInternalOccHandoverResourceBlocksInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetInternalOccHandoverResourceBlocksResult>("oci:CapacityManagement/getInternalOccHandoverResourceBlocks:getInternalOccHandoverResourceBlocks", args ?? new GetInternalOccHandoverResourceBlocksInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInternalOccHandoverResourceBlocksArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ocid of the compartment or tenancy in which resources are to be listed. This will also be used for authorization purposes.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetInternalOccHandoverResourceBlocksFilterArgs>? _filters;
        public List<Inputs.GetInternalOccHandoverResourceBlocksFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetInternalOccHandoverResourceBlocksFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// This filter helps in fetching all handed over resources for which the recordDate is greater than or equal to the startDate.
        /// </summary>
        [Input("handoverDateGreaterThanOrEqualTo")]
        public string? HandoverDateGreaterThanOrEqualTo { get; set; }

        /// <summary>
        /// This filter helps in fetching all handed over resources for which the recordDate is less than or equal to the endDate.
        /// </summary>
        [Input("handoverDateLessThanOrEqualTo")]
        public string? HandoverDateLessThanOrEqualTo { get; set; }

        /// <summary>
        /// A filter to return only the list of resources that match the name provided in this filter.
        /// </summary>
        [Input("handoverResourceName")]
        public string? HandoverResourceName { get; set; }

        /// <summary>
        /// The namespace enum value that needs to be passed as a required query parameter.
        /// </summary>
        [Input("namespace", required: true)]
        public string Namespace { get; set; } = null!;

        /// <summary>
        /// The customer group ocid by which we would filter the list.
        /// </summary>
        [Input("occCustomerGroupId", required: true)]
        public string OccCustomerGroupId { get; set; } = null!;

        /// <summary>
        /// This filter helps in fetching the handed over resource for which the occHandoverResourceId is equal to the one provided here.
        /// </summary>
        [Input("occHandoverResourceBlockId")]
        public string? OccHandoverResourceBlockId { get; set; }

        public GetInternalOccHandoverResourceBlocksArgs()
        {
        }
        public static new GetInternalOccHandoverResourceBlocksArgs Empty => new GetInternalOccHandoverResourceBlocksArgs();
    }

    public sealed class GetInternalOccHandoverResourceBlocksInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ocid of the compartment or tenancy in which resources are to be listed. This will also be used for authorization purposes.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetInternalOccHandoverResourceBlocksFilterInputArgs>? _filters;
        public InputList<Inputs.GetInternalOccHandoverResourceBlocksFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetInternalOccHandoverResourceBlocksFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// This filter helps in fetching all handed over resources for which the recordDate is greater than or equal to the startDate.
        /// </summary>
        [Input("handoverDateGreaterThanOrEqualTo")]
        public Input<string>? HandoverDateGreaterThanOrEqualTo { get; set; }

        /// <summary>
        /// This filter helps in fetching all handed over resources for which the recordDate is less than or equal to the endDate.
        /// </summary>
        [Input("handoverDateLessThanOrEqualTo")]
        public Input<string>? HandoverDateLessThanOrEqualTo { get; set; }

        /// <summary>
        /// A filter to return only the list of resources that match the name provided in this filter.
        /// </summary>
        [Input("handoverResourceName")]
        public Input<string>? HandoverResourceName { get; set; }

        /// <summary>
        /// The namespace enum value that needs to be passed as a required query parameter.
        /// </summary>
        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        /// <summary>
        /// The customer group ocid by which we would filter the list.
        /// </summary>
        [Input("occCustomerGroupId", required: true)]
        public Input<string> OccCustomerGroupId { get; set; } = null!;

        /// <summary>
        /// This filter helps in fetching the handed over resource for which the occHandoverResourceId is equal to the one provided here.
        /// </summary>
        [Input("occHandoverResourceBlockId")]
        public Input<string>? OccHandoverResourceBlockId { get; set; }

        public GetInternalOccHandoverResourceBlocksInvokeArgs()
        {
        }
        public static new GetInternalOccHandoverResourceBlocksInvokeArgs Empty => new GetInternalOccHandoverResourceBlocksInvokeArgs();
    }


    [OutputType]
    public sealed class GetInternalOccHandoverResourceBlocksResult
    {
        /// <summary>
        /// The OCID of the compartment where the resource block's are placed.
        /// </summary>
        public readonly string CompartmentId;
        public readonly ImmutableArray<Outputs.GetInternalOccHandoverResourceBlocksFilterResult> Filters;
        public readonly string? HandoverDateGreaterThanOrEqualTo;
        public readonly string? HandoverDateLessThanOrEqualTo;
        /// <summary>
        /// The name of the resource handed over by oracle.  For instance for compute namespace this will be the name of the bare metal hardware resource.
        /// </summary>
        public readonly string? HandoverResourceName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the Oracle Cloud Infrastructure service in consideration.  For example Compute, Exadata and so on.
        /// </summary>
        public readonly string Namespace;
        /// <summary>
        /// The OCID of the customer group for which the resources were provisioned.
        /// </summary>
        public readonly string OccCustomerGroupId;
        /// <summary>
        /// The list of occ_handover_resource_block_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInternalOccHandoverResourceBlocksOccHandoverResourceBlockCollectionResult> OccHandoverResourceBlockCollections;
        public readonly string? OccHandoverResourceBlockId;

        [OutputConstructor]
        private GetInternalOccHandoverResourceBlocksResult(
            string compartmentId,

            ImmutableArray<Outputs.GetInternalOccHandoverResourceBlocksFilterResult> filters,

            string? handoverDateGreaterThanOrEqualTo,

            string? handoverDateLessThanOrEqualTo,

            string? handoverResourceName,

            string id,

            string @namespace,

            string occCustomerGroupId,

            ImmutableArray<Outputs.GetInternalOccHandoverResourceBlocksOccHandoverResourceBlockCollectionResult> occHandoverResourceBlockCollections,

            string? occHandoverResourceBlockId)
        {
            CompartmentId = compartmentId;
            Filters = filters;
            HandoverDateGreaterThanOrEqualTo = handoverDateGreaterThanOrEqualTo;
            HandoverDateLessThanOrEqualTo = handoverDateLessThanOrEqualTo;
            HandoverResourceName = handoverResourceName;
            Id = id;
            Namespace = @namespace;
            OccCustomerGroupId = occCustomerGroupId;
            OccHandoverResourceBlockCollections = occHandoverResourceBlockCollections;
            OccHandoverResourceBlockId = occHandoverResourceBlockId;
        }
    }
}
