// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CapacityManagement
{
    public static class GetInternalOccmDemandSignals
    {
        /// <summary>
        /// This data source provides the list of Internal Occm Demand Signals in Oracle Cloud Infrastructure Capacity Management service.
        /// 
        /// This is an internal GET call is used to list all demand signals within the compartment passed as a query parameter.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testInternalOccmDemandSignals = Oci.CapacityManagement.GetInternalOccmDemandSignals.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         OccCustomerGroupId = testOccCustomerGroup.Id,
        ///         DisplayName = internalOccmDemandSignalDisplayName,
        ///         Id = internalOccmDemandSignalId,
        ///         LifecycleDetails = internalOccmDemandSignalLifecycleDetails,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetInternalOccmDemandSignalsResult> InvokeAsync(GetInternalOccmDemandSignalsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetInternalOccmDemandSignalsResult>("oci:CapacityManagement/getInternalOccmDemandSignals:getInternalOccmDemandSignals", args ?? new GetInternalOccmDemandSignalsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Internal Occm Demand Signals in Oracle Cloud Infrastructure Capacity Management service.
        /// 
        /// This is an internal GET call is used to list all demand signals within the compartment passed as a query parameter.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testInternalOccmDemandSignals = Oci.CapacityManagement.GetInternalOccmDemandSignals.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         OccCustomerGroupId = testOccCustomerGroup.Id,
        ///         DisplayName = internalOccmDemandSignalDisplayName,
        ///         Id = internalOccmDemandSignalId,
        ///         LifecycleDetails = internalOccmDemandSignalLifecycleDetails,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetInternalOccmDemandSignalsResult> Invoke(GetInternalOccmDemandSignalsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetInternalOccmDemandSignalsResult>("oci:CapacityManagement/getInternalOccmDemandSignals:getInternalOccmDemandSignals", args ?? new GetInternalOccmDemandSignalsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Internal Occm Demand Signals in Oracle Cloud Infrastructure Capacity Management service.
        /// 
        /// This is an internal GET call is used to list all demand signals within the compartment passed as a query parameter.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testInternalOccmDemandSignals = Oci.CapacityManagement.GetInternalOccmDemandSignals.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         OccCustomerGroupId = testOccCustomerGroup.Id,
        ///         DisplayName = internalOccmDemandSignalDisplayName,
        ///         Id = internalOccmDemandSignalId,
        ///         LifecycleDetails = internalOccmDemandSignalLifecycleDetails,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetInternalOccmDemandSignalsResult> Invoke(GetInternalOccmDemandSignalsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetInternalOccmDemandSignalsResult>("oci:CapacityManagement/getInternalOccmDemandSignals:getInternalOccmDemandSignals", args ?? new GetInternalOccmDemandSignalsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInternalOccmDemandSignalsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ocid of the compartment or tenancy in which resources are to be listed. This will also be used for authorization purposes.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only the resources that match the entire display name. The match is not case sensitive.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetInternalOccmDemandSignalsFilterArgs>? _filters;
        public List<Inputs.GetInternalOccmDemandSignalsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetInternalOccmDemandSignalsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A query parameter to filter the list of demand signals based on it's OCID.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// A query parameter to filter the list of demand signals based on its state.
        /// </summary>
        [Input("lifecycleDetails")]
        public string? LifecycleDetails { get; set; }

        /// <summary>
        /// The customer group ocid by which we would filter the list.
        /// </summary>
        [Input("occCustomerGroupId", required: true)]
        public string OccCustomerGroupId { get; set; } = null!;

        public GetInternalOccmDemandSignalsArgs()
        {
        }
        public static new GetInternalOccmDemandSignalsArgs Empty => new GetInternalOccmDemandSignalsArgs();
    }

    public sealed class GetInternalOccmDemandSignalsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ocid of the compartment or tenancy in which resources are to be listed. This will also be used for authorization purposes.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only the resources that match the entire display name. The match is not case sensitive.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetInternalOccmDemandSignalsFilterInputArgs>? _filters;
        public InputList<Inputs.GetInternalOccmDemandSignalsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetInternalOccmDemandSignalsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A query parameter to filter the list of demand signals based on it's OCID.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// A query parameter to filter the list of demand signals based on its state.
        /// </summary>
        [Input("lifecycleDetails")]
        public Input<string>? LifecycleDetails { get; set; }

        /// <summary>
        /// The customer group ocid by which we would filter the list.
        /// </summary>
        [Input("occCustomerGroupId", required: true)]
        public Input<string> OccCustomerGroupId { get; set; } = null!;

        public GetInternalOccmDemandSignalsInvokeArgs()
        {
        }
        public static new GetInternalOccmDemandSignalsInvokeArgs Empty => new GetInternalOccmDemandSignalsInvokeArgs();
    }


    [OutputType]
    public sealed class GetInternalOccmDemandSignalsResult
    {
        /// <summary>
        /// The OCID of the tenancy from which the request to create the demand signal was made.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The display name of the demand signal.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetInternalOccmDemandSignalsFilterResult> Filters;
        /// <summary>
        /// The OCID of the demand signal.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The list of internal_occm_demand_signal_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInternalOccmDemandSignalsInternalOccmDemandSignalCollectionResult> InternalOccmDemandSignalCollections;
        /// <summary>
        /// The different states associated with a demand signal.
        /// </summary>
        public readonly string? LifecycleDetails;
        /// <summary>
        /// The OCID of the customer group in which the demand signal is created.
        /// </summary>
        public readonly string OccCustomerGroupId;

        [OutputConstructor]
        private GetInternalOccmDemandSignalsResult(
            string compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetInternalOccmDemandSignalsFilterResult> filters,

            string? id,

            ImmutableArray<Outputs.GetInternalOccmDemandSignalsInternalOccmDemandSignalCollectionResult> internalOccmDemandSignalCollections,

            string? lifecycleDetails,

            string occCustomerGroupId)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            InternalOccmDemandSignalCollections = internalOccmDemandSignalCollections;
            LifecycleDetails = lifecycleDetails;
            OccCustomerGroupId = occCustomerGroupId;
        }
    }
}
