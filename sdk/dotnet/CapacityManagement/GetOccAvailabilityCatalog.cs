// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CapacityManagement
{
    public static class GetOccAvailabilityCatalog
    {
        /// <summary>
        /// This data source provides details about a specific Occ Availability Catalog resource in Oracle Cloud Infrastructure Capacity Management service.
        /// 
        /// Get details about availability catalog.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOccAvailabilityCatalog = Oci.CapacityManagement.GetOccAvailabilityCatalog.Invoke(new()
        ///     {
        ///         OccAvailabilityCatalogId = testOccAvailabilityCatalogOciCapacityManagementOccAvailabilityCatalog.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetOccAvailabilityCatalogResult> InvokeAsync(GetOccAvailabilityCatalogArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOccAvailabilityCatalogResult>("oci:CapacityManagement/getOccAvailabilityCatalog:getOccAvailabilityCatalog", args ?? new GetOccAvailabilityCatalogArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Occ Availability Catalog resource in Oracle Cloud Infrastructure Capacity Management service.
        /// 
        /// Get details about availability catalog.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOccAvailabilityCatalog = Oci.CapacityManagement.GetOccAvailabilityCatalog.Invoke(new()
        ///     {
        ///         OccAvailabilityCatalogId = testOccAvailabilityCatalogOciCapacityManagementOccAvailabilityCatalog.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOccAvailabilityCatalogResult> Invoke(GetOccAvailabilityCatalogInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOccAvailabilityCatalogResult>("oci:CapacityManagement/getOccAvailabilityCatalog:getOccAvailabilityCatalog", args ?? new GetOccAvailabilityCatalogInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Occ Availability Catalog resource in Oracle Cloud Infrastructure Capacity Management service.
        /// 
        /// Get details about availability catalog.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOccAvailabilityCatalog = Oci.CapacityManagement.GetOccAvailabilityCatalog.Invoke(new()
        ///     {
        ///         OccAvailabilityCatalogId = testOccAvailabilityCatalogOciCapacityManagementOccAvailabilityCatalog.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOccAvailabilityCatalogResult> Invoke(GetOccAvailabilityCatalogInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetOccAvailabilityCatalogResult>("oci:CapacityManagement/getOccAvailabilityCatalog:getOccAvailabilityCatalog", args ?? new GetOccAvailabilityCatalogInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOccAvailabilityCatalogArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the availability catalog.
        /// </summary>
        [Input("occAvailabilityCatalogId", required: true)]
        public string OccAvailabilityCatalogId { get; set; } = null!;

        public GetOccAvailabilityCatalogArgs()
        {
        }
        public static new GetOccAvailabilityCatalogArgs Empty => new GetOccAvailabilityCatalogArgs();
    }

    public sealed class GetOccAvailabilityCatalogInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the availability catalog.
        /// </summary>
        [Input("occAvailabilityCatalogId", required: true)]
        public Input<string> OccAvailabilityCatalogId { get; set; } = null!;

        public GetOccAvailabilityCatalogInvokeArgs()
        {
        }
        public static new GetOccAvailabilityCatalogInvokeArgs Empty => new GetOccAvailabilityCatalogInvokeArgs();
    }


    [OutputType]
    public sealed class GetOccAvailabilityCatalogResult
    {
        public readonly string Base64encodedCatalogDetails;
        /// <summary>
        /// The different states associated with the availability catalog.
        /// </summary>
        public readonly string CatalogState;
        /// <summary>
        /// The OCID of the tenancy where the availability catalog resides.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// Text information about the availability catalog.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Details about capacity available for different resources in catalog.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetOccAvailabilityCatalogDetailResult> Details;
        /// <summary>
        /// A user-friendly name for the availability catalog.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The OCID of the availability catalog.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed State.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// Used for representing the metadata of the catalog. This denotes the version and format of the CSV file for parsing.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetOccAvailabilityCatalogMetadataDetailResult> MetadataDetails;
        /// <summary>
        /// The name of the Oracle Cloud Infrastructure service in consideration. For example, Compute, Exadata, and so on.
        /// </summary>
        public readonly string Namespace;
        public readonly string OccAvailabilityCatalogId;
        /// <summary>
        /// The customer group OCID to which the availability catalog belongs.
        /// </summary>
        public readonly string OccCustomerGroupId;
        /// <summary>
        /// The current lifecycle state of the resource.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// The time when the availability catalog was created.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time when the availability catalog was last updated.
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetOccAvailabilityCatalogResult(
            string base64encodedCatalogDetails,

            string catalogState,

            string compartmentId,

            ImmutableDictionary<string, string> definedTags,

            string description,

            ImmutableArray<Outputs.GetOccAvailabilityCatalogDetailResult> details,

            string displayName,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            string lifecycleDetails,

            ImmutableArray<Outputs.GetOccAvailabilityCatalogMetadataDetailResult> metadataDetails,

            string @namespace,

            string occAvailabilityCatalogId,

            string occCustomerGroupId,

            string state,

            ImmutableDictionary<string, string> systemTags,

            string timeCreated,

            string timeUpdated)
        {
            Base64encodedCatalogDetails = base64encodedCatalogDetails;
            CatalogState = catalogState;
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            Description = description;
            Details = details;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            LifecycleDetails = lifecycleDetails;
            MetadataDetails = metadataDetails;
            Namespace = @namespace;
            OccAvailabilityCatalogId = occAvailabilityCatalogId;
            OccCustomerGroupId = occCustomerGroupId;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
