// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CapacityManagement
{
    public static class GetOccCapacityRequest
    {
        /// <summary>
        /// This data source provides details about a specific Occ Capacity Request resource in Oracle Cloud Infrastructure Capacity Management service.
        /// 
        /// Get details about the capacity request.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOccCapacityRequest = Oci.CapacityManagement.GetOccCapacityRequest.Invoke(new()
        ///     {
        ///         OccCapacityRequestId = testOccCapacityRequestOciCapacityManagementOccCapacityRequest.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetOccCapacityRequestResult> InvokeAsync(GetOccCapacityRequestArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOccCapacityRequestResult>("oci:CapacityManagement/getOccCapacityRequest:getOccCapacityRequest", args ?? new GetOccCapacityRequestArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Occ Capacity Request resource in Oracle Cloud Infrastructure Capacity Management service.
        /// 
        /// Get details about the capacity request.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOccCapacityRequest = Oci.CapacityManagement.GetOccCapacityRequest.Invoke(new()
        ///     {
        ///         OccCapacityRequestId = testOccCapacityRequestOciCapacityManagementOccCapacityRequest.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOccCapacityRequestResult> Invoke(GetOccCapacityRequestInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOccCapacityRequestResult>("oci:CapacityManagement/getOccCapacityRequest:getOccCapacityRequest", args ?? new GetOccCapacityRequestInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOccCapacityRequestArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the capacity request.
        /// </summary>
        [Input("occCapacityRequestId", required: true)]
        public string OccCapacityRequestId { get; set; } = null!;

        public GetOccCapacityRequestArgs()
        {
        }
        public static new GetOccCapacityRequestArgs Empty => new GetOccCapacityRequestArgs();
    }

    public sealed class GetOccCapacityRequestInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the capacity request.
        /// </summary>
        [Input("occCapacityRequestId", required: true)]
        public Input<string> OccCapacityRequestId { get; set; } = null!;

        public GetOccCapacityRequestInvokeArgs()
        {
        }
        public static new GetOccCapacityRequestInvokeArgs Empty => new GetOccCapacityRequestInvokeArgs();
    }


    [OutputType]
    public sealed class GetOccCapacityRequestResult
    {
        /// <summary>
        /// The availability domain of the resource which is to be transferred. Note that this is only required for Capacity Request Transfer requests.
        /// </summary>
        public readonly string AvailabilityDomain;
        /// <summary>
        /// The OCID of the tenancy from which the request was made.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The date by which the capacity requested by customers before dateFinalCustomerOrder needs to be fulfilled.
        /// </summary>
        public readonly string DateExpectedCapacityHandover;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// Meaningful text about the capacity request.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// A list of resources requested as part of this request
        /// </summary>
        public readonly ImmutableArray<Outputs.GetOccCapacityRequestDetailResult> Details;
        /// <summary>
        /// The display name of the capacity request.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The OCID of the capacity request.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed State.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// The name of the Oracle Cloud Infrastructure service in consideration. For example, Compute, Exadata, and so on.
        /// </summary>
        public readonly string Namespace;
        /// <summary>
        /// The OCID of the availability catalog against which the capacity request was placed.
        /// </summary>
        public readonly string OccAvailabilityCatalogId;
        public readonly string OccCapacityRequestId;
        /// <summary>
        /// The OCID of the customer group to which this customer belongs to.
        /// </summary>
        public readonly string OccCustomerGroupId;
        public readonly ImmutableArray<Outputs.GetOccCapacityRequestPatchOperationResult> PatchOperations;
        /// <summary>
        /// The name of the region for which the capacity request was made.
        /// </summary>
        public readonly string Region;
        /// <summary>
        /// The different states the capacity request goes through.
        /// </summary>
        public readonly string RequestState;
        /// <summary>
        /// Type of Capacity Request(New or Transfer)
        /// </summary>
        public readonly string RequestType;
        /// <summary>
        /// The current lifecycle state of the resource.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// The time when the capacity request was created.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time when the capacity request was updated.
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetOccCapacityRequestResult(
            string availabilityDomain,

            string compartmentId,

            string dateExpectedCapacityHandover,

            ImmutableDictionary<string, string> definedTags,

            string description,

            ImmutableArray<Outputs.GetOccCapacityRequestDetailResult> details,

            string displayName,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            string lifecycleDetails,

            string @namespace,

            string occAvailabilityCatalogId,

            string occCapacityRequestId,

            string occCustomerGroupId,

            ImmutableArray<Outputs.GetOccCapacityRequestPatchOperationResult> patchOperations,

            string region,

            string requestState,

            string requestType,

            string state,

            ImmutableDictionary<string, string> systemTags,

            string timeCreated,

            string timeUpdated)
        {
            AvailabilityDomain = availabilityDomain;
            CompartmentId = compartmentId;
            DateExpectedCapacityHandover = dateExpectedCapacityHandover;
            DefinedTags = definedTags;
            Description = description;
            Details = details;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            LifecycleDetails = lifecycleDetails;
            Namespace = @namespace;
            OccAvailabilityCatalogId = occAvailabilityCatalogId;
            OccCapacityRequestId = occCapacityRequestId;
            OccCustomerGroupId = occCustomerGroupId;
            PatchOperations = patchOperations;
            Region = region;
            RequestState = requestState;
            RequestType = requestType;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
