// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CapacityManagement
{
    public static class GetOccCustomerGroup
    {
        /// <summary>
        /// This data source provides details about a specific Occ Customer Group resource in Oracle Cloud Infrastructure Capacity Management service.
        /// 
        /// Gets information about the specified customer group.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOccCustomerGroup = Oci.CapacityManagement.GetOccCustomerGroup.Invoke(new()
        ///     {
        ///         OccCustomerGroupId = testOccCustomerGroupOciCapacityManagementOccCustomerGroup.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetOccCustomerGroupResult> InvokeAsync(GetOccCustomerGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOccCustomerGroupResult>("oci:CapacityManagement/getOccCustomerGroup:getOccCustomerGroup", args ?? new GetOccCustomerGroupArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Occ Customer Group resource in Oracle Cloud Infrastructure Capacity Management service.
        /// 
        /// Gets information about the specified customer group.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOccCustomerGroup = Oci.CapacityManagement.GetOccCustomerGroup.Invoke(new()
        ///     {
        ///         OccCustomerGroupId = testOccCustomerGroupOciCapacityManagementOccCustomerGroup.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetOccCustomerGroupResult> Invoke(GetOccCustomerGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOccCustomerGroupResult>("oci:CapacityManagement/getOccCustomerGroup:getOccCustomerGroup", args ?? new GetOccCustomerGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOccCustomerGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the customer group.
        /// </summary>
        [Input("occCustomerGroupId", required: true)]
        public string OccCustomerGroupId { get; set; } = null!;

        public GetOccCustomerGroupArgs()
        {
        }
        public static new GetOccCustomerGroupArgs Empty => new GetOccCustomerGroupArgs();
    }

    public sealed class GetOccCustomerGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the customer group.
        /// </summary>
        [Input("occCustomerGroupId", required: true)]
        public Input<string> OccCustomerGroupId { get; set; } = null!;

        public GetOccCustomerGroupInvokeArgs()
        {
        }
        public static new GetOccCustomerGroupInvokeArgs Empty => new GetOccCustomerGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetOccCustomerGroupResult
    {
        /// <summary>
        /// The OCID of the tenancy containing the customer group.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// A list containing all the customers that belong to this customer group
        /// </summary>
        public readonly ImmutableArray<Outputs.GetOccCustomerGroupCustomersListResult> CustomersLists;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// The description about the customer group.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The display name of the customer group.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed State.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// The OCID of the customer group.
        /// </summary>
        public readonly string OccCustomerGroupId;
        /// <summary>
        /// The current lifecycle state of the resource.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// To determine whether the customer group is enabled/disabled.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> SystemTags;
        /// <summary>
        /// The time when the customer group was created.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time when the customer group was last updated.
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetOccCustomerGroupResult(
            string compartmentId,

            ImmutableArray<Outputs.GetOccCustomerGroupCustomersListResult> customersLists,

            ImmutableDictionary<string, object> definedTags,

            string description,

            string displayName,

            ImmutableDictionary<string, object> freeformTags,

            string id,

            string lifecycleDetails,

            string occCustomerGroupId,

            string state,

            string status,

            ImmutableDictionary<string, object> systemTags,

            string timeCreated,

            string timeUpdated)
        {
            CompartmentId = compartmentId;
            CustomersLists = customersLists;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            LifecycleDetails = lifecycleDetails;
            OccCustomerGroupId = occCustomerGroupId;
            State = state;
            Status = status;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
