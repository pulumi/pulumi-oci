// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CapacityManagement
{
    public static class GetOccCustomerGroups
    {
        /// <summary>
        /// This data source provides the list of Occ Customer Groups in Oracle Cloud Infrastructure Capacity Management service.
        /// 
        /// Lists all the customer groups.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOccCustomerGroups = Oci.CapacityManagement.GetOccCustomerGroups.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = occCustomerGroupDisplayName,
        ///         Id = occCustomerGroupId,
        ///         Status = occCustomerGroupStatus,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetOccCustomerGroupsResult> InvokeAsync(GetOccCustomerGroupsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOccCustomerGroupsResult>("oci:CapacityManagement/getOccCustomerGroups:getOccCustomerGroups", args ?? new GetOccCustomerGroupsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Occ Customer Groups in Oracle Cloud Infrastructure Capacity Management service.
        /// 
        /// Lists all the customer groups.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOccCustomerGroups = Oci.CapacityManagement.GetOccCustomerGroups.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = occCustomerGroupDisplayName,
        ///         Id = occCustomerGroupId,
        ///         Status = occCustomerGroupStatus,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOccCustomerGroupsResult> Invoke(GetOccCustomerGroupsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOccCustomerGroupsResult>("oci:CapacityManagement/getOccCustomerGroups:getOccCustomerGroups", args ?? new GetOccCustomerGroupsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Occ Customer Groups in Oracle Cloud Infrastructure Capacity Management service.
        /// 
        /// Lists all the customer groups.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOccCustomerGroups = Oci.CapacityManagement.GetOccCustomerGroups.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = occCustomerGroupDisplayName,
        ///         Id = occCustomerGroupId,
        ///         Status = occCustomerGroupStatus,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOccCustomerGroupsResult> Invoke(GetOccCustomerGroupsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetOccCustomerGroupsResult>("oci:CapacityManagement/getOccCustomerGroups:getOccCustomerGroups", args ?? new GetOccCustomerGroupsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOccCustomerGroupsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ocid of the compartment or tenancy in which resources are to be listed. This will also be used for authorization purposes.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only the resources that match the entire display name. The match is not case sensitive.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetOccCustomerGroupsFilterArgs>? _filters;
        public List<Inputs.GetOccCustomerGroupsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetOccCustomerGroupsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A query filter to return the list result based on the customer group OCID. This is done for users who have INSPECT permission but do not have READ permission.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// A query filter to return the list result based on status.
        /// </summary>
        [Input("status")]
        public string? Status { get; set; }

        public GetOccCustomerGroupsArgs()
        {
        }
        public static new GetOccCustomerGroupsArgs Empty => new GetOccCustomerGroupsArgs();
    }

    public sealed class GetOccCustomerGroupsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ocid of the compartment or tenancy in which resources are to be listed. This will also be used for authorization purposes.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only the resources that match the entire display name. The match is not case sensitive.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetOccCustomerGroupsFilterInputArgs>? _filters;
        public InputList<Inputs.GetOccCustomerGroupsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetOccCustomerGroupsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A query filter to return the list result based on the customer group OCID. This is done for users who have INSPECT permission but do not have READ permission.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// A query filter to return the list result based on status.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public GetOccCustomerGroupsInvokeArgs()
        {
        }
        public static new GetOccCustomerGroupsInvokeArgs Empty => new GetOccCustomerGroupsInvokeArgs();
    }


    [OutputType]
    public sealed class GetOccCustomerGroupsResult
    {
        /// <summary>
        /// The OCID of the tenancy containing the customer group.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The display name of the customer group.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetOccCustomerGroupsFilterResult> Filters;
        /// <summary>
        /// The OCID of the customer group.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The list of occ_customer_group_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetOccCustomerGroupsOccCustomerGroupCollectionResult> OccCustomerGroupCollections;
        /// <summary>
        /// To determine whether the customer group is enabled/disabled.
        /// </summary>
        public readonly string? Status;

        [OutputConstructor]
        private GetOccCustomerGroupsResult(
            string compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetOccCustomerGroupsFilterResult> filters,

            string? id,

            ImmutableArray<Outputs.GetOccCustomerGroupsOccCustomerGroupCollectionResult> occCustomerGroupCollections,

            string? status)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            OccCustomerGroupCollections = occCustomerGroupCollections;
            Status = status;
        }
    }
}
