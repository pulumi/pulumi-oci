// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CapacityManagement
{
    public static class GetOccHandoverResourceBlockDetails
    {
        /// <summary>
        /// This data source provides the list of Occ Handover Resource Block Details in Oracle Cloud Infrastructure Capacity Management service.
        /// 
        /// List details about a given occHandoverResourceBlock.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOccHandoverResourceBlockDetails = Oci.CapacityManagement.GetOccHandoverResourceBlockDetails.Invoke(new()
        ///     {
        ///         OccHandoverResourceBlockId = testOccHandoverResourceBlock.Id,
        ///         HostId = testHost.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetOccHandoverResourceBlockDetailsResult> InvokeAsync(GetOccHandoverResourceBlockDetailsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOccHandoverResourceBlockDetailsResult>("oci:CapacityManagement/getOccHandoverResourceBlockDetails:getOccHandoverResourceBlockDetails", args ?? new GetOccHandoverResourceBlockDetailsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Occ Handover Resource Block Details in Oracle Cloud Infrastructure Capacity Management service.
        /// 
        /// List details about a given occHandoverResourceBlock.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOccHandoverResourceBlockDetails = Oci.CapacityManagement.GetOccHandoverResourceBlockDetails.Invoke(new()
        ///     {
        ///         OccHandoverResourceBlockId = testOccHandoverResourceBlock.Id,
        ///         HostId = testHost.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOccHandoverResourceBlockDetailsResult> Invoke(GetOccHandoverResourceBlockDetailsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOccHandoverResourceBlockDetailsResult>("oci:CapacityManagement/getOccHandoverResourceBlockDetails:getOccHandoverResourceBlockDetails", args ?? new GetOccHandoverResourceBlockDetailsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Occ Handover Resource Block Details in Oracle Cloud Infrastructure Capacity Management service.
        /// 
        /// List details about a given occHandoverResourceBlock.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOccHandoverResourceBlockDetails = Oci.CapacityManagement.GetOccHandoverResourceBlockDetails.Invoke(new()
        ///     {
        ///         OccHandoverResourceBlockId = testOccHandoverResourceBlock.Id,
        ///         HostId = testHost.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOccHandoverResourceBlockDetailsResult> Invoke(GetOccHandoverResourceBlockDetailsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetOccHandoverResourceBlockDetailsResult>("oci:CapacityManagement/getOccHandoverResourceBlockDetails:getOccHandoverResourceBlockDetails", args ?? new GetOccHandoverResourceBlockDetailsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOccHandoverResourceBlockDetailsArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetOccHandoverResourceBlockDetailsFilterArgs>? _filters;
        public List<Inputs.GetOccHandoverResourceBlockDetailsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetOccHandoverResourceBlockDetailsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// This fiter is applicable only for COMPUTE namespace. It helps in fetching of all resource block details for which the hostId is equal to the one provided in this query param.
        /// </summary>
        [Input("hostId")]
        public string? HostId { get; set; }

        /// <summary>
        /// The OCID of the OccHandoverResource which is a required query parameter for listing OccHandoverResourceDetails.
        /// </summary>
        [Input("occHandoverResourceBlockId", required: true)]
        public string OccHandoverResourceBlockId { get; set; } = null!;

        public GetOccHandoverResourceBlockDetailsArgs()
        {
        }
        public static new GetOccHandoverResourceBlockDetailsArgs Empty => new GetOccHandoverResourceBlockDetailsArgs();
    }

    public sealed class GetOccHandoverResourceBlockDetailsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetOccHandoverResourceBlockDetailsFilterInputArgs>? _filters;
        public InputList<Inputs.GetOccHandoverResourceBlockDetailsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetOccHandoverResourceBlockDetailsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// This fiter is applicable only for COMPUTE namespace. It helps in fetching of all resource block details for which the hostId is equal to the one provided in this query param.
        /// </summary>
        [Input("hostId")]
        public Input<string>? HostId { get; set; }

        /// <summary>
        /// The OCID of the OccHandoverResource which is a required query parameter for listing OccHandoverResourceDetails.
        /// </summary>
        [Input("occHandoverResourceBlockId", required: true)]
        public Input<string> OccHandoverResourceBlockId { get; set; } = null!;

        public GetOccHandoverResourceBlockDetailsInvokeArgs()
        {
        }
        public static new GetOccHandoverResourceBlockDetailsInvokeArgs Empty => new GetOccHandoverResourceBlockDetailsInvokeArgs();
    }


    [OutputType]
    public sealed class GetOccHandoverResourceBlockDetailsResult
    {
        public readonly ImmutableArray<Outputs.GetOccHandoverResourceBlockDetailsFilterResult> Filters;
        public readonly string? HostId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of occ_handover_resource_block_detail_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetOccHandoverResourceBlockDetailsOccHandoverResourceBlockDetailCollectionResult> OccHandoverResourceBlockDetailCollections;
        public readonly string OccHandoverResourceBlockId;

        [OutputConstructor]
        private GetOccHandoverResourceBlockDetailsResult(
            ImmutableArray<Outputs.GetOccHandoverResourceBlockDetailsFilterResult> filters,

            string? hostId,

            string id,

            ImmutableArray<Outputs.GetOccHandoverResourceBlockDetailsOccHandoverResourceBlockDetailCollectionResult> occHandoverResourceBlockDetailCollections,

            string occHandoverResourceBlockId)
        {
            Filters = filters;
            HostId = hostId;
            Id = id;
            OccHandoverResourceBlockDetailCollections = occHandoverResourceBlockDetailCollections;
            OccHandoverResourceBlockId = occHandoverResourceBlockId;
        }
    }
}
