// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CapacityManagement.Inputs
{

    public sealed class OccCapacityRequestDetailGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The actual handed over quantity of resources at the time of request resolution.
        /// </summary>
        [Input("actualHandoverQuantity")]
        public Input<string>? ActualHandoverQuantity { get; set; }

        [Input("associatedOccHandoverResourceBlockLists")]
        private InputList<Inputs.OccCapacityRequestDetailAssociatedOccHandoverResourceBlockListGetArgs>? _associatedOccHandoverResourceBlockLists;

        /// <summary>
        /// A list containing details about occHandoverResourceBlocks which were handed over for the corresponding resource name.
        /// </summary>
        public InputList<Inputs.OccCapacityRequestDetailAssociatedOccHandoverResourceBlockListGetArgs> AssociatedOccHandoverResourceBlockLists
        {
            get => _associatedOccHandoverResourceBlockLists ?? (_associatedOccHandoverResourceBlockLists = new InputList<Inputs.OccCapacityRequestDetailAssociatedOccHandoverResourceBlockListGetArgs>());
            set => _associatedOccHandoverResourceBlockLists = value;
        }

        /// <summary>
        /// The availability domain of the resource which is to be transferred. Note that this is only required for Capacity Request Transfer requests.
        /// </summary>
        [Input("availabilityDomain")]
        public Input<string>? AvailabilityDomain { get; set; }

        /// <summary>
        /// The date on which the actual handover quantity of resources is delivered.
        /// </summary>
        [Input("dateActualHandover")]
        public Input<string>? DateActualHandover { get; set; }

        /// <summary>
        /// The date on which the latest increment to supplied quantity of resources was delivered.
        /// </summary>
        [Input("dateExpectedHandover")]
        public Input<string>? DateExpectedHandover { get; set; }

        /// <summary>
        /// The number of compute server's with name &lt;resourceName&gt; required by the user.
        /// </summary>
        [Input("demandQuantity", required: true)]
        public Input<string> DemandQuantity { get; set; } = null!;

        /// <summary>
        /// The incremental quantity of resources supplied as the provisioning is underway.
        /// </summary>
        [Input("expectedHandoverQuantity")]
        public Input<string>? ExpectedHandoverQuantity { get; set; }

        /// <summary>
        /// The name of the COMPUTE server shape for which the request is made. Do not use CAPACITY_CONSTRAINT as the resource name.
        /// </summary>
        [Input("resourceName", required: true)]
        public Input<string> ResourceName { get; set; } = null!;

        /// <summary>
        /// The type of the resource against which the user wants to place a capacity request.
        /// </summary>
        [Input("resourceType", required: true)]
        public Input<string> ResourceType { get; set; } = null!;

        /// <summary>
        /// The WorkloadType from where capacity request are to be transferred.
        /// </summary>
        [Input("sourceWorkloadType")]
        public Input<string>? SourceWorkloadType { get; set; }

        /// <summary>
        /// The type of the workload (Generic/ROW).
        /// </summary>
        [Input("workloadType", required: true)]
        public Input<string> WorkloadType { get; set; } = null!;

        public OccCapacityRequestDetailGetArgs()
        {
        }
        public static new OccCapacityRequestDetailGetArgs Empty => new OccCapacityRequestDetailGetArgs();
    }
}
