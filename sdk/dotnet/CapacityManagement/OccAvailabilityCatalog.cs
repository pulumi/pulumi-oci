// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CapacityManagement
{
    /// <summary>
    /// This resource provides the Occ Availability Catalog resource in Oracle Cloud Infrastructure Capacity Management service.
    /// 
    /// Create availability catalog
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testOccAvailabilityCatalog = new Oci.CapacityManagement.OccAvailabilityCatalog("test_occ_availability_catalog", new()
    ///     {
    ///         Base64encodedCatalogDetails = occAvailabilityCatalogBase64encodedCatalogDetails,
    ///         CompartmentId = compartmentId,
    ///         DisplayName = occAvailabilityCatalogDisplayName,
    ///         Namespace = occAvailabilityCatalogNamespace,
    ///         OccCustomerGroupId = testOccCustomerGroup.Id,
    ///         DefinedTags = 
    ///         {
    ///             { "foo-namespace.bar-key", "value" },
    ///         },
    ///         Description = occAvailabilityCatalogDescription,
    ///         FreeformTags = 
    ///         {
    ///             { "bar-key", "value" },
    ///         },
    ///         MetadataDetails = new Oci.CapacityManagement.Inputs.OccAvailabilityCatalogMetadataDetailsArgs
    ///         {
    ///             FormatVersion = occAvailabilityCatalogMetadataDetailsFormatVersion,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// OccAvailabilityCatalogs can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:CapacityManagement/occAvailabilityCatalog:OccAvailabilityCatalog test_occ_availability_catalog "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:CapacityManagement/occAvailabilityCatalog:OccAvailabilityCatalog")]
    public partial class OccAvailabilityCatalog : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The base 64 encoded string corresponding to the catalog file contents.
        /// </summary>
        [Output("base64encodedCatalogDetails")]
        public Output<string> Base64encodedCatalogDetails { get; private set; } = null!;

        /// <summary>
        /// The different states associated with the availability catalog.
        /// </summary>
        [Output("catalogState")]
        public Output<string> CatalogState { get; private set; } = null!;

        /// <summary>
        /// Since all resources are at tenancy level hence this will be the ocid of the tenancy where operation is to be performed.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, string>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Additional information about the availability catalog.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// Details about capacity available for different resources in catalog.
        /// </summary>
        [Output("details")]
        public Output<ImmutableArray<Outputs.OccAvailabilityCatalogDetail>> Details { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The display name of the availability catalog.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, string>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed State.
        /// </summary>
        [Output("lifecycleDetails")]
        public Output<string> LifecycleDetails { get; private set; } = null!;

        /// <summary>
        /// Used for representing the metadata of the catalog. This denotes the version and format of the CSV file for parsing.
        /// </summary>
        [Output("metadataDetails")]
        public Output<Outputs.OccAvailabilityCatalogMetadataDetails> MetadataDetails { get; private set; } = null!;

        /// <summary>
        /// The name of the Oracle Cloud Infrastructure service in consideration. For example, Compute, Exadata, and so on.
        /// </summary>
        [Output("namespace")]
        public Output<string> Namespace { get; private set; } = null!;

        /// <summary>
        /// The OCID of the customer group.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("occCustomerGroupId")]
        public Output<string> OccCustomerGroupId { get; private set; } = null!;

        /// <summary>
        /// The current lifecycle state of the resource.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        [Output("systemTags")]
        public Output<ImmutableDictionary<string, string>> SystemTags { get; private set; } = null!;

        /// <summary>
        /// The time when the availability catalog was created.
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The time when the availability catalog was last updated.
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;


        /// <summary>
        /// Create a OccAvailabilityCatalog resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OccAvailabilityCatalog(string name, OccAvailabilityCatalogArgs args, CustomResourceOptions? options = null)
            : base("oci:CapacityManagement/occAvailabilityCatalog:OccAvailabilityCatalog", name, args ?? new OccAvailabilityCatalogArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OccAvailabilityCatalog(string name, Input<string> id, OccAvailabilityCatalogState? state = null, CustomResourceOptions? options = null)
            : base("oci:CapacityManagement/occAvailabilityCatalog:OccAvailabilityCatalog", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OccAvailabilityCatalog resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OccAvailabilityCatalog Get(string name, Input<string> id, OccAvailabilityCatalogState? state = null, CustomResourceOptions? options = null)
        {
            return new OccAvailabilityCatalog(name, id, state, options);
        }
    }

    public sealed class OccAvailabilityCatalogArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The base 64 encoded string corresponding to the catalog file contents.
        /// </summary>
        [Input("base64encodedCatalogDetails", required: true)]
        public Input<string> Base64encodedCatalogDetails { get; set; } = null!;

        /// <summary>
        /// Since all resources are at tenancy level hence this will be the ocid of the tenancy where operation is to be performed.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) Additional information about the availability catalog.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) The display name of the availability catalog.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// Used for representing the metadata of the catalog. This denotes the version and format of the CSV file for parsing.
        /// </summary>
        [Input("metadataDetails")]
        public Input<Inputs.OccAvailabilityCatalogMetadataDetailsArgs>? MetadataDetails { get; set; }

        /// <summary>
        /// The name of the Oracle Cloud Infrastructure service in consideration. For example, Compute, Exadata, and so on.
        /// </summary>
        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        /// <summary>
        /// The OCID of the customer group.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("occCustomerGroupId", required: true)]
        public Input<string> OccCustomerGroupId { get; set; } = null!;

        public OccAvailabilityCatalogArgs()
        {
        }
        public static new OccAvailabilityCatalogArgs Empty => new OccAvailabilityCatalogArgs();
    }

    public sealed class OccAvailabilityCatalogState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The base 64 encoded string corresponding to the catalog file contents.
        /// </summary>
        [Input("base64encodedCatalogDetails")]
        public Input<string>? Base64encodedCatalogDetails { get; set; }

        /// <summary>
        /// The different states associated with the availability catalog.
        /// </summary>
        [Input("catalogState")]
        public Input<string>? CatalogState { get; set; }

        /// <summary>
        /// Since all resources are at tenancy level hence this will be the ocid of the tenancy where operation is to be performed.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) Additional information about the availability catalog.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("details")]
        private InputList<Inputs.OccAvailabilityCatalogDetailGetArgs>? _details;

        /// <summary>
        /// Details about capacity available for different resources in catalog.
        /// </summary>
        public InputList<Inputs.OccAvailabilityCatalogDetailGetArgs> Details
        {
            get => _details ?? (_details = new InputList<Inputs.OccAvailabilityCatalogDetailGetArgs>());
            set => _details = value;
        }

        /// <summary>
        /// (Updatable) The display name of the availability catalog.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed State.
        /// </summary>
        [Input("lifecycleDetails")]
        public Input<string>? LifecycleDetails { get; set; }

        /// <summary>
        /// Used for representing the metadata of the catalog. This denotes the version and format of the CSV file for parsing.
        /// </summary>
        [Input("metadataDetails")]
        public Input<Inputs.OccAvailabilityCatalogMetadataDetailsGetArgs>? MetadataDetails { get; set; }

        /// <summary>
        /// The name of the Oracle Cloud Infrastructure service in consideration. For example, Compute, Exadata, and so on.
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        /// <summary>
        /// The OCID of the customer group.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("occCustomerGroupId")]
        public Input<string>? OccCustomerGroupId { get; set; }

        /// <summary>
        /// The current lifecycle state of the resource.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("systemTags")]
        private InputMap<string>? _systemTags;

        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public InputMap<string> SystemTags
        {
            get => _systemTags ?? (_systemTags = new InputMap<string>());
            set => _systemTags = value;
        }

        /// <summary>
        /// The time when the availability catalog was created.
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The time when the availability catalog was last updated.
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        public OccAvailabilityCatalogState()
        {
        }
        public static new OccAvailabilityCatalogState Empty => new OccAvailabilityCatalogState();
    }
}
