// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CapacityManagement
{
    /// <summary>
    /// This resource provides the Occ Capacity Request resource in Oracle Cloud Infrastructure Capacity Management service.
    /// 
    /// Create Capacity Request.
    ///   Updates the OccCapacityRequest by evaluating a sequence of instructions.
    /// 
    /// ## Import
    /// 
    /// OccCapacityRequests can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:CapacityManagement/occCapacityRequest:OccCapacityRequest test_occ_capacity_request "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:CapacityManagement/occCapacityRequest:OccCapacityRequest")]
    public partial class OccCapacityRequest : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The availability domain (AD) in which the new resource is to be placed. If this is specified then the capacity will be validated and fulfilled within the scope of this AD. Note that this field is NOT required for Capacity request Transfer requests.
        /// </summary>
        [Output("availabilityDomain")]
        public Output<string> AvailabilityDomain { get; private set; } = null!;

        /// <summary>
        /// Since all resources are at tenancy level hence this will be the ocid of the tenancy where operation is to be performed.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// The date by which the capacity requested by customers before dateFinalCustomerOrder needs to be fulfilled.
        /// </summary>
        [Output("dateExpectedCapacityHandover")]
        public Output<string> DateExpectedCapacityHandover { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, string>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// Meaningful text about the capacity request.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// A list of different resources requested by the user.
        /// </summary>
        [Output("details")]
        public Output<ImmutableArray<Outputs.OccCapacityRequestDetail>> Details { get; private set; } = null!;

        /// <summary>
        /// (Updatable) An user-friendly name for the capacity request. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, string>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed State.
        /// </summary>
        [Output("lifecycleDetails")]
        public Output<string> LifecycleDetails { get; private set; } = null!;

        /// <summary>
        /// The name of the Oracle Cloud Infrastructure service in consideration. For example, Compute, Exadata, and so on.
        /// </summary>
        [Output("namespace")]
        public Output<string> Namespace { get; private set; } = null!;

        /// <summary>
        /// The OCID of the availability catalog against which capacity request is made.
        /// </summary>
        [Output("occAvailabilityCatalogId")]
        public Output<string> OccAvailabilityCatalogId { get; private set; } = null!;

        /// <summary>
        /// The OCID of the customer group to which this customer belongs to.
        /// </summary>
        [Output("occCustomerGroupId")]
        public Output<string> OccCustomerGroupId { get; private set; } = null!;

        /// <summary>
        /// (Updatable)
        /// </summary>
        [Output("patchOperations")]
        public Output<ImmutableArray<Outputs.OccCapacityRequestPatchOperation>> PatchOperations { get; private set; } = null!;

        /// <summary>
        /// The name of the region for which the capacity request is made.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The subset of request states available for creating the capacity request.
        /// </summary>
        [Output("requestState")]
        public Output<string> RequestState { get; private set; } = null!;

        /// <summary>
        /// Type of Capacity Request(New or Transfer)
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("requestType")]
        public Output<string> RequestType { get; private set; } = null!;

        /// <summary>
        /// The current lifecycle state of the resource.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        [Output("systemTags")]
        public Output<ImmutableDictionary<string, string>> SystemTags { get; private set; } = null!;

        /// <summary>
        /// The time when the capacity request was created.
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The time when the capacity request was updated.
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;


        /// <summary>
        /// Create a OccCapacityRequest resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OccCapacityRequest(string name, OccCapacityRequestArgs args, CustomResourceOptions? options = null)
            : base("oci:CapacityManagement/occCapacityRequest:OccCapacityRequest", name, args ?? new OccCapacityRequestArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OccCapacityRequest(string name, Input<string> id, OccCapacityRequestState? state = null, CustomResourceOptions? options = null)
            : base("oci:CapacityManagement/occCapacityRequest:OccCapacityRequest", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OccCapacityRequest resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OccCapacityRequest Get(string name, Input<string> id, OccCapacityRequestState? state = null, CustomResourceOptions? options = null)
        {
            return new OccCapacityRequest(name, id, state, options);
        }
    }

    public sealed class OccCapacityRequestArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The availability domain (AD) in which the new resource is to be placed. If this is specified then the capacity will be validated and fulfilled within the scope of this AD. Note that this field is NOT required for Capacity request Transfer requests.
        /// </summary>
        [Input("availabilityDomain")]
        public Input<string>? AvailabilityDomain { get; set; }

        /// <summary>
        /// Since all resources are at tenancy level hence this will be the ocid of the tenancy where operation is to be performed.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// The date by which the capacity requested by customers before dateFinalCustomerOrder needs to be fulfilled.
        /// </summary>
        [Input("dateExpectedCapacityHandover", required: true)]
        public Input<string> DateExpectedCapacityHandover { get; set; } = null!;

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// Meaningful text about the capacity request.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("details", required: true)]
        private InputList<Inputs.OccCapacityRequestDetailArgs>? _details;

        /// <summary>
        /// A list of different resources requested by the user.
        /// </summary>
        public InputList<Inputs.OccCapacityRequestDetailArgs> Details
        {
            get => _details ?? (_details = new InputList<Inputs.OccCapacityRequestDetailArgs>());
            set => _details = value;
        }

        /// <summary>
        /// (Updatable) An user-friendly name for the capacity request. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed State.
        /// </summary>
        [Input("lifecycleDetails")]
        public Input<string>? LifecycleDetails { get; set; }

        /// <summary>
        /// The name of the Oracle Cloud Infrastructure service in consideration. For example, Compute, Exadata, and so on.
        /// </summary>
        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        /// <summary>
        /// The OCID of the availability catalog against which capacity request is made.
        /// </summary>
        [Input("occAvailabilityCatalogId", required: true)]
        public Input<string> OccAvailabilityCatalogId { get; set; } = null!;

        [Input("patchOperations")]
        private InputList<Inputs.OccCapacityRequestPatchOperationArgs>? _patchOperations;

        /// <summary>
        /// (Updatable)
        /// </summary>
        public InputList<Inputs.OccCapacityRequestPatchOperationArgs> PatchOperations
        {
            get => _patchOperations ?? (_patchOperations = new InputList<Inputs.OccCapacityRequestPatchOperationArgs>());
            set => _patchOperations = value;
        }

        /// <summary>
        /// The name of the region for which the capacity request is made.
        /// </summary>
        [Input("region", required: true)]
        public Input<string> Region { get; set; } = null!;

        /// <summary>
        /// (Updatable) The subset of request states available for creating the capacity request.
        /// </summary>
        [Input("requestState")]
        public Input<string>? RequestState { get; set; }

        /// <summary>
        /// Type of Capacity Request(New or Transfer)
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("requestType")]
        public Input<string>? RequestType { get; set; }

        public OccCapacityRequestArgs()
        {
        }
        public static new OccCapacityRequestArgs Empty => new OccCapacityRequestArgs();
    }

    public sealed class OccCapacityRequestState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The availability domain (AD) in which the new resource is to be placed. If this is specified then the capacity will be validated and fulfilled within the scope of this AD. Note that this field is NOT required for Capacity request Transfer requests.
        /// </summary>
        [Input("availabilityDomain")]
        public Input<string>? AvailabilityDomain { get; set; }

        /// <summary>
        /// Since all resources are at tenancy level hence this will be the ocid of the tenancy where operation is to be performed.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// The date by which the capacity requested by customers before dateFinalCustomerOrder needs to be fulfilled.
        /// </summary>
        [Input("dateExpectedCapacityHandover")]
        public Input<string>? DateExpectedCapacityHandover { get; set; }

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// Meaningful text about the capacity request.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("details")]
        private InputList<Inputs.OccCapacityRequestDetailGetArgs>? _details;

        /// <summary>
        /// A list of different resources requested by the user.
        /// </summary>
        public InputList<Inputs.OccCapacityRequestDetailGetArgs> Details
        {
            get => _details ?? (_details = new InputList<Inputs.OccCapacityRequestDetailGetArgs>());
            set => _details = value;
        }

        /// <summary>
        /// (Updatable) An user-friendly name for the capacity request. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed State.
        /// </summary>
        [Input("lifecycleDetails")]
        public Input<string>? LifecycleDetails { get; set; }

        /// <summary>
        /// The name of the Oracle Cloud Infrastructure service in consideration. For example, Compute, Exadata, and so on.
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        /// <summary>
        /// The OCID of the availability catalog against which capacity request is made.
        /// </summary>
        [Input("occAvailabilityCatalogId")]
        public Input<string>? OccAvailabilityCatalogId { get; set; }

        /// <summary>
        /// The OCID of the customer group to which this customer belongs to.
        /// </summary>
        [Input("occCustomerGroupId")]
        public Input<string>? OccCustomerGroupId { get; set; }

        [Input("patchOperations")]
        private InputList<Inputs.OccCapacityRequestPatchOperationGetArgs>? _patchOperations;

        /// <summary>
        /// (Updatable)
        /// </summary>
        public InputList<Inputs.OccCapacityRequestPatchOperationGetArgs> PatchOperations
        {
            get => _patchOperations ?? (_patchOperations = new InputList<Inputs.OccCapacityRequestPatchOperationGetArgs>());
            set => _patchOperations = value;
        }

        /// <summary>
        /// The name of the region for which the capacity request is made.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// (Updatable) The subset of request states available for creating the capacity request.
        /// </summary>
        [Input("requestState")]
        public Input<string>? RequestState { get; set; }

        /// <summary>
        /// Type of Capacity Request(New or Transfer)
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("requestType")]
        public Input<string>? RequestType { get; set; }

        /// <summary>
        /// The current lifecycle state of the resource.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("systemTags")]
        private InputMap<string>? _systemTags;

        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public InputMap<string> SystemTags
        {
            get => _systemTags ?? (_systemTags = new InputMap<string>());
            set => _systemTags = value;
        }

        /// <summary>
        /// The time when the capacity request was created.
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The time when the capacity request was updated.
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        public OccCapacityRequestState()
        {
        }
        public static new OccCapacityRequestState Empty => new OccCapacityRequestState();
    }
}
