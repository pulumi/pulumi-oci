// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CapacityManagement.Outputs
{

    [OutputType]
    public sealed class GetOccCapacityRequestDetailResult
    {
        /// <summary>
        /// The actual handed over quantity of resources at the time of request resolution.
        /// </summary>
        public readonly string ActualHandoverQuantity;
        /// <summary>
        /// A list containing details about occHandoverResourceBlocks which were handed over for the corresponding resource name.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetOccCapacityRequestDetailAssociatedOccHandoverResourceBlockListResult> AssociatedOccHandoverResourceBlockLists;
        /// <summary>
        /// The availability domain of the resource which is to be transferred. Note that this is only required for Capacity Request Transfer requests.
        /// </summary>
        public readonly string AvailabilityDomain;
        /// <summary>
        /// The date on which the actual handover quantity of resources is delivered.
        /// </summary>
        public readonly string DateActualHandover;
        /// <summary>
        /// The date on which the latest increment to supplied quantity of resources was delivered.
        /// </summary>
        public readonly string DateExpectedHandover;
        /// <summary>
        /// The number of compute server's with name &lt;resourceName&gt; required by the user.
        /// </summary>
        public readonly string DemandQuantity;
        /// <summary>
        /// The incremental quantity of resources supplied as the provisioning is underway.
        /// </summary>
        public readonly string ExpectedHandoverQuantity;
        /// <summary>
        /// The name of the COMPUTE server shape for which the request is made. Do not use CAPACITY_CONSTRAINT as the resource name.
        /// </summary>
        public readonly string ResourceName;
        /// <summary>
        /// The type of the resource against which the user wants to place a capacity request.
        /// </summary>
        public readonly string ResourceType;
        /// <summary>
        /// The WorkloadType from where capacity request are to be transferred.
        /// </summary>
        public readonly string SourceWorkloadType;
        /// <summary>
        /// The type of the workload (Generic/ROW).
        /// </summary>
        public readonly string WorkloadType;

        [OutputConstructor]
        private GetOccCapacityRequestDetailResult(
            string actualHandoverQuantity,

            ImmutableArray<Outputs.GetOccCapacityRequestDetailAssociatedOccHandoverResourceBlockListResult> associatedOccHandoverResourceBlockLists,

            string availabilityDomain,

            string dateActualHandover,

            string dateExpectedHandover,

            string demandQuantity,

            string expectedHandoverQuantity,

            string resourceName,

            string resourceType,

            string sourceWorkloadType,

            string workloadType)
        {
            ActualHandoverQuantity = actualHandoverQuantity;
            AssociatedOccHandoverResourceBlockLists = associatedOccHandoverResourceBlockLists;
            AvailabilityDomain = availabilityDomain;
            DateActualHandover = dateActualHandover;
            DateExpectedHandover = dateExpectedHandover;
            DemandQuantity = demandQuantity;
            ExpectedHandoverQuantity = expectedHandoverQuantity;
            ResourceName = resourceName;
            ResourceType = resourceType;
            SourceWorkloadType = sourceWorkloadType;
            WorkloadType = workloadType;
        }
    }
}
