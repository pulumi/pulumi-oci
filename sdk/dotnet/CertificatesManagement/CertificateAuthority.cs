// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CertificatesManagement
{
    /// <summary>
    /// This resource provides the Certificate Authority resource in Oracle Cloud Infrastructure Certificates Management service.
    /// 
    /// Creates a new certificate authority (CA) according to the details of the request.
    /// 
    /// ## Import
    /// 
    /// CertificateAuthorities can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:CertificatesManagement/certificateAuthority:CertificateAuthority test_certificate_authority "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:CertificatesManagement/certificateAuthority:CertificateAuthority")]
    public partial class CertificateAuthority : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) The configuration details for creating a certificate authority (CA).
        /// </summary>
        [Output("certificateAuthorityConfig")]
        public Output<Outputs.CertificateAuthorityCertificateAuthorityConfig> CertificateAuthorityConfig { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A list of rules that control how the CA is used and managed.
        /// </summary>
        [Output("certificateAuthorityRules")]
        public Output<ImmutableArray<Outputs.CertificateAuthorityCertificateAuthorityRule>> CertificateAuthorityRules { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The details of the certificate revocation list (CRL).
        /// </summary>
        [Output("certificateRevocationListDetails")]
        public Output<Outputs.CertificateAuthorityCertificateRevocationListDetails?> CertificateRevocationListDetails { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The compartment in which you want to create the CA.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// The origin of the CA.
        /// </summary>
        [Output("configType")]
        public Output<string> ConfigType { get; private set; } = null!;

        /// <summary>
        /// The metadata details of the certificate authority (CA) version. This summary object does not contain the CA contents.
        /// </summary>
        [Output("currentVersions")]
        public Output<ImmutableArray<Outputs.CertificateAuthorityCurrentVersion>> CurrentVersions { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, string>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A brief description of the CA.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, string>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// The OCID of the parent CA that issued this CA. If this is the root CA, then this value is null.
        /// </summary>
        [Output("issuerCertificateAuthorityId")]
        public Output<string> IssuerCertificateAuthorityId { get; private set; } = null!;

        /// <summary>
        /// The OCID of the Oracle Cloud Infrastructure Vault key used to encrypt the CA.
        /// </summary>
        [Output("kmsKeyId")]
        public Output<string> KmsKeyId { get; private set; } = null!;

        /// <summary>
        /// Additional information about the current CA lifecycle state.
        /// </summary>
        [Output("lifecycleDetails")]
        public Output<string> LifecycleDetails { get; private set; } = null!;

        /// <summary>
        /// A user-friendly name for the CA. Names are unique within a compartment. Avoid entering confidential information. Valid characters include uppercase or lowercase letters, numbers, hyphens, underscores, and periods.
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The algorithm used to sign public key certificates that the CA issues.
        /// </summary>
        [Output("signingAlgorithm")]
        public Output<string> SigningAlgorithm { get; private set; } = null!;

        /// <summary>
        /// The current lifecycle state of the certificate authority.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
        /// </summary>
        [Output("subjects")]
        public Output<ImmutableArray<Outputs.CertificateAuthoritySubject>> Subjects { get; private set; } = null!;

        /// <summary>
        /// A property indicating when the CA was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// An optional property indicating when to delete the CA version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
        /// </summary>
        [Output("timeOfDeletion")]
        public Output<string> TimeOfDeletion { get; private set; } = null!;


        /// <summary>
        /// Create a CertificateAuthority resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CertificateAuthority(string name, CertificateAuthorityArgs args, CustomResourceOptions? options = null)
            : base("oci:CertificatesManagement/certificateAuthority:CertificateAuthority", name, args ?? new CertificateAuthorityArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CertificateAuthority(string name, Input<string> id, CertificateAuthorityState? state = null, CustomResourceOptions? options = null)
            : base("oci:CertificatesManagement/certificateAuthority:CertificateAuthority", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CertificateAuthority resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CertificateAuthority Get(string name, Input<string> id, CertificateAuthorityState? state = null, CustomResourceOptions? options = null)
        {
            return new CertificateAuthority(name, id, state, options);
        }
    }

    public sealed class CertificateAuthorityArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The configuration details for creating a certificate authority (CA).
        /// </summary>
        [Input("certificateAuthorityConfig", required: true)]
        public Input<Inputs.CertificateAuthorityCertificateAuthorityConfigArgs> CertificateAuthorityConfig { get; set; } = null!;

        [Input("certificateAuthorityRules")]
        private InputList<Inputs.CertificateAuthorityCertificateAuthorityRuleArgs>? _certificateAuthorityRules;

        /// <summary>
        /// (Updatable) A list of rules that control how the CA is used and managed.
        /// </summary>
        public InputList<Inputs.CertificateAuthorityCertificateAuthorityRuleArgs> CertificateAuthorityRules
        {
            get => _certificateAuthorityRules ?? (_certificateAuthorityRules = new InputList<Inputs.CertificateAuthorityCertificateAuthorityRuleArgs>());
            set => _certificateAuthorityRules = value;
        }

        /// <summary>
        /// (Updatable) The details of the certificate revocation list (CRL).
        /// </summary>
        [Input("certificateRevocationListDetails")]
        public Input<Inputs.CertificateAuthorityCertificateRevocationListDetailsArgs>? CertificateRevocationListDetails { get; set; }

        /// <summary>
        /// (Updatable) The compartment in which you want to create the CA.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) A brief description of the CA.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// The OCID of the Oracle Cloud Infrastructure Vault key used to encrypt the CA.
        /// </summary>
        [Input("kmsKeyId", required: true)]
        public Input<string> KmsKeyId { get; set; } = null!;

        /// <summary>
        /// A user-friendly name for the CA. Names are unique within a compartment. Avoid entering confidential information. Valid characters include uppercase or lowercase letters, numbers, hyphens, underscores, and periods.
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public CertificateAuthorityArgs()
        {
        }
        public static new CertificateAuthorityArgs Empty => new CertificateAuthorityArgs();
    }

    public sealed class CertificateAuthorityState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The configuration details for creating a certificate authority (CA).
        /// </summary>
        [Input("certificateAuthorityConfig")]
        public Input<Inputs.CertificateAuthorityCertificateAuthorityConfigGetArgs>? CertificateAuthorityConfig { get; set; }

        [Input("certificateAuthorityRules")]
        private InputList<Inputs.CertificateAuthorityCertificateAuthorityRuleGetArgs>? _certificateAuthorityRules;

        /// <summary>
        /// (Updatable) A list of rules that control how the CA is used and managed.
        /// </summary>
        public InputList<Inputs.CertificateAuthorityCertificateAuthorityRuleGetArgs> CertificateAuthorityRules
        {
            get => _certificateAuthorityRules ?? (_certificateAuthorityRules = new InputList<Inputs.CertificateAuthorityCertificateAuthorityRuleGetArgs>());
            set => _certificateAuthorityRules = value;
        }

        /// <summary>
        /// (Updatable) The details of the certificate revocation list (CRL).
        /// </summary>
        [Input("certificateRevocationListDetails")]
        public Input<Inputs.CertificateAuthorityCertificateRevocationListDetailsGetArgs>? CertificateRevocationListDetails { get; set; }

        /// <summary>
        /// (Updatable) The compartment in which you want to create the CA.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// The origin of the CA.
        /// </summary>
        [Input("configType")]
        public Input<string>? ConfigType { get; set; }

        [Input("currentVersions")]
        private InputList<Inputs.CertificateAuthorityCurrentVersionGetArgs>? _currentVersions;

        /// <summary>
        /// The metadata details of the certificate authority (CA) version. This summary object does not contain the CA contents.
        /// </summary>
        public InputList<Inputs.CertificateAuthorityCurrentVersionGetArgs> CurrentVersions
        {
            get => _currentVersions ?? (_currentVersions = new InputList<Inputs.CertificateAuthorityCurrentVersionGetArgs>());
            set => _currentVersions = value;
        }

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) A brief description of the CA.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// The OCID of the parent CA that issued this CA. If this is the root CA, then this value is null.
        /// </summary>
        [Input("issuerCertificateAuthorityId")]
        public Input<string>? IssuerCertificateAuthorityId { get; set; }

        /// <summary>
        /// The OCID of the Oracle Cloud Infrastructure Vault key used to encrypt the CA.
        /// </summary>
        [Input("kmsKeyId")]
        public Input<string>? KmsKeyId { get; set; }

        /// <summary>
        /// Additional information about the current CA lifecycle state.
        /// </summary>
        [Input("lifecycleDetails")]
        public Input<string>? LifecycleDetails { get; set; }

        /// <summary>
        /// A user-friendly name for the CA. Names are unique within a compartment. Avoid entering confidential information. Valid characters include uppercase or lowercase letters, numbers, hyphens, underscores, and periods.
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The algorithm used to sign public key certificates that the CA issues.
        /// </summary>
        [Input("signingAlgorithm")]
        public Input<string>? SigningAlgorithm { get; set; }

        /// <summary>
        /// The current lifecycle state of the certificate authority.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("subjects")]
        private InputList<Inputs.CertificateAuthoritySubjectGetArgs>? _subjects;

        /// <summary>
        /// The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
        /// </summary>
        public InputList<Inputs.CertificateAuthoritySubjectGetArgs> Subjects
        {
            get => _subjects ?? (_subjects = new InputList<Inputs.CertificateAuthoritySubjectGetArgs>());
            set => _subjects = value;
        }

        /// <summary>
        /// A property indicating when the CA was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// An optional property indicating when to delete the CA version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
        /// </summary>
        [Input("timeOfDeletion")]
        public Input<string>? TimeOfDeletion { get; set; }

        public CertificateAuthorityState()
        {
        }
        public static new CertificateAuthorityState Empty => new CertificateAuthorityState();
    }
}
