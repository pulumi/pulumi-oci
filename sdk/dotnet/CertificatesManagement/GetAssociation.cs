// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CertificatesManagement
{
    public static class GetAssociation
    {
        /// <summary>
        /// This data source provides details about a specific Association resource in Oracle Cloud Infrastructure Certificates Management service.
        /// 
        /// Gets details about the specified association.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAssociation = Oci.CertificatesManagement.GetAssociation.Invoke(new()
        ///     {
        ///         AssociationId = oci_certificates_management_association.Test_association.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetAssociationResult> InvokeAsync(GetAssociationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAssociationResult>("oci:CertificatesManagement/getAssociation:getAssociation", args ?? new GetAssociationArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Association resource in Oracle Cloud Infrastructure Certificates Management service.
        /// 
        /// Gets details about the specified association.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAssociation = Oci.CertificatesManagement.GetAssociation.Invoke(new()
        ///     {
        ///         AssociationId = oci_certificates_management_association.Test_association.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetAssociationResult> Invoke(GetAssociationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAssociationResult>("oci:CertificatesManagement/getAssociation:getAssociation", args ?? new GetAssociationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAssociationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of an association between a certificate-related resource and another Oracle Cloud Infrastructure resource.
        /// </summary>
        [Input("associationId", required: true)]
        public string AssociationId { get; set; } = null!;

        public GetAssociationArgs()
        {
        }
        public static new GetAssociationArgs Empty => new GetAssociationArgs();
    }

    public sealed class GetAssociationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of an association between a certificate-related resource and another Oracle Cloud Infrastructure resource.
        /// </summary>
        [Input("associationId", required: true)]
        public Input<string> AssociationId { get; set; } = null!;

        public GetAssociationInvokeArgs()
        {
        }
        public static new GetAssociationInvokeArgs Empty => new GetAssociationInvokeArgs();
    }


    [OutputType]
    public sealed class GetAssociationResult
    {
        /// <summary>
        /// The OCID of the associated resource.
        /// </summary>
        public readonly string AssociatedResourceId;
        public readonly string AssociationId;
        /// <summary>
        /// Type of the association.
        /// </summary>
        public readonly string AssociationType;
        /// <summary>
        /// The OCID of the certificate-related resource associated with another Oracle Cloud Infrastructure resource.
        /// </summary>
        public readonly string CertificatesResourceId;
        /// <summary>
        /// The compartment OCID of the association, which is strongly tied to the compartment OCID of the certificate-related resource.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A user-friendly name generated by the service for the association, expressed in a format that follows the pattern: [certificatesResourceEntityType]-[associatedResourceEntityType]-UUID.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The current lifecycle state of the association.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// A property indicating when the association was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
        /// </summary>
        public readonly string TimeCreated;

        [OutputConstructor]
        private GetAssociationResult(
            string associatedResourceId,

            string associationId,

            string associationType,

            string certificatesResourceId,

            string compartmentId,

            string id,

            string name,

            string state,

            string timeCreated)
        {
            AssociatedResourceId = associatedResourceId;
            AssociationId = associationId;
            AssociationType = associationType;
            CertificatesResourceId = certificatesResourceId;
            CompartmentId = compartmentId;
            Id = id;
            Name = name;
            State = state;
            TimeCreated = timeCreated;
        }
    }
}
