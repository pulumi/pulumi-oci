// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CertificatesManagement
{
    public static class GetAssociations
    {
        /// <summary>
        /// This data source provides the list of Associations in Oracle Cloud Infrastructure Certificates Management service.
        /// 
        /// Lists all associations that match the query parameters.
        /// Optionally, you can use the parameter `FilterByAssociationIdQueryParam` to limit the result set to a single item that matches the specified association.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAssociations = Oci.CertificatesManagement.GetAssociations.Invoke(new()
        ///     {
        ///         AssociatedResourceId = testAssociatedResource.Id,
        ///         AssociationId = testAssociation.Id,
        ///         AssociationType = associationAssociationType,
        ///         CertificatesResourceId = testCertificatesResource.Id,
        ///         CompartmentId = compartmentId,
        ///         Name = associationName,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetAssociationsResult> InvokeAsync(GetAssociationsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAssociationsResult>("oci:CertificatesManagement/getAssociations:getAssociations", args ?? new GetAssociationsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Associations in Oracle Cloud Infrastructure Certificates Management service.
        /// 
        /// Lists all associations that match the query parameters.
        /// Optionally, you can use the parameter `FilterByAssociationIdQueryParam` to limit the result set to a single item that matches the specified association.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAssociations = Oci.CertificatesManagement.GetAssociations.Invoke(new()
        ///     {
        ///         AssociatedResourceId = testAssociatedResource.Id,
        ///         AssociationId = testAssociation.Id,
        ///         AssociationType = associationAssociationType,
        ///         CertificatesResourceId = testCertificatesResource.Id,
        ///         CompartmentId = compartmentId,
        ///         Name = associationName,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAssociationsResult> Invoke(GetAssociationsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAssociationsResult>("oci:CertificatesManagement/getAssociations:getAssociations", args ?? new GetAssociationsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAssociationsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A filter that returns only resources that match the given OCID of an associated Oracle Cloud Infrastructure resource.
        /// </summary>
        [Input("associatedResourceId")]
        public string? AssociatedResourceId { get; set; }

        /// <summary>
        /// The OCID of the association. If the parameter is set to null, the service lists all associations.
        /// </summary>
        [Input("associationId")]
        public string? AssociationId { get; set; }

        /// <summary>
        /// Type of associations to list. If the parameter is set to null, the service lists all types of associations.
        /// </summary>
        [Input("associationType")]
        public string? AssociationType { get; set; }

        /// <summary>
        /// A filter that returns only resources that match the given OCID of a certificate-related resource.
        /// </summary>
        [Input("certificatesResourceId")]
        public string? CertificatesResourceId { get; set; }

        /// <summary>
        /// A filter that returns only resources that match the given compartment OCID.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        [Input("filters")]
        private List<Inputs.GetAssociationsFilterArgs>? _filters;
        public List<Inputs.GetAssociationsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetAssociationsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter that returns only resources that match the specified name.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        public GetAssociationsArgs()
        {
        }
        public static new GetAssociationsArgs Empty => new GetAssociationsArgs();
    }

    public sealed class GetAssociationsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A filter that returns only resources that match the given OCID of an associated Oracle Cloud Infrastructure resource.
        /// </summary>
        [Input("associatedResourceId")]
        public Input<string>? AssociatedResourceId { get; set; }

        /// <summary>
        /// The OCID of the association. If the parameter is set to null, the service lists all associations.
        /// </summary>
        [Input("associationId")]
        public Input<string>? AssociationId { get; set; }

        /// <summary>
        /// Type of associations to list. If the parameter is set to null, the service lists all types of associations.
        /// </summary>
        [Input("associationType")]
        public Input<string>? AssociationType { get; set; }

        /// <summary>
        /// A filter that returns only resources that match the given OCID of a certificate-related resource.
        /// </summary>
        [Input("certificatesResourceId")]
        public Input<string>? CertificatesResourceId { get; set; }

        /// <summary>
        /// A filter that returns only resources that match the given compartment OCID.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetAssociationsFilterInputArgs>? _filters;
        public InputList<Inputs.GetAssociationsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetAssociationsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter that returns only resources that match the specified name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetAssociationsInvokeArgs()
        {
        }
        public static new GetAssociationsInvokeArgs Empty => new GetAssociationsInvokeArgs();
    }


    [OutputType]
    public sealed class GetAssociationsResult
    {
        /// <summary>
        /// The OCID of the associated resource.
        /// </summary>
        public readonly string? AssociatedResourceId;
        /// <summary>
        /// The list of association_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAssociationsAssociationCollectionResult> AssociationCollections;
        public readonly string? AssociationId;
        /// <summary>
        /// Type of the association.
        /// </summary>
        public readonly string? AssociationType;
        /// <summary>
        /// The OCID of the certificate-related resource associated with another Oracle Cloud Infrastructure resource.
        /// </summary>
        public readonly string? CertificatesResourceId;
        /// <summary>
        /// The compartment OCID of the association, which is strongly tied to the compartment OCID of the certificate-related resource.
        /// </summary>
        public readonly string? CompartmentId;
        public readonly ImmutableArray<Outputs.GetAssociationsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A user-friendly name generated by the service for the association, expressed in a format that follows the pattern: [certificatesResourceEntityType]-[associatedResourceEntityType]-UUID.
        /// </summary>
        public readonly string? Name;

        [OutputConstructor]
        private GetAssociationsResult(
            string? associatedResourceId,

            ImmutableArray<Outputs.GetAssociationsAssociationCollectionResult> associationCollections,

            string? associationId,

            string? associationType,

            string? certificatesResourceId,

            string? compartmentId,

            ImmutableArray<Outputs.GetAssociationsFilterResult> filters,

            string id,

            string? name)
        {
            AssociatedResourceId = associatedResourceId;
            AssociationCollections = associationCollections;
            AssociationId = associationId;
            AssociationType = associationType;
            CertificatesResourceId = certificatesResourceId;
            CompartmentId = compartmentId;
            Filters = filters;
            Id = id;
            Name = name;
        }
    }
}
