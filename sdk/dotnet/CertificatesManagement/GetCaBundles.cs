// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CertificatesManagement
{
    public static class GetCaBundles
    {
        /// <summary>
        /// This data source provides the list of Ca Bundles in Oracle Cloud Infrastructure Certificates Management service.
        /// 
        /// Lists all CA bundles that match the query parameters.
        /// Optionally, you can use the parameter `FilterByCaBundleIdQueryParam` to limit the result set to a single item that matches the specified CA bundle.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testCaBundles = Oci.CertificatesManagement.GetCaBundles.Invoke(new()
        ///     {
        ///         CaBundleId = oci_certificates_management_ca_bundle.Test_ca_bundle.Id,
        ///         CompartmentId = @var.Compartment_id,
        ///         Name = @var.Ca_bundle_name,
        ///         State = @var.Ca_bundle_state,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetCaBundlesResult> InvokeAsync(GetCaBundlesArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetCaBundlesResult>("oci:CertificatesManagement/getCaBundles:getCaBundles", args ?? new GetCaBundlesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Ca Bundles in Oracle Cloud Infrastructure Certificates Management service.
        /// 
        /// Lists all CA bundles that match the query parameters.
        /// Optionally, you can use the parameter `FilterByCaBundleIdQueryParam` to limit the result set to a single item that matches the specified CA bundle.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testCaBundles = Oci.CertificatesManagement.GetCaBundles.Invoke(new()
        ///     {
        ///         CaBundleId = oci_certificates_management_ca_bundle.Test_ca_bundle.Id,
        ///         CompartmentId = @var.Compartment_id,
        ///         Name = @var.Ca_bundle_name,
        ///         State = @var.Ca_bundle_state,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetCaBundlesResult> Invoke(GetCaBundlesInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetCaBundlesResult>("oci:CertificatesManagement/getCaBundles:getCaBundles", args ?? new GetCaBundlesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCaBundlesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the CA bundle.
        /// </summary>
        [Input("caBundleId")]
        public string? CaBundleId { get; set; }

        /// <summary>
        /// A filter that returns only resources that match the given compartment OCID.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        [Input("filters")]
        private List<Inputs.GetCaBundlesFilterArgs>? _filters;
        public List<Inputs.GetCaBundlesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetCaBundlesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter that returns only resources that match the specified name.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// A filter that returns only resources that match the given lifecycle state. The state value is case-insensitive.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetCaBundlesArgs()
        {
        }
        public static new GetCaBundlesArgs Empty => new GetCaBundlesArgs();
    }

    public sealed class GetCaBundlesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the CA bundle.
        /// </summary>
        [Input("caBundleId")]
        public Input<string>? CaBundleId { get; set; }

        /// <summary>
        /// A filter that returns only resources that match the given compartment OCID.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetCaBundlesFilterInputArgs>? _filters;
        public InputList<Inputs.GetCaBundlesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetCaBundlesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter that returns only resources that match the specified name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A filter that returns only resources that match the given lifecycle state. The state value is case-insensitive.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetCaBundlesInvokeArgs()
        {
        }
        public static new GetCaBundlesInvokeArgs Empty => new GetCaBundlesInvokeArgs();
    }


    [OutputType]
    public sealed class GetCaBundlesResult
    {
        /// <summary>
        /// The list of ca_bundle_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCaBundlesCaBundleCollectionResult> CaBundleCollections;
        public readonly string? CaBundleId;
        /// <summary>
        /// The OCID of the compartment for the CA bundle.
        /// </summary>
        public readonly string? CompartmentId;
        public readonly ImmutableArray<Outputs.GetCaBundlesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A user-friendly name for the CA bundle. Names are unique within a compartment. Avoid entering confidential information. Valid characters include uppercase or lowercase letters, numbers, hyphens, underscores, and periods.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The current lifecycle state of the CA bundle.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetCaBundlesResult(
            ImmutableArray<Outputs.GetCaBundlesCaBundleCollectionResult> caBundleCollections,

            string? caBundleId,

            string? compartmentId,

            ImmutableArray<Outputs.GetCaBundlesFilterResult> filters,

            string id,

            string? name,

            string? state)
        {
            CaBundleCollections = caBundleCollections;
            CaBundleId = caBundleId;
            CompartmentId = compartmentId;
            Filters = filters;
            Id = id;
            Name = name;
            State = state;
        }
    }
}
