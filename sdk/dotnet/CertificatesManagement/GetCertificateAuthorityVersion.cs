// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CertificatesManagement
{
    public static class GetCertificateAuthorityVersion
    {
        /// <summary>
        /// This data source provides details about a specific Certificate Authority Version resource in Oracle Cloud Infrastructure Certificates Management service.
        /// 
        /// Lists all versions for the specified certificate authority (CA).
        /// Optionally, you can use the parameter `FilterByVersionNumberQueryParam` to limit the results to a single item that matches the specified version number.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testCertificateAuthorityVersion = Output.Create(Oci.CertificatesManagement.GetCertificateAuthorityVersion.InvokeAsync(new Oci.CertificatesManagement.GetCertificateAuthorityVersionArgs
        ///         {
        ///             CertificateAuthorityId = oci_certificates_management_certificate_authority.Test_certificate_authority.Id,
        ///             VersionNumber = @var.Certificate_authority_version_version_number,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetCertificateAuthorityVersionResult> InvokeAsync(GetCertificateAuthorityVersionArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetCertificateAuthorityVersionResult>("oci:CertificatesManagement/getCertificateAuthorityVersion:getCertificateAuthorityVersion", args ?? new GetCertificateAuthorityVersionArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Certificate Authority Version resource in Oracle Cloud Infrastructure Certificates Management service.
        /// 
        /// Lists all versions for the specified certificate authority (CA).
        /// Optionally, you can use the parameter `FilterByVersionNumberQueryParam` to limit the results to a single item that matches the specified version number.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testCertificateAuthorityVersion = Output.Create(Oci.CertificatesManagement.GetCertificateAuthorityVersion.InvokeAsync(new Oci.CertificatesManagement.GetCertificateAuthorityVersionArgs
        ///         {
        ///             CertificateAuthorityId = oci_certificates_management_certificate_authority.Test_certificate_authority.Id,
        ///             VersionNumber = @var.Certificate_authority_version_version_number,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetCertificateAuthorityVersionResult> Invoke(GetCertificateAuthorityVersionInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetCertificateAuthorityVersionResult>("oci:CertificatesManagement/getCertificateAuthorityVersion:getCertificateAuthorityVersion", args ?? new GetCertificateAuthorityVersionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCertificateAuthorityVersionArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the certificate authority (CA).
        /// </summary>
        [Input("certificateAuthorityId", required: true)]
        public string CertificateAuthorityId { get; set; } = null!;

        [Input("certificateAuthorityVersionNumber", required: true)]
        public string CertificateAuthorityVersionNumber { get; set; } = null!;

        public GetCertificateAuthorityVersionArgs()
        {
        }
    }

    public sealed class GetCertificateAuthorityVersionInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the certificate authority (CA).
        /// </summary>
        [Input("certificateAuthorityId", required: true)]
        public Input<string> CertificateAuthorityId { get; set; } = null!;

        [Input("certificateAuthorityVersionNumber", required: true)]
        public Input<string> CertificateAuthorityVersionNumber { get; set; } = null!;

        public GetCertificateAuthorityVersionInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetCertificateAuthorityVersionResult
    {
        /// <summary>
        /// The OCID of the CA.
        /// </summary>
        public readonly string CertificateAuthorityId;
        public readonly string CertificateAuthorityVersionNumber;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The version number of the issuing CA.
        /// </summary>
        public readonly string IssuerCaVersionNumber;
        /// <summary>
        /// The current revocation status of the entity.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCertificateAuthorityVersionRevocationStatusResult> RevocationStatuses;
        /// <summary>
        /// A unique certificate identifier used in certificate revocation tracking, formatted as octets. Example: `03 AC FC FA CC B3 CB 02 B8 F8 DE F5 85 E7 7B FF`
        /// </summary>
        public readonly string SerialNumber;
        /// <summary>
        /// A list of rotation states for this CA version.
        /// </summary>
        public readonly ImmutableArray<string> Stages;
        public readonly ImmutableArray<Outputs.GetCertificateAuthorityVersionSubjectAlternativeNameResult> SubjectAlternativeNames;
        /// <summary>
        /// A optional property indicating when the CA version was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// An optional property indicating when to delete the CA version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
        /// </summary>
        public readonly string TimeOfDeletion;
        /// <summary>
        /// An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCertificateAuthorityVersionValidityResult> Validities;
        /// <summary>
        /// The name of the CA version. When this value is not null, the name is unique across CA versions for a given CA.
        /// </summary>
        public readonly string VersionName;
        /// <summary>
        /// The version number of the CA.
        /// </summary>
        public readonly string VersionNumber;

        [OutputConstructor]
        private GetCertificateAuthorityVersionResult(
            string certificateAuthorityId,

            string certificateAuthorityVersionNumber,

            string id,

            string issuerCaVersionNumber,

            ImmutableArray<Outputs.GetCertificateAuthorityVersionRevocationStatusResult> revocationStatuses,

            string serialNumber,

            ImmutableArray<string> stages,

            ImmutableArray<Outputs.GetCertificateAuthorityVersionSubjectAlternativeNameResult> subjectAlternativeNames,

            string timeCreated,

            string timeOfDeletion,

            ImmutableArray<Outputs.GetCertificateAuthorityVersionValidityResult> validities,

            string versionName,

            string versionNumber)
        {
            CertificateAuthorityId = certificateAuthorityId;
            CertificateAuthorityVersionNumber = certificateAuthorityVersionNumber;
            Id = id;
            IssuerCaVersionNumber = issuerCaVersionNumber;
            RevocationStatuses = revocationStatuses;
            SerialNumber = serialNumber;
            Stages = stages;
            SubjectAlternativeNames = subjectAlternativeNames;
            TimeCreated = timeCreated;
            TimeOfDeletion = timeOfDeletion;
            Validities = validities;
            VersionName = versionName;
            VersionNumber = versionNumber;
        }
    }
}
