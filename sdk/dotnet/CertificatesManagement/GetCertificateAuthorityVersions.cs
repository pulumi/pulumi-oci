// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CertificatesManagement
{
    public static class GetCertificateAuthorityVersions
    {
        /// <summary>
        /// This data source provides the list of Certificate Authority Versions in Oracle Cloud Infrastructure Certificates Management service.
        /// 
        /// Lists all versions for the specified certificate authority (CA).
        /// Optionally, you can use the parameter `FilterByVersionNumberQueryParam` to limit the results to a single item that matches the specified version number.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testCertificateAuthorityVersions = Output.Create(Oci.CertificatesManagement.GetCertificateAuthorityVersions.InvokeAsync(new Oci.CertificatesManagement.GetCertificateAuthorityVersionsArgs
        ///         {
        ///             CertificateAuthorityId = oci_certificates_management_certificate_authority.Test_certificate_authority.Id,
        ///             VersionNumber = @var.Certificate_authority_version_version_number,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetCertificateAuthorityVersionsResult> InvokeAsync(GetCertificateAuthorityVersionsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetCertificateAuthorityVersionsResult>("oci:CertificatesManagement/getCertificateAuthorityVersions:getCertificateAuthorityVersions", args ?? new GetCertificateAuthorityVersionsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Certificate Authority Versions in Oracle Cloud Infrastructure Certificates Management service.
        /// 
        /// Lists all versions for the specified certificate authority (CA).
        /// Optionally, you can use the parameter `FilterByVersionNumberQueryParam` to limit the results to a single item that matches the specified version number.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testCertificateAuthorityVersions = Output.Create(Oci.CertificatesManagement.GetCertificateAuthorityVersions.InvokeAsync(new Oci.CertificatesManagement.GetCertificateAuthorityVersionsArgs
        ///         {
        ///             CertificateAuthorityId = oci_certificates_management_certificate_authority.Test_certificate_authority.Id,
        ///             VersionNumber = @var.Certificate_authority_version_version_number,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetCertificateAuthorityVersionsResult> Invoke(GetCertificateAuthorityVersionsInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetCertificateAuthorityVersionsResult>("oci:CertificatesManagement/getCertificateAuthorityVersions:getCertificateAuthorityVersions", args ?? new GetCertificateAuthorityVersionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCertificateAuthorityVersionsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the certificate authority (CA).
        /// </summary>
        [Input("certificateAuthorityId", required: true)]
        public string CertificateAuthorityId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetCertificateAuthorityVersionsFilterArgs>? _filters;
        public List<Inputs.GetCertificateAuthorityVersionsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetCertificateAuthorityVersionsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter that returns only resources that match the specified version number. The default value is 0, which means that this filter is not applied.
        /// </summary>
        [Input("versionNumber")]
        public string? VersionNumber { get; set; }

        public GetCertificateAuthorityVersionsArgs()
        {
        }
    }

    public sealed class GetCertificateAuthorityVersionsInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the certificate authority (CA).
        /// </summary>
        [Input("certificateAuthorityId", required: true)]
        public Input<string> CertificateAuthorityId { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetCertificateAuthorityVersionsFilterInputArgs>? _filters;
        public InputList<Inputs.GetCertificateAuthorityVersionsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetCertificateAuthorityVersionsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter that returns only resources that match the specified version number. The default value is 0, which means that this filter is not applied.
        /// </summary>
        [Input("versionNumber")]
        public Input<string>? VersionNumber { get; set; }

        public GetCertificateAuthorityVersionsInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetCertificateAuthorityVersionsResult
    {
        /// <summary>
        /// The OCID of the CA.
        /// </summary>
        public readonly string CertificateAuthorityId;
        /// <summary>
        /// The list of certificate_authority_version_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionResult> CertificateAuthorityVersionCollections;
        public readonly ImmutableArray<Outputs.GetCertificateAuthorityVersionsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The version number of the CA.
        /// </summary>
        public readonly string? VersionNumber;

        [OutputConstructor]
        private GetCertificateAuthorityVersionsResult(
            string certificateAuthorityId,

            ImmutableArray<Outputs.GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionResult> certificateAuthorityVersionCollections,

            ImmutableArray<Outputs.GetCertificateAuthorityVersionsFilterResult> filters,

            string id,

            string? versionNumber)
        {
            CertificateAuthorityId = certificateAuthorityId;
            CertificateAuthorityVersionCollections = certificateAuthorityVersionCollections;
            Filters = filters;
            Id = id;
            VersionNumber = versionNumber;
        }
    }
}
