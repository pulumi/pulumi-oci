// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CertificatesManagement.Inputs
{

    public sealed class CertificateAuthorityCertificateAuthorityConfigGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The origin of the CA.
        /// </summary>
        [Input("configType", required: true)]
        public Input<string> ConfigType { get; set; } = null!;

        /// <summary>
        /// The OCID of the private CA.
        /// </summary>
        [Input("issuerCertificateAuthorityId")]
        public Input<string>? IssuerCertificateAuthorityId { get; set; }

        /// <summary>
        /// The algorithm used to sign public key certificates that the CA issues.
        /// </summary>
        [Input("signingAlgorithm")]
        public Input<string>? SigningAlgorithm { get; set; }

        /// <summary>
        /// The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
        /// </summary>
        [Input("subject", required: true)]
        public Input<Inputs.CertificateAuthorityCertificateAuthorityConfigSubjectGetArgs> Subject { get; set; } = null!;

        /// <summary>
        /// (Updatable) An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
        /// </summary>
        [Input("validity")]
        public Input<Inputs.CertificateAuthorityCertificateAuthorityConfigValidityGetArgs>? Validity { get; set; }

        /// <summary>
        /// (Updatable) The name of the CA version. When the value is not null, a name is unique across versions of a given CA.
        /// </summary>
        [Input("versionName")]
        public Input<string>? VersionName { get; set; }

        public CertificateAuthorityCertificateAuthorityConfigGetArgs()
        {
        }
        public static new CertificateAuthorityCertificateAuthorityConfigGetArgs Empty => new CertificateAuthorityCertificateAuthorityConfigGetArgs();
    }
}
