// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CertificatesManagement.Inputs
{

    public sealed class CertificateAuthorityCurrentVersionGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The OCID of the CA.
        /// </summary>
        [Input("certificateAuthorityId")]
        public Input<string>? CertificateAuthorityId { get; set; }

        /// <summary>
        /// The version number of the issuing CA.
        /// </summary>
        [Input("issuerCaVersionNumber")]
        public Input<string>? IssuerCaVersionNumber { get; set; }

        [Input("revocationStatuses")]
        private InputList<Inputs.CertificateAuthorityCurrentVersionRevocationStatusGetArgs>? _revocationStatuses;

        /// <summary>
        /// The current revocation status of the entity.
        /// </summary>
        public InputList<Inputs.CertificateAuthorityCurrentVersionRevocationStatusGetArgs> RevocationStatuses
        {
            get => _revocationStatuses ?? (_revocationStatuses = new InputList<Inputs.CertificateAuthorityCurrentVersionRevocationStatusGetArgs>());
            set => _revocationStatuses = value;
        }

        /// <summary>
        /// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
        /// </summary>
        [Input("serialNumber")]
        public Input<string>? SerialNumber { get; set; }

        [Input("stages")]
        private InputList<string>? _stages;

        /// <summary>
        /// A list of rotation states for this CA version.
        /// </summary>
        public InputList<string> Stages
        {
            get => _stages ?? (_stages = new InputList<string>());
            set => _stages = value;
        }

        /// <summary>
        /// A property indicating when the CA was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// An optional property indicating when to delete the CA version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
        /// </summary>
        [Input("timeOfDeletion")]
        public Input<string>? TimeOfDeletion { get; set; }

        [Input("validities")]
        private InputList<Inputs.CertificateAuthorityCurrentVersionValidityGetArgs>? _validities;

        /// <summary>
        /// An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
        /// </summary>
        public InputList<Inputs.CertificateAuthorityCurrentVersionValidityGetArgs> Validities
        {
            get => _validities ?? (_validities = new InputList<Inputs.CertificateAuthorityCurrentVersionValidityGetArgs>());
            set => _validities = value;
        }

        /// <summary>
        /// The name of the CA version. When this value is not null, the name is unique across CA versions for a given CA.
        /// </summary>
        [Input("versionName")]
        public Input<string>? VersionName { get; set; }

        /// <summary>
        /// The version number of the CA.
        /// </summary>
        [Input("versionNumber")]
        public Input<string>? VersionNumber { get; set; }

        public CertificateAuthorityCurrentVersionGetArgs()
        {
        }
        public static new CertificateAuthorityCurrentVersionGetArgs Empty => new CertificateAuthorityCurrentVersionGetArgs();
    }
}
