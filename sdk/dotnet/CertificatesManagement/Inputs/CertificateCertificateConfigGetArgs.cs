// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CertificatesManagement.Inputs
{

    public sealed class CertificateCertificateConfigGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the profile used to create the certificate, which depends on the type of certificate you need.
        /// </summary>
        [Input("certificateProfileType")]
        public Input<string>? CertificateProfileType { get; set; }

        /// <summary>
        /// (Updatable) The origin of the certificate.
        /// </summary>
        [Input("configType", required: true)]
        public Input<string> ConfigType { get; set; } = null!;

        /// <summary>
        /// (Updatable) The certificate signing request (in PEM format).
        /// </summary>
        [Input("csrPem")]
        public Input<string>? CsrPem { get; set; }

        /// <summary>
        /// The OCID of the private CA.
        /// </summary>
        [Input("issuerCertificateAuthorityId")]
        public Input<string>? IssuerCertificateAuthorityId { get; set; }

        /// <summary>
        /// The algorithm to use to create key pairs.
        /// </summary>
        [Input("keyAlgorithm")]
        public Input<string>? KeyAlgorithm { get; set; }

        /// <summary>
        /// The algorithm to use to sign the public key certificate.
        /// </summary>
        [Input("signatureAlgorithm")]
        public Input<string>? SignatureAlgorithm { get; set; }

        /// <summary>
        /// The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
        /// </summary>
        [Input("subject")]
        public Input<Inputs.CertificateCertificateConfigSubjectGetArgs>? Subject { get; set; }

        [Input("subjectAlternativeNames")]
        private InputList<Inputs.CertificateCertificateConfigSubjectAlternativeNameGetArgs>? _subjectAlternativeNames;

        /// <summary>
        /// A list of subject alternative names.
        /// </summary>
        public InputList<Inputs.CertificateCertificateConfigSubjectAlternativeNameGetArgs> SubjectAlternativeNames
        {
            get => _subjectAlternativeNames ?? (_subjectAlternativeNames = new InputList<Inputs.CertificateCertificateConfigSubjectAlternativeNameGetArgs>());
            set => _subjectAlternativeNames = value;
        }

        /// <summary>
        /// (Updatable) An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
        /// </summary>
        [Input("validity")]
        public Input<Inputs.CertificateCertificateConfigValidityGetArgs>? Validity { get; set; }

        /// <summary>
        /// (Updatable) A name for the certificate. When the value is not null, a name is unique across versions of a given certificate.
        /// </summary>
        [Input("versionName")]
        public Input<string>? VersionName { get; set; }

        public CertificateCertificateConfigGetArgs()
        {
        }
        public static new CertificateCertificateConfigGetArgs Empty => new CertificateCertificateConfigGetArgs();
    }
}
