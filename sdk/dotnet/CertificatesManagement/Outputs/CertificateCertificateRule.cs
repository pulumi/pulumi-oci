// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CertificatesManagement.Outputs
{

    [OutputType]
    public sealed class CertificateCertificateRule
    {
        /// <summary>
        /// (Updatable) A property specifying the period of time, in days, before the certificate's targeted renewal that the process should occur. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
        /// </summary>
        public readonly string AdvanceRenewalPeriod;
        /// <summary>
        /// (Updatable) A property specifying how often, in days, a certificate should be renewed. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
        /// </summary>
        public readonly string RenewalInterval;
        /// <summary>
        /// (Updatable) The type of rule.
        /// </summary>
        public readonly string RuleType;

        [OutputConstructor]
        private CertificateCertificateRule(
            string advanceRenewalPeriod,

            string renewalInterval,

            string ruleType)
        {
            AdvanceRenewalPeriod = advanceRenewalPeriod;
            RenewalInterval = renewalInterval;
            RuleType = ruleType;
        }
    }
}
