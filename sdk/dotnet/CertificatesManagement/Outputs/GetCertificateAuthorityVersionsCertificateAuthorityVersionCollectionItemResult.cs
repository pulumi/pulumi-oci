// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CertificatesManagement.Outputs
{

    [OutputType]
    public sealed class GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemResult
    {
        /// <summary>
        /// The OCID of the certificate authority (CA).
        /// </summary>
        public readonly string CertificateAuthorityId;
        /// <summary>
        /// The version number of the issuing CA.
        /// </summary>
        public readonly string IssuerCaVersionNumber;
        /// <summary>
        /// The current revocation status of the entity.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusResult> RevocationStatuses;
        /// <summary>
        /// A unique certificate identifier used in certificate revocation tracking, formatted as octets. Example: `03 AC FC FA CC B3 CB 02 B8 F8 DE F5 85 E7 7B FF`
        /// </summary>
        public readonly string SerialNumber;
        /// <summary>
        /// A list of rotation states for this CA version.
        /// </summary>
        public readonly ImmutableArray<string> Stages;
        /// <summary>
        /// A optional property indicating when the CA version was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// An optional property indicating when to delete the CA version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
        /// </summary>
        public readonly string TimeOfDeletion;
        /// <summary>
        /// An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityResult> Validities;
        /// <summary>
        /// The name of the CA version. When this value is not null, the name is unique across CA versions for a given CA.
        /// </summary>
        public readonly string VersionName;
        /// <summary>
        /// A filter that returns only resources that match the specified version number. The default value is 0, which means that this filter is not applied.
        /// </summary>
        public readonly string VersionNumber;

        [OutputConstructor]
        private GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemResult(
            string certificateAuthorityId,

            string issuerCaVersionNumber,

            ImmutableArray<Outputs.GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusResult> revocationStatuses,

            string serialNumber,

            ImmutableArray<string> stages,

            string timeCreated,

            string timeOfDeletion,

            ImmutableArray<Outputs.GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityResult> validities,

            string versionName,

            string versionNumber)
        {
            CertificateAuthorityId = certificateAuthorityId;
            IssuerCaVersionNumber = issuerCaVersionNumber;
            RevocationStatuses = revocationStatuses;
            SerialNumber = serialNumber;
            Stages = stages;
            TimeCreated = timeCreated;
            TimeOfDeletion = timeOfDeletion;
            Validities = validities;
            VersionName = versionName;
            VersionNumber = versionNumber;
        }
    }
}
