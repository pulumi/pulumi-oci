// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CertificatesManagement.Outputs
{

    [OutputType]
    public sealed class GetCertificatesCertificateCollectionItemResult
    {
        public readonly ImmutableArray<Outputs.GetCertificatesCertificateCollectionItemCertificateConfigResult> CertificateConfigs;
        /// <summary>
        /// The name of the profile used to create the certificate, which depends on the type of certificate you need.
        /// </summary>
        public readonly string? CertificateProfileType;
        /// <summary>
        /// The details of the certificate revocation list (CRL).
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCertificatesCertificateCollectionItemCertificateRevocationListDetailResult> CertificateRevocationListDetails;
        /// <summary>
        /// A list of rules that control how the certificate is used and managed.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCertificatesCertificateCollectionItemCertificateRuleResult> CertificateRules;
        /// <summary>
        /// A filter that returns only resources that match the given compartment OCID.
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// The origin of the certificate.
        /// </summary>
        public readonly string? ConfigType;
        /// <summary>
        /// The details of the certificate version. This object does not contain the certificate contents.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCertificatesCertificateCollectionItemCurrentVersionResult> CurrentVersions;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? DefinedTags;
        /// <summary>
        /// A brief description of the certificate. Avoid entering confidential information.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? FreeformTags;
        /// <summary>
        /// The OCID of the certificate.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The OCID of the certificate authority (CA). If the parameter is set to null, the service lists all CAs.
        /// </summary>
        public readonly string? IssuerCertificateAuthorityId;
        /// <summary>
        /// The algorithm used to create key pairs.
        /// </summary>
        public readonly string? KeyAlgorithm;
        /// <summary>
        /// Additional information about the current lifecycle state of the certificate.
        /// </summary>
        public readonly string? LifecycleDetails;
        /// <summary>
        /// A filter that returns only resources that match the specified name.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The algorithm used to sign the public key certificate.
        /// </summary>
        public readonly string? SignatureAlgorithm;
        /// <summary>
        /// A filter that returns only resources that match the given lifecycle state. The state value is case-insensitive.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCertificatesCertificateCollectionItemSubjectResult> Subjects;
        /// <summary>
        /// A property indicating when the certificate was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
        /// </summary>
        public readonly string? TimeCreated;
        /// <summary>
        /// An optional property indicating when to delete the certificate version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
        /// </summary>
        public readonly string? TimeOfDeletion;

        [OutputConstructor]
        private GetCertificatesCertificateCollectionItemResult(
            ImmutableArray<Outputs.GetCertificatesCertificateCollectionItemCertificateConfigResult> certificateConfigs,

            string? certificateProfileType,

            ImmutableArray<Outputs.GetCertificatesCertificateCollectionItemCertificateRevocationListDetailResult> certificateRevocationListDetails,

            ImmutableArray<Outputs.GetCertificatesCertificateCollectionItemCertificateRuleResult> certificateRules,

            string? compartmentId,

            string? configType,

            ImmutableArray<Outputs.GetCertificatesCertificateCollectionItemCurrentVersionResult> currentVersions,

            ImmutableDictionary<string, object>? definedTags,

            string? description,

            ImmutableDictionary<string, object>? freeformTags,

            string? id,

            string? issuerCertificateAuthorityId,

            string? keyAlgorithm,

            string? lifecycleDetails,

            string? name,

            string? signatureAlgorithm,

            string? state,

            ImmutableArray<Outputs.GetCertificatesCertificateCollectionItemSubjectResult> subjects,

            string? timeCreated,

            string? timeOfDeletion)
        {
            CertificateConfigs = certificateConfigs;
            CertificateProfileType = certificateProfileType;
            CertificateRevocationListDetails = certificateRevocationListDetails;
            CertificateRules = certificateRules;
            CompartmentId = compartmentId;
            ConfigType = configType;
            CurrentVersions = currentVersions;
            DefinedTags = definedTags;
            Description = description;
            FreeformTags = freeformTags;
            Id = id;
            IssuerCertificateAuthorityId = issuerCertificateAuthorityId;
            KeyAlgorithm = keyAlgorithm;
            LifecycleDetails = lifecycleDetails;
            Name = name;
            SignatureAlgorithm = signatureAlgorithm;
            State = state;
            Subjects = subjects;
            TimeCreated = timeCreated;
            TimeOfDeletion = timeOfDeletion;
        }
    }
}
