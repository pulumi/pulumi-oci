// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CloudBridge
{
    public static class GetApplianceImage
    {
        /// <summary>
        /// This data source provides details about a specific Appliance Image resource in Oracle Cloud Infrastructure Cloud Bridge service.
        /// 
        /// Returns a list of Appliance Images.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testApplianceImage = Oci.CloudBridge.GetApplianceImage.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = applianceImageDisplayName,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetApplianceImageResult> InvokeAsync(GetApplianceImageArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetApplianceImageResult>("oci:CloudBridge/getApplianceImage:getApplianceImage", args ?? new GetApplianceImageArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Appliance Image resource in Oracle Cloud Infrastructure Cloud Bridge service.
        /// 
        /// Returns a list of Appliance Images.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testApplianceImage = Oci.CloudBridge.GetApplianceImage.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = applianceImageDisplayName,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetApplianceImageResult> Invoke(GetApplianceImageInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetApplianceImageResult>("oci:CloudBridge/getApplianceImage:getApplianceImage", args ?? new GetApplianceImageInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApplianceImageArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        public GetApplianceImageArgs()
        {
        }
        public static new GetApplianceImageArgs Empty => new GetApplianceImageArgs();
    }

    public sealed class GetApplianceImageInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        public GetApplianceImageInvokeArgs()
        {
        }
        public static new GetApplianceImageInvokeArgs Empty => new GetApplianceImageInvokeArgs();
    }


    [OutputType]
    public sealed class GetApplianceImageResult
    {
        public readonly string CompartmentId;
        /// <summary>
        /// The name of the image to be displayed.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// List of appliance images.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetApplianceImageItemResult> Items;

        [OutputConstructor]
        private GetApplianceImageResult(
            string compartmentId,

            string? displayName,

            string id,

            ImmutableArray<Outputs.GetApplianceImageItemResult> items)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Id = id;
            Items = items;
        }
    }
}
