// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CloudBridge
{
    public static class GetApplianceImages
    {
        /// <summary>
        /// This data source provides the list of Appliance Images in Oracle Cloud Infrastructure Cloud Bridge service.
        /// 
        /// Returns a list of Appliance Images.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testApplianceImages = Oci.CloudBridge.GetApplianceImages.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = applianceImageDisplayName,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetApplianceImagesResult> InvokeAsync(GetApplianceImagesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetApplianceImagesResult>("oci:CloudBridge/getApplianceImages:getApplianceImages", args ?? new GetApplianceImagesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Appliance Images in Oracle Cloud Infrastructure Cloud Bridge service.
        /// 
        /// Returns a list of Appliance Images.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testApplianceImages = Oci.CloudBridge.GetApplianceImages.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = applianceImageDisplayName,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetApplianceImagesResult> Invoke(GetApplianceImagesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetApplianceImagesResult>("oci:CloudBridge/getApplianceImages:getApplianceImages", args ?? new GetApplianceImagesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApplianceImagesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetApplianceImagesFilterArgs>? _filters;
        public List<Inputs.GetApplianceImagesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetApplianceImagesFilterArgs>());
            set => _filters = value;
        }

        public GetApplianceImagesArgs()
        {
        }
        public static new GetApplianceImagesArgs Empty => new GetApplianceImagesArgs();
    }

    public sealed class GetApplianceImagesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetApplianceImagesFilterInputArgs>? _filters;
        public InputList<Inputs.GetApplianceImagesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetApplianceImagesFilterInputArgs>());
            set => _filters = value;
        }

        public GetApplianceImagesInvokeArgs()
        {
        }
        public static new GetApplianceImagesInvokeArgs Empty => new GetApplianceImagesInvokeArgs();
    }


    [OutputType]
    public sealed class GetApplianceImagesResult
    {
        /// <summary>
        /// The list of appliance_image_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetApplianceImagesApplianceImageCollectionResult> ApplianceImageCollections;
        public readonly string CompartmentId;
        /// <summary>
        /// The name of the image to be displayed.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetApplianceImagesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetApplianceImagesResult(
            ImmutableArray<Outputs.GetApplianceImagesApplianceImageCollectionResult> applianceImageCollections,

            string compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetApplianceImagesFilterResult> filters,

            string id)
        {
            ApplianceImageCollections = applianceImageCollections;
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
        }
    }
}
