// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CloudBridge
{
    public static class GetAsset
    {
        /// <summary>
        /// This data source provides details about a specific Asset resource in Oracle Cloud Infrastructure Cloud Bridge service.
        /// 
        /// Gets an asset by identifier.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAsset = Oci.CloudBridge.GetAsset.Invoke(new()
        ///     {
        ///         AssetId = testAssetOciCloudBridgeAsset.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetAssetResult> InvokeAsync(GetAssetArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAssetResult>("oci:CloudBridge/getAsset:getAsset", args ?? new GetAssetArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Asset resource in Oracle Cloud Infrastructure Cloud Bridge service.
        /// 
        /// Gets an asset by identifier.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAsset = Oci.CloudBridge.GetAsset.Invoke(new()
        ///     {
        ///         AssetId = testAssetOciCloudBridgeAsset.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAssetResult> Invoke(GetAssetInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAssetResult>("oci:CloudBridge/getAsset:getAsset", args ?? new GetAssetInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAssetArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique asset identifier.
        /// </summary>
        [Input("assetId", required: true)]
        public string AssetId { get; set; } = null!;

        public GetAssetArgs()
        {
        }
        public static new GetAssetArgs Empty => new GetAssetArgs();
    }

    public sealed class GetAssetInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique asset identifier.
        /// </summary>
        [Input("assetId", required: true)]
        public Input<string> AssetId { get; set; } = null!;

        public GetAssetInvokeArgs()
        {
        }
        public static new GetAssetInvokeArgs Empty => new GetAssetInvokeArgs();
    }


    [OutputType]
    public sealed class GetAssetResult
    {
        public readonly string AssetId;
        /// <summary>
        /// List of asset source OCID.
        /// </summary>
        public readonly ImmutableArray<string> AssetSourceIds;
        /// <summary>
        /// The type of asset.
        /// </summary>
        public readonly string AssetType;
        /// <summary>
        /// The OCID of the compartment to which an asset belongs to.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Compute related properties.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAssetComputeResult> Computes;
        /// <summary>
        /// The defined tags associated with this resource, if any. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// Asset display name.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// The key of the asset from the external environment.
        /// </summary>
        public readonly string ExternalAssetKey;
        /// <summary>
        /// The freeform tags associated with this resource, if any. Each tag is a simple key-value pair with no predefined name, type, or namespace/scope. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// Asset OCID that is immutable on creation.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Inventory ID to which an asset belongs to.
        /// </summary>
        public readonly string InventoryId;
        /// <summary>
        /// The source key that the asset belongs to.
        /// </summary>
        public readonly string SourceKey;
        /// <summary>
        /// The current state of the asset.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The system tags associated with this resource, if any. The system tags are set by Oracle cloud infrastructure services. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{orcl-cloud: {free-tier-retain: true}}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// The time when the asset was created. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time when the asset was updated. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeUpdated;
        /// <summary>
        /// Virtual machine related properties.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAssetVmResult> Vms;
        /// <summary>
        /// VMware vCenter related properties.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAssetVmwareVcenterResult> VmwareVcenters;
        /// <summary>
        /// VMware virtual machine related properties.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAssetVmwareVmResult> VmwareVms;

        [OutputConstructor]
        private GetAssetResult(
            string assetId,

            ImmutableArray<string> assetSourceIds,

            string assetType,

            string compartmentId,

            ImmutableArray<Outputs.GetAssetComputeResult> computes,

            ImmutableDictionary<string, string> definedTags,

            string displayName,

            string externalAssetKey,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            string inventoryId,

            string sourceKey,

            string state,

            ImmutableDictionary<string, string> systemTags,

            string timeCreated,

            string timeUpdated,

            ImmutableArray<Outputs.GetAssetVmResult> vms,

            ImmutableArray<Outputs.GetAssetVmwareVcenterResult> vmwareVcenters,

            ImmutableArray<Outputs.GetAssetVmwareVmResult> vmwareVms)
        {
            AssetId = assetId;
            AssetSourceIds = assetSourceIds;
            AssetType = assetType;
            CompartmentId = compartmentId;
            Computes = computes;
            DefinedTags = definedTags;
            DisplayName = displayName;
            ExternalAssetKey = externalAssetKey;
            FreeformTags = freeformTags;
            Id = id;
            InventoryId = inventoryId;
            SourceKey = sourceKey;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            Vms = vms;
            VmwareVcenters = vmwareVcenters;
            VmwareVms = vmwareVms;
        }
    }
}
