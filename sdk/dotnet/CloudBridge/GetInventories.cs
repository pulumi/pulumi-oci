// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CloudBridge
{
    public static class GetInventories
    {
        /// <summary>
        /// This data source provides the list of Inventories in Oracle Cloud Infrastructure Cloud Bridge service.
        /// 
        /// Returns a list of inventories.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testInventories = Oci.CloudBridge.GetInventories.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         State = @var.Inventory_state,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetInventoriesResult> InvokeAsync(GetInventoriesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetInventoriesResult>("oci:CloudBridge/getInventories:getInventories", args ?? new GetInventoriesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Inventories in Oracle Cloud Infrastructure Cloud Bridge service.
        /// 
        /// Returns a list of inventories.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testInventories = Oci.CloudBridge.GetInventories.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         State = @var.Inventory_state,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetInventoriesResult> Invoke(GetInventoriesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetInventoriesResult>("oci:CloudBridge/getInventories:getInventories", args ?? new GetInventoriesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInventoriesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetInventoriesFilterArgs>? _filters;
        public List<Inputs.GetInventoriesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetInventoriesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return inventory if the lifecycleState matches the given lifecycleState.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetInventoriesArgs()
        {
        }
        public static new GetInventoriesArgs Empty => new GetInventoriesArgs();
    }

    public sealed class GetInventoriesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetInventoriesFilterInputArgs>? _filters;
        public InputList<Inputs.GetInventoriesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetInventoriesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return inventory if the lifecycleState matches the given lifecycleState.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetInventoriesInvokeArgs()
        {
        }
        public static new GetInventoriesInvokeArgs Empty => new GetInventoriesInvokeArgs();
    }


    [OutputType]
    public sealed class GetInventoriesResult
    {
        /// <summary>
        /// The OCID of the tenantId.
        /// </summary>
        public readonly string CompartmentId;
        public readonly ImmutableArray<Outputs.GetInventoriesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of inventory_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInventoriesInventoryCollectionResult> InventoryCollections;
        /// <summary>
        /// The current state of the inventory.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetInventoriesResult(
            string compartmentId,

            ImmutableArray<Outputs.GetInventoriesFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetInventoriesInventoryCollectionResult> inventoryCollections,

            string? state)
        {
            CompartmentId = compartmentId;
            Filters = filters;
            Id = id;
            InventoryCollections = inventoryCollections;
            State = state;
        }
    }
}
