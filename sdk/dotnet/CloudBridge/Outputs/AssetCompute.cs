// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CloudBridge.Outputs
{

    [OutputType]
    public sealed class AssetCompute
    {
        /// <summary>
        /// (Updatable) Number of connected networks.
        /// </summary>
        public readonly int? ConnectedNetworks;
        /// <summary>
        /// (Updatable) Number of CPUs.
        /// </summary>
        public readonly int? CoresCount;
        /// <summary>
        /// (Updatable) CPU model name.
        /// </summary>
        public readonly string? CpuModel;
        /// <summary>
        /// (Updatable) Information about the asset.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// (Updatable) Lists the set of disks belonging to the virtual machine. This list is unordered.
        /// </summary>
        public readonly ImmutableArray<Outputs.AssetComputeDisk> Disks;
        /// <summary>
        /// (Updatable) Number of disks.
        /// </summary>
        public readonly int? DisksCount;
        /// <summary>
        /// (Updatable) Fully Qualified DNS Name.
        /// </summary>
        public readonly string? DnsName;
        /// <summary>
        /// (Updatable) Information about firmware type for this virtual machine.
        /// </summary>
        public readonly string? Firmware;
        /// <summary>
        /// (Updatable) List of GPU devices attached to a virtual machine.
        /// </summary>
        public readonly ImmutableArray<Outputs.AssetComputeGpuDevice> GpuDevices;
        /// <summary>
        /// (Updatable) Number of GPU devices.
        /// </summary>
        public readonly int? GpuDevicesCount;
        /// <summary>
        /// (Updatable) Guest state.
        /// </summary>
        public readonly string? GuestState;
        /// <summary>
        /// (Updatable) Hardware version.
        /// </summary>
        public readonly string? HardwareVersion;
        /// <summary>
        /// (Updatable) Host name of the VM.
        /// </summary>
        public readonly string? HostName;
        /// <summary>
        /// (Updatable) Whether Pmem is enabled. Decides if NVDIMMs are used as a permanent memory.
        /// </summary>
        public readonly bool? IsPmemEnabled;
        /// <summary>
        /// (Updatable) Whether Trusted Platform Module (TPM) is enabled.
        /// </summary>
        public readonly bool? IsTpmEnabled;
        /// <summary>
        /// (Updatable) Latency sensitivity.
        /// </summary>
        public readonly string? LatencySensitivity;
        /// <summary>
        /// (Updatable) Memory size in MBs.
        /// </summary>
        public readonly string? MemoryInMbs;
        /// <summary>
        /// (Updatable) List of network ethernet cards attached to a virtual machine.
        /// </summary>
        public readonly ImmutableArray<Outputs.AssetComputeNic> Nics;
        /// <summary>
        /// (Updatable) Number of network ethernet cards.
        /// </summary>
        public readonly int? NicsCount;
        /// <summary>
        /// (Updatable) The asset's NVDIMM configuration.
        /// </summary>
        public readonly Outputs.AssetComputeNvdimmController? NvdimmController;
        /// <summary>
        /// (Updatable) The properties of the NVDIMMs attached to a virtual machine.
        /// </summary>
        public readonly ImmutableArray<Outputs.AssetComputeNvdimm> Nvdimms;
        /// <summary>
        /// (Updatable) Operating system.
        /// </summary>
        public readonly string? OperatingSystem;
        /// <summary>
        /// (Updatable) Operating system version.
        /// </summary>
        public readonly string? OperatingSystemVersion;
        /// <summary>
        /// (Updatable) Pmem size in MBs.
        /// </summary>
        public readonly string? PmemInMbs;
        /// <summary>
        /// (Updatable) The current power state of the virtual machine.
        /// </summary>
        public readonly string? PowerState;
        /// <summary>
        /// (Updatable) Primary IP address of the compute instance.
        /// </summary>
        public readonly string? PrimaryIp;
        /// <summary>
        /// (Updatable) The assets SCSI controller.
        /// </summary>
        public readonly Outputs.AssetComputeScsiController? ScsiController;
        /// <summary>
        /// (Updatable) Provision storage size in MBs.
        /// </summary>
        public readonly string? StorageProvisionedInMbs;
        /// <summary>
        /// (Updatable) Number of threads per core.
        /// </summary>
        public readonly int? ThreadsPerCoreCount;

        [OutputConstructor]
        private AssetCompute(
            int? connectedNetworks,

            int? coresCount,

            string? cpuModel,

            string? description,

            ImmutableArray<Outputs.AssetComputeDisk> disks,

            int? disksCount,

            string? dnsName,

            string? firmware,

            ImmutableArray<Outputs.AssetComputeGpuDevice> gpuDevices,

            int? gpuDevicesCount,

            string? guestState,

            string? hardwareVersion,

            string? hostName,

            bool? isPmemEnabled,

            bool? isTpmEnabled,

            string? latencySensitivity,

            string? memoryInMbs,

            ImmutableArray<Outputs.AssetComputeNic> nics,

            int? nicsCount,

            Outputs.AssetComputeNvdimmController? nvdimmController,

            ImmutableArray<Outputs.AssetComputeNvdimm> nvdimms,

            string? operatingSystem,

            string? operatingSystemVersion,

            string? pmemInMbs,

            string? powerState,

            string? primaryIp,

            Outputs.AssetComputeScsiController? scsiController,

            string? storageProvisionedInMbs,

            int? threadsPerCoreCount)
        {
            ConnectedNetworks = connectedNetworks;
            CoresCount = coresCount;
            CpuModel = cpuModel;
            Description = description;
            Disks = disks;
            DisksCount = disksCount;
            DnsName = dnsName;
            Firmware = firmware;
            GpuDevices = gpuDevices;
            GpuDevicesCount = gpuDevicesCount;
            GuestState = guestState;
            HardwareVersion = hardwareVersion;
            HostName = hostName;
            IsPmemEnabled = isPmemEnabled;
            IsTpmEnabled = isTpmEnabled;
            LatencySensitivity = latencySensitivity;
            MemoryInMbs = memoryInMbs;
            Nics = nics;
            NicsCount = nicsCount;
            NvdimmController = nvdimmController;
            Nvdimms = nvdimms;
            OperatingSystem = operatingSystem;
            OperatingSystemVersion = operatingSystemVersion;
            PmemInMbs = pmemInMbs;
            PowerState = powerState;
            PrimaryIp = primaryIp;
            ScsiController = scsiController;
            StorageProvisionedInMbs = storageProvisionedInMbs;
            ThreadsPerCoreCount = threadsPerCoreCount;
        }
    }
}
