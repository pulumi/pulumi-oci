// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CloudGuard
{
    /// <summary>
    /// This resource provides the Data Source resource in Oracle Cloud Infrastructure Cloud Guard service.
    /// 
    /// Creates a data source (DataSource resource), using parameters passed
    /// through a CreateDataSourceDetails resource.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testDataSource = new Oci.CloudGuard.CloudGuardDataSource("test_data_source", new()
    ///     {
    ///         CompartmentId = compartmentId,
    ///         DataSourceFeedProvider = dataSourceDataSourceFeedProvider,
    ///         DisplayName = dataSourceDisplayName,
    ///         DataSourceDetails = new Oci.CloudGuard.Inputs.CloudGuardDataSourceDataSourceDetailsArgs
    ///         {
    ///             DataSourceFeedProvider = dataSourceDataSourceDetailsDataSourceFeedProvider,
    ///             AdditionalEntitiesCount = dataSourceDataSourceDetailsAdditionalEntitiesCount,
    ///             Description = dataSourceDataSourceDetailsDescription,
    ///             IntervalInMinutes = dataSourceDataSourceDetailsIntervalInMinutes,
    ///             IntervalInSeconds = dataSourceDataSourceDetailsIntervalInSeconds,
    ///             LoggingQueryDetails = new Oci.CloudGuard.Inputs.CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsArgs
    ///             {
    ///                 LoggingQueryType = dataSourceDataSourceDetailsLoggingQueryDetailsLoggingQueryType,
    ///                 KeyEntitiesCount = dataSourceDataSourceDetailsLoggingQueryDetailsKeyEntitiesCount,
    ///             },
    ///             LoggingQueryType = dataSourceDataSourceDetailsLoggingQueryType,
    ///             Operator = dataSourceDataSourceDetailsOperator,
    ///             Query = dataSourceDataSourceDetailsQuery,
    ///             QueryStartTime = new Oci.CloudGuard.Inputs.CloudGuardDataSourceDataSourceDetailsQueryStartTimeArgs
    ///             {
    ///                 StartPolicyType = dataSourceDataSourceDetailsQueryStartTimeStartPolicyType,
    ///                 QueryStartTime = dataSourceDataSourceDetailsQueryStartTimeQueryStartTime,
    ///             },
    ///             Regions = dataSourceDataSourceDetailsRegions,
    ///             ScheduledQueryScopeDetails = new[]
    ///             {
    ///                 new Oci.CloudGuard.Inputs.CloudGuardDataSourceDataSourceDetailsScheduledQueryScopeDetailArgs
    ///                 {
    ///                     Region = dataSourceDataSourceDetailsScheduledQueryScopeDetailsRegion,
    ///                     ResourceIds = dataSourceDataSourceDetailsScheduledQueryScopeDetailsResourceIds,
    ///                     ResourceType = dataSourceDataSourceDetailsScheduledQueryScopeDetailsResourceType,
    ///                 },
    ///             },
    ///             Threshold = dataSourceDataSourceDetailsThreshold,
    ///         },
    ///         DefinedTags = 
    ///         {
    ///             { "foo-namespace.bar-key", "value" },
    ///         },
    ///         FreeformTags = 
    ///         {
    ///             { "bar-key", "value" },
    ///         },
    ///         Status = dataSourceStatus,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// DataSources can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:CloudGuard/cloudGuardDataSource:CloudGuardDataSource test_data_source "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:CloudGuard/cloudGuardDataSource:CloudGuardDataSource")]
    public partial class CloudGuardDataSource : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) Compartment OCID of the data source
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Details specific to the data source type.
        /// </summary>
        [Output("dataSourceDetails")]
        public Output<Outputs.CloudGuardDataSourceDataSourceDetails> DataSourceDetails { get; private set; } = null!;

        /// <summary>
        /// Information about the detector recipe and rule attached
        /// </summary>
        [Output("dataSourceDetectorMappingInfos")]
        public Output<ImmutableArray<Outputs.CloudGuardDataSourceDataSourceDetectorMappingInfo>> DataSourceDetectorMappingInfos { get; private set; } = null!;

        /// <summary>
        /// Type of data source feed provider (LoggingQuery)
        /// </summary>
        [Output("dataSourceFeedProvider")]
        public Output<string> DataSourceFeedProvider { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, string>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Data source display name
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// 
        /// Avoid entering confidential information.
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, string>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// Information about the region and status of query replication
        /// </summary>
        [Output("regionStatusDetails")]
        public Output<ImmutableArray<Outputs.CloudGuardDataSourceRegionStatusDetail>> RegionStatusDetails { get; private set; } = null!;

        /// <summary>
        /// The current lifecycle state of the resource.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Enablement status of data source.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        [Output("systemTags")]
        public Output<ImmutableDictionary<string, string>> SystemTags { get; private set; } = null!;

        /// <summary>
        /// The date and time the Data source was created. Format defined by RFC3339.
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The date and time the data source was updated. Format defined by RFC3339.
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;


        /// <summary>
        /// Create a CloudGuardDataSource resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CloudGuardDataSource(string name, CloudGuardDataSourceArgs args, CustomResourceOptions? options = null)
            : base("oci:CloudGuard/cloudGuardDataSource:CloudGuardDataSource", name, args ?? new CloudGuardDataSourceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CloudGuardDataSource(string name, Input<string> id, CloudGuardDataSourceState? state = null, CustomResourceOptions? options = null)
            : base("oci:CloudGuard/cloudGuardDataSource:CloudGuardDataSource", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CloudGuardDataSource resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CloudGuardDataSource Get(string name, Input<string> id, CloudGuardDataSourceState? state = null, CustomResourceOptions? options = null)
        {
            return new CloudGuardDataSource(name, id, state, options);
        }
    }

    public sealed class CloudGuardDataSourceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) Compartment OCID of the data source
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// (Updatable) Details specific to the data source type.
        /// </summary>
        [Input("dataSourceDetails")]
        public Input<Inputs.CloudGuardDataSourceDataSourceDetailsArgs>? DataSourceDetails { get; set; }

        /// <summary>
        /// Type of data source feed provider (LoggingQuery)
        /// </summary>
        [Input("dataSourceFeedProvider", required: true)]
        public Input<string> DataSourceFeedProvider { get; set; } = null!;

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) Data source display name
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// 
        /// Avoid entering confidential information.
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) Enablement status of data source.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public CloudGuardDataSourceArgs()
        {
        }
        public static new CloudGuardDataSourceArgs Empty => new CloudGuardDataSourceArgs();
    }

    public sealed class CloudGuardDataSourceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) Compartment OCID of the data source
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// (Updatable) Details specific to the data source type.
        /// </summary>
        [Input("dataSourceDetails")]
        public Input<Inputs.CloudGuardDataSourceDataSourceDetailsGetArgs>? DataSourceDetails { get; set; }

        [Input("dataSourceDetectorMappingInfos")]
        private InputList<Inputs.CloudGuardDataSourceDataSourceDetectorMappingInfoGetArgs>? _dataSourceDetectorMappingInfos;

        /// <summary>
        /// Information about the detector recipe and rule attached
        /// </summary>
        public InputList<Inputs.CloudGuardDataSourceDataSourceDetectorMappingInfoGetArgs> DataSourceDetectorMappingInfos
        {
            get => _dataSourceDetectorMappingInfos ?? (_dataSourceDetectorMappingInfos = new InputList<Inputs.CloudGuardDataSourceDataSourceDetectorMappingInfoGetArgs>());
            set => _dataSourceDetectorMappingInfos = value;
        }

        /// <summary>
        /// Type of data source feed provider (LoggingQuery)
        /// </summary>
        [Input("dataSourceFeedProvider")]
        public Input<string>? DataSourceFeedProvider { get; set; }

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) Data source display name
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// 
        /// Avoid entering confidential information.
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        [Input("regionStatusDetails")]
        private InputList<Inputs.CloudGuardDataSourceRegionStatusDetailGetArgs>? _regionStatusDetails;

        /// <summary>
        /// Information about the region and status of query replication
        /// </summary>
        public InputList<Inputs.CloudGuardDataSourceRegionStatusDetailGetArgs> RegionStatusDetails
        {
            get => _regionStatusDetails ?? (_regionStatusDetails = new InputList<Inputs.CloudGuardDataSourceRegionStatusDetailGetArgs>());
            set => _regionStatusDetails = value;
        }

        /// <summary>
        /// The current lifecycle state of the resource.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// (Updatable) Enablement status of data source.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("systemTags")]
        private InputMap<string>? _systemTags;

        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public InputMap<string> SystemTags
        {
            get => _systemTags ?? (_systemTags = new InputMap<string>());
            set => _systemTags = value;
        }

        /// <summary>
        /// The date and time the Data source was created. Format defined by RFC3339.
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The date and time the data source was updated. Format defined by RFC3339.
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        public CloudGuardDataSourceState()
        {
        }
        public static new CloudGuardDataSourceState Empty => new CloudGuardDataSourceState();
    }
}
