// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CloudGuard
{
    public static class GetAdhocQuery
    {
        /// <summary>
        /// This data source provides details about a specific Adhoc Query resource in Oracle Cloud Infrastructure Cloud Guard service.
        /// 
        /// Returns an adhoc query identified by adhocQueryId.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAdhocQuery = Oci.CloudGuard.GetAdhocQuery.Invoke(new()
        ///     {
        ///         AdhocQueryId = testAdhocQueryOciCloudGuardAdhocQuery.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetAdhocQueryResult> InvokeAsync(GetAdhocQueryArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAdhocQueryResult>("oci:CloudGuard/getAdhocQuery:getAdhocQuery", args ?? new GetAdhocQueryArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Adhoc Query resource in Oracle Cloud Infrastructure Cloud Guard service.
        /// 
        /// Returns an adhoc query identified by adhocQueryId.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAdhocQuery = Oci.CloudGuard.GetAdhocQuery.Invoke(new()
        ///     {
        ///         AdhocQueryId = testAdhocQueryOciCloudGuardAdhocQuery.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAdhocQueryResult> Invoke(GetAdhocQueryInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAdhocQueryResult>("oci:CloudGuard/getAdhocQuery:getAdhocQuery", args ?? new GetAdhocQueryInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAdhocQueryArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Adhoc query OCID.
        /// </summary>
        [Input("adhocQueryId", required: true)]
        public string AdhocQueryId { get; set; } = null!;

        public GetAdhocQueryArgs()
        {
        }
        public static new GetAdhocQueryArgs Empty => new GetAdhocQueryArgs();
    }

    public sealed class GetAdhocQueryInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Adhoc query OCID.
        /// </summary>
        [Input("adhocQueryId", required: true)]
        public Input<string> AdhocQueryId { get; set; } = null!;

        public GetAdhocQueryInvokeArgs()
        {
        }
        public static new GetAdhocQueryInvokeArgs Empty => new GetAdhocQueryInvokeArgs();
    }


    [OutputType]
    public sealed class GetAdhocQueryResult
    {
        /// <summary>
        /// Detailed information about the adhoc query.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAdhocQueryAdhocQueryDetailResult> AdhocQueryDetails;
        public readonly string AdhocQueryId;
        /// <summary>
        /// Instance level status for each region
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAdhocQueryAdhocQueryRegionalDetailResult> AdhocQueryRegionalDetails;
        /// <summary>
        /// Compartment OCID of the adhoc query
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// Error message to show on UI in case of failure
        /// </summary>
        public readonly string ErrorMessage;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// OCID for the adhoc query
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The current lifecycle state of the resource.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Status of the adhoc query
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// The date and time the adhoc query was created. Format defined by RFC3339.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The date and time the adhoc query was updated. Format defined by RFC3339.
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetAdhocQueryResult(
            ImmutableArray<Outputs.GetAdhocQueryAdhocQueryDetailResult> adhocQueryDetails,

            string adhocQueryId,

            ImmutableArray<Outputs.GetAdhocQueryAdhocQueryRegionalDetailResult> adhocQueryRegionalDetails,

            string compartmentId,

            ImmutableDictionary<string, string> definedTags,

            string errorMessage,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            string state,

            string status,

            ImmutableDictionary<string, string> systemTags,

            string timeCreated,

            string timeUpdated)
        {
            AdhocQueryDetails = adhocQueryDetails;
            AdhocQueryId = adhocQueryId;
            AdhocQueryRegionalDetails = adhocQueryRegionalDetails;
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            ErrorMessage = errorMessage;
            FreeformTags = freeformTags;
            Id = id;
            State = state;
            Status = status;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
