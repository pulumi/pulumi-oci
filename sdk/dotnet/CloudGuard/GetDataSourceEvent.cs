// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CloudGuard
{
    public static class GetDataSourceEvent
    {
        /// <summary>
        /// This data source provides details about a specific Data Source Event resource in Oracle Cloud Infrastructure Cloud Guard service.
        /// 
        /// Returns a list of events from CloudGuard DataSource
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDataSourceEvent = Oci.CloudGuard.GetDataSourceEvent.Invoke(new()
        ///     {
        ///         DataSourceId = oci_cloud_guard_data_source.Test_data_source.Id,
        ///         Region = @var.Data_source_event_region,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetDataSourceEventResult> InvokeAsync(GetDataSourceEventArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDataSourceEventResult>("oci:CloudGuard/getDataSourceEvent:getDataSourceEvent", args ?? new GetDataSourceEventArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Data Source Event resource in Oracle Cloud Infrastructure Cloud Guard service.
        /// 
        /// Returns a list of events from CloudGuard DataSource
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDataSourceEvent = Oci.CloudGuard.GetDataSourceEvent.Invoke(new()
        ///     {
        ///         DataSourceId = oci_cloud_guard_data_source.Test_data_source.Id,
        ///         Region = @var.Data_source_event_region,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetDataSourceEventResult> Invoke(GetDataSourceEventInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDataSourceEventResult>("oci:CloudGuard/getDataSourceEvent:getDataSourceEvent", args ?? new GetDataSourceEventInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDataSourceEventArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// DataSource OCID
        /// </summary>
        [Input("dataSourceId", required: true)]
        public string DataSourceId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resource their region matches the given region.
        /// </summary>
        [Input("region")]
        public string? Region { get; set; }

        public GetDataSourceEventArgs()
        {
        }
        public static new GetDataSourceEventArgs Empty => new GetDataSourceEventArgs();
    }

    public sealed class GetDataSourceEventInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// DataSource OCID
        /// </summary>
        [Input("dataSourceId", required: true)]
        public Input<string> DataSourceId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resource their region matches the given region.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public GetDataSourceEventInvokeArgs()
        {
        }
        public static new GetDataSourceEventInvokeArgs Empty => new GetDataSourceEventInvokeArgs();
    }


    [OutputType]
    public sealed class GetDataSourceEventResult
    {
        /// <summary>
        /// Attached data Source
        /// </summary>
        public readonly string DataSourceId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// List of event related to a DataSource
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDataSourceEventItemResult> Items;
        /// <summary>
        /// Data source event region
        /// </summary>
        public readonly string? Region;

        [OutputConstructor]
        private GetDataSourceEventResult(
            string dataSourceId,

            string id,

            ImmutableArray<Outputs.GetDataSourceEventItemResult> items,

            string? region)
        {
            DataSourceId = dataSourceId;
            Id = id;
            Items = items;
            Region = region;
        }
    }
}
