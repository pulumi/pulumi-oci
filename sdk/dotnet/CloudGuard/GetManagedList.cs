// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CloudGuard
{
    public static class GetManagedList
    {
        /// <summary>
        /// This data source provides details about a specific Managed List resource in Oracle Cloud Infrastructure Cloud Guard service.
        /// 
        /// Returns a managed list identified by managedListId
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedList = Oci.CloudGuard.GetManagedList.Invoke(new()
        ///     {
        ///         ManagedListId = oci_cloud_guard_managed_list.Test_managed_list.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetManagedListResult> InvokeAsync(GetManagedListArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetManagedListResult>("oci:CloudGuard/getManagedList:getManagedList", args ?? new GetManagedListArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Managed List resource in Oracle Cloud Infrastructure Cloud Guard service.
        /// 
        /// Returns a managed list identified by managedListId
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedList = Oci.CloudGuard.GetManagedList.Invoke(new()
        ///     {
        ///         ManagedListId = oci_cloud_guard_managed_list.Test_managed_list.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetManagedListResult> Invoke(GetManagedListInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedListResult>("oci:CloudGuard/getManagedList:getManagedList", args ?? new GetManagedListInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagedListArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The cloudguard list OCID to be passed in the request.
        /// </summary>
        [Input("managedListId", required: true)]
        public string ManagedListId { get; set; } = null!;

        public GetManagedListArgs()
        {
        }
        public static new GetManagedListArgs Empty => new GetManagedListArgs();
    }

    public sealed class GetManagedListInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The cloudguard list OCID to be passed in the request.
        /// </summary>
        [Input("managedListId", required: true)]
        public Input<string> ManagedListId { get; set; } = null!;

        public GetManagedListInvokeArgs()
        {
        }
        public static new GetManagedListInvokeArgs Empty => new GetManagedListInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagedListResult
    {
        /// <summary>
        /// Compartment Identifier where the resource is created
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? DefinedTags;
        /// <summary>
        /// ManagedList description.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// ManagedList display name.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// provider of the feed
        /// </summary>
        public readonly string? FeedProvider;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? FreeformTags;
        /// <summary>
        /// Unique identifier that is immutable on creation
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// If this list is editable or not
        /// </summary>
        public readonly bool? IsEditable;
        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        public readonly string? LifecyleDetails;
        /// <summary>
        /// List of ManagedListItem
        /// </summary>
        public readonly ImmutableArray<string> ListItems;
        /// <summary>
        /// type of the list
        /// </summary>
        public readonly string? ListType;
        public readonly string ManagedListId;
        /// <summary>
        /// OCID of the Source ManagedList
        /// </summary>
        public readonly string? SourceManagedListId;
        /// <summary>
        /// The current state of the resource.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? SystemTags;
        /// <summary>
        /// The date and time the managed list was created. Format defined by RFC3339.
        /// </summary>
        public readonly string? TimeCreated;
        /// <summary>
        /// The date and time the managed list was updated. Format defined by RFC3339.
        /// </summary>
        public readonly string? TimeUpdated;

        [OutputConstructor]
        private GetManagedListResult(
            string? compartmentId,

            ImmutableDictionary<string, object>? definedTags,

            string? description,

            string? displayName,

            string? feedProvider,

            ImmutableDictionary<string, object>? freeformTags,

            string? id,

            bool? isEditable,

            string? lifecyleDetails,

            ImmutableArray<string> listItems,

            string? listType,

            string managedListId,

            string? sourceManagedListId,

            string? state,

            ImmutableDictionary<string, object>? systemTags,

            string? timeCreated,

            string? timeUpdated)
        {
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            FeedProvider = feedProvider;
            FreeformTags = freeformTags;
            Id = id;
            IsEditable = isEditable;
            LifecyleDetails = lifecyleDetails;
            ListItems = listItems;
            ListType = listType;
            ManagedListId = managedListId;
            SourceManagedListId = sourceManagedListId;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
