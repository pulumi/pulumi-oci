// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CloudGuard
{
    public static class GetResponderRecipe
    {
        /// <summary>
        /// This data source provides details about a specific Responder Recipe resource in Oracle Cloud Infrastructure Cloud Guard service.
        /// 
        /// Returns a responder recipe (ResponderRecipe resource) identified by responderRecipeId.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testResponderRecipe = Oci.CloudGuard.GetResponderRecipe.Invoke(new()
        ///     {
        ///         ResponderRecipeId = testResponderRecipeOciCloudGuardResponderRecipe.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetResponderRecipeResult> InvokeAsync(GetResponderRecipeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetResponderRecipeResult>("oci:CloudGuard/getResponderRecipe:getResponderRecipe", args ?? new GetResponderRecipeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Responder Recipe resource in Oracle Cloud Infrastructure Cloud Guard service.
        /// 
        /// Returns a responder recipe (ResponderRecipe resource) identified by responderRecipeId.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testResponderRecipe = Oci.CloudGuard.GetResponderRecipe.Invoke(new()
        ///     {
        ///         ResponderRecipeId = testResponderRecipeOciCloudGuardResponderRecipe.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetResponderRecipeResult> Invoke(GetResponderRecipeInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetResponderRecipeResult>("oci:CloudGuard/getResponderRecipe:getResponderRecipe", args ?? new GetResponderRecipeInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Responder Recipe resource in Oracle Cloud Infrastructure Cloud Guard service.
        /// 
        /// Returns a responder recipe (ResponderRecipe resource) identified by responderRecipeId.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testResponderRecipe = Oci.CloudGuard.GetResponderRecipe.Invoke(new()
        ///     {
        ///         ResponderRecipeId = testResponderRecipeOciCloudGuardResponderRecipe.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetResponderRecipeResult> Invoke(GetResponderRecipeInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetResponderRecipeResult>("oci:CloudGuard/getResponderRecipe:getResponderRecipe", args ?? new GetResponderRecipeInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetResponderRecipeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// OCID of the responder recipe.
        /// </summary>
        [Input("responderRecipeId", required: true)]
        public string ResponderRecipeId { get; set; } = null!;

        public GetResponderRecipeArgs()
        {
        }
        public static new GetResponderRecipeArgs Empty => new GetResponderRecipeArgs();
    }

    public sealed class GetResponderRecipeInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// OCID of the responder recipe.
        /// </summary>
        [Input("responderRecipeId", required: true)]
        public Input<string> ResponderRecipeId { get; set; } = null!;

        public GetResponderRecipeInvokeArgs()
        {
        }
        public static new GetResponderRecipeInvokeArgs Empty => new GetResponderRecipeInvokeArgs();
    }


    [OutputType]
    public sealed class GetResponderRecipeResult
    {
        /// <summary>
        /// Compartment OCID
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// Responder rule description
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Responder rule display name
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// List of currently enabled responder rules for the responder type, for recipe after applying defaults
        /// </summary>
        public readonly ImmutableArray<Outputs.GetResponderRecipeEffectiveResponderRuleResult> EffectiveResponderRules;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// Unique identifier for the responder recip
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// Owner of responder recipe
        /// </summary>
        public readonly string Owner;
        public readonly string ResponderRecipeId;
        /// <summary>
        /// List of responder rules associated with the recipe
        /// </summary>
        public readonly ImmutableArray<Outputs.GetResponderRecipeResponderRuleResult> ResponderRules;
        /// <summary>
        /// The unique identifier of the source responder recipe
        /// </summary>
        public readonly string SourceResponderRecipeId;
        /// <summary>
        /// The current lifecycle state of the example
        /// </summary>
        public readonly string State;
        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// The date and time the responder recipe was created. Format defined by RFC3339.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The date and time the responder recipe was last updated. Format defined by RFC3339.
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetResponderRecipeResult(
            string compartmentId,

            ImmutableDictionary<string, string> definedTags,

            string description,

            string displayName,

            ImmutableArray<Outputs.GetResponderRecipeEffectiveResponderRuleResult> effectiveResponderRules,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            string lifecycleDetails,

            string owner,

            string responderRecipeId,

            ImmutableArray<Outputs.GetResponderRecipeResponderRuleResult> responderRules,

            string sourceResponderRecipeId,

            string state,

            ImmutableDictionary<string, string> systemTags,

            string timeCreated,

            string timeUpdated)
        {
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            EffectiveResponderRules = effectiveResponderRules;
            FreeformTags = freeformTags;
            Id = id;
            LifecycleDetails = lifecycleDetails;
            Owner = owner;
            ResponderRecipeId = responderRecipeId;
            ResponderRules = responderRules;
            SourceResponderRecipeId = sourceResponderRecipeId;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
