// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CloudGuard
{
    public static class GetSavedQueries
    {
        /// <summary>
        /// This data source provides the list of Saved Queries in Oracle Cloud Infrastructure Cloud Guard service.
        /// 
        /// Returns a list of saved queries run in a tenancy.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSavedQueries = Oci.CloudGuard.GetSavedQueries.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         AccessLevel = savedQueryAccessLevel,
        ///         CompartmentIdInSubtree = savedQueryCompartmentIdInSubtree,
        ///         DisplayName = savedQueryDisplayName,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSavedQueriesResult> InvokeAsync(GetSavedQueriesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSavedQueriesResult>("oci:CloudGuard/getSavedQueries:getSavedQueries", args ?? new GetSavedQueriesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Saved Queries in Oracle Cloud Infrastructure Cloud Guard service.
        /// 
        /// Returns a list of saved queries run in a tenancy.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSavedQueries = Oci.CloudGuard.GetSavedQueries.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         AccessLevel = savedQueryAccessLevel,
        ///         CompartmentIdInSubtree = savedQueryCompartmentIdInSubtree,
        ///         DisplayName = savedQueryDisplayName,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSavedQueriesResult> Invoke(GetSavedQueriesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSavedQueriesResult>("oci:CloudGuard/getSavedQueries:getSavedQueries", args ?? new GetSavedQueriesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Saved Queries in Oracle Cloud Infrastructure Cloud Guard service.
        /// 
        /// Returns a list of saved queries run in a tenancy.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSavedQueries = Oci.CloudGuard.GetSavedQueries.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         AccessLevel = savedQueryAccessLevel,
        ///         CompartmentIdInSubtree = savedQueryCompartmentIdInSubtree,
        ///         DisplayName = savedQueryDisplayName,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSavedQueriesResult> Invoke(GetSavedQueriesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSavedQueriesResult>("oci:CloudGuard/getSavedQueries:getSavedQueries", args ?? new GetSavedQueriesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSavedQueriesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Valid values are `RESTRICTED` and `ACCESSIBLE`. Default is `RESTRICTED`. Setting this to `ACCESSIBLE` returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to `RESTRICTED` permissions are checked and no partial results are displayed.
        /// </summary>
        [Input("accessLevel")]
        public string? AccessLevel { get; set; }

        /// <summary>
        /// The OCID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned depending on the setting of `accessLevel`.
        /// </summary>
        [Input("compartmentIdInSubtree")]
        public bool? CompartmentIdInSubtree { get; set; }

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetSavedQueriesFilterArgs>? _filters;
        public List<Inputs.GetSavedQueriesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetSavedQueriesFilterArgs>());
            set => _filters = value;
        }

        public GetSavedQueriesArgs()
        {
        }
        public static new GetSavedQueriesArgs Empty => new GetSavedQueriesArgs();
    }

    public sealed class GetSavedQueriesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Valid values are `RESTRICTED` and `ACCESSIBLE`. Default is `RESTRICTED`. Setting this to `ACCESSIBLE` returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to `RESTRICTED` permissions are checked and no partial results are displayed.
        /// </summary>
        [Input("accessLevel")]
        public Input<string>? AccessLevel { get; set; }

        /// <summary>
        /// The OCID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned depending on the setting of `accessLevel`.
        /// </summary>
        [Input("compartmentIdInSubtree")]
        public Input<bool>? CompartmentIdInSubtree { get; set; }

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetSavedQueriesFilterInputArgs>? _filters;
        public InputList<Inputs.GetSavedQueriesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetSavedQueriesFilterInputArgs>());
            set => _filters = value;
        }

        public GetSavedQueriesInvokeArgs()
        {
        }
        public static new GetSavedQueriesInvokeArgs Empty => new GetSavedQueriesInvokeArgs();
    }


    [OutputType]
    public sealed class GetSavedQueriesResult
    {
        public readonly string? AccessLevel;
        /// <summary>
        /// Compartment OCID of the saved query
        /// </summary>
        public readonly string CompartmentId;
        public readonly bool? CompartmentIdInSubtree;
        /// <summary>
        /// Display name of the saved query
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetSavedQueriesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of saved_query_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSavedQueriesSavedQueryCollectionResult> SavedQueryCollections;

        [OutputConstructor]
        private GetSavedQueriesResult(
            string? accessLevel,

            string compartmentId,

            bool? compartmentIdInSubtree,

            string? displayName,

            ImmutableArray<Outputs.GetSavedQueriesFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetSavedQueriesSavedQueryCollectionResult> savedQueryCollections)
        {
            AccessLevel = accessLevel;
            CompartmentId = compartmentId;
            CompartmentIdInSubtree = compartmentIdInSubtree;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            SavedQueryCollections = savedQueryCollections;
        }
    }
}
