// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CloudGuard
{
    public static class GetSecurityPolicies
    {
        /// <summary>
        /// This data source provides the list of Security Policies in Oracle Cloud Infrastructure Cloud Guard service.
        /// 
        /// Returns a list of security zone policies. Specify any compartment.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testSecurityPolicies = Output.Create(Oci.CloudGuard.GetSecurityPolicies.InvokeAsync(new Oci.CloudGuard.GetSecurityPoliciesArgs
        ///         {
        ///             CompartmentId = @var.Compartment_id,
        ///             DisplayName = @var.Security_policy_display_name,
        ///             Id = @var.Security_policy_id,
        ///             State = @var.Security_policy_state,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetSecurityPoliciesResult> InvokeAsync(GetSecurityPoliciesArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSecurityPoliciesResult>("oci:CloudGuard/getSecurityPolicies:getSecurityPolicies", args ?? new GetSecurityPoliciesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Security Policies in Oracle Cloud Infrastructure Cloud Guard service.
        /// 
        /// Returns a list of security zone policies. Specify any compartment.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testSecurityPolicies = Output.Create(Oci.CloudGuard.GetSecurityPolicies.InvokeAsync(new Oci.CloudGuard.GetSecurityPoliciesArgs
        ///         {
        ///             CompartmentId = @var.Compartment_id,
        ///             DisplayName = @var.Security_policy_display_name,
        ///             Id = @var.Security_policy_id,
        ///             State = @var.Security_policy_state,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetSecurityPoliciesResult> Invoke(GetSecurityPoliciesInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetSecurityPoliciesResult>("oci:CloudGuard/getSecurityPolicies:getSecurityPolicies", args ?? new GetSecurityPoliciesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSecurityPoliciesArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetSecurityPoliciesFilterArgs>? _filters;
        public List<Inputs.GetSecurityPoliciesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetSecurityPoliciesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The unique identifier of the security zone policy (`SecurityPolicy`)
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetSecurityPoliciesArgs()
        {
        }
    }

    public sealed class GetSecurityPoliciesInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetSecurityPoliciesFilterInputArgs>? _filters;
        public InputList<Inputs.GetSecurityPoliciesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetSecurityPoliciesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The unique identifier of the security zone policy (`SecurityPolicy`)
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetSecurityPoliciesInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetSecurityPoliciesResult
    {
        /// <summary>
        /// The id of the security policy's compartment
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The security policy's full name
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetSecurityPoliciesFilterResult> Filters;
        /// <summary>
        /// Unique identifier that is immutable on creation
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The list of security_policy_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSecurityPoliciesSecurityPolicyCollectionResult> SecurityPolicyCollections;
        /// <summary>
        /// The current state of the security policy
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetSecurityPoliciesResult(
            string compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetSecurityPoliciesFilterResult> filters,

            string? id,

            ImmutableArray<Outputs.GetSecurityPoliciesSecurityPolicyCollectionResult> securityPolicyCollections,

            string? state)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            SecurityPolicyCollections = securityPolicyCollections;
            State = state;
        }
    }
}
