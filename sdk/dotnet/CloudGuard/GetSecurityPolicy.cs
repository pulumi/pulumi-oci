// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CloudGuard
{
    public static class GetSecurityPolicy
    {
        /// <summary>
        /// This data source provides details about a specific Security Policy resource in Oracle Cloud Infrastructure Cloud Guard service.
        /// 
        /// Returns a security zone policy (SecurityPolicy resource), identified by its unique ID
        /// (securityPolicyId). When a policy is enabled in a security zone, then any action in
        /// the zone that attempts to violate that policy is blocked.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSecurityPolicy = Oci.CloudGuard.GetSecurityPolicy.Invoke(new()
        ///     {
        ///         SecurityPolicyId = testSecurityPolicyOciCloudGuardSecurityPolicy.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSecurityPolicyResult> InvokeAsync(GetSecurityPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSecurityPolicyResult>("oci:CloudGuard/getSecurityPolicy:getSecurityPolicy", args ?? new GetSecurityPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Security Policy resource in Oracle Cloud Infrastructure Cloud Guard service.
        /// 
        /// Returns a security zone policy (SecurityPolicy resource), identified by its unique ID
        /// (securityPolicyId). When a policy is enabled in a security zone, then any action in
        /// the zone that attempts to violate that policy is blocked.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSecurityPolicy = Oci.CloudGuard.GetSecurityPolicy.Invoke(new()
        ///     {
        ///         SecurityPolicyId = testSecurityPolicyOciCloudGuardSecurityPolicy.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSecurityPolicyResult> Invoke(GetSecurityPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSecurityPolicyResult>("oci:CloudGuard/getSecurityPolicy:getSecurityPolicy", args ?? new GetSecurityPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSecurityPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique identifier of the security zone policy. (`SecurityPolicy`)
        /// </summary>
        [Input("securityPolicyId", required: true)]
        public string SecurityPolicyId { get; set; } = null!;

        public GetSecurityPolicyArgs()
        {
        }
        public static new GetSecurityPolicyArgs Empty => new GetSecurityPolicyArgs();
    }

    public sealed class GetSecurityPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique identifier of the security zone policy. (`SecurityPolicy`)
        /// </summary>
        [Input("securityPolicyId", required: true)]
        public Input<string> SecurityPolicyId { get; set; } = null!;

        public GetSecurityPolicyInvokeArgs()
        {
        }
        public static new GetSecurityPolicyInvokeArgs Empty => new GetSecurityPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetSecurityPolicyResult
    {
        /// <summary>
        /// The category of the security policy
        /// </summary>
        public readonly string Category;
        /// <summary>
        /// The OCID of the security policy's compartment
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// The security policy's description
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The security policy's display name
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// A shorter version of the security policy's name
        /// </summary>
        public readonly string FriendlyName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A message describing the current state in more detail. For example, this can be used to provide actionable information for a resource in a `Failed` state.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// The owner of the security policy
        /// </summary>
        public readonly string Owner;
        public readonly string SecurityPolicyId;
        /// <summary>
        /// The list of services that the security policy protects
        /// </summary>
        public readonly ImmutableArray<string> Services;
        /// <summary>
        /// The current lifecycle state of the security policy
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The time the security policy was created. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time the security policy was last updated. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetSecurityPolicyResult(
            string category,

            string compartmentId,

            ImmutableDictionary<string, string> definedTags,

            string description,

            string displayName,

            ImmutableDictionary<string, string> freeformTags,

            string friendlyName,

            string id,

            string lifecycleDetails,

            string owner,

            string securityPolicyId,

            ImmutableArray<string> services,

            string state,

            string timeCreated,

            string timeUpdated)
        {
            Category = category;
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            FriendlyName = friendlyName;
            Id = id;
            LifecycleDetails = lifecycleDetails;
            Owner = owner;
            SecurityPolicyId = securityPolicyId;
            Services = services;
            State = state;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
