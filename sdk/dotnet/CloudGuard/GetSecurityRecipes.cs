// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CloudGuard
{
    public static class GetSecurityRecipes
    {
        /// <summary>
        /// This data source provides the list of Security Recipes in Oracle Cloud Infrastructure Cloud Guard service.
        /// 
        /// Gets a list of all security zone recipes in a compartment.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testSecurityRecipes = Output.Create(Oci.CloudGuard.GetSecurityRecipes.InvokeAsync(new Oci.CloudGuard.GetSecurityRecipesArgs
        ///         {
        ///             CompartmentId = @var.Compartment_id,
        ///             DisplayName = @var.Security_recipe_display_name,
        ///             Id = @var.Security_recipe_id,
        ///             State = @var.Security_recipe_state,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetSecurityRecipesResult> InvokeAsync(GetSecurityRecipesArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSecurityRecipesResult>("oci:CloudGuard/getSecurityRecipes:getSecurityRecipes", args ?? new GetSecurityRecipesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Security Recipes in Oracle Cloud Infrastructure Cloud Guard service.
        /// 
        /// Gets a list of all security zone recipes in a compartment.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testSecurityRecipes = Output.Create(Oci.CloudGuard.GetSecurityRecipes.InvokeAsync(new Oci.CloudGuard.GetSecurityRecipesArgs
        ///         {
        ///             CompartmentId = @var.Compartment_id,
        ///             DisplayName = @var.Security_recipe_display_name,
        ///             Id = @var.Security_recipe_id,
        ///             State = @var.Security_recipe_state,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetSecurityRecipesResult> Invoke(GetSecurityRecipesInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetSecurityRecipesResult>("oci:CloudGuard/getSecurityRecipes:getSecurityRecipes", args ?? new GetSecurityRecipesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSecurityRecipesArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetSecurityRecipesFilterArgs>? _filters;
        public List<Inputs.GetSecurityRecipesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetSecurityRecipesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The unique identifier of the security zone recipe (`SecurityRecipe`)
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetSecurityRecipesArgs()
        {
        }
    }

    public sealed class GetSecurityRecipesInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetSecurityRecipesFilterInputArgs>? _filters;
        public InputList<Inputs.GetSecurityRecipesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetSecurityRecipesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The unique identifier of the security zone recipe (`SecurityRecipe`)
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetSecurityRecipesInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetSecurityRecipesResult
    {
        /// <summary>
        /// The id of the compartment that contains the recipe
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The recipe's name
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetSecurityRecipesFilterResult> Filters;
        /// <summary>
        /// Unique identifier that is immutable on creation
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The list of security_recipe_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSecurityRecipesSecurityRecipeCollectionResult> SecurityRecipeCollections;
        /// <summary>
        /// The current state of the recipe
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetSecurityRecipesResult(
            string compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetSecurityRecipesFilterResult> filters,

            string? id,

            ImmutableArray<Outputs.GetSecurityRecipesSecurityRecipeCollectionResult> securityRecipeCollections,

            string? state)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            SecurityRecipeCollections = securityRecipeCollections;
            State = state;
        }
    }
}
