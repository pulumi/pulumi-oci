// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CloudGuard
{
    public static class GetSecurityZones
    {
        /// <summary>
        /// This data source provides the list of Security Zones in Oracle Cloud Infrastructure Cloud Guard service.
        /// 
        /// Returns a list of security zones (SecurityZone resources) in a compartment identified by
        /// compartmentId. List is contained in a page of SecurityZoneSummary resources.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSecurityZones = Oci.CloudGuard.GetSecurityZones.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = securityZoneDisplayName,
        ///         Id = securityZoneId,
        ///         IsRequiredSecurityZonesInSubtree = securityZoneIsRequiredSecurityZonesInSubtree,
        ///         SecurityRecipeId = testSecurityRecipe.Id,
        ///         State = securityZoneState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSecurityZonesResult> InvokeAsync(GetSecurityZonesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSecurityZonesResult>("oci:CloudGuard/getSecurityZones:getSecurityZones", args ?? new GetSecurityZonesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Security Zones in Oracle Cloud Infrastructure Cloud Guard service.
        /// 
        /// Returns a list of security zones (SecurityZone resources) in a compartment identified by
        /// compartmentId. List is contained in a page of SecurityZoneSummary resources.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSecurityZones = Oci.CloudGuard.GetSecurityZones.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = securityZoneDisplayName,
        ///         Id = securityZoneId,
        ///         IsRequiredSecurityZonesInSubtree = securityZoneIsRequiredSecurityZonesInSubtree,
        ///         SecurityRecipeId = testSecurityRecipe.Id,
        ///         State = securityZoneState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSecurityZonesResult> Invoke(GetSecurityZonesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSecurityZonesResult>("oci:CloudGuard/getSecurityZones:getSecurityZones", args ?? new GetSecurityZonesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSecurityZonesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetSecurityZonesFilterArgs>? _filters;
        public List<Inputs.GetSecurityZonesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetSecurityZonesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The unique identifier of the security zone (`SecurityZone` resource).
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// Is security zones in the subtree?
        /// </summary>
        [Input("isRequiredSecurityZonesInSubtree")]
        public bool? IsRequiredSecurityZonesInSubtree { get; set; }

        /// <summary>
        /// The unique identifier of the security zone recipe. (`SecurityRecipe` resource).
        /// </summary>
        [Input("securityRecipeId")]
        public string? SecurityRecipeId { get; set; }

        /// <summary>
        /// The field lifecycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetSecurityZonesArgs()
        {
        }
        public static new GetSecurityZonesArgs Empty => new GetSecurityZonesArgs();
    }

    public sealed class GetSecurityZonesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetSecurityZonesFilterInputArgs>? _filters;
        public InputList<Inputs.GetSecurityZonesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetSecurityZonesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The unique identifier of the security zone (`SecurityZone` resource).
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Is security zones in the subtree?
        /// </summary>
        [Input("isRequiredSecurityZonesInSubtree")]
        public Input<bool>? IsRequiredSecurityZonesInSubtree { get; set; }

        /// <summary>
        /// The unique identifier of the security zone recipe. (`SecurityRecipe` resource).
        /// </summary>
        [Input("securityRecipeId")]
        public Input<string>? SecurityRecipeId { get; set; }

        /// <summary>
        /// The field lifecycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetSecurityZonesInvokeArgs()
        {
        }
        public static new GetSecurityZonesInvokeArgs Empty => new GetSecurityZonesInvokeArgs();
    }


    [OutputType]
    public sealed class GetSecurityZonesResult
    {
        /// <summary>
        /// The OCID of the compartment for the security zone
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The security zone's display name
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetSecurityZonesFilterResult> Filters;
        /// <summary>
        /// Unique identifier that canâ€™t be changed after creation
        /// </summary>
        public readonly string? Id;
        public readonly bool? IsRequiredSecurityZonesInSubtree;
        public readonly string? SecurityRecipeId;
        /// <summary>
        /// The list of security_zone_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSecurityZonesSecurityZoneCollectionResult> SecurityZoneCollections;
        /// <summary>
        /// The current lifecycle state of the security zone
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetSecurityZonesResult(
            string compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetSecurityZonesFilterResult> filters,

            string? id,

            bool? isRequiredSecurityZonesInSubtree,

            string? securityRecipeId,

            ImmutableArray<Outputs.GetSecurityZonesSecurityZoneCollectionResult> securityZoneCollections,

            string? state)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            IsRequiredSecurityZonesInSubtree = isRequiredSecurityZonesInSubtree;
            SecurityRecipeId = securityRecipeId;
            SecurityZoneCollections = securityZoneCollections;
            State = state;
        }
    }
}
