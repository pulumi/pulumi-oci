// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CloudGuard.Inputs
{

    public sealed class CloudGuardDataSourceDataSourceDetailsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The additional entities count used for data source query.
        /// </summary>
        [Input("additionalEntitiesCount")]
        public Input<int>? AdditionalEntitiesCount { get; set; }

        /// <summary>
        /// Possible type of dataSourceFeed Provider(LoggingQuery)
        /// </summary>
        [Input("dataSourceFeedProvider", required: true)]
        public Input<string> DataSourceFeedProvider { get; set; } = null!;

        /// <summary>
        /// (Updatable) Interval in minutes that query is run periodically.
        /// </summary>
        [Input("intervalInMinutes")]
        public Input<int>? IntervalInMinutes { get; set; }

        /// <summary>
        /// (Updatable) Additional details specific to the data source type (Sighting/Insight).
        /// </summary>
        [Input("loggingQueryDetails")]
        public Input<Inputs.CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsArgs>? LoggingQueryDetails { get; set; }

        /// <summary>
        /// (Updatable) Logging query type for data source (Sighting/Insight)
        /// </summary>
        [Input("loggingQueryType")]
        public Input<string>? LoggingQueryType { get; set; }

        /// <summary>
        /// (Updatable) Operator used in Data Soruce
        /// </summary>
        [Input("operator")]
        public Input<string>? Operator { get; set; }

        /// <summary>
        /// (Updatable) The continuous query expression that is run periodically.
        /// </summary>
        [Input("query")]
        public Input<string>? Query { get; set; }

        /// <summary>
        /// (Updatable) Time when the query can start, if not specified it can start immediately.
        /// </summary>
        [Input("queryStartTime")]
        public Input<Inputs.CloudGuardDataSourceDataSourceDetailsQueryStartTimeArgs>? QueryStartTime { get; set; }

        [Input("regions")]
        private InputList<string>? _regions;

        /// <summary>
        /// (Updatable) Logging Query regions
        /// </summary>
        public InputList<string> Regions
        {
            get => _regions ?? (_regions = new InputList<string>());
            set => _regions = value;
        }

        /// <summary>
        /// (Updatable) The integer value that must be exceeded, fall below or equal to (depending on the operator), the query result to trigger an event.
        /// </summary>
        [Input("threshold")]
        public Input<int>? Threshold { get; set; }

        public CloudGuardDataSourceDataSourceDetailsArgs()
        {
        }
        public static new CloudGuardDataSourceDataSourceDetailsArgs Empty => new CloudGuardDataSourceDataSourceDetailsArgs();
    }
}
