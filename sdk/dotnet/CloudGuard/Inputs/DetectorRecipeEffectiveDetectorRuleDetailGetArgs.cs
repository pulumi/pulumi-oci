// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CloudGuard.Inputs
{

    public sealed class DetectorRecipeEffectiveDetectorRuleDetailGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The base condition resource.
        /// </summary>
        [Input("condition")]
        public Input<string>? Condition { get; set; }

        [Input("configurations")]
        private InputList<Inputs.DetectorRecipeEffectiveDetectorRuleDetailConfigurationGetArgs>? _configurations;

        /// <summary>
        /// List of detector rule configurations
        /// </summary>
        public InputList<Inputs.DetectorRecipeEffectiveDetectorRuleDetailConfigurationGetArgs> Configurations
        {
            get => _configurations ?? (_configurations = new InputList<Inputs.DetectorRecipeEffectiveDetectorRuleDetailConfigurationGetArgs>());
            set => _configurations = value;
        }

        /// <summary>
        /// The ID of the attached data source
        /// </summary>
        [Input("dataSourceId")]
        public Input<string>? DataSourceId { get; set; }

        /// <summary>
        /// (Updatable) Detector recipe description.
        /// 
        /// Avoid entering confidential information.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("entitiesMappings")]
        private InputList<Inputs.DetectorRecipeEffectiveDetectorRuleDetailEntitiesMappingGetArgs>? _entitiesMappings;

        /// <summary>
        /// Data source entities mapping for the detector rule
        /// </summary>
        public InputList<Inputs.DetectorRecipeEffectiveDetectorRuleDetailEntitiesMappingGetArgs> EntitiesMappings
        {
            get => _entitiesMappings ?? (_entitiesMappings = new InputList<Inputs.DetectorRecipeEffectiveDetectorRuleDetailEntitiesMappingGetArgs>());
            set => _entitiesMappings = value;
        }

        /// <summary>
        /// Can the rule be configured?
        /// </summary>
        [Input("isConfigurationAllowed")]
        public Input<bool>? IsConfigurationAllowed { get; set; }

        /// <summary>
        /// Enablement status for the rule
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        [Input("labels")]
        private InputList<string>? _labels;

        /// <summary>
        /// User-defined labels for a detector rule
        /// </summary>
        public InputList<string> Labels
        {
            get => _labels ?? (_labels = new InputList<string>());
            set => _labels = value;
        }

        /// <summary>
        /// Recommendation for DetectorRecipeDetectorRule resource
        /// </summary>
        [Input("recommendation")]
        public Input<string>? Recommendation { get; set; }

        /// <summary>
        /// The risk level for the rule
        /// </summary>
        [Input("riskLevel")]
        public Input<string>? RiskLevel { get; set; }

        public DetectorRecipeEffectiveDetectorRuleDetailGetArgs()
        {
        }
        public static new DetectorRecipeEffectiveDetectorRuleDetailGetArgs Empty => new DetectorRecipeEffectiveDetectorRuleDetailGetArgs();
    }
}
