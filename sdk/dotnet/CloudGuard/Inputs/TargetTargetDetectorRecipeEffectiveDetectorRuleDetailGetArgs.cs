// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CloudGuard.Inputs
{

    public sealed class TargetTargetDetectorRecipeEffectiveDetectorRuleDetailGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("conditionGroups")]
        private InputList<Inputs.TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupGetArgs>? _conditionGroups;

        /// <summary>
        /// Condition group corresponding to each compartment
        /// </summary>
        public InputList<Inputs.TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupGetArgs> ConditionGroups
        {
            get => _conditionGroups ?? (_conditionGroups = new InputList<Inputs.TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupGetArgs>());
            set => _conditionGroups = value;
        }

        [Input("configurations")]
        private InputList<Inputs.TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationGetArgs>? _configurations;

        /// <summary>
        /// List of responder rule configurations
        /// </summary>
        public InputList<Inputs.TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationGetArgs> Configurations
        {
            get => _configurations ?? (_configurations = new InputList<Inputs.TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationGetArgs>());
            set => _configurations = value;
        }

        /// <summary>
        /// Configuration allowed or not
        /// </summary>
        [Input("isConfigurationAllowed")]
        public Input<bool>? IsConfigurationAllowed { get; set; }

        /// <summary>
        /// Enabled state for the responder rule
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        [Input("labels")]
        private InputList<string>? _labels;

        /// <summary>
        /// User-defined labels for a detector rule
        /// </summary>
        public InputList<string> Labels
        {
            get => _labels ?? (_labels = new InputList<string>());
            set => _labels = value;
        }

        /// <summary>
        /// The risk level of the detector rule
        /// </summary>
        [Input("riskLevel")]
        public Input<string>? RiskLevel { get; set; }

        public TargetTargetDetectorRecipeEffectiveDetectorRuleDetailGetArgs()
        {
        }
        public static new TargetTargetDetectorRecipeEffectiveDetectorRuleDetailGetArgs Empty => new TargetTargetDetectorRecipeEffectiveDetectorRuleDetailGetArgs();
    }
}
