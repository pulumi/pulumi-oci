// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CloudGuard.Inputs
{

    public sealed class TargetTargetResponderRecipeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Compartment OCID where the resource is created
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// The target description.
        /// 
        /// Avoid entering confidential information.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) Display name for the target.
        /// 
        /// Avoid entering confidential information.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("effectiveResponderRules")]
        private InputList<Inputs.TargetTargetResponderRecipeEffectiveResponderRuleArgs>? _effectiveResponderRules;

        /// <summary>
        /// List of currently enabled responder rules for the responder type for recipe after applying defaults
        /// </summary>
        public InputList<Inputs.TargetTargetResponderRecipeEffectiveResponderRuleArgs> EffectiveResponderRules
        {
            get => _effectiveResponderRules ?? (_effectiveResponderRules = new InputList<Inputs.TargetTargetResponderRecipeEffectiveResponderRuleArgs>());
            set => _effectiveResponderRules = value;
        }

        /// <summary>
        /// Unique identifier of target responder recipe that can't be changed after creation
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Owner of target responder recipe
        /// </summary>
        [Input("owner")]
        public Input<string>? Owner { get; set; }

        /// <summary>
        /// Unique identifier for responder recipe
        /// </summary>
        [Input("responderRecipeId", required: true)]
        public Input<string> ResponderRecipeId { get; set; } = null!;

        [Input("responderRules")]
        private InputList<Inputs.TargetTargetResponderRecipeResponderRuleArgs>? _responderRules;

        /// <summary>
        /// (Updatable) List of overrides to be applied to responder rules associated with the target
        /// </summary>
        public InputList<Inputs.TargetTargetResponderRecipeResponderRuleArgs> ResponderRules
        {
            get => _responderRules ?? (_responderRules = new InputList<Inputs.TargetTargetResponderRecipeResponderRuleArgs>());
            set => _responderRules = value;
        }

        /// <summary>
        /// The date and time the target was created. Format defined by RFC3339.
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The date and time the target was last updated. Format defined by RFC3339.
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        public TargetTargetResponderRecipeArgs()
        {
        }
        public static new TargetTargetResponderRecipeArgs Empty => new TargetTargetResponderRecipeArgs();
    }
}
