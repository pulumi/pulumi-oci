// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CloudGuard.Outputs
{

    [OutputType]
    public sealed class GetAdhocQueryAdhocQueryRegionalDetailResult
    {
        /// <summary>
        /// Expected number of instances on which query should run
        /// </summary>
        public readonly string ExpectedCount;
        /// <summary>
        /// Number of instances on which query expired
        /// </summary>
        public readonly string ExpiredCount;
        /// <summary>
        /// Number of instances on which query failed
        /// </summary>
        public readonly string FailedCount;
        /// <summary>
        /// Region name
        /// </summary>
        public readonly string Region;
        /// <summary>
        /// error message to show if adhoc query fails in a region
        /// </summary>
        public readonly string RegionalError;
        /// <summary>
        /// adhoc query status of the region
        /// </summary>
        public readonly string RegionalStatus;
        /// <summary>
        /// Number of instances on which query succeeded
        /// </summary>
        public readonly string SucceededCount;

        [OutputConstructor]
        private GetAdhocQueryAdhocQueryRegionalDetailResult(
            string expectedCount,

            string expiredCount,

            string failedCount,

            string region,

            string regionalError,

            string regionalStatus,

            string succeededCount)
        {
            ExpectedCount = expectedCount;
            ExpiredCount = expiredCount;
            FailedCount = failedCount;
            Region = region;
            RegionalError = regionalError;
            RegionalStatus = regionalStatus;
            SucceededCount = succeededCount;
        }
    }
}
