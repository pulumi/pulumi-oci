// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CloudGuard.Outputs
{

    [OutputType]
    public sealed class GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleResult
    {
        /// <summary>
        /// The ID of the attached data source
        /// </summary>
        public readonly string DataSourceId;
        /// <summary>
        /// Responder rule description
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Detailed information for a responder rule
        /// </summary>
        public readonly ImmutableArray<Outputs.GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailResult> Details;
        /// <summary>
        /// Detector type for the rule
        /// </summary>
        public readonly string Detector;
        /// <summary>
        /// The unique identifier of the detector rule
        /// </summary>
        public readonly string DetectorRuleId;
        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Data source entities mapping for a detector rule
        /// </summary>
        public readonly ImmutableArray<Outputs.GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingResult> EntitiesMappings;
        /// <summary>
        /// Is the rule cloneable?
        /// </summary>
        public readonly bool IsCloneable;
        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// List of managed list types related to this rule
        /// </summary>
        public readonly ImmutableArray<string> ManagedListTypes;
        /// <summary>
        /// Recommendation for TargetDetectorRecipeDetectorRule resource
        /// </summary>
        public readonly string Recommendation;
        /// <summary>
        /// The type of resource which is monitored by the detector rule. For example, Instance, Database, VCN, Policy. To find the resource type for a particular rule, see [Detector Recipe Reference] (/iaas/cloud-guard/using/detect-recipes.htm#detect-recipes-reference).
        /// </summary>
        public readonly string ResourceType;
        /// <summary>
        /// Rule category type
        /// </summary>
        public readonly ImmutableArray<Outputs.GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleRuleTypeResult> RuleTypes;
        /// <summary>
        /// Service type of the configuration to which the rule is applied
        /// </summary>
        public readonly string ServiceType;
        /// <summary>
        /// The field lifecycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The date and time the target was created. Format defined by RFC3339.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The date and time the target was last updated. Format defined by RFC3339.
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleResult(
            string dataSourceId,

            string description,

            ImmutableArray<Outputs.GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailResult> details,

            string detector,

            string detectorRuleId,

            string displayName,

            ImmutableArray<Outputs.GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingResult> entitiesMappings,

            bool isCloneable,

            string lifecycleDetails,

            ImmutableArray<string> managedListTypes,

            string recommendation,

            string resourceType,

            ImmutableArray<Outputs.GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleRuleTypeResult> ruleTypes,

            string serviceType,

            string state,

            string timeCreated,

            string timeUpdated)
        {
            DataSourceId = dataSourceId;
            Description = description;
            Details = details;
            Detector = detector;
            DetectorRuleId = detectorRuleId;
            DisplayName = displayName;
            EntitiesMappings = entitiesMappings;
            IsCloneable = isCloneable;
            LifecycleDetails = lifecycleDetails;
            ManagedListTypes = managedListTypes;
            Recommendation = recommendation;
            ResourceType = resourceType;
            RuleTypes = ruleTypes;
            ServiceType = serviceType;
            State = state;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
