// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CloudGuard.Outputs
{

    [OutputType]
    public sealed class GetSecurityPoliciesSecurityPolicyCollectionItemResult
    {
        /// <summary>
        /// The category of security policy
        /// </summary>
        public readonly string? Category;
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? DefinedTags;
        /// <summary>
        /// The security policy's description
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? FreeformTags;
        /// <summary>
        /// A shorter version of the security policy's name
        /// </summary>
        public readonly string? FriendlyName;
        /// <summary>
        /// The unique identifier of the security zone policy (`SecurityPolicy`)
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// A message describing the current state in more detail. For example, this can be used to provide actionable information for a resource in a `Failed` state.
        /// </summary>
        public readonly string? LifecycleDetails;
        /// <summary>
        /// The owner of the security policy
        /// </summary>
        public readonly string? Owner;
        /// <summary>
        /// The list of services that the security policy protects
        /// </summary>
        public readonly ImmutableArray<string> Services;
        /// <summary>
        /// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// The time the security policy was created. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string? TimeCreated;
        /// <summary>
        /// The time the security policy was last updated. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string? TimeUpdated;

        [OutputConstructor]
        private GetSecurityPoliciesSecurityPolicyCollectionItemResult(
            string? category,

            string? compartmentId,

            ImmutableDictionary<string, object>? definedTags,

            string? description,

            string? displayName,

            ImmutableDictionary<string, object>? freeformTags,

            string? friendlyName,

            string? id,

            string? lifecycleDetails,

            string? owner,

            ImmutableArray<string> services,

            string? state,

            string? timeCreated,

            string? timeUpdated)
        {
            Category = category;
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            FriendlyName = friendlyName;
            Id = id;
            LifecycleDetails = lifecycleDetails;
            Owner = owner;
            Services = services;
            State = state;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
