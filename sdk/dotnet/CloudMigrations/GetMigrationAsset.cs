// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CloudMigrations
{
    public static class GetMigrationAsset
    {
        /// <summary>
        /// This data source provides details about a specific Migration Asset resource in Oracle Cloud Infrastructure Cloud Migrations service.
        /// 
        /// Gets a migration asset by identifier.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMigrationAsset = Oci.CloudMigrations.GetMigrationAsset.Invoke(new()
        ///     {
        ///         MigrationAssetId = testMigrationAssetOciCloudMigrationsMigrationAsset.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetMigrationAssetResult> InvokeAsync(GetMigrationAssetArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMigrationAssetResult>("oci:CloudMigrations/getMigrationAsset:getMigrationAsset", args ?? new GetMigrationAssetArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Migration Asset resource in Oracle Cloud Infrastructure Cloud Migrations service.
        /// 
        /// Gets a migration asset by identifier.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMigrationAsset = Oci.CloudMigrations.GetMigrationAsset.Invoke(new()
        ///     {
        ///         MigrationAssetId = testMigrationAssetOciCloudMigrationsMigrationAsset.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetMigrationAssetResult> Invoke(GetMigrationAssetInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMigrationAssetResult>("oci:CloudMigrations/getMigrationAsset:getMigrationAsset", args ?? new GetMigrationAssetInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Migration Asset resource in Oracle Cloud Infrastructure Cloud Migrations service.
        /// 
        /// Gets a migration asset by identifier.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMigrationAsset = Oci.CloudMigrations.GetMigrationAsset.Invoke(new()
        ///     {
        ///         MigrationAssetId = testMigrationAssetOciCloudMigrationsMigrationAsset.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetMigrationAssetResult> Invoke(GetMigrationAssetInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetMigrationAssetResult>("oci:CloudMigrations/getMigrationAsset:getMigrationAsset", args ?? new GetMigrationAssetInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMigrationAssetArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique migration asset identifier
        /// </summary>
        [Input("migrationAssetId", required: true)]
        public string MigrationAssetId { get; set; } = null!;

        public GetMigrationAssetArgs()
        {
        }
        public static new GetMigrationAssetArgs Empty => new GetMigrationAssetArgs();
    }

    public sealed class GetMigrationAssetInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique migration asset identifier
        /// </summary>
        [Input("migrationAssetId", required: true)]
        public Input<string> MigrationAssetId { get; set; } = null!;

        public GetMigrationAssetInvokeArgs()
        {
        }
        public static new GetMigrationAssetInvokeArgs Empty => new GetMigrationAssetInvokeArgs();
    }


    [OutputType]
    public sealed class GetMigrationAssetResult
    {
        /// <summary>
        /// Availability domain
        /// </summary>
        public readonly string AvailabilityDomain;
        /// <summary>
        /// Compartment Identifier
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// List of migration assets that depend on the asset.
        /// </summary>
        public readonly ImmutableArray<string> DependedOnBies;
        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Asset ID generated by mirgration service. It is used in the mirgration service pipeline.
        /// </summary>
        public readonly string Id;
        public readonly string InventoryAssetId;
        /// <summary>
        /// A message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        public readonly string LifecycleDetails;
        public readonly ImmutableArray<string> MigrationAssetDependsOns;
        public readonly string MigrationAssetId;
        /// <summary>
        /// OCID of the associated migration.
        /// </summary>
        public readonly string MigrationId;
        /// <summary>
        /// List of notifications
        /// </summary>
        public readonly ImmutableArray<string> Notifications;
        /// <summary>
        /// The parent snapshot of the migration asset to be used by the replication task.
        /// </summary>
        public readonly string ParentSnapshot;
        /// <summary>
        /// Replication compartment identifier
        /// </summary>
        public readonly string ReplicationCompartmentId;
        /// <summary>
        /// Replication schedule identifier
        /// </summary>
        public readonly string ReplicationScheduleId;
        /// <summary>
        /// Name of snapshot bucket
        /// </summary>
        public readonly string SnapShotBucketName;
        /// <summary>
        /// Key-value pair representing disks ID mapped to the OCIDs of replicated or hydration server volume snapshots. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> Snapshots;
        /// <summary>
        /// OCID that is referenced to an asset for an inventory.
        /// </summary>
        public readonly string SourceAssetId;
        /// <summary>
        /// The current state of the migration asset.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Tenancy identifier
        /// </summary>
        public readonly string TenancyId;
        /// <summary>
        /// The time when the migration asset was created. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time when the migration asset was updated. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeUpdated;
        /// <summary>
        /// The type of asset referenced for inventory.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetMigrationAssetResult(
            string availabilityDomain,

            string compartmentId,

            ImmutableArray<string> dependedOnBies,

            string displayName,

            string id,

            string inventoryAssetId,

            string lifecycleDetails,

            ImmutableArray<string> migrationAssetDependsOns,

            string migrationAssetId,

            string migrationId,

            ImmutableArray<string> notifications,

            string parentSnapshot,

            string replicationCompartmentId,

            string replicationScheduleId,

            string snapShotBucketName,

            ImmutableDictionary<string, string> snapshots,

            string sourceAssetId,

            string state,

            string tenancyId,

            string timeCreated,

            string timeUpdated,

            string type)
        {
            AvailabilityDomain = availabilityDomain;
            CompartmentId = compartmentId;
            DependedOnBies = dependedOnBies;
            DisplayName = displayName;
            Id = id;
            InventoryAssetId = inventoryAssetId;
            LifecycleDetails = lifecycleDetails;
            MigrationAssetDependsOns = migrationAssetDependsOns;
            MigrationAssetId = migrationAssetId;
            MigrationId = migrationId;
            Notifications = notifications;
            ParentSnapshot = parentSnapshot;
            ReplicationCompartmentId = replicationCompartmentId;
            ReplicationScheduleId = replicationScheduleId;
            SnapShotBucketName = snapShotBucketName;
            Snapshots = snapshots;
            SourceAssetId = sourceAssetId;
            State = state;
            TenancyId = tenancyId;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            Type = type;
        }
    }
}
