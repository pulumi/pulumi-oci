// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CloudMigrations
{
    public static class GetMigrationPlans
    {
        /// <summary>
        /// This data source provides the list of Migration Plans in Oracle Cloud Infrastructure Cloud Migrations service.
        /// 
        /// Returns a list of migration plans.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMigrationPlans = Oci.CloudMigrations.GetMigrationPlans.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = migrationPlanDisplayName,
        ///         MigrationId = testMigration.Id,
        ///         MigrationPlanId = testMigrationPlan.Id,
        ///         State = migrationPlanState,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetMigrationPlansResult> InvokeAsync(GetMigrationPlansArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMigrationPlansResult>("oci:CloudMigrations/getMigrationPlans:getMigrationPlans", args ?? new GetMigrationPlansArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Migration Plans in Oracle Cloud Infrastructure Cloud Migrations service.
        /// 
        /// Returns a list of migration plans.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMigrationPlans = Oci.CloudMigrations.GetMigrationPlans.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = migrationPlanDisplayName,
        ///         MigrationId = testMigration.Id,
        ///         MigrationPlanId = testMigrationPlan.Id,
        ///         State = migrationPlanState,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetMigrationPlansResult> Invoke(GetMigrationPlansInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMigrationPlansResult>("oci:CloudMigrations/getMigrationPlans:getMigrationPlans", args ?? new GetMigrationPlansInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMigrationPlansArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the entire given display name.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetMigrationPlansFilterArgs>? _filters;
        public List<Inputs.GetMigrationPlansFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetMigrationPlansFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Unique migration identifier
        /// </summary>
        [Input("migrationId")]
        public string? MigrationId { get; set; }

        /// <summary>
        /// Unique migration plan identifier
        /// </summary>
        [Input("migrationPlanId")]
        public string? MigrationPlanId { get; set; }

        /// <summary>
        /// The current state of the migration plan.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetMigrationPlansArgs()
        {
        }
        public static new GetMigrationPlansArgs Empty => new GetMigrationPlansArgs();
    }

    public sealed class GetMigrationPlansInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the entire given display name.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetMigrationPlansFilterInputArgs>? _filters;
        public InputList<Inputs.GetMigrationPlansFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetMigrationPlansFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Unique migration identifier
        /// </summary>
        [Input("migrationId")]
        public Input<string>? MigrationId { get; set; }

        /// <summary>
        /// Unique migration plan identifier
        /// </summary>
        [Input("migrationPlanId")]
        public Input<string>? MigrationPlanId { get; set; }

        /// <summary>
        /// The current state of the migration plan.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetMigrationPlansInvokeArgs()
        {
        }
        public static new GetMigrationPlansInvokeArgs Empty => new GetMigrationPlansInvokeArgs();
    }


    [OutputType]
    public sealed class GetMigrationPlansResult
    {
        /// <summary>
        /// The OCID of the compartment containing the migration plan.
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetMigrationPlansFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The OCID of the associated migration.
        /// </summary>
        public readonly string? MigrationId;
        /// <summary>
        /// The list of migration_plan_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMigrationPlansMigrationPlanCollectionResult> MigrationPlanCollections;
        public readonly string? MigrationPlanId;
        /// <summary>
        /// The current state of the migration plan.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetMigrationPlansResult(
            string? compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetMigrationPlansFilterResult> filters,

            string id,

            string? migrationId,

            ImmutableArray<Outputs.GetMigrationPlansMigrationPlanCollectionResult> migrationPlanCollections,

            string? migrationPlanId,

            string? state)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            MigrationId = migrationId;
            MigrationPlanCollections = migrationPlanCollections;
            MigrationPlanId = migrationPlanId;
            State = state;
        }
    }
}
