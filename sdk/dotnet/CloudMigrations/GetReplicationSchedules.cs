// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CloudMigrations
{
    public static class GetReplicationSchedules
    {
        /// <summary>
        /// This data source provides the list of Replication Schedules in Oracle Cloud Infrastructure Cloud Migrations service.
        /// 
        /// Returns a list of replication schedules.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testReplicationSchedules = Oci.CloudMigrations.GetReplicationSchedules.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = replicationScheduleDisplayName,
        ///         ReplicationScheduleId = testReplicationSchedule.Id,
        ///         State = replicationScheduleState,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetReplicationSchedulesResult> InvokeAsync(GetReplicationSchedulesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetReplicationSchedulesResult>("oci:CloudMigrations/getReplicationSchedules:getReplicationSchedules", args ?? new GetReplicationSchedulesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Replication Schedules in Oracle Cloud Infrastructure Cloud Migrations service.
        /// 
        /// Returns a list of replication schedules.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testReplicationSchedules = Oci.CloudMigrations.GetReplicationSchedules.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = replicationScheduleDisplayName,
        ///         ReplicationScheduleId = testReplicationSchedule.Id,
        ///         State = replicationScheduleState,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetReplicationSchedulesResult> Invoke(GetReplicationSchedulesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetReplicationSchedulesResult>("oci:CloudMigrations/getReplicationSchedules:getReplicationSchedules", args ?? new GetReplicationSchedulesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetReplicationSchedulesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the entire given display name.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetReplicationSchedulesFilterArgs>? _filters;
        public List<Inputs.GetReplicationSchedulesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetReplicationSchedulesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Unique replication schedule identifier in query
        /// </summary>
        [Input("replicationScheduleId")]
        public string? ReplicationScheduleId { get; set; }

        /// <summary>
        /// The current state of the replication schedule.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetReplicationSchedulesArgs()
        {
        }
        public static new GetReplicationSchedulesArgs Empty => new GetReplicationSchedulesArgs();
    }

    public sealed class GetReplicationSchedulesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the entire given display name.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetReplicationSchedulesFilterInputArgs>? _filters;
        public InputList<Inputs.GetReplicationSchedulesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetReplicationSchedulesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Unique replication schedule identifier in query
        /// </summary>
        [Input("replicationScheduleId")]
        public Input<string>? ReplicationScheduleId { get; set; }

        /// <summary>
        /// The current state of the replication schedule.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetReplicationSchedulesInvokeArgs()
        {
        }
        public static new GetReplicationSchedulesInvokeArgs Empty => new GetReplicationSchedulesInvokeArgs();
    }


    [OutputType]
    public sealed class GetReplicationSchedulesResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the replication schedule exists.
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// A name of the replication schedule.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetReplicationSchedulesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of replication_schedule_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetReplicationSchedulesReplicationScheduleCollectionResult> ReplicationScheduleCollections;
        public readonly string? ReplicationScheduleId;
        /// <summary>
        /// Current state of the replication schedule.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetReplicationSchedulesResult(
            string? compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetReplicationSchedulesFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetReplicationSchedulesReplicationScheduleCollectionResult> replicationScheduleCollections,

            string? replicationScheduleId,

            string? state)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            ReplicationScheduleCollections = replicationScheduleCollections;
            ReplicationScheduleId = replicationScheduleId;
            State = state;
        }
    }
}
