// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CloudMigrations
{
    public static class GetTargetAssets
    {
        /// <summary>
        /// This data source provides the list of Target Assets in Oracle Cloud Infrastructure Cloud Migrations service.
        /// 
        /// Returns a list of target assets.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testTargetAssets = Oci.CloudMigrations.GetTargetAssets.Invoke(new()
        ///     {
        ///         DisplayName = targetAssetDisplayName,
        ///         MigrationPlanId = testMigrationPlan.Id,
        ///         State = targetAssetState,
        ///         TargetAssetId = testTargetAsset.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetTargetAssetsResult> InvokeAsync(GetTargetAssetsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTargetAssetsResult>("oci:CloudMigrations/getTargetAssets:getTargetAssets", args ?? new GetTargetAssetsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Target Assets in Oracle Cloud Infrastructure Cloud Migrations service.
        /// 
        /// Returns a list of target assets.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testTargetAssets = Oci.CloudMigrations.GetTargetAssets.Invoke(new()
        ///     {
        ///         DisplayName = targetAssetDisplayName,
        ///         MigrationPlanId = testMigrationPlan.Id,
        ///         State = targetAssetState,
        ///         TargetAssetId = testTargetAsset.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetTargetAssetsResult> Invoke(GetTargetAssetsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTargetAssetsResult>("oci:CloudMigrations/getTargetAssets:getTargetAssets", args ?? new GetTargetAssetsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Target Assets in Oracle Cloud Infrastructure Cloud Migrations service.
        /// 
        /// Returns a list of target assets.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testTargetAssets = Oci.CloudMigrations.GetTargetAssets.Invoke(new()
        ///     {
        ///         DisplayName = targetAssetDisplayName,
        ///         MigrationPlanId = testMigrationPlan.Id,
        ///         State = targetAssetState,
        ///         TargetAssetId = testTargetAsset.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetTargetAssetsResult> Invoke(GetTargetAssetsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetTargetAssetsResult>("oci:CloudMigrations/getTargetAssets:getTargetAssets", args ?? new GetTargetAssetsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTargetAssetsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A filter to return only resources that match the entire given display name.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetTargetAssetsFilterArgs>? _filters;
        public List<Inputs.GetTargetAssetsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetTargetAssetsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Unique migration plan identifier
        /// </summary>
        [Input("migrationPlanId")]
        public string? MigrationPlanId { get; set; }

        /// <summary>
        /// The current state of the target asset.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        /// <summary>
        /// Unique target asset identifier
        /// </summary>
        [Input("targetAssetId")]
        public string? TargetAssetId { get; set; }

        public GetTargetAssetsArgs()
        {
        }
        public static new GetTargetAssetsArgs Empty => new GetTargetAssetsArgs();
    }

    public sealed class GetTargetAssetsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A filter to return only resources that match the entire given display name.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetTargetAssetsFilterInputArgs>? _filters;
        public InputList<Inputs.GetTargetAssetsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetTargetAssetsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Unique migration plan identifier
        /// </summary>
        [Input("migrationPlanId")]
        public Input<string>? MigrationPlanId { get; set; }

        /// <summary>
        /// The current state of the target asset.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// Unique target asset identifier
        /// </summary>
        [Input("targetAssetId")]
        public Input<string>? TargetAssetId { get; set; }

        public GetTargetAssetsInvokeArgs()
        {
        }
        public static new GetTargetAssetsInvokeArgs Empty => new GetTargetAssetsInvokeArgs();
    }


    [OutputType]
    public sealed class GetTargetAssetsResult
    {
        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetTargetAssetsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// OCID of the associated migration plan.
        /// </summary>
        public readonly string? MigrationPlanId;
        /// <summary>
        /// The current state of the target asset.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// The list of target_asset_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTargetAssetsTargetAssetCollectionResult> TargetAssetCollections;
        public readonly string? TargetAssetId;

        [OutputConstructor]
        private GetTargetAssetsResult(
            string? displayName,

            ImmutableArray<Outputs.GetTargetAssetsFilterResult> filters,

            string id,

            string? migrationPlanId,

            string? state,

            ImmutableArray<Outputs.GetTargetAssetsTargetAssetCollectionResult> targetAssetCollections,

            string? targetAssetId)
        {
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            MigrationPlanId = migrationPlanId;
            State = state;
            TargetAssetCollections = targetAssetCollections;
            TargetAssetId = targetAssetId;
        }
    }
}
