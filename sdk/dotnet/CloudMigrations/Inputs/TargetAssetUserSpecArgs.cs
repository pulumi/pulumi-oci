// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CloudMigrations.Inputs
{

    public sealed class TargetAssetUserSpecArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) Configuration options for the Oracle Cloud Agent software running on the instance.
        /// </summary>
        [Input("agentConfig")]
        public Input<Inputs.TargetAssetUserSpecAgentConfigArgs>? AgentConfig { get; set; }

        /// <summary>
        /// (Updatable) The availability domain of the instance.  Example: `Uocm:PHX-AD-1`
        /// </summary>
        [Input("availabilityDomain")]
        public Input<string>? AvailabilityDomain { get; set; }

        /// <summary>
        /// (Updatable) The OCID of the compute capacity reservation under which this instance is launched. You can opt out of all default reservations by specifying an empty string as input for this field. For more information, see [Capacity Reservations](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/reserve-capacity.htm#default).
        /// </summary>
        [Input("capacityReservationId")]
        public Input<string>? CapacityReservationId { get; set; }

        /// <summary>
        /// (Updatable) The OCID of the compartment.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// (Updatable) Contains properties for a VNIC. You use this object when creating the primary VNIC during instance launch or when creating a secondary VNIC. For more information about VNICs, see [Virtual Network Interface Cards (VNICs)](https://docs.cloud.oracle.com/iaas/Content/Network/Tasks/managingVNICs.htm).
        /// </summary>
        [Input("createVnicDetails")]
        public Input<Inputs.TargetAssetUserSpecCreateVnicDetailsArgs>? CreateVnicDetails { get; set; }

        /// <summary>
        /// (Updatable) The OCID of the dedicated VM host.
        /// </summary>
        [Input("dedicatedVmHostId")]
        public Input<string>? DedicatedVmHostId { get; set; }

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// (Updatable) A fault domain is a grouping of hardware and infrastructure within an availability domain. Each availability domain contains three fault domains. Fault domains lets you distribute your instances so that they are not on the same physical hardware within a single availability domain. A hardware failure or Compute hardware maintenance that affects one fault domain does not affect instances in other fault domains.
        /// </summary>
        [Input("faultDomain")]
        public Input<string>? FaultDomain { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. It exists only for cross-compatibility. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) Deprecated. Instead use `hostnameLabel` in [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/). If you provide both, the values must match.
        /// </summary>
        [Input("hostnameLabel")]
        public Input<string>? HostnameLabel { get; set; }

        /// <summary>
        /// (Updatable) Optional mutable instance options
        /// </summary>
        [Input("instanceOptions")]
        public Input<Inputs.TargetAssetUserSpecInstanceOptionsArgs>? InstanceOptions { get; set; }

        /// <summary>
        /// (Updatable) This is an advanced option.
        /// </summary>
        [Input("ipxeScript")]
        public Input<string>? IpxeScript { get; set; }

        /// <summary>
        /// (Updatable) Whether to enable in-transit encryption for the data volume's paravirtualized attachment. This field applies to both block volumes and boot volumes. By default, the value is false.
        /// </summary>
        [Input("isPvEncryptionInTransitEnabled")]
        public Input<bool>? IsPvEncryptionInTransitEnabled { get; set; }

        /// <summary>
        /// (Updatable) Configuration options for preemptible instances.
        /// </summary>
        [Input("preemptibleInstanceConfig")]
        public Input<Inputs.TargetAssetUserSpecPreemptibleInstanceConfigArgs>? PreemptibleInstanceConfig { get; set; }

        /// <summary>
        /// (Updatable) The shape of an instance. The shape determines the number of CPUs, amount of memory, and other resources allocated to the instance.
        /// </summary>
        [Input("shape")]
        public Input<string>? Shape { get; set; }

        /// <summary>
        /// (Updatable) The shape configuration requested for the instance.
        /// </summary>
        [Input("shapeConfig")]
        public Input<Inputs.TargetAssetUserSpecShapeConfigArgs>? ShapeConfig { get; set; }

        /// <summary>
        /// (Updatable)
        /// </summary>
        [Input("sourceDetails")]
        public Input<Inputs.TargetAssetUserSpecSourceDetailsArgs>? SourceDetails { get; set; }

        public TargetAssetUserSpecArgs()
        {
        }
        public static new TargetAssetUserSpecArgs Empty => new TargetAssetUserSpecArgs();
    }
}
