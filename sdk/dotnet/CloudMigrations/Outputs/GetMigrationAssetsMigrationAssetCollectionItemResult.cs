// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CloudMigrations.Outputs
{

    [OutputType]
    public sealed class GetMigrationAssetsMigrationAssetCollectionItemResult
    {
        /// <summary>
        /// Availability domain
        /// </summary>
        public readonly string AvailabilityDomain;
        /// <summary>
        /// Compartment Identifier
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// List of migration assets that depend on the asset.
        /// </summary>
        public readonly ImmutableArray<string> DependedOnBies;
        /// <summary>
        /// A filter to return only resources that match the entire given display name.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Asset ID generated by mirgration service. It is used in the mirgration service pipeline.
        /// </summary>
        public readonly string Id;
        public readonly string InventoryAssetId;
        /// <summary>
        /// A message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        public readonly string LifecycleDetails;
        public readonly ImmutableArray<string> MigrationAssetDependsOns;
        /// <summary>
        /// Unique migration identifier
        /// </summary>
        public readonly string MigrationId;
        /// <summary>
        /// List of notifications
        /// </summary>
        public readonly ImmutableArray<string> Notifications;
        /// <summary>
        /// The parent snapshot of the migration asset to be used by the replication task.
        /// </summary>
        public readonly string ParentSnapshot;
        /// <summary>
        /// Replication compartment identifier
        /// </summary>
        public readonly string ReplicationCompartmentId;
        /// <summary>
        /// Replication schedule identifier
        /// </summary>
        public readonly string ReplicationScheduleId;
        /// <summary>
        /// Name of snapshot bucket
        /// </summary>
        public readonly string SnapShotBucketName;
        /// <summary>
        /// Key-value pair representing disks ID mapped to the OCIDs of replicated or hydration server volume snapshots. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> Snapshots;
        /// <summary>
        /// OCID that is referenced to an asset for an inventory.
        /// </summary>
        public readonly string SourceAssetId;
        /// <summary>
        /// The current state of the migration asset.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Tenancy identifier
        /// </summary>
        public readonly string TenancyId;
        /// <summary>
        /// The time when the migration asset was created. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time when the migration asset was updated. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeUpdated;
        /// <summary>
        /// The type of asset referenced for inventory.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetMigrationAssetsMigrationAssetCollectionItemResult(
            string availabilityDomain,

            string compartmentId,

            ImmutableArray<string> dependedOnBies,

            string displayName,

            string id,

            string inventoryAssetId,

            string lifecycleDetails,

            ImmutableArray<string> migrationAssetDependsOns,

            string migrationId,

            ImmutableArray<string> notifications,

            string parentSnapshot,

            string replicationCompartmentId,

            string replicationScheduleId,

            string snapShotBucketName,

            ImmutableDictionary<string, string> snapshots,

            string sourceAssetId,

            string state,

            string tenancyId,

            string timeCreated,

            string timeUpdated,

            string type)
        {
            AvailabilityDomain = availabilityDomain;
            CompartmentId = compartmentId;
            DependedOnBies = dependedOnBies;
            DisplayName = displayName;
            Id = id;
            InventoryAssetId = inventoryAssetId;
            LifecycleDetails = lifecycleDetails;
            MigrationAssetDependsOns = migrationAssetDependsOns;
            MigrationId = migrationId;
            Notifications = notifications;
            ParentSnapshot = parentSnapshot;
            ReplicationCompartmentId = replicationCompartmentId;
            ReplicationScheduleId = replicationScheduleId;
            SnapShotBucketName = snapShotBucketName;
            Snapshots = snapshots;
            SourceAssetId = sourceAssetId;
            State = state;
            TenancyId = tenancyId;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            Type = type;
        }
    }
}
