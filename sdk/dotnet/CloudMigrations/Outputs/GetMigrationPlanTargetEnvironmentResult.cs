// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CloudMigrations.Outputs
{

    [OutputType]
    public sealed class GetMigrationPlanTargetEnvironmentResult
    {
        /// <summary>
        /// Availability Domain of the VM configuration.
        /// </summary>
        public readonly string AvailabilityDomain;
        /// <summary>
        /// OCID of the dedicated VM configuration host.
        /// </summary>
        public readonly string DedicatedVmHost;
        /// <summary>
        /// Fault domain of the VM configuration.
        /// </summary>
        public readonly string FaultDomain;
        /// <summary>
        /// Microsoft license for the VM configuration.
        /// </summary>
        public readonly string MsLicense;
        /// <summary>
        /// Preferred VM shape type provided by the customer.
        /// </summary>
        public readonly string PreferredShapeType;
        /// <summary>
        /// OCID of the VM configuration subnet.
        /// </summary>
        public readonly string Subnet;
        /// <summary>
        /// Target compartment identifier
        /// </summary>
        public readonly string TargetCompartmentId;
        /// <summary>
        /// The type of target environment.
        /// </summary>
        public readonly string TargetEnvironmentType;
        /// <summary>
        /// OCID of the VM configuration VCN.
        /// </summary>
        public readonly string Vcn;

        [OutputConstructor]
        private GetMigrationPlanTargetEnvironmentResult(
            string availabilityDomain,

            string dedicatedVmHost,

            string faultDomain,

            string msLicense,

            string preferredShapeType,

            string subnet,

            string targetCompartmentId,

            string targetEnvironmentType,

            string vcn)
        {
            AvailabilityDomain = availabilityDomain;
            DedicatedVmHost = dedicatedVmHost;
            FaultDomain = faultDomain;
            MsLicense = msLicense;
            PreferredShapeType = preferredShapeType;
            Subnet = subnet;
            TargetCompartmentId = targetCompartmentId;
            TargetEnvironmentType = targetEnvironmentType;
            Vcn = vcn;
        }
    }
}
