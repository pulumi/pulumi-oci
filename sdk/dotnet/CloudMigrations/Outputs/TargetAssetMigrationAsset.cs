// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CloudMigrations.Outputs
{

    [OutputType]
    public sealed class TargetAssetMigrationAsset
    {
        /// <summary>
        /// (Updatable) The availability domain of the instance.  Example: `Uocm:PHX-AD-1`
        /// </summary>
        public readonly string? AvailabilityDomain;
        /// <summary>
        /// (Updatable) The OCID of the compartment.
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// List of migration assets that depend on the asset.
        /// </summary>
        public readonly ImmutableArray<string> DependedOnBies;
        /// <summary>
        /// List of migration assets that depends on the asset.
        /// </summary>
        public readonly ImmutableArray<string> DependsOns;
        /// <summary>
        /// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// Asset ID generated by mirgration service. It is used in the mirgration service pipeline.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// A message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        public readonly string? LifecycleDetails;
        /// <summary>
        /// OCID of the associated migration.
        /// </summary>
        public readonly string? MigrationId;
        /// <summary>
        /// List of notifications
        /// </summary>
        public readonly ImmutableArray<string> Notifications;
        /// <summary>
        /// The parent snapshot of the migration asset to be used by the replication task.
        /// </summary>
        public readonly string? ParentSnapshot;
        /// <summary>
        /// Replication compartment identifier
        /// </summary>
        public readonly string? ReplicationCompartmentId;
        /// <summary>
        /// Replication schedule identifier
        /// </summary>
        public readonly string? ReplicationScheduleId;
        /// <summary>
        /// Name of snapshot bucket
        /// </summary>
        public readonly string? SnapShotBucketName;
        /// <summary>
        /// Key-value pair representing disks ID mapped to the OCIDs of replicated or hydration server volume snapshots. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? Snapshots;
        /// <summary>
        /// Key-value pair representing asset metadata keys and values scoped to a namespace. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? SourceAssetData;
        /// <summary>
        /// OCID that is referenced to an asset for an inventory.
        /// </summary>
        public readonly string? SourceAssetId;
        /// <summary>
        /// The current state of the target asset.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// Tenancy identifier
        /// </summary>
        public readonly string? TenancyId;
        /// <summary>
        /// The time when the target asset was created. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string? TimeCreated;
        /// <summary>
        /// The time when the target asset was updated. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string? TimeUpdated;
        /// <summary>
        /// (Updatable) The type of action to run when the instance is interrupted for eviction.
        /// </summary>
        public readonly string? Type;

        [OutputConstructor]
        private TargetAssetMigrationAsset(
            string? availabilityDomain,

            string? compartmentId,

            ImmutableArray<string> dependedOnBies,

            ImmutableArray<string> dependsOns,

            string? displayName,

            string? id,

            string? lifecycleDetails,

            string? migrationId,

            ImmutableArray<string> notifications,

            string? parentSnapshot,

            string? replicationCompartmentId,

            string? replicationScheduleId,

            string? snapShotBucketName,

            ImmutableDictionary<string, object>? snapshots,

            ImmutableDictionary<string, object>? sourceAssetData,

            string? sourceAssetId,

            string? state,

            string? tenancyId,

            string? timeCreated,

            string? timeUpdated,

            string? type)
        {
            AvailabilityDomain = availabilityDomain;
            CompartmentId = compartmentId;
            DependedOnBies = dependedOnBies;
            DependsOns = dependsOns;
            DisplayName = displayName;
            Id = id;
            LifecycleDetails = lifecycleDetails;
            MigrationId = migrationId;
            Notifications = notifications;
            ParentSnapshot = parentSnapshot;
            ReplicationCompartmentId = replicationCompartmentId;
            ReplicationScheduleId = replicationScheduleId;
            SnapShotBucketName = snapShotBucketName;
            Snapshots = snapshots;
            SourceAssetData = sourceAssetData;
            SourceAssetId = sourceAssetId;
            State = state;
            TenancyId = tenancyId;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            Type = type;
        }
    }
}
