// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CloudMigrations.Outputs
{

    [OutputType]
    public sealed class TargetAssetTestSpec
    {
        /// <summary>
        /// (Updatable) Configuration options for the Oracle Cloud Agent software running on the instance.
        /// </summary>
        public readonly ImmutableArray<Outputs.TargetAssetTestSpecAgentConfig> AgentConfigs;
        /// <summary>
        /// (Updatable) The availability domain of the instance.  Example: `Uocm:PHX-AD-1`
        /// </summary>
        public readonly string? AvailabilityDomain;
        /// <summary>
        /// (Updatable) The OCID of the compute capacity reservation under which this instance is launched. You can opt out of all default reservations by specifying an empty string as input for this field. For more information, see [Capacity Reservations](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/reserve-capacity.htm#default).
        /// </summary>
        public readonly string? CapacityReservationId;
        /// <summary>
        /// (Updatable) The OCID of the compartment.
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// (Updatable) Contains properties for a VNIC. You use this object when creating the primary VNIC during instance launch or when creating a secondary VNIC. For more information about VNICs, see [Virtual Network Interface Cards (VNICs)](https://docs.cloud.oracle.com/iaas/Content/Network/Tasks/managingVNICs.htm).
        /// </summary>
        public readonly ImmutableArray<Outputs.TargetAssetTestSpecCreateVnicDetail> CreateVnicDetails;
        /// <summary>
        /// (Updatable) The OCID of the dedicated VM host.
        /// </summary>
        public readonly string? DedicatedVmHostId;
        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? DefinedTags;
        /// <summary>
        /// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// (Updatable) A fault domain is a grouping of hardware and infrastructure within an availability domain. Each availability domain contains three fault domains. Fault domains lets you distribute your instances so that they are not on the same physical hardware within a single availability domain. A hardware failure or Compute hardware maintenance that affects one fault domain does not affect instances in other fault domains.
        /// </summary>
        public readonly string? FaultDomain;
        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. It exists only for cross-compatibility. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? FreeformTags;
        /// <summary>
        /// (Updatable) Deprecated. Instead use `hostnameLabel` in [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/). If you provide both, the values must match.
        /// </summary>
        public readonly string? HostnameLabel;
        /// <summary>
        /// (Updatable) Optional mutable instance options
        /// </summary>
        public readonly ImmutableArray<Outputs.TargetAssetTestSpecInstanceOption> InstanceOptions;
        /// <summary>
        /// (Updatable) This is an advanced option.
        /// </summary>
        public readonly string? IpxeScript;
        /// <summary>
        /// (Updatable) Whether to enable in-transit encryption for the data volume's paravirtualized attachment. This field applies to both block volumes and boot volumes. By default, the value is false.
        /// </summary>
        public readonly bool? IsPvEncryptionInTransitEnabled;
        /// <summary>
        /// (Updatable) Configuration options for preemptible instances.
        /// </summary>
        public readonly ImmutableArray<Outputs.TargetAssetTestSpecPreemptibleInstanceConfig> PreemptibleInstanceConfigs;
        /// <summary>
        /// (Updatable) The shape of an instance. The shape determines the number of CPUs, amount of memory, and other resources allocated to the instance.
        /// </summary>
        public readonly string? Shape;
        /// <summary>
        /// (Updatable) The shape configuration requested for the instance.
        /// </summary>
        public readonly ImmutableArray<Outputs.TargetAssetTestSpecShapeConfig> ShapeConfigs;
        /// <summary>
        /// (Updatable)
        /// </summary>
        public readonly ImmutableArray<Outputs.TargetAssetTestSpecSourceDetail> SourceDetails;

        [OutputConstructor]
        private TargetAssetTestSpec(
            ImmutableArray<Outputs.TargetAssetTestSpecAgentConfig> agentConfigs,

            string? availabilityDomain,

            string? capacityReservationId,

            string? compartmentId,

            ImmutableArray<Outputs.TargetAssetTestSpecCreateVnicDetail> createVnicDetails,

            string? dedicatedVmHostId,

            ImmutableDictionary<string, object>? definedTags,

            string? displayName,

            string? faultDomain,

            ImmutableDictionary<string, object>? freeformTags,

            string? hostnameLabel,

            ImmutableArray<Outputs.TargetAssetTestSpecInstanceOption> instanceOptions,

            string? ipxeScript,

            bool? isPvEncryptionInTransitEnabled,

            ImmutableArray<Outputs.TargetAssetTestSpecPreemptibleInstanceConfig> preemptibleInstanceConfigs,

            string? shape,

            ImmutableArray<Outputs.TargetAssetTestSpecShapeConfig> shapeConfigs,

            ImmutableArray<Outputs.TargetAssetTestSpecSourceDetail> sourceDetails)
        {
            AgentConfigs = agentConfigs;
            AvailabilityDomain = availabilityDomain;
            CapacityReservationId = capacityReservationId;
            CompartmentId = compartmentId;
            CreateVnicDetails = createVnicDetails;
            DedicatedVmHostId = dedicatedVmHostId;
            DefinedTags = definedTags;
            DisplayName = displayName;
            FaultDomain = faultDomain;
            FreeformTags = freeformTags;
            HostnameLabel = hostnameLabel;
            InstanceOptions = instanceOptions;
            IpxeScript = ipxeScript;
            IsPvEncryptionInTransitEnabled = isPvEncryptionInTransitEnabled;
            PreemptibleInstanceConfigs = preemptibleInstanceConfigs;
            Shape = shape;
            ShapeConfigs = shapeConfigs;
            SourceDetails = sourceDetails;
        }
    }
}
