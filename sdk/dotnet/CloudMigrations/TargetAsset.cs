// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.CloudMigrations
{
    /// <summary>
    /// This resource provides the Target Asset resource in Oracle Cloud Infrastructure Cloud Migrations service.
    /// 
    /// Creates a target asset.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testTargetAsset = new Oci.CloudMigrations.TargetAsset("test_target_asset", new()
    ///     {
    ///         IsExcludedFromExecution = targetAssetIsExcludedFromExecution,
    ///         MigrationPlanId = testMigrationPlan.Id,
    ///         PreferredShapeType = targetAssetPreferredShapeType,
    ///         Type = targetAssetType,
    ///         UserSpec = new Oci.CloudMigrations.Inputs.TargetAssetUserSpecArgs
    ///         {
    ///             AgentConfig = new Oci.CloudMigrations.Inputs.TargetAssetUserSpecAgentConfigArgs
    ///             {
    ///                 AreAllPluginsDisabled = targetAssetUserSpecAgentConfigAreAllPluginsDisabled,
    ///                 IsManagementDisabled = targetAssetUserSpecAgentConfigIsManagementDisabled,
    ///                 IsMonitoringDisabled = targetAssetUserSpecAgentConfigIsMonitoringDisabled,
    ///                 PluginsConfigs = new[]
    ///                 {
    ///                     new Oci.CloudMigrations.Inputs.TargetAssetUserSpecAgentConfigPluginsConfigArgs
    ///                     {
    ///                         DesiredState = targetAssetUserSpecAgentConfigPluginsConfigDesiredState,
    ///                         Name = targetAssetUserSpecAgentConfigPluginsConfigName,
    ///                     },
    ///                 },
    ///             },
    ///             AvailabilityDomain = targetAssetUserSpecAvailabilityDomain,
    ///             CapacityReservationId = testCapacityReservation.Id,
    ///             CompartmentId = compartmentId,
    ///             CreateVnicDetails = new Oci.CloudMigrations.Inputs.TargetAssetUserSpecCreateVnicDetailsArgs
    ///             {
    ///                 AssignPrivateDnsRecord = targetAssetUserSpecCreateVnicDetailsAssignPrivateDnsRecord,
    ///                 AssignPublicIp = targetAssetUserSpecCreateVnicDetailsAssignPublicIp,
    ///                 DefinedTags = 
    ///                 {
    ///                     { "foo-namespace.bar-key", "value" },
    ///                 },
    ///                 DisplayName = targetAssetUserSpecCreateVnicDetailsDisplayName,
    ///                 FreeformTags = 
    ///                 {
    ///                     { "bar-key", "value" },
    ///                 },
    ///                 HostnameLabel = targetAssetUserSpecCreateVnicDetailsHostnameLabel,
    ///                 NsgIds = targetAssetUserSpecCreateVnicDetailsNsgIds,
    ///                 PrivateIp = targetAssetUserSpecCreateVnicDetailsPrivateIp,
    ///                 SkipSourceDestCheck = targetAssetUserSpecCreateVnicDetailsSkipSourceDestCheck,
    ///                 SubnetId = testSubnet.Id,
    ///                 VlanId = testVlan.Id,
    ///             },
    ///             DedicatedVmHostId = testDedicatedVmHost.Id,
    ///             DefinedTags = 
    ///             {
    ///                 { "foo-namespace.bar-key", "value" },
    ///             },
    ///             DisplayName = targetAssetUserSpecDisplayName,
    ///             FaultDomain = targetAssetUserSpecFaultDomain,
    ///             FreeformTags = 
    ///             {
    ///                 { "bar-key", "value" },
    ///             },
    ///             HostnameLabel = targetAssetUserSpecHostnameLabel,
    ///             InstanceOptions = new Oci.CloudMigrations.Inputs.TargetAssetUserSpecInstanceOptionsArgs
    ///             {
    ///                 AreLegacyImdsEndpointsDisabled = targetAssetUserSpecInstanceOptionsAreLegacyImdsEndpointsDisabled,
    ///             },
    ///             IpxeScript = targetAssetUserSpecIpxeScript,
    ///             IsPvEncryptionInTransitEnabled = targetAssetUserSpecIsPvEncryptionInTransitEnabled,
    ///             PreemptibleInstanceConfig = new Oci.CloudMigrations.Inputs.TargetAssetUserSpecPreemptibleInstanceConfigArgs
    ///             {
    ///                 PreemptionAction = new Oci.CloudMigrations.Inputs.TargetAssetUserSpecPreemptibleInstanceConfigPreemptionActionArgs
    ///                 {
    ///                     Type = targetAssetUserSpecPreemptibleInstanceConfigPreemptionActionType,
    ///                     PreserveBootVolume = targetAssetUserSpecPreemptibleInstanceConfigPreemptionActionPreserveBootVolume,
    ///                 },
    ///             },
    ///             Shape = targetAssetUserSpecShape,
    ///             ShapeConfig = new Oci.CloudMigrations.Inputs.TargetAssetUserSpecShapeConfigArgs
    ///             {
    ///                 BaselineOcpuUtilization = targetAssetUserSpecShapeConfigBaselineOcpuUtilization,
    ///                 MemoryInGbs = targetAssetUserSpecShapeConfigMemoryInGbs,
    ///                 Ocpus = targetAssetUserSpecShapeConfigOcpus,
    ///             },
    ///             SourceDetails = new Oci.CloudMigrations.Inputs.TargetAssetUserSpecSourceDetailsArgs
    ///             {
    ///                 SourceType = targetAssetUserSpecSourceDetailsSourceType,
    ///                 BootVolumeId = testBootVolume.Id,
    ///                 BootVolumeSizeInGbs = targetAssetUserSpecSourceDetailsBootVolumeSizeInGbs,
    ///                 BootVolumeVpusPerGb = targetAssetUserSpecSourceDetailsBootVolumeVpusPerGb,
    ///                 ImageId = testImage.Id,
    ///                 KmsKeyId = testKey.Id,
    ///             },
    ///         },
    ///         BlockVolumesPerformance = targetAssetBlockVolumesPerformance,
    ///         MsLicense = targetAssetMsLicense,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// TargetAssets can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:CloudMigrations/targetAsset:TargetAsset test_target_asset "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:CloudMigrations/targetAsset:TargetAsset")]
    public partial class TargetAsset : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) Performance of the block volumes.
        /// </summary>
        [Output("blockVolumesPerformance")]
        public Output<int> BlockVolumesPerformance { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The OCID of the compartment.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// Messages about the compatibility issues.
        /// </summary>
        [Output("compatibilityMessages")]
        public Output<ImmutableArray<Outputs.TargetAssetCompatibilityMessage>> CompatibilityMessages { get; private set; } = null!;

        /// <summary>
        /// Created resource identifier
        /// </summary>
        [Output("createdResourceId")]
        public Output<string> CreatedResourceId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Cost estimation description
        /// </summary>
        [Output("estimatedCosts")]
        public Output<ImmutableArray<Outputs.TargetAssetEstimatedCost>> EstimatedCosts { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A boolean indicating whether the asset should be migrated.
        /// </summary>
        [Output("isExcludedFromExecution")]
        public Output<bool> IsExcludedFromExecution { get; private set; } = null!;

        /// <summary>
        /// A message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        [Output("lifecycleDetails")]
        public Output<string> LifecycleDetails { get; private set; } = null!;

        /// <summary>
        /// Description of the migration asset.
        /// </summary>
        [Output("migrationAssets")]
        public Output<ImmutableArray<Outputs.TargetAssetMigrationAsset>> MigrationAssets { get; private set; } = null!;

        /// <summary>
        /// OCID of the associated migration plan.
        /// </summary>
        [Output("migrationPlanId")]
        public Output<string> MigrationPlanId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Microsoft license for the VM configuration.
        /// </summary>
        [Output("msLicense")]
        public Output<string> MsLicense { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Preferred VM shape type that you provide.
        /// </summary>
        [Output("preferredShapeType")]
        public Output<string> PreferredShapeType { get; private set; } = null!;

        /// <summary>
        /// Instance launch details. Use the `sourceDetails` parameter to specify whether a boot volume or an image should be used to launch a new instance.
        /// </summary>
        [Output("recommendedSpecs")]
        public Output<ImmutableArray<Outputs.TargetAssetRecommendedSpec>> RecommendedSpecs { get; private set; } = null!;

        /// <summary>
        /// The current state of the target asset.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// Instance launch details. Use the `sourceDetails` parameter to specify whether a boot volume or an image should be used to launch a new instance.
        /// </summary>
        [Output("testSpecs")]
        public Output<ImmutableArray<Outputs.TargetAssetTestSpec>> TestSpecs { get; private set; } = null!;

        /// <summary>
        /// The time when the assessment was done. An RFC3339 formatted datetime string.
        /// </summary>
        [Output("timeAssessed")]
        public Output<string> TimeAssessed { get; private set; } = null!;

        /// <summary>
        /// The time when the target asset was created. An RFC3339 formatted datetime string.
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The time when the target asset was updated. An RFC3339 formatted datetime string.
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The type of action to run when the instance is interrupted for eviction.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Instance launch details. Use the `sourceDetails` parameter to specify whether a boot volume or an image should be used to launch a new instance.
        /// </summary>
        [Output("userSpec")]
        public Output<Outputs.TargetAssetUserSpec> UserSpec { get; private set; } = null!;


        /// <summary>
        /// Create a TargetAsset resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TargetAsset(string name, TargetAssetArgs args, CustomResourceOptions? options = null)
            : base("oci:CloudMigrations/targetAsset:TargetAsset", name, args ?? new TargetAssetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TargetAsset(string name, Input<string> id, TargetAssetState? state = null, CustomResourceOptions? options = null)
            : base("oci:CloudMigrations/targetAsset:TargetAsset", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TargetAsset resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TargetAsset Get(string name, Input<string> id, TargetAssetState? state = null, CustomResourceOptions? options = null)
        {
            return new TargetAsset(name, id, state, options);
        }
    }

    public sealed class TargetAssetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) Performance of the block volumes.
        /// </summary>
        [Input("blockVolumesPerformance")]
        public Input<int>? BlockVolumesPerformance { get; set; }

        /// <summary>
        /// (Updatable) A boolean indicating whether the asset should be migrated.
        /// </summary>
        [Input("isExcludedFromExecution", required: true)]
        public Input<bool> IsExcludedFromExecution { get; set; } = null!;

        /// <summary>
        /// OCID of the associated migration plan.
        /// </summary>
        [Input("migrationPlanId", required: true)]
        public Input<string> MigrationPlanId { get; set; } = null!;

        /// <summary>
        /// (Updatable) Microsoft license for the VM configuration.
        /// </summary>
        [Input("msLicense")]
        public Input<string>? MsLicense { get; set; }

        /// <summary>
        /// (Updatable) Preferred VM shape type that you provide.
        /// </summary>
        [Input("preferredShapeType", required: true)]
        public Input<string> PreferredShapeType { get; set; } = null!;

        /// <summary>
        /// (Updatable) The type of action to run when the instance is interrupted for eviction.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        /// <summary>
        /// (Updatable) Instance launch details. Use the `sourceDetails` parameter to specify whether a boot volume or an image should be used to launch a new instance.
        /// </summary>
        [Input("userSpec", required: true)]
        public Input<Inputs.TargetAssetUserSpecArgs> UserSpec { get; set; } = null!;

        public TargetAssetArgs()
        {
        }
        public static new TargetAssetArgs Empty => new TargetAssetArgs();
    }

    public sealed class TargetAssetState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) Performance of the block volumes.
        /// </summary>
        [Input("blockVolumesPerformance")]
        public Input<int>? BlockVolumesPerformance { get; set; }

        /// <summary>
        /// (Updatable) The OCID of the compartment.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("compatibilityMessages")]
        private InputList<Inputs.TargetAssetCompatibilityMessageGetArgs>? _compatibilityMessages;

        /// <summary>
        /// Messages about the compatibility issues.
        /// </summary>
        public InputList<Inputs.TargetAssetCompatibilityMessageGetArgs> CompatibilityMessages
        {
            get => _compatibilityMessages ?? (_compatibilityMessages = new InputList<Inputs.TargetAssetCompatibilityMessageGetArgs>());
            set => _compatibilityMessages = value;
        }

        /// <summary>
        /// Created resource identifier
        /// </summary>
        [Input("createdResourceId")]
        public Input<string>? CreatedResourceId { get; set; }

        /// <summary>
        /// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("estimatedCosts")]
        private InputList<Inputs.TargetAssetEstimatedCostGetArgs>? _estimatedCosts;

        /// <summary>
        /// Cost estimation description
        /// </summary>
        public InputList<Inputs.TargetAssetEstimatedCostGetArgs> EstimatedCosts
        {
            get => _estimatedCosts ?? (_estimatedCosts = new InputList<Inputs.TargetAssetEstimatedCostGetArgs>());
            set => _estimatedCosts = value;
        }

        /// <summary>
        /// (Updatable) A boolean indicating whether the asset should be migrated.
        /// </summary>
        [Input("isExcludedFromExecution")]
        public Input<bool>? IsExcludedFromExecution { get; set; }

        /// <summary>
        /// A message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        [Input("lifecycleDetails")]
        public Input<string>? LifecycleDetails { get; set; }

        [Input("migrationAssets")]
        private InputList<Inputs.TargetAssetMigrationAssetGetArgs>? _migrationAssets;

        /// <summary>
        /// Description of the migration asset.
        /// </summary>
        public InputList<Inputs.TargetAssetMigrationAssetGetArgs> MigrationAssets
        {
            get => _migrationAssets ?? (_migrationAssets = new InputList<Inputs.TargetAssetMigrationAssetGetArgs>());
            set => _migrationAssets = value;
        }

        /// <summary>
        /// OCID of the associated migration plan.
        /// </summary>
        [Input("migrationPlanId")]
        public Input<string>? MigrationPlanId { get; set; }

        /// <summary>
        /// (Updatable) Microsoft license for the VM configuration.
        /// </summary>
        [Input("msLicense")]
        public Input<string>? MsLicense { get; set; }

        /// <summary>
        /// (Updatable) Preferred VM shape type that you provide.
        /// </summary>
        [Input("preferredShapeType")]
        public Input<string>? PreferredShapeType { get; set; }

        [Input("recommendedSpecs")]
        private InputList<Inputs.TargetAssetRecommendedSpecGetArgs>? _recommendedSpecs;

        /// <summary>
        /// Instance launch details. Use the `sourceDetails` parameter to specify whether a boot volume or an image should be used to launch a new instance.
        /// </summary>
        public InputList<Inputs.TargetAssetRecommendedSpecGetArgs> RecommendedSpecs
        {
            get => _recommendedSpecs ?? (_recommendedSpecs = new InputList<Inputs.TargetAssetRecommendedSpecGetArgs>());
            set => _recommendedSpecs = value;
        }

        /// <summary>
        /// The current state of the target asset.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("testSpecs")]
        private InputList<Inputs.TargetAssetTestSpecGetArgs>? _testSpecs;

        /// <summary>
        /// Instance launch details. Use the `sourceDetails` parameter to specify whether a boot volume or an image should be used to launch a new instance.
        /// </summary>
        public InputList<Inputs.TargetAssetTestSpecGetArgs> TestSpecs
        {
            get => _testSpecs ?? (_testSpecs = new InputList<Inputs.TargetAssetTestSpecGetArgs>());
            set => _testSpecs = value;
        }

        /// <summary>
        /// The time when the assessment was done. An RFC3339 formatted datetime string.
        /// </summary>
        [Input("timeAssessed")]
        public Input<string>? TimeAssessed { get; set; }

        /// <summary>
        /// The time when the target asset was created. An RFC3339 formatted datetime string.
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The time when the target asset was updated. An RFC3339 formatted datetime string.
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        /// <summary>
        /// (Updatable) The type of action to run when the instance is interrupted for eviction.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// (Updatable) Instance launch details. Use the `sourceDetails` parameter to specify whether a boot volume or an image should be used to launch a new instance.
        /// </summary>
        [Input("userSpec")]
        public Input<Inputs.TargetAssetUserSpecGetArgs>? UserSpec { get; set; }

        public TargetAssetState()
        {
        }
        public static new TargetAssetState Empty => new TargetAssetState();
    }
}
