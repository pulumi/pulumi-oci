// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ComputeCloud.Outputs
{

    [OutputType]
    public sealed class GetAtCustomerCccUpgradeSchedulesCccUpgradeScheduleCollectionItemEventResult
    {
        /// <summary>
        /// A description of the Compute Cloud@Customer upgrade schedule time block.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Generated name associated with the event.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The duration of this block of time. The duration must be specified and be of the ISO-8601 format for durations.
        /// </summary>
        public readonly string? ScheduleEventDuration;
        /// <summary>
        /// Frequency of recurrence of schedule block. When this field is not included, the event is assumed to be a one time occurrence. The frequency field is strictly parsed and must conform to RFC-5545 formatting for recurrences.
        /// </summary>
        public readonly string? ScheduleEventRecurrences;
        /// <summary>
        /// The date and time when the Compute Cloud@Customer upgrade schedule event starts, inclusive. An RFC3339 formatted UTC datetime string. For an event with recurrences, this is the date that a recurrence can start being applied.
        /// </summary>
        public readonly string? TimeStart;

        [OutputConstructor]
        private GetAtCustomerCccUpgradeSchedulesCccUpgradeScheduleCollectionItemEventResult(
            string? description,

            string? name,

            string? scheduleEventDuration,

            string? scheduleEventRecurrences,

            string? timeStart)
        {
            Description = description;
            Name = name;
            ScheduleEventDuration = scheduleEventDuration;
            ScheduleEventRecurrences = scheduleEventRecurrences;
            TimeStart = timeStart;
        }
    }
}
