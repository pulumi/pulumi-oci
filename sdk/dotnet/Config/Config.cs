// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Immutable;

namespace Pulumi.Oci
{
    public static class Config
    {
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "IDE1006", Justification = 
        "Double underscore prefix used to avoid conflicts with variable names.")]
        private sealed class __Value<T>
        {
            private readonly Func<T> _getter;
            private T _value = default!;
            private bool _set;

            public __Value(Func<T> getter)
            {
                _getter = getter;
            }

            public T Get() => _set ? _value : _getter();

            public void Set(T value)
            {
                _value = value;
                _set = true;
            }
        }

        private static readonly global::Pulumi.Config __config = new global::Pulumi.Config("oci");

        private static readonly __Value<string?> _auth = new __Value<string?>(() => __config.Get("auth"));
        /// <summary>
        /// (Optional) The type of auth to use. Options are 'ApiKey', 'SecurityToken', 'InstancePrincipal', 'ResourcePrincipal' and
        /// 'OKEWorkloadIdentity'. By default, 'ApiKey' will be used.
        /// </summary>
        public static string? Auth
        {
            get => _auth.Get();
            set => _auth.Set(value);
        }

        private static readonly __Value<string?> _configFileProfile = new __Value<string?>(() => __config.Get("configFileProfile"));
        /// <summary>
        /// (Optional) The profile name to be used from config file, if not set it will be DEFAULT.
        /// </summary>
        public static string? ConfigFileProfile
        {
            get => _configFileProfile.Get();
            set => _configFileProfile.Set(value);
        }

        private static readonly __Value<bool?> _disableAutoRetries = new __Value<bool?>(() => __config.GetBoolean("disableAutoRetries"));
        /// <summary>
        /// (Optional) Disable automatic retries for retriable errors. Automatic retries were introduced to solve some eventual
        /// consistency problems but it also introduced performance issues on destroy operations.
        /// </summary>
        public static bool? DisableAutoRetries
        {
            get => _disableAutoRetries.Get();
            set => _disableAutoRetries.Set(value);
        }

        private static readonly __Value<string?> _fingerprint = new __Value<string?>(() => __config.Get("fingerprint"));
        /// <summary>
        /// (Optional) The fingerprint for the user's RSA key. This can be found in user settings in the Oracle Cloud Infrastructure
        /// console. Required if auth is set to 'ApiKey', ignored otherwise.
        /// </summary>
        public static string? Fingerprint
        {
            get => _fingerprint.Get();
            set => _fingerprint.Set(value);
        }

        private static readonly __Value<ImmutableArray<string>> _ignoreDefinedTags = new __Value<ImmutableArray<string>>(() => __config.GetObject<ImmutableArray<string>>("ignoreDefinedTags"));
        public static ImmutableArray<string> IgnoreDefinedTags
        {
            get => _ignoreDefinedTags.Get();
            set => _ignoreDefinedTags.Set(value);
        }

        private static readonly __Value<string?> _privateKey = new __Value<string?>(() => __config.Get("privateKey"));
        /// <summary>
        /// (Optional) A PEM formatted RSA private key for the user. A private_key or a private_key_path must be provided if auth is
        /// set to 'ApiKey', ignored otherwise.
        /// </summary>
        public static string? PrivateKey
        {
            get => _privateKey.Get();
            set => _privateKey.Set(value);
        }

        private static readonly __Value<string?> _privateKeyPassword = new __Value<string?>(() => __config.Get("privateKeyPassword"));
        /// <summary>
        /// (Optional) The password used to secure the private key.
        /// </summary>
        public static string? PrivateKeyPassword
        {
            get => _privateKeyPassword.Get();
            set => _privateKeyPassword.Set(value);
        }

        private static readonly __Value<string?> _privateKeyPath = new __Value<string?>(() => __config.Get("privateKeyPath"));
        /// <summary>
        /// (Optional) The path to the user's PEM formatted private key. A private_key or a private_key_path must be provided if
        /// auth is set to 'ApiKey', ignored otherwise.
        /// </summary>
        public static string? PrivateKeyPath
        {
            get => _privateKeyPath.Get();
            set => _privateKeyPath.Set(value);
        }

        private static readonly __Value<bool?> _realmSpecificServiceEndpointTemplateEnabled = new __Value<bool?>(() => __config.GetBoolean("realmSpecificServiceEndpointTemplateEnabled"));
        /// <summary>
        /// (Optional) flags to enable realm specific service endpoint.
        /// </summary>
        public static bool? RealmSpecificServiceEndpointTemplateEnabled
        {
            get => _realmSpecificServiceEndpointTemplateEnabled.Get();
            set => _realmSpecificServiceEndpointTemplateEnabled.Set(value);
        }

        private static readonly __Value<string?> _region = new __Value<string?>(() => __config.Get("region"));
        /// <summary>
        /// (Required) The region for API connections (e.g. us-ashburn-1).
        /// </summary>
        public static string? Region
        {
            get => _region.Get();
            set => _region.Set(value);
        }

        private static readonly __Value<int?> _retryDurationSeconds = new __Value<int?>(() => __config.GetInt32("retryDurationSeconds"));
        /// <summary>
        /// (Optional) The minimum duration (in seconds) to retry a resource operation in response to an error. The actual retry
        /// duration may be longer due to jittering of retry operations. This value is ignored if the `disable_auto_retries` field
        /// is set to true.
        /// </summary>
        public static int? RetryDurationSeconds
        {
            get => _retryDurationSeconds.Get();
            set => _retryDurationSeconds.Set(value);
        }

        private static readonly __Value<string?> _tenancyOcid = new __Value<string?>(() => __config.Get("tenancyOcid"));
        /// <summary>
        /// (Optional) The tenancy OCID for a user. The tenancy OCID can be found at the bottom of user settings in the Oracle Cloud
        /// Infrastructure console. Required if auth is set to 'ApiKey', ignored otherwise.
        /// </summary>
        public static string? TenancyOcid
        {
            get => _tenancyOcid.Get();
            set => _tenancyOcid.Set(value);
        }

        private static readonly __Value<string?> _userOcid = new __Value<string?>(() => __config.Get("userOcid"));
        /// <summary>
        /// (Optional) The user OCID. This can be found in user settings in the Oracle Cloud Infrastructure console. Required if
        /// auth is set to 'ApiKey', ignored otherwise.
        /// </summary>
        public static string? UserOcid
        {
            get => _userOcid.Get();
            set => _userOcid.Set(value);
        }

    }
}
