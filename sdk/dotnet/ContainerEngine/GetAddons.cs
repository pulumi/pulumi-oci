// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ContainerEngine
{
    public static class GetAddons
    {
        /// <summary>
        /// This data source provides the list of Addons in Oracle Cloud Infrastructure Container Engine service.
        /// 
        /// List addon for a provisioned cluster.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAddons = Oci.ContainerEngine.GetAddons.Invoke(new()
        ///     {
        ///         ClusterId = testCluster.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetAddonsResult> InvokeAsync(GetAddonsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAddonsResult>("oci:ContainerEngine/getAddons:getAddons", args ?? new GetAddonsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Addons in Oracle Cloud Infrastructure Container Engine service.
        /// 
        /// List addon for a provisioned cluster.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAddons = Oci.ContainerEngine.GetAddons.Invoke(new()
        ///     {
        ///         ClusterId = testCluster.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAddonsResult> Invoke(GetAddonsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAddonsResult>("oci:ContainerEngine/getAddons:getAddons", args ?? new GetAddonsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAddonsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the cluster.
        /// </summary>
        [Input("clusterId", required: true)]
        public string ClusterId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetAddonsFilterArgs>? _filters;
        public List<Inputs.GetAddonsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetAddonsFilterArgs>());
            set => _filters = value;
        }

        public GetAddonsArgs()
        {
        }
        public static new GetAddonsArgs Empty => new GetAddonsArgs();
    }

    public sealed class GetAddonsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the cluster.
        /// </summary>
        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetAddonsFilterInputArgs>? _filters;
        public InputList<Inputs.GetAddonsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetAddonsFilterInputArgs>());
            set => _filters = value;
        }

        public GetAddonsInvokeArgs()
        {
        }
        public static new GetAddonsInvokeArgs Empty => new GetAddonsInvokeArgs();
    }


    [OutputType]
    public sealed class GetAddonsResult
    {
        /// <summary>
        /// The list of addons.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAddonsAddonResult> Addons;
        public readonly string ClusterId;
        public readonly ImmutableArray<Outputs.GetAddonsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetAddonsResult(
            ImmutableArray<Outputs.GetAddonsAddonResult> addons,

            string clusterId,

            ImmutableArray<Outputs.GetAddonsFilterResult> filters,

            string id)
        {
            Addons = addons;
            ClusterId = clusterId;
            Filters = filters;
            Id = id;
        }
    }
}
