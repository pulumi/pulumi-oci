// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ContainerEngine
{
    public static class GetCluster
    {
        /// <summary>
        /// This data source provides details about a specific Cluster resource in Oracle Cloud Infrastructure Container Engine service.
        /// 
        /// Get the details of a cluster.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testCluster = Oci.ContainerEngine.GetCluster.Invoke(new()
        ///     {
        ///         ClusterId = testClusterOciContainerengineCluster.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetClusterResult> InvokeAsync(GetClusterArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetClusterResult>("oci:ContainerEngine/getCluster:getCluster", args ?? new GetClusterArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Cluster resource in Oracle Cloud Infrastructure Container Engine service.
        /// 
        /// Get the details of a cluster.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testCluster = Oci.ContainerEngine.GetCluster.Invoke(new()
        ///     {
        ///         ClusterId = testClusterOciContainerengineCluster.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetClusterResult> Invoke(GetClusterInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetClusterResult>("oci:ContainerEngine/getCluster:getCluster", args ?? new GetClusterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetClusterArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the cluster.
        /// </summary>
        [Input("clusterId", required: true)]
        public string ClusterId { get; set; } = null!;

        public GetClusterArgs()
        {
        }
        public static new GetClusterArgs Empty => new GetClusterArgs();
    }

    public sealed class GetClusterInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the cluster.
        /// </summary>
        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        public GetClusterInvokeArgs()
        {
        }
        public static new GetClusterInvokeArgs Empty => new GetClusterInvokeArgs();
    }


    [OutputType]
    public sealed class GetClusterResult
    {
        /// <summary>
        /// Available Kubernetes versions to which the clusters masters may be upgraded.
        /// </summary>
        public readonly ImmutableArray<string> AvailableKubernetesUpgrades;
        public readonly string ClusterId;
        /// <summary>
        /// Available CNIs and network options for existing and new node pools of the cluster
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterClusterPodNetworkOptionResult> ClusterPodNetworkOptions;
        /// <summary>
        /// The OCID of the compartment in which the cluster exists.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// The network configuration for access to the Cluster control plane.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterEndpointConfigResult> EndpointConfigs;
        /// <summary>
        /// Endpoints served up by the cluster masters.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterEndpointResult> Endpoints;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The OCID of the cluster.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The image verification policy for signature validation.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterImagePolicyConfigResult> ImagePolicyConfigs;
        /// <summary>
        /// The OCID of the KMS key to be used as the master encryption key for Kubernetes secret encryption.
        /// </summary>
        public readonly string KmsKeyId;
        /// <summary>
        /// The version of Kubernetes running on the cluster masters.
        /// </summary>
        public readonly string KubernetesVersion;
        /// <summary>
        /// Details about the state of the cluster masters.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// Metadata about the cluster.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterMetadataResult> Metadatas;
        /// <summary>
        /// The name of the cluster.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Optional attributes for the cluster.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterOptionResult> Options;
        /// <summary>
        /// The state of the cluster masters.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Type of cluster. Values can be BASIC_CLUSTER or ENHANCED_CLUSTER. For more information, see [Cluster Types](https://docs.cloud.oracle.com/iaas/Content/ContEng/Tasks/contengcomparingenhancedwithbasicclusters_topic.htm)
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The OCID of the virtual cloud network (VCN) in which the cluster exists.
        /// </summary>
        public readonly string VcnId;

        [OutputConstructor]
        private GetClusterResult(
            ImmutableArray<string> availableKubernetesUpgrades,

            string clusterId,

            ImmutableArray<Outputs.GetClusterClusterPodNetworkOptionResult> clusterPodNetworkOptions,

            string compartmentId,

            ImmutableDictionary<string, string> definedTags,

            ImmutableArray<Outputs.GetClusterEndpointConfigResult> endpointConfigs,

            ImmutableArray<Outputs.GetClusterEndpointResult> endpoints,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            ImmutableArray<Outputs.GetClusterImagePolicyConfigResult> imagePolicyConfigs,

            string kmsKeyId,

            string kubernetesVersion,

            string lifecycleDetails,

            ImmutableArray<Outputs.GetClusterMetadataResult> metadatas,

            string name,

            ImmutableArray<Outputs.GetClusterOptionResult> options,

            string state,

            string type,

            string vcnId)
        {
            AvailableKubernetesUpgrades = availableKubernetesUpgrades;
            ClusterId = clusterId;
            ClusterPodNetworkOptions = clusterPodNetworkOptions;
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            EndpointConfigs = endpointConfigs;
            Endpoints = endpoints;
            FreeformTags = freeformTags;
            Id = id;
            ImagePolicyConfigs = imagePolicyConfigs;
            KmsKeyId = kmsKeyId;
            KubernetesVersion = kubernetesVersion;
            LifecycleDetails = lifecycleDetails;
            Metadatas = metadatas;
            Name = name;
            Options = options;
            State = state;
            Type = type;
            VcnId = vcnId;
        }
    }
}
