// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ContainerEngine
{
    public static class GetClusterKubeConfig
    {
        /// <summary>
        /// This data source provides details about a specific Cluster Kube Config resource in Oracle Cloud Infrastructure Container Engine service.
        /// 
        /// Create the Kubeconfig YAML for a cluster.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testClusterKubeConfig = Oci.ContainerEngine.GetClusterKubeConfig.Invoke(new()
        ///     {
        ///         ClusterId = oci_containerengine_cluster.Test_cluster.Id,
        ///         Endpoint = @var.Cluster_kube_config_endpoint,
        ///         Expiration = @var.Cluster_kube_config_expiration,
        ///         TokenVersion = @var.Cluster_kube_config_token_version,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetClusterKubeConfigResult> InvokeAsync(GetClusterKubeConfigArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetClusterKubeConfigResult>("oci:ContainerEngine/getClusterKubeConfig:getClusterKubeConfig", args ?? new GetClusterKubeConfigArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Cluster Kube Config resource in Oracle Cloud Infrastructure Container Engine service.
        /// 
        /// Create the Kubeconfig YAML for a cluster.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testClusterKubeConfig = Oci.ContainerEngine.GetClusterKubeConfig.Invoke(new()
        ///     {
        ///         ClusterId = oci_containerengine_cluster.Test_cluster.Id,
        ///         Endpoint = @var.Cluster_kube_config_endpoint,
        ///         Expiration = @var.Cluster_kube_config_expiration,
        ///         TokenVersion = @var.Cluster_kube_config_token_version,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetClusterKubeConfigResult> Invoke(GetClusterKubeConfigInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetClusterKubeConfigResult>("oci:ContainerEngine/getClusterKubeConfig:getClusterKubeConfig", args ?? new GetClusterKubeConfigInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetClusterKubeConfigArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the cluster.
        /// </summary>
        [Input("clusterId", required: true)]
        public string ClusterId { get; set; } = null!;

        /// <summary>
        /// The endpoint to target. A cluster may have multiple endpoints exposed but the kubeconfig can only target one at a time.
        /// </summary>
        [Input("endpoint")]
        public string? Endpoint { get; set; }

        /// <summary>
        /// Deprecated. This field is no longer used.
        /// </summary>
        [Input("expiration")]
        public int? Expiration { get; set; }

        /// <summary>
        /// The version of the kubeconfig token. Supported value 2.0.0
        /// </summary>
        [Input("tokenVersion")]
        public string? TokenVersion { get; set; }

        public GetClusterKubeConfigArgs()
        {
        }
        public static new GetClusterKubeConfigArgs Empty => new GetClusterKubeConfigArgs();
    }

    public sealed class GetClusterKubeConfigInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the cluster.
        /// </summary>
        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        /// <summary>
        /// The endpoint to target. A cluster may have multiple endpoints exposed but the kubeconfig can only target one at a time.
        /// </summary>
        [Input("endpoint")]
        public Input<string>? Endpoint { get; set; }

        /// <summary>
        /// Deprecated. This field is no longer used.
        /// </summary>
        [Input("expiration")]
        public Input<int>? Expiration { get; set; }

        /// <summary>
        /// The version of the kubeconfig token. Supported value 2.0.0
        /// </summary>
        [Input("tokenVersion")]
        public Input<string>? TokenVersion { get; set; }

        public GetClusterKubeConfigInvokeArgs()
        {
        }
        public static new GetClusterKubeConfigInvokeArgs Empty => new GetClusterKubeConfigInvokeArgs();
    }


    [OutputType]
    public sealed class GetClusterKubeConfigResult
    {
        public readonly string ClusterId;
        /// <summary>
        /// content of the Kubeconfig YAML for the cluster.
        /// </summary>
        public readonly string Content;
        public readonly string? Endpoint;
        public readonly int? Expiration;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? TokenVersion;

        [OutputConstructor]
        private GetClusterKubeConfigResult(
            string clusterId,

            string content,

            string? endpoint,

            int? expiration,

            string id,

            string? tokenVersion)
        {
            ClusterId = clusterId;
            Content = content;
            Endpoint = endpoint;
            Expiration = expiration;
            Id = id;
            TokenVersion = tokenVersion;
        }
    }
}
