// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ContainerEngine
{
    public static class GetNodePoolOption
    {
        /// <summary>
        /// This data source provides details about a specific Node Pool Option resource in Oracle Cloud Infrastructure Container Engine service.
        /// 
        /// Get options available for node pools.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testNodePoolOption = Oci.ContainerEngine.GetNodePoolOption.Invoke(new()
        ///     {
        ///         NodePoolOptionId = testNodePoolOptionOciContainerengineNodePoolOption.Id,
        ///         CompartmentId = compartmentId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetNodePoolOptionResult> InvokeAsync(GetNodePoolOptionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNodePoolOptionResult>("oci:ContainerEngine/getNodePoolOption:getNodePoolOption", args ?? new GetNodePoolOptionArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Node Pool Option resource in Oracle Cloud Infrastructure Container Engine service.
        /// 
        /// Get options available for node pools.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testNodePoolOption = Oci.ContainerEngine.GetNodePoolOption.Invoke(new()
        ///     {
        ///         NodePoolOptionId = testNodePoolOptionOciContainerengineNodePoolOption.Id,
        ///         CompartmentId = compartmentId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNodePoolOptionResult> Invoke(GetNodePoolOptionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNodePoolOptionResult>("oci:ContainerEngine/getNodePoolOption:getNodePoolOption", args ?? new GetNodePoolOptionInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Node Pool Option resource in Oracle Cloud Infrastructure Container Engine service.
        /// 
        /// Get options available for node pools.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testNodePoolOption = Oci.ContainerEngine.GetNodePoolOption.Invoke(new()
        ///     {
        ///         NodePoolOptionId = testNodePoolOptionOciContainerengineNodePoolOption.Id,
        ///         CompartmentId = compartmentId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNodePoolOptionResult> Invoke(GetNodePoolOptionInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNodePoolOptionResult>("oci:ContainerEngine/getNodePoolOption:getNodePoolOption", args ?? new GetNodePoolOptionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNodePoolOptionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        /// <summary>
        /// The id of the option set to retrieve. Use "all" get all options, or use a cluster ID to get options specific to the provided cluster.
        /// </summary>
        [Input("nodePoolOptionId", required: true)]
        public string NodePoolOptionId { get; set; } = null!;

        public GetNodePoolOptionArgs()
        {
        }
        public static new GetNodePoolOptionArgs Empty => new GetNodePoolOptionArgs();
    }

    public sealed class GetNodePoolOptionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// The id of the option set to retrieve. Use "all" get all options, or use a cluster ID to get options specific to the provided cluster.
        /// </summary>
        [Input("nodePoolOptionId", required: true)]
        public Input<string> NodePoolOptionId { get; set; } = null!;

        public GetNodePoolOptionInvokeArgs()
        {
        }
        public static new GetNodePoolOptionInvokeArgs Empty => new GetNodePoolOptionInvokeArgs();
    }


    [OutputType]
    public sealed class GetNodePoolOptionResult
    {
        public readonly string? CompartmentId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Deprecated. See sources. When creating a node pool, only image names contained in this property can be passed to the `node_image_name` property.
        /// </summary>
        public readonly ImmutableArray<string> Images;
        /// <summary>
        /// Available Kubernetes versions.
        /// </summary>
        public readonly ImmutableArray<string> KubernetesVersions;
        public readonly string NodePoolOptionId;
        /// <summary>
        /// Available shapes for nodes.
        /// </summary>
        public readonly ImmutableArray<string> Shapes;
        /// <summary>
        /// Available source of the node.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNodePoolOptionSourceResult> Sources;

        [OutputConstructor]
        private GetNodePoolOptionResult(
            string? compartmentId,

            string id,

            ImmutableArray<string> images,

            ImmutableArray<string> kubernetesVersions,

            string nodePoolOptionId,

            ImmutableArray<string> shapes,

            ImmutableArray<Outputs.GetNodePoolOptionSourceResult> sources)
        {
            CompartmentId = compartmentId;
            Id = id;
            Images = images;
            KubernetesVersions = kubernetesVersions;
            NodePoolOptionId = nodePoolOptionId;
            Shapes = shapes;
            Sources = sources;
        }
    }
}
