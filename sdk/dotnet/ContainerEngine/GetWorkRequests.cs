// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ContainerEngine
{
    public static class GetWorkRequests
    {
        /// <summary>
        /// This data source provides the list of Work Requests in Oracle Cloud Infrastructure Container Engine service.
        /// 
        /// List all work requests in a compartment.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testWorkRequests = Oci.ContainerEngine.GetWorkRequests.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         ClusterId = testCluster.Id,
        ///         ResourceId = testResource.Id,
        ///         ResourceType = workRequestResourceType,
        ///         Statuses = workRequestStatus,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetWorkRequestsResult> InvokeAsync(GetWorkRequestsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWorkRequestsResult>("oci:ContainerEngine/getWorkRequests:getWorkRequests", args ?? new GetWorkRequestsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Work Requests in Oracle Cloud Infrastructure Container Engine service.
        /// 
        /// List all work requests in a compartment.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testWorkRequests = Oci.ContainerEngine.GetWorkRequests.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         ClusterId = testCluster.Id,
        ///         ResourceId = testResource.Id,
        ///         ResourceType = workRequestResourceType,
        ///         Statuses = workRequestStatus,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetWorkRequestsResult> Invoke(GetWorkRequestsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkRequestsResult>("oci:ContainerEngine/getWorkRequests:getWorkRequests", args ?? new GetWorkRequestsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWorkRequestsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the cluster.
        /// </summary>
        [Input("clusterId")]
        public string? ClusterId { get; set; }

        /// <summary>
        /// The OCID of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetWorkRequestsFilterArgs>? _filters;
        public List<Inputs.GetWorkRequestsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetWorkRequestsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The OCID of the resource associated with a work request
        /// </summary>
        [Input("resourceId")]
        public string? ResourceId { get; set; }

        /// <summary>
        /// Type of the resource associated with a work request
        /// </summary>
        [Input("resourceType")]
        public string? ResourceType { get; set; }

        [Input("statuses")]
        private List<string>? _statuses;

        /// <summary>
        /// A work request status to filter on. Can have multiple parameters of this name.
        /// </summary>
        public List<string> Statuses
        {
            get => _statuses ?? (_statuses = new List<string>());
            set => _statuses = value;
        }

        public GetWorkRequestsArgs()
        {
        }
        public static new GetWorkRequestsArgs Empty => new GetWorkRequestsArgs();
    }

    public sealed class GetWorkRequestsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the cluster.
        /// </summary>
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        /// <summary>
        /// The OCID of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetWorkRequestsFilterInputArgs>? _filters;
        public InputList<Inputs.GetWorkRequestsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetWorkRequestsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The OCID of the resource associated with a work request
        /// </summary>
        [Input("resourceId")]
        public Input<string>? ResourceId { get; set; }

        /// <summary>
        /// Type of the resource associated with a work request
        /// </summary>
        [Input("resourceType")]
        public Input<string>? ResourceType { get; set; }

        [Input("statuses")]
        private InputList<string>? _statuses;

        /// <summary>
        /// A work request status to filter on. Can have multiple parameters of this name.
        /// </summary>
        public InputList<string> Statuses
        {
            get => _statuses ?? (_statuses = new InputList<string>());
            set => _statuses = value;
        }

        public GetWorkRequestsInvokeArgs()
        {
        }
        public static new GetWorkRequestsInvokeArgs Empty => new GetWorkRequestsInvokeArgs();
    }


    [OutputType]
    public sealed class GetWorkRequestsResult
    {
        public readonly string? ClusterId;
        /// <summary>
        /// The OCID of the compartment in which the work request exists.
        /// </summary>
        public readonly string CompartmentId;
        public readonly ImmutableArray<Outputs.GetWorkRequestsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? ResourceId;
        public readonly string? ResourceType;
        /// <summary>
        /// The current status of the work request.
        /// </summary>
        public readonly ImmutableArray<string> Statuses;
        /// <summary>
        /// The list of work_requests.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkRequestsWorkRequestResult> WorkRequests;

        [OutputConstructor]
        private GetWorkRequestsResult(
            string? clusterId,

            string compartmentId,

            ImmutableArray<Outputs.GetWorkRequestsFilterResult> filters,

            string id,

            string? resourceId,

            string? resourceType,

            ImmutableArray<string> statuses,

            ImmutableArray<Outputs.GetWorkRequestsWorkRequestResult> workRequests)
        {
            ClusterId = clusterId;
            CompartmentId = compartmentId;
            Filters = filters;
            Id = id;
            ResourceId = resourceId;
            ResourceType = resourceType;
            Statuses = statuses;
            WorkRequests = workRequests;
        }
    }
}
