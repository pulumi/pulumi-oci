// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ContainerEngine.Inputs
{

    public sealed class ContainerInstanceImagePullSecretGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("password")]
        private Input<string>? _password;

        /// <summary>
        /// The password which should be used with the registry for authentication. The value is expected in base64 format.
        /// </summary>
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The registry endpoint of the container image.
        /// </summary>
        [Input("registryEndpoint", required: true)]
        public Input<string> RegistryEndpoint { get; set; } = null!;

        /// <summary>
        /// The OCID of the secret for registry credentials.
        /// </summary>
        [Input("secretId")]
        public Input<string>? SecretId { get; set; }

        /// <summary>
        /// The type of ImagePullSecret.
        /// </summary>
        [Input("secretType", required: true)]
        public Input<string> SecretType { get; set; } = null!;

        /// <summary>
        /// The username which should be used with the registry for authentication. The value is expected in base64 format.
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        public ContainerInstanceImagePullSecretGetArgs()
        {
        }
        public static new ContainerInstanceImagePullSecretGetArgs Empty => new ContainerInstanceImagePullSecretGetArgs();
    }
}
