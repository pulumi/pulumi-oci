// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ContainerEngine.Inputs
{

    public sealed class ContainerInstanceVnicGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`.
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// A user-friendly name for the VNIC. Does not have to be unique. Avoid entering confidential information.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// The hostname for the VNIC's primary private IP. Used for DNS.
        /// </summary>
        [Input("hostnameLabel")]
        public Input<string>? HostnameLabel { get; set; }

        /// <summary>
        /// Whether the VNIC should be assigned a public IP address.
        /// </summary>
        [Input("isPublicIpAssigned")]
        public Input<bool>? IsPublicIpAssigned { get; set; }

        [Input("nsgIds")]
        private InputList<string>? _nsgIds;

        /// <summary>
        /// A list of the OCIDs of the network security groups (NSGs) to add the VNIC to.
        /// </summary>
        public InputList<string> NsgIds
        {
            get => _nsgIds ?? (_nsgIds = new InputList<string>());
            set => _nsgIds = value;
        }

        /// <summary>
        /// A private IP address of your choice to assign to the VNIC. Must be an available IP address within the subnet's CIDR.
        /// </summary>
        [Input("privateIp")]
        public Input<string>? PrivateIp { get; set; }

        /// <summary>
        /// Whether the source/destination check is disabled on the VNIC.
        /// </summary>
        [Input("skipSourceDestCheck")]
        public Input<bool>? SkipSourceDestCheck { get; set; }

        /// <summary>
        /// The OCID of the subnet to create the VNIC in.
        /// </summary>
        [Input("subnetId", required: true)]
        public Input<string> SubnetId { get; set; } = null!;

        /// <summary>
        /// The identifier of the virtual network interface card (VNIC) over which the containers accessing this network can communicate with the larger virtual cloud network.
        /// </summary>
        [Input("vnicId")]
        public Input<string>? VnicId { get; set; }

        public ContainerInstanceVnicGetArgs()
        {
        }
        public static new ContainerInstanceVnicGetArgs Empty => new ContainerInstanceVnicGetArgs();
    }
}
