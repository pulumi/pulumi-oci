// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ContainerEngine.Outputs
{

    [OutputType]
    public sealed class GetNodePoolsNodePoolResult
    {
        /// <summary>
        /// The OCID of the cluster.
        /// </summary>
        public readonly string? ClusterId;
        /// <summary>
        /// The OCID of the compartment.
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? DefinedTags;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? FreeformTags;
        /// <summary>
        /// The OCID of the node pool.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// A list of key/value pairs to add to nodes after they join the Kubernetes cluster.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNodePoolsNodePoolInitialNodeLabelResult> InitialNodeLabels;
        /// <summary>
        /// The version of Kubernetes running on the nodes in the node pool.
        /// </summary>
        public readonly string? KubernetesVersion;
        /// <summary>
        /// Details about the state of the nodepool.
        /// </summary>
        public readonly string? LifecycleDetails;
        /// <summary>
        /// The name to filter on.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The configuration of nodes in the node pool.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNodePoolsNodePoolNodeConfigDetailResult> NodeConfigDetails;
        /// <summary>
        /// Node Eviction Details configuration
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNodePoolsNodePoolNodeEvictionNodePoolSettingResult> NodeEvictionNodePoolSettings;
        /// <summary>
        /// Deprecated. see `nodeSource`. The OCID of the image running on the nodes in the node pool.
        /// </summary>
        public readonly string? NodeImageId;
        /// <summary>
        /// Deprecated. see `nodeSource`. The name of the image running on the nodes in the node pool.
        /// </summary>
        public readonly string? NodeImageName;
        /// <summary>
        /// A list of key/value pairs to add to each underlying Oracle Cloud Infrastructure instance in the node pool on launch.
        /// </summary>
        public readonly ImmutableDictionary<string, object>? NodeMetadata;
        /// <summary>
        /// Node Pool Cycling Details
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNodePoolsNodePoolNodePoolCyclingDetailResult> NodePoolCyclingDetails;
        public readonly string? NodePoolId;
        /// <summary>
        /// The name of the node shape of the nodes in the node pool.
        /// </summary>
        public readonly string? NodeShape;
        /// <summary>
        /// The shape configuration of the nodes.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNodePoolsNodePoolNodeShapeConfigResult> NodeShapeConfigs;
        /// <summary>
        /// Source running on the nodes in the node pool.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNodePoolsNodePoolNodeSourceDetailResult> NodeSourceDetails;
        /// <summary>
        /// Deprecated. see `nodeSourceDetails`. Source running on the nodes in the node pool.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNodePoolsNodePoolNodeSourceResult> NodeSources;
        public readonly ImmutableArray<Outputs.GetNodePoolsNodePoolNodeResult> Nodes;
        /// <summary>
        /// The number of nodes in each subnet.
        /// </summary>
        public readonly int? QuantityPerSubnet;
        /// <summary>
        /// The SSH public key on each node in the node pool on launch.
        /// </summary>
        public readonly string? SshPublicKey;
        /// <summary>
        /// A list of nodepool lifecycle states on which to filter on, matching any of the list items (OR logic). eg. [ACTIVE, DELETING]
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// The OCIDs of the subnets in which to place nodes for this node pool.
        /// </summary>
        public readonly ImmutableArray<string> SubnetIds;

        [OutputConstructor]
        private GetNodePoolsNodePoolResult(
            string? clusterId,

            string? compartmentId,

            ImmutableDictionary<string, object>? definedTags,

            ImmutableDictionary<string, object>? freeformTags,

            string? id,

            ImmutableArray<Outputs.GetNodePoolsNodePoolInitialNodeLabelResult> initialNodeLabels,

            string? kubernetesVersion,

            string? lifecycleDetails,

            string? name,

            ImmutableArray<Outputs.GetNodePoolsNodePoolNodeConfigDetailResult> nodeConfigDetails,

            ImmutableArray<Outputs.GetNodePoolsNodePoolNodeEvictionNodePoolSettingResult> nodeEvictionNodePoolSettings,

            string? nodeImageId,

            string? nodeImageName,

            ImmutableDictionary<string, object>? nodeMetadata,

            ImmutableArray<Outputs.GetNodePoolsNodePoolNodePoolCyclingDetailResult> nodePoolCyclingDetails,

            string? nodePoolId,

            string? nodeShape,

            ImmutableArray<Outputs.GetNodePoolsNodePoolNodeShapeConfigResult> nodeShapeConfigs,

            ImmutableArray<Outputs.GetNodePoolsNodePoolNodeSourceDetailResult> nodeSourceDetails,

            ImmutableArray<Outputs.GetNodePoolsNodePoolNodeSourceResult> nodeSources,

            ImmutableArray<Outputs.GetNodePoolsNodePoolNodeResult> nodes,

            int? quantityPerSubnet,

            string? sshPublicKey,

            string? state,

            ImmutableArray<string> subnetIds)
        {
            ClusterId = clusterId;
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            FreeformTags = freeformTags;
            Id = id;
            InitialNodeLabels = initialNodeLabels;
            KubernetesVersion = kubernetesVersion;
            LifecycleDetails = lifecycleDetails;
            Name = name;
            NodeConfigDetails = nodeConfigDetails;
            NodeEvictionNodePoolSettings = nodeEvictionNodePoolSettings;
            NodeImageId = nodeImageId;
            NodeImageName = nodeImageName;
            NodeMetadata = nodeMetadata;
            NodePoolCyclingDetails = nodePoolCyclingDetails;
            NodePoolId = nodePoolId;
            NodeShape = nodeShape;
            NodeShapeConfigs = nodeShapeConfigs;
            NodeSourceDetails = nodeSourceDetails;
            NodeSources = nodeSources;
            Nodes = nodes;
            QuantityPerSubnet = quantityPerSubnet;
            SshPublicKey = sshPublicKey;
            State = state;
            SubnetIds = subnetIds;
        }
    }
}
