// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ContainerInstances.Outputs
{

    [OutputType]
    public sealed class GetContainerInstanceVolumeResult
    {
        /// <summary>
        /// Volume type that we are using for empty dir where it could be either File Storage or Memory
        /// </summary>
        public readonly string BackingStore;
        /// <summary>
        /// Contains string key value pairs which can be mounted as individual files inside the container. The value needs to be base64 encoded. It is decoded to plain text before the mount.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetContainerInstanceVolumeConfigResult> Configs;
        /// <summary>
        /// The name of the volume. This has be unique cross single ContainerInstance.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The type of volume.
        /// </summary>
        public readonly string VolumeType;

        [OutputConstructor]
        private GetContainerInstanceVolumeResult(
            string backingStore,

            ImmutableArray<Outputs.GetContainerInstanceVolumeConfigResult> configs,

            string name,

            string volumeType)
        {
            BackingStore = backingStore;
            Configs = configs;
            Name = name;
            VolumeType = volumeType;
        }
    }
}
