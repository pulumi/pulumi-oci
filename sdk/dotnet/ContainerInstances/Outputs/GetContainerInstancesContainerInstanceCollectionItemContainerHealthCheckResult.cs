// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ContainerInstances.Outputs
{

    [OutputType]
    public sealed class GetContainerInstancesContainerInstanceCollectionItemContainerHealthCheckResult
    {
        public readonly string FailureAction;
        public readonly int FailureThreshold;
        public readonly ImmutableArray<Outputs.GetContainerInstancesContainerInstanceCollectionItemContainerHealthCheckHeaderResult> Headers;
        public readonly string HealthCheckType;
        public readonly int InitialDelayInSeconds;
        public readonly int IntervalInSeconds;
        /// <summary>
        /// The name of the volume. This must be unique within a single container instance.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// (Optional) Relative path for this file inside the volume mount directory. By default, the file is presented at the root of the volume mount path.
        /// </summary>
        public readonly string Path;
        public readonly int Port;
        public readonly string Status;
        public readonly string StatusDetails;
        public readonly int SuccessThreshold;
        public readonly int TimeoutInSeconds;

        [OutputConstructor]
        private GetContainerInstancesContainerInstanceCollectionItemContainerHealthCheckResult(
            string failureAction,

            int failureThreshold,

            ImmutableArray<Outputs.GetContainerInstancesContainerInstanceCollectionItemContainerHealthCheckHeaderResult> headers,

            string healthCheckType,

            int initialDelayInSeconds,

            int intervalInSeconds,

            string name,

            string path,

            int port,

            string status,

            string statusDetails,

            int successThreshold,

            int timeoutInSeconds)
        {
            FailureAction = failureAction;
            FailureThreshold = failureThreshold;
            Headers = headers;
            HealthCheckType = healthCheckType;
            InitialDelayInSeconds = initialDelayInSeconds;
            IntervalInSeconds = intervalInSeconds;
            Name = name;
            Path = path;
            Port = port;
            Status = status;
            StatusDetails = statusDetails;
            SuccessThreshold = successThreshold;
            TimeoutInSeconds = timeoutInSeconds;
        }
    }
}
