// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ContainerInstances.Outputs
{

    [OutputType]
    public sealed class GetContainerInstancesContainerInstanceCollectionItemContainerResult
    {
        public readonly ImmutableArray<string> AdditionalCapabilities;
        public readonly ImmutableArray<string> Arguments;
        /// <summary>
        /// The name of the availability domain.  Example: `Uocm:PHX-AD-1`
        /// </summary>
        public readonly string AvailabilityDomain;
        public readonly ImmutableArray<string> Commands;
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The ID of the Container on this Instance.
        /// </summary>
        public readonly string ContainerId;
        public readonly string ContainerInstanceId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        public readonly string DisplayName;
        public readonly ImmutableDictionary<string, object> EnvironmentVariables;
        public readonly int ExitCode;
        /// <summary>
        /// Fault Domain where the ContainerInstance is running.
        /// </summary>
        public readonly string FaultDomain;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        public readonly ImmutableArray<Outputs.GetContainerInstancesContainerInstanceCollectionItemContainerHealthCheckResult> HealthChecks;
        public readonly string ImageUrl;
        public readonly bool IsResourcePrincipalDisabled;
        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        public readonly string LifecycleDetails;
        public readonly ImmutableArray<Outputs.GetContainerInstancesContainerInstanceCollectionItemContainerResourceConfigResult> ResourceConfigs;
        /// <summary>
        /// A filter to return only resources whose lifecycleState matches the given lifecycleState.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> SystemTags;
        /// <summary>
        /// The time the the ContainerInstance was created. An RFC3339 formatted datetime string
        /// </summary>
        public readonly string TimeCreated;
        public readonly string TimeTerminated;
        /// <summary>
        /// The time the ContainerInstance was updated. An RFC3339 formatted datetime string
        /// </summary>
        public readonly string TimeUpdated;
        public readonly ImmutableArray<Outputs.GetContainerInstancesContainerInstanceCollectionItemContainerVolumeMountResult> VolumeMounts;
        public readonly string WorkingDirectory;

        [OutputConstructor]
        private GetContainerInstancesContainerInstanceCollectionItemContainerResult(
            ImmutableArray<string> additionalCapabilities,

            ImmutableArray<string> arguments,

            string availabilityDomain,

            ImmutableArray<string> commands,

            string compartmentId,

            string containerId,

            string containerInstanceId,

            ImmutableDictionary<string, object> definedTags,

            string displayName,

            ImmutableDictionary<string, object> environmentVariables,

            int exitCode,

            string faultDomain,

            ImmutableDictionary<string, object> freeformTags,

            ImmutableArray<Outputs.GetContainerInstancesContainerInstanceCollectionItemContainerHealthCheckResult> healthChecks,

            string imageUrl,

            bool isResourcePrincipalDisabled,

            string lifecycleDetails,

            ImmutableArray<Outputs.GetContainerInstancesContainerInstanceCollectionItemContainerResourceConfigResult> resourceConfigs,

            string state,

            ImmutableDictionary<string, object> systemTags,

            string timeCreated,

            string timeTerminated,

            string timeUpdated,

            ImmutableArray<Outputs.GetContainerInstancesContainerInstanceCollectionItemContainerVolumeMountResult> volumeMounts,

            string workingDirectory)
        {
            AdditionalCapabilities = additionalCapabilities;
            Arguments = arguments;
            AvailabilityDomain = availabilityDomain;
            Commands = commands;
            CompartmentId = compartmentId;
            ContainerId = containerId;
            ContainerInstanceId = containerInstanceId;
            DefinedTags = definedTags;
            DisplayName = displayName;
            EnvironmentVariables = environmentVariables;
            ExitCode = exitCode;
            FaultDomain = faultDomain;
            FreeformTags = freeformTags;
            HealthChecks = healthChecks;
            ImageUrl = imageUrl;
            IsResourcePrincipalDisabled = isResourcePrincipalDisabled;
            LifecycleDetails = lifecycleDetails;
            ResourceConfigs = resourceConfigs;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeTerminated = timeTerminated;
            TimeUpdated = timeUpdated;
            VolumeMounts = volumeMounts;
            WorkingDirectory = workingDirectory;
        }
    }
}
