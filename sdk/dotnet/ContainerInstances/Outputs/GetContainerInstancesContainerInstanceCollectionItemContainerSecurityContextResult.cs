// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ContainerInstances.Outputs
{

    [OutputType]
    public sealed class GetContainerInstancesContainerInstanceCollectionItemContainerSecurityContextResult
    {
        public readonly ImmutableArray<Outputs.GetContainerInstancesContainerInstanceCollectionItemContainerSecurityContextCapabilityResult> Capabilities;
        public readonly bool IsNonRootUserCheckEnabled;
        public readonly bool IsRootFileSystemReadonly;
        public readonly int RunAsGroup;
        public readonly int RunAsUser;
        public readonly string SecurityContextType;

        [OutputConstructor]
        private GetContainerInstancesContainerInstanceCollectionItemContainerSecurityContextResult(
            ImmutableArray<Outputs.GetContainerInstancesContainerInstanceCollectionItemContainerSecurityContextCapabilityResult> capabilities,

            bool isNonRootUserCheckEnabled,

            bool isRootFileSystemReadonly,

            int runAsGroup,

            int runAsUser,

            string securityContextType)
        {
            Capabilities = capabilities;
            IsNonRootUserCheckEnabled = isNonRootUserCheckEnabled;
            IsRootFileSystemReadonly = isRootFileSystemReadonly;
            RunAsGroup = runAsGroup;
            RunAsUser = runAsUser;
            SecurityContextType = securityContextType;
        }
    }
}
