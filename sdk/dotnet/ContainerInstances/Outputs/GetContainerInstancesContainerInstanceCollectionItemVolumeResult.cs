// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ContainerInstances.Outputs
{

    [OutputType]
    public sealed class GetContainerInstancesContainerInstanceCollectionItemVolumeResult
    {
        /// <summary>
        /// The volume type of the empty directory, can be either File Storage or Memory.
        /// </summary>
        public readonly string? BackingStore;
        /// <summary>
        /// Contains string key value pairs which can be mounted as individual files inside the container. The value needs to be base64 encoded. It is decoded to plain text before the mount.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetContainerInstancesContainerInstanceCollectionItemVolumeConfigResult> Configs;
        /// <summary>
        /// The name of the volume. This must be unique within a single container instance.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The type of volume.
        /// </summary>
        public readonly string? VolumeType;

        [OutputConstructor]
        private GetContainerInstancesContainerInstanceCollectionItemVolumeResult(
            string? backingStore,

            ImmutableArray<Outputs.GetContainerInstancesContainerInstanceCollectionItemVolumeConfigResult> configs,

            string? name,

            string? volumeType)
        {
            BackingStore = backingStore;
            Configs = configs;
            Name = name;
            VolumeType = volumeType;
        }
    }
}
