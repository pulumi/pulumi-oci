// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Core
{
    /// <summary>
    /// This resource provides the Cross Connect resource in Oracle Cloud Infrastructure Core service.
    /// 
    /// Creates a new cross-connect. Oracle recommends you create each cross-connect in a
    /// [CrossConnectGroup](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CrossConnectGroup) so you can use link aggregation
    /// with the connection.
    /// 
    /// After creating the `CrossConnect` object, you need to go the FastConnect location
    /// and request to have the physical cable installed. For more information, see
    /// [FastConnect Overview](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/fastconnect.htm).
    /// 
    /// For the purposes of access control, you must provide the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the
    /// compartment where you want the cross-connect to reside. If you're
    /// not sure which compartment to use, put the cross-connect in the
    /// same compartment with your VCN. For more information about
    /// compartments and access control, see
    /// [Overview of the IAM Service](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/overview.htm).
    /// For information about OCIDs, see
    /// [Resource Identifiers](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
    /// 
    /// You may optionally specify a *display name* for the cross-connect.
    /// It does not have to be unique, and you can change it. Avoid entering confidential information.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testCrossConnect = new Oci.Core.CrossConnect("test_cross_connect", new()
    ///     {
    ///         CompartmentId = compartmentId,
    ///         LocationName = crossConnectLocationName,
    ///         PortSpeedShapeName = crossConnectPortSpeedShapeName,
    ///         CrossConnectGroupId = testCrossConnectGroup.Id,
    ///         CustomerReferenceName = crossConnectCustomerReferenceName,
    ///         DefinedTags = 
    ///         {
    ///             { "Operations.CostCenter", "42" },
    ///         },
    ///         DisplayName = crossConnectDisplayName,
    ///         FarCrossConnectOrCrossConnectGroupId = testCrossConnectGroup.Id,
    ///         FreeformTags = 
    ///         {
    ///             { "Department", "Finance" },
    ///         },
    ///         MacsecProperties = new Oci.Core.Inputs.CrossConnectMacsecPropertiesArgs
    ///         {
    ///             State = crossConnectMacsecPropertiesState,
    ///             EncryptionCipher = crossConnectMacsecPropertiesEncryptionCipher,
    ///             IsUnprotectedTrafficAllowed = crossConnectMacsecPropertiesIsUnprotectedTrafficAllowed,
    ///             PrimaryKey = new Oci.Core.Inputs.CrossConnectMacsecPropertiesPrimaryKeyArgs
    ///             {
    ///                 ConnectivityAssociationKeySecretId = testSecret.Id,
    ///                 ConnectivityAssociationNameSecretId = testSecret.Id,
    ///             },
    ///         },
    ///         NearCrossConnectOrCrossConnectGroupId = testCrossConnectGroup.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// CrossConnects can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:Core/crossConnect:CrossConnect test_cross_connect "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:Core/crossConnect:CrossConnect")]
    public partial class CrossConnect : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) The OCID of the compartment to contain the cross-connect.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// The OCID of the cross-connect group to put this cross-connect in.
        /// </summary>
        [Output("crossConnectGroupId")]
        public Output<string> CrossConnectGroupId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A reference name or identifier for the physical fiber connection that this cross-connect uses.
        /// </summary>
        [Output("customerReferenceName")]
        public Output<string> CustomerReferenceName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, object>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// If you already have an existing cross-connect or cross-connect group at this FastConnect location, and you want this new cross-connect to be on a different router (for the purposes of redundancy), provide the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of that existing cross-connect or cross-connect group.
        /// </summary>
        [Output("farCrossConnectOrCrossConnectGroupId")]
        public Output<string> FarCrossConnectOrCrossConnectGroupId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, object>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Set to true to activate the cross-connect. You activate it after the physical cabling is complete, and you've confirmed the cross-connect's light levels are good and your side of the interface is up. Activation indicates to Oracle that the physical connection is ready.
        /// </summary>
        [Output("isActive")]
        public Output<bool?> IsActive { get; private set; } = null!;

        /// <summary>
        /// The name of the FastConnect location where this cross-connect will be installed. To get a list of the available locations, see [ListCrossConnectLocations](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CrossConnectLocation/ListCrossConnectLocations).  Example: `CyrusOne, Chandler, AZ`
        /// </summary>
        [Output("locationName")]
        public Output<string> LocationName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Properties used to configure MACsec (if capable).
        /// </summary>
        [Output("macsecProperties")]
        public Output<Outputs.CrossConnectMacsecProperties> MacsecProperties { get; private set; } = null!;

        /// <summary>
        /// If you already have an existing cross-connect or cross-connect group at this FastConnect location, and you want this new cross-connect to be on the same router, provide the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of that existing cross-connect or cross-connect group.
        /// </summary>
        [Output("nearCrossConnectOrCrossConnectGroupId")]
        public Output<string> NearCrossConnectOrCrossConnectGroupId { get; private set; } = null!;

        /// <summary>
        /// The FastConnect device that terminates the logical connection. This device might be different than the device that terminates the physical connection.
        /// </summary>
        [Output("ociLogicalDeviceName")]
        public Output<string> OciLogicalDeviceName { get; private set; } = null!;

        /// <summary>
        /// The FastConnect device that terminates the physical connection.
        /// </summary>
        [Output("ociPhysicalDeviceName")]
        public Output<string> OciPhysicalDeviceName { get; private set; } = null!;

        /// <summary>
        /// A string identifying the meet-me room port for this cross-connect.
        /// </summary>
        [Output("portName")]
        public Output<string> PortName { get; private set; } = null!;

        /// <summary>
        /// The port speed for this cross-connect. To get a list of the available port speeds, see [ListCrossConnectPortSpeedShapes](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CrossConnectPortSpeedShape/ListCrossconnectPortSpeedShapes).  Example: `10 Gbps` 
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("portSpeedShapeName")]
        public Output<string> PortSpeedShapeName { get; private set; } = null!;

        /// <summary>
        /// The cross-connect's current state.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The date and time the cross-connect was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;


        /// <summary>
        /// Create a CrossConnect resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CrossConnect(string name, CrossConnectArgs args, CustomResourceOptions? options = null)
            : base("oci:Core/crossConnect:CrossConnect", name, args ?? new CrossConnectArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CrossConnect(string name, Input<string> id, CrossConnectState? state = null, CustomResourceOptions? options = null)
            : base("oci:Core/crossConnect:CrossConnect", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CrossConnect resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CrossConnect Get(string name, Input<string> id, CrossConnectState? state = null, CustomResourceOptions? options = null)
        {
            return new CrossConnect(name, id, state, options);
        }
    }

    public sealed class CrossConnectArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The OCID of the compartment to contain the cross-connect.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// The OCID of the cross-connect group to put this cross-connect in.
        /// </summary>
        [Input("crossConnectGroupId")]
        public Input<string>? CrossConnectGroupId { get; set; }

        /// <summary>
        /// (Updatable) A reference name or identifier for the physical fiber connection that this cross-connect uses.
        /// </summary>
        [Input("customerReferenceName")]
        public Input<string>? CustomerReferenceName { get; set; }

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// If you already have an existing cross-connect or cross-connect group at this FastConnect location, and you want this new cross-connect to be on a different router (for the purposes of redundancy), provide the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of that existing cross-connect or cross-connect group.
        /// </summary>
        [Input("farCrossConnectOrCrossConnectGroupId")]
        public Input<string>? FarCrossConnectOrCrossConnectGroupId { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) Set to true to activate the cross-connect. You activate it after the physical cabling is complete, and you've confirmed the cross-connect's light levels are good and your side of the interface is up. Activation indicates to Oracle that the physical connection is ready.
        /// </summary>
        [Input("isActive")]
        public Input<bool>? IsActive { get; set; }

        /// <summary>
        /// The name of the FastConnect location where this cross-connect will be installed. To get a list of the available locations, see [ListCrossConnectLocations](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CrossConnectLocation/ListCrossConnectLocations).  Example: `CyrusOne, Chandler, AZ`
        /// </summary>
        [Input("locationName", required: true)]
        public Input<string> LocationName { get; set; } = null!;

        /// <summary>
        /// (Updatable) Properties used to configure MACsec (if capable).
        /// </summary>
        [Input("macsecProperties")]
        public Input<Inputs.CrossConnectMacsecPropertiesArgs>? MacsecProperties { get; set; }

        /// <summary>
        /// If you already have an existing cross-connect or cross-connect group at this FastConnect location, and you want this new cross-connect to be on the same router, provide the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of that existing cross-connect or cross-connect group.
        /// </summary>
        [Input("nearCrossConnectOrCrossConnectGroupId")]
        public Input<string>? NearCrossConnectOrCrossConnectGroupId { get; set; }

        /// <summary>
        /// The port speed for this cross-connect. To get a list of the available port speeds, see [ListCrossConnectPortSpeedShapes](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CrossConnectPortSpeedShape/ListCrossconnectPortSpeedShapes).  Example: `10 Gbps` 
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("portSpeedShapeName", required: true)]
        public Input<string> PortSpeedShapeName { get; set; } = null!;

        public CrossConnectArgs()
        {
        }
        public static new CrossConnectArgs Empty => new CrossConnectArgs();
    }

    public sealed class CrossConnectState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The OCID of the compartment to contain the cross-connect.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// The OCID of the cross-connect group to put this cross-connect in.
        /// </summary>
        [Input("crossConnectGroupId")]
        public Input<string>? CrossConnectGroupId { get; set; }

        /// <summary>
        /// (Updatable) A reference name or identifier for the physical fiber connection that this cross-connect uses.
        /// </summary>
        [Input("customerReferenceName")]
        public Input<string>? CustomerReferenceName { get; set; }

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// If you already have an existing cross-connect or cross-connect group at this FastConnect location, and you want this new cross-connect to be on a different router (for the purposes of redundancy), provide the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of that existing cross-connect or cross-connect group.
        /// </summary>
        [Input("farCrossConnectOrCrossConnectGroupId")]
        public Input<string>? FarCrossConnectOrCrossConnectGroupId { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) Set to true to activate the cross-connect. You activate it after the physical cabling is complete, and you've confirmed the cross-connect's light levels are good and your side of the interface is up. Activation indicates to Oracle that the physical connection is ready.
        /// </summary>
        [Input("isActive")]
        public Input<bool>? IsActive { get; set; }

        /// <summary>
        /// The name of the FastConnect location where this cross-connect will be installed. To get a list of the available locations, see [ListCrossConnectLocations](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CrossConnectLocation/ListCrossConnectLocations).  Example: `CyrusOne, Chandler, AZ`
        /// </summary>
        [Input("locationName")]
        public Input<string>? LocationName { get; set; }

        /// <summary>
        /// (Updatable) Properties used to configure MACsec (if capable).
        /// </summary>
        [Input("macsecProperties")]
        public Input<Inputs.CrossConnectMacsecPropertiesGetArgs>? MacsecProperties { get; set; }

        /// <summary>
        /// If you already have an existing cross-connect or cross-connect group at this FastConnect location, and you want this new cross-connect to be on the same router, provide the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of that existing cross-connect or cross-connect group.
        /// </summary>
        [Input("nearCrossConnectOrCrossConnectGroupId")]
        public Input<string>? NearCrossConnectOrCrossConnectGroupId { get; set; }

        /// <summary>
        /// The FastConnect device that terminates the logical connection. This device might be different than the device that terminates the physical connection.
        /// </summary>
        [Input("ociLogicalDeviceName")]
        public Input<string>? OciLogicalDeviceName { get; set; }

        /// <summary>
        /// The FastConnect device that terminates the physical connection.
        /// </summary>
        [Input("ociPhysicalDeviceName")]
        public Input<string>? OciPhysicalDeviceName { get; set; }

        /// <summary>
        /// A string identifying the meet-me room port for this cross-connect.
        /// </summary>
        [Input("portName")]
        public Input<string>? PortName { get; set; }

        /// <summary>
        /// The port speed for this cross-connect. To get a list of the available port speeds, see [ListCrossConnectPortSpeedShapes](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CrossConnectPortSpeedShape/ListCrossconnectPortSpeedShapes).  Example: `10 Gbps` 
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("portSpeedShapeName")]
        public Input<string>? PortSpeedShapeName { get; set; }

        /// <summary>
        /// The cross-connect's current state.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The date and time the cross-connect was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        public CrossConnectState()
        {
        }
        public static new CrossConnectState Empty => new CrossConnectState();
    }
}
