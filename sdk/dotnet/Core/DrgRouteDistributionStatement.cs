// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Core
{
    /// <summary>
    /// This resource provides the Drg Route Distribution Statement resource in Oracle Cloud Infrastructure Core service.
    /// 
    /// Adds one route distribution statement to the specified route distribution.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var testDrgRouteDistributionStatement = new Oci.Core.DrgRouteDistributionStatement("testDrgRouteDistributionStatement", new Oci.Core.DrgRouteDistributionStatementArgs
    ///         {
    ///             DrgRouteDistributionId = oci_core_drg_route_distribution.Test_drg_route_distribution.Id,
    ///             Action = @var.Drg_route_distribution_statement_statements_action,
    ///             MatchCriteria = new Oci.Core.Inputs.DrgRouteDistributionStatementMatchCriteriaArgs
    ///             {
    ///                 MatchType = @var.Drg_route_distribution_statement_statements_match_criteria_match_type,
    ///                 AttachmentType = @var.Drg_route_distribution_statement_statements_match_criteria_attachment_type,
    ///                 DrgAttachmentId = oci_core_drg_attachment.Test_drg_attachment.Id,
    ///             },
    ///             Priority = @var.Drg_route_distribution_statement_statements_priority,
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// DrgRouteDistributionStatement can be imported using the `id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import oci:Core/drgRouteDistributionStatement:DrgRouteDistributionStatement test_drg_route_distribution_statement "drgRouteDistributions/{drgRouteDistributionId}/statements/{id}"
    /// ```
    /// </summary>
    [OciResourceType("oci:Core/drgRouteDistributionStatement:DrgRouteDistributionStatement")]
    public partial class DrgRouteDistributionStatement : Pulumi.CustomResource
    {
        /// <summary>
        /// Accept: import/export the route "as is"
        /// </summary>
        [Output("action")]
        public Output<string> Action { get; private set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the route distribution.
        /// </summary>
        [Output("drgRouteDistributionId")]
        public Output<string> DrgRouteDistributionId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The action is applied only if all of the match criteria are met. MATCH_ALL match type implies any input is considered a match.
        /// </summary>
        [Output("matchCriteria")]
        public Output<Outputs.DrgRouteDistributionStatementMatchCriteria> MatchCriteria { get; private set; } = null!;

        /// <summary>
        /// (Updatable) This field is used to specify the priority of each statement in a route distribution. The priority will be represented as a number between 0 and 65535 where a lower number indicates a higher priority. When a route is processed, statements are applied in the order defined by their priority. The first matching rule dictates the action that will be taken on the route.
        /// </summary>
        [Output("priority")]
        public Output<int> Priority { get; private set; } = null!;


        /// <summary>
        /// Create a DrgRouteDistributionStatement resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DrgRouteDistributionStatement(string name, DrgRouteDistributionStatementArgs args, CustomResourceOptions? options = null)
            : base("oci:Core/drgRouteDistributionStatement:DrgRouteDistributionStatement", name, args ?? new DrgRouteDistributionStatementArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DrgRouteDistributionStatement(string name, Input<string> id, DrgRouteDistributionStatementState? state = null, CustomResourceOptions? options = null)
            : base("oci:Core/drgRouteDistributionStatement:DrgRouteDistributionStatement", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DrgRouteDistributionStatement resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DrgRouteDistributionStatement Get(string name, Input<string> id, DrgRouteDistributionStatementState? state = null, CustomResourceOptions? options = null)
        {
            return new DrgRouteDistributionStatement(name, id, state, options);
        }
    }

    public sealed class DrgRouteDistributionStatementArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Accept: import/export the route "as is"
        /// </summary>
        [Input("action", required: true)]
        public Input<string> Action { get; set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the route distribution.
        /// </summary>
        [Input("drgRouteDistributionId", required: true)]
        public Input<string> DrgRouteDistributionId { get; set; } = null!;

        /// <summary>
        /// (Updatable) The action is applied only if all of the match criteria are met. MATCH_ALL match type implies any input is considered a match.
        /// </summary>
        [Input("matchCriteria", required: true)]
        public Input<Inputs.DrgRouteDistributionStatementMatchCriteriaArgs> MatchCriteria { get; set; } = null!;

        /// <summary>
        /// (Updatable) This field is used to specify the priority of each statement in a route distribution. The priority will be represented as a number between 0 and 65535 where a lower number indicates a higher priority. When a route is processed, statements are applied in the order defined by their priority. The first matching rule dictates the action that will be taken on the route.
        /// </summary>
        [Input("priority", required: true)]
        public Input<int> Priority { get; set; } = null!;

        public DrgRouteDistributionStatementArgs()
        {
        }
    }

    public sealed class DrgRouteDistributionStatementState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Accept: import/export the route "as is"
        /// </summary>
        [Input("action")]
        public Input<string>? Action { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the route distribution.
        /// </summary>
        [Input("drgRouteDistributionId")]
        public Input<string>? DrgRouteDistributionId { get; set; }

        /// <summary>
        /// (Updatable) The action is applied only if all of the match criteria are met. MATCH_ALL match type implies any input is considered a match.
        /// </summary>
        [Input("matchCriteria")]
        public Input<Inputs.DrgRouteDistributionStatementMatchCriteriaGetArgs>? MatchCriteria { get; set; }

        /// <summary>
        /// (Updatable) This field is used to specify the priority of each statement in a route distribution. The priority will be represented as a number between 0 and 65535 where a lower number indicates a higher priority. When a route is processed, statements are applied in the order defined by their priority. The first matching rule dictates the action that will be taken on the route.
        /// </summary>
        [Input("priority")]
        public Input<int>? Priority { get; set; }

        public DrgRouteDistributionStatementState()
        {
        }
    }
}
