// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Core
{
    public static class GetAppCatalogListings
    {
        /// <summary>
        /// This data source provides the list of App Catalog Listings in Oracle Cloud Infrastructure Core service.
        /// 
        /// Lists the published listings.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAppCatalogListings = Oci.Core.GetAppCatalogListings.Invoke(new()
        ///     {
        ///         DisplayName = appCatalogListingDisplayName,
        ///         PublisherName = appCatalogListingPublisherName,
        ///         PublisherType = appCatalogListingPublisherType,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetAppCatalogListingsResult> InvokeAsync(GetAppCatalogListingsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAppCatalogListingsResult>("oci:Core/getAppCatalogListings:getAppCatalogListings", args ?? new GetAppCatalogListingsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of App Catalog Listings in Oracle Cloud Infrastructure Core service.
        /// 
        /// Lists the published listings.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAppCatalogListings = Oci.Core.GetAppCatalogListings.Invoke(new()
        ///     {
        ///         DisplayName = appCatalogListingDisplayName,
        ///         PublisherName = appCatalogListingPublisherName,
        ///         PublisherType = appCatalogListingPublisherType,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAppCatalogListingsResult> Invoke(GetAppCatalogListingsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAppCatalogListingsResult>("oci:Core/getAppCatalogListings:getAppCatalogListings", args ?? new GetAppCatalogListingsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAppCatalogListingsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A filter to return only resources that match the given display name exactly.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetAppCatalogListingsFilterArgs>? _filters;
        public List<Inputs.GetAppCatalogListingsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetAppCatalogListingsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only the publisher that matches the given publisher name exactly.
        /// </summary>
        [Input("publisherName")]
        public string? PublisherName { get; set; }

        /// <summary>
        /// A filter to return only publishers that match the given publisher type exactly. Valid types are OCI, ORACLE, TRUSTED, STANDARD.
        /// </summary>
        [Input("publisherType")]
        public string? PublisherType { get; set; }

        public GetAppCatalogListingsArgs()
        {
        }
        public static new GetAppCatalogListingsArgs Empty => new GetAppCatalogListingsArgs();
    }

    public sealed class GetAppCatalogListingsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A filter to return only resources that match the given display name exactly.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetAppCatalogListingsFilterInputArgs>? _filters;
        public InputList<Inputs.GetAppCatalogListingsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetAppCatalogListingsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only the publisher that matches the given publisher name exactly.
        /// </summary>
        [Input("publisherName")]
        public Input<string>? PublisherName { get; set; }

        /// <summary>
        /// A filter to return only publishers that match the given publisher type exactly. Valid types are OCI, ORACLE, TRUSTED, STANDARD.
        /// </summary>
        [Input("publisherType")]
        public Input<string>? PublisherType { get; set; }

        public GetAppCatalogListingsInvokeArgs()
        {
        }
        public static new GetAppCatalogListingsInvokeArgs Empty => new GetAppCatalogListingsInvokeArgs();
    }


    [OutputType]
    public sealed class GetAppCatalogListingsResult
    {
        /// <summary>
        /// The list of app_catalog_listings.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAppCatalogListingsAppCatalogListingResult> AppCatalogListings;
        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetAppCatalogListingsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the publisher who published this listing.
        /// </summary>
        public readonly string? PublisherName;
        public readonly string? PublisherType;

        [OutputConstructor]
        private GetAppCatalogListingsResult(
            ImmutableArray<Outputs.GetAppCatalogListingsAppCatalogListingResult> appCatalogListings,

            string? displayName,

            ImmutableArray<Outputs.GetAppCatalogListingsFilterResult> filters,

            string id,

            string? publisherName,

            string? publisherType)
        {
            AppCatalogListings = appCatalogListings;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            PublisherName = publisherName;
            PublisherType = publisherType;
        }
    }
}
