// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Core
{
    public static class GetBootVolumeReplicas
    {
        /// <summary>
        /// This data source provides the list of Boot Volume Replicas in Oracle Cloud Infrastructure Core service.
        /// 
        /// Lists the boot volume replicas in the specified compartment and availability domain.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testBootVolumeReplicas = Oci.Core.GetBootVolumeReplicas.Invoke(new()
        ///     {
        ///         AvailabilityDomain = @var.Boot_volume_replica_availability_domain,
        ///         CompartmentId = @var.Compartment_id,
        ///         DisplayName = @var.Boot_volume_replica_display_name,
        ///         State = @var.Boot_volume_replica_state,
        ///         VolumeGroupReplicaId = oci_core_volume_group_replica.Test_volume_group_replica.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetBootVolumeReplicasResult> InvokeAsync(GetBootVolumeReplicasArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetBootVolumeReplicasResult>("oci:Core/getBootVolumeReplicas:getBootVolumeReplicas", args ?? new GetBootVolumeReplicasArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Boot Volume Replicas in Oracle Cloud Infrastructure Core service.
        /// 
        /// Lists the boot volume replicas in the specified compartment and availability domain.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testBootVolumeReplicas = Oci.Core.GetBootVolumeReplicas.Invoke(new()
        ///     {
        ///         AvailabilityDomain = @var.Boot_volume_replica_availability_domain,
        ///         CompartmentId = @var.Compartment_id,
        ///         DisplayName = @var.Boot_volume_replica_display_name,
        ///         State = @var.Boot_volume_replica_state,
        ///         VolumeGroupReplicaId = oci_core_volume_group_replica.Test_volume_group_replica.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetBootVolumeReplicasResult> Invoke(GetBootVolumeReplicasInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetBootVolumeReplicasResult>("oci:Core/getBootVolumeReplicas:getBootVolumeReplicas", args ?? new GetBootVolumeReplicasInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBootVolumeReplicasArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the availability domain.  Example: `Uocm:PHX-AD-1`
        /// </summary>
        [Input("availabilityDomain")]
        public string? AvailabilityDomain { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given display name exactly.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetBootVolumeReplicasFilterArgs>? _filters;
        public List<Inputs.GetBootVolumeReplicasFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetBootVolumeReplicasFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the volume group replica.
        /// </summary>
        [Input("volumeGroupReplicaId")]
        public string? VolumeGroupReplicaId { get; set; }

        public GetBootVolumeReplicasArgs()
        {
        }
        public static new GetBootVolumeReplicasArgs Empty => new GetBootVolumeReplicasArgs();
    }

    public sealed class GetBootVolumeReplicasInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the availability domain.  Example: `Uocm:PHX-AD-1`
        /// </summary>
        [Input("availabilityDomain")]
        public Input<string>? AvailabilityDomain { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given display name exactly.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetBootVolumeReplicasFilterInputArgs>? _filters;
        public InputList<Inputs.GetBootVolumeReplicasFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetBootVolumeReplicasFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the volume group replica.
        /// </summary>
        [Input("volumeGroupReplicaId")]
        public Input<string>? VolumeGroupReplicaId { get; set; }

        public GetBootVolumeReplicasInvokeArgs()
        {
        }
        public static new GetBootVolumeReplicasInvokeArgs Empty => new GetBootVolumeReplicasInvokeArgs();
    }


    [OutputType]
    public sealed class GetBootVolumeReplicasResult
    {
        /// <summary>
        /// The availability domain of the boot volume replica.  Example: `Uocm:PHX-AD-1`
        /// </summary>
        public readonly string? AvailabilityDomain;
        /// <summary>
        /// The list of boot_volume_replicas.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBootVolumeReplicasBootVolumeReplicaResult> BootVolumeReplicas;
        /// <summary>
        /// The OCID of the compartment that contains the boot volume replica.
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetBootVolumeReplicasFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The current state of a boot volume replica.
        /// </summary>
        public readonly string? State;
        public readonly string? VolumeGroupReplicaId;

        [OutputConstructor]
        private GetBootVolumeReplicasResult(
            string? availabilityDomain,

            ImmutableArray<Outputs.GetBootVolumeReplicasBootVolumeReplicaResult> bootVolumeReplicas,

            string? compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetBootVolumeReplicasFilterResult> filters,

            string id,

            string? state,

            string? volumeGroupReplicaId)
        {
            AvailabilityDomain = availabilityDomain;
            BootVolumeReplicas = bootVolumeReplicas;
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            State = state;
            VolumeGroupReplicaId = volumeGroupReplicaId;
        }
    }
}
