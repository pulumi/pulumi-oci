// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Core
{
    public static class GetComputeGpuMemoryFabric
    {
        /// <summary>
        /// This data source provides details about a specific Compute Gpu Memory Fabric resource in Oracle Cloud Infrastructure Core service.
        /// 
        /// Gets information about the specified compute GPU memory fabric
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testComputeGpuMemoryFabric = Oci.Core.GetComputeGpuMemoryFabric.Invoke(new()
        ///     {
        ///         ComputeGpuMemoryFabricId = testComputeGpuMemoryFabricOciCoreComputeGpuMemoryFabric.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetComputeGpuMemoryFabricResult> InvokeAsync(GetComputeGpuMemoryFabricArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetComputeGpuMemoryFabricResult>("oci:Core/getComputeGpuMemoryFabric:getComputeGpuMemoryFabric", args ?? new GetComputeGpuMemoryFabricArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Compute Gpu Memory Fabric resource in Oracle Cloud Infrastructure Core service.
        /// 
        /// Gets information about the specified compute GPU memory fabric
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testComputeGpuMemoryFabric = Oci.Core.GetComputeGpuMemoryFabric.Invoke(new()
        ///     {
        ///         ComputeGpuMemoryFabricId = testComputeGpuMemoryFabricOciCoreComputeGpuMemoryFabric.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetComputeGpuMemoryFabricResult> Invoke(GetComputeGpuMemoryFabricInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetComputeGpuMemoryFabricResult>("oci:Core/getComputeGpuMemoryFabric:getComputeGpuMemoryFabric", args ?? new GetComputeGpuMemoryFabricInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Compute Gpu Memory Fabric resource in Oracle Cloud Infrastructure Core service.
        /// 
        /// Gets information about the specified compute GPU memory fabric
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testComputeGpuMemoryFabric = Oci.Core.GetComputeGpuMemoryFabric.Invoke(new()
        ///     {
        ///         ComputeGpuMemoryFabricId = testComputeGpuMemoryFabricOciCoreComputeGpuMemoryFabric.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetComputeGpuMemoryFabricResult> Invoke(GetComputeGpuMemoryFabricInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetComputeGpuMemoryFabricResult>("oci:Core/getComputeGpuMemoryFabric:getComputeGpuMemoryFabric", args ?? new GetComputeGpuMemoryFabricInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetComputeGpuMemoryFabricArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compute GPU memory fabric.
        /// </summary>
        [Input("computeGpuMemoryFabricId", required: true)]
        public string ComputeGpuMemoryFabricId { get; set; } = null!;

        public GetComputeGpuMemoryFabricArgs()
        {
        }
        public static new GetComputeGpuMemoryFabricArgs Empty => new GetComputeGpuMemoryFabricArgs();
    }

    public sealed class GetComputeGpuMemoryFabricInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compute GPU memory fabric.
        /// </summary>
        [Input("computeGpuMemoryFabricId", required: true)]
        public Input<string> ComputeGpuMemoryFabricId { get; set; } = null!;

        public GetComputeGpuMemoryFabricInvokeArgs()
        {
        }
        public static new GetComputeGpuMemoryFabricInvokeArgs Empty => new GetComputeGpuMemoryFabricInvokeArgs();
    }


    [OutputType]
    public sealed class GetComputeGpuMemoryFabricResult
    {
        /// <summary>
        /// Additional data that can be exposed to the customer. Right now it will include the switch tray ids.
        /// </summary>
        public readonly ImmutableDictionary<string, string> AdditionalData;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the compartment. This should always be the root compartment.
        /// </summary>
        public readonly string CompartmentId;
        public readonly string ComputeGpuMemoryFabricId;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for Customer-unique HPC Island
        /// </summary>
        public readonly string ComputeHpcIslandId;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for Customer-unique Local Block
        /// </summary>
        public readonly string ComputeLocalBlockId;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for Customer-unique Network Block
        /// </summary>
        public readonly string ComputeNetworkBlockId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// The health state of the GPU memory fabric
        /// </summary>
        public readonly string FabricHealth;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The total number of healthy bare metal hosts located in this compute GPU memory fabric.
        /// </summary>
        public readonly string HealthyHostCount;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the Customer-unique GPU memory fabric
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The lifecycle state of the GPU memory fabric
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// The date and time that the compute GPU memory fabric record was created, in the format defined by [RFC3339] (https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The total number of bare metal hosts located in this compute GPU memory fabric.
        /// </summary>
        public readonly string TotalHostCount;

        [OutputConstructor]
        private GetComputeGpuMemoryFabricResult(
            ImmutableDictionary<string, string> additionalData,

            string compartmentId,

            string computeGpuMemoryFabricId,

            string computeHpcIslandId,

            string computeLocalBlockId,

            string computeNetworkBlockId,

            ImmutableDictionary<string, string> definedTags,

            string displayName,

            string fabricHealth,

            ImmutableDictionary<string, string> freeformTags,

            string healthyHostCount,

            string id,

            string state,

            ImmutableDictionary<string, string> systemTags,

            string timeCreated,

            string totalHostCount)
        {
            AdditionalData = additionalData;
            CompartmentId = compartmentId;
            ComputeGpuMemoryFabricId = computeGpuMemoryFabricId;
            ComputeHpcIslandId = computeHpcIslandId;
            ComputeLocalBlockId = computeLocalBlockId;
            ComputeNetworkBlockId = computeNetworkBlockId;
            DefinedTags = definedTags;
            DisplayName = displayName;
            FabricHealth = fabricHealth;
            FreeformTags = freeformTags;
            HealthyHostCount = healthyHostCount;
            Id = id;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TotalHostCount = totalHostCount;
        }
    }
}
