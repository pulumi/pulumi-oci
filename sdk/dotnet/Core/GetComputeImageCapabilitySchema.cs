// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Core
{
    public static class GetComputeImageCapabilitySchema
    {
        /// <summary>
        /// This data source provides details about a specific Compute Image Capability Schema resource in Oracle Cloud Infrastructure Core service.
        /// 
        /// Gets the specified Compute Image Capability Schema
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testComputeImageCapabilitySchema = Oci.Core.GetComputeImageCapabilitySchema.Invoke(new()
        ///     {
        ///         ComputeImageCapabilitySchemaId = testComputeImageCapabilitySchemaOciCoreComputeImageCapabilitySchema.Id,
        ///         IsMergeEnabled = computeImageCapabilitySchemaIsMergeEnabled,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetComputeImageCapabilitySchemaResult> InvokeAsync(GetComputeImageCapabilitySchemaArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetComputeImageCapabilitySchemaResult>("oci:Core/getComputeImageCapabilitySchema:getComputeImageCapabilitySchema", args ?? new GetComputeImageCapabilitySchemaArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Compute Image Capability Schema resource in Oracle Cloud Infrastructure Core service.
        /// 
        /// Gets the specified Compute Image Capability Schema
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testComputeImageCapabilitySchema = Oci.Core.GetComputeImageCapabilitySchema.Invoke(new()
        ///     {
        ///         ComputeImageCapabilitySchemaId = testComputeImageCapabilitySchemaOciCoreComputeImageCapabilitySchema.Id,
        ///         IsMergeEnabled = computeImageCapabilitySchemaIsMergeEnabled,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetComputeImageCapabilitySchemaResult> Invoke(GetComputeImageCapabilitySchemaInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetComputeImageCapabilitySchemaResult>("oci:Core/getComputeImageCapabilitySchema:getComputeImageCapabilitySchema", args ?? new GetComputeImageCapabilitySchemaInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Compute Image Capability Schema resource in Oracle Cloud Infrastructure Core service.
        /// 
        /// Gets the specified Compute Image Capability Schema
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testComputeImageCapabilitySchema = Oci.Core.GetComputeImageCapabilitySchema.Invoke(new()
        ///     {
        ///         ComputeImageCapabilitySchemaId = testComputeImageCapabilitySchemaOciCoreComputeImageCapabilitySchema.Id,
        ///         IsMergeEnabled = computeImageCapabilitySchemaIsMergeEnabled,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetComputeImageCapabilitySchemaResult> Invoke(GetComputeImageCapabilitySchemaInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetComputeImageCapabilitySchemaResult>("oci:Core/getComputeImageCapabilitySchema:getComputeImageCapabilitySchema", args ?? new GetComputeImageCapabilitySchemaInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetComputeImageCapabilitySchemaArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the compute image capability schema or the image ocid
        /// </summary>
        [Input("computeImageCapabilitySchemaId", required: true)]
        public string ComputeImageCapabilitySchemaId { get; set; } = null!;

        /// <summary>
        /// Merge the image capability schema with the global image capability schema
        /// </summary>
        [Input("isMergeEnabled")]
        public string? IsMergeEnabled { get; set; }

        public GetComputeImageCapabilitySchemaArgs()
        {
        }
        public static new GetComputeImageCapabilitySchemaArgs Empty => new GetComputeImageCapabilitySchemaArgs();
    }

    public sealed class GetComputeImageCapabilitySchemaInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the compute image capability schema or the image ocid
        /// </summary>
        [Input("computeImageCapabilitySchemaId", required: true)]
        public Input<string> ComputeImageCapabilitySchemaId { get; set; } = null!;

        /// <summary>
        /// Merge the image capability schema with the global image capability schema
        /// </summary>
        [Input("isMergeEnabled")]
        public Input<string>? IsMergeEnabled { get; set; }

        public GetComputeImageCapabilitySchemaInvokeArgs()
        {
        }
        public static new GetComputeImageCapabilitySchemaInvokeArgs Empty => new GetComputeImageCapabilitySchemaInvokeArgs();
    }


    [OutputType]
    public sealed class GetComputeImageCapabilitySchemaResult
    {
        /// <summary>
        /// The OCID of the compartment containing the compute global image capability schema
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The ocid of the compute global image capability schema
        /// </summary>
        public readonly string ComputeGlobalImageCapabilitySchemaId;
        /// <summary>
        /// The name of the compute global image capability schema version
        /// </summary>
        public readonly string ComputeGlobalImageCapabilitySchemaVersionName;
        public readonly string ComputeImageCapabilitySchemaId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The compute image capability schema [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The OCID of the image associated with this compute image capability schema
        /// </summary>
        public readonly string ImageId;
        public readonly string? IsMergeEnabled;
        /// <summary>
        /// A mapping of each capability name to its ImageCapabilityDescriptor.
        /// </summary>
        public readonly ImmutableDictionary<string, string> SchemaData;
        /// <summary>
        /// The date and time the compute image capability schema was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        public readonly string TimeCreated;

        [OutputConstructor]
        private GetComputeImageCapabilitySchemaResult(
            string compartmentId,

            string computeGlobalImageCapabilitySchemaId,

            string computeGlobalImageCapabilitySchemaVersionName,

            string computeImageCapabilitySchemaId,

            ImmutableDictionary<string, string> definedTags,

            string displayName,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            string imageId,

            string? isMergeEnabled,

            ImmutableDictionary<string, string> schemaData,

            string timeCreated)
        {
            CompartmentId = compartmentId;
            ComputeGlobalImageCapabilitySchemaId = computeGlobalImageCapabilitySchemaId;
            ComputeGlobalImageCapabilitySchemaVersionName = computeGlobalImageCapabilitySchemaVersionName;
            ComputeImageCapabilitySchemaId = computeImageCapabilitySchemaId;
            DefinedTags = definedTags;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            ImageId = imageId;
            IsMergeEnabled = isMergeEnabled;
            SchemaData = schemaData;
            TimeCreated = timeCreated;
        }
    }
}
