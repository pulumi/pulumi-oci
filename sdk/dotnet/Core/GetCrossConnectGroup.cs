// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Core
{
    public static class GetCrossConnectGroup
    {
        /// <summary>
        /// This data source provides details about a specific Cross Connect Group resource in Oracle Cloud Infrastructure Core service.
        /// 
        /// Gets the specified cross-connect group's information.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testCrossConnectGroup = Oci.Core.GetCrossConnectGroup.Invoke(new()
        ///     {
        ///         CrossConnectGroupId = testCrossConnectGroupOciCoreCrossConnectGroup.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetCrossConnectGroupResult> InvokeAsync(GetCrossConnectGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCrossConnectGroupResult>("oci:Core/getCrossConnectGroup:getCrossConnectGroup", args ?? new GetCrossConnectGroupArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Cross Connect Group resource in Oracle Cloud Infrastructure Core service.
        /// 
        /// Gets the specified cross-connect group's information.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testCrossConnectGroup = Oci.Core.GetCrossConnectGroup.Invoke(new()
        ///     {
        ///         CrossConnectGroupId = testCrossConnectGroupOciCoreCrossConnectGroup.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetCrossConnectGroupResult> Invoke(GetCrossConnectGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCrossConnectGroupResult>("oci:Core/getCrossConnectGroup:getCrossConnectGroup", args ?? new GetCrossConnectGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCrossConnectGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cross-connect group.
        /// </summary>
        [Input("crossConnectGroupId", required: true)]
        public string CrossConnectGroupId { get; set; } = null!;

        public GetCrossConnectGroupArgs()
        {
        }
        public static new GetCrossConnectGroupArgs Empty => new GetCrossConnectGroupArgs();
    }

    public sealed class GetCrossConnectGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cross-connect group.
        /// </summary>
        [Input("crossConnectGroupId", required: true)]
        public Input<string> CrossConnectGroupId { get; set; } = null!;

        public GetCrossConnectGroupInvokeArgs()
        {
        }
        public static new GetCrossConnectGroupInvokeArgs Empty => new GetCrossConnectGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetCrossConnectGroupResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the cross-connect group.
        /// </summary>
        public readonly string CompartmentId;
        public readonly string CrossConnectGroupId;
        /// <summary>
        /// A reference name or identifier for the physical fiber connection that this cross-connect group uses.
        /// </summary>
        public readonly string CustomerReferenceName;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// The cross-connect group's Oracle ID (OCID).
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Properties used for MACsec (if capable).
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCrossConnectGroupMacsecPropertyResult> MacsecProperties;
        /// <summary>
        /// The FastConnect device that terminates the logical connection. This device might be different than the device that terminates the physical connection.
        /// </summary>
        public readonly string OciLogicalDeviceName;
        /// <summary>
        /// The FastConnect device that terminates the physical connection.
        /// </summary>
        public readonly string OciPhysicalDeviceName;
        /// <summary>
        /// The cross-connect group's current state.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The date and time the cross-connect group was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        public readonly string TimeCreated;

        [OutputConstructor]
        private GetCrossConnectGroupResult(
            string compartmentId,

            string crossConnectGroupId,

            string customerReferenceName,

            ImmutableDictionary<string, object> definedTags,

            string displayName,

            ImmutableDictionary<string, object> freeformTags,

            string id,

            ImmutableArray<Outputs.GetCrossConnectGroupMacsecPropertyResult> macsecProperties,

            string ociLogicalDeviceName,

            string ociPhysicalDeviceName,

            string state,

            string timeCreated)
        {
            CompartmentId = compartmentId;
            CrossConnectGroupId = crossConnectGroupId;
            CustomerReferenceName = customerReferenceName;
            DefinedTags = definedTags;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            MacsecProperties = macsecProperties;
            OciLogicalDeviceName = ociLogicalDeviceName;
            OciPhysicalDeviceName = ociPhysicalDeviceName;
            State = state;
            TimeCreated = timeCreated;
        }
    }
}
