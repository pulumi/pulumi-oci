// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Core
{
    public static class GetDedicatedVmHosts
    {
        /// <summary>
        /// This data source provides the list of Dedicated Vm Hosts in Oracle Cloud Infrastructure Core service.
        /// 
        /// Returns the list of dedicated virtual machine hosts that match the specified criteria in the specified compartment.
        /// 
        /// You can limit the list by specifying a dedicated virtual machine host display name. The list will include all the identically-named
        /// dedicated virtual machine hosts in the compartment.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDedicatedVmHosts = Oci.Core.GetDedicatedVmHosts.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         AvailabilityDomain = dedicatedVmHostAvailabilityDomain,
        ///         DisplayName = dedicatedVmHostDisplayName,
        ///         InstanceShapeName = dedicatedVmHostInstanceShapeName,
        ///         RemainingMemoryInGbsGreaterThanOrEqualTo = dedicatedVmHostRemainingMemoryInGbsGreaterThanOrEqualTo,
        ///         RemainingOcpusGreaterThanOrEqualTo = dedicatedVmHostRemainingOcpusGreaterThanOrEqualTo,
        ///         State = dedicatedVmHostState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetDedicatedVmHostsResult> InvokeAsync(GetDedicatedVmHostsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDedicatedVmHostsResult>("oci:Core/getDedicatedVmHosts:getDedicatedVmHosts", args ?? new GetDedicatedVmHostsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Dedicated Vm Hosts in Oracle Cloud Infrastructure Core service.
        /// 
        /// Returns the list of dedicated virtual machine hosts that match the specified criteria in the specified compartment.
        /// 
        /// You can limit the list by specifying a dedicated virtual machine host display name. The list will include all the identically-named
        /// dedicated virtual machine hosts in the compartment.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDedicatedVmHosts = Oci.Core.GetDedicatedVmHosts.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         AvailabilityDomain = dedicatedVmHostAvailabilityDomain,
        ///         DisplayName = dedicatedVmHostDisplayName,
        ///         InstanceShapeName = dedicatedVmHostInstanceShapeName,
        ///         RemainingMemoryInGbsGreaterThanOrEqualTo = dedicatedVmHostRemainingMemoryInGbsGreaterThanOrEqualTo,
        ///         RemainingOcpusGreaterThanOrEqualTo = dedicatedVmHostRemainingOcpusGreaterThanOrEqualTo,
        ///         State = dedicatedVmHostState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDedicatedVmHostsResult> Invoke(GetDedicatedVmHostsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDedicatedVmHostsResult>("oci:Core/getDedicatedVmHosts:getDedicatedVmHosts", args ?? new GetDedicatedVmHostsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDedicatedVmHostsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the availability domain.  Example: `Uocm:PHX-AD-1`
        /// </summary>
        [Input("availabilityDomain")]
        public string? AvailabilityDomain { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the given display name exactly.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetDedicatedVmHostsFilterArgs>? _filters;
        public List<Inputs.GetDedicatedVmHostsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetDedicatedVmHostsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The name for the instance's shape.
        /// </summary>
        [Input("instanceShapeName")]
        public string? InstanceShapeName { get; set; }

        /// <summary>
        /// The remaining memory of the dedicated VM host, in GBs.
        /// </summary>
        [Input("remainingMemoryInGbsGreaterThanOrEqualTo")]
        public double? RemainingMemoryInGbsGreaterThanOrEqualTo { get; set; }

        /// <summary>
        /// The available OCPUs of the dedicated VM host.
        /// </summary>
        [Input("remainingOcpusGreaterThanOrEqualTo")]
        public double? RemainingOcpusGreaterThanOrEqualTo { get; set; }

        /// <summary>
        /// A filter to only return resources that match the given lifecycle state.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetDedicatedVmHostsArgs()
        {
        }
        public static new GetDedicatedVmHostsArgs Empty => new GetDedicatedVmHostsArgs();
    }

    public sealed class GetDedicatedVmHostsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the availability domain.  Example: `Uocm:PHX-AD-1`
        /// </summary>
        [Input("availabilityDomain")]
        public Input<string>? AvailabilityDomain { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the given display name exactly.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetDedicatedVmHostsFilterInputArgs>? _filters;
        public InputList<Inputs.GetDedicatedVmHostsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetDedicatedVmHostsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The name for the instance's shape.
        /// </summary>
        [Input("instanceShapeName")]
        public Input<string>? InstanceShapeName { get; set; }

        /// <summary>
        /// The remaining memory of the dedicated VM host, in GBs.
        /// </summary>
        [Input("remainingMemoryInGbsGreaterThanOrEqualTo")]
        public Input<double>? RemainingMemoryInGbsGreaterThanOrEqualTo { get; set; }

        /// <summary>
        /// The available OCPUs of the dedicated VM host.
        /// </summary>
        [Input("remainingOcpusGreaterThanOrEqualTo")]
        public Input<double>? RemainingOcpusGreaterThanOrEqualTo { get; set; }

        /// <summary>
        /// A filter to only return resources that match the given lifecycle state.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetDedicatedVmHostsInvokeArgs()
        {
        }
        public static new GetDedicatedVmHostsInvokeArgs Empty => new GetDedicatedVmHostsInvokeArgs();
    }


    [OutputType]
    public sealed class GetDedicatedVmHostsResult
    {
        /// <summary>
        /// The availability domain the dedicated virtual machine host is running in.  Example: `Uocm:PHX-AD-1`
        /// </summary>
        public readonly string? AvailabilityDomain;
        /// <summary>
        /// The OCID of the compartment that contains the dedicated virtual machine host.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The list of dedicated_vm_hosts.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDedicatedVmHostsDedicatedVmHostResult> DedicatedVmHosts;
        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetDedicatedVmHostsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? InstanceShapeName;
        public readonly double? RemainingMemoryInGbsGreaterThanOrEqualTo;
        public readonly double? RemainingOcpusGreaterThanOrEqualTo;
        /// <summary>
        /// The current state of the dedicated VM host.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetDedicatedVmHostsResult(
            string? availabilityDomain,

            string compartmentId,

            ImmutableArray<Outputs.GetDedicatedVmHostsDedicatedVmHostResult> dedicatedVmHosts,

            string? displayName,

            ImmutableArray<Outputs.GetDedicatedVmHostsFilterResult> filters,

            string id,

            string? instanceShapeName,

            double? remainingMemoryInGbsGreaterThanOrEqualTo,

            double? remainingOcpusGreaterThanOrEqualTo,

            string? state)
        {
            AvailabilityDomain = availabilityDomain;
            CompartmentId = compartmentId;
            DedicatedVmHosts = dedicatedVmHosts;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            InstanceShapeName = instanceShapeName;
            RemainingMemoryInGbsGreaterThanOrEqualTo = remainingMemoryInGbsGreaterThanOrEqualTo;
            RemainingOcpusGreaterThanOrEqualTo = remainingOcpusGreaterThanOrEqualTo;
            State = state;
        }
    }
}
