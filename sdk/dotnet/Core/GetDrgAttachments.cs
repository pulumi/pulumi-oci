// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Core
{
    public static class GetDrgAttachments
    {
        /// <summary>
        /// This data source provides the list of Drg Attachments in Oracle Cloud Infrastructure Core service.
        /// 
        /// Lists the `DrgAttachment` resource for the specified compartment. You can filter the
        /// results by DRG, attached network, attachment type, DRG route table or
        /// VCN route table.
        /// 
        /// The LIST API lists DRG attachments by attachment type. It will default to list VCN attachments,
        /// but you may request to list ALL attachments of ALL types.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDrgAttachments = Oci.Core.GetDrgAttachments.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         AttachmentType = @var.Drg_attachment_attachment_type,
        ///         DisplayName = @var.Drg_attachment_display_name,
        ///         DrgId = oci_core_drg.Test_drg.Id,
        ///         DrgRouteTableId = oci_core_drg_route_table.Test_drg_route_table.Id,
        ///         NetworkId = oci_core_network.Test_network.Id,
        ///         State = @var.Drg_attachment_state,
        ///         VcnId = oci_core_vcn.Test_vcn.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetDrgAttachmentsResult> InvokeAsync(GetDrgAttachmentsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDrgAttachmentsResult>("oci:Core/getDrgAttachments:getDrgAttachments", args ?? new GetDrgAttachmentsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Drg Attachments in Oracle Cloud Infrastructure Core service.
        /// 
        /// Lists the `DrgAttachment` resource for the specified compartment. You can filter the
        /// results by DRG, attached network, attachment type, DRG route table or
        /// VCN route table.
        /// 
        /// The LIST API lists DRG attachments by attachment type. It will default to list VCN attachments,
        /// but you may request to list ALL attachments of ALL types.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDrgAttachments = Oci.Core.GetDrgAttachments.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         AttachmentType = @var.Drg_attachment_attachment_type,
        ///         DisplayName = @var.Drg_attachment_display_name,
        ///         DrgId = oci_core_drg.Test_drg.Id,
        ///         DrgRouteTableId = oci_core_drg_route_table.Test_drg_route_table.Id,
        ///         NetworkId = oci_core_network.Test_network.Id,
        ///         State = @var.Drg_attachment_state,
        ///         VcnId = oci_core_vcn.Test_vcn.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetDrgAttachmentsResult> Invoke(GetDrgAttachmentsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDrgAttachmentsResult>("oci:Core/getDrgAttachments:getDrgAttachments", args ?? new GetDrgAttachmentsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDrgAttachmentsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The type for the network resource attached to the DRG.
        /// </summary>
        [Input("attachmentType")]
        public string? AttachmentType { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the given display name exactly.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG.
        /// </summary>
        [Input("drgId")]
        public string? DrgId { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG route table assigned to the DRG attachment.
        /// </summary>
        [Input("drgRouteTableId")]
        public string? DrgRouteTableId { get; set; }

        [Input("filters")]
        private List<Inputs.GetDrgAttachmentsFilterArgs>? _filters;
        public List<Inputs.GetDrgAttachmentsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetDrgAttachmentsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource (virtual circuit, VCN, IPSec tunnel, or remote peering connection) attached to the DRG.
        /// </summary>
        [Input("networkId")]
        public string? NetworkId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the specified lifecycle state. The value is case insensitive.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN.
        /// </summary>
        [Input("vcnId")]
        public string? VcnId { get; set; }

        public GetDrgAttachmentsArgs()
        {
        }
        public static new GetDrgAttachmentsArgs Empty => new GetDrgAttachmentsArgs();
    }

    public sealed class GetDrgAttachmentsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The type for the network resource attached to the DRG.
        /// </summary>
        [Input("attachmentType")]
        public Input<string>? AttachmentType { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the given display name exactly.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG.
        /// </summary>
        [Input("drgId")]
        public Input<string>? DrgId { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG route table assigned to the DRG attachment.
        /// </summary>
        [Input("drgRouteTableId")]
        public Input<string>? DrgRouteTableId { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetDrgAttachmentsFilterInputArgs>? _filters;
        public InputList<Inputs.GetDrgAttachmentsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetDrgAttachmentsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource (virtual circuit, VCN, IPSec tunnel, or remote peering connection) attached to the DRG.
        /// </summary>
        [Input("networkId")]
        public Input<string>? NetworkId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the specified lifecycle state. The value is case insensitive.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN.
        /// </summary>
        [Input("vcnId")]
        public Input<string>? VcnId { get; set; }

        public GetDrgAttachmentsInvokeArgs()
        {
        }
        public static new GetDrgAttachmentsInvokeArgs Empty => new GetDrgAttachmentsInvokeArgs();
    }


    [OutputType]
    public sealed class GetDrgAttachmentsResult
    {
        public readonly string? AttachmentType;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the DRG attachment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// The list of drg_attachments.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDrgAttachmentsDrgAttachmentResult> DrgAttachments;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG.
        /// </summary>
        public readonly string? DrgId;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG route table that is assigned to this attachment.
        /// </summary>
        public readonly string? DrgRouteTableId;
        public readonly ImmutableArray<Outputs.GetDrgAttachmentsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string? Id;
        public readonly string? NetworkId;
        /// <summary>
        /// The DRG attachment's current state.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN. This field is deprecated. Instead, use the `networkDetails` field to view the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the attached resource.
        /// </summary>
        public readonly string? VcnId;

        [OutputConstructor]
        private GetDrgAttachmentsResult(
            string? attachmentType,

            string compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetDrgAttachmentsDrgAttachmentResult> drgAttachments,

            string? drgId,

            string? drgRouteTableId,

            ImmutableArray<Outputs.GetDrgAttachmentsFilterResult> filters,

            string? id,

            string? networkId,

            string? state,

            string? vcnId)
        {
            AttachmentType = attachmentType;
            CompartmentId = compartmentId;
            DisplayName = displayName;
            DrgAttachments = drgAttachments;
            DrgId = drgId;
            DrgRouteTableId = drgRouteTableId;
            Filters = filters;
            Id = id;
            NetworkId = networkId;
            State = state;
            VcnId = vcnId;
        }
    }
}
