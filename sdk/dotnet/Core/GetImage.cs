// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Core
{
    public static class GetImage
    {
        /// <summary>
        /// This data source provides details about a specific Image resource in Oracle Cloud Infrastructure Core service.
        /// 
        /// Gets the specified image.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testImage = Oci.Core.GetImage.Invoke(new()
        ///     {
        ///         ImageId = testImageOciCoreImage.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetImageResult> InvokeAsync(GetImageArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetImageResult>("oci:Core/getImage:getImage", args ?? new GetImageArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Image resource in Oracle Cloud Infrastructure Core service.
        /// 
        /// Gets the specified image.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testImage = Oci.Core.GetImage.Invoke(new()
        ///     {
        ///         ImageId = testImageOciCoreImage.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetImageResult> Invoke(GetImageInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetImageResult>("oci:Core/getImage:getImage", args ?? new GetImageInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Image resource in Oracle Cloud Infrastructure Core service.
        /// 
        /// Gets the specified image.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testImage = Oci.Core.GetImage.Invoke(new()
        ///     {
        ///         ImageId = testImageOciCoreImage.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetImageResult> Invoke(GetImageInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetImageResult>("oci:Core/getImage:getImage", args ?? new GetImageInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetImageArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the image.
        /// </summary>
        [Input("imageId", required: true)]
        public string ImageId { get; set; } = null!;

        public GetImageArgs()
        {
        }
        public static new GetImageArgs Empty => new GetImageArgs();
    }

    public sealed class GetImageInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the image.
        /// </summary>
        [Input("imageId", required: true)]
        public Input<string> ImageId { get; set; } = null!;

        public GetImageInvokeArgs()
        {
        }
        public static new GetImageInvokeArgs Empty => new GetImageInvokeArgs();
    }


    [OutputType]
    public sealed class GetImageResult
    {
        /// <summary>
        /// Oracle Cloud Agent features supported on the image.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetImageAgentFeatureResult> AgentFeatures;
        /// <summary>
        /// The OCID of the image originally used to launch the instance.
        /// </summary>
        public readonly string BaseImageId;
        /// <summary>
        /// The size of the internal storage for this image that is subject to billing (1 GB = 1,073,741,824 bytes).  Example: `100`
        /// </summary>
        public readonly string BillableSizeInGbs;
        /// <summary>
        /// The OCID of the compartment containing the instance you want to use as the basis for the image.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Whether instances launched with this image can be used to create new images. For example, you cannot create an image of an Oracle Database instance.  Example: `true`
        /// </summary>
        public readonly bool CreateImageAllowed;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// A user-friendly name for the image. It does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The OCID of the image.
        /// </summary>
        public readonly string Id;
        public readonly string ImageId;
        public readonly ImmutableArray<Outputs.GetImageImageSourceDetailResult> ImageSourceDetails;
        public readonly string InstanceId;
        /// <summary>
        /// Specifies the configuration mode for launching virtual machine (VM) instances. The configuration modes are:
        /// * `NATIVE` - VM instances launch with iSCSI boot and VFIO devices. The default value for platform images.
        /// * `EMULATED` - VM instances launch with emulated devices, such as the E1000 network driver and emulated SCSI disk controller.
        /// * `PARAVIRTUALIZED` - VM instances launch with paravirtualized devices using VirtIO drivers.
        /// * `CUSTOM` - VM instances launch with custom configuration settings specified in the `LaunchOptions` parameter.
        /// </summary>
        public readonly string LaunchMode;
        /// <summary>
        /// Options for tuning the compatibility and performance of VM shapes. The values that you specify override any default values.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetImageLaunchOptionResult> LaunchOptions;
        /// <summary>
        /// The listing type of the image. The default value is "NONE".
        /// </summary>
        public readonly string ListingType;
        /// <summary>
        /// The image's operating system.  Example: `Oracle Linux`
        /// </summary>
        public readonly string OperatingSystem;
        /// <summary>
        /// The image's operating system version.  Example: `7.2`
        /// </summary>
        public readonly string OperatingSystemVersion;
        /// <summary>
        /// The boot volume size for an instance launched from this image (1 MB = 1,048,576 bytes). Note this is not the same as the size of the image when it was exported or the actual size of the image.  Example: `47694`
        /// </summary>
        public readonly string SizeInMbs;
        /// <summary>
        /// The current state of the image.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The date and time the image was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        public readonly string TimeCreated;

        [OutputConstructor]
        private GetImageResult(
            ImmutableArray<Outputs.GetImageAgentFeatureResult> agentFeatures,

            string baseImageId,

            string billableSizeInGbs,

            string compartmentId,

            bool createImageAllowed,

            ImmutableDictionary<string, string> definedTags,

            string displayName,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            string imageId,

            ImmutableArray<Outputs.GetImageImageSourceDetailResult> imageSourceDetails,

            string instanceId,

            string launchMode,

            ImmutableArray<Outputs.GetImageLaunchOptionResult> launchOptions,

            string listingType,

            string operatingSystem,

            string operatingSystemVersion,

            string sizeInMbs,

            string state,

            string timeCreated)
        {
            AgentFeatures = agentFeatures;
            BaseImageId = baseImageId;
            BillableSizeInGbs = billableSizeInGbs;
            CompartmentId = compartmentId;
            CreateImageAllowed = createImageAllowed;
            DefinedTags = definedTags;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            ImageId = imageId;
            ImageSourceDetails = imageSourceDetails;
            InstanceId = instanceId;
            LaunchMode = launchMode;
            LaunchOptions = launchOptions;
            ListingType = listingType;
            OperatingSystem = operatingSystem;
            OperatingSystemVersion = operatingSystemVersion;
            SizeInMbs = sizeInMbs;
            State = state;
            TimeCreated = timeCreated;
        }
    }
}
