// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Core
{
    public static class GetInstanceDevices
    {
        /// <summary>
        /// This data source provides the list of Instance Devices in Oracle Cloud Infrastructure Core service.
        /// 
        /// Gets a list of all the devices for given instance. You can optionally filter results by device availability.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testInstanceDevices = Oci.Core.GetInstanceDevices.Invoke(new()
        ///     {
        ///         InstanceId = oci_core_instance.Test_instance.Id,
        ///         IsAvailable = @var.Instance_device_is_available,
        ///         Name = @var.Instance_device_name,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetInstanceDevicesResult> InvokeAsync(GetInstanceDevicesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetInstanceDevicesResult>("oci:Core/getInstanceDevices:getInstanceDevices", args ?? new GetInstanceDevicesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Instance Devices in Oracle Cloud Infrastructure Core service.
        /// 
        /// Gets a list of all the devices for given instance. You can optionally filter results by device availability.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testInstanceDevices = Oci.Core.GetInstanceDevices.Invoke(new()
        ///     {
        ///         InstanceId = oci_core_instance.Test_instance.Id,
        ///         IsAvailable = @var.Instance_device_is_available,
        ///         Name = @var.Instance_device_name,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetInstanceDevicesResult> Invoke(GetInstanceDevicesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetInstanceDevicesResult>("oci:Core/getInstanceDevices:getInstanceDevices", args ?? new GetInstanceDevicesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInstanceDevicesArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetInstanceDevicesFilterArgs>? _filters;
        public List<Inputs.GetInstanceDevicesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetInstanceDevicesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the instance.
        /// </summary>
        [Input("instanceId", required: true)]
        public string InstanceId { get; set; } = null!;

        /// <summary>
        /// A filter to return only available devices or only used devices.
        /// </summary>
        [Input("isAvailable")]
        public bool? IsAvailable { get; set; }

        /// <summary>
        /// A filter to return only devices that match the given name exactly.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        public GetInstanceDevicesArgs()
        {
        }
        public static new GetInstanceDevicesArgs Empty => new GetInstanceDevicesArgs();
    }

    public sealed class GetInstanceDevicesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetInstanceDevicesFilterInputArgs>? _filters;
        public InputList<Inputs.GetInstanceDevicesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetInstanceDevicesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the instance.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// A filter to return only available devices or only used devices.
        /// </summary>
        [Input("isAvailable")]
        public Input<bool>? IsAvailable { get; set; }

        /// <summary>
        /// A filter to return only devices that match the given name exactly.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetInstanceDevicesInvokeArgs()
        {
        }
        public static new GetInstanceDevicesInvokeArgs Empty => new GetInstanceDevicesInvokeArgs();
    }


    [OutputType]
    public sealed class GetInstanceDevicesResult
    {
        /// <summary>
        /// The list of devices.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInstanceDevicesDeviceResult> Devices;
        public readonly ImmutableArray<Outputs.GetInstanceDevicesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string InstanceId;
        /// <summary>
        /// The flag denoting whether device is available.
        /// </summary>
        public readonly bool? IsAvailable;
        /// <summary>
        /// The device name.
        /// </summary>
        public readonly string? Name;

        [OutputConstructor]
        private GetInstanceDevicesResult(
            ImmutableArray<Outputs.GetInstanceDevicesDeviceResult> devices,

            ImmutableArray<Outputs.GetInstanceDevicesFilterResult> filters,

            string id,

            string instanceId,

            bool? isAvailable,

            string? name)
        {
            Devices = devices;
            Filters = filters;
            Id = id;
            InstanceId = instanceId;
            IsAvailable = isAvailable;
            Name = name;
        }
    }
}
