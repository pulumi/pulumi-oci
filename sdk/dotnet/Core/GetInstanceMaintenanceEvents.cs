// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Core
{
    public static class GetInstanceMaintenanceEvents
    {
        /// <summary>
        /// This data source provides the list of Instance Maintenance Events in Oracle Cloud Infrastructure Core service.
        /// 
        /// Gets a list of all the maintenance events for the given instance.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testInstanceMaintenanceEvents = Oci.Core.GetInstanceMaintenanceEvents.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         CorrelationToken = instanceMaintenanceEventCorrelationToken,
        ///         InstanceAction = instanceMaintenanceEventInstanceAction,
        ///         InstanceId = testInstance.Id,
        ///         State = instanceMaintenanceEventState,
        ///         TimeWindowStartGreaterThanOrEqualTo = instanceMaintenanceEventTimeWindowStartGreaterThanOrEqualTo,
        ///         TimeWindowStartLessThanOrEqualTo = instanceMaintenanceEventTimeWindowStartLessThanOrEqualTo,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetInstanceMaintenanceEventsResult> InvokeAsync(GetInstanceMaintenanceEventsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetInstanceMaintenanceEventsResult>("oci:Core/getInstanceMaintenanceEvents:getInstanceMaintenanceEvents", args ?? new GetInstanceMaintenanceEventsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Instance Maintenance Events in Oracle Cloud Infrastructure Core service.
        /// 
        /// Gets a list of all the maintenance events for the given instance.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testInstanceMaintenanceEvents = Oci.Core.GetInstanceMaintenanceEvents.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         CorrelationToken = instanceMaintenanceEventCorrelationToken,
        ///         InstanceAction = instanceMaintenanceEventInstanceAction,
        ///         InstanceId = testInstance.Id,
        ///         State = instanceMaintenanceEventState,
        ///         TimeWindowStartGreaterThanOrEqualTo = instanceMaintenanceEventTimeWindowStartGreaterThanOrEqualTo,
        ///         TimeWindowStartLessThanOrEqualTo = instanceMaintenanceEventTimeWindowStartLessThanOrEqualTo,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetInstanceMaintenanceEventsResult> Invoke(GetInstanceMaintenanceEventsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetInstanceMaintenanceEventsResult>("oci:Core/getInstanceMaintenanceEvents:getInstanceMaintenanceEvents", args ?? new GetInstanceMaintenanceEventsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInstanceMaintenanceEventsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to only return resources that have a matching correlationToken.
        /// </summary>
        [Input("correlationToken")]
        public string? CorrelationToken { get; set; }

        [Input("filters")]
        private List<Inputs.GetInstanceMaintenanceEventsFilterArgs>? _filters;
        public List<Inputs.GetInstanceMaintenanceEventsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetInstanceMaintenanceEventsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to only return resources that match the given instance action.
        /// </summary>
        [Input("instanceAction")]
        public string? InstanceAction { get; set; }

        /// <summary>
        /// The OCID of the instance.
        /// </summary>
        [Input("instanceId")]
        public string? InstanceId { get; set; }

        /// <summary>
        /// A filter to only return resources that match the given lifecycle state.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        /// <summary>
        /// Starting range to return the maintenances which are not completed (date-time is in [RFC3339](https://tools.ietf.org/html/rfc3339) format).
        /// </summary>
        [Input("timeWindowStartGreaterThanOrEqualTo")]
        public string? TimeWindowStartGreaterThanOrEqualTo { get; set; }

        /// <summary>
        /// Ending range to return the maintenances which are not completed (date-time is in [RFC3339](https://tools.ietf.org/html/rfc3339) format).
        /// </summary>
        [Input("timeWindowStartLessThanOrEqualTo")]
        public string? TimeWindowStartLessThanOrEqualTo { get; set; }

        public GetInstanceMaintenanceEventsArgs()
        {
        }
        public static new GetInstanceMaintenanceEventsArgs Empty => new GetInstanceMaintenanceEventsArgs();
    }

    public sealed class GetInstanceMaintenanceEventsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to only return resources that have a matching correlationToken.
        /// </summary>
        [Input("correlationToken")]
        public Input<string>? CorrelationToken { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetInstanceMaintenanceEventsFilterInputArgs>? _filters;
        public InputList<Inputs.GetInstanceMaintenanceEventsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetInstanceMaintenanceEventsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to only return resources that match the given instance action.
        /// </summary>
        [Input("instanceAction")]
        public Input<string>? InstanceAction { get; set; }

        /// <summary>
        /// The OCID of the instance.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// A filter to only return resources that match the given lifecycle state.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// Starting range to return the maintenances which are not completed (date-time is in [RFC3339](https://tools.ietf.org/html/rfc3339) format).
        /// </summary>
        [Input("timeWindowStartGreaterThanOrEqualTo")]
        public Input<string>? TimeWindowStartGreaterThanOrEqualTo { get; set; }

        /// <summary>
        /// Ending range to return the maintenances which are not completed (date-time is in [RFC3339](https://tools.ietf.org/html/rfc3339) format).
        /// </summary>
        [Input("timeWindowStartLessThanOrEqualTo")]
        public Input<string>? TimeWindowStartLessThanOrEqualTo { get; set; }

        public GetInstanceMaintenanceEventsInvokeArgs()
        {
        }
        public static new GetInstanceMaintenanceEventsInvokeArgs Empty => new GetInstanceMaintenanceEventsInvokeArgs();
    }


    [OutputType]
    public sealed class GetInstanceMaintenanceEventsResult
    {
        /// <summary>
        /// The OCID of the compartment that contains the instance.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// A unique identifier that will group Instances that have a relationship with one another and must be scheduled together for the Maintenance to proceed. Any Instances that have a relationship with one another from a Maintenance perspective will have a matching correlationToken.
        /// </summary>
        public readonly string? CorrelationToken;
        public readonly ImmutableArray<Outputs.GetInstanceMaintenanceEventsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// This is the action that will be performed on the Instance by Oracle Cloud Infrastructure when the Maintenance begins.
        /// </summary>
        public readonly string? InstanceAction;
        /// <summary>
        /// The OCID of the instance.
        /// </summary>
        public readonly string? InstanceId;
        /// <summary>
        /// The list of instance_maintenance_events.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInstanceMaintenanceEventsInstanceMaintenanceEventResult> InstanceMaintenanceEvents;
        /// <summary>
        /// The current state of the maintenance event.
        /// </summary>
        public readonly string? State;
        public readonly string? TimeWindowStartGreaterThanOrEqualTo;
        public readonly string? TimeWindowStartLessThanOrEqualTo;

        [OutputConstructor]
        private GetInstanceMaintenanceEventsResult(
            string compartmentId,

            string? correlationToken,

            ImmutableArray<Outputs.GetInstanceMaintenanceEventsFilterResult> filters,

            string id,

            string? instanceAction,

            string? instanceId,

            ImmutableArray<Outputs.GetInstanceMaintenanceEventsInstanceMaintenanceEventResult> instanceMaintenanceEvents,

            string? state,

            string? timeWindowStartGreaterThanOrEqualTo,

            string? timeWindowStartLessThanOrEqualTo)
        {
            CompartmentId = compartmentId;
            CorrelationToken = correlationToken;
            Filters = filters;
            Id = id;
            InstanceAction = instanceAction;
            InstanceId = instanceId;
            InstanceMaintenanceEvents = instanceMaintenanceEvents;
            State = state;
            TimeWindowStartGreaterThanOrEqualTo = timeWindowStartGreaterThanOrEqualTo;
            TimeWindowStartLessThanOrEqualTo = timeWindowStartLessThanOrEqualTo;
        }
    }
}
