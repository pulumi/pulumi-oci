// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Core
{
    public static class GetInstancePools
    {
        /// <summary>
        /// This data source provides the list of Instance Pools in Oracle Cloud Infrastructure Core service.
        /// 
        /// Lists the instance pools in the specified compartment.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testInstancePools = Oci.Core.GetInstancePools.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         DisplayName = @var.Instance_pool_display_name,
        ///         State = @var.Instance_pool_state,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetInstancePoolsResult> InvokeAsync(GetInstancePoolsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetInstancePoolsResult>("oci:Core/getInstancePools:getInstancePools", args ?? new GetInstancePoolsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Instance Pools in Oracle Cloud Infrastructure Core service.
        /// 
        /// Lists the instance pools in the specified compartment.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testInstancePools = Oci.Core.GetInstancePools.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         DisplayName = @var.Instance_pool_display_name,
        ///         State = @var.Instance_pool_state,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetInstancePoolsResult> Invoke(GetInstancePoolsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetInstancePoolsResult>("oci:Core/getInstancePools:getInstancePools", args ?? new GetInstancePoolsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInstancePoolsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the given display name exactly.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetInstancePoolsFilterArgs>? _filters;
        public List<Inputs.GetInstancePoolsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetInstancePoolsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetInstancePoolsArgs()
        {
        }
        public static new GetInstancePoolsArgs Empty => new GetInstancePoolsArgs();
    }

    public sealed class GetInstancePoolsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the given display name exactly.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetInstancePoolsFilterInputArgs>? _filters;
        public InputList<Inputs.GetInstancePoolsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetInstancePoolsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetInstancePoolsInvokeArgs()
        {
        }
        public static new GetInstancePoolsInvokeArgs Empty => new GetInstancePoolsInvokeArgs();
    }


    [OutputType]
    public sealed class GetInstancePoolsResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the instance pool.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The display name of the VNIC. This is also used to match against the instance configuration defined secondary VNIC.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetInstancePoolsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of instance_pools.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInstancePoolsInstancePoolResult> InstancePools;
        /// <summary>
        /// The current state of the instance pool.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetInstancePoolsResult(
            string compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetInstancePoolsFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetInstancePoolsInstancePoolResult> instancePools,

            string? state)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            InstancePools = instancePools;
            State = state;
        }
    }
}
