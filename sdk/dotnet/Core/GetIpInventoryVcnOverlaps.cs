// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Core
{
    public static class GetIpInventoryVcnOverlaps
    {
        /// <summary>
        /// This data source provides the list of Ip Inventory Vcn Overlaps in Oracle Cloud Infrastructure Core service.
        /// 
        /// Gets the CIDR overlap information of the specified VCN in selected compartments. Specify the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testIpInventoryVcnOverlaps = Oci.Core.GetIpInventoryVcnOverlaps.Invoke(new()
        ///     {
        ///         CompartmentLists = ipInventoryVcnOverlapCompartmentList,
        ///         RegionLists = ipInventoryVcnOverlapRegionList,
        ///         VcnId = testVcn.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetIpInventoryVcnOverlapsResult> InvokeAsync(GetIpInventoryVcnOverlapsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIpInventoryVcnOverlapsResult>("oci:Core/getIpInventoryVcnOverlaps:getIpInventoryVcnOverlaps", args ?? new GetIpInventoryVcnOverlapsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Ip Inventory Vcn Overlaps in Oracle Cloud Infrastructure Core service.
        /// 
        /// Gets the CIDR overlap information of the specified VCN in selected compartments. Specify the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testIpInventoryVcnOverlaps = Oci.Core.GetIpInventoryVcnOverlaps.Invoke(new()
        ///     {
        ///         CompartmentLists = ipInventoryVcnOverlapCompartmentList,
        ///         RegionLists = ipInventoryVcnOverlapRegionList,
        ///         VcnId = testVcn.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetIpInventoryVcnOverlapsResult> Invoke(GetIpInventoryVcnOverlapsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIpInventoryVcnOverlapsResult>("oci:Core/getIpInventoryVcnOverlaps:getIpInventoryVcnOverlaps", args ?? new GetIpInventoryVcnOverlapsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Ip Inventory Vcn Overlaps in Oracle Cloud Infrastructure Core service.
        /// 
        /// Gets the CIDR overlap information of the specified VCN in selected compartments. Specify the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testIpInventoryVcnOverlaps = Oci.Core.GetIpInventoryVcnOverlaps.Invoke(new()
        ///     {
        ///         CompartmentLists = ipInventoryVcnOverlapCompartmentList,
        ///         RegionLists = ipInventoryVcnOverlapRegionList,
        ///         VcnId = testVcn.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetIpInventoryVcnOverlapsResult> Invoke(GetIpInventoryVcnOverlapsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetIpInventoryVcnOverlapsResult>("oci:Core/getIpInventoryVcnOverlaps:getIpInventoryVcnOverlaps", args ?? new GetIpInventoryVcnOverlapsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIpInventoryVcnOverlapsArgs : global::Pulumi.InvokeArgs
    {
        [Input("compartmentLists", required: true)]
        private List<string>? _compartmentLists;

        /// <summary>
        /// The list of [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartments.
        /// </summary>
        public List<string> CompartmentLists
        {
            get => _compartmentLists ?? (_compartmentLists = new List<string>());
            set => _compartmentLists = value;
        }

        [Input("filters")]
        private List<Inputs.GetIpInventoryVcnOverlapsFilterArgs>? _filters;
        public List<Inputs.GetIpInventoryVcnOverlapsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetIpInventoryVcnOverlapsFilterArgs>());
            set => _filters = value;
        }

        [Input("regionLists", required: true)]
        private List<string>? _regionLists;

        /// <summary>
        /// Lists the selected regions.
        /// </summary>
        public List<string> RegionLists
        {
            get => _regionLists ?? (_regionLists = new List<string>());
            set => _regionLists = value;
        }

        /// <summary>
        /// Specify the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN.
        /// </summary>
        [Input("vcnId", required: true)]
        public string VcnId { get; set; } = null!;

        public GetIpInventoryVcnOverlapsArgs()
        {
        }
        public static new GetIpInventoryVcnOverlapsArgs Empty => new GetIpInventoryVcnOverlapsArgs();
    }

    public sealed class GetIpInventoryVcnOverlapsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("compartmentLists", required: true)]
        private InputList<string>? _compartmentLists;

        /// <summary>
        /// The list of [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartments.
        /// </summary>
        public InputList<string> CompartmentLists
        {
            get => _compartmentLists ?? (_compartmentLists = new InputList<string>());
            set => _compartmentLists = value;
        }

        [Input("filters")]
        private InputList<Inputs.GetIpInventoryVcnOverlapsFilterInputArgs>? _filters;
        public InputList<Inputs.GetIpInventoryVcnOverlapsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetIpInventoryVcnOverlapsFilterInputArgs>());
            set => _filters = value;
        }

        [Input("regionLists", required: true)]
        private InputList<string>? _regionLists;

        /// <summary>
        /// Lists the selected regions.
        /// </summary>
        public InputList<string> RegionLists
        {
            get => _regionLists ?? (_regionLists = new InputList<string>());
            set => _regionLists = value;
        }

        /// <summary>
        /// Specify the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN.
        /// </summary>
        [Input("vcnId", required: true)]
        public Input<string> VcnId { get; set; } = null!;

        public GetIpInventoryVcnOverlapsInvokeArgs()
        {
        }
        public static new GetIpInventoryVcnOverlapsInvokeArgs Empty => new GetIpInventoryVcnOverlapsInvokeArgs();
    }


    [OutputType]
    public sealed class GetIpInventoryVcnOverlapsResult
    {
        public readonly ImmutableArray<string> CompartmentLists;
        public readonly ImmutableArray<Outputs.GetIpInventoryVcnOverlapsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Lists `IpInventoryVcnOverlapSummary` object.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetIpInventoryVcnOverlapsIpInventoryVcnOverlapSummaryResult> IpInventoryVcnOverlapSummaries;
        /// <summary>
        /// The timestamp of the latest update from the database in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        public readonly string LastUpdatedTimestamp;
        /// <summary>
        /// Indicates the status of the data.
        /// </summary>
        public readonly string Message;
        /// <summary>
        /// The overlap count for the given VCN and compartments.
        /// </summary>
        public readonly int OverlapCount;
        public readonly ImmutableArray<string> RegionLists;
        public readonly string VcnId;

        [OutputConstructor]
        private GetIpInventoryVcnOverlapsResult(
            ImmutableArray<string> compartmentLists,

            ImmutableArray<Outputs.GetIpInventoryVcnOverlapsFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetIpInventoryVcnOverlapsIpInventoryVcnOverlapSummaryResult> ipInventoryVcnOverlapSummaries,

            string lastUpdatedTimestamp,

            string message,

            int overlapCount,

            ImmutableArray<string> regionLists,

            string vcnId)
        {
            CompartmentLists = compartmentLists;
            Filters = filters;
            Id = id;
            IpInventoryVcnOverlapSummaries = ipInventoryVcnOverlapSummaries;
            LastUpdatedTimestamp = lastUpdatedTimestamp;
            Message = message;
            OverlapCount = overlapCount;
            RegionLists = regionLists;
            VcnId = vcnId;
        }
    }
}
