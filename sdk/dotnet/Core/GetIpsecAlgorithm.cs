// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Core
{
    public static class GetIpsecAlgorithm
    {
        /// <summary>
        /// This data source provides details about a specific Ipsec Algorithm resource in Oracle Cloud Infrastructure Core service.
        /// 
        /// The parameters allowed for IKE IPSec tunnels.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testIpsecAlgorithm = Oci.Core.GetIpsecAlgorithm.Invoke();
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetIpsecAlgorithmResult> InvokeAsync(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIpsecAlgorithmResult>("oci:Core/getIpsecAlgorithm:getIpsecAlgorithm", InvokeArgs.Empty, options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Ipsec Algorithm resource in Oracle Cloud Infrastructure Core service.
        /// 
        /// The parameters allowed for IKE IPSec tunnels.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testIpsecAlgorithm = Oci.Core.GetIpsecAlgorithm.Invoke();
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetIpsecAlgorithmResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIpsecAlgorithmResult>("oci:Core/getIpsecAlgorithm:getIpsecAlgorithm", InvokeArgs.Empty, options.WithDefaults());
    }


    [OutputType]
    public sealed class GetIpsecAlgorithmResult
    {
        /// <summary>
        /// Allowed phase one parameters.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetIpsecAlgorithmAllowedPhaseOneParameterResult> AllowedPhaseOneParameters;
        /// <summary>
        /// Allowed phase two parameters.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetIpsecAlgorithmAllowedPhaseTwoParameterResult> AllowedPhaseTwoParameters;
        /// <summary>
        /// Default phase one parameters.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetIpsecAlgorithmDefaultPhaseOneParameterResult> DefaultPhaseOneParameters;
        /// <summary>
        /// Default phase two parameters.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetIpsecAlgorithmDefaultPhaseTwoParameterResult> DefaultPhaseTwoParameters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string? Id;

        [OutputConstructor]
        private GetIpsecAlgorithmResult(
            ImmutableArray<Outputs.GetIpsecAlgorithmAllowedPhaseOneParameterResult> allowedPhaseOneParameters,

            ImmutableArray<Outputs.GetIpsecAlgorithmAllowedPhaseTwoParameterResult> allowedPhaseTwoParameters,

            ImmutableArray<Outputs.GetIpsecAlgorithmDefaultPhaseOneParameterResult> defaultPhaseOneParameters,

            ImmutableArray<Outputs.GetIpsecAlgorithmDefaultPhaseTwoParameterResult> defaultPhaseTwoParameters,

            string? id)
        {
            AllowedPhaseOneParameters = allowedPhaseOneParameters;
            AllowedPhaseTwoParameters = allowedPhaseTwoParameters;
            DefaultPhaseOneParameters = defaultPhaseOneParameters;
            DefaultPhaseTwoParameters = defaultPhaseTwoParameters;
            Id = id;
        }
    }
}
