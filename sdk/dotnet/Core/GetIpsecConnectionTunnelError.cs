// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Core
{
    public static class GetIpsecConnectionTunnelError
    {
        /// <summary>
        /// This data source provides details about a specific Ipsec Connection Tunnel Error resource in Oracle Cloud Infrastructure Core service.
        /// 
        /// Gets the identified error for the specified IPSec tunnel ID.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testIpsecConnectionTunnelError = Oci.Core.GetIpsecConnectionTunnelError.Invoke(new()
        ///     {
        ///         IpsecId = oci_core_ipsec.Test_ipsec.Id,
        ///         TunnelId = oci_core_tunnel.Test_tunnel.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetIpsecConnectionTunnelErrorResult> InvokeAsync(GetIpsecConnectionTunnelErrorArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIpsecConnectionTunnelErrorResult>("oci:Core/getIpsecConnectionTunnelError:getIpsecConnectionTunnelError", args ?? new GetIpsecConnectionTunnelErrorArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Ipsec Connection Tunnel Error resource in Oracle Cloud Infrastructure Core service.
        /// 
        /// Gets the identified error for the specified IPSec tunnel ID.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testIpsecConnectionTunnelError = Oci.Core.GetIpsecConnectionTunnelError.Invoke(new()
        ///     {
        ///         IpsecId = oci_core_ipsec.Test_ipsec.Id,
        ///         TunnelId = oci_core_tunnel.Test_tunnel.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetIpsecConnectionTunnelErrorResult> Invoke(GetIpsecConnectionTunnelErrorInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIpsecConnectionTunnelErrorResult>("oci:Core/getIpsecConnectionTunnelError:getIpsecConnectionTunnelError", args ?? new GetIpsecConnectionTunnelErrorInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIpsecConnectionTunnelErrorArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the IPSec connection.
        /// </summary>
        [Input("ipsecId", required: true)]
        public string IpsecId { get; set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tunnel.
        /// </summary>
        [Input("tunnelId", required: true)]
        public string TunnelId { get; set; } = null!;

        public GetIpsecConnectionTunnelErrorArgs()
        {
        }
        public static new GetIpsecConnectionTunnelErrorArgs Empty => new GetIpsecConnectionTunnelErrorArgs();
    }

    public sealed class GetIpsecConnectionTunnelErrorInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the IPSec connection.
        /// </summary>
        [Input("ipsecId", required: true)]
        public Input<string> IpsecId { get; set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tunnel.
        /// </summary>
        [Input("tunnelId", required: true)]
        public Input<string> TunnelId { get; set; } = null!;

        public GetIpsecConnectionTunnelErrorInvokeArgs()
        {
        }
        public static new GetIpsecConnectionTunnelErrorInvokeArgs Empty => new GetIpsecConnectionTunnelErrorInvokeArgs();
    }


    [OutputType]
    public sealed class GetIpsecConnectionTunnelErrorResult
    {
        /// <summary>
        /// Unique code describes the error type.
        /// </summary>
        public readonly string ErrorCode;
        /// <summary>
        /// A detailed description of the error.
        /// </summary>
        public readonly string ErrorDescription;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string IpsecId;
        /// <summary>
        /// Link to more Oracle resources or relevant documentation.
        /// </summary>
        public readonly string OciResourcesLink;
        /// <summary>
        /// Resolution for the error.
        /// </summary>
        public readonly string Solution;
        /// <summary>
        /// Timestamp when the error occurred.
        /// </summary>
        public readonly string Timestamp;
        public readonly string TunnelId;

        [OutputConstructor]
        private GetIpsecConnectionTunnelErrorResult(
            string errorCode,

            string errorDescription,

            string id,

            string ipsecId,

            string ociResourcesLink,

            string solution,

            string timestamp,

            string tunnelId)
        {
            ErrorCode = errorCode;
            ErrorDescription = errorDescription;
            Id = id;
            IpsecId = ipsecId;
            OciResourcesLink = ociResourcesLink;
            Solution = solution;
            Timestamp = timestamp;
            TunnelId = tunnelId;
        }
    }
}
