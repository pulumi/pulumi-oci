// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Core
{
    public static class GetIpsecConnectionTunnelRoutes
    {
        /// <summary>
        /// This data source provides the list of Ipsec Connection Tunnel Routes in Oracle Cloud Infrastructure Core service.
        /// 
        /// The routes advertised to the on-premises network and the routes received from the on-premises network.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testIpsecConnectionTunnelRoutes = Oci.Core.GetIpsecConnectionTunnelRoutes.Invoke(new()
        ///     {
        ///         IpsecId = oci_core_ipsec.Test_ipsec.Id,
        ///         TunnelId = oci_core_tunnel.Test_tunnel.Id,
        ///         Advertiser = @var.Ipsec_connection_tunnel_route_advertiser,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetIpsecConnectionTunnelRoutesResult> InvokeAsync(GetIpsecConnectionTunnelRoutesArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetIpsecConnectionTunnelRoutesResult>("oci:Core/getIpsecConnectionTunnelRoutes:getIpsecConnectionTunnelRoutes", args ?? new GetIpsecConnectionTunnelRoutesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Ipsec Connection Tunnel Routes in Oracle Cloud Infrastructure Core service.
        /// 
        /// The routes advertised to the on-premises network and the routes received from the on-premises network.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testIpsecConnectionTunnelRoutes = Oci.Core.GetIpsecConnectionTunnelRoutes.Invoke(new()
        ///     {
        ///         IpsecId = oci_core_ipsec.Test_ipsec.Id,
        ///         TunnelId = oci_core_tunnel.Test_tunnel.Id,
        ///         Advertiser = @var.Ipsec_connection_tunnel_route_advertiser,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetIpsecConnectionTunnelRoutesResult> Invoke(GetIpsecConnectionTunnelRoutesInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetIpsecConnectionTunnelRoutesResult>("oci:Core/getIpsecConnectionTunnelRoutes:getIpsecConnectionTunnelRoutes", args ?? new GetIpsecConnectionTunnelRoutesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIpsecConnectionTunnelRoutesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specifies the advertiser of the routes. If set to `ORACLE`, this returns only the routes advertised by Oracle. When set to `CUSTOMER`, this returns only the routes advertised by the CPE.
        /// </summary>
        [Input("advertiser")]
        public string? Advertiser { get; set; }

        [Input("filters")]
        private List<Inputs.GetIpsecConnectionTunnelRoutesFilterArgs>? _filters;
        public List<Inputs.GetIpsecConnectionTunnelRoutesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetIpsecConnectionTunnelRoutesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the IPSec connection.
        /// </summary>
        [Input("ipsecId", required: true)]
        public string IpsecId { get; set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tunnel.
        /// </summary>
        [Input("tunnelId", required: true)]
        public string TunnelId { get; set; } = null!;

        public GetIpsecConnectionTunnelRoutesArgs()
        {
        }
        public static new GetIpsecConnectionTunnelRoutesArgs Empty => new GetIpsecConnectionTunnelRoutesArgs();
    }

    public sealed class GetIpsecConnectionTunnelRoutesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specifies the advertiser of the routes. If set to `ORACLE`, this returns only the routes advertised by Oracle. When set to `CUSTOMER`, this returns only the routes advertised by the CPE.
        /// </summary>
        [Input("advertiser")]
        public Input<string>? Advertiser { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetIpsecConnectionTunnelRoutesFilterInputArgs>? _filters;
        public InputList<Inputs.GetIpsecConnectionTunnelRoutesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetIpsecConnectionTunnelRoutesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the IPSec connection.
        /// </summary>
        [Input("ipsecId", required: true)]
        public Input<string> IpsecId { get; set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tunnel.
        /// </summary>
        [Input("tunnelId", required: true)]
        public Input<string> TunnelId { get; set; } = null!;

        public GetIpsecConnectionTunnelRoutesInvokeArgs()
        {
        }
        public static new GetIpsecConnectionTunnelRoutesInvokeArgs Empty => new GetIpsecConnectionTunnelRoutesInvokeArgs();
    }


    [OutputType]
    public sealed class GetIpsecConnectionTunnelRoutesResult
    {
        /// <summary>
        /// The source of the route advertisement.
        /// </summary>
        public readonly string? Advertiser;
        public readonly ImmutableArray<Outputs.GetIpsecConnectionTunnelRoutesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string IpsecId;
        public readonly string TunnelId;
        /// <summary>
        /// The list of tunnel_routes.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetIpsecConnectionTunnelRoutesTunnelRouteResult> TunnelRoutes;

        [OutputConstructor]
        private GetIpsecConnectionTunnelRoutesResult(
            string? advertiser,

            ImmutableArray<Outputs.GetIpsecConnectionTunnelRoutesFilterResult> filters,

            string id,

            string ipsecId,

            string tunnelId,

            ImmutableArray<Outputs.GetIpsecConnectionTunnelRoutesTunnelRouteResult> tunnelRoutes)
        {
            Advertiser = advertiser;
            Filters = filters;
            Id = id;
            IpsecId = ipsecId;
            TunnelId = tunnelId;
            TunnelRoutes = tunnelRoutes;
        }
    }
}
