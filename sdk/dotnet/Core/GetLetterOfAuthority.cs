// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Core
{
    public static class GetLetterOfAuthority
    {
        /// <summary>
        /// This data source provides details about a specific Letter Of Authority resource in Oracle Cloud Infrastructure Core service.
        /// 
        /// Gets the Letter of Authority for the specified cross-connect.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testLetterOfAuthority = Oci.Core.GetLetterOfAuthority.Invoke(new()
        ///     {
        ///         CrossConnectId = testCrossConnect.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetLetterOfAuthorityResult> InvokeAsync(GetLetterOfAuthorityArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLetterOfAuthorityResult>("oci:Core/getLetterOfAuthority:getLetterOfAuthority", args ?? new GetLetterOfAuthorityArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Letter Of Authority resource in Oracle Cloud Infrastructure Core service.
        /// 
        /// Gets the Letter of Authority for the specified cross-connect.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testLetterOfAuthority = Oci.Core.GetLetterOfAuthority.Invoke(new()
        ///     {
        ///         CrossConnectId = testCrossConnect.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetLetterOfAuthorityResult> Invoke(GetLetterOfAuthorityInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLetterOfAuthorityResult>("oci:Core/getLetterOfAuthority:getLetterOfAuthority", args ?? new GetLetterOfAuthorityInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Letter Of Authority resource in Oracle Cloud Infrastructure Core service.
        /// 
        /// Gets the Letter of Authority for the specified cross-connect.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testLetterOfAuthority = Oci.Core.GetLetterOfAuthority.Invoke(new()
        ///     {
        ///         CrossConnectId = testCrossConnect.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetLetterOfAuthorityResult> Invoke(GetLetterOfAuthorityInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetLetterOfAuthorityResult>("oci:Core/getLetterOfAuthority:getLetterOfAuthority", args ?? new GetLetterOfAuthorityInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLetterOfAuthorityArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cross-connect.
        /// </summary>
        [Input("crossConnectId", required: true)]
        public string CrossConnectId { get; set; } = null!;

        public GetLetterOfAuthorityArgs()
        {
        }
        public static new GetLetterOfAuthorityArgs Empty => new GetLetterOfAuthorityArgs();
    }

    public sealed class GetLetterOfAuthorityInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cross-connect.
        /// </summary>
        [Input("crossConnectId", required: true)]
        public Input<string> CrossConnectId { get; set; } = null!;

        public GetLetterOfAuthorityInvokeArgs()
        {
        }
        public static new GetLetterOfAuthorityInvokeArgs Empty => new GetLetterOfAuthorityInvokeArgs();
    }


    [OutputType]
    public sealed class GetLetterOfAuthorityResult
    {
        /// <summary>
        /// The name of the entity authorized by this Letter of Authority.
        /// </summary>
        public readonly string AuthorizedEntityName;
        /// <summary>
        /// The type of cross-connect fiber, termination, and optical specification.
        /// </summary>
        public readonly string CircuitType;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cross-connect.
        /// </summary>
        public readonly string CrossConnectId;
        /// <summary>
        /// The address of the FastConnect location.
        /// </summary>
        public readonly string FacilityLocation;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The meet-me room port for this cross-connect.
        /// </summary>
        public readonly string PortName;
        /// <summary>
        /// The date and time when the Letter of Authority expires, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        public readonly string TimeExpires;
        /// <summary>
        /// The date and time the Letter of Authority was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        public readonly string TimeIssued;

        [OutputConstructor]
        private GetLetterOfAuthorityResult(
            string authorizedEntityName,

            string circuitType,

            string crossConnectId,

            string facilityLocation,

            string id,

            string portName,

            string timeExpires,

            string timeIssued)
        {
            AuthorizedEntityName = authorizedEntityName;
            CircuitType = circuitType;
            CrossConnectId = crossConnectId;
            FacilityLocation = facilityLocation;
            Id = id;
            PortName = portName;
            TimeExpires = timeExpires;
            TimeIssued = timeIssued;
        }
    }
}
