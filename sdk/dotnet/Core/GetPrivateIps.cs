// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Core
{
    public static class GetPrivateIps
    {
        /// <summary>
        /// This data source provides the list of Private Ips in Oracle Cloud Infrastructure Core service.
        /// 
        /// Lists the [PrivateIp](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/PrivateIp/) objects based
        /// on one of these filters:
        /// 
        ///   - Subnet [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        ///   - VNIC [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        ///   - Both private IP address and subnet OCID: This lets
        ///   you get a `privateIP` object based on its private IP
        ///   address (for example, 10.0.3.3) and not its [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). For comparison,
        ///   [GetPrivateIp](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/PrivateIp/GetPrivateIp)
        ///   requires the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// 
        /// If you're listing all the private IPs associated with a given subnet
        /// or VNIC, the response includes both primary and secondary private IPs.
        /// 
        /// If you are an Oracle Cloud VMware Solution customer and have VLANs
        /// in your VCN, you can filter the list by VLAN [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). See [Vlan](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Vlan).
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testPrivateIpsBySubnet = Oci.Core.GetPrivateIps.Invoke(new()
        ///     {
        ///         SubnetId = @var.Private_ip_subnet_id,
        ///     });
        /// 
        /// });
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testPrivateIpsByVnic = Oci.Core.GetPrivateIps.Invoke(new()
        ///     {
        ///         VnicId = oci_core_vnic.Test_vnic.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testPrivateIpsByIpAddress = Oci.Core.GetPrivateIps.Invoke(new()
        ///     {
        ///         IpAddress = @var.Private_ip_ip_address,
        ///         SubnetId = oci_core_subnet.Test_subnet.Id,
        ///         VlanId = oci_core_vlan.Test_vlan.Id,
        ///         VnicId = oci_core_vnic_attachment.Test_vnic_attachment.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetPrivateIpsResult> InvokeAsync(GetPrivateIpsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPrivateIpsResult>("oci:Core/getPrivateIps:getPrivateIps", args ?? new GetPrivateIpsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Private Ips in Oracle Cloud Infrastructure Core service.
        /// 
        /// Lists the [PrivateIp](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/PrivateIp/) objects based
        /// on one of these filters:
        /// 
        ///   - Subnet [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        ///   - VNIC [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        ///   - Both private IP address and subnet OCID: This lets
        ///   you get a `privateIP` object based on its private IP
        ///   address (for example, 10.0.3.3) and not its [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). For comparison,
        ///   [GetPrivateIp](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/PrivateIp/GetPrivateIp)
        ///   requires the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// 
        /// If you're listing all the private IPs associated with a given subnet
        /// or VNIC, the response includes both primary and secondary private IPs.
        /// 
        /// If you are an Oracle Cloud VMware Solution customer and have VLANs
        /// in your VCN, you can filter the list by VLAN [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). See [Vlan](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Vlan).
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testPrivateIpsBySubnet = Oci.Core.GetPrivateIps.Invoke(new()
        ///     {
        ///         SubnetId = @var.Private_ip_subnet_id,
        ///     });
        /// 
        /// });
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testPrivateIpsByVnic = Oci.Core.GetPrivateIps.Invoke(new()
        ///     {
        ///         VnicId = oci_core_vnic.Test_vnic.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testPrivateIpsByIpAddress = Oci.Core.GetPrivateIps.Invoke(new()
        ///     {
        ///         IpAddress = @var.Private_ip_ip_address,
        ///         SubnetId = oci_core_subnet.Test_subnet.Id,
        ///         VlanId = oci_core_vlan.Test_vlan.Id,
        ///         VnicId = oci_core_vnic_attachment.Test_vnic_attachment.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetPrivateIpsResult> Invoke(GetPrivateIpsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPrivateIpsResult>("oci:Core/getPrivateIps:getPrivateIps", args ?? new GetPrivateIpsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPrivateIpsArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetPrivateIpsFilterArgs>? _filters;
        public List<Inputs.GetPrivateIpsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetPrivateIpsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// An IP address. This could be either IPv4 or IPv6, depending on the resource. Example: `10.0.3.3`
        /// </summary>
        [Input("ipAddress")]
        public string? IpAddress { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet.
        /// </summary>
        [Input("subnetId")]
        public string? SubnetId { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN.
        /// </summary>
        [Input("vlanId")]
        public string? VlanId { get; set; }

        /// <summary>
        /// The OCID of the VNIC.
        /// </summary>
        [Input("vnicId")]
        public string? VnicId { get; set; }

        public GetPrivateIpsArgs()
        {
        }
        public static new GetPrivateIpsArgs Empty => new GetPrivateIpsArgs();
    }

    public sealed class GetPrivateIpsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetPrivateIpsFilterInputArgs>? _filters;
        public InputList<Inputs.GetPrivateIpsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetPrivateIpsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// An IP address. This could be either IPv4 or IPv6, depending on the resource. Example: `10.0.3.3`
        /// </summary>
        [Input("ipAddress")]
        public Input<string>? IpAddress { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN.
        /// </summary>
        [Input("vlanId")]
        public Input<string>? VlanId { get; set; }

        /// <summary>
        /// The OCID of the VNIC.
        /// </summary>
        [Input("vnicId")]
        public Input<string>? VnicId { get; set; }

        public GetPrivateIpsInvokeArgs()
        {
        }
        public static new GetPrivateIpsInvokeArgs Empty => new GetPrivateIpsInvokeArgs();
    }


    [OutputType]
    public sealed class GetPrivateIpsResult
    {
        public readonly ImmutableArray<Outputs.GetPrivateIpsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The private IP address of the `privateIp` object. The address is within the CIDR of the VNIC's subnet.
        /// </summary>
        public readonly string? IpAddress;
        /// <summary>
        /// The list of private_ips.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPrivateIpsPrivateIpResult> PrivateIps;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet the VNIC is in.
        /// </summary>
        public readonly string? SubnetId;
        /// <summary>
        /// Applicable only if the `PrivateIp` object is being used with a VLAN as part of the Oracle Cloud VMware Solution. The `vlanId` is the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN. See [Vlan](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Vlan).
        /// </summary>
        public readonly string? VlanId;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VNIC the private IP is assigned to. The VNIC and private IP must be in the same subnet. However, if the `PrivateIp` object is being used with a VLAN as part of the Oracle Cloud VMware Solution, the `vnicId` is null.
        /// </summary>
        public readonly string? VnicId;

        [OutputConstructor]
        private GetPrivateIpsResult(
            ImmutableArray<Outputs.GetPrivateIpsFilterResult> filters,

            string id,

            string? ipAddress,

            ImmutableArray<Outputs.GetPrivateIpsPrivateIpResult> privateIps,

            string? subnetId,

            string? vlanId,

            string? vnicId)
        {
            Filters = filters;
            Id = id;
            IpAddress = ipAddress;
            PrivateIps = privateIps;
            SubnetId = subnetId;
            VlanId = vlanId;
            VnicId = vnicId;
        }
    }
}
