// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Core
{
    public static class GetPublicIp
    {
        /// <summary>
        /// This data source provides details about a specific Public Ip resource in Oracle Cloud Infrastructure Core service.
        /// 
        /// Gets the specified public IP. You must specify the object's [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// 
        /// Alternatively, you can get the object by using [GetPublicIpByIpAddress](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/PublicIp/GetPublicIpByIpAddress)
        /// with the public IP address (for example, 203.0.113.2).
        /// 
        /// Or you can use [GetPublicIpByPrivateIpId](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/PublicIp/GetPublicIpByPrivateIpId)
        /// with the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the private IP that the public IP is assigned to.
        /// 
        /// **Note:** If you're fetching a reserved public IP that is in the process of being
        /// moved to a different private IP, the service returns the public IP object with
        /// `lifecycleState` = ASSIGNING and `assignedEntityId` = [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the target private IP.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ### Get a public ip by public ip id
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOciCorePublicIpById = Oci.Core.GetPublicIp.Invoke(new()
        ///     {
        ///         Id = testPublicIpId,
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ### Get a public ip by private ip id
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOciCorePublicIpByPrivateIpId = Oci.Core.GetPublicIp.Invoke(new()
        ///     {
        ///         PrivateIpId = testPublicIpPrivateIpId,
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ### Get a public ip by public ip address
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOciCorePublicIpByIp = Oci.Core.GetPublicIp.Invoke(new()
        ///     {
        ///         IpAddress = testPublicIpIpAddress,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetPublicIpResult> InvokeAsync(GetPublicIpArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPublicIpResult>("oci:Core/getPublicIp:getPublicIp", args ?? new GetPublicIpArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Public Ip resource in Oracle Cloud Infrastructure Core service.
        /// 
        /// Gets the specified public IP. You must specify the object's [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// 
        /// Alternatively, you can get the object by using [GetPublicIpByIpAddress](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/PublicIp/GetPublicIpByIpAddress)
        /// with the public IP address (for example, 203.0.113.2).
        /// 
        /// Or you can use [GetPublicIpByPrivateIpId](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/PublicIp/GetPublicIpByPrivateIpId)
        /// with the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the private IP that the public IP is assigned to.
        /// 
        /// **Note:** If you're fetching a reserved public IP that is in the process of being
        /// moved to a different private IP, the service returns the public IP object with
        /// `lifecycleState` = ASSIGNING and `assignedEntityId` = [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the target private IP.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ### Get a public ip by public ip id
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOciCorePublicIpById = Oci.Core.GetPublicIp.Invoke(new()
        ///     {
        ///         Id = testPublicIpId,
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ### Get a public ip by private ip id
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOciCorePublicIpByPrivateIpId = Oci.Core.GetPublicIp.Invoke(new()
        ///     {
        ///         PrivateIpId = testPublicIpPrivateIpId,
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ### Get a public ip by public ip address
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOciCorePublicIpByIp = Oci.Core.GetPublicIp.Invoke(new()
        ///     {
        ///         IpAddress = testPublicIpIpAddress,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetPublicIpResult> Invoke(GetPublicIpInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPublicIpResult>("oci:Core/getPublicIp:getPublicIp", args ?? new GetPublicIpInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Public Ip resource in Oracle Cloud Infrastructure Core service.
        /// 
        /// Gets the specified public IP. You must specify the object's [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// 
        /// Alternatively, you can get the object by using [GetPublicIpByIpAddress](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/PublicIp/GetPublicIpByIpAddress)
        /// with the public IP address (for example, 203.0.113.2).
        /// 
        /// Or you can use [GetPublicIpByPrivateIpId](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/PublicIp/GetPublicIpByPrivateIpId)
        /// with the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the private IP that the public IP is assigned to.
        /// 
        /// **Note:** If you're fetching a reserved public IP that is in the process of being
        /// moved to a different private IP, the service returns the public IP object with
        /// `lifecycleState` = ASSIGNING and `assignedEntityId` = [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the target private IP.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ### Get a public ip by public ip id
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOciCorePublicIpById = Oci.Core.GetPublicIp.Invoke(new()
        ///     {
        ///         Id = testPublicIpId,
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ### Get a public ip by private ip id
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOciCorePublicIpByPrivateIpId = Oci.Core.GetPublicIp.Invoke(new()
        ///     {
        ///         PrivateIpId = testPublicIpPrivateIpId,
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ### Get a public ip by public ip address
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOciCorePublicIpByIp = Oci.Core.GetPublicIp.Invoke(new()
        ///     {
        ///         IpAddress = testPublicIpIpAddress,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetPublicIpResult> Invoke(GetPublicIpInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetPublicIpResult>("oci:Core/getPublicIp:getPublicIp", args ?? new GetPublicIpInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPublicIpArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the public IP.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// Gets the public IP based on the public IP address (for example, 129.146.2.1).
        /// </summary>
        [Input("ipAddress")]
        public string? IpAddress { get; set; }

        /// <summary>
        /// Gets the public IP assigned to the specified private IP. You must specify the OCID of the private IP. If no public IP is assigned, a 404 is returned.
        /// </summary>
        [Input("privateIpId")]
        public string? PrivateIpId { get; set; }

        public GetPublicIpArgs()
        {
        }
        public static new GetPublicIpArgs Empty => new GetPublicIpArgs();
    }

    public sealed class GetPublicIpInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the public IP.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Gets the public IP based on the public IP address (for example, 129.146.2.1).
        /// </summary>
        [Input("ipAddress")]
        public Input<string>? IpAddress { get; set; }

        /// <summary>
        /// Gets the public IP assigned to the specified private IP. You must specify the OCID of the private IP. If no public IP is assigned, a 404 is returned.
        /// </summary>
        [Input("privateIpId")]
        public Input<string>? PrivateIpId { get; set; }

        public GetPublicIpInvokeArgs()
        {
        }
        public static new GetPublicIpInvokeArgs Empty => new GetPublicIpInvokeArgs();
    }


    [OutputType]
    public sealed class GetPublicIpResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the entity the public IP is assigned to, or in the process of being assigned to.
        /// </summary>
        public readonly string AssignedEntityId;
        /// <summary>
        /// The type of entity the public IP is assigned to, or in the process of being assigned to.
        /// </summary>
        public readonly string AssignedEntityType;
        /// <summary>
        /// The public IP's availability domain. This property is set only for ephemeral public IPs that are assigned to a private IP (that is, when the `scope` of the public IP is set to AVAILABILITY_DOMAIN). The value is the availability domain of the assigned private IP.  Example: `Uocm:PHX-AD-1`
        /// </summary>
        public readonly string AvailabilityDomain;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the public IP. For an ephemeral public IP, this is the compartment of its assigned entity (which can be a private IP or a regional entity such as a NAT gateway). For a reserved public IP that is currently assigned, its compartment can be different from the assigned private IP's.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The public IP's Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)).
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The public IP address of the `publicIp` object.  Example: `203.0.113.2`
        /// </summary>
        public readonly string IpAddress;
        /// <summary>
        /// Defines when the public IP is deleted and released back to Oracle's public IP pool.
        /// * `EPHEMERAL`: The lifetime is tied to the lifetime of its assigned entity. An ephemeral public IP must always be assigned to an entity. If the assigned entity is a private IP, the ephemeral public IP is automatically deleted when the private IP is deleted, when the VNIC is terminated, or when the instance is terminated. If the assigned entity is a [NatGateway](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/NatGateway/), the ephemeral public IP is automatically deleted when the NAT gateway is terminated.
        /// * `RESERVED`: You control the public IP's lifetime. You can delete a reserved public IP whenever you like. It does not need to be assigned to a private IP at all times.
        /// </summary>
        public readonly string Lifetime;
        /// <summary>
        /// Deprecated. Use `assignedEntityId` instead.
        /// </summary>
        public readonly string PrivateIpId;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the pool object created in the current tenancy.
        /// </summary>
        public readonly string PublicIpPoolId;
        /// <summary>
        /// Whether the public IP is regional or specific to a particular availability domain.
        /// * `REGION`: The public IP exists within a region and is assigned to a regional entity (such as a [NatGateway](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/NatGateway/)), or can be assigned to a private IP in any availability domain in the region. Reserved public IPs and ephemeral public IPs assigned to a regional entity have `scope` = `REGION`.
        /// * `AVAILABILITY_DOMAIN`: The public IP exists within the availability domain of the entity it's assigned to, which is specified by the `availabilityDomain` property of the public IP object. Ephemeral public IPs that are assigned to private IPs have `scope` = `AVAILABILITY_DOMAIN`.
        /// </summary>
        public readonly string Scope;
        /// <summary>
        /// The public IP's current state.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The date and time the public IP was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        public readonly string TimeCreated;

        [OutputConstructor]
        private GetPublicIpResult(
            string assignedEntityId,

            string assignedEntityType,

            string availabilityDomain,

            string compartmentId,

            ImmutableDictionary<string, string> definedTags,

            string displayName,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            string ipAddress,

            string lifetime,

            string privateIpId,

            string publicIpPoolId,

            string scope,

            string state,

            string timeCreated)
        {
            AssignedEntityId = assignedEntityId;
            AssignedEntityType = assignedEntityType;
            AvailabilityDomain = availabilityDomain;
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            IpAddress = ipAddress;
            Lifetime = lifetime;
            PrivateIpId = privateIpId;
            PublicIpPoolId = publicIpPoolId;
            Scope = scope;
            State = state;
            TimeCreated = timeCreated;
        }
    }
}
