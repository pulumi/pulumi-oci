// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Core
{
    public static class GetTunnelSecurityAssociations
    {
        /// <summary>
        /// This data source provides the list of Tunnel Security Associations in Oracle Cloud Infrastructure Core service.
        /// 
        /// Lists the tunnel security associations information for the specified IPSec tunnel ID.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testTunnelSecurityAssociations = Output.Create(Oci.Core.GetTunnelSecurityAssociations.InvokeAsync(new Oci.Core.GetTunnelSecurityAssociationsArgs
        ///         {
        ///             IpsecId = oci_core_ipsec.Test_ipsec.Id,
        ///             TunnelId = oci_core_tunnel.Test_tunnel.Id,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetTunnelSecurityAssociationsResult> InvokeAsync(GetTunnelSecurityAssociationsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetTunnelSecurityAssociationsResult>("oci:Core/getTunnelSecurityAssociations:getTunnelSecurityAssociations", args ?? new GetTunnelSecurityAssociationsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Tunnel Security Associations in Oracle Cloud Infrastructure Core service.
        /// 
        /// Lists the tunnel security associations information for the specified IPSec tunnel ID.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testTunnelSecurityAssociations = Output.Create(Oci.Core.GetTunnelSecurityAssociations.InvokeAsync(new Oci.Core.GetTunnelSecurityAssociationsArgs
        ///         {
        ///             IpsecId = oci_core_ipsec.Test_ipsec.Id,
        ///             TunnelId = oci_core_tunnel.Test_tunnel.Id,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetTunnelSecurityAssociationsResult> Invoke(GetTunnelSecurityAssociationsInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetTunnelSecurityAssociationsResult>("oci:Core/getTunnelSecurityAssociations:getTunnelSecurityAssociations", args ?? new GetTunnelSecurityAssociationsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTunnelSecurityAssociationsArgs : Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetTunnelSecurityAssociationsFilterArgs>? _filters;
        public List<Inputs.GetTunnelSecurityAssociationsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetTunnelSecurityAssociationsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the IPSec connection.
        /// </summary>
        [Input("ipsecId", required: true)]
        public string IpsecId { get; set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tunnel.
        /// </summary>
        [Input("tunnelId", required: true)]
        public string TunnelId { get; set; } = null!;

        public GetTunnelSecurityAssociationsArgs()
        {
        }
    }

    public sealed class GetTunnelSecurityAssociationsInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetTunnelSecurityAssociationsFilterInputArgs>? _filters;
        public InputList<Inputs.GetTunnelSecurityAssociationsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetTunnelSecurityAssociationsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the IPSec connection.
        /// </summary>
        [Input("ipsecId", required: true)]
        public Input<string> IpsecId { get; set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tunnel.
        /// </summary>
        [Input("tunnelId", required: true)]
        public Input<string> TunnelId { get; set; } = null!;

        public GetTunnelSecurityAssociationsInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetTunnelSecurityAssociationsResult
    {
        public readonly ImmutableArray<Outputs.GetTunnelSecurityAssociationsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string IpsecId;
        public readonly string TunnelId;
        /// <summary>
        /// The list of tunnel_security_associations.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTunnelSecurityAssociationsTunnelSecurityAssociationResult> TunnelSecurityAssociations;

        [OutputConstructor]
        private GetTunnelSecurityAssociationsResult(
            ImmutableArray<Outputs.GetTunnelSecurityAssociationsFilterResult> filters,

            string id,

            string ipsecId,

            string tunnelId,

            ImmutableArray<Outputs.GetTunnelSecurityAssociationsTunnelSecurityAssociationResult> tunnelSecurityAssociations)
        {
            Filters = filters;
            Id = id;
            IpsecId = ipsecId;
            TunnelId = tunnelId;
            TunnelSecurityAssociations = tunnelSecurityAssociations;
        }
    }
}
