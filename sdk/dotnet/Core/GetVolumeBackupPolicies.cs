// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Core
{
    public static class GetVolumeBackupPolicies
    {
        /// <summary>
        /// This data source provides the list of Volume Backup Policies in Oracle Cloud Infrastructure Core service.
        /// 
        /// Lists all the volume backup policies available in the specified compartment.
        /// 
        /// For more information about Oracle defined backup policies and user defined backup policies,
        /// see [Policy-Based Backups](https://docs.cloud.oracle.com/iaas/Content/Block/Tasks/schedulingvolumebackups.htm).
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testVolumeBackupPolicies = Output.Create(Oci.Core.GetVolumeBackupPolicies.InvokeAsync(new Oci.Core.GetVolumeBackupPoliciesArgs
        ///         {
        ///             CompartmentId = @var.Compartment_id,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetVolumeBackupPoliciesResult> InvokeAsync(GetVolumeBackupPoliciesArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetVolumeBackupPoliciesResult>("oci:Core/getVolumeBackupPolicies:getVolumeBackupPolicies", args ?? new GetVolumeBackupPoliciesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Volume Backup Policies in Oracle Cloud Infrastructure Core service.
        /// 
        /// Lists all the volume backup policies available in the specified compartment.
        /// 
        /// For more information about Oracle defined backup policies and user defined backup policies,
        /// see [Policy-Based Backups](https://docs.cloud.oracle.com/iaas/Content/Block/Tasks/schedulingvolumebackups.htm).
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testVolumeBackupPolicies = Output.Create(Oci.Core.GetVolumeBackupPolicies.InvokeAsync(new Oci.Core.GetVolumeBackupPoliciesArgs
        ///         {
        ///             CompartmentId = @var.Compartment_id,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetVolumeBackupPoliciesResult> Invoke(GetVolumeBackupPoliciesInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetVolumeBackupPoliciesResult>("oci:Core/getVolumeBackupPolicies:getVolumeBackupPolicies", args ?? new GetVolumeBackupPoliciesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVolumeBackupPoliciesArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment. If no compartment is specified, the Oracle defined backup policies are listed.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        [Input("filters")]
        private List<Inputs.GetVolumeBackupPoliciesFilterArgs>? _filters;
        public List<Inputs.GetVolumeBackupPoliciesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetVolumeBackupPoliciesFilterArgs>());
            set => _filters = value;
        }

        public GetVolumeBackupPoliciesArgs()
        {
        }
    }

    public sealed class GetVolumeBackupPoliciesInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment. If no compartment is specified, the Oracle defined backup policies are listed.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetVolumeBackupPoliciesFilterInputArgs>? _filters;
        public InputList<Inputs.GetVolumeBackupPoliciesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetVolumeBackupPoliciesFilterInputArgs>());
            set => _filters = value;
        }

        public GetVolumeBackupPoliciesInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetVolumeBackupPoliciesResult
    {
        /// <summary>
        /// The OCID of the compartment that contains the volume backup.
        /// </summary>
        public readonly string? CompartmentId;
        public readonly ImmutableArray<Outputs.GetVolumeBackupPoliciesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of volume_backup_policies.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetVolumeBackupPoliciesVolumeBackupPolicyResult> VolumeBackupPolicies;

        [OutputConstructor]
        private GetVolumeBackupPoliciesResult(
            string? compartmentId,

            ImmutableArray<Outputs.GetVolumeBackupPoliciesFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetVolumeBackupPoliciesVolumeBackupPolicyResult> volumeBackupPolicies)
        {
            CompartmentId = compartmentId;
            Filters = filters;
            Id = id;
            VolumeBackupPolicies = volumeBackupPolicies;
        }
    }
}
