// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Core
{
    public static class GetVolumeBackupPolicyAssignments
    {
        /// <summary>
        /// This data source provides the list of Volume Backup Policy Assignments in Oracle Cloud Infrastructure Core service.
        /// 
        /// Gets the volume backup policy assignment for the specified volume. The
        /// `assetId` query parameter is required, and the returned list will contain at most
        /// one item, since volume can only have one volume backup policy assigned at a time.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testVolumeBackupPolicyAssignments = Oci.Core.GetVolumeBackupPolicyAssignments.Invoke(new()
        ///     {
        ///         AssetId = oci_core_volume.Test_volume.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetVolumeBackupPolicyAssignmentsResult> InvokeAsync(GetVolumeBackupPolicyAssignmentsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetVolumeBackupPolicyAssignmentsResult>("oci:Core/getVolumeBackupPolicyAssignments:getVolumeBackupPolicyAssignments", args ?? new GetVolumeBackupPolicyAssignmentsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Volume Backup Policy Assignments in Oracle Cloud Infrastructure Core service.
        /// 
        /// Gets the volume backup policy assignment for the specified volume. The
        /// `assetId` query parameter is required, and the returned list will contain at most
        /// one item, since volume can only have one volume backup policy assigned at a time.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testVolumeBackupPolicyAssignments = Oci.Core.GetVolumeBackupPolicyAssignments.Invoke(new()
        ///     {
        ///         AssetId = oci_core_volume.Test_volume.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetVolumeBackupPolicyAssignmentsResult> Invoke(GetVolumeBackupPolicyAssignmentsInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetVolumeBackupPolicyAssignmentsResult>("oci:Core/getVolumeBackupPolicyAssignments:getVolumeBackupPolicyAssignments", args ?? new GetVolumeBackupPolicyAssignmentsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVolumeBackupPolicyAssignmentsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of an asset (e.g. a volume).
        /// </summary>
        [Input("assetId", required: true)]
        public string AssetId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetVolumeBackupPolicyAssignmentsFilterArgs>? _filters;
        public List<Inputs.GetVolumeBackupPolicyAssignmentsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetVolumeBackupPolicyAssignmentsFilterArgs>());
            set => _filters = value;
        }

        public GetVolumeBackupPolicyAssignmentsArgs()
        {
        }
        public static new GetVolumeBackupPolicyAssignmentsArgs Empty => new GetVolumeBackupPolicyAssignmentsArgs();
    }

    public sealed class GetVolumeBackupPolicyAssignmentsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of an asset (e.g. a volume).
        /// </summary>
        [Input("assetId", required: true)]
        public Input<string> AssetId { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetVolumeBackupPolicyAssignmentsFilterInputArgs>? _filters;
        public InputList<Inputs.GetVolumeBackupPolicyAssignmentsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetVolumeBackupPolicyAssignmentsFilterInputArgs>());
            set => _filters = value;
        }

        public GetVolumeBackupPolicyAssignmentsInvokeArgs()
        {
        }
        public static new GetVolumeBackupPolicyAssignmentsInvokeArgs Empty => new GetVolumeBackupPolicyAssignmentsInvokeArgs();
    }


    [OutputType]
    public sealed class GetVolumeBackupPolicyAssignmentsResult
    {
        /// <summary>
        /// The OCID of the volume the policy has been assigned to.
        /// </summary>
        public readonly string AssetId;
        public readonly ImmutableArray<Outputs.GetVolumeBackupPolicyAssignmentsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of volume_backup_policy_assignments.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetVolumeBackupPolicyAssignmentsVolumeBackupPolicyAssignmentResult> VolumeBackupPolicyAssignments;

        [OutputConstructor]
        private GetVolumeBackupPolicyAssignmentsResult(
            string assetId,

            ImmutableArray<Outputs.GetVolumeBackupPolicyAssignmentsFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetVolumeBackupPolicyAssignmentsVolumeBackupPolicyAssignmentResult> volumeBackupPolicyAssignments)
        {
            AssetId = assetId;
            Filters = filters;
            Id = id;
            VolumeBackupPolicyAssignments = volumeBackupPolicyAssignments;
        }
    }
}
