// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Core
{
    public static class GetVolumeGroupBackups
    {
        /// <summary>
        /// This data source provides the list of Volume Group Backups in Oracle Cloud Infrastructure Core service.
        /// 
        /// Lists the volume group backups in the specified compartment. You can filter the results by volume group.
        /// For more information, see [Volume Groups](https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/volumegroups.htm).
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testVolumeGroupBackups = Oci.Core.GetVolumeGroupBackups.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         DisplayName = @var.Volume_group_backup_display_name,
        ///         VolumeGroupId = oci_core_volume_group.Test_volume_group.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetVolumeGroupBackupsResult> InvokeAsync(GetVolumeGroupBackupsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetVolumeGroupBackupsResult>("oci:Core/getVolumeGroupBackups:getVolumeGroupBackups", args ?? new GetVolumeGroupBackupsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Volume Group Backups in Oracle Cloud Infrastructure Core service.
        /// 
        /// Lists the volume group backups in the specified compartment. You can filter the results by volume group.
        /// For more information, see [Volume Groups](https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/volumegroups.htm).
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testVolumeGroupBackups = Oci.Core.GetVolumeGroupBackups.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         DisplayName = @var.Volume_group_backup_display_name,
        ///         VolumeGroupId = oci_core_volume_group.Test_volume_group.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetVolumeGroupBackupsResult> Invoke(GetVolumeGroupBackupsInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetVolumeGroupBackupsResult>("oci:Core/getVolumeGroupBackups:getVolumeGroupBackups", args ?? new GetVolumeGroupBackupsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVolumeGroupBackupsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the given display name exactly.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetVolumeGroupBackupsFilterArgs>? _filters;
        public List<Inputs.GetVolumeGroupBackupsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetVolumeGroupBackupsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The OCID of the volume group.
        /// </summary>
        [Input("volumeGroupId")]
        public string? VolumeGroupId { get; set; }

        public GetVolumeGroupBackupsArgs()
        {
        }
        public static new GetVolumeGroupBackupsArgs Empty => new GetVolumeGroupBackupsArgs();
    }

    public sealed class GetVolumeGroupBackupsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the given display name exactly.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetVolumeGroupBackupsFilterInputArgs>? _filters;
        public InputList<Inputs.GetVolumeGroupBackupsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetVolumeGroupBackupsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The OCID of the volume group.
        /// </summary>
        [Input("volumeGroupId")]
        public Input<string>? VolumeGroupId { get; set; }

        public GetVolumeGroupBackupsInvokeArgs()
        {
        }
        public static new GetVolumeGroupBackupsInvokeArgs Empty => new GetVolumeGroupBackupsInvokeArgs();
    }


    [OutputType]
    public sealed class GetVolumeGroupBackupsResult
    {
        /// <summary>
        /// The OCID of the compartment that contains the volume group backup.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetVolumeGroupBackupsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of volume_group_backups.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetVolumeGroupBackupsVolumeGroupBackupResult> VolumeGroupBackups;
        /// <summary>
        /// The OCID of the source volume group.
        /// </summary>
        public readonly string? VolumeGroupId;

        [OutputConstructor]
        private GetVolumeGroupBackupsResult(
            string compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetVolumeGroupBackupsFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetVolumeGroupBackupsVolumeGroupBackupResult> volumeGroupBackups,

            string? volumeGroupId)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            VolumeGroupBackups = volumeGroupBackups;
            VolumeGroupId = volumeGroupId;
        }
    }
}
