// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Core
{
    public static class GetVolumeGroups
    {
        /// <summary>
        /// This data source provides the list of Volume Groups in Oracle Cloud Infrastructure Core service.
        /// 
        /// Lists the volume groups in the specified compartment and availability domain.
        /// For more information, see [Volume Groups](https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/volumegroups.htm).
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testVolumeGroups = Oci.Core.GetVolumeGroups.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         AvailabilityDomain = volumeGroupAvailabilityDomain,
        ///         DisplayName = volumeGroupDisplayName,
        ///         State = volumeGroupState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetVolumeGroupsResult> InvokeAsync(GetVolumeGroupsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVolumeGroupsResult>("oci:Core/getVolumeGroups:getVolumeGroups", args ?? new GetVolumeGroupsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Volume Groups in Oracle Cloud Infrastructure Core service.
        /// 
        /// Lists the volume groups in the specified compartment and availability domain.
        /// For more information, see [Volume Groups](https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/volumegroups.htm).
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testVolumeGroups = Oci.Core.GetVolumeGroups.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         AvailabilityDomain = volumeGroupAvailabilityDomain,
        ///         DisplayName = volumeGroupDisplayName,
        ///         State = volumeGroupState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetVolumeGroupsResult> Invoke(GetVolumeGroupsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVolumeGroupsResult>("oci:Core/getVolumeGroups:getVolumeGroups", args ?? new GetVolumeGroupsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVolumeGroupsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the availability domain.  Example: `Uocm:PHX-AD-1`
        /// </summary>
        [Input("availabilityDomain")]
        public string? AvailabilityDomain { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the given display name exactly.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetVolumeGroupsFilterArgs>? _filters;
        public List<Inputs.GetVolumeGroupsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetVolumeGroupsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetVolumeGroupsArgs()
        {
        }
        public static new GetVolumeGroupsArgs Empty => new GetVolumeGroupsArgs();
    }

    public sealed class GetVolumeGroupsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the availability domain.  Example: `Uocm:PHX-AD-1`
        /// </summary>
        [Input("availabilityDomain")]
        public Input<string>? AvailabilityDomain { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the given display name exactly.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetVolumeGroupsFilterInputArgs>? _filters;
        public InputList<Inputs.GetVolumeGroupsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetVolumeGroupsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetVolumeGroupsInvokeArgs()
        {
        }
        public static new GetVolumeGroupsInvokeArgs Empty => new GetVolumeGroupsInvokeArgs();
    }


    [OutputType]
    public sealed class GetVolumeGroupsResult
    {
        /// <summary>
        /// The availability domain of the boot volume replica replica.  Example: `Uocm:PHX-AD-1`
        /// </summary>
        public readonly string? AvailabilityDomain;
        /// <summary>
        /// The OCID of the compartment that contains the volume group.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetVolumeGroupsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The current state of a volume group.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// The list of volume_groups.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetVolumeGroupsVolumeGroupResult> VolumeGroups;

        [OutputConstructor]
        private GetVolumeGroupsResult(
            string? availabilityDomain,

            string compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetVolumeGroupsFilterResult> filters,

            string id,

            string? state,

            ImmutableArray<Outputs.GetVolumeGroupsVolumeGroupResult> volumeGroups)
        {
            AvailabilityDomain = availabilityDomain;
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            State = state;
            VolumeGroups = volumeGroups;
        }
    }
}
