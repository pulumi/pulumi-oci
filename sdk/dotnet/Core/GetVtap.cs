// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Core
{
    public static class GetVtap
    {
        /// <summary>
        /// This data source provides details about a specific Vtap resource in Oracle Cloud Infrastructure Core service.
        /// 
        /// Gets the specified `Vtap` resource.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testVtap = Oci.Core.GetVtap.Invoke(new()
        ///     {
        ///         VtapId = testVtapOciCoreVtap.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetVtapResult> InvokeAsync(GetVtapArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVtapResult>("oci:Core/getVtap:getVtap", args ?? new GetVtapArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Vtap resource in Oracle Cloud Infrastructure Core service.
        /// 
        /// Gets the specified `Vtap` resource.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testVtap = Oci.Core.GetVtap.Invoke(new()
        ///     {
        ///         VtapId = testVtapOciCoreVtap.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetVtapResult> Invoke(GetVtapInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVtapResult>("oci:Core/getVtap:getVtap", args ?? new GetVtapInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Vtap resource in Oracle Cloud Infrastructure Core service.
        /// 
        /// Gets the specified `Vtap` resource.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testVtap = Oci.Core.GetVtap.Invoke(new()
        ///     {
        ///         VtapId = testVtapOciCoreVtap.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetVtapResult> Invoke(GetVtapInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetVtapResult>("oci:Core/getVtap:getVtap", args ?? new GetVtapInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVtapArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VTAP.
        /// </summary>
        [Input("vtapId", required: true)]
        public string VtapId { get; set; } = null!;

        public GetVtapArgs()
        {
        }
        public static new GetVtapArgs Empty => new GetVtapArgs();
    }

    public sealed class GetVtapInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VTAP.
        /// </summary>
        [Input("vtapId", required: true)]
        public Input<string> VtapId { get; set; } = null!;

        public GetVtapInvokeArgs()
        {
        }
        public static new GetVtapInvokeArgs Empty => new GetVtapInvokeArgs();
    }


    [OutputType]
    public sealed class GetVtapResult
    {
        /// <summary>
        /// The capture filter's Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)).
        /// </summary>
        public readonly string CaptureFilterId;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the `Vtap` resource.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Defines an encapsulation header type for the VTAP's mirrored traffic.
        /// </summary>
        public readonly string EncapsulationProtocol;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The VTAP's Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)).
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Used to start or stop a `Vtap` resource.
        /// * `TRUE` directs the VTAP to start mirroring traffic.
        /// * `FALSE` (Default) directs the VTAP to stop mirroring traffic.
        /// </summary>
        public readonly bool IsVtapEnabled;
        /// <summary>
        /// The VTAP's current running state.
        /// </summary>
        public readonly string LifecycleStateDetails;
        /// <summary>
        /// The maximum size of the packets to be included in the filter.
        /// </summary>
        public readonly int MaxPacketSize;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the source point where packets are captured.
        /// </summary>
        public readonly string SourceId;
        /// <summary>
        /// The IP Address of the source private endpoint.
        /// </summary>
        public readonly string SourcePrivateEndpointIp;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet that source private endpoint belongs to.
        /// </summary>
        public readonly string SourcePrivateEndpointSubnetId;
        /// <summary>
        /// The source type for the VTAP.
        /// </summary>
        public readonly string SourceType;
        /// <summary>
        /// The VTAP's administrative lifecycle state.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the destination resource where mirrored packets are sent.
        /// </summary>
        public readonly string TargetId;
        /// <summary>
        /// The IP address of the destination resource where mirrored packets are sent.
        /// </summary>
        public readonly string TargetIp;
        /// <summary>
        /// The target type for the VTAP.
        /// </summary>
        public readonly string TargetType;
        /// <summary>
        /// The date and time the VTAP was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2020-08-25T21:10:29.600Z`
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// Used to control the priority of traffic. It is an optional field. If it not passed, the value is DEFAULT
        /// </summary>
        public readonly string TrafficMode;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN containing the `Vtap` resource.
        /// </summary>
        public readonly string VcnId;
        public readonly string VtapId;
        /// <summary>
        /// The virtual extensible LAN (VXLAN) network identifier (or VXLAN segment ID) that uniquely identifies the VXLAN.
        /// </summary>
        public readonly string VxlanNetworkIdentifier;

        [OutputConstructor]
        private GetVtapResult(
            string captureFilterId,

            string compartmentId,

            ImmutableDictionary<string, string> definedTags,

            string displayName,

            string encapsulationProtocol,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            bool isVtapEnabled,

            string lifecycleStateDetails,

            int maxPacketSize,

            string sourceId,

            string sourcePrivateEndpointIp,

            string sourcePrivateEndpointSubnetId,

            string sourceType,

            string state,

            string targetId,

            string targetIp,

            string targetType,

            string timeCreated,

            string trafficMode,

            string vcnId,

            string vtapId,

            string vxlanNetworkIdentifier)
        {
            CaptureFilterId = captureFilterId;
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            DisplayName = displayName;
            EncapsulationProtocol = encapsulationProtocol;
            FreeformTags = freeformTags;
            Id = id;
            IsVtapEnabled = isVtapEnabled;
            LifecycleStateDetails = lifecycleStateDetails;
            MaxPacketSize = maxPacketSize;
            SourceId = sourceId;
            SourcePrivateEndpointIp = sourcePrivateEndpointIp;
            SourcePrivateEndpointSubnetId = sourcePrivateEndpointSubnetId;
            SourceType = sourceType;
            State = state;
            TargetId = targetId;
            TargetIp = targetIp;
            TargetType = targetType;
            TimeCreated = timeCreated;
            TrafficMode = trafficMode;
            VcnId = vcnId;
            VtapId = vtapId;
            VxlanNetworkIdentifier = vxlanNetworkIdentifier;
        }
    }
}
