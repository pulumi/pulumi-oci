// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Core.Inputs
{

    public sealed class ComputeCapacityReportShapeAvailabilityArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A flag denoting whether capacity is available.
        /// </summary>
        [Input("availabilityStatus")]
        public Input<string>? AvailabilityStatus { get; set; }

        /// <summary>
        /// The total number of new instances that can be created with the specified shape configuration.
        /// </summary>
        [Input("availableCount")]
        public Input<string>? AvailableCount { get; set; }

        /// <summary>
        /// The fault domain for the capacity report.
        /// 
        /// If you do not specify a fault domain, the capacity report includes information about all fault domains.
        /// </summary>
        [Input("faultDomain")]
        public Input<string>? FaultDomain { get; set; }

        /// <summary>
        /// The shape that you want to request a capacity report for. You can enumerate all available shapes by calling [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Shape/ListShapes).
        /// </summary>
        [Input("instanceShape", required: true)]
        public Input<string> InstanceShape { get; set; } = null!;

        /// <summary>
        /// The shape configuration for a shape in a capacity report.
        /// </summary>
        [Input("instanceShapeConfig")]
        public Input<Inputs.ComputeCapacityReportShapeAvailabilityInstanceShapeConfigArgs>? InstanceShapeConfig { get; set; }

        public ComputeCapacityReportShapeAvailabilityArgs()
        {
        }
        public static new ComputeCapacityReportShapeAvailabilityArgs Empty => new ComputeCapacityReportShapeAvailabilityArgs();
    }
}
