// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Core.Inputs
{

    public sealed class ComputeCapacityReportShapeAvailabilityInstanceShapeConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The total amount of memory available to the instance, in gigabytes.
        /// </summary>
        [Input("memoryInGbs")]
        public Input<double>? MemoryInGbs { get; set; }

        /// <summary>
        /// The number of NVMe drives to be used for storage.
        /// </summary>
        [Input("nvmes")]
        public Input<int>? Nvmes { get; set; }

        /// <summary>
        /// The total number of OCPUs available to the instance. 
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("ocpus")]
        public Input<double>? Ocpus { get; set; }

        public ComputeCapacityReportShapeAvailabilityInstanceShapeConfigArgs()
        {
        }
        public static new ComputeCapacityReportShapeAvailabilityInstanceShapeConfigArgs Empty => new ComputeCapacityReportShapeAvailabilityInstanceShapeConfigArgs();
    }
}
