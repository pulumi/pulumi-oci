// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Core.Inputs
{

    public sealed class DedicatedVmHostCapacityBinArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Zero-based index for the corresponding capacity bucket.
        /// </summary>
        [Input("capacityIndex")]
        public Input<int>? CapacityIndex { get; set; }

        /// <summary>
        /// The current available memory of the dedicated VM host, in GBs.
        /// </summary>
        [Input("remainingMemoryInGbs")]
        public Input<double>? RemainingMemoryInGbs { get; set; }

        /// <summary>
        /// The current available OCPUs of the dedicated VM host.
        /// </summary>
        [Input("remainingOcpus")]
        public Input<double>? RemainingOcpus { get; set; }

        [Input("supportedShapes")]
        private InputList<string>? _supportedShapes;

        /// <summary>
        /// List of VMI shapes supported on each capacity bucket.
        /// </summary>
        public InputList<string> SupportedShapes
        {
            get => _supportedShapes ?? (_supportedShapes = new InputList<string>());
            set => _supportedShapes = value;
        }

        /// <summary>
        /// The current total memory of the dedicated VM host, in GBs.
        /// </summary>
        [Input("totalMemoryInGbs")]
        public Input<double>? TotalMemoryInGbs { get; set; }

        /// <summary>
        /// The current total OCPUs of the dedicated VM host.
        /// </summary>
        [Input("totalOcpus")]
        public Input<double>? TotalOcpus { get; set; }

        public DedicatedVmHostCapacityBinArgs()
        {
        }
        public static new DedicatedVmHostCapacityBinArgs Empty => new DedicatedVmHostCapacityBinArgs();
    }
}
