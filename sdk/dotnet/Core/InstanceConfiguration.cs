// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Core
{
    /// <summary>
    /// This resource provides the Instance Configuration resource in Oracle Cloud Infrastructure Core service.
    /// 
    /// Creates an instance configuration. An instance configuration is a template that defines the
    /// settings to use when creating Compute instances.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testInstanceConfiguration = new Oci.Core.InstanceConfiguration("test_instance_configuration", new()
    ///     {
    ///         CompartmentId = compartmentId,
    ///         DefinedTags = 
    ///         {
    ///             { "Operations.CostCenter", "42" },
    ///         },
    ///         DisplayName = instanceConfigurationDisplayName,
    ///         FreeformTags = 
    ///         {
    ///             { "Department", "Finance" },
    ///         },
    ///         InstanceDetails = new Oci.Core.Inputs.InstanceConfigurationInstanceDetailsArgs
    ///         {
    ///             InstanceType = instanceConfigurationInstanceDetailsInstanceType,
    ///             BlockVolumes = new[]
    ///             {
    ///                 new Oci.Core.Inputs.InstanceConfigurationInstanceDetailsBlockVolumeArgs
    ///                 {
    ///                     AttachDetails = new Oci.Core.Inputs.InstanceConfigurationInstanceDetailsBlockVolumeAttachDetailsArgs
    ///                     {
    ///                         Type = instanceConfigurationInstanceDetailsBlockVolumesAttachDetailsType,
    ///                         Device = instanceConfigurationInstanceDetailsBlockVolumesAttachDetailsDevice,
    ///                         DisplayName = instanceConfigurationInstanceDetailsBlockVolumesAttachDetailsDisplayName,
    ///                         IsPvEncryptionInTransitEnabled = instanceConfigurationInstanceDetailsBlockVolumesAttachDetailsIsPvEncryptionInTransitEnabled,
    ///                         IsReadOnly = instanceConfigurationInstanceDetailsBlockVolumesAttachDetailsIsReadOnly,
    ///                         IsShareable = instanceConfigurationInstanceDetailsBlockVolumesAttachDetailsIsShareable,
    ///                         UseChap = instanceConfigurationInstanceDetailsBlockVolumesAttachDetailsUseChap,
    ///                     },
    ///                     CreateDetails = new Oci.Core.Inputs.InstanceConfigurationInstanceDetailsBlockVolumeCreateDetailsArgs
    ///                     {
    ///                         AutotunePolicies = new[]
    ///                         {
    ///                             new Oci.Core.Inputs.InstanceConfigurationInstanceDetailsBlockVolumeCreateDetailsAutotunePolicyArgs
    ///                             {
    ///                                 AutotuneType = instanceConfigurationInstanceDetailsBlockVolumesCreateDetailsAutotunePoliciesAutotuneType,
    ///                                 MaxVpusPerGb = instanceConfigurationInstanceDetailsBlockVolumesCreateDetailsAutotunePoliciesMaxVpusPerGb,
    ///                             },
    ///                         },
    ///                         AvailabilityDomain = instanceConfigurationInstanceDetailsBlockVolumesCreateDetailsAvailabilityDomain,
    ///                         BackupPolicyId = testVolumeBackupPolicies.VolumeBackupPolicies[0].Id,
    ///                         BlockVolumeReplicas = new Oci.Core.Inputs.InstanceConfigurationInstanceDetailsBlockVolumeCreateDetailsBlockVolumeReplicasArgs
    ///                         {
    ///                             AvailabilityDomain = instanceConfigurationInstanceDetailsBlockVolumesCreateDetailsBlockVolumeReplicasAvailabilityDomain,
    ///                             DisplayName = instanceConfigurationInstanceDetailsBlockVolumesCreateDetailsBlockVolumeReplicasDisplayName,
    ///                         },
    ///                         CompartmentId = compartmentId,
    ///                         DefinedTags = 
    ///                         {
    ///                             { "Operations.CostCenter", "42" },
    ///                         },
    ///                         DisplayName = instanceConfigurationInstanceDetailsBlockVolumesCreateDetailsDisplayName,
    ///                         FreeformTags = 
    ///                         {
    ///                             { "Department", "Finance" },
    ///                         },
    ///                         IsAutoTuneEnabled = instanceConfigurationInstanceDetailsBlockVolumesCreateDetailsIsAutoTuneEnabled,
    ///                         KmsKeyId = testKey.Id,
    ///                         SizeInGbs = instanceConfigurationInstanceDetailsBlockVolumesCreateDetailsSizeInGbs,
    ///                         SourceDetails = new Oci.Core.Inputs.InstanceConfigurationInstanceDetailsBlockVolumeCreateDetailsSourceDetailsArgs
    ///                         {
    ///                             Type = instanceConfigurationInstanceDetailsBlockVolumesCreateDetailsSourceDetailsType,
    ///                             Id = instanceConfigurationInstanceDetailsBlockVolumesCreateDetailsSourceDetailsId,
    ///                         },
    ///                         VpusPerGb = instanceConfigurationInstanceDetailsBlockVolumesCreateDetailsVpusPerGb,
    ///                     },
    ///                     VolumeId = testVolume.Id,
    ///                 },
    ///             },
    ///             LaunchDetails = new Oci.Core.Inputs.InstanceConfigurationInstanceDetailsLaunchDetailsArgs
    ///             {
    ///                 AgentConfig = new Oci.Core.Inputs.InstanceConfigurationInstanceDetailsLaunchDetailsAgentConfigArgs
    ///                 {
    ///                     AreAllPluginsDisabled = instanceConfigurationInstanceDetailsLaunchDetailsAgentConfigAreAllPluginsDisabled,
    ///                     IsManagementDisabled = instanceConfigurationInstanceDetailsLaunchDetailsAgentConfigIsManagementDisabled,
    ///                     IsMonitoringDisabled = instanceConfigurationInstanceDetailsLaunchDetailsAgentConfigIsMonitoringDisabled,
    ///                     PluginsConfigs = new[]
    ///                     {
    ///                         new Oci.Core.Inputs.InstanceConfigurationInstanceDetailsLaunchDetailsAgentConfigPluginsConfigArgs
    ///                         {
    ///                             DesiredState = instanceConfigurationInstanceDetailsLaunchDetailsAgentConfigPluginsConfigDesiredState,
    ///                             Name = instanceConfigurationInstanceDetailsLaunchDetailsAgentConfigPluginsConfigName,
    ///                         },
    ///                     },
    ///                 },
    ///                 AvailabilityConfig = new Oci.Core.Inputs.InstanceConfigurationInstanceDetailsLaunchDetailsAvailabilityConfigArgs
    ///                 {
    ///                     IsLiveMigrationPreferred = instanceConfigurationInstanceDetailsLaunchDetailsAvailabilityConfigIsLiveMigrationPreferred,
    ///                     RecoveryAction = instanceConfigurationInstanceDetailsLaunchDetailsAvailabilityConfigRecoveryAction,
    ///                 },
    ///                 AvailabilityDomain = instanceConfigurationInstanceDetailsLaunchDetailsAvailabilityDomain,
    ///                 CapacityReservationId = testCapacityReservation.Id,
    ///                 CompartmentId = compartmentId,
    ///                 CreateVnicDetails = new Oci.Core.Inputs.InstanceConfigurationInstanceDetailsLaunchDetailsCreateVnicDetailsArgs
    ///                 {
    ///                     AssignIpv6ip = instanceConfigurationInstanceDetailsLaunchDetailsCreateVnicDetailsAssignIpv6ip,
    ///                     AssignPrivateDnsRecord = instanceConfigurationInstanceDetailsLaunchDetailsCreateVnicDetailsAssignPrivateDnsRecord,
    ///                     AssignPublicIp = instanceConfigurationInstanceDetailsLaunchDetailsCreateVnicDetailsAssignPublicIp,
    ///                     DefinedTags = 
    ///                     {
    ///                         { "Operations.CostCenter", "42" },
    ///                     },
    ///                     DisplayName = instanceConfigurationInstanceDetailsLaunchDetailsCreateVnicDetailsDisplayName,
    ///                     FreeformTags = 
    ///                     {
    ///                         { "Department", "Finance" },
    ///                     },
    ///                     HostnameLabel = instanceConfigurationInstanceDetailsLaunchDetailsCreateVnicDetailsHostnameLabel,
    ///                     Ipv6addressIpv6subnetCidrPairDetails = new[]
    ///                     {
    ///                         new Oci.Core.Inputs.InstanceConfigurationInstanceDetailsLaunchDetailsCreateVnicDetailsIpv6addressIpv6subnetCidrPairDetailArgs
    ///                         {
    ///                             Ipv6address = instanceConfigurationInstanceDetailsLaunchDetailsCreateVnicDetailsIpv6addressIpv6subnetCidrPairDetailsIpv6address,
    ///                             Ipv6subnetCidr = instanceConfigurationInstanceDetailsLaunchDetailsCreateVnicDetailsIpv6addressIpv6subnetCidrPairDetailsIpv6subnetCidr,
    ///                         },
    ///                     },
    ///                     NsgIds = instanceConfigurationInstanceDetailsLaunchDetailsCreateVnicDetailsNsgIds,
    ///                     PrivateIp = instanceConfigurationInstanceDetailsLaunchDetailsCreateVnicDetailsPrivateIp,
    ///                     SkipSourceDestCheck = instanceConfigurationInstanceDetailsLaunchDetailsCreateVnicDetailsSkipSourceDestCheck,
    ///                     SubnetId = testSubnet.Id,
    ///                 },
    ///                 DedicatedVmHostId = testDedicatedVmHost.Id,
    ///                 DefinedTags = 
    ///                 {
    ///                     { "Operations.CostCenter", "42" },
    ///                 },
    ///                 DisplayName = instanceConfigurationInstanceDetailsLaunchDetailsDisplayName,
    ///                 ExtendedMetadata = instanceConfigurationInstanceDetailsLaunchDetailsExtendedMetadata,
    ///                 FaultDomain = instanceConfigurationInstanceDetailsLaunchDetailsFaultDomain,
    ///                 FreeformTags = 
    ///                 {
    ///                     { "Department", "Finance" },
    ///                 },
    ///                 InstanceOptions = new Oci.Core.Inputs.InstanceConfigurationInstanceDetailsLaunchDetailsInstanceOptionsArgs
    ///                 {
    ///                     AreLegacyImdsEndpointsDisabled = instanceConfigurationInstanceDetailsLaunchDetailsInstanceOptionsAreLegacyImdsEndpointsDisabled,
    ///                 },
    ///                 IpxeScript = instanceConfigurationInstanceDetailsLaunchDetailsIpxeScript,
    ///                 IsPvEncryptionInTransitEnabled = instanceConfigurationInstanceDetailsLaunchDetailsIsPvEncryptionInTransitEnabled,
    ///                 LaunchMode = instanceConfigurationInstanceDetailsLaunchDetailsLaunchMode,
    ///                 LaunchOptions = new Oci.Core.Inputs.InstanceConfigurationInstanceDetailsLaunchDetailsLaunchOptionsArgs
    ///                 {
    ///                     BootVolumeType = instanceConfigurationInstanceDetailsLaunchDetailsLaunchOptionsBootVolumeType,
    ///                     Firmware = instanceConfigurationInstanceDetailsLaunchDetailsLaunchOptionsFirmware,
    ///                     IsConsistentVolumeNamingEnabled = instanceConfigurationInstanceDetailsLaunchDetailsLaunchOptionsIsConsistentVolumeNamingEnabled,
    ///                     IsPvEncryptionInTransitEnabled = instanceConfigurationInstanceDetailsLaunchDetailsLaunchOptionsIsPvEncryptionInTransitEnabled,
    ///                     NetworkType = instanceConfigurationInstanceDetailsLaunchDetailsLaunchOptionsNetworkType,
    ///                     RemoteDataVolumeType = instanceConfigurationInstanceDetailsLaunchDetailsLaunchOptionsRemoteDataVolumeType,
    ///                 },
    ///                 Metadata = instanceConfigurationInstanceDetailsLaunchDetailsMetadata,
    ///                 PlatformConfig = new Oci.Core.Inputs.InstanceConfigurationInstanceDetailsLaunchDetailsPlatformConfigArgs
    ///                 {
    ///                     Type = instanceConfigurationInstanceDetailsLaunchDetailsPlatformConfigType,
    ///                     AreVirtualInstructionsEnabled = instanceConfigurationInstanceDetailsLaunchDetailsPlatformConfigAreVirtualInstructionsEnabled,
    ///                     ConfigMap = instanceConfigurationInstanceDetailsLaunchDetailsPlatformConfigConfigMap,
    ///                     IsAccessControlServiceEnabled = instanceConfigurationInstanceDetailsLaunchDetailsPlatformConfigIsAccessControlServiceEnabled,
    ///                     IsInputOutputMemoryManagementUnitEnabled = instanceConfigurationInstanceDetailsLaunchDetailsPlatformConfigIsInputOutputMemoryManagementUnitEnabled,
    ///                     IsMeasuredBootEnabled = instanceConfigurationInstanceDetailsLaunchDetailsPlatformConfigIsMeasuredBootEnabled,
    ///                     IsMemoryEncryptionEnabled = instanceConfigurationInstanceDetailsLaunchDetailsPlatformConfigIsMemoryEncryptionEnabled,
    ///                     IsSecureBootEnabled = instanceConfigurationInstanceDetailsLaunchDetailsPlatformConfigIsSecureBootEnabled,
    ///                     IsSymmetricMultiThreadingEnabled = instanceConfigurationInstanceDetailsLaunchDetailsPlatformConfigIsSymmetricMultiThreadingEnabled,
    ///                     IsTrustedPlatformModuleEnabled = instanceConfigurationInstanceDetailsLaunchDetailsPlatformConfigIsTrustedPlatformModuleEnabled,
    ///                     NumaNodesPerSocket = instanceConfigurationInstanceDetailsLaunchDetailsPlatformConfigNumaNodesPerSocket,
    ///                     PercentageOfCoresEnabled = instanceConfigurationInstanceDetailsLaunchDetailsPlatformConfigPercentageOfCoresEnabled,
    ///                 },
    ///                 PreemptibleInstanceConfig = new Oci.Core.Inputs.InstanceConfigurationInstanceDetailsLaunchDetailsPreemptibleInstanceConfigArgs
    ///                 {
    ///                     PreemptionAction = new Oci.Core.Inputs.InstanceConfigurationInstanceDetailsLaunchDetailsPreemptibleInstanceConfigPreemptionActionArgs
    ///                     {
    ///                         Type = instanceConfigurationInstanceDetailsLaunchDetailsPreemptibleInstanceConfigPreemptionActionType,
    ///                         PreserveBootVolume = instanceConfigurationInstanceDetailsLaunchDetailsPreemptibleInstanceConfigPreemptionActionPreserveBootVolume,
    ///                     },
    ///                 },
    ///                 PreferredMaintenanceAction = instanceConfigurationInstanceDetailsLaunchDetailsPreferredMaintenanceAction,
    ///                 Shape = instanceConfigurationInstanceDetailsLaunchDetailsShape,
    ///                 ShapeConfig = new Oci.Core.Inputs.InstanceConfigurationInstanceDetailsLaunchDetailsShapeConfigArgs
    ///                 {
    ///                     BaselineOcpuUtilization = instanceConfigurationInstanceDetailsLaunchDetailsShapeConfigBaselineOcpuUtilization,
    ///                     MemoryInGbs = instanceConfigurationInstanceDetailsLaunchDetailsShapeConfigMemoryInGbs,
    ///                     Nvmes = instanceConfigurationInstanceDetailsLaunchDetailsShapeConfigNvmes,
    ///                     Ocpus = instanceConfigurationInstanceDetailsLaunchDetailsShapeConfigOcpus,
    ///                     Vcpus = instanceConfigurationInstanceDetailsLaunchDetailsShapeConfigVcpus,
    ///                 },
    ///                 SourceDetails = new Oci.Core.Inputs.InstanceConfigurationInstanceDetailsLaunchDetailsSourceDetailsArgs
    ///                 {
    ///                     SourceType = instanceConfigurationInstanceDetailsLaunchDetailsSourceDetailsSourceType,
    ///                     BootVolumeId = testBootVolume.Id,
    ///                     BootVolumeSizeInGbs = instanceConfigurationInstanceDetailsLaunchDetailsSourceDetailsBootVolumeSizeInGbs,
    ///                     BootVolumeVpusPerGb = instanceConfigurationInstanceDetailsLaunchDetailsSourceDetailsBootVolumeVpusPerGb,
    ///                     ImageId = testImage.Id,
    ///                     KmsKeyId = testKey.Id,
    ///                     InstanceSourceImageFilterDetails = new Oci.Core.Inputs.InstanceConfigurationInstanceDetailsLaunchDetailsSourceDetailsInstanceSourceImageFilterDetailsArgs
    ///                     {
    ///                         CompartmentId = compartmentId,
    ///                         DefinedTagsFilter = instanceConfigurationInstanceDetailsLaunchDetailsSourceDetailsInstanceSourceImageFilterDetailsDefinedTagsFilter,
    ///                         OperatingSystem = instanceConfigurationInstanceDetailsLaunchDetailsSourceDetailsInstanceSourceImageFilterDetailsOperatingSystem,
    ///                         OperatingSystemVersion = instanceConfigurationInstanceDetailsLaunchDetailsSourceDetailsInstanceSourceImageFilterDetailsOperatingSystemVersion,
    ///                     },
    ///                 },
    ///             },
    ///             Options = new[]
    ///             {
    ///                 new Oci.Core.Inputs.InstanceConfigurationInstanceDetailsOptionArgs
    ///                 {
    ///                     BlockVolumes = new[]
    ///                     {
    ///                         new Oci.Core.Inputs.InstanceConfigurationInstanceDetailsOptionBlockVolumeArgs
    ///                         {
    ///                             AttachDetails = new Oci.Core.Inputs.InstanceConfigurationInstanceDetailsOptionBlockVolumeAttachDetailsArgs
    ///                             {
    ///                                 Type = instanceConfigurationInstanceDetailsOptionsBlockVolumesAttachDetailsType,
    ///                                 Device = instanceConfigurationInstanceDetailsOptionsBlockVolumesAttachDetailsDevice,
    ///                                 DisplayName = instanceConfigurationInstanceDetailsOptionsBlockVolumesAttachDetailsDisplayName,
    ///                                 IsPvEncryptionInTransitEnabled = instanceConfigurationInstanceDetailsOptionsBlockVolumesAttachDetailsIsPvEncryptionInTransitEnabled,
    ///                                 IsReadOnly = instanceConfigurationInstanceDetailsOptionsBlockVolumesAttachDetailsIsReadOnly,
    ///                                 IsShareable = instanceConfigurationInstanceDetailsOptionsBlockVolumesAttachDetailsIsShareable,
    ///                                 UseChap = instanceConfigurationInstanceDetailsOptionsBlockVolumesAttachDetailsUseChap,
    ///                             },
    ///                             CreateDetails = new Oci.Core.Inputs.InstanceConfigurationInstanceDetailsOptionBlockVolumeCreateDetailsArgs
    ///                             {
    ///                                 AutotunePolicies = new[]
    ///                                 {
    ///                                     new Oci.Core.Inputs.InstanceConfigurationInstanceDetailsOptionBlockVolumeCreateDetailsAutotunePolicyArgs
    ///                                     {
    ///                                         AutotuneType = instanceConfigurationInstanceDetailsOptionsBlockVolumesCreateDetailsAutotunePoliciesAutotuneType,
    ///                                         MaxVpusPerGb = instanceConfigurationInstanceDetailsOptionsBlockVolumesCreateDetailsAutotunePoliciesMaxVpusPerGb,
    ///                                     },
    ///                                 },
    ///                                 AvailabilityDomain = instanceConfigurationInstanceDetailsOptionsBlockVolumesCreateDetailsAvailabilityDomain,
    ///                                 BackupPolicyId = testVolumeBackupPolicies.VolumeBackupPolicies[0].Id,
    ///                                 CompartmentId = compartmentId,
    ///                                 DefinedTags = 
    ///                                 {
    ///                                     { "Operations.CostCenter", "42" },
    ///                                 },
    ///                                 DisplayName = instanceConfigurationInstanceDetailsOptionsBlockVolumesCreateDetailsDisplayName,
    ///                                 FreeformTags = 
    ///                                 {
    ///                                     { "Department", "Finance" },
    ///                                 },
    ///                                 KmsKeyId = testKey.Id,
    ///                                 SizeInGbs = instanceConfigurationInstanceDetailsOptionsBlockVolumesCreateDetailsSizeInGbs,
    ///                                 SourceDetails = new Oci.Core.Inputs.InstanceConfigurationInstanceDetailsOptionBlockVolumeCreateDetailsSourceDetailsArgs
    ///                                 {
    ///                                     Type = instanceConfigurationInstanceDetailsOptionsBlockVolumesCreateDetailsSourceDetailsType,
    ///                                     Id = instanceConfigurationInstanceDetailsOptionsBlockVolumesCreateDetailsSourceDetailsId,
    ///                                 },
    ///                                 VpusPerGb = instanceConfigurationInstanceDetailsOptionsBlockVolumesCreateDetailsVpusPerGb,
    ///                             },
    ///                             VolumeId = testVolume.Id,
    ///                         },
    ///                     },
    ///                     LaunchDetails = new Oci.Core.Inputs.InstanceConfigurationInstanceDetailsOptionLaunchDetailsArgs
    ///                     {
    ///                         AgentConfig = new Oci.Core.Inputs.InstanceConfigurationInstanceDetailsOptionLaunchDetailsAgentConfigArgs
    ///                         {
    ///                             AreAllPluginsDisabled = instanceConfigurationInstanceDetailsOptionsLaunchDetailsAgentConfigAreAllPluginsDisabled,
    ///                             IsManagementDisabled = instanceConfigurationInstanceDetailsOptionsLaunchDetailsAgentConfigIsManagementDisabled,
    ///                             IsMonitoringDisabled = instanceConfigurationInstanceDetailsOptionsLaunchDetailsAgentConfigIsMonitoringDisabled,
    ///                             PluginsConfigs = new[]
    ///                             {
    ///                                 new Oci.Core.Inputs.InstanceConfigurationInstanceDetailsOptionLaunchDetailsAgentConfigPluginsConfigArgs
    ///                                 {
    ///                                     DesiredState = instanceConfigurationInstanceDetailsOptionsLaunchDetailsAgentConfigPluginsConfigDesiredState,
    ///                                     Name = instanceConfigurationInstanceDetailsOptionsLaunchDetailsAgentConfigPluginsConfigName,
    ///                                 },
    ///                             },
    ///                         },
    ///                         AvailabilityConfig = new Oci.Core.Inputs.InstanceConfigurationInstanceDetailsOptionLaunchDetailsAvailabilityConfigArgs
    ///                         {
    ///                             RecoveryAction = instanceConfigurationInstanceDetailsOptionsLaunchDetailsAvailabilityConfigRecoveryAction,
    ///                         },
    ///                         AvailabilityDomain = instanceConfigurationInstanceDetailsOptionsLaunchDetailsAvailabilityDomain,
    ///                         CapacityReservationId = testCapacityReservation.Id,
    ///                         CompartmentId = compartmentId,
    ///                         CreateVnicDetails = new Oci.Core.Inputs.InstanceConfigurationInstanceDetailsOptionLaunchDetailsCreateVnicDetailsArgs
    ///                         {
    ///                             AssignIpv6ip = instanceConfigurationInstanceDetailsLaunchDetailsCreateVnicDetailsAssignIpv6ip,
    ///                             AssignPrivateDnsRecord = instanceConfigurationInstanceDetailsOptionsLaunchDetailsCreateVnicDetailsAssignPrivateDnsRecord,
    ///                             AssignPublicIp = instanceConfigurationInstanceDetailsOptionsLaunchDetailsCreateVnicDetailsAssignPublicIp,
    ///                             DefinedTags = 
    ///                             {
    ///                                 { "Operations.CostCenter", "42" },
    ///                             },
    ///                             DisplayName = instanceConfigurationInstanceDetailsOptionsLaunchDetailsCreateVnicDetailsDisplayName,
    ///                             FreeformTags = 
    ///                             {
    ///                                 { "Department", "Finance" },
    ///                             },
    ///                             HostnameLabel = instanceConfigurationInstanceDetailsOptionsLaunchDetailsCreateVnicDetailsHostnameLabel,
    ///                             Ipv6addressIpv6subnetCidrPairDetails = new[]
    ///                             {
    ///                                 new Oci.Core.Inputs.InstanceConfigurationInstanceDetailsOptionLaunchDetailsCreateVnicDetailsIpv6addressIpv6subnetCidrPairDetailArgs
    ///                                 {
    ///                                     Ipv6address = instanceConfigurationInstanceDetailsLaunchDetailsCreateVnicDetailsIpv6addressIpv6subnetCidrPairDetailsIpv6address,
    ///                                     Ipv6subnetCidr = instanceConfigurationInstanceDetailsLaunchDetailsCreateVnicDetailsIpv6addressIpv6subnetCidrPairDetailsIpv6subnetCidr,
    ///                                 },
    ///                             },
    ///                             NsgIds = instanceConfigurationInstanceDetailsOptionsLaunchDetailsCreateVnicDetailsNsgIds,
    ///                             PrivateIp = instanceConfigurationInstanceDetailsOptionsLaunchDetailsCreateVnicDetailsPrivateIp,
    ///                             SkipSourceDestCheck = instanceConfigurationInstanceDetailsOptionsLaunchDetailsCreateVnicDetailsSkipSourceDestCheck,
    ///                             SubnetId = testSubnet.Id,
    ///                         },
    ///                         DedicatedVmHostId = testDedicatedVmHost.Id,
    ///                         DefinedTags = 
    ///                         {
    ///                             { "Operations.CostCenter", "42" },
    ///                         },
    ///                         DisplayName = instanceConfigurationInstanceDetailsOptionsLaunchDetailsDisplayName,
    ///                         ExtendedMetadata = instanceConfigurationInstanceDetailsOptionsLaunchDetailsExtendedMetadata,
    ///                         FaultDomain = instanceConfigurationInstanceDetailsOptionsLaunchDetailsFaultDomain,
    ///                         FreeformTags = 
    ///                         {
    ///                             { "Department", "Finance" },
    ///                         },
    ///                         InstanceOptions = new Oci.Core.Inputs.InstanceConfigurationInstanceDetailsOptionLaunchDetailsInstanceOptionsArgs
    ///                         {
    ///                             AreLegacyImdsEndpointsDisabled = instanceConfigurationInstanceDetailsOptionsLaunchDetailsInstanceOptionsAreLegacyImdsEndpointsDisabled,
    ///                         },
    ///                         IpxeScript = instanceConfigurationInstanceDetailsOptionsLaunchDetailsIpxeScript,
    ///                         IsPvEncryptionInTransitEnabled = instanceConfigurationInstanceDetailsOptionsLaunchDetailsIsPvEncryptionInTransitEnabled,
    ///                         LaunchMode = instanceConfigurationInstanceDetailsOptionsLaunchDetailsLaunchMode,
    ///                         LaunchOptions = new Oci.Core.Inputs.InstanceConfigurationInstanceDetailsOptionLaunchDetailsLaunchOptionsArgs
    ///                         {
    ///                             BootVolumeType = instanceConfigurationInstanceDetailsOptionsLaunchDetailsLaunchOptionsBootVolumeType,
    ///                             Firmware = instanceConfigurationInstanceDetailsOptionsLaunchDetailsLaunchOptionsFirmware,
    ///                             IsConsistentVolumeNamingEnabled = instanceConfigurationInstanceDetailsOptionsLaunchDetailsLaunchOptionsIsConsistentVolumeNamingEnabled,
    ///                             IsPvEncryptionInTransitEnabled = instanceConfigurationInstanceDetailsOptionsLaunchDetailsLaunchOptionsIsPvEncryptionInTransitEnabled,
    ///                             NetworkType = instanceConfigurationInstanceDetailsOptionsLaunchDetailsLaunchOptionsNetworkType,
    ///                             RemoteDataVolumeType = instanceConfigurationInstanceDetailsOptionsLaunchDetailsLaunchOptionsRemoteDataVolumeType,
    ///                         },
    ///                         Metadata = instanceConfigurationInstanceDetailsOptionsLaunchDetailsMetadata,
    ///                         PlatformConfig = new Oci.Core.Inputs.InstanceConfigurationInstanceDetailsOptionLaunchDetailsPlatformConfigArgs
    ///                         {
    ///                             Type = instanceConfigurationInstanceDetailsOptionsLaunchDetailsPlatformConfigType,
    ///                             AreVirtualInstructionsEnabled = instanceConfigurationInstanceDetailsOptionsLaunchDetailsPlatformConfigAreVirtualInstructionsEnabled,
    ///                             IsAccessControlServiceEnabled = instanceConfigurationInstanceDetailsOptionsLaunchDetailsPlatformConfigIsAccessControlServiceEnabled,
    ///                             IsInputOutputMemoryManagementUnitEnabled = instanceConfigurationInstanceDetailsOptionsLaunchDetailsPlatformConfigIsInputOutputMemoryManagementUnitEnabled,
    ///                             IsMeasuredBootEnabled = instanceConfigurationInstanceDetailsOptionsLaunchDetailsPlatformConfigIsMeasuredBootEnabled,
    ///                             IsMemoryEncryptionEnabled = instanceConfigurationInstanceDetailsOptionsLaunchDetailsPlatformConfigIsMemoryEncryptionEnabled,
    ///                             IsSecureBootEnabled = instanceConfigurationInstanceDetailsOptionsLaunchDetailsPlatformConfigIsSecureBootEnabled,
    ///                             IsSymmetricMultiThreadingEnabled = instanceConfigurationInstanceDetailsOptionsLaunchDetailsPlatformConfigIsSymmetricMultiThreadingEnabled,
    ///                             IsTrustedPlatformModuleEnabled = instanceConfigurationInstanceDetailsOptionsLaunchDetailsPlatformConfigIsTrustedPlatformModuleEnabled,
    ///                             NumaNodesPerSocket = instanceConfigurationInstanceDetailsOptionsLaunchDetailsPlatformConfigNumaNodesPerSocket,
    ///                             PercentageOfCoresEnabled = instanceConfigurationInstanceDetailsOptionsLaunchDetailsPlatformConfigPercentageOfCoresEnabled,
    ///                         },
    ///                         PreemptibleInstanceConfig = new Oci.Core.Inputs.InstanceConfigurationInstanceDetailsOptionLaunchDetailsPreemptibleInstanceConfigArgs
    ///                         {
    ///                             PreemptionAction = new Oci.Core.Inputs.InstanceConfigurationInstanceDetailsOptionLaunchDetailsPreemptibleInstanceConfigPreemptionActionArgs
    ///                             {
    ///                                 Type = instanceConfigurationInstanceDetailsOptionsLaunchDetailsPreemptibleInstanceConfigPreemptionActionType,
    ///                                 PreserveBootVolume = instanceConfigurationInstanceDetailsOptionsLaunchDetailsPreemptibleInstanceConfigPreemptionActionPreserveBootVolume,
    ///                             },
    ///                         },
    ///                         PreferredMaintenanceAction = instanceConfigurationInstanceDetailsOptionsLaunchDetailsPreferredMaintenanceAction,
    ///                         Shape = instanceConfigurationInstanceDetailsOptionsLaunchDetailsShape,
    ///                         ShapeConfig = new Oci.Core.Inputs.InstanceConfigurationInstanceDetailsOptionLaunchDetailsShapeConfigArgs
    ///                         {
    ///                             BaselineOcpuUtilization = instanceConfigurationInstanceDetailsOptionsLaunchDetailsShapeConfigBaselineOcpuUtilization,
    ///                             MemoryInGbs = instanceConfigurationInstanceDetailsOptionsLaunchDetailsShapeConfigMemoryInGbs,
    ///                             Nvmes = instanceConfigurationInstanceDetailsOptionsLaunchDetailsShapeConfigNvmes,
    ///                             Ocpus = instanceConfigurationInstanceDetailsOptionsLaunchDetailsShapeConfigOcpus,
    ///                             Vcpus = instanceConfigurationInstanceDetailsOptionsLaunchDetailsShapeConfigVcpus,
    ///                         },
    ///                         SourceDetails = new Oci.Core.Inputs.InstanceConfigurationInstanceDetailsOptionLaunchDetailsSourceDetailsArgs
    ///                         {
    ///                             SourceType = instanceConfigurationInstanceDetailsOptionsLaunchDetailsSourceDetailsSourceType,
    ///                             BootVolumeId = testBootVolume.Id,
    ///                             BootVolumeSizeInGbs = instanceConfigurationInstanceDetailsOptionsLaunchDetailsSourceDetailsBootVolumeSizeInGbs,
    ///                             BootVolumeVpusPerGb = instanceConfigurationInstanceDetailsOptionsLaunchDetailsSourceDetailsBootVolumeVpusPerGb,
    ///                             ImageId = testImage.Id,
    ///                             InstanceSourceImageFilterDetails = new Oci.Core.Inputs.InstanceConfigurationInstanceDetailsOptionLaunchDetailsSourceDetailsInstanceSourceImageFilterDetailsArgs
    ///                             {
    ///                                 CompartmentId = compartmentId,
    ///                                 DefinedTagsFilter = instanceConfigurationInstanceDetailsOptionsLaunchDetailsSourceDetailsInstanceSourceImageFilterDetailsDefinedTagsFilter,
    ///                                 OperatingSystem = instanceConfigurationInstanceDetailsOptionsLaunchDetailsSourceDetailsInstanceSourceImageFilterDetailsOperatingSystem,
    ///                                 OperatingSystemVersion = instanceConfigurationInstanceDetailsOptionsLaunchDetailsSourceDetailsInstanceSourceImageFilterDetailsOperatingSystemVersion,
    ///                             },
    ///                         },
    ///                     },
    ///                     SecondaryVnics = new[]
    ///                     {
    ///                         new Oci.Core.Inputs.InstanceConfigurationInstanceDetailsOptionSecondaryVnicArgs
    ///                         {
    ///                             CreateVnicDetails = new Oci.Core.Inputs.InstanceConfigurationInstanceDetailsOptionSecondaryVnicCreateVnicDetailsArgs
    ///                             {
    ///                                 AssignIpv6ip = instanceConfigurationInstanceDetailsSecondaryVnicsCreateVnicDetailsAssignIpv6ip,
    ///                                 AssignPrivateDnsRecord = instanceConfigurationInstanceDetailsOptionsSecondaryVnicsCreateVnicDetailsAssignPrivateDnsRecord,
    ///                                 AssignPublicIp = instanceConfigurationInstanceDetailsOptionsSecondaryVnicsCreateVnicDetailsAssignPublicIp,
    ///                                 DefinedTags = 
    ///                                 {
    ///                                     { "Operations.CostCenter", "42" },
    ///                                 },
    ///                                 DisplayName = instanceConfigurationInstanceDetailsOptionsSecondaryVnicsCreateVnicDetailsDisplayName,
    ///                                 FreeformTags = 
    ///                                 {
    ///                                     { "Department", "Finance" },
    ///                                 },
    ///                                 HostnameLabel = instanceConfigurationInstanceDetailsOptionsSecondaryVnicsCreateVnicDetailsHostnameLabel,
    ///                                 Ipv6addressIpv6subnetCidrPairDetails = new[]
    ///                                 {
    ///                                     new Oci.Core.Inputs.InstanceConfigurationInstanceDetailsOptionSecondaryVnicCreateVnicDetailsIpv6addressIpv6subnetCidrPairDetailArgs
    ///                                     {
    ///                                         Ipv6address = instanceConfigurationInstanceDetailsSecondaryVnicsCreateVnicDetailsIpv6addressIpv6subnetCidrPairDetailsIpv6address,
    ///                                         Ipv6subnetCidr = instanceConfigurationInstanceDetailsSecondaryVnicsCreateVnicDetailsIpv6addressIpv6subnetCidrPairDetailsIpv6subnetCidr,
    ///                                     },
    ///                                 },
    ///                                 NsgIds = instanceConfigurationInstanceDetailsOptionsSecondaryVnicsCreateVnicDetailsNsgIds,
    ///                                 PrivateIp = instanceConfigurationInstanceDetailsOptionsSecondaryVnicsCreateVnicDetailsPrivateIp,
    ///                                 SkipSourceDestCheck = instanceConfigurationInstanceDetailsOptionsSecondaryVnicsCreateVnicDetailsSkipSourceDestCheck,
    ///                                 SubnetId = testSubnet.Id,
    ///                             },
    ///                             DisplayName = instanceConfigurationInstanceDetailsOptionsSecondaryVnicsDisplayName,
    ///                             NicIndex = instanceConfigurationInstanceDetailsOptionsSecondaryVnicsNicIndex,
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///             SecondaryVnics = new[]
    ///             {
    ///                 new Oci.Core.Inputs.InstanceConfigurationInstanceDetailsSecondaryVnicArgs
    ///                 {
    ///                     CreateVnicDetails = new Oci.Core.Inputs.InstanceConfigurationInstanceDetailsSecondaryVnicCreateVnicDetailsArgs
    ///                     {
    ///                         AssignPrivateDnsRecord = instanceConfigurationInstanceDetailsSecondaryVnicsCreateVnicDetailsAssignPrivateDnsRecord,
    ///                         AssignPublicIp = instanceConfigurationInstanceDetailsSecondaryVnicsCreateVnicDetailsAssignPublicIp,
    ///                         DefinedTags = 
    ///                         {
    ///                             { "Operations.CostCenter", "42" },
    ///                         },
    ///                         DisplayName = instanceConfigurationInstanceDetailsSecondaryVnicsCreateVnicDetailsDisplayName,
    ///                         FreeformTags = 
    ///                         {
    ///                             { "Department", "Finance" },
    ///                         },
    ///                         HostnameLabel = instanceConfigurationInstanceDetailsSecondaryVnicsCreateVnicDetailsHostnameLabel,
    ///                         NsgIds = instanceConfigurationInstanceDetailsSecondaryVnicsCreateVnicDetailsNsgIds,
    ///                         PrivateIp = instanceConfigurationInstanceDetailsSecondaryVnicsCreateVnicDetailsPrivateIp,
    ///                         SkipSourceDestCheck = instanceConfigurationInstanceDetailsSecondaryVnicsCreateVnicDetailsSkipSourceDestCheck,
    ///                         SubnetId = testSubnet.Id,
    ///                     },
    ///                     DisplayName = instanceConfigurationInstanceDetailsSecondaryVnicsDisplayName,
    ///                     NicIndex = instanceConfigurationInstanceDetailsSecondaryVnicsNicIndex,
    ///                 },
    ///             },
    ///         },
    ///         InstanceId = testInstance.Id,
    ///         Source = instanceConfigurationSource,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// InstanceConfigurations can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:Core/instanceConfiguration:InstanceConfiguration test_instance_configuration "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:Core/instanceConfiguration:InstanceConfiguration")]
    public partial class InstanceConfiguration : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) The OCID of the compartment containing images to search
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// Parameters that were not specified when the instance configuration was created, but that are required to launch an instance from the instance configuration. See the [LaunchInstanceConfiguration](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Instance/LaunchInstanceConfiguration) operation.
        /// </summary>
        [Output("deferredFields")]
        public Output<ImmutableArray<string>> DeferredFields { get; private set; } = null!;

        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, object>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, object>> FreeformTags { get; private set; } = null!;

        [Output("instanceDetails")]
        public Output<Outputs.InstanceConfigurationInstanceDetails> InstanceDetails { get; private set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the instance to use to create the instance configuration.
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// The source of the instance configuration. An instance configuration defines the settings to use when creating Compute instances, including details such as the base image, shape, and metadata. You can also specify the associated resources for the instance, such as block volume attachments and network configuration.
        /// 
        /// When you create an instance configuration using an existing instance as a template, the instance configuration does not include any information from the source instance's boot volume, such as installed applications, binaries, and files on the instance. It also does not include the contents of any block volumes that are attached to the instance.
        /// 
        /// To create an instance configuration that includes the custom setup from an instance's boot volume, you must first create a custom image from the instance (see [CreateImage](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Image/CreateImage)). Then, use the custom image to launch a new instance (see [LaunchInstance](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Instance/LaunchInstance)). Finally, create the instance configuration based on the instance that you created from the custom image.
        /// 
        /// To include block volume contents with an instance configuration, first create a backup of the attached block volumes (see [CreateVolumeBackup](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/VolumeBackup/CreateVolumeBackup)). Then, create the instance configuration by specifying the list of settings, using [InstanceConfigurationVolumeSourceFromVolumeBackupDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/datatypes/InstanceConfigurationVolumeSourceFromVolumeBackupDetails) to include the block volume backups in the list of settings.
        /// 
        /// The following values are supported:
        /// </summary>
        [Output("source")]
        public Output<string> Source { get; private set; } = null!;

        /// <summary>
        /// The date and time the instance configuration was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;


        /// <summary>
        /// Create a InstanceConfiguration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public InstanceConfiguration(string name, InstanceConfigurationArgs args, CustomResourceOptions? options = null)
            : base("oci:Core/instanceConfiguration:InstanceConfiguration", name, args ?? new InstanceConfigurationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private InstanceConfiguration(string name, Input<string> id, InstanceConfigurationState? state = null, CustomResourceOptions? options = null)
            : base("oci:Core/instanceConfiguration:InstanceConfiguration", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing InstanceConfiguration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static InstanceConfiguration Get(string name, Input<string> id, InstanceConfigurationState? state = null, CustomResourceOptions? options = null)
        {
            return new InstanceConfiguration(name, id, state, options);
        }
    }

    public sealed class InstanceConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The OCID of the compartment containing images to search
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        [Input("instanceDetails")]
        public Input<Inputs.InstanceConfigurationInstanceDetailsArgs>? InstanceDetails { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the instance to use to create the instance configuration.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// The source of the instance configuration. An instance configuration defines the settings to use when creating Compute instances, including details such as the base image, shape, and metadata. You can also specify the associated resources for the instance, such as block volume attachments and network configuration.
        /// 
        /// When you create an instance configuration using an existing instance as a template, the instance configuration does not include any information from the source instance's boot volume, such as installed applications, binaries, and files on the instance. It also does not include the contents of any block volumes that are attached to the instance.
        /// 
        /// To create an instance configuration that includes the custom setup from an instance's boot volume, you must first create a custom image from the instance (see [CreateImage](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Image/CreateImage)). Then, use the custom image to launch a new instance (see [LaunchInstance](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Instance/LaunchInstance)). Finally, create the instance configuration based on the instance that you created from the custom image.
        /// 
        /// To include block volume contents with an instance configuration, first create a backup of the attached block volumes (see [CreateVolumeBackup](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/VolumeBackup/CreateVolumeBackup)). Then, create the instance configuration by specifying the list of settings, using [InstanceConfigurationVolumeSourceFromVolumeBackupDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/datatypes/InstanceConfigurationVolumeSourceFromVolumeBackupDetails) to include the block volume backups in the list of settings.
        /// 
        /// The following values are supported:
        /// </summary>
        [Input("source")]
        public Input<string>? Source { get; set; }

        public InstanceConfigurationArgs()
        {
        }
        public static new InstanceConfigurationArgs Empty => new InstanceConfigurationArgs();
    }

    public sealed class InstanceConfigurationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The OCID of the compartment containing images to search
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("deferredFields")]
        private InputList<string>? _deferredFields;

        /// <summary>
        /// Parameters that were not specified when the instance configuration was created, but that are required to launch an instance from the instance configuration. See the [LaunchInstanceConfiguration](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Instance/LaunchInstanceConfiguration) operation.
        /// </summary>
        public InputList<string> DeferredFields
        {
            get => _deferredFields ?? (_deferredFields = new InputList<string>());
            set => _deferredFields = value;
        }

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        [Input("instanceDetails")]
        public Input<Inputs.InstanceConfigurationInstanceDetailsGetArgs>? InstanceDetails { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the instance to use to create the instance configuration.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// The source of the instance configuration. An instance configuration defines the settings to use when creating Compute instances, including details such as the base image, shape, and metadata. You can also specify the associated resources for the instance, such as block volume attachments and network configuration.
        /// 
        /// When you create an instance configuration using an existing instance as a template, the instance configuration does not include any information from the source instance's boot volume, such as installed applications, binaries, and files on the instance. It also does not include the contents of any block volumes that are attached to the instance.
        /// 
        /// To create an instance configuration that includes the custom setup from an instance's boot volume, you must first create a custom image from the instance (see [CreateImage](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Image/CreateImage)). Then, use the custom image to launch a new instance (see [LaunchInstance](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Instance/LaunchInstance)). Finally, create the instance configuration based on the instance that you created from the custom image.
        /// 
        /// To include block volume contents with an instance configuration, first create a backup of the attached block volumes (see [CreateVolumeBackup](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/VolumeBackup/CreateVolumeBackup)). Then, create the instance configuration by specifying the list of settings, using [InstanceConfigurationVolumeSourceFromVolumeBackupDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/datatypes/InstanceConfigurationVolumeSourceFromVolumeBackupDetails) to include the block volume backups in the list of settings.
        /// 
        /// The following values are supported:
        /// </summary>
        [Input("source")]
        public Input<string>? Source { get; set; }

        /// <summary>
        /// The date and time the instance configuration was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        public InstanceConfigurationState()
        {
        }
        public static new InstanceConfigurationState Empty => new InstanceConfigurationState();
    }
}
