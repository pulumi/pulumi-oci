// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Core
{
    /// <summary>
    /// This resource provides the Instance Maintenance Event resource in Oracle Cloud Infrastructure Core service.
    /// 
    /// Updates the maintenance event for the given instance.
    /// 
    /// ## Import
    /// 
    /// InstanceMaintenanceEvents can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:Core/instanceMaintenanceEvent:InstanceMaintenanceEvent test_instance_maintenance_event "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:Core/instanceMaintenanceEvent:InstanceMaintenanceEvent")]
    public partial class InstanceMaintenanceEvent : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Additional details of the maintenance in the form of json.
        /// </summary>
        [Output("additionalDetails")]
        public Output<ImmutableDictionary<string, string>> AdditionalDetails { get; private set; } = null!;

        /// <summary>
        /// (Updatable) One of the alternativeResolutionActions that was provided in the InstanceMaintenanceEvent.
        /// </summary>
        [Output("alternativeResolutionAction")]
        public Output<string> AlternativeResolutionAction { get; private set; } = null!;

        /// <summary>
        /// These are alternative actions to the requested instanceAction that can be taken to resolve the Maintenance.
        /// </summary>
        [Output("alternativeResolutionActions")]
        public Output<ImmutableArray<string>> AlternativeResolutionActions { get; private set; } = null!;

        /// <summary>
        /// (Updatable) This field is only applicable when setting the alternativeResolutionAction.
        /// 
        /// For Instances that have local storage, this must be set to true to verify that the local storage will be deleted during the migration. For instances without, this parameter has no effect.
        /// 
        /// In cases where the local storage will be lost, this parameter must be set or the request will fail.
        /// </summary>
        [Output("canDeleteLocalStorage")]
        public Output<bool> CanDeleteLocalStorage { get; private set; } = null!;

        /// <summary>
        /// Indicates if this MaintenanceEvent is capable of being rescheduled up to the timeHardDueDate.
        /// </summary>
        [Output("canReschedule")]
        public Output<bool> CanReschedule { get; private set; } = null!;

        /// <summary>
        /// The OCID of the compartment that contains the instance.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// A unique identifier that will group Instances that have a relationship with one another and must be scheduled together for the Maintenance to proceed. Any Instances that have a relationship with one another from a Maintenance perspective will have a matching correlationToken.
        /// </summary>
        [Output("correlationToken")]
        public Output<string> CorrelationToken { get; private set; } = null!;

        /// <summary>
        /// The creator of the maintenance event.
        /// </summary>
        [Output("createdBy")]
        public Output<string> CreatedBy { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, string>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// It is the descriptive information about the maintenance taking place on the customer instance.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// This is the estimated duration of the Maintenance, once the Maintenance has entered the STARTED state.
        /// </summary>
        [Output("estimatedDuration")]
        public Output<string> EstimatedDuration { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, string>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// This is the action that will be performed on the Instance by Oracle Cloud Infrastructure when the Maintenance begins.
        /// </summary>
        [Output("instanceAction")]
        public Output<string> InstanceAction { get; private set; } = null!;

        /// <summary>
        /// The OCID of the instance.
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// The OCID of the instance maintenance event.
        /// </summary>
        [Output("instanceMaintenanceEventId")]
        public Output<string> InstanceMaintenanceEventId { get; private set; } = null!;

        /// <summary>
        /// This indicates the priority and allowed actions for this Maintenance. Higher priority forms of Maintenance have tighter restrictions and may not be rescheduled, while lower priority/severity Maintenance can be rescheduled, deferred, or even cancelled. Please see the [Instance Maintenance](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/placeholder.htm) documentation for details.
        /// </summary>
        [Output("maintenanceCategory")]
        public Output<string> MaintenanceCategory { get; private set; } = null!;

        /// <summary>
        /// This is the reason that Maintenance is being performed. See [Instance Maintenance](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/placeholder.htm) documentation for details.
        /// </summary>
        [Output("maintenanceReason")]
        public Output<string> MaintenanceReason { get; private set; } = null!;

        /// <summary>
        /// The duration of the time window Maintenance is scheduled to begin within.
        /// </summary>
        [Output("startWindowDuration")]
        public Output<string> StartWindowDuration { get; private set; } = null!;

        /// <summary>
        /// The current state of the maintenance event.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The date and time the maintenance event was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The time at which the Maintenance actually finished.
        /// </summary>
        [Output("timeFinished")]
        public Output<string> TimeFinished { get; private set; } = null!;

        /// <summary>
        /// It is the scheduled hard due date and time of the maintenance event. The maintenance event will happen at this time and the due date will not be extended.
        /// </summary>
        [Output("timeHardDueDate")]
        public Output<string> TimeHardDueDate { get; private set; } = null!;

        /// <summary>
        /// The time at which the Maintenance actually started.
        /// </summary>
        [Output("timeStarted")]
        public Output<string> TimeStarted { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The beginning of the time window when Maintenance is scheduled to begin. The Maintenance will not begin before this time.
        /// 
        /// The timeWindowEnd is automatically calculated based on the maintenanceReason and the instanceAction.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("timeWindowStart")]
        public Output<string> TimeWindowStart { get; private set; } = null!;


        /// <summary>
        /// Create a InstanceMaintenanceEvent resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public InstanceMaintenanceEvent(string name, InstanceMaintenanceEventArgs args, CustomResourceOptions? options = null)
            : base("oci:Core/instanceMaintenanceEvent:InstanceMaintenanceEvent", name, args ?? new InstanceMaintenanceEventArgs(), MakeResourceOptions(options, ""))
        {
        }

        private InstanceMaintenanceEvent(string name, Input<string> id, InstanceMaintenanceEventState? state = null, CustomResourceOptions? options = null)
            : base("oci:Core/instanceMaintenanceEvent:InstanceMaintenanceEvent", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing InstanceMaintenanceEvent resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static InstanceMaintenanceEvent Get(string name, Input<string> id, InstanceMaintenanceEventState? state = null, CustomResourceOptions? options = null)
        {
            return new InstanceMaintenanceEvent(name, id, state, options);
        }
    }

    public sealed class InstanceMaintenanceEventArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) One of the alternativeResolutionActions that was provided in the InstanceMaintenanceEvent.
        /// </summary>
        [Input("alternativeResolutionAction")]
        public Input<string>? AlternativeResolutionAction { get; set; }

        /// <summary>
        /// (Updatable) This field is only applicable when setting the alternativeResolutionAction.
        /// 
        /// For Instances that have local storage, this must be set to true to verify that the local storage will be deleted during the migration. For instances without, this parameter has no effect.
        /// 
        /// In cases where the local storage will be lost, this parameter must be set or the request will fail.
        /// </summary>
        [Input("canDeleteLocalStorage")]
        public Input<bool>? CanDeleteLocalStorage { get; set; }

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// The OCID of the instance maintenance event.
        /// </summary>
        [Input("instanceMaintenanceEventId", required: true)]
        public Input<string> InstanceMaintenanceEventId { get; set; } = null!;

        /// <summary>
        /// (Updatable) The beginning of the time window when Maintenance is scheduled to begin. The Maintenance will not begin before this time.
        /// 
        /// The timeWindowEnd is automatically calculated based on the maintenanceReason and the instanceAction.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("timeWindowStart")]
        public Input<string>? TimeWindowStart { get; set; }

        public InstanceMaintenanceEventArgs()
        {
        }
        public static new InstanceMaintenanceEventArgs Empty => new InstanceMaintenanceEventArgs();
    }

    public sealed class InstanceMaintenanceEventState : global::Pulumi.ResourceArgs
    {
        [Input("additionalDetails")]
        private InputMap<string>? _additionalDetails;

        /// <summary>
        /// Additional details of the maintenance in the form of json.
        /// </summary>
        public InputMap<string> AdditionalDetails
        {
            get => _additionalDetails ?? (_additionalDetails = new InputMap<string>());
            set => _additionalDetails = value;
        }

        /// <summary>
        /// (Updatable) One of the alternativeResolutionActions that was provided in the InstanceMaintenanceEvent.
        /// </summary>
        [Input("alternativeResolutionAction")]
        public Input<string>? AlternativeResolutionAction { get; set; }

        [Input("alternativeResolutionActions")]
        private InputList<string>? _alternativeResolutionActions;

        /// <summary>
        /// These are alternative actions to the requested instanceAction that can be taken to resolve the Maintenance.
        /// </summary>
        public InputList<string> AlternativeResolutionActions
        {
            get => _alternativeResolutionActions ?? (_alternativeResolutionActions = new InputList<string>());
            set => _alternativeResolutionActions = value;
        }

        /// <summary>
        /// (Updatable) This field is only applicable when setting the alternativeResolutionAction.
        /// 
        /// For Instances that have local storage, this must be set to true to verify that the local storage will be deleted during the migration. For instances without, this parameter has no effect.
        /// 
        /// In cases where the local storage will be lost, this parameter must be set or the request will fail.
        /// </summary>
        [Input("canDeleteLocalStorage")]
        public Input<bool>? CanDeleteLocalStorage { get; set; }

        /// <summary>
        /// Indicates if this MaintenanceEvent is capable of being rescheduled up to the timeHardDueDate.
        /// </summary>
        [Input("canReschedule")]
        public Input<bool>? CanReschedule { get; set; }

        /// <summary>
        /// The OCID of the compartment that contains the instance.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// A unique identifier that will group Instances that have a relationship with one another and must be scheduled together for the Maintenance to proceed. Any Instances that have a relationship with one another from a Maintenance perspective will have a matching correlationToken.
        /// </summary>
        [Input("correlationToken")]
        public Input<string>? CorrelationToken { get; set; }

        /// <summary>
        /// The creator of the maintenance event.
        /// </summary>
        [Input("createdBy")]
        public Input<string>? CreatedBy { get; set; }

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// It is the descriptive information about the maintenance taking place on the customer instance.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// This is the estimated duration of the Maintenance, once the Maintenance has entered the STARTED state.
        /// </summary>
        [Input("estimatedDuration")]
        public Input<string>? EstimatedDuration { get; set; }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// This is the action that will be performed on the Instance by Oracle Cloud Infrastructure when the Maintenance begins.
        /// </summary>
        [Input("instanceAction")]
        public Input<string>? InstanceAction { get; set; }

        /// <summary>
        /// The OCID of the instance.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// The OCID of the instance maintenance event.
        /// </summary>
        [Input("instanceMaintenanceEventId")]
        public Input<string>? InstanceMaintenanceEventId { get; set; }

        /// <summary>
        /// This indicates the priority and allowed actions for this Maintenance. Higher priority forms of Maintenance have tighter restrictions and may not be rescheduled, while lower priority/severity Maintenance can be rescheduled, deferred, or even cancelled. Please see the [Instance Maintenance](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/placeholder.htm) documentation for details.
        /// </summary>
        [Input("maintenanceCategory")]
        public Input<string>? MaintenanceCategory { get; set; }

        /// <summary>
        /// This is the reason that Maintenance is being performed. See [Instance Maintenance](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/placeholder.htm) documentation for details.
        /// </summary>
        [Input("maintenanceReason")]
        public Input<string>? MaintenanceReason { get; set; }

        /// <summary>
        /// The duration of the time window Maintenance is scheduled to begin within.
        /// </summary>
        [Input("startWindowDuration")]
        public Input<string>? StartWindowDuration { get; set; }

        /// <summary>
        /// The current state of the maintenance event.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The date and time the maintenance event was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The time at which the Maintenance actually finished.
        /// </summary>
        [Input("timeFinished")]
        public Input<string>? TimeFinished { get; set; }

        /// <summary>
        /// It is the scheduled hard due date and time of the maintenance event. The maintenance event will happen at this time and the due date will not be extended.
        /// </summary>
        [Input("timeHardDueDate")]
        public Input<string>? TimeHardDueDate { get; set; }

        /// <summary>
        /// The time at which the Maintenance actually started.
        /// </summary>
        [Input("timeStarted")]
        public Input<string>? TimeStarted { get; set; }

        /// <summary>
        /// (Updatable) The beginning of the time window when Maintenance is scheduled to begin. The Maintenance will not begin before this time.
        /// 
        /// The timeWindowEnd is automatically calculated based on the maintenanceReason and the instanceAction.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("timeWindowStart")]
        public Input<string>? TimeWindowStart { get; set; }

        public InstanceMaintenanceEventState()
        {
        }
        public static new InstanceMaintenanceEventState Empty => new InstanceMaintenanceEventState();
    }
}
