// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Core.Outputs
{

    [OutputType]
    public sealed class GetComputeCapacityReservationsComputeCapacityReservationInstanceReservationConfigResult
    {
        /// <summary>
        /// The HPC cluster configuration requested when launching instances in a compute capacity reservation.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetComputeCapacityReservationsComputeCapacityReservationInstanceReservationConfigClusterConfigResult> ClusterConfigs;
        /// <summary>
        /// The OCID of the cluster placement group for this instance reservation capacity configuration.
        /// </summary>
        public readonly string ClusterPlacementGroupId;
        /// <summary>
        /// The fault domain of this capacity configuration. If a value is not supplied, this capacity configuration is applicable to all fault domains in the specified availability domain. For more information, see [Capacity Reservations](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/reserve-capacity.htm).
        /// </summary>
        public readonly string FaultDomain;
        /// <summary>
        /// The shape to use when launching instances using compute capacity reservations. The shape determines the number of CPUs, the amount of memory, and other resources allocated to the instance. You can list all available shapes by calling [ListComputeCapacityReservationInstanceShapes](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/computeCapacityReservationInstanceShapes/ListComputeCapacityReservationInstanceShapes).
        /// </summary>
        public readonly string InstanceShape;
        /// <summary>
        /// The shape configuration requested when launching instances in a compute capacity reservation.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetComputeCapacityReservationsComputeCapacityReservationInstanceReservationConfigInstanceShapeConfigResult> InstanceShapeConfigs;
        /// <summary>
        /// The total number of instances that can be launched from the capacity configuration.
        /// </summary>
        public readonly string ReservedCount;
        /// <summary>
        /// The amount of capacity in use out of the total capacity reserved in this capacity configuration.
        /// </summary>
        public readonly string UsedCount;

        [OutputConstructor]
        private GetComputeCapacityReservationsComputeCapacityReservationInstanceReservationConfigResult(
            ImmutableArray<Outputs.GetComputeCapacityReservationsComputeCapacityReservationInstanceReservationConfigClusterConfigResult> clusterConfigs,

            string clusterPlacementGroupId,

            string faultDomain,

            string instanceShape,

            ImmutableArray<Outputs.GetComputeCapacityReservationsComputeCapacityReservationInstanceReservationConfigInstanceShapeConfigResult> instanceShapeConfigs,

            string reservedCount,

            string usedCount)
        {
            ClusterConfigs = clusterConfigs;
            ClusterPlacementGroupId = clusterPlacementGroupId;
            FaultDomain = faultDomain;
            InstanceShape = instanceShape;
            InstanceShapeConfigs = instanceShapeConfigs;
            ReservedCount = reservedCount;
            UsedCount = usedCount;
        }
    }
}
