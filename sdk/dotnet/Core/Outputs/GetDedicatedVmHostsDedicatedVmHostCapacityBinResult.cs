// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Core.Outputs
{

    [OutputType]
    public sealed class GetDedicatedVmHostsDedicatedVmHostCapacityBinResult
    {
        public readonly int CapacityIndex;
        /// <summary>
        /// The current available memory of the dedicated VM host, in GBs.
        /// </summary>
        public readonly double RemainingMemoryInGbs;
        /// <summary>
        /// The current available OCPUs of the dedicated VM host.
        /// </summary>
        public readonly double RemainingOcpus;
        public readonly ImmutableArray<string> SupportedShapes;
        /// <summary>
        /// The current total memory of the dedicated VM host, in GBs.
        /// </summary>
        public readonly double TotalMemoryInGbs;
        /// <summary>
        /// The current total OCPUs of the dedicated VM host.
        /// </summary>
        public readonly double TotalOcpus;

        [OutputConstructor]
        private GetDedicatedVmHostsDedicatedVmHostCapacityBinResult(
            int capacityIndex,

            double remainingMemoryInGbs,

            double remainingOcpus,

            ImmutableArray<string> supportedShapes,

            double totalMemoryInGbs,

            double totalOcpus)
        {
            CapacityIndex = capacityIndex;
            RemainingMemoryInGbs = remainingMemoryInGbs;
            RemainingOcpus = remainingOcpus;
            SupportedShapes = supportedShapes;
            TotalMemoryInGbs = totalMemoryInGbs;
            TotalOcpus = totalOcpus;
        }
    }
}
