// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Core.Outputs
{

    [OutputType]
    public sealed class GetFastConnectProviderServicesFastConnectProviderServiceResult
    {
        /// <summary>
        /// Who is responsible for managing the virtual circuit bandwidth.
        /// </summary>
        public readonly string? BandwithShapeManagement;
        /// <summary>
        /// Who is responsible for managing the ASN information for the network at the other end of the connection from Oracle.
        /// </summary>
        public readonly string? CustomerAsnManagement;
        /// <summary>
        /// The location of the provider's website or portal. This portal is where you can get information about the provider service, create a virtual circuit connection from the provider to Oracle Cloud Infrastructure, and retrieve your provider service key for that virtual circuit connection.  Example: `https://example.com`
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the service offered by the provider.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Who is responsible for managing the private peering BGP information.
        /// </summary>
        public readonly string? PrivatePeeringBgpManagement;
        /// <summary>
        /// The name of the provider.
        /// </summary>
        public readonly string? ProviderName;
        /// <summary>
        /// Who is responsible for managing the provider service key.
        /// </summary>
        public readonly string? ProviderServiceKeyManagement;
        /// <summary>
        /// The name of the service offered by the provider.
        /// </summary>
        public readonly string? ProviderServiceName;
        /// <summary>
        /// Who is responsible for managing the public peering BGP information.
        /// </summary>
        public readonly string? PublicPeeringBgpManagement;
        /// <summary>
        /// Total number of cross-connect or cross-connect groups required for the virtual circuit.
        /// </summary>
        public readonly int? RequiredTotalCrossConnects;
        /// <summary>
        /// An array of virtual circuit types supported by this service.
        /// </summary>
        public readonly ImmutableArray<string> SupportedVirtualCircuitTypes;
        /// <summary>
        /// Provider service type.
        /// </summary>
        public readonly string? Type;

        [OutputConstructor]
        private GetFastConnectProviderServicesFastConnectProviderServiceResult(
            string? bandwithShapeManagement,

            string? customerAsnManagement,

            string? description,

            string? id,

            string? privatePeeringBgpManagement,

            string? providerName,

            string? providerServiceKeyManagement,

            string? providerServiceName,

            string? publicPeeringBgpManagement,

            int? requiredTotalCrossConnects,

            ImmutableArray<string> supportedVirtualCircuitTypes,

            string? type)
        {
            BandwithShapeManagement = bandwithShapeManagement;
            CustomerAsnManagement = customerAsnManagement;
            Description = description;
            Id = id;
            PrivatePeeringBgpManagement = privatePeeringBgpManagement;
            ProviderName = providerName;
            ProviderServiceKeyManagement = providerServiceKeyManagement;
            ProviderServiceName = providerServiceName;
            PublicPeeringBgpManagement = publicPeeringBgpManagement;
            RequiredTotalCrossConnects = requiredTotalCrossConnects;
            SupportedVirtualCircuitTypes = supportedVirtualCircuitTypes;
            Type = type;
        }
    }
}
