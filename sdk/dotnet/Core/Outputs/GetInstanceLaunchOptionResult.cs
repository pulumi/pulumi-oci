// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Core.Outputs
{

    [OutputType]
    public sealed class GetInstanceLaunchOptionResult
    {
        /// <summary>
        /// Emulation type for the boot volume.
        /// * `ISCSI` - ISCSI attached block storage device.
        /// * `SCSI` - Emulated SCSI disk.
        /// * `IDE` - Emulated IDE disk.
        /// * `VFIO` - Direct attached Virtual Function storage. This is the default option for local data volumes on platform images.
        /// * `PARAVIRTUALIZED` - Paravirtualized disk. This is the default for boot volumes and remote block storage volumes on platform images.
        /// </summary>
        public readonly string BootVolumeType;
        /// <summary>
        /// Firmware used to boot VM. Select the option that matches your operating system.
        /// * `BIOS` - Boot VM using BIOS style firmware. This is compatible with both 32 bit and 64 bit operating systems that boot using MBR style bootloaders.
        /// * `UEFI_64` - Boot VM using UEFI style firmware compatible with 64 bit operating systems. This is the default for platform images.
        /// </summary>
        public readonly string Firmware;
        /// <summary>
        /// Whether to enable consistent volume naming feature. Defaults to false.
        /// </summary>
        public readonly bool IsConsistentVolumeNamingEnabled;
        /// <summary>
        /// Deprecated. Instead use `isPvEncryptionInTransitEnabled` in [LaunchInstanceDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/datatypes/LaunchInstanceDetails).
        /// </summary>
        public readonly bool IsPvEncryptionInTransitEnabled;
        /// <summary>
        /// Emulation type for the physical network interface card (NIC).
        /// * `E1000` - Emulated Gigabit ethernet controller. Compatible with Linux e1000 network driver.
        /// * `VFIO` - Direct attached Virtual Function network controller. This is the networking type when you launch an instance using hardware-assisted (SR-IOV) networking.
        /// * `PARAVIRTUALIZED` - VM instances launch with paravirtualized devices using VirtIO drivers.
        /// </summary>
        public readonly string NetworkType;
        /// <summary>
        /// Emulation type for volume.
        /// * `ISCSI` - ISCSI attached block storage device.
        /// * `SCSI` - Emulated SCSI disk.
        /// * `IDE` - Emulated IDE disk.
        /// * `VFIO` - Direct attached Virtual Function storage. This is the default option for local data volumes on platform images.
        /// * `PARAVIRTUALIZED` - Paravirtualized disk. This is the default for boot volumes and remote block storage volumes on platform images.
        /// </summary>
        public readonly string RemoteDataVolumeType;

        [OutputConstructor]
        private GetInstanceLaunchOptionResult(
            string bootVolumeType,

            string firmware,

            bool isConsistentVolumeNamingEnabled,

            bool isPvEncryptionInTransitEnabled,

            string networkType,

            string remoteDataVolumeType)
        {
            BootVolumeType = bootVolumeType;
            Firmware = firmware;
            IsConsistentVolumeNamingEnabled = isConsistentVolumeNamingEnabled;
            IsPvEncryptionInTransitEnabled = isPvEncryptionInTransitEnabled;
            NetworkType = networkType;
            RemoteDataVolumeType = remoteDataVolumeType;
        }
    }
}
