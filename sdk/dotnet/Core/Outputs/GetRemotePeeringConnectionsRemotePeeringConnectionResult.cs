// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Core.Outputs
{

    [OutputType]
    public sealed class GetRemotePeeringConnectionsRemotePeeringConnectionResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG.
        /// </summary>
        public readonly string DrgId;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the RPC.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Whether the VCN at the other end of the peering is in a different tenancy.  Example: `false`
        /// </summary>
        public readonly bool IsCrossTenancyPeering;
        /// <summary>
        /// If this RPC is peered, this value is the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the other RPC.
        /// </summary>
        public readonly string PeerId;
        /// <summary>
        /// If this RPC is peered, this value is the region that contains the other RPC.  Example: `us-ashburn-1`
        /// </summary>
        public readonly string PeerRegionName;
        /// <summary>
        /// If this RPC is peered, this value is the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the other RPC's tenancy.
        /// </summary>
        public readonly string PeerTenancyId;
        /// <summary>
        /// Whether the RPC is peered with another RPC. `NEW` means the RPC has not yet been peered. `PENDING` means the peering is being established. `REVOKED` means the RPC at the other end of the peering has been deleted.
        /// </summary>
        public readonly string PeeringStatus;
        /// <summary>
        /// The RPC's current lifecycle state.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The date and time the RPC was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        public readonly string TimeCreated;

        [OutputConstructor]
        private GetRemotePeeringConnectionsRemotePeeringConnectionResult(
            string compartmentId,

            ImmutableDictionary<string, string> definedTags,

            string displayName,

            string drgId,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            bool isCrossTenancyPeering,

            string peerId,

            string peerRegionName,

            string peerTenancyId,

            string peeringStatus,

            string state,

            string timeCreated)
        {
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            DisplayName = displayName;
            DrgId = drgId;
            FreeformTags = freeformTags;
            Id = id;
            IsCrossTenancyPeering = isCrossTenancyPeering;
            PeerId = peerId;
            PeerRegionName = peerRegionName;
            PeerTenancyId = peerTenancyId;
            PeeringStatus = peeringStatus;
            State = state;
            TimeCreated = timeCreated;
        }
    }
}
