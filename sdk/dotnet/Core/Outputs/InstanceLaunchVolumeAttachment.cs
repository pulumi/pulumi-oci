// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Core.Outputs
{

    [OutputType]
    public sealed class InstanceLaunchVolumeAttachment
    {
        /// <summary>
        /// The device name. To retrieve a list of devices for a given instance, see [ListInstanceDevices](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Device/ListInstanceDevices).
        /// </summary>
        public readonly string? Device;
        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// Refer the top-level definition of encryptionInTransitType. The default value is NONE.
        /// </summary>
        public readonly string? EncryptionInTransitType;
        /// <summary>
        /// Whether to enable Oracle Cloud Agent to perform the iSCSI login and logout commands after the volume attach or detach operations for non multipath-enabled iSCSI attachments.
        /// </summary>
        public readonly bool? IsAgentAutoIscsiLoginEnabled;
        /// <summary>
        /// Whether to enable in-transit encryption for the data volume's paravirtualized attachment. The default value is false.
        /// </summary>
        public readonly bool? IsPvEncryptionInTransitEnabled;
        /// <summary>
        /// Whether the attachment was created in read-only mode.
        /// </summary>
        public readonly bool? IsReadOnly;
        /// <summary>
        /// Whether the attachment should be created in shareable mode. If an attachment is created in shareable mode, then other instances can attach the same volume, provided that they also create their attachments in shareable mode. Only certain volume types can be attached in shareable mode. Defaults to false if not specified.
        /// </summary>
        public readonly bool? IsShareable;
        /// <summary>
        /// Define a volume that will be created and attached or attached to an instance on creation.
        /// </summary>
        public readonly Outputs.InstanceLaunchVolumeAttachmentLaunchCreateVolumeDetails? LaunchCreateVolumeDetails;
        /// <summary>
        /// The type of volume attachment. Currently, the only supported values are "iscsi" and "paravirtualized".
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Whether to use CHAP authentication for the volume attachment. Defaults to false.
        /// </summary>
        public readonly bool? UseChap;
        /// <summary>
        /// The OCID of the volume. If CreateVolumeDetails is specified, this field must be omitted from the request.
        /// </summary>
        public readonly string? VolumeId;

        [OutputConstructor]
        private InstanceLaunchVolumeAttachment(
            string? device,

            string? displayName,

            string? encryptionInTransitType,

            bool? isAgentAutoIscsiLoginEnabled,

            bool? isPvEncryptionInTransitEnabled,

            bool? isReadOnly,

            bool? isShareable,

            Outputs.InstanceLaunchVolumeAttachmentLaunchCreateVolumeDetails? launchCreateVolumeDetails,

            string type,

            bool? useChap,

            string? volumeId)
        {
            Device = device;
            DisplayName = displayName;
            EncryptionInTransitType = encryptionInTransitType;
            IsAgentAutoIscsiLoginEnabled = isAgentAutoIscsiLoginEnabled;
            IsPvEncryptionInTransitEnabled = isPvEncryptionInTransitEnabled;
            IsReadOnly = isReadOnly;
            IsShareable = isShareable;
            LaunchCreateVolumeDetails = launchCreateVolumeDetails;
            Type = type;
            UseChap = useChap;
            VolumeId = volumeId;
        }
    }
}
