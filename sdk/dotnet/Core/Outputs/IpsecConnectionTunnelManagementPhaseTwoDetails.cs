// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Core.Outputs
{

    [OutputType]
    public sealed class IpsecConnectionTunnelManagementPhaseTwoDetails
    {
        /// <summary>
        /// The authentication algorithm proposed during phase two tunnel negotiation.
        /// </summary>
        public readonly string? CustomAuthenticationAlgorithm;
        /// <summary>
        /// The encryption algorithm proposed during phase two tunnel negotiation.
        /// </summary>
        public readonly string? CustomEncryptionAlgorithm;
        /// <summary>
        /// The Diffie-Hellman group used for PFS, if PFS is enabled.
        /// </summary>
        public readonly string? DhGroup;
        /// <summary>
        /// Indicates whether custom configuration is enabled for phase two options.
        /// </summary>
        public readonly bool? IsCustomPhaseTwoConfig;
        /// <summary>
        /// Indicates that ESP phase two is established.
        /// </summary>
        public readonly bool? IsEspEstablished;
        /// <summary>
        /// Indicates whether perfect forward secrecy (PFS) is enabled.
        /// </summary>
        public readonly bool? IsPfsEnabled;
        /// <summary>
        /// Lifetime in seconds for the IPSec session key set in phase two. The default is 3600 which is equivalent to 1 hour.
        /// </summary>
        public readonly int? Lifetime;
        /// <summary>
        /// The negotiated phase two authentication algorithm.
        /// </summary>
        public readonly string? NegotiatedAuthenticationAlgorithm;
        /// <summary>
        /// The negotiated Diffie-Hellman group.
        /// </summary>
        public readonly string? NegotiatedDhGroup;
        /// <summary>
        /// The negotiated encryption algorithm.
        /// </summary>
        public readonly string? NegotiatedEncryptionAlgorithm;
        public readonly string? RemainingLifetime;
        /// <summary>
        /// The remaining lifetime before the key is refreshed.
        /// </summary>
        public readonly int? RemainingLifetimeInt;
        /// <summary>
        /// The date and time the remaining lifetime was last retrieved, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        public readonly string? RemainingLifetimeLastRetrieved;

        [OutputConstructor]
        private IpsecConnectionTunnelManagementPhaseTwoDetails(
            string? customAuthenticationAlgorithm,

            string? customEncryptionAlgorithm,

            string? dhGroup,

            bool? isCustomPhaseTwoConfig,

            bool? isEspEstablished,

            bool? isPfsEnabled,

            int? lifetime,

            string? negotiatedAuthenticationAlgorithm,

            string? negotiatedDhGroup,

            string? negotiatedEncryptionAlgorithm,

            string? remainingLifetime,

            int? remainingLifetimeInt,

            string? remainingLifetimeLastRetrieved)
        {
            CustomAuthenticationAlgorithm = customAuthenticationAlgorithm;
            CustomEncryptionAlgorithm = customEncryptionAlgorithm;
            DhGroup = dhGroup;
            IsCustomPhaseTwoConfig = isCustomPhaseTwoConfig;
            IsEspEstablished = isEspEstablished;
            IsPfsEnabled = isPfsEnabled;
            Lifetime = lifetime;
            NegotiatedAuthenticationAlgorithm = negotiatedAuthenticationAlgorithm;
            NegotiatedDhGroup = negotiatedDhGroup;
            NegotiatedEncryptionAlgorithm = negotiatedEncryptionAlgorithm;
            RemainingLifetime = remainingLifetime;
            RemainingLifetimeInt = remainingLifetimeInt;
            RemainingLifetimeLastRetrieved = remainingLifetimeLastRetrieved;
        }
    }
}
