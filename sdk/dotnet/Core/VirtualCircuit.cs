// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Core
{
    /// <summary>
    /// This resource provides the Virtual Circuit resource in Oracle Cloud Infrastructure Core service.
    /// 
    /// Creates a new virtual circuit to use with Oracle Cloud
    /// Infrastructure FastConnect. For more information, see
    /// [FastConnect Overview](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/fastconnect.htm).
    /// 
    /// For the purposes of access control, you must provide the OCID of the
    /// compartment where you want the virtual circuit to reside. If you're
    /// not sure which compartment to use, put the virtual circuit in the
    /// same compartment with the DRG it's using. For more information about
    /// compartments and access control, see
    /// [Overview of the IAM Service](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/overview.htm).
    /// For information about OCIDs, see
    /// [Resource Identifiers](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
    /// 
    /// You may optionally specify a *display name* for the virtual circuit.
    /// It does not have to be unique, and you can change it. Avoid entering confidential information.
    /// 
    /// **Important:** When creating a virtual circuit, you specify a DRG for
    /// the traffic to flow through. Make sure you attach the DRG to your
    /// VCN and confirm the VCN's routing sends traffic to the DRG. Otherwise
    /// traffic will not flow. For more information, see
    /// [Route Tables](https://docs.cloud.oracle.com/iaas/Content/Network/Tasks/managingroutetables.htm).
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testVirtualCircuit = new Oci.Core.VirtualCircuit("test_virtual_circuit", new()
    ///     {
    ///         CompartmentId = compartmentId,
    ///         Type = virtualCircuitType,
    ///         BandwidthShapeName = virtualCircuitBandwidthShapeName,
    ///         BgpAdminState = virtualCircuitBgpAdminState,
    ///         CrossConnectMappings = new[]
    ///         {
    ///             new Oci.Core.Inputs.VirtualCircuitCrossConnectMappingArgs
    ///             {
    ///                 BgpMd5authKey = virtualCircuitCrossConnectMappingsBgpMd5authKey,
    ///                 CrossConnectOrCrossConnectGroupId = testCrossConnectOrCrossConnectGroup.Id,
    ///                 CustomerBgpPeeringIp = virtualCircuitCrossConnectMappingsCustomerBgpPeeringIp,
    ///                 CustomerBgpPeeringIpv6 = virtualCircuitCrossConnectMappingsCustomerBgpPeeringIpv6,
    ///                 OracleBgpPeeringIp = virtualCircuitCrossConnectMappingsOracleBgpPeeringIp,
    ///                 OracleBgpPeeringIpv6 = virtualCircuitCrossConnectMappingsOracleBgpPeeringIpv6,
    ///                 Vlan = virtualCircuitCrossConnectMappingsVlan,
    ///             },
    ///         },
    ///         CustomerAsn = virtualCircuitCustomerAsn,
    ///         CustomerBgpAsn = virtualCircuitCustomerBgpAsn,
    ///         DefinedTags = 
    ///         {
    ///             { "Operations.CostCenter", "42" },
    ///         },
    ///         DisplayName = virtualCircuitDisplayName,
    ///         FreeformTags = 
    ///         {
    ///             { "Department", "Finance" },
    ///         },
    ///         IpMtu = virtualCircuitIpMtu,
    ///         IsBfdEnabled = virtualCircuitIsBfdEnabled,
    ///         IsTransportMode = virtualCircuitIsTransportMode,
    ///         GatewayId = testGateway.Id,
    ///         ProviderServiceId = testFastConnectProviderServices.FastConnectProviderServices[0].Id,
    ///         ProviderServiceKeyName = virtualCircuitProviderServiceKeyName,
    ///         PublicPrefixes = new[]
    ///         {
    ///             new Oci.Core.Inputs.VirtualCircuitPublicPrefixArgs
    ///             {
    ///                 CidrBlock = virtualCircuitPublicPrefixesCidrBlock,
    ///             },
    ///         },
    ///         Region = virtualCircuitRegion,
    ///         RoutingPolicies = virtualCircuitRoutingPolicy,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// VirtualCircuits can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:Core/virtualCircuit:VirtualCircuit test_virtual_circuit "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:Core/virtualCircuit:VirtualCircuit")]
    public partial class VirtualCircuit : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) The provisioned data rate of the connection. To get a list of the available bandwidth levels (that is, shapes), see [ListFastConnectProviderServiceVirtualCircuitBandwidthShapes](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/FastConnectProviderService/ListFastConnectProviderVirtualCircuitBandwidthShapes).  Example: `10 Gbps`
        /// </summary>
        [Output("bandwidthShapeName")]
        public Output<string> BandwidthShapeName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Set to `ENABLED` (the default) to activate the BGP session of the virtual circuit, set to `DISABLED` to deactivate the virtual circuit.
        /// </summary>
        [Output("bgpAdminState")]
        public Output<string> BgpAdminState { get; private set; } = null!;

        /// <summary>
        /// The state of the Ipv6 BGP session associated with the virtual circuit.
        /// </summary>
        [Output("bgpIpv6sessionState")]
        public Output<string> BgpIpv6sessionState { get; private set; } = null!;

        /// <summary>
        /// Deprecated. Instead use the information in [FastConnectProviderService](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/FastConnectProviderService/).
        /// </summary>
        [Output("bgpManagement")]
        public Output<string> BgpManagement { get; private set; } = null!;

        /// <summary>
        /// The state of the Ipv4 BGP session associated with the virtual circuit.
        /// </summary>
        [Output("bgpSessionState")]
        public Output<string> BgpSessionState { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to contain the virtual circuit.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Create a `CrossConnectMapping` for each cross-connect or cross-connect group this virtual circuit will run on.
        /// </summary>
        [Output("crossConnectMappings")]
        public Output<ImmutableArray<Outputs.VirtualCircuitCrossConnectMapping>> CrossConnectMappings { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Your BGP ASN (either public or private). Provide this value only if there's a BGP session that goes from your edge router to Oracle. Otherwise, leave this empty or null. Can be a 2-byte or 4-byte ASN. Uses "asplain" format.  Example: `12345` (2-byte) or `1587232876` (4-byte)
        /// </summary>
        [Output("customerAsn")]
        public Output<string> CustomerAsn { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Deprecated. Instead use `customerAsn`. If you specify values for both, the request will be rejected.
        /// </summary>
        [Output("customerBgpAsn")]
        public Output<int> CustomerBgpAsn { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, string>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, string>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) For private virtual circuits only. The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [dynamic routing gateway (DRG)](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Drg) that this virtual circuit uses.
        /// </summary>
        [Output("gatewayId")]
        public Output<string> GatewayId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The layer 3 IP MTU to use with this virtual circuit.
        /// </summary>
        [Output("ipMtu")]
        public Output<string> IpMtu { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Set to `true` to enable BFD for IPv4 BGP peering, or set to `false` to disable BFD. If this is not set, the default is `false`.
        /// </summary>
        [Output("isBfdEnabled")]
        public Output<bool> IsBfdEnabled { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Set to `true` for the virtual circuit to carry only encrypted traffic, or set to `false` for the virtual circuit to carry unencrypted traffic. If this is not set, the default is `false`.
        /// </summary>
        [Output("isTransportMode")]
        public Output<bool> IsTransportMode { get; private set; } = null!;

        /// <summary>
        /// The Oracle BGP ASN.
        /// </summary>
        [Output("oracleBgpAsn")]
        public Output<int> OracleBgpAsn { get; private set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the service offered by the provider (if you're connecting via a provider). To get a list of the available service offerings, see [ListFastConnectProviderServices](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/FastConnectProviderService/ListFastConnectProviderServices).
        /// </summary>
        [Output("providerServiceId")]
        public Output<string> ProviderServiceId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The service key name offered by the provider (if the customer is connecting via a provider).
        /// </summary>
        [Output("providerServiceKeyName")]
        public Output<string> ProviderServiceKeyName { get; private set; } = null!;

        /// <summary>
        /// The provider's state in relation to this virtual circuit (if the customer is connecting via a provider). ACTIVE means the provider has provisioned the virtual circuit from their end. INACTIVE means the provider has not yet provisioned the virtual circuit, or has de-provisioned it.
        /// </summary>
        [Output("providerState")]
        public Output<string> ProviderState { get; private set; } = null!;

        /// <summary>
        /// (Updatable) For a public virtual circuit. The public IP prefixes (CIDRs) the customer wants to advertise across the connection.
        /// </summary>
        [Output("publicPrefixes")]
        public Output<ImmutableArray<Outputs.VirtualCircuitPublicPrefix>> PublicPrefixes { get; private set; } = null!;

        /// <summary>
        /// Provider-supplied reference information about this virtual circuit (if the customer is connecting via a provider).
        /// </summary>
        [Output("referenceComment")]
        public Output<string> ReferenceComment { get; private set; } = null!;

        /// <summary>
        /// The Oracle Cloud Infrastructure region where this virtual circuit is located. Example: `phx`
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The routing policy sets how routing information about the Oracle cloud is shared over a public virtual circuit. Policies available are: `ORACLE_SERVICE_NETWORK`, `REGIONAL`, `MARKET_LEVEL`, and `GLOBAL`. See [Route Filtering](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/routingonprem.htm#route_filtering) for details. By default, routing information is shared for all routes in the same market.
        /// </summary>
        [Output("routingPolicies")]
        public Output<ImmutableArray<string>> RoutingPolicies { get; private set; } = null!;

        /// <summary>
        /// Provider service type.
        /// </summary>
        [Output("serviceType")]
        public Output<string> ServiceType { get; private set; } = null!;

        /// <summary>
        /// The virtual circuit's current state. For information about the different states, see [FastConnect Overview](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/fastconnect.htm).
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The date and time the virtual circuit was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The type of IP addresses used in this virtual circuit. PRIVATE means [RFC 1918](https://tools.ietf.org/html/rfc1918) addresses (10.0.0.0/8, 172.16/12, and 192.168/16).
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a VirtualCircuit resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VirtualCircuit(string name, VirtualCircuitArgs args, CustomResourceOptions? options = null)
            : base("oci:Core/virtualCircuit:VirtualCircuit", name, args ?? new VirtualCircuitArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VirtualCircuit(string name, Input<string> id, VirtualCircuitState? state = null, CustomResourceOptions? options = null)
            : base("oci:Core/virtualCircuit:VirtualCircuit", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VirtualCircuit resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VirtualCircuit Get(string name, Input<string> id, VirtualCircuitState? state = null, CustomResourceOptions? options = null)
        {
            return new VirtualCircuit(name, id, state, options);
        }
    }

    public sealed class VirtualCircuitArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The provisioned data rate of the connection. To get a list of the available bandwidth levels (that is, shapes), see [ListFastConnectProviderServiceVirtualCircuitBandwidthShapes](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/FastConnectProviderService/ListFastConnectProviderVirtualCircuitBandwidthShapes).  Example: `10 Gbps`
        /// </summary>
        [Input("bandwidthShapeName")]
        public Input<string>? BandwidthShapeName { get; set; }

        /// <summary>
        /// (Updatable) Set to `ENABLED` (the default) to activate the BGP session of the virtual circuit, set to `DISABLED` to deactivate the virtual circuit.
        /// </summary>
        [Input("bgpAdminState")]
        public Input<string>? BgpAdminState { get; set; }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to contain the virtual circuit.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("crossConnectMappings")]
        private InputList<Inputs.VirtualCircuitCrossConnectMappingArgs>? _crossConnectMappings;

        /// <summary>
        /// (Updatable) Create a `CrossConnectMapping` for each cross-connect or cross-connect group this virtual circuit will run on.
        /// </summary>
        public InputList<Inputs.VirtualCircuitCrossConnectMappingArgs> CrossConnectMappings
        {
            get => _crossConnectMappings ?? (_crossConnectMappings = new InputList<Inputs.VirtualCircuitCrossConnectMappingArgs>());
            set => _crossConnectMappings = value;
        }

        /// <summary>
        /// (Updatable) Your BGP ASN (either public or private). Provide this value only if there's a BGP session that goes from your edge router to Oracle. Otherwise, leave this empty or null. Can be a 2-byte or 4-byte ASN. Uses "asplain" format.  Example: `12345` (2-byte) or `1587232876` (4-byte)
        /// </summary>
        [Input("customerAsn")]
        public Input<string>? CustomerAsn { get; set; }

        /// <summary>
        /// (Updatable) Deprecated. Instead use `customerAsn`. If you specify values for both, the request will be rejected.
        /// </summary>
        [Input("customerBgpAsn")]
        public Input<int>? CustomerBgpAsn { get; set; }

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) For private virtual circuits only. The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [dynamic routing gateway (DRG)](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Drg) that this virtual circuit uses.
        /// </summary>
        [Input("gatewayId")]
        public Input<string>? GatewayId { get; set; }

        /// <summary>
        /// (Updatable) The layer 3 IP MTU to use with this virtual circuit.
        /// </summary>
        [Input("ipMtu")]
        public Input<string>? IpMtu { get; set; }

        /// <summary>
        /// (Updatable) Set to `true` to enable BFD for IPv4 BGP peering, or set to `false` to disable BFD. If this is not set, the default is `false`.
        /// </summary>
        [Input("isBfdEnabled")]
        public Input<bool>? IsBfdEnabled { get; set; }

        /// <summary>
        /// (Updatable) Set to `true` for the virtual circuit to carry only encrypted traffic, or set to `false` for the virtual circuit to carry unencrypted traffic. If this is not set, the default is `false`.
        /// </summary>
        [Input("isTransportMode")]
        public Input<bool>? IsTransportMode { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the service offered by the provider (if you're connecting via a provider). To get a list of the available service offerings, see [ListFastConnectProviderServices](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/FastConnectProviderService/ListFastConnectProviderServices).
        /// </summary>
        [Input("providerServiceId")]
        public Input<string>? ProviderServiceId { get; set; }

        /// <summary>
        /// (Updatable) The service key name offered by the provider (if the customer is connecting via a provider).
        /// </summary>
        [Input("providerServiceKeyName")]
        public Input<string>? ProviderServiceKeyName { get; set; }

        [Input("publicPrefixes")]
        private InputList<Inputs.VirtualCircuitPublicPrefixArgs>? _publicPrefixes;

        /// <summary>
        /// (Updatable) For a public virtual circuit. The public IP prefixes (CIDRs) the customer wants to advertise across the connection.
        /// </summary>
        public InputList<Inputs.VirtualCircuitPublicPrefixArgs> PublicPrefixes
        {
            get => _publicPrefixes ?? (_publicPrefixes = new InputList<Inputs.VirtualCircuitPublicPrefixArgs>());
            set => _publicPrefixes = value;
        }

        /// <summary>
        /// The Oracle Cloud Infrastructure region where this virtual circuit is located. Example: `phx`
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("routingPolicies")]
        private InputList<string>? _routingPolicies;

        /// <summary>
        /// (Updatable) The routing policy sets how routing information about the Oracle cloud is shared over a public virtual circuit. Policies available are: `ORACLE_SERVICE_NETWORK`, `REGIONAL`, `MARKET_LEVEL`, and `GLOBAL`. See [Route Filtering](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/routingonprem.htm#route_filtering) for details. By default, routing information is shared for all routes in the same market.
        /// </summary>
        public InputList<string> RoutingPolicies
        {
            get => _routingPolicies ?? (_routingPolicies = new InputList<string>());
            set => _routingPolicies = value;
        }

        /// <summary>
        /// The type of IP addresses used in this virtual circuit. PRIVATE means [RFC 1918](https://tools.ietf.org/html/rfc1918) addresses (10.0.0.0/8, 172.16/12, and 192.168/16).
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public VirtualCircuitArgs()
        {
        }
        public static new VirtualCircuitArgs Empty => new VirtualCircuitArgs();
    }

    public sealed class VirtualCircuitState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The provisioned data rate of the connection. To get a list of the available bandwidth levels (that is, shapes), see [ListFastConnectProviderServiceVirtualCircuitBandwidthShapes](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/FastConnectProviderService/ListFastConnectProviderVirtualCircuitBandwidthShapes).  Example: `10 Gbps`
        /// </summary>
        [Input("bandwidthShapeName")]
        public Input<string>? BandwidthShapeName { get; set; }

        /// <summary>
        /// (Updatable) Set to `ENABLED` (the default) to activate the BGP session of the virtual circuit, set to `DISABLED` to deactivate the virtual circuit.
        /// </summary>
        [Input("bgpAdminState")]
        public Input<string>? BgpAdminState { get; set; }

        /// <summary>
        /// The state of the Ipv6 BGP session associated with the virtual circuit.
        /// </summary>
        [Input("bgpIpv6sessionState")]
        public Input<string>? BgpIpv6sessionState { get; set; }

        /// <summary>
        /// Deprecated. Instead use the information in [FastConnectProviderService](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/FastConnectProviderService/).
        /// </summary>
        [Input("bgpManagement")]
        public Input<string>? BgpManagement { get; set; }

        /// <summary>
        /// The state of the Ipv4 BGP session associated with the virtual circuit.
        /// </summary>
        [Input("bgpSessionState")]
        public Input<string>? BgpSessionState { get; set; }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to contain the virtual circuit.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("crossConnectMappings")]
        private InputList<Inputs.VirtualCircuitCrossConnectMappingGetArgs>? _crossConnectMappings;

        /// <summary>
        /// (Updatable) Create a `CrossConnectMapping` for each cross-connect or cross-connect group this virtual circuit will run on.
        /// </summary>
        public InputList<Inputs.VirtualCircuitCrossConnectMappingGetArgs> CrossConnectMappings
        {
            get => _crossConnectMappings ?? (_crossConnectMappings = new InputList<Inputs.VirtualCircuitCrossConnectMappingGetArgs>());
            set => _crossConnectMappings = value;
        }

        /// <summary>
        /// (Updatable) Your BGP ASN (either public or private). Provide this value only if there's a BGP session that goes from your edge router to Oracle. Otherwise, leave this empty or null. Can be a 2-byte or 4-byte ASN. Uses "asplain" format.  Example: `12345` (2-byte) or `1587232876` (4-byte)
        /// </summary>
        [Input("customerAsn")]
        public Input<string>? CustomerAsn { get; set; }

        /// <summary>
        /// (Updatable) Deprecated. Instead use `customerAsn`. If you specify values for both, the request will be rejected.
        /// </summary>
        [Input("customerBgpAsn")]
        public Input<int>? CustomerBgpAsn { get; set; }

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) For private virtual circuits only. The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [dynamic routing gateway (DRG)](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Drg) that this virtual circuit uses.
        /// </summary>
        [Input("gatewayId")]
        public Input<string>? GatewayId { get; set; }

        /// <summary>
        /// (Updatable) The layer 3 IP MTU to use with this virtual circuit.
        /// </summary>
        [Input("ipMtu")]
        public Input<string>? IpMtu { get; set; }

        /// <summary>
        /// (Updatable) Set to `true` to enable BFD for IPv4 BGP peering, or set to `false` to disable BFD. If this is not set, the default is `false`.
        /// </summary>
        [Input("isBfdEnabled")]
        public Input<bool>? IsBfdEnabled { get; set; }

        /// <summary>
        /// (Updatable) Set to `true` for the virtual circuit to carry only encrypted traffic, or set to `false` for the virtual circuit to carry unencrypted traffic. If this is not set, the default is `false`.
        /// </summary>
        [Input("isTransportMode")]
        public Input<bool>? IsTransportMode { get; set; }

        /// <summary>
        /// The Oracle BGP ASN.
        /// </summary>
        [Input("oracleBgpAsn")]
        public Input<int>? OracleBgpAsn { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the service offered by the provider (if you're connecting via a provider). To get a list of the available service offerings, see [ListFastConnectProviderServices](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/FastConnectProviderService/ListFastConnectProviderServices).
        /// </summary>
        [Input("providerServiceId")]
        public Input<string>? ProviderServiceId { get; set; }

        /// <summary>
        /// (Updatable) The service key name offered by the provider (if the customer is connecting via a provider).
        /// </summary>
        [Input("providerServiceKeyName")]
        public Input<string>? ProviderServiceKeyName { get; set; }

        /// <summary>
        /// The provider's state in relation to this virtual circuit (if the customer is connecting via a provider). ACTIVE means the provider has provisioned the virtual circuit from their end. INACTIVE means the provider has not yet provisioned the virtual circuit, or has de-provisioned it.
        /// </summary>
        [Input("providerState")]
        public Input<string>? ProviderState { get; set; }

        [Input("publicPrefixes")]
        private InputList<Inputs.VirtualCircuitPublicPrefixGetArgs>? _publicPrefixes;

        /// <summary>
        /// (Updatable) For a public virtual circuit. The public IP prefixes (CIDRs) the customer wants to advertise across the connection.
        /// </summary>
        public InputList<Inputs.VirtualCircuitPublicPrefixGetArgs> PublicPrefixes
        {
            get => _publicPrefixes ?? (_publicPrefixes = new InputList<Inputs.VirtualCircuitPublicPrefixGetArgs>());
            set => _publicPrefixes = value;
        }

        /// <summary>
        /// Provider-supplied reference information about this virtual circuit (if the customer is connecting via a provider).
        /// </summary>
        [Input("referenceComment")]
        public Input<string>? ReferenceComment { get; set; }

        /// <summary>
        /// The Oracle Cloud Infrastructure region where this virtual circuit is located. Example: `phx`
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("routingPolicies")]
        private InputList<string>? _routingPolicies;

        /// <summary>
        /// (Updatable) The routing policy sets how routing information about the Oracle cloud is shared over a public virtual circuit. Policies available are: `ORACLE_SERVICE_NETWORK`, `REGIONAL`, `MARKET_LEVEL`, and `GLOBAL`. See [Route Filtering](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/routingonprem.htm#route_filtering) for details. By default, routing information is shared for all routes in the same market.
        /// </summary>
        public InputList<string> RoutingPolicies
        {
            get => _routingPolicies ?? (_routingPolicies = new InputList<string>());
            set => _routingPolicies = value;
        }

        /// <summary>
        /// Provider service type.
        /// </summary>
        [Input("serviceType")]
        public Input<string>? ServiceType { get; set; }

        /// <summary>
        /// The virtual circuit's current state. For information about the different states, see [FastConnect Overview](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/fastconnect.htm).
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The date and time the virtual circuit was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The type of IP addresses used in this virtual circuit. PRIVATE means [RFC 1918](https://tools.ietf.org/html/rfc1918) addresses (10.0.0.0/8, 172.16/12, and 192.168/16).
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public VirtualCircuitState()
        {
        }
        public static new VirtualCircuitState Empty => new VirtualCircuitState();
    }
}
