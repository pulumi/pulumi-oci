// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Core
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testVolumeGroup = new Oci.Core.VolumeGroup("test_volume_group", new()
    ///     {
    ///         AvailabilityDomain = volumeGroupAvailabilityDomain,
    ///         CompartmentId = compartmentId,
    ///         SourceDetails = new Oci.Core.Inputs.VolumeGroupSourceDetailsArgs
    ///         {
    ///             Type = "volumeIds",
    ///             VolumeIds = new[]
    ///             {
    ///                 volumeGroupSourceId,
    ///             },
    ///         },
    ///         BackupPolicyId = testVolumeBackupPolicies.VolumeBackupPolicies[0].Id,
    ///         ClusterPlacementGroupId = testGroup.Id,
    ///         DefinedTags = 
    ///         {
    ///             { "Operations.CostCenter", "42" },
    ///         },
    ///         DisplayName = volumeGroupDisplayName,
    ///         FreeformTags = 
    ///         {
    ///             { "Department", "Finance" },
    ///         },
    ///         VolumeGroupReplicas = new[]
    ///         {
    ///             new Oci.Core.Inputs.VolumeGroupVolumeGroupReplicaArgs
    ///             {
    ///                 AvailabilityDomain = volumeGroupVolumeGroupReplicasAvailabilityDomain,
    ///                 DisplayName = volumeGroupVolumeGroupReplicasDisplayName,
    ///                 XrrKmsKeyId = testKey.Id,
    ///             },
    ///         },
    ///         VolumeIds = new[]
    ///         {
    ///             volumeGroupSourceId,
    ///         },
    ///         XrcKmsKeyId = testKey.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// VolumeGroups can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:Core/volumeGroup:VolumeGroup test_volume_group "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:Core/volumeGroup:VolumeGroup")]
    public partial class VolumeGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The availability domain of the volume group.
        /// </summary>
        [Output("availabilityDomain")]
        public Output<string> AvailabilityDomain { get; private set; } = null!;

        /// <summary>
        /// If provided, specifies the ID of the volume backup policy to assign to the newly created volume group. If omitted, no policy will be assigned. This field is deprecated. Use the `oci.Core.getVolumeBackupPolicyAssignments` instead to assign a backup policy to a volume group.
        /// </summary>
        [Output("backupPolicyId")]
        public Output<string> BackupPolicyId { get; private set; } = null!;

        /// <summary>
        /// The clusterPlacementGroup Id of the volume group for volume group placement.
        /// </summary>
        [Output("clusterPlacementGroupId")]
        public Output<string> ClusterPlacementGroupId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The OCID of the compartment that contains the volume group.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, string>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, string>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// Specifies whether the newly created cloned volume group's data has finished copying from the source volume group or backup.
        /// </summary>
        [Output("isHydrated")]
        public Output<bool> IsHydrated { get; private set; } = null!;

        [Output("preserveVolumeReplica")]
        public Output<bool?> PreserveVolumeReplica { get; private set; } = null!;

        /// <summary>
        /// The aggregate size of the volume group in GBs.
        /// </summary>
        [Output("sizeInGbs")]
        public Output<string> SizeInGbs { get; private set; } = null!;

        /// <summary>
        /// The aggregate size of the volume group in MBs.
        /// </summary>
        [Output("sizeInMbs")]
        public Output<string> SizeInMbs { get; private set; } = null!;

        /// <summary>
        /// Specifies the source for a volume group.
        /// </summary>
        [Output("sourceDetails")]
        public Output<Outputs.VolumeGroupSourceDetails> SourceDetails { get; private set; } = null!;

        /// <summary>
        /// The current state of a volume group.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The date and time the volume group was created. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The list of volume group replicas that this volume group will be enabled to have in the specified destination availability domains.
        /// </summary>
        [Output("volumeGroupReplicas")]
        public Output<ImmutableArray<Outputs.VolumeGroupVolumeGroupReplica>> VolumeGroupReplicas { get; private set; } = null!;

        [Output("volumeGroupReplicasDeletion")]
        public Output<bool?> VolumeGroupReplicasDeletion { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Use this for update operation only. This field is not supported during creation. For create use `VolumeIds` under `SourceDetails`.
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("volumeIds")]
        public Output<ImmutableArray<string>> VolumeIds { get; private set; } = null!;

        /// <summary>
        /// The OCID of the Vault service key which is the master encryption key for the volume's cross region backups, which will be used in the destination region to encrypt the backup's encryption keys. For more information about the Vault service and encryption keys, see [Overview of Vault service](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm) and [Using Keys](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Tasks/usingkeys.htm).
        /// </summary>
        [Output("xrcKmsKeyId")]
        public Output<string> XrcKmsKeyId { get; private set; } = null!;


        /// <summary>
        /// Create a VolumeGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VolumeGroup(string name, VolumeGroupArgs args, CustomResourceOptions? options = null)
            : base("oci:Core/volumeGroup:VolumeGroup", name, args ?? new VolumeGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VolumeGroup(string name, Input<string> id, VolumeGroupState? state = null, CustomResourceOptions? options = null)
            : base("oci:Core/volumeGroup:VolumeGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VolumeGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VolumeGroup Get(string name, Input<string> id, VolumeGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new VolumeGroup(name, id, state, options);
        }
    }

    public sealed class VolumeGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The availability domain of the volume group.
        /// </summary>
        [Input("availabilityDomain", required: true)]
        public Input<string> AvailabilityDomain { get; set; } = null!;

        /// <summary>
        /// If provided, specifies the ID of the volume backup policy to assign to the newly created volume group. If omitted, no policy will be assigned. This field is deprecated. Use the `oci.Core.getVolumeBackupPolicyAssignments` instead to assign a backup policy to a volume group.
        /// </summary>
        [Input("backupPolicyId")]
        public Input<string>? BackupPolicyId { get; set; }

        /// <summary>
        /// The clusterPlacementGroup Id of the volume group for volume group placement.
        /// </summary>
        [Input("clusterPlacementGroupId")]
        public Input<string>? ClusterPlacementGroupId { get; set; }

        /// <summary>
        /// (Updatable) The OCID of the compartment that contains the volume group.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        [Input("preserveVolumeReplica")]
        public Input<bool>? PreserveVolumeReplica { get; set; }

        /// <summary>
        /// Specifies the source for a volume group.
        /// </summary>
        [Input("sourceDetails", required: true)]
        public Input<Inputs.VolumeGroupSourceDetailsArgs> SourceDetails { get; set; } = null!;

        [Input("volumeGroupReplicas")]
        private InputList<Inputs.VolumeGroupVolumeGroupReplicaArgs>? _volumeGroupReplicas;

        /// <summary>
        /// (Updatable) The list of volume group replicas that this volume group will be enabled to have in the specified destination availability domains.
        /// </summary>
        public InputList<Inputs.VolumeGroupVolumeGroupReplicaArgs> VolumeGroupReplicas
        {
            get => _volumeGroupReplicas ?? (_volumeGroupReplicas = new InputList<Inputs.VolumeGroupVolumeGroupReplicaArgs>());
            set => _volumeGroupReplicas = value;
        }

        [Input("volumeGroupReplicasDeletion")]
        public Input<bool>? VolumeGroupReplicasDeletion { get; set; }

        [Input("volumeIds")]
        private InputList<string>? _volumeIds;

        /// <summary>
        /// (Updatable) Use this for update operation only. This field is not supported during creation. For create use `VolumeIds` under `SourceDetails`.
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        public InputList<string> VolumeIds
        {
            get => _volumeIds ?? (_volumeIds = new InputList<string>());
            set => _volumeIds = value;
        }

        /// <summary>
        /// The OCID of the Vault service key which is the master encryption key for the volume's cross region backups, which will be used in the destination region to encrypt the backup's encryption keys. For more information about the Vault service and encryption keys, see [Overview of Vault service](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm) and [Using Keys](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Tasks/usingkeys.htm).
        /// </summary>
        [Input("xrcKmsKeyId")]
        public Input<string>? XrcKmsKeyId { get; set; }

        public VolumeGroupArgs()
        {
        }
        public static new VolumeGroupArgs Empty => new VolumeGroupArgs();
    }

    public sealed class VolumeGroupState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The availability domain of the volume group.
        /// </summary>
        [Input("availabilityDomain")]
        public Input<string>? AvailabilityDomain { get; set; }

        /// <summary>
        /// If provided, specifies the ID of the volume backup policy to assign to the newly created volume group. If omitted, no policy will be assigned. This field is deprecated. Use the `oci.Core.getVolumeBackupPolicyAssignments` instead to assign a backup policy to a volume group.
        /// </summary>
        [Input("backupPolicyId")]
        public Input<string>? BackupPolicyId { get; set; }

        /// <summary>
        /// The clusterPlacementGroup Id of the volume group for volume group placement.
        /// </summary>
        [Input("clusterPlacementGroupId")]
        public Input<string>? ClusterPlacementGroupId { get; set; }

        /// <summary>
        /// (Updatable) The OCID of the compartment that contains the volume group.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// Specifies whether the newly created cloned volume group's data has finished copying from the source volume group or backup.
        /// </summary>
        [Input("isHydrated")]
        public Input<bool>? IsHydrated { get; set; }

        [Input("preserveVolumeReplica")]
        public Input<bool>? PreserveVolumeReplica { get; set; }

        /// <summary>
        /// The aggregate size of the volume group in GBs.
        /// </summary>
        [Input("sizeInGbs")]
        public Input<string>? SizeInGbs { get; set; }

        /// <summary>
        /// The aggregate size of the volume group in MBs.
        /// </summary>
        [Input("sizeInMbs")]
        public Input<string>? SizeInMbs { get; set; }

        /// <summary>
        /// Specifies the source for a volume group.
        /// </summary>
        [Input("sourceDetails")]
        public Input<Inputs.VolumeGroupSourceDetailsGetArgs>? SourceDetails { get; set; }

        /// <summary>
        /// The current state of a volume group.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The date and time the volume group was created. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        [Input("volumeGroupReplicas")]
        private InputList<Inputs.VolumeGroupVolumeGroupReplicaGetArgs>? _volumeGroupReplicas;

        /// <summary>
        /// (Updatable) The list of volume group replicas that this volume group will be enabled to have in the specified destination availability domains.
        /// </summary>
        public InputList<Inputs.VolumeGroupVolumeGroupReplicaGetArgs> VolumeGroupReplicas
        {
            get => _volumeGroupReplicas ?? (_volumeGroupReplicas = new InputList<Inputs.VolumeGroupVolumeGroupReplicaGetArgs>());
            set => _volumeGroupReplicas = value;
        }

        [Input("volumeGroupReplicasDeletion")]
        public Input<bool>? VolumeGroupReplicasDeletion { get; set; }

        [Input("volumeIds")]
        private InputList<string>? _volumeIds;

        /// <summary>
        /// (Updatable) Use this for update operation only. This field is not supported during creation. For create use `VolumeIds` under `SourceDetails`.
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        public InputList<string> VolumeIds
        {
            get => _volumeIds ?? (_volumeIds = new InputList<string>());
            set => _volumeIds = value;
        }

        /// <summary>
        /// The OCID of the Vault service key which is the master encryption key for the volume's cross region backups, which will be used in the destination region to encrypt the backup's encryption keys. For more information about the Vault service and encryption keys, see [Overview of Vault service](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm) and [Using Keys](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Tasks/usingkeys.htm).
        /// </summary>
        [Input("xrcKmsKeyId")]
        public Input<string>? XrcKmsKeyId { get; set; }

        public VolumeGroupState()
        {
        }
        public static new VolumeGroupState Empty => new VolumeGroupState();
    }
}
