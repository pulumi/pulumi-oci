// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Core
{
    /// <summary>
    /// This resource provides the Volume Group Backup resource in Oracle Cloud Infrastructure Core service.
    /// 
    /// Creates a new backup volume group of the specified volume group.
    /// For more information, see [Volume Groups](https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/volumegroups.htm).
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testVolumeGroupBackup = new Oci.Core.VolumeGroupBackup("testVolumeGroupBackup", new()
    ///     {
    ///         VolumeGroupId = oci_core_volume_group.Test_volume_group.Id,
    ///         CompartmentId = @var.Compartment_id,
    ///         DefinedTags = 
    ///         {
    ///             { "Operations.CostCenter", "42" },
    ///         },
    ///         DisplayName = @var.Volume_group_backup_display_name,
    ///         FreeformTags = 
    ///         {
    ///             { "Department", "Finance" },
    ///         },
    ///         Type = @var.Volume_group_backup_type,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// VolumeGroupBackups can be imported using the `id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import oci:Core/volumeGroupBackup:VolumeGroupBackup test_volume_group_backup "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:Core/volumeGroupBackup:VolumeGroupBackup")]
    public partial class VolumeGroupBackup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) The OCID of the compartment that will contain the volume group backup. This parameter is optional, by default backup will be created in the same compartment and source volume group.
        /// </summary>
        [Output("compartmentId")]
        public Output<string?> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, object>?> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        [Output("displayName")]
        public Output<string?> DisplayName { get; private set; } = null!;

        /// <summary>
        /// The date and time the volume group backup will expire and be automatically deleted. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). This parameter will always be present for volume group backups that were created automatically by a scheduled-backup policy. For manually created volume group backups, it will be absent, signifying that there is no expiration time and the backup will last forever until manually deleted.
        /// </summary>
        [Output("expirationTime")]
        public Output<string?> ExpirationTime { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, object>?> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// The aggregate size of the volume group backup, in GBs.
        /// </summary>
        [Output("sizeInGbs")]
        public Output<string?> SizeInGbs { get; private set; } = null!;

        /// <summary>
        /// The aggregate size of the volume group backup, in MBs.
        /// </summary>
        [Output("sizeInMbs")]
        public Output<string?> SizeInMbs { get; private set; } = null!;

        /// <summary>
        /// Details of the volume group backup source in the cloud.
        /// </summary>
        [Output("sourceDetails")]
        public Output<Outputs.VolumeGroupBackupSourceDetails?> SourceDetails { get; private set; } = null!;

        /// <summary>
        /// Specifies whether the volume group backup was created manually, or via scheduled backup policy.
        /// </summary>
        [Output("sourceType")]
        public Output<string?> SourceType { get; private set; } = null!;

        /// <summary>
        /// The OCID of the source volume group backup.
        /// </summary>
        [Output("sourceVolumeGroupBackupId")]
        public Output<string?> SourceVolumeGroupBackupId { get; private set; } = null!;

        /// <summary>
        /// The current state of a volume group backup.
        /// </summary>
        [Output("state")]
        public Output<string?> State { get; private set; } = null!;

        /// <summary>
        /// The date and time the volume group backup was created. This is the time the actual point-in-time image of the volume group data was taken. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        [Output("timeCreated")]
        public Output<string?> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The date and time the request to create the volume group backup was received. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        [Output("timeRequestReceived")]
        public Output<string?> TimeRequestReceived { get; private set; } = null!;

        /// <summary>
        /// The type of backup to create. If omitted, defaults to incremental.
        /// * Allowed values are :
        /// * FULL
        /// * INCREMENTAL
        /// </summary>
        [Output("type")]
        public Output<string?> Type { get; private set; } = null!;

        /// <summary>
        /// The aggregate size used by the volume group backup, in GBs.  It is typically smaller than `size_in_gbs`, depending on the space consumed on the volume group and whether the volume backup is full or incremental.
        /// </summary>
        [Output("uniqueSizeInGbs")]
        public Output<string?> UniqueSizeInGbs { get; private set; } = null!;

        /// <summary>
        /// The aggregate size used by the volume group backup, in MBs.  It is typically smaller than `size_in_mbs`, depending on the space consumed on the volume group and whether the volume backup is full or incremental.
        /// </summary>
        [Output("uniqueSizeInMbs")]
        public Output<string?> UniqueSizeInMbs { get; private set; } = null!;

        /// <summary>
        /// OCIDs for the volume backups in this volume group backup.
        /// </summary>
        [Output("volumeBackupIds")]
        public Output<ImmutableArray<string>> VolumeBackupIds { get; private set; } = null!;

        /// <summary>
        /// The OCID of the volume group that needs to be backed up.
        /// </summary>
        [Output("volumeGroupId")]
        public Output<string?> VolumeGroupId { get; private set; } = null!;


        /// <summary>
        /// Create a VolumeGroupBackup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VolumeGroupBackup(string name, VolumeGroupBackupArgs? args = null, CustomResourceOptions? options = null)
            : base("oci:Core/volumeGroupBackup:VolumeGroupBackup", name, args ?? new VolumeGroupBackupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VolumeGroupBackup(string name, Input<string> id, VolumeGroupBackupState? state = null, CustomResourceOptions? options = null)
            : base("oci:Core/volumeGroupBackup:VolumeGroupBackup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VolumeGroupBackup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VolumeGroupBackup Get(string name, Input<string> id, VolumeGroupBackupState? state = null, CustomResourceOptions? options = null)
        {
            return new VolumeGroupBackup(name, id, state, options);
        }
    }

    public sealed class VolumeGroupBackupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The OCID of the compartment that will contain the volume group backup. This parameter is optional, by default backup will be created in the same compartment and source volume group.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// Details of the volume group backup source in the cloud.
        /// </summary>
        [Input("sourceDetails")]
        public Input<Inputs.VolumeGroupBackupSourceDetailsArgs>? SourceDetails { get; set; }

        /// <summary>
        /// The type of backup to create. If omitted, defaults to incremental.
        /// * Allowed values are :
        /// * FULL
        /// * INCREMENTAL
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// The OCID of the volume group that needs to be backed up.
        /// </summary>
        [Input("volumeGroupId")]
        public Input<string>? VolumeGroupId { get; set; }

        public VolumeGroupBackupArgs()
        {
        }
        public static new VolumeGroupBackupArgs Empty => new VolumeGroupBackupArgs();
    }

    public sealed class VolumeGroupBackupState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The OCID of the compartment that will contain the volume group backup. This parameter is optional, by default backup will be created in the same compartment and source volume group.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// The date and time the volume group backup will expire and be automatically deleted. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). This parameter will always be present for volume group backups that were created automatically by a scheduled-backup policy. For manually created volume group backups, it will be absent, signifying that there is no expiration time and the backup will last forever until manually deleted.
        /// </summary>
        [Input("expirationTime")]
        public Input<string>? ExpirationTime { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// The aggregate size of the volume group backup, in GBs.
        /// </summary>
        [Input("sizeInGbs")]
        public Input<string>? SizeInGbs { get; set; }

        /// <summary>
        /// The aggregate size of the volume group backup, in MBs.
        /// </summary>
        [Input("sizeInMbs")]
        public Input<string>? SizeInMbs { get; set; }

        /// <summary>
        /// Details of the volume group backup source in the cloud.
        /// </summary>
        [Input("sourceDetails")]
        public Input<Inputs.VolumeGroupBackupSourceDetailsGetArgs>? SourceDetails { get; set; }

        /// <summary>
        /// Specifies whether the volume group backup was created manually, or via scheduled backup policy.
        /// </summary>
        [Input("sourceType")]
        public Input<string>? SourceType { get; set; }

        /// <summary>
        /// The OCID of the source volume group backup.
        /// </summary>
        [Input("sourceVolumeGroupBackupId")]
        public Input<string>? SourceVolumeGroupBackupId { get; set; }

        /// <summary>
        /// The current state of a volume group backup.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The date and time the volume group backup was created. This is the time the actual point-in-time image of the volume group data was taken. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The date and time the request to create the volume group backup was received. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        [Input("timeRequestReceived")]
        public Input<string>? TimeRequestReceived { get; set; }

        /// <summary>
        /// The type of backup to create. If omitted, defaults to incremental.
        /// * Allowed values are :
        /// * FULL
        /// * INCREMENTAL
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// The aggregate size used by the volume group backup, in GBs.  It is typically smaller than `size_in_gbs`, depending on the space consumed on the volume group and whether the volume backup is full or incremental.
        /// </summary>
        [Input("uniqueSizeInGbs")]
        public Input<string>? UniqueSizeInGbs { get; set; }

        /// <summary>
        /// The aggregate size used by the volume group backup, in MBs.  It is typically smaller than `size_in_mbs`, depending on the space consumed on the volume group and whether the volume backup is full or incremental.
        /// </summary>
        [Input("uniqueSizeInMbs")]
        public Input<string>? UniqueSizeInMbs { get; set; }

        [Input("volumeBackupIds")]
        private InputList<string>? _volumeBackupIds;

        /// <summary>
        /// OCIDs for the volume backups in this volume group backup.
        /// </summary>
        public InputList<string> VolumeBackupIds
        {
            get => _volumeBackupIds ?? (_volumeBackupIds = new InputList<string>());
            set => _volumeBackupIds = value;
        }

        /// <summary>
        /// The OCID of the volume group that needs to be backed up.
        /// </summary>
        [Input("volumeGroupId")]
        public Input<string>? VolumeGroupId { get; set; }

        public VolumeGroupBackupState()
        {
        }
        public static new VolumeGroupBackupState Empty => new VolumeGroupBackupState();
    }
}
