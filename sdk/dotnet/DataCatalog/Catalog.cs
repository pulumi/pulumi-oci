// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataCatalog
{
    /// <summary>
    /// This resource provides the Catalog resource in Oracle Cloud Infrastructure Data Catalog service.
    /// 
    /// Creates a new data catalog instance that includes a console and an API URL for managing metadata operations.
    /// For more information, please see the documentation.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testCatalog = new Oci.DataCatalog.Catalog("testCatalog", new()
    ///     {
    ///         CompartmentId = @var.Compartment_id,
    ///         DefinedTags = 
    ///         {
    ///             { "foo-namespace.bar-key", "value" },
    ///         },
    ///         DisplayName = @var.Catalog_display_name,
    ///         FreeformTags = 
    ///         {
    ///             { "bar-key", "value" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Catalogs can be imported using the `id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import oci:DataCatalog/catalog:Catalog test_catalog "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:DataCatalog/catalog:Catalog")]
    public partial class Catalog : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) The list of private reverse connection endpoints attached to the catalog
        /// </summary>
        [Output("attachedCatalogPrivateEndpoints")]
        public Output<ImmutableArray<string>> AttachedCatalogPrivateEndpoints { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Compartment identifier.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, object>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Data catalog identifier.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, object>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// An message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in 'Failed' state.
        /// </summary>
        [Output("lifecycleDetails")]
        public Output<string> LifecycleDetails { get; private set; } = null!;

        /// <summary>
        /// The number of data objects added to the data catalog. Please see the data catalog documentation for further information on how this is calculated.
        /// </summary>
        [Output("numberOfObjects")]
        public Output<int> NumberOfObjects { get; private set; } = null!;

        /// <summary>
        /// The REST front endpoint URL to the data catalog instance.
        /// </summary>
        [Output("serviceApiUrl")]
        public Output<string> ServiceApiUrl { get; private set; } = null!;

        /// <summary>
        /// The console front endpoint URL to the data catalog instance.
        /// </summary>
        [Output("serviceConsoleUrl")]
        public Output<string> ServiceConsoleUrl { get; private set; } = null!;

        /// <summary>
        /// The current state of the data catalog resource.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The time the data catalog was created. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The time the data catalog was updated. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;


        /// <summary>
        /// Create a Catalog resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Catalog(string name, CatalogArgs args, CustomResourceOptions? options = null)
            : base("oci:DataCatalog/catalog:Catalog", name, args ?? new CatalogArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Catalog(string name, Input<string> id, CatalogState? state = null, CustomResourceOptions? options = null)
            : base("oci:DataCatalog/catalog:Catalog", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Catalog resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Catalog Get(string name, Input<string> id, CatalogState? state = null, CustomResourceOptions? options = null)
        {
            return new Catalog(name, id, state, options);
        }
    }

    public sealed class CatalogArgs : global::Pulumi.ResourceArgs
    {
        [Input("attachedCatalogPrivateEndpoints")]
        private InputList<string>? _attachedCatalogPrivateEndpoints;

        /// <summary>
        /// (Updatable) The list of private reverse connection endpoints attached to the catalog
        /// </summary>
        public InputList<string> AttachedCatalogPrivateEndpoints
        {
            get => _attachedCatalogPrivateEndpoints ?? (_attachedCatalogPrivateEndpoints = new InputList<string>());
            set => _attachedCatalogPrivateEndpoints = value;
        }

        /// <summary>
        /// (Updatable) Compartment identifier.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) Data catalog identifier.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        public CatalogArgs()
        {
        }
        public static new CatalogArgs Empty => new CatalogArgs();
    }

    public sealed class CatalogState : global::Pulumi.ResourceArgs
    {
        [Input("attachedCatalogPrivateEndpoints")]
        private InputList<string>? _attachedCatalogPrivateEndpoints;

        /// <summary>
        /// (Updatable) The list of private reverse connection endpoints attached to the catalog
        /// </summary>
        public InputList<string> AttachedCatalogPrivateEndpoints
        {
            get => _attachedCatalogPrivateEndpoints ?? (_attachedCatalogPrivateEndpoints = new InputList<string>());
            set => _attachedCatalogPrivateEndpoints = value;
        }

        /// <summary>
        /// (Updatable) Compartment identifier.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) Data catalog identifier.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// An message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in 'Failed' state.
        /// </summary>
        [Input("lifecycleDetails")]
        public Input<string>? LifecycleDetails { get; set; }

        /// <summary>
        /// The number of data objects added to the data catalog. Please see the data catalog documentation for further information on how this is calculated.
        /// </summary>
        [Input("numberOfObjects")]
        public Input<int>? NumberOfObjects { get; set; }

        /// <summary>
        /// The REST front endpoint URL to the data catalog instance.
        /// </summary>
        [Input("serviceApiUrl")]
        public Input<string>? ServiceApiUrl { get; set; }

        /// <summary>
        /// The console front endpoint URL to the data catalog instance.
        /// </summary>
        [Input("serviceConsoleUrl")]
        public Input<string>? ServiceConsoleUrl { get; set; }

        /// <summary>
        /// The current state of the data catalog resource.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The time the data catalog was created. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The time the data catalog was updated. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        public CatalogState()
        {
        }
        public static new CatalogState Empty => new CatalogState();
    }
}
