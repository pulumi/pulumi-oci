// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataCatalog
{
    public static class GetConnection
    {
        /// <summary>
        /// This data source provides details about a specific Connection resource in Oracle Cloud Infrastructure Data Catalog service.
        /// 
        /// Gets a specific data asset connection by key.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testConnection = Oci.DataCatalog.GetConnection.Invoke(new()
        ///     {
        ///         CatalogId = oci_datacatalog_catalog.Test_catalog.Id,
        ///         ConnectionKey = @var.Connection_connection_key,
        ///         DataAssetKey = @var.Connection_data_asset_key,
        ///         Fields = @var.Connection_fields,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetConnectionResult> InvokeAsync(GetConnectionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetConnectionResult>("oci:DataCatalog/getConnection:getConnection", args ?? new GetConnectionArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Connection resource in Oracle Cloud Infrastructure Data Catalog service.
        /// 
        /// Gets a specific data asset connection by key.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testConnection = Oci.DataCatalog.GetConnection.Invoke(new()
        ///     {
        ///         CatalogId = oci_datacatalog_catalog.Test_catalog.Id,
        ///         ConnectionKey = @var.Connection_connection_key,
        ///         DataAssetKey = @var.Connection_data_asset_key,
        ///         Fields = @var.Connection_fields,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetConnectionResult> Invoke(GetConnectionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetConnectionResult>("oci:DataCatalog/getConnection:getConnection", args ?? new GetConnectionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetConnectionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique catalog identifier.
        /// </summary>
        [Input("catalogId", required: true)]
        public string CatalogId { get; set; } = null!;

        /// <summary>
        /// Unique connection key.
        /// </summary>
        [Input("connectionKey", required: true)]
        public string ConnectionKey { get; set; } = null!;

        /// <summary>
        /// Unique data asset key.
        /// </summary>
        [Input("dataAssetKey", required: true)]
        public string DataAssetKey { get; set; } = null!;

        [Input("fields")]
        private List<string>? _fields;

        /// <summary>
        /// Specifies the fields to return in a connection response.
        /// </summary>
        public List<string> Fields
        {
            get => _fields ?? (_fields = new List<string>());
            set => _fields = value;
        }

        public GetConnectionArgs()
        {
        }
        public static new GetConnectionArgs Empty => new GetConnectionArgs();
    }

    public sealed class GetConnectionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique catalog identifier.
        /// </summary>
        [Input("catalogId", required: true)]
        public Input<string> CatalogId { get; set; } = null!;

        /// <summary>
        /// Unique connection key.
        /// </summary>
        [Input("connectionKey", required: true)]
        public Input<string> ConnectionKey { get; set; } = null!;

        /// <summary>
        /// Unique data asset key.
        /// </summary>
        [Input("dataAssetKey", required: true)]
        public Input<string> DataAssetKey { get; set; } = null!;

        [Input("fields")]
        private InputList<string>? _fields;

        /// <summary>
        /// Specifies the fields to return in a connection response.
        /// </summary>
        public InputList<string> Fields
        {
            get => _fields ?? (_fields = new InputList<string>());
            set => _fields = value;
        }

        public GetConnectionInvokeArgs()
        {
        }
        public static new GetConnectionInvokeArgs Empty => new GetConnectionInvokeArgs();
    }


    [OutputType]
    public sealed class GetConnectionResult
    {
        public readonly string CatalogId;
        public readonly string ConnectionKey;
        /// <summary>
        /// OCID of the user who created the connection.
        /// </summary>
        public readonly string? CreatedById;
        /// <summary>
        /// Unique key of the parent data asset.
        /// </summary>
        public readonly string DataAssetKey;
        /// <summary>
        /// A description of the connection.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// A user-friendly display name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableDictionary<string, object>? EncProperties;
        /// <summary>
        /// Unique external key of this object from the source system.
        /// </summary>
        public readonly string? ExternalKey;
        public readonly ImmutableArray<string> Fields;
        public readonly string? Id;
        /// <summary>
        /// Indicates whether this connection is the default connection.
        /// </summary>
        public readonly bool? IsDefault;
        /// <summary>
        /// Unique connection key that is immutable.
        /// </summary>
        public readonly string? Key;
        /// <summary>
        /// A map of maps that contains the properties which are specific to the connection type. Each connection type definition defines it's set of required and optional properties. The map keys are category names and the values are maps of property name to property value. Every property is contained inside of a category. Most connections have required properties within the "default" category. Example: `{"properties": { "default": { "username": "user1"}}}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? Properties;
        /// <summary>
        /// The current state of the connection.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// The date and time the connection was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2019-03-25T21:10:29.600Z`
        /// </summary>
        public readonly string? TimeCreated;
        /// <summary>
        /// Time that the connections status was last updated. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
        /// </summary>
        public readonly string? TimeStatusUpdated;
        /// <summary>
        /// The last time that any change was made to the connection. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
        /// </summary>
        public readonly string? TimeUpdated;
        /// <summary>
        /// The key of the object type. Type key's can be found via the '/types' endpoint.
        /// </summary>
        public readonly string? TypeKey;
        /// <summary>
        /// OCID of the user who modified the connection.
        /// </summary>
        public readonly string? UpdatedById;
        /// <summary>
        /// URI to the connection instance in the API.
        /// </summary>
        public readonly string? Uri;

        [OutputConstructor]
        private GetConnectionResult(
            string catalogId,

            string connectionKey,

            string? createdById,

            string dataAssetKey,

            string? description,

            string? displayName,

            ImmutableDictionary<string, object>? encProperties,

            string? externalKey,

            ImmutableArray<string> fields,

            string? id,

            bool? isDefault,

            string? key,

            ImmutableDictionary<string, object>? properties,

            string? state,

            string? timeCreated,

            string? timeStatusUpdated,

            string? timeUpdated,

            string? typeKey,

            string? updatedById,

            string? uri)
        {
            CatalogId = catalogId;
            ConnectionKey = connectionKey;
            CreatedById = createdById;
            DataAssetKey = dataAssetKey;
            Description = description;
            DisplayName = displayName;
            EncProperties = encProperties;
            ExternalKey = externalKey;
            Fields = fields;
            Id = id;
            IsDefault = isDefault;
            Key = key;
            Properties = properties;
            State = state;
            TimeCreated = timeCreated;
            TimeStatusUpdated = timeStatusUpdated;
            TimeUpdated = timeUpdated;
            TypeKey = typeKey;
            UpdatedById = updatedById;
            Uri = uri;
        }
    }
}
