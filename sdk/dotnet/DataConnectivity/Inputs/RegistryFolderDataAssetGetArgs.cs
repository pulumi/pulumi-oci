// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataConnectivity.Inputs
{

    public sealed class RegistryFolderDataAssetGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("assetProperties")]
        private InputMap<object>? _assetProperties;

        /// <summary>
        /// (Updatable) Additional properties for the data asset.
        /// </summary>
        public InputMap<object> AssetProperties
        {
            get => _assetProperties ?? (_assetProperties = new InputMap<object>());
            set => _assetProperties = value;
        }

        /// <summary>
        /// (Updatable) The default connection key.
        /// </summary>
        [Input("defaultConnection")]
        public Input<Inputs.RegistryFolderDataAssetDefaultConnectionGetArgs>? DefaultConnection { get; set; }

        /// <summary>
        /// (Updatable) User-defined description of the folder.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) The external key of the object.
        /// </summary>
        [Input("externalKey")]
        public Input<string>? ExternalKey { get; set; }

        /// <summary>
        /// (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with an upper case letter or underscore. The value can be modified.
        /// </summary>
        [Input("identifier", required: true)]
        public Input<string> Identifier { get; set; } = null!;

        /// <summary>
        /// (Updatable) Generated key that can be used in API calls to identify the folder. In scenarios where reference to the folder is required, a value can be passed in create.
        /// </summary>
        [Input("key", required: true)]
        public Input<string> Key { get; set; } = null!;

        /// <summary>
        /// (Updatable) A summary type containing information about the object including its key, name, the time that it was created or updated, and the user who created or updated it.
        /// </summary>
        [Input("metadata")]
        public Input<Inputs.RegistryFolderDataAssetMetadataGetArgs>? Metadata { get; set; }

        /// <summary>
        /// (Updatable) The type of the folder.
        /// </summary>
        [Input("modelType")]
        public Input<string>? ModelType { get; set; }

        /// <summary>
        /// (Updatable) The model version of an object.
        /// </summary>
        [Input("modelVersion")]
        public Input<string>? ModelVersion { get; set; }

        /// <summary>
        /// (Updatable) Free form text without any restriction on the permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// (Updatable) The type system maps from and to a type.
        /// </summary>
        [Input("nativeTypeSystem")]
        public Input<Inputs.RegistryFolderDataAssetNativeTypeSystemGetArgs>? NativeTypeSystem { get; set; }

        /// <summary>
        /// (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
        /// </summary>
        [Input("objectStatus")]
        public Input<int>? ObjectStatus { get; set; }

        /// <summary>
        /// (Updatable) The version of the object that is used to track changes in the object instance.
        /// </summary>
        [Input("objectVersion")]
        public Input<int>? ObjectVersion { get; set; }

        [Input("properties")]
        private InputMap<object>? _properties;

        /// <summary>
        /// (Updatable) All the properties for the data asset in a key-value map format.
        /// </summary>
        public InputMap<object> Properties
        {
            get => _properties ?? (_properties = new InputMap<object>());
            set => _properties = value;
        }

        /// <summary>
        /// (Updatable) Information about the object and its parent.
        /// </summary>
        [Input("registryMetadata")]
        public Input<Inputs.RegistryFolderDataAssetRegistryMetadataGetArgs>? RegistryMetadata { get; set; }

        /// <summary>
        /// (Updatable) Specific DataAsset Type
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public RegistryFolderDataAssetGetArgs()
        {
        }
        public static new RegistryFolderDataAssetGetArgs Empty => new RegistryFolderDataAssetGetArgs();
    }
}
