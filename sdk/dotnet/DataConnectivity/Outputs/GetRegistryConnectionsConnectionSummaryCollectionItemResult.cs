// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataConnectivity.Outputs
{

    [OutputType]
    public sealed class GetRegistryConnectionsConnectionSummaryCollectionItemResult
    {
        /// <summary>
        /// The properties for the connection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRegistryConnectionsConnectionSummaryCollectionItemConnectionPropertyResult> ConnectionProperties;
        /// <summary>
        /// The description of the aggregator.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The identifier of the aggregator.
        /// </summary>
        public readonly string Identifier;
        /// <summary>
        /// The default property for the connection.
        /// </summary>
        public readonly bool IsDefault;
        /// <summary>
        /// The identifying key for the object.
        /// </summary>
        public readonly string Key;
        /// <summary>
        /// A summary type containing information about the object including its key, name and when/who created/updated it.
        /// </summary>
        public readonly Outputs.GetRegistryConnectionsConnectionSummaryCollectionItemMetadataResult Metadata;
        /// <summary>
        /// The object's type.
        /// </summary>
        public readonly string ModelType;
        /// <summary>
        /// The object's model version.
        /// </summary>
        public readonly string ModelVersion;
        /// <summary>
        /// Used to filter by the name of the object.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
        /// </summary>
        public readonly int ObjectStatus;
        /// <summary>
        /// The version of the object that is used to track changes in the object instance.
        /// </summary>
        public readonly int ObjectVersion;
        /// <summary>
        /// The schema object.
        /// </summary>
        public readonly Outputs.GetRegistryConnectionsConnectionSummaryCollectionItemPrimarySchemaResult PrimarySchema;
        /// <summary>
        /// All the properties for the connection in a key-value map format.
        /// </summary>
        public readonly ImmutableDictionary<string, object> Properties;
        /// <summary>
        /// The registry Ocid.
        /// </summary>
        public readonly string RegistryId;
        /// <summary>
        /// Information about the object and its parent.
        /// </summary>
        public readonly Outputs.GetRegistryConnectionsConnectionSummaryCollectionItemRegistryMetadataResult RegistryMetadata;
        /// <summary>
        /// Type of the object to filter the results with.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetRegistryConnectionsConnectionSummaryCollectionItemResult(
            ImmutableArray<Outputs.GetRegistryConnectionsConnectionSummaryCollectionItemConnectionPropertyResult> connectionProperties,

            string description,

            string identifier,

            bool isDefault,

            string key,

            Outputs.GetRegistryConnectionsConnectionSummaryCollectionItemMetadataResult metadata,

            string modelType,

            string modelVersion,

            string name,

            int objectStatus,

            int objectVersion,

            Outputs.GetRegistryConnectionsConnectionSummaryCollectionItemPrimarySchemaResult primarySchema,

            ImmutableDictionary<string, object> properties,

            string registryId,

            Outputs.GetRegistryConnectionsConnectionSummaryCollectionItemRegistryMetadataResult registryMetadata,

            string type)
        {
            ConnectionProperties = connectionProperties;
            Description = description;
            Identifier = identifier;
            IsDefault = isDefault;
            Key = key;
            Metadata = metadata;
            ModelType = modelType;
            ModelVersion = modelVersion;
            Name = name;
            ObjectStatus = objectStatus;
            ObjectVersion = objectVersion;
            PrimarySchema = primarySchema;
            Properties = properties;
            RegistryId = registryId;
            RegistryMetadata = registryMetadata;
            Type = type;
        }
    }
}
