// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataConnectivity.Outputs
{

    [OutputType]
    public sealed class GetRegistryFolderDataAssetNativeTypeSystemTypeResult
    {
        /// <summary>
        /// The configuration details of a configurable object. This contains one or more config param definitions.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRegistryFolderDataAssetNativeTypeSystemTypeConfigDefinitionResult> ConfigDefinitions;
        /// <summary>
        /// User-defined description of the folder.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The data type.
        /// </summary>
        public readonly string DtType;
        /// <summary>
        /// Generated key that can be used in API calls to identify the folder. In scenarios where reference to the folder is required, a value can be passed in create.
        /// </summary>
        public readonly string Key;
        /// <summary>
        /// The type of the folder.
        /// </summary>
        public readonly string ModelType;
        /// <summary>
        /// The model version of an object.
        /// </summary>
        public readonly string ModelVersion;
        /// <summary>
        /// Free form text without any restriction on the permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
        /// </summary>
        public readonly int ObjectStatus;
        /// <summary>
        /// A reference to the parent object.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRegistryFolderDataAssetNativeTypeSystemTypeParentRefResult> ParentReves;
        /// <summary>
        /// The data type system name.
        /// </summary>
        public readonly string TypeSystemName;

        [OutputConstructor]
        private GetRegistryFolderDataAssetNativeTypeSystemTypeResult(
            ImmutableArray<Outputs.GetRegistryFolderDataAssetNativeTypeSystemTypeConfigDefinitionResult> configDefinitions,

            string description,

            string dtType,

            string key,

            string modelType,

            string modelVersion,

            string name,

            int objectStatus,

            ImmutableArray<Outputs.GetRegistryFolderDataAssetNativeTypeSystemTypeParentRefResult> parentReves,

            string typeSystemName)
        {
            ConfigDefinitions = configDefinitions;
            Description = description;
            DtType = dtType;
            Key = key;
            ModelType = modelType;
            ModelVersion = modelVersion;
            Name = name;
            ObjectStatus = objectStatus;
            ParentReves = parentReves;
            TypeSystemName = typeSystemName;
        }
    }
}
