// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataConnectivity.Outputs
{

    [OutputType]
    public sealed class GetRegistryFolderDataAssetResult
    {
        /// <summary>
        /// Additional properties for the data asset.
        /// </summary>
        public readonly ImmutableDictionary<string, object> AssetProperties;
        /// <summary>
        /// The default connection key.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRegistryFolderDataAssetDefaultConnectionResult> DefaultConnections;
        /// <summary>
        /// User-defined description of the folder.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The external key of the object.
        /// </summary>
        public readonly string ExternalKey;
        /// <summary>
        /// Value can only contain upper case letters, underscore, and numbers. It should begin with an upper case letter or underscore. The value can be modified.
        /// </summary>
        public readonly string Identifier;
        /// <summary>
        /// Generated key that can be used in API calls to identify the folder. In scenarios where reference to the folder is required, a value can be passed in create.
        /// </summary>
        public readonly string Key;
        /// <summary>
        /// A summary type containing information about the object including its key, name, the time that it was created or updated, and the user who created or updated it.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRegistryFolderDataAssetMetadataResult> Metadatas;
        /// <summary>
        /// The type of the folder.
        /// </summary>
        public readonly string ModelType;
        /// <summary>
        /// The model version of an object.
        /// </summary>
        public readonly string ModelVersion;
        /// <summary>
        /// Free form text without any restriction on the permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The type system maps from and to a type.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRegistryFolderDataAssetNativeTypeSystemResult> NativeTypeSystems;
        /// <summary>
        /// The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
        /// </summary>
        public readonly int ObjectStatus;
        /// <summary>
        /// The version of the object that is used to track changes in the object instance.
        /// </summary>
        public readonly int ObjectVersion;
        /// <summary>
        /// All the properties for the data asset in a key-value map format.
        /// </summary>
        public readonly ImmutableDictionary<string, object> Properties;
        /// <summary>
        /// Information about the object and its parent.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRegistryFolderDataAssetRegistryMetadataResult> RegistryMetadatas;
        /// <summary>
        /// Specific DataAsset Type
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetRegistryFolderDataAssetResult(
            ImmutableDictionary<string, object> assetProperties,

            ImmutableArray<Outputs.GetRegistryFolderDataAssetDefaultConnectionResult> defaultConnections,

            string description,

            string externalKey,

            string identifier,

            string key,

            ImmutableArray<Outputs.GetRegistryFolderDataAssetMetadataResult> metadatas,

            string modelType,

            string modelVersion,

            string name,

            ImmutableArray<Outputs.GetRegistryFolderDataAssetNativeTypeSystemResult> nativeTypeSystems,

            int objectStatus,

            int objectVersion,

            ImmutableDictionary<string, object> properties,

            ImmutableArray<Outputs.GetRegistryFolderDataAssetRegistryMetadataResult> registryMetadatas,

            string type)
        {
            AssetProperties = assetProperties;
            DefaultConnections = defaultConnections;
            Description = description;
            ExternalKey = externalKey;
            Identifier = identifier;
            Key = key;
            Metadatas = metadatas;
            ModelType = modelType;
            ModelVersion = modelVersion;
            Name = name;
            NativeTypeSystems = nativeTypeSystems;
            ObjectStatus = objectStatus;
            ObjectVersion = objectVersion;
            Properties = properties;
            RegistryMetadatas = registryMetadatas;
            Type = type;
        }
    }
}
