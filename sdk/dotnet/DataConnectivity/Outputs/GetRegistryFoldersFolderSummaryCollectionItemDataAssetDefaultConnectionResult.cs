// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataConnectivity.Outputs
{

    [OutputType]
    public sealed class GetRegistryFoldersFolderSummaryCollectionItemDataAssetDefaultConnectionResult
    {
        /// <summary>
        /// The properties for the connection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRegistryFoldersFolderSummaryCollectionItemDataAssetDefaultConnectionConnectionPropertyResult> ConnectionProperties;
        /// <summary>
        /// User-defined description for the folder.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
        /// </summary>
        public readonly string Identifier;
        /// <summary>
        /// The default property for the connection.
        /// </summary>
        public readonly bool IsDefault;
        /// <summary>
        /// Generated key that can be used in API calls to identify folder. On scenarios where reference to the folder is needed, a value can be passed in create.
        /// </summary>
        public readonly string Key;
        /// <summary>
        /// A summary type containing information about the object including its key, name and when/who created/updated it.
        /// </summary>
        public readonly Outputs.GetRegistryFoldersFolderSummaryCollectionItemDataAssetDefaultConnectionMetadataResult Metadata;
        /// <summary>
        /// The type of the folder.
        /// </summary>
        public readonly string ModelType;
        /// <summary>
        /// The model version of an object.
        /// </summary>
        public readonly string ModelVersion;
        /// <summary>
        /// Used to filter by the name of the object.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
        /// </summary>
        public readonly int ObjectStatus;
        /// <summary>
        /// The version of the object that is used to track changes in the object instance.
        /// </summary>
        public readonly int ObjectVersion;
        /// <summary>
        /// The schema object.
        /// </summary>
        public readonly Outputs.GetRegistryFoldersFolderSummaryCollectionItemDataAssetDefaultConnectionPrimarySchemaResult PrimarySchema;
        /// <summary>
        /// All the properties for the data asset in a key-value map format.
        /// </summary>
        public readonly ImmutableDictionary<string, object> Properties;
        /// <summary>
        /// Information about the object and its parent.
        /// </summary>
        public readonly Outputs.GetRegistryFoldersFolderSummaryCollectionItemDataAssetDefaultConnectionRegistryMetadataResult RegistryMetadata;
        /// <summary>
        /// Type of the object to filter the results with.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetRegistryFoldersFolderSummaryCollectionItemDataAssetDefaultConnectionResult(
            ImmutableArray<Outputs.GetRegistryFoldersFolderSummaryCollectionItemDataAssetDefaultConnectionConnectionPropertyResult> connectionProperties,

            string description,

            string identifier,

            bool isDefault,

            string key,

            Outputs.GetRegistryFoldersFolderSummaryCollectionItemDataAssetDefaultConnectionMetadataResult metadata,

            string modelType,

            string modelVersion,

            string name,

            int objectStatus,

            int objectVersion,

            Outputs.GetRegistryFoldersFolderSummaryCollectionItemDataAssetDefaultConnectionPrimarySchemaResult primarySchema,

            ImmutableDictionary<string, object> properties,

            Outputs.GetRegistryFoldersFolderSummaryCollectionItemDataAssetDefaultConnectionRegistryMetadataResult registryMetadata,

            string type)
        {
            ConnectionProperties = connectionProperties;
            Description = description;
            Identifier = identifier;
            IsDefault = isDefault;
            Key = key;
            Metadata = metadata;
            ModelType = modelType;
            ModelVersion = modelVersion;
            Name = name;
            ObjectStatus = objectStatus;
            ObjectVersion = objectVersion;
            PrimarySchema = primarySchema;
            Properties = properties;
            RegistryMetadata = registryMetadata;
            Type = type;
        }
    }
}
