// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataConnectivity
{
    /// <summary>
    /// This resource provides the Registry Folder resource in Oracle Cloud Infrastructure Data Connectivity service.
    /// 
    /// Creates a folder under a specefied registry.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var testRegistryFolder = new Oci.DataConnectivity.RegistryFolder("testRegistryFolder", new Oci.DataConnectivity.RegistryFolderArgs
    ///         {
    ///             Identifier = @var.Registry_folder_identifier,
    ///             RegistryId = oci_data_connectivity_registry.Test_registry.Id,
    ///             DataAssets = 
    ///             {
    ///                 new Oci.DataConnectivity.Inputs.RegistryFolderDataAssetArgs
    ///                 {
    ///                     Identifier = @var.Registry_folder_data_assets_identifier,
    ///                     Key = @var.Registry_folder_data_assets_key,
    ///                     Name = @var.Registry_folder_data_assets_name,
    ///                     AssetProperties = @var.Registry_folder_data_assets_asset_properties,
    ///                     DefaultConnection = new Oci.DataConnectivity.Inputs.RegistryFolderDataAssetDefaultConnectionArgs
    ///                     {
    ///                         Identifier = @var.Registry_folder_data_assets_default_connection_identifier,
    ///                         Key = @var.Registry_folder_data_assets_default_connection_key,
    ///                         Name = @var.Registry_folder_data_assets_default_connection_name,
    ///                         ConnectionProperties = 
    ///                         {
    ///                             new Oci.DataConnectivity.Inputs.RegistryFolderDataAssetDefaultConnectionConnectionPropertyArgs
    ///                             {
    ///                                 Name = @var.Registry_folder_data_assets_default_connection_connection_properties_name,
    ///                                 Value = @var.Registry_folder_data_assets_default_connection_connection_properties_value,
    ///                             },
    ///                         },
    ///                         Description = @var.Registry_folder_data_assets_default_connection_description,
    ///                         IsDefault = @var.Registry_folder_data_assets_default_connection_is_default,
    ///                         Metadata = new Oci.DataConnectivity.Inputs.RegistryFolderDataAssetDefaultConnectionMetadataArgs
    ///                         {
    ///                             Aggregator = new Oci.DataConnectivity.Inputs.RegistryFolderDataAssetDefaultConnectionMetadataAggregatorArgs
    ///                             {
    ///                                 Description = @var.Registry_folder_data_assets_default_connection_metadata_aggregator_description,
    ///                                 Identifier = @var.Registry_folder_data_assets_default_connection_metadata_aggregator_identifier,
    ///                                 Key = @var.Registry_folder_data_assets_default_connection_metadata_aggregator_key,
    ///                                 Name = @var.Registry_folder_data_assets_default_connection_metadata_aggregator_name,
    ///                                 Type = @var.Registry_folder_data_assets_default_connection_metadata_aggregator_type,
    ///                             },
    ///                             AggregatorKey = @var.Registry_folder_data_assets_default_connection_metadata_aggregator_key,
    ///                             CreatedBy = @var.Registry_folder_data_assets_default_connection_metadata_created_by,
    ///                             CreatedByName = @var.Registry_folder_data_assets_default_connection_metadata_created_by_name,
    ///                             IdentifierPath = @var.Registry_folder_data_assets_default_connection_metadata_identifier_path,
    ///                             InfoFields = @var.Registry_folder_data_assets_default_connection_metadata_info_fields,
    ///                             IsFavorite = @var.Registry_folder_data_assets_default_connection_metadata_is_favorite,
    ///                             Labels = @var.Registry_folder_data_assets_default_connection_metadata_labels,
    ///                             RegistryVersion = @var.Registry_folder_data_assets_default_connection_metadata_registry_version,
    ///                             TimeCreated = @var.Registry_folder_data_assets_default_connection_metadata_time_created,
    ///                             TimeUpdated = @var.Registry_folder_data_assets_default_connection_metadata_time_updated,
    ///                             UpdatedBy = @var.Registry_folder_data_assets_default_connection_metadata_updated_by,
    ///                             UpdatedByName = @var.Registry_folder_data_assets_default_connection_metadata_updated_by_name,
    ///                         },
    ///                         ModelType = @var.Registry_folder_data_assets_default_connection_model_type,
    ///                         ModelVersion = @var.Registry_folder_data_assets_default_connection_model_version,
    ///                         ObjectStatus = @var.Registry_folder_data_assets_default_connection_object_status,
    ///                         ObjectVersion = @var.Registry_folder_data_assets_default_connection_object_version,
    ///                         PrimarySchema = new Oci.DataConnectivity.Inputs.RegistryFolderDataAssetDefaultConnectionPrimarySchemaArgs
    ///                         {
    ///                             Identifier = @var.Registry_folder_data_assets_default_connection_primary_schema_identifier,
    ///                             Key = @var.Registry_folder_data_assets_default_connection_primary_schema_key,
    ///                             ModelType = @var.Registry_folder_data_assets_default_connection_primary_schema_model_type,
    ///                             Name = @var.Registry_folder_data_assets_default_connection_primary_schema_name,
    ///                             DefaultConnection = @var.Registry_folder_data_assets_default_connection_primary_schema_default_connection,
    ///                             Description = @var.Registry_folder_data_assets_default_connection_primary_schema_description,
    ///                             ExternalKey = @var.Registry_folder_data_assets_default_connection_primary_schema_external_key,
    ///                             IsHasContainers = @var.Registry_folder_data_assets_default_connection_primary_schema_is_has_containers,
    ///                             Metadata = new Oci.DataConnectivity.Inputs.RegistryFolderDataAssetDefaultConnectionPrimarySchemaMetadataArgs
    ///                             {
    ///                                 Aggregator = new Oci.DataConnectivity.Inputs.RegistryFolderDataAssetDefaultConnectionPrimarySchemaMetadataAggregatorArgs
    ///                                 {
    ///                                     Description = @var.Registry_folder_data_assets_default_connection_primary_schema_metadata_aggregator_description,
    ///                                     Identifier = @var.Registry_folder_data_assets_default_connection_primary_schema_metadata_aggregator_identifier,
    ///                                     Key = @var.Registry_folder_data_assets_default_connection_primary_schema_metadata_aggregator_key,
    ///                                     Name = @var.Registry_folder_data_assets_default_connection_primary_schema_metadata_aggregator_name,
    ///                                     Type = @var.Registry_folder_data_assets_default_connection_primary_schema_metadata_aggregator_type,
    ///                                 },
    ///                                 AggregatorKey = @var.Registry_folder_data_assets_default_connection_primary_schema_metadata_aggregator_key,
    ///                                 CreatedBy = @var.Registry_folder_data_assets_default_connection_primary_schema_metadata_created_by,
    ///                                 CreatedByName = @var.Registry_folder_data_assets_default_connection_primary_schema_metadata_created_by_name,
    ///                                 IdentifierPath = @var.Registry_folder_data_assets_default_connection_primary_schema_metadata_identifier_path,
    ///                                 InfoFields = @var.Registry_folder_data_assets_default_connection_primary_schema_metadata_info_fields,
    ///                                 IsFavorite = @var.Registry_folder_data_assets_default_connection_primary_schema_metadata_is_favorite,
    ///                                 Labels = @var.Registry_folder_data_assets_default_connection_primary_schema_metadata_labels,
    ///                                 RegistryVersion = @var.Registry_folder_data_assets_default_connection_primary_schema_metadata_registry_version,
    ///                                 TimeCreated = @var.Registry_folder_data_assets_default_connection_primary_schema_metadata_time_created,
    ///                                 TimeUpdated = @var.Registry_folder_data_assets_default_connection_primary_schema_metadata_time_updated,
    ///                                 UpdatedBy = @var.Registry_folder_data_assets_default_connection_primary_schema_metadata_updated_by,
    ///                                 UpdatedByName = @var.Registry_folder_data_assets_default_connection_primary_schema_metadata_updated_by_name,
    ///                             },
    ///                             ModelVersion = @var.Registry_folder_data_assets_default_connection_primary_schema_model_version,
    ///                             ObjectStatus = @var.Registry_folder_data_assets_default_connection_primary_schema_object_status,
    ///                             ObjectVersion = @var.Registry_folder_data_assets_default_connection_primary_schema_object_version,
    ///                             ParentRef = new Oci.DataConnectivity.Inputs.RegistryFolderDataAssetDefaultConnectionPrimarySchemaParentRefArgs
    ///                             {
    ///                                 Parent = @var.Registry_folder_data_assets_default_connection_primary_schema_parent_ref_parent,
    ///                             },
    ///                             ResourceName = @var.Registry_folder_data_assets_default_connection_primary_schema_resource_name,
    ///                         },
    ///                         Properties = @var.Registry_folder_data_assets_default_connection_properties,
    ///                         RegistryMetadata = new Oci.DataConnectivity.Inputs.RegistryFolderDataAssetDefaultConnectionRegistryMetadataArgs
    ///                         {
    ///                             AggregatorKey = @var.Registry_folder_data_assets_default_connection_registry_metadata_aggregator_key,
    ///                             CreatedByUserId = oci_identity_user.Test_user.Id,
    ///                             CreatedByUserName = oci_identity_user.Test_user.Name,
    ///                             IsFavorite = @var.Registry_folder_data_assets_default_connection_registry_metadata_is_favorite,
    ///                             Key = @var.Registry_folder_data_assets_default_connection_registry_metadata_key,
    ///                             Labels = @var.Registry_folder_data_assets_default_connection_registry_metadata_labels,
    ///                             RegistryVersion = @var.Registry_folder_data_assets_default_connection_registry_metadata_registry_version,
    ///                             TimeCreated = @var.Registry_folder_data_assets_default_connection_registry_metadata_time_created,
    ///                             TimeUpdated = @var.Registry_folder_data_assets_default_connection_registry_metadata_time_updated,
    ///                             UpdatedByUserId = oci_identity_user.Test_user.Id,
    ///                             UpdatedByUserName = oci_identity_user.Test_user.Name,
    ///                         },
    ///                         Type = @var.Registry_folder_data_assets_default_connection_type,
    ///                     },
    ///                     Description = @var.Registry_folder_data_assets_description,
    ///                     ExternalKey = @var.Registry_folder_data_assets_external_key,
    ///                     Metadata = new Oci.DataConnectivity.Inputs.RegistryFolderDataAssetMetadataArgs
    ///                     {
    ///                         Aggregator = new Oci.DataConnectivity.Inputs.RegistryFolderDataAssetMetadataAggregatorArgs
    ///                         {
    ///                             Description = @var.Registry_folder_data_assets_metadata_aggregator_description,
    ///                             Identifier = @var.Registry_folder_data_assets_metadata_aggregator_identifier,
    ///                             Key = @var.Registry_folder_data_assets_metadata_aggregator_key,
    ///                             Name = @var.Registry_folder_data_assets_metadata_aggregator_name,
    ///                             Type = @var.Registry_folder_data_assets_metadata_aggregator_type,
    ///                         },
    ///                         AggregatorKey = @var.Registry_folder_data_assets_metadata_aggregator_key,
    ///                         CreatedBy = @var.Registry_folder_data_assets_metadata_created_by,
    ///                         CreatedByName = @var.Registry_folder_data_assets_metadata_created_by_name,
    ///                         IdentifierPath = @var.Registry_folder_data_assets_metadata_identifier_path,
    ///                         InfoFields = @var.Registry_folder_data_assets_metadata_info_fields,
    ///                         IsFavorite = @var.Registry_folder_data_assets_metadata_is_favorite,
    ///                         Labels = @var.Registry_folder_data_assets_metadata_labels,
    ///                         RegistryVersion = @var.Registry_folder_data_assets_metadata_registry_version,
    ///                         TimeCreated = @var.Registry_folder_data_assets_metadata_time_created,
    ///                         TimeUpdated = @var.Registry_folder_data_assets_metadata_time_updated,
    ///                         UpdatedBy = @var.Registry_folder_data_assets_metadata_updated_by,
    ///                         UpdatedByName = @var.Registry_folder_data_assets_metadata_updated_by_name,
    ///                     },
    ///                     ModelType = @var.Registry_folder_data_assets_model_type,
    ///                     ModelVersion = @var.Registry_folder_data_assets_model_version,
    ///                     NativeTypeSystem = new Oci.DataConnectivity.Inputs.RegistryFolderDataAssetNativeTypeSystemArgs
    ///                     {
    ///                         Description = @var.Registry_folder_data_assets_native_type_system_description,
    ///                         Identifier = @var.Registry_folder_data_assets_native_type_system_identifier,
    ///                         Key = @var.Registry_folder_data_assets_native_type_system_key,
    ///                         ModelType = @var.Registry_folder_data_assets_native_type_system_model_type,
    ///                         ModelVersion = @var.Registry_folder_data_assets_native_type_system_model_version,
    ///                         Name = @var.Registry_folder_data_assets_native_type_system_name,
    ///                         ObjectStatus = @var.Registry_folder_data_assets_native_type_system_object_status,
    ///                         ObjectVersion = @var.Registry_folder_data_assets_native_type_system_object_version,
    ///                         ParentRef = new Oci.DataConnectivity.Inputs.RegistryFolderDataAssetNativeTypeSystemParentRefArgs
    ///                         {
    ///                             Parent = @var.Registry_folder_data_assets_native_type_system_parent_ref_parent,
    ///                         },
    ///                         TypeMappingFrom = @var.Registry_folder_data_assets_native_type_system_type_mapping_from,
    ///                         TypeMappingTo = @var.Registry_folder_data_assets_native_type_system_type_mapping_to,
    ///                         Types = 
    ///                         {
    ///                             new Oci.DataConnectivity.Inputs.RegistryFolderDataAssetNativeTypeSystemTypeArgs
    ///                             {
    ///                                 ModelType = @var.Registry_folder_data_assets_native_type_system_types_model_type,
    ///                                 ConfigDefinition = new Oci.DataConnectivity.Inputs.RegistryFolderDataAssetNativeTypeSystemTypeConfigDefinitionArgs
    ///                                 {
    ///                                     ConfigParameterDefinitions = 
    ///                                     {
    ///                                         
    ///                                         {
    ///                                             { "classFieldName", @var.Registry_folder_data_assets_native_type_system_types_config_definition_config_parameter_definitions_class_field_name },
    ///                                             { "defaultValue", @var.Registry_folder_data_assets_native_type_system_types_config_definition_config_parameter_definitions_default_value },
    ///                                             { "description", @var.Registry_folder_data_assets_native_type_system_types_config_definition_config_parameter_definitions_description },
    ///                                             { "isClassFieldValue", @var.Registry_folder_data_assets_native_type_system_types_config_definition_config_parameter_definitions_is_class_field_value },
    ///                                             { "isStatic", @var.Registry_folder_data_assets_native_type_system_types_config_definition_config_parameter_definitions_is_static },
    ///                                             { "parameterName", @var.Registry_folder_data_assets_native_type_system_types_config_definition_config_parameter_definitions_parameter_name },
    ///                                             { "parameterType", @var.Registry_folder_data_assets_native_type_system_types_config_definition_config_parameter_definitions_parameter_type },
    ///                                         },
    ///                                     },
    ///                                     IsContained = @var.Registry_folder_data_assets_native_type_system_types_config_definition_is_contained,
    ///                                     Key = @var.Registry_folder_data_assets_native_type_system_types_config_definition_key,
    ///                                     ModelType = @var.Registry_folder_data_assets_native_type_system_types_config_definition_model_type,
    ///                                     ModelVersion = @var.Registry_folder_data_assets_native_type_system_types_config_definition_model_version,
    ///                                     Name = @var.Registry_folder_data_assets_native_type_system_types_config_definition_name,
    ///                                     ObjectStatus = @var.Registry_folder_data_assets_native_type_system_types_config_definition_object_status,
    ///                                     ParentRef = new Oci.DataConnectivity.Inputs.RegistryFolderDataAssetNativeTypeSystemTypeConfigDefinitionParentRefArgs
    ///                                     {
    ///                                         Parent = @var.Registry_folder_data_assets_native_type_system_types_config_definition_parent_ref_parent,
    ///                                     },
    ///                                 },
    ///                                 Description = @var.Registry_folder_data_assets_native_type_system_types_description,
    ///                                 DtType = @var.Registry_folder_data_assets_native_type_system_types_dt_type,
    ///                                 Key = @var.Registry_folder_data_assets_native_type_system_types_key,
    ///                                 ModelVersion = @var.Registry_folder_data_assets_native_type_system_types_model_version,
    ///                                 Name = @var.Registry_folder_data_assets_native_type_system_types_name,
    ///                                 ObjectStatus = @var.Registry_folder_data_assets_native_type_system_types_object_status,
    ///                                 ParentRef = new Oci.DataConnectivity.Inputs.RegistryFolderDataAssetNativeTypeSystemTypeParentRefArgs
    ///                                 {
    ///                                     Parent = @var.Registry_folder_data_assets_native_type_system_types_parent_ref_parent,
    ///                                 },
    ///                                 TypeSystemName = @var.Registry_folder_data_assets_native_type_system_types_type_system_name,
    ///                             },
    ///                         },
    ///                     },
    ///                     ObjectStatus = @var.Registry_folder_data_assets_object_status,
    ///                     ObjectVersion = @var.Registry_folder_data_assets_object_version,
    ///                     Properties = @var.Registry_folder_data_assets_properties,
    ///                     RegistryMetadata = new Oci.DataConnectivity.Inputs.RegistryFolderDataAssetRegistryMetadataArgs
    ///                     {
    ///                         AggregatorKey = @var.Registry_folder_data_assets_registry_metadata_aggregator_key,
    ///                         CreatedByUserId = oci_identity_user.Test_user.Id,
    ///                         CreatedByUserName = oci_identity_user.Test_user.Name,
    ///                         IsFavorite = @var.Registry_folder_data_assets_registry_metadata_is_favorite,
    ///                         Key = @var.Registry_folder_data_assets_registry_metadata_key,
    ///                         Labels = @var.Registry_folder_data_assets_registry_metadata_labels,
    ///                         RegistryVersion = @var.Registry_folder_data_assets_registry_metadata_registry_version,
    ///                         TimeCreated = @var.Registry_folder_data_assets_registry_metadata_time_created,
    ///                         TimeUpdated = @var.Registry_folder_data_assets_registry_metadata_time_updated,
    ///                         UpdatedByUserId = oci_identity_user.Test_user.Id,
    ///                         UpdatedByUserName = oci_identity_user.Test_user.Name,
    ///                     },
    ///                     Type = @var.Registry_folder_data_assets_type,
    ///                 },
    ///             },
    ///             Description = @var.Registry_folder_description,
    ///             Key = @var.Registry_folder_key,
    ///             ModelType = @var.Registry_folder_model_type,
    ///             ModelVersion = @var.Registry_folder_model_version,
    ///             ObjectStatus = @var.Registry_folder_object_status,
    ///             ObjectVersion = @var.Registry_folder_object_version,
    ///             ParentRef = new Oci.DataConnectivity.Inputs.RegistryFolderParentRefArgs
    ///             {
    ///                 Parent = @var.Registry_folder_parent_ref_parent,
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// RegistryFolders can be imported using the `id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import oci:DataConnectivity/registryFolder:RegistryFolder test_registry_folder "registries/{registryId}/folders/{folderKey}"
    /// ```
    /// </summary>
    [OciResourceType("oci:DataConnectivity/registryFolder:RegistryFolder")]
    public partial class RegistryFolder : Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) List of data assets which belongs to this folder
        /// </summary>
        [Output("dataAssets")]
        public Output<ImmutableArray<Outputs.RegistryFolderDataAsset>> DataAssets { get; private set; } = null!;

        /// <summary>
        /// (Updatable) User-defined description for the folder.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
        /// </summary>
        [Output("identifier")]
        public Output<string> Identifier { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Generated key that can be used in API calls to identify folder. On scenarios where reference to the folder is needed, a value can be passed in create.
        /// </summary>
        [Output("key")]
        public Output<string> Key { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The type of the folder.
        /// </summary>
        [Output("modelType")]
        public Output<string> ModelType { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The model version of an object.
        /// </summary>
        [Output("modelVersion")]
        public Output<string> ModelVersion { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
        /// </summary>
        [Output("objectStatus")]
        public Output<int> ObjectStatus { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The version of the object that is used to track changes in the object instance.
        /// </summary>
        [Output("objectVersion")]
        public Output<int> ObjectVersion { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A reference to the object's parent.
        /// </summary>
        [Output("parentRef")]
        public Output<Outputs.RegistryFolderParentRef> ParentRef { get; private set; } = null!;

        /// <summary>
        /// The registry Ocid.
        /// </summary>
        [Output("registryId")]
        public Output<string> RegistryId { get; private set; } = null!;


        /// <summary>
        /// Create a RegistryFolder resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RegistryFolder(string name, RegistryFolderArgs args, CustomResourceOptions? options = null)
            : base("oci:DataConnectivity/registryFolder:RegistryFolder", name, args ?? new RegistryFolderArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RegistryFolder(string name, Input<string> id, RegistryFolderState? state = null, CustomResourceOptions? options = null)
            : base("oci:DataConnectivity/registryFolder:RegistryFolder", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RegistryFolder resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RegistryFolder Get(string name, Input<string> id, RegistryFolderState? state = null, CustomResourceOptions? options = null)
        {
            return new RegistryFolder(name, id, state, options);
        }
    }

    public sealed class RegistryFolderArgs : Pulumi.ResourceArgs
    {
        [Input("dataAssets")]
        private InputList<Inputs.RegistryFolderDataAssetArgs>? _dataAssets;

        /// <summary>
        /// (Updatable) List of data assets which belongs to this folder
        /// </summary>
        public InputList<Inputs.RegistryFolderDataAssetArgs> DataAssets
        {
            get => _dataAssets ?? (_dataAssets = new InputList<Inputs.RegistryFolderDataAssetArgs>());
            set => _dataAssets = value;
        }

        /// <summary>
        /// (Updatable) User-defined description for the folder.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
        /// </summary>
        [Input("identifier", required: true)]
        public Input<string> Identifier { get; set; } = null!;

        /// <summary>
        /// (Updatable) Generated key that can be used in API calls to identify folder. On scenarios where reference to the folder is needed, a value can be passed in create.
        /// </summary>
        [Input("key")]
        public Input<string>? Key { get; set; }

        /// <summary>
        /// (Updatable) The type of the folder.
        /// </summary>
        [Input("modelType")]
        public Input<string>? ModelType { get; set; }

        /// <summary>
        /// (Updatable) The model version of an object.
        /// </summary>
        [Input("modelVersion")]
        public Input<string>? ModelVersion { get; set; }

        /// <summary>
        /// (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
        /// </summary>
        [Input("objectStatus")]
        public Input<int>? ObjectStatus { get; set; }

        /// <summary>
        /// (Updatable) The version of the object that is used to track changes in the object instance.
        /// </summary>
        [Input("objectVersion")]
        public Input<int>? ObjectVersion { get; set; }

        /// <summary>
        /// (Updatable) A reference to the object's parent.
        /// </summary>
        [Input("parentRef")]
        public Input<Inputs.RegistryFolderParentRefArgs>? ParentRef { get; set; }

        /// <summary>
        /// The registry Ocid.
        /// </summary>
        [Input("registryId", required: true)]
        public Input<string> RegistryId { get; set; } = null!;

        public RegistryFolderArgs()
        {
        }
    }

    public sealed class RegistryFolderState : Pulumi.ResourceArgs
    {
        [Input("dataAssets")]
        private InputList<Inputs.RegistryFolderDataAssetGetArgs>? _dataAssets;

        /// <summary>
        /// (Updatable) List of data assets which belongs to this folder
        /// </summary>
        public InputList<Inputs.RegistryFolderDataAssetGetArgs> DataAssets
        {
            get => _dataAssets ?? (_dataAssets = new InputList<Inputs.RegistryFolderDataAssetGetArgs>());
            set => _dataAssets = value;
        }

        /// <summary>
        /// (Updatable) User-defined description for the folder.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
        /// </summary>
        [Input("identifier")]
        public Input<string>? Identifier { get; set; }

        /// <summary>
        /// (Updatable) Generated key that can be used in API calls to identify folder. On scenarios where reference to the folder is needed, a value can be passed in create.
        /// </summary>
        [Input("key")]
        public Input<string>? Key { get; set; }

        /// <summary>
        /// (Updatable) The type of the folder.
        /// </summary>
        [Input("modelType")]
        public Input<string>? ModelType { get; set; }

        /// <summary>
        /// (Updatable) The model version of an object.
        /// </summary>
        [Input("modelVersion")]
        public Input<string>? ModelVersion { get; set; }

        /// <summary>
        /// (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
        /// </summary>
        [Input("objectStatus")]
        public Input<int>? ObjectStatus { get; set; }

        /// <summary>
        /// (Updatable) The version of the object that is used to track changes in the object instance.
        /// </summary>
        [Input("objectVersion")]
        public Input<int>? ObjectVersion { get; set; }

        /// <summary>
        /// (Updatable) A reference to the object's parent.
        /// </summary>
        [Input("parentRef")]
        public Input<Inputs.RegistryFolderParentRefGetArgs>? ParentRef { get; set; }

        /// <summary>
        /// The registry Ocid.
        /// </summary>
        [Input("registryId")]
        public Input<string>? RegistryId { get; set; }

        public RegistryFolderState()
        {
        }
    }
}
