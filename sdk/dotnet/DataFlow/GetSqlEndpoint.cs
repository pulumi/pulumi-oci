// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataFlow
{
    public static class GetSqlEndpoint
    {
        /// <summary>
        /// This data source provides details about a specific Sql Endpoint resource in Oracle Cloud Infrastructure Data Flow service.
        /// 
        /// Retrieves a SQL Endpoint using a sqlEndpointId.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSqlEndpoint = Oci.DataFlow.GetSqlEndpoint.Invoke(new()
        ///     {
        ///         SqlEndpointId = oci_dataflow_sql_endpoint.Test_sql_endpoint.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSqlEndpointResult> InvokeAsync(GetSqlEndpointArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSqlEndpointResult>("oci:DataFlow/getSqlEndpoint:getSqlEndpoint", args ?? new GetSqlEndpointArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Sql Endpoint resource in Oracle Cloud Infrastructure Data Flow service.
        /// 
        /// Retrieves a SQL Endpoint using a sqlEndpointId.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSqlEndpoint = Oci.DataFlow.GetSqlEndpoint.Invoke(new()
        ///     {
        ///         SqlEndpointId = oci_dataflow_sql_endpoint.Test_sql_endpoint.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSqlEndpointResult> Invoke(GetSqlEndpointInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSqlEndpointResult>("oci:DataFlow/getSqlEndpoint:getSqlEndpoint", args ?? new GetSqlEndpointInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSqlEndpointArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique id of the SQL Endpoint.
        /// </summary>
        [Input("sqlEndpointId", required: true)]
        public string SqlEndpointId { get; set; } = null!;

        public GetSqlEndpointArgs()
        {
        }
        public static new GetSqlEndpointArgs Empty => new GetSqlEndpointArgs();
    }

    public sealed class GetSqlEndpointInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique id of the SQL Endpoint.
        /// </summary>
        [Input("sqlEndpointId", required: true)]
        public Input<string> SqlEndpointId { get; set; } = null!;

        public GetSqlEndpointInvokeArgs()
        {
        }
        public static new GetSqlEndpointInvokeArgs Empty => new GetSqlEndpointInvokeArgs();
    }


    [OutputType]
    public sealed class GetSqlEndpointResult
    {
        /// <summary>
        /// The OCID of a compartment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// The description of the SQL Endpoint.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The SQL Endpoint name, which can be changed.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// The shape of the SQL Endpoint driver instance.
        /// </summary>
        public readonly string DriverShape;
        /// <summary>
        /// This is used to configure the shape of the driver or executor if a flexible shape is used.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSqlEndpointDriverShapeConfigResult> DriverShapeConfigs;
        /// <summary>
        /// The shape of the SQL Endpoint executor instance.
        /// </summary>
        public readonly string ExecutorShape;
        /// <summary>
        /// This is used to configure the shape of the driver or executor if a flexible shape is used.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSqlEndpointExecutorShapeConfigResult> ExecutorShapeConfigs;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// The provision identifier that is immutable on creation.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The JDBC URL field. For example, jdbc:spark://{serviceFQDN}:443/default;SparkServerType=DFI
        /// </summary>
        public readonly string JdbcEndpointUrl;
        /// <summary>
        /// The OCID of Oracle Cloud Infrastructure Lake.
        /// </summary>
        public readonly string LakeId;
        /// <summary>
        /// This token is used by Splat, and indicates that the service accepts the request, and that the request is currently being processed.
        /// </summary>
        public readonly string LastAcceptedRequestToken;
        /// <summary>
        /// The maximum number of executors.
        /// </summary>
        public readonly int MaxExecutorCount;
        /// <summary>
        /// The OCID of Oracle Cloud Infrastructure Hive Metastore.
        /// </summary>
        public readonly string MetastoreId;
        /// <summary>
        /// The minimum number of executors.
        /// </summary>
        public readonly int MinExecutorCount;
        /// <summary>
        /// The network configuration of a SQL Endpoint.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSqlEndpointNetworkConfigurationResult> NetworkConfigurations;
        /// <summary>
        /// The Spark configuration passed to the running process. See https://spark.apache.org/docs/latest/configuration.html#available-properties. Example: { "spark.app.name" : "My App Name", "spark.shuffle.io.maxRetries" : "4" } Note: Not all Spark properties are permitted to be set.  Attempting to set a property that is not allowed to be overwritten will cause a 400 status to be returned.
        /// </summary>
        public readonly ImmutableDictionary<string, object> SparkAdvancedConfigurations;
        public readonly string SqlEndpointId;
        /// <summary>
        /// The version of SQL Endpoint.
        /// </summary>
        public readonly string SqlEndpointVersion;
        /// <summary>
        /// The current state of the Sql Endpoint.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// A message describing the reason why the resource is in it's current state. Helps bubble up errors in state changes. For example, it can be used to provide actionable information for a resource in the Failed state.
        /// </summary>
        public readonly string StateMessage;
        /// <summary>
        /// The system tags associated with this resource, if any. The system tags are set by Oracle cloud infrastructure services. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{orcl-cloud: {free-tier-retain: true}}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> SystemTags;
        /// <summary>
        /// The time the Sql Endpoint was created. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time the Sql Endpoint was updated. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeUpdated;
        /// <summary>
        /// The warehouse bucket URI. It is a Oracle Cloud Infrastructure Object Storage bucket URI as defined here https://docs.oracle.com/en/cloud/paas/atp-cloud/atpud/object-storage-uris.html
        /// </summary>
        public readonly string WarehouseBucketUri;

        [OutputConstructor]
        private GetSqlEndpointResult(
            string compartmentId,

            ImmutableDictionary<string, object> definedTags,

            string description,

            string displayName,

            string driverShape,

            ImmutableArray<Outputs.GetSqlEndpointDriverShapeConfigResult> driverShapeConfigs,

            string executorShape,

            ImmutableArray<Outputs.GetSqlEndpointExecutorShapeConfigResult> executorShapeConfigs,

            ImmutableDictionary<string, object> freeformTags,

            string id,

            string jdbcEndpointUrl,

            string lakeId,

            string lastAcceptedRequestToken,

            int maxExecutorCount,

            string metastoreId,

            int minExecutorCount,

            ImmutableArray<Outputs.GetSqlEndpointNetworkConfigurationResult> networkConfigurations,

            ImmutableDictionary<string, object> sparkAdvancedConfigurations,

            string sqlEndpointId,

            string sqlEndpointVersion,

            string state,

            string stateMessage,

            ImmutableDictionary<string, object> systemTags,

            string timeCreated,

            string timeUpdated,

            string warehouseBucketUri)
        {
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            DriverShape = driverShape;
            DriverShapeConfigs = driverShapeConfigs;
            ExecutorShape = executorShape;
            ExecutorShapeConfigs = executorShapeConfigs;
            FreeformTags = freeformTags;
            Id = id;
            JdbcEndpointUrl = jdbcEndpointUrl;
            LakeId = lakeId;
            LastAcceptedRequestToken = lastAcceptedRequestToken;
            MaxExecutorCount = maxExecutorCount;
            MetastoreId = metastoreId;
            MinExecutorCount = minExecutorCount;
            NetworkConfigurations = networkConfigurations;
            SparkAdvancedConfigurations = sparkAdvancedConfigurations;
            SqlEndpointId = sqlEndpointId;
            SqlEndpointVersion = sqlEndpointVersion;
            State = state;
            StateMessage = stateMessage;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            WarehouseBucketUri = warehouseBucketUri;
        }
    }
}
