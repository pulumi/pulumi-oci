// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataFlow
{
    public static class GetSqlEndpoints
    {
        /// <summary>
        /// This data source provides the list of Sql Endpoints in Oracle Cloud Infrastructure Data Flow service.
        /// 
        /// Lists all Sql Endpoints in the specified compartment.
        /// The query must include compartmentId or sqlEndpointId.
        /// If the query does not include either compartmentId or sqlEndpointId, an error is returned.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSqlEndpoints = Oci.DataFlow.GetSqlEndpoints.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         DisplayName = @var.Sql_endpoint_display_name,
        ///         SqlEndpointId = oci_dataflow_sql_endpoint.Test_sql_endpoint.Id,
        ///         State = @var.Sql_endpoint_state,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetSqlEndpointsResult> InvokeAsync(GetSqlEndpointsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSqlEndpointsResult>("oci:DataFlow/getSqlEndpoints:getSqlEndpoints", args ?? new GetSqlEndpointsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Sql Endpoints in Oracle Cloud Infrastructure Data Flow service.
        /// 
        /// Lists all Sql Endpoints in the specified compartment.
        /// The query must include compartmentId or sqlEndpointId.
        /// If the query does not include either compartmentId or sqlEndpointId, an error is returned.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSqlEndpoints = Oci.DataFlow.GetSqlEndpoints.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         DisplayName = @var.Sql_endpoint_display_name,
        ///         SqlEndpointId = oci_dataflow_sql_endpoint.Test_sql_endpoint.Id,
        ///         State = @var.Sql_endpoint_state,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetSqlEndpointsResult> Invoke(GetSqlEndpointsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSqlEndpointsResult>("oci:DataFlow/getSqlEndpoints:getSqlEndpoints", args ?? new GetSqlEndpointsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSqlEndpointsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment in which to query resources.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        /// <summary>
        /// The query parameter for the Spark application name.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetSqlEndpointsFilterArgs>? _filters;
        public List<Inputs.GetSqlEndpointsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetSqlEndpointsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The unique id of the SQL Endpoint.
        /// </summary>
        [Input("sqlEndpointId")]
        public string? SqlEndpointId { get; set; }

        /// <summary>
        /// A filter to return only those resources whose sqlEndpointLifecycleState matches the given sqlEndpointLifecycleState.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetSqlEndpointsArgs()
        {
        }
        public static new GetSqlEndpointsArgs Empty => new GetSqlEndpointsArgs();
    }

    public sealed class GetSqlEndpointsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment in which to query resources.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// The query parameter for the Spark application name.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetSqlEndpointsFilterInputArgs>? _filters;
        public InputList<Inputs.GetSqlEndpointsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetSqlEndpointsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The unique id of the SQL Endpoint.
        /// </summary>
        [Input("sqlEndpointId")]
        public Input<string>? SqlEndpointId { get; set; }

        /// <summary>
        /// A filter to return only those resources whose sqlEndpointLifecycleState matches the given sqlEndpointLifecycleState.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetSqlEndpointsInvokeArgs()
        {
        }
        public static new GetSqlEndpointsInvokeArgs Empty => new GetSqlEndpointsInvokeArgs();
    }


    [OutputType]
    public sealed class GetSqlEndpointsResult
    {
        /// <summary>
        /// The OCID of a compartment.
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// The SQL Endpoint name, which can be changed.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetSqlEndpointsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of sql_endpoint_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSqlEndpointsSqlEndpointCollectionResult> SqlEndpointCollections;
        public readonly string? SqlEndpointId;
        /// <summary>
        /// The current state of the Sql Endpoint.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetSqlEndpointsResult(
            string? compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetSqlEndpointsFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetSqlEndpointsSqlEndpointCollectionResult> sqlEndpointCollections,

            string? sqlEndpointId,

            string? state)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            SqlEndpointCollections = sqlEndpointCollections;
            SqlEndpointId = sqlEndpointId;
            State = state;
        }
    }
}
