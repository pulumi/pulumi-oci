// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataIntegration
{
    public static class GetWorkspaceApplicationPatch
    {
        /// <summary>
        /// This data source provides details about a specific Workspace Application Patch resource in Oracle Cloud Infrastructure Data Integration service.
        /// 
        /// Retrieves a patch in an application using the specified identifier.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testWorkspaceApplicationPatch = Oci.DataIntegration.GetWorkspaceApplicationPatch.Invoke(new()
        ///     {
        ///         ApplicationKey = workspaceApplicationPatchApplicationKey,
        ///         PatchKey = workspaceApplicationPatchPatchKey,
        ///         WorkspaceId = testWorkspace.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetWorkspaceApplicationPatchResult> InvokeAsync(GetWorkspaceApplicationPatchArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWorkspaceApplicationPatchResult>("oci:DataIntegration/getWorkspaceApplicationPatch:getWorkspaceApplicationPatch", args ?? new GetWorkspaceApplicationPatchArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Workspace Application Patch resource in Oracle Cloud Infrastructure Data Integration service.
        /// 
        /// Retrieves a patch in an application using the specified identifier.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testWorkspaceApplicationPatch = Oci.DataIntegration.GetWorkspaceApplicationPatch.Invoke(new()
        ///     {
        ///         ApplicationKey = workspaceApplicationPatchApplicationKey,
        ///         PatchKey = workspaceApplicationPatchPatchKey,
        ///         WorkspaceId = testWorkspace.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetWorkspaceApplicationPatchResult> Invoke(GetWorkspaceApplicationPatchInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkspaceApplicationPatchResult>("oci:DataIntegration/getWorkspaceApplicationPatch:getWorkspaceApplicationPatch", args ?? new GetWorkspaceApplicationPatchInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Workspace Application Patch resource in Oracle Cloud Infrastructure Data Integration service.
        /// 
        /// Retrieves a patch in an application using the specified identifier.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testWorkspaceApplicationPatch = Oci.DataIntegration.GetWorkspaceApplicationPatch.Invoke(new()
        ///     {
        ///         ApplicationKey = workspaceApplicationPatchApplicationKey,
        ///         PatchKey = workspaceApplicationPatchPatchKey,
        ///         WorkspaceId = testWorkspace.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetWorkspaceApplicationPatchResult> Invoke(GetWorkspaceApplicationPatchInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkspaceApplicationPatchResult>("oci:DataIntegration/getWorkspaceApplicationPatch:getWorkspaceApplicationPatch", args ?? new GetWorkspaceApplicationPatchInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWorkspaceApplicationPatchArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The application key.
        /// </summary>
        [Input("applicationKey", required: true)]
        public string ApplicationKey { get; set; } = null!;

        /// <summary>
        /// The patch key.
        /// </summary>
        [Input("patchKey", required: true)]
        public string PatchKey { get; set; } = null!;

        /// <summary>
        /// The workspace ID.
        /// </summary>
        [Input("workspaceId", required: true)]
        public string WorkspaceId { get; set; } = null!;

        public GetWorkspaceApplicationPatchArgs()
        {
        }
        public static new GetWorkspaceApplicationPatchArgs Empty => new GetWorkspaceApplicationPatchArgs();
    }

    public sealed class GetWorkspaceApplicationPatchInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The application key.
        /// </summary>
        [Input("applicationKey", required: true)]
        public Input<string> ApplicationKey { get; set; } = null!;

        /// <summary>
        /// The patch key.
        /// </summary>
        [Input("patchKey", required: true)]
        public Input<string> PatchKey { get; set; } = null!;

        /// <summary>
        /// The workspace ID.
        /// </summary>
        [Input("workspaceId", required: true)]
        public Input<string> WorkspaceId { get; set; } = null!;

        public GetWorkspaceApplicationPatchInvokeArgs()
        {
        }
        public static new GetWorkspaceApplicationPatchInvokeArgs Empty => new GetWorkspaceApplicationPatchInvokeArgs();
    }


    [OutputType]
    public sealed class GetWorkspaceApplicationPatchResult
    {
        public readonly string ApplicationKey;
        /// <summary>
        /// The application version of the patch.
        /// </summary>
        public readonly int ApplicationVersion;
        /// <summary>
        /// List of dependent objects in this patch.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkspaceApplicationPatchDependentObjectMetadataResult> DependentObjectMetadatas;
        /// <summary>
        /// The description of the aggregator.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The errors encountered while applying the patch, if any.
        /// </summary>
        public readonly ImmutableDictionary<string, string> ErrorMessages;
        public readonly string Id;
        /// <summary>
        /// Value can only contain upper case letters, underscore and numbers. It should begin with upper case letter or underscore. The value can be modified.
        /// </summary>
        public readonly string Identifier;
        /// <summary>
        /// The key of the object.
        /// </summary>
        public readonly string Key;
        /// <summary>
        /// A key map. If provided, key is replaced with generated key. This structure provides mapping between user provided key and generated key.
        /// </summary>
        public readonly ImmutableDictionary<string, string> KeyMap;
        /// <summary>
        /// A summary type containing information about the object including its key, name and when/who created/updated it.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkspaceApplicationPatchMetadataResult> Metadatas;
        /// <summary>
        /// The object type.
        /// </summary>
        public readonly string ModelType;
        /// <summary>
        /// The object's model version.
        /// </summary>
        public readonly string ModelVersion;
        /// <summary>
        /// Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
        /// </summary>
        public readonly string Name;
        public readonly ImmutableArray<string> ObjectKeys;
        /// <summary>
        /// The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
        /// </summary>
        public readonly int ObjectStatus;
        /// <summary>
        /// The object version.
        /// </summary>
        public readonly int ObjectVersion;
        /// <summary>
        /// A reference to the object's parent.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkspaceApplicationPatchParentRefResult> ParentReves;
        public readonly string PatchKey;
        /// <summary>
        /// List of objects that are published or unpublished in this patch.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkspaceApplicationPatchPatchObjectMetadataResult> PatchObjectMetadatas;
        /// <summary>
        /// Status of the patch applied or being applied on the application
        /// </summary>
        public readonly string PatchStatus;
        /// <summary>
        /// The type of the patch applied or being applied on the application.
        /// </summary>
        public readonly string PatchType;
        public readonly ImmutableArray<Outputs.GetWorkspaceApplicationPatchRegistryMetadataResult> RegistryMetadatas;
        /// <summary>
        /// The date and time the patch was applied, in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        public readonly string TimePatched;
        public readonly string WorkspaceId;

        [OutputConstructor]
        private GetWorkspaceApplicationPatchResult(
            string applicationKey,

            int applicationVersion,

            ImmutableArray<Outputs.GetWorkspaceApplicationPatchDependentObjectMetadataResult> dependentObjectMetadatas,

            string description,

            ImmutableDictionary<string, string> errorMessages,

            string id,

            string identifier,

            string key,

            ImmutableDictionary<string, string> keyMap,

            ImmutableArray<Outputs.GetWorkspaceApplicationPatchMetadataResult> metadatas,

            string modelType,

            string modelVersion,

            string name,

            ImmutableArray<string> objectKeys,

            int objectStatus,

            int objectVersion,

            ImmutableArray<Outputs.GetWorkspaceApplicationPatchParentRefResult> parentReves,

            string patchKey,

            ImmutableArray<Outputs.GetWorkspaceApplicationPatchPatchObjectMetadataResult> patchObjectMetadatas,

            string patchStatus,

            string patchType,

            ImmutableArray<Outputs.GetWorkspaceApplicationPatchRegistryMetadataResult> registryMetadatas,

            string timePatched,

            string workspaceId)
        {
            ApplicationKey = applicationKey;
            ApplicationVersion = applicationVersion;
            DependentObjectMetadatas = dependentObjectMetadatas;
            Description = description;
            ErrorMessages = errorMessages;
            Id = id;
            Identifier = identifier;
            Key = key;
            KeyMap = keyMap;
            Metadatas = metadatas;
            ModelType = modelType;
            ModelVersion = modelVersion;
            Name = name;
            ObjectKeys = objectKeys;
            ObjectStatus = objectStatus;
            ObjectVersion = objectVersion;
            ParentReves = parentReves;
            PatchKey = patchKey;
            PatchObjectMetadatas = patchObjectMetadatas;
            PatchStatus = patchStatus;
            PatchType = patchType;
            RegistryMetadatas = registryMetadatas;
            TimePatched = timePatched;
            WorkspaceId = workspaceId;
        }
    }
}
