// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataIntegration
{
    public static class GetWorkspaceApplicationSchedule
    {
        /// <summary>
        /// This data source provides details about a specific Workspace Application Schedule resource in Oracle Cloud Infrastructure Data Integration service.
        /// 
        /// Retrieves schedule by schedule key
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testWorkspaceApplicationSchedule = Oci.DataIntegration.GetWorkspaceApplicationSchedule.Invoke(new()
        ///     {
        ///         ApplicationKey = workspaceApplicationScheduleApplicationKey,
        ///         ScheduleKey = workspaceApplicationScheduleScheduleKey,
        ///         WorkspaceId = testWorkspace.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetWorkspaceApplicationScheduleResult> InvokeAsync(GetWorkspaceApplicationScheduleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWorkspaceApplicationScheduleResult>("oci:DataIntegration/getWorkspaceApplicationSchedule:getWorkspaceApplicationSchedule", args ?? new GetWorkspaceApplicationScheduleArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Workspace Application Schedule resource in Oracle Cloud Infrastructure Data Integration service.
        /// 
        /// Retrieves schedule by schedule key
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testWorkspaceApplicationSchedule = Oci.DataIntegration.GetWorkspaceApplicationSchedule.Invoke(new()
        ///     {
        ///         ApplicationKey = workspaceApplicationScheduleApplicationKey,
        ///         ScheduleKey = workspaceApplicationScheduleScheduleKey,
        ///         WorkspaceId = testWorkspace.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetWorkspaceApplicationScheduleResult> Invoke(GetWorkspaceApplicationScheduleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkspaceApplicationScheduleResult>("oci:DataIntegration/getWorkspaceApplicationSchedule:getWorkspaceApplicationSchedule", args ?? new GetWorkspaceApplicationScheduleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWorkspaceApplicationScheduleArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The application key.
        /// </summary>
        [Input("applicationKey", required: true)]
        public string ApplicationKey { get; set; } = null!;

        /// <summary>
        /// Schedule Key
        /// </summary>
        [Input("scheduleKey", required: true)]
        public string ScheduleKey { get; set; } = null!;

        /// <summary>
        /// The workspace ID.
        /// </summary>
        [Input("workspaceId", required: true)]
        public string WorkspaceId { get; set; } = null!;

        public GetWorkspaceApplicationScheduleArgs()
        {
        }
        public static new GetWorkspaceApplicationScheduleArgs Empty => new GetWorkspaceApplicationScheduleArgs();
    }

    public sealed class GetWorkspaceApplicationScheduleInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The application key.
        /// </summary>
        [Input("applicationKey", required: true)]
        public Input<string> ApplicationKey { get; set; } = null!;

        /// <summary>
        /// Schedule Key
        /// </summary>
        [Input("scheduleKey", required: true)]
        public Input<string> ScheduleKey { get; set; } = null!;

        /// <summary>
        /// The workspace ID.
        /// </summary>
        [Input("workspaceId", required: true)]
        public Input<string> WorkspaceId { get; set; } = null!;

        public GetWorkspaceApplicationScheduleInvokeArgs()
        {
        }
        public static new GetWorkspaceApplicationScheduleInvokeArgs Empty => new GetWorkspaceApplicationScheduleInvokeArgs();
    }


    [OutputType]
    public sealed class GetWorkspaceApplicationScheduleResult
    {
        public readonly string ApplicationKey;
        /// <summary>
        /// The description of the aggregator.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The model that holds the frequency details.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkspaceApplicationScheduleFrequencyDetailResult> FrequencyDetails;
        public readonly string Id;
        /// <summary>
        /// The identifier of the aggregator.
        /// </summary>
        public readonly string Identifier;
        /// <summary>
        /// A flag to indicate daylight saving.
        /// </summary>
        public readonly bool IsDaylightAdjustmentEnabled;
        /// <summary>
        /// The key of the aggregator object.
        /// </summary>
        public readonly string Key;
        /// <summary>
        /// A summary type containing information about the object including its key, name and when/who created/updated it.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkspaceApplicationScheduleMetadataResult> Metadatas;
        /// <summary>
        /// The type of the object.
        /// </summary>
        public readonly string ModelType;
        /// <summary>
        /// This is a version number that is used by the service to upgrade objects if needed through releases of the service.
        /// </summary>
        public readonly string ModelVersion;
        /// <summary>
        /// Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
        /// </summary>
        public readonly int ObjectStatus;
        /// <summary>
        /// This is used by the service for optimistic locking of the object, to prevent multiple users from simultaneously updating the object.
        /// </summary>
        public readonly int ObjectVersion;
        /// <summary>
        /// A reference to the object's parent.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkspaceApplicationScheduleParentRefResult> ParentReves;
        public readonly ImmutableArray<Outputs.GetWorkspaceApplicationScheduleRegistryMetadataResult> RegistryMetadatas;
        public readonly string ScheduleKey;
        /// <summary>
        /// The timezone for the schedule.
        /// </summary>
        public readonly string Timezone;
        public readonly string WorkspaceId;

        [OutputConstructor]
        private GetWorkspaceApplicationScheduleResult(
            string applicationKey,

            string description,

            ImmutableArray<Outputs.GetWorkspaceApplicationScheduleFrequencyDetailResult> frequencyDetails,

            string id,

            string identifier,

            bool isDaylightAdjustmentEnabled,

            string key,

            ImmutableArray<Outputs.GetWorkspaceApplicationScheduleMetadataResult> metadatas,

            string modelType,

            string modelVersion,

            string name,

            int objectStatus,

            int objectVersion,

            ImmutableArray<Outputs.GetWorkspaceApplicationScheduleParentRefResult> parentReves,

            ImmutableArray<Outputs.GetWorkspaceApplicationScheduleRegistryMetadataResult> registryMetadatas,

            string scheduleKey,

            string timezone,

            string workspaceId)
        {
            ApplicationKey = applicationKey;
            Description = description;
            FrequencyDetails = frequencyDetails;
            Id = id;
            Identifier = identifier;
            IsDaylightAdjustmentEnabled = isDaylightAdjustmentEnabled;
            Key = key;
            Metadatas = metadatas;
            ModelType = modelType;
            ModelVersion = modelVersion;
            Name = name;
            ObjectStatus = objectStatus;
            ObjectVersion = objectVersion;
            ParentReves = parentReves;
            RegistryMetadatas = registryMetadatas;
            ScheduleKey = scheduleKey;
            Timezone = timezone;
            WorkspaceId = workspaceId;
        }
    }
}
