// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataIntegration
{
    public static class GetWorkspaceApplicationSchedules
    {
        /// <summary>
        /// This data source provides the list of Workspace Application Schedules in Oracle Cloud Infrastructure Data Integration service.
        /// 
        /// Use this endpoint to list schedules.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testWorkspaceApplicationSchedules = Oci.DataIntegration.GetWorkspaceApplicationSchedules.Invoke(new()
        ///     {
        ///         ApplicationKey = @var.Workspace_application_schedule_application_key,
        ///         WorkspaceId = oci_dataintegration_workspace.Test_workspace.Id,
        ///         Identifiers = @var.Workspace_application_schedule_identifier,
        ///         Keys = @var.Workspace_application_schedule_key,
        ///         Name = @var.Workspace_application_schedule_name,
        ///         Types = @var.Workspace_application_schedule_type,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetWorkspaceApplicationSchedulesResult> InvokeAsync(GetWorkspaceApplicationSchedulesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWorkspaceApplicationSchedulesResult>("oci:DataIntegration/getWorkspaceApplicationSchedules:getWorkspaceApplicationSchedules", args ?? new GetWorkspaceApplicationSchedulesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Workspace Application Schedules in Oracle Cloud Infrastructure Data Integration service.
        /// 
        /// Use this endpoint to list schedules.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testWorkspaceApplicationSchedules = Oci.DataIntegration.GetWorkspaceApplicationSchedules.Invoke(new()
        ///     {
        ///         ApplicationKey = @var.Workspace_application_schedule_application_key,
        ///         WorkspaceId = oci_dataintegration_workspace.Test_workspace.Id,
        ///         Identifiers = @var.Workspace_application_schedule_identifier,
        ///         Keys = @var.Workspace_application_schedule_key,
        ///         Name = @var.Workspace_application_schedule_name,
        ///         Types = @var.Workspace_application_schedule_type,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetWorkspaceApplicationSchedulesResult> Invoke(GetWorkspaceApplicationSchedulesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkspaceApplicationSchedulesResult>("oci:DataIntegration/getWorkspaceApplicationSchedules:getWorkspaceApplicationSchedules", args ?? new GetWorkspaceApplicationSchedulesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWorkspaceApplicationSchedulesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The application key.
        /// </summary>
        [Input("applicationKey", required: true)]
        public string ApplicationKey { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetWorkspaceApplicationSchedulesFilterArgs>? _filters;
        public List<Inputs.GetWorkspaceApplicationSchedulesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetWorkspaceApplicationSchedulesFilterArgs>());
            set => _filters = value;
        }

        [Input("identifiers")]
        private List<string>? _identifiers;

        /// <summary>
        /// Used to filter by the identifier of the object.
        /// </summary>
        public List<string> Identifiers
        {
            get => _identifiers ?? (_identifiers = new List<string>());
            set => _identifiers = value;
        }

        [Input("keys")]
        private List<string>? _keys;

        /// <summary>
        /// Used to filter by the key of the object.
        /// </summary>
        public List<string> Keys
        {
            get => _keys ?? (_keys = new List<string>());
            set => _keys = value;
        }

        /// <summary>
        /// Used to filter by the name of the object.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        [Input("types")]
        private List<string>? _types;

        /// <summary>
        /// Used to filter by the object type of the object. It can be suffixed with an optional filter operator InSubtree. If this operator is not specified, then exact match is considered. &lt;br&gt;&lt;br&gt;&lt;B&gt;Examples:&lt;/B&gt;&lt;br&gt; &lt;ul&gt; &lt;li&gt;&lt;B&gt;?type=DATA_LOADER_TASK&amp;typeInSubtree=false&lt;/B&gt; returns all objects of type data loader task&lt;/li&gt; &lt;li&gt;&lt;B&gt;?type=DATA_LOADER_TASK&lt;/B&gt; returns all objects of type data loader task&lt;/li&gt; &lt;li&gt;&lt;B&gt;?type=DATA_LOADER_TASK&amp;typeInSubtree=true&lt;/B&gt; returns all objects of type data loader task&lt;/li&gt; &lt;/ul&gt;
        /// </summary>
        public List<string> Types
        {
            get => _types ?? (_types = new List<string>());
            set => _types = value;
        }

        /// <summary>
        /// The workspace ID.
        /// </summary>
        [Input("workspaceId", required: true)]
        public string WorkspaceId { get; set; } = null!;

        public GetWorkspaceApplicationSchedulesArgs()
        {
        }
        public static new GetWorkspaceApplicationSchedulesArgs Empty => new GetWorkspaceApplicationSchedulesArgs();
    }

    public sealed class GetWorkspaceApplicationSchedulesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The application key.
        /// </summary>
        [Input("applicationKey", required: true)]
        public Input<string> ApplicationKey { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetWorkspaceApplicationSchedulesFilterInputArgs>? _filters;
        public InputList<Inputs.GetWorkspaceApplicationSchedulesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetWorkspaceApplicationSchedulesFilterInputArgs>());
            set => _filters = value;
        }

        [Input("identifiers")]
        private InputList<string>? _identifiers;

        /// <summary>
        /// Used to filter by the identifier of the object.
        /// </summary>
        public InputList<string> Identifiers
        {
            get => _identifiers ?? (_identifiers = new InputList<string>());
            set => _identifiers = value;
        }

        [Input("keys")]
        private InputList<string>? _keys;

        /// <summary>
        /// Used to filter by the key of the object.
        /// </summary>
        public InputList<string> Keys
        {
            get => _keys ?? (_keys = new InputList<string>());
            set => _keys = value;
        }

        /// <summary>
        /// Used to filter by the name of the object.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("types")]
        private InputList<string>? _types;

        /// <summary>
        /// Used to filter by the object type of the object. It can be suffixed with an optional filter operator InSubtree. If this operator is not specified, then exact match is considered. &lt;br&gt;&lt;br&gt;&lt;B&gt;Examples:&lt;/B&gt;&lt;br&gt; &lt;ul&gt; &lt;li&gt;&lt;B&gt;?type=DATA_LOADER_TASK&amp;typeInSubtree=false&lt;/B&gt; returns all objects of type data loader task&lt;/li&gt; &lt;li&gt;&lt;B&gt;?type=DATA_LOADER_TASK&lt;/B&gt; returns all objects of type data loader task&lt;/li&gt; &lt;li&gt;&lt;B&gt;?type=DATA_LOADER_TASK&amp;typeInSubtree=true&lt;/B&gt; returns all objects of type data loader task&lt;/li&gt; &lt;/ul&gt;
        /// </summary>
        public InputList<string> Types
        {
            get => _types ?? (_types = new InputList<string>());
            set => _types = value;
        }

        /// <summary>
        /// The workspace ID.
        /// </summary>
        [Input("workspaceId", required: true)]
        public Input<string> WorkspaceId { get; set; } = null!;

        public GetWorkspaceApplicationSchedulesInvokeArgs()
        {
        }
        public static new GetWorkspaceApplicationSchedulesInvokeArgs Empty => new GetWorkspaceApplicationSchedulesInvokeArgs();
    }


    [OutputType]
    public sealed class GetWorkspaceApplicationSchedulesResult
    {
        public readonly string ApplicationKey;
        public readonly ImmutableArray<Outputs.GetWorkspaceApplicationSchedulesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The identifier of the aggregator.
        /// </summary>
        public readonly ImmutableArray<string> Identifiers;
        /// <summary>
        /// The key of the aggregator object.
        /// </summary>
        public readonly ImmutableArray<string> Keys;
        /// <summary>
        /// Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The list of schedule_summary_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkspaceApplicationSchedulesScheduleSummaryCollectionResult> ScheduleSummaryCollections;
        /// <summary>
        /// The type of the aggregator.
        /// </summary>
        public readonly ImmutableArray<string> Types;
        public readonly string WorkspaceId;

        [OutputConstructor]
        private GetWorkspaceApplicationSchedulesResult(
            string applicationKey,

            ImmutableArray<Outputs.GetWorkspaceApplicationSchedulesFilterResult> filters,

            string id,

            ImmutableArray<string> identifiers,

            ImmutableArray<string> keys,

            string? name,

            ImmutableArray<Outputs.GetWorkspaceApplicationSchedulesScheduleSummaryCollectionResult> scheduleSummaryCollections,

            ImmutableArray<string> types,

            string workspaceId)
        {
            ApplicationKey = applicationKey;
            Filters = filters;
            Id = id;
            Identifiers = identifiers;
            Keys = keys;
            Name = name;
            ScheduleSummaryCollections = scheduleSummaryCollections;
            Types = types;
            WorkspaceId = workspaceId;
        }
    }
}
