// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataIntegration
{
    public static class GetWorkspaceApplicationTaskSchedules
    {
        /// <summary>
        /// This data source provides the list of Workspace Application Task Schedules in Oracle Cloud Infrastructure Data Integration service.
        /// 
        /// This endpoint can be used to get the list of all the TaskSchedule objects.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testWorkspaceApplicationTaskSchedules = Oci.DataIntegration.GetWorkspaceApplicationTaskSchedules.Invoke(new()
        ///     {
        ///         ApplicationKey = workspaceApplicationTaskScheduleApplicationKey,
        ///         WorkspaceId = testWorkspace.Id,
        ///         Identifiers = workspaceApplicationTaskScheduleIdentifier,
        ///         IsEnabled = workspaceApplicationTaskScheduleIsEnabled,
        ///         Keys = workspaceApplicationTaskScheduleKey,
        ///         Name = workspaceApplicationTaskScheduleName,
        ///         Types = workspaceApplicationTaskScheduleType,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetWorkspaceApplicationTaskSchedulesResult> InvokeAsync(GetWorkspaceApplicationTaskSchedulesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWorkspaceApplicationTaskSchedulesResult>("oci:DataIntegration/getWorkspaceApplicationTaskSchedules:getWorkspaceApplicationTaskSchedules", args ?? new GetWorkspaceApplicationTaskSchedulesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Workspace Application Task Schedules in Oracle Cloud Infrastructure Data Integration service.
        /// 
        /// This endpoint can be used to get the list of all the TaskSchedule objects.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testWorkspaceApplicationTaskSchedules = Oci.DataIntegration.GetWorkspaceApplicationTaskSchedules.Invoke(new()
        ///     {
        ///         ApplicationKey = workspaceApplicationTaskScheduleApplicationKey,
        ///         WorkspaceId = testWorkspace.Id,
        ///         Identifiers = workspaceApplicationTaskScheduleIdentifier,
        ///         IsEnabled = workspaceApplicationTaskScheduleIsEnabled,
        ///         Keys = workspaceApplicationTaskScheduleKey,
        ///         Name = workspaceApplicationTaskScheduleName,
        ///         Types = workspaceApplicationTaskScheduleType,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetWorkspaceApplicationTaskSchedulesResult> Invoke(GetWorkspaceApplicationTaskSchedulesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkspaceApplicationTaskSchedulesResult>("oci:DataIntegration/getWorkspaceApplicationTaskSchedules:getWorkspaceApplicationTaskSchedules", args ?? new GetWorkspaceApplicationTaskSchedulesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWorkspaceApplicationTaskSchedulesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The application key.
        /// </summary>
        [Input("applicationKey", required: true)]
        public string ApplicationKey { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetWorkspaceApplicationTaskSchedulesFilterArgs>? _filters;
        public List<Inputs.GetWorkspaceApplicationTaskSchedulesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetWorkspaceApplicationTaskSchedulesFilterArgs>());
            set => _filters = value;
        }

        [Input("identifiers")]
        private List<string>? _identifiers;

        /// <summary>
        /// Used to filter by the identifier of the object.
        /// </summary>
        public List<string> Identifiers
        {
            get => _identifiers ?? (_identifiers = new List<string>());
            set => _identifiers = value;
        }

        /// <summary>
        /// This filter parameter can be used to filter task schedule by its state.
        /// </summary>
        [Input("isEnabled")]
        public bool? IsEnabled { get; set; }

        [Input("keys")]
        private List<string>? _keys;

        /// <summary>
        /// Used to filter by the key of the object.
        /// </summary>
        public List<string> Keys
        {
            get => _keys ?? (_keys = new List<string>());
            set => _keys = value;
        }

        /// <summary>
        /// Used to filter by the name of the object.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        [Input("types")]
        private List<string>? _types;

        /// <summary>
        /// Used to filter by the object type of the object. It can be suffixed with an optional filter operator InSubtree. If this operator is not specified, then exact match is considered. &lt;br&gt;&lt;br&gt;&lt;B&gt;Examples:&lt;/B&gt;&lt;br&gt; &lt;ul&gt; &lt;li&gt;&lt;B&gt;?type=DATA_LOADER_TASK&amp;typeInSubtree=false&lt;/B&gt; returns all objects of type data loader task&lt;/li&gt; &lt;li&gt;&lt;B&gt;?type=DATA_LOADER_TASK&lt;/B&gt; returns all objects of type data loader task&lt;/li&gt; &lt;li&gt;&lt;B&gt;?type=DATA_LOADER_TASK&amp;typeInSubtree=true&lt;/B&gt; returns all objects of type data loader task&lt;/li&gt; &lt;/ul&gt;
        /// </summary>
        public List<string> Types
        {
            get => _types ?? (_types = new List<string>());
            set => _types = value;
        }

        /// <summary>
        /// The workspace ID.
        /// </summary>
        [Input("workspaceId", required: true)]
        public string WorkspaceId { get; set; } = null!;

        public GetWorkspaceApplicationTaskSchedulesArgs()
        {
        }
        public static new GetWorkspaceApplicationTaskSchedulesArgs Empty => new GetWorkspaceApplicationTaskSchedulesArgs();
    }

    public sealed class GetWorkspaceApplicationTaskSchedulesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The application key.
        /// </summary>
        [Input("applicationKey", required: true)]
        public Input<string> ApplicationKey { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetWorkspaceApplicationTaskSchedulesFilterInputArgs>? _filters;
        public InputList<Inputs.GetWorkspaceApplicationTaskSchedulesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetWorkspaceApplicationTaskSchedulesFilterInputArgs>());
            set => _filters = value;
        }

        [Input("identifiers")]
        private InputList<string>? _identifiers;

        /// <summary>
        /// Used to filter by the identifier of the object.
        /// </summary>
        public InputList<string> Identifiers
        {
            get => _identifiers ?? (_identifiers = new InputList<string>());
            set => _identifiers = value;
        }

        /// <summary>
        /// This filter parameter can be used to filter task schedule by its state.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        [Input("keys")]
        private InputList<string>? _keys;

        /// <summary>
        /// Used to filter by the key of the object.
        /// </summary>
        public InputList<string> Keys
        {
            get => _keys ?? (_keys = new InputList<string>());
            set => _keys = value;
        }

        /// <summary>
        /// Used to filter by the name of the object.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("types")]
        private InputList<string>? _types;

        /// <summary>
        /// Used to filter by the object type of the object. It can be suffixed with an optional filter operator InSubtree. If this operator is not specified, then exact match is considered. &lt;br&gt;&lt;br&gt;&lt;B&gt;Examples:&lt;/B&gt;&lt;br&gt; &lt;ul&gt; &lt;li&gt;&lt;B&gt;?type=DATA_LOADER_TASK&amp;typeInSubtree=false&lt;/B&gt; returns all objects of type data loader task&lt;/li&gt; &lt;li&gt;&lt;B&gt;?type=DATA_LOADER_TASK&lt;/B&gt; returns all objects of type data loader task&lt;/li&gt; &lt;li&gt;&lt;B&gt;?type=DATA_LOADER_TASK&amp;typeInSubtree=true&lt;/B&gt; returns all objects of type data loader task&lt;/li&gt; &lt;/ul&gt;
        /// </summary>
        public InputList<string> Types
        {
            get => _types ?? (_types = new InputList<string>());
            set => _types = value;
        }

        /// <summary>
        /// The workspace ID.
        /// </summary>
        [Input("workspaceId", required: true)]
        public Input<string> WorkspaceId { get; set; } = null!;

        public GetWorkspaceApplicationTaskSchedulesInvokeArgs()
        {
        }
        public static new GetWorkspaceApplicationTaskSchedulesInvokeArgs Empty => new GetWorkspaceApplicationTaskSchedulesInvokeArgs();
    }


    [OutputType]
    public sealed class GetWorkspaceApplicationTaskSchedulesResult
    {
        public readonly string ApplicationKey;
        public readonly ImmutableArray<Outputs.GetWorkspaceApplicationTaskSchedulesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The identifier of the aggregator.
        /// </summary>
        public readonly ImmutableArray<string> Identifiers;
        /// <summary>
        /// Whether the schedule is enabled.
        /// </summary>
        public readonly bool? IsEnabled;
        /// <summary>
        /// The key of the aggregator object.
        /// </summary>
        public readonly ImmutableArray<string> Keys;
        /// <summary>
        /// Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The list of task_schedule_summary_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkspaceApplicationTaskSchedulesTaskScheduleSummaryCollectionResult> TaskScheduleSummaryCollections;
        /// <summary>
        /// The type of the aggregator.
        /// </summary>
        public readonly ImmutableArray<string> Types;
        public readonly string WorkspaceId;

        [OutputConstructor]
        private GetWorkspaceApplicationTaskSchedulesResult(
            string applicationKey,

            ImmutableArray<Outputs.GetWorkspaceApplicationTaskSchedulesFilterResult> filters,

            string id,

            ImmutableArray<string> identifiers,

            bool? isEnabled,

            ImmutableArray<string> keys,

            string? name,

            ImmutableArray<Outputs.GetWorkspaceApplicationTaskSchedulesTaskScheduleSummaryCollectionResult> taskScheduleSummaryCollections,

            ImmutableArray<string> types,

            string workspaceId)
        {
            ApplicationKey = applicationKey;
            Filters = filters;
            Id = id;
            Identifiers = identifiers;
            IsEnabled = isEnabled;
            Keys = keys;
            Name = name;
            TaskScheduleSummaryCollections = taskScheduleSummaryCollections;
            Types = types;
            WorkspaceId = workspaceId;
        }
    }
}
