// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataIntegration
{
    public static class GetWorkspaceApplications
    {
        /// <summary>
        /// This data source provides the list of Workspace Applications in Oracle Cloud Infrastructure Data Integration service.
        /// 
        /// Retrieves a list of applications and provides options to filter the list.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testWorkspaceApplications = Oci.DataIntegration.GetWorkspaceApplications.Invoke(new()
        ///     {
        ///         WorkspaceId = oci_dataintegration_workspace.Test_workspace.Id,
        ///         Fields = @var.Workspace_application_fields,
        ///         Identifiers = @var.Workspace_application_identifier,
        ///         Name = @var.Workspace_application_name,
        ///         NameContains = @var.Workspace_application_name_contains,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetWorkspaceApplicationsResult> InvokeAsync(GetWorkspaceApplicationsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWorkspaceApplicationsResult>("oci:DataIntegration/getWorkspaceApplications:getWorkspaceApplications", args ?? new GetWorkspaceApplicationsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Workspace Applications in Oracle Cloud Infrastructure Data Integration service.
        /// 
        /// Retrieves a list of applications and provides options to filter the list.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testWorkspaceApplications = Oci.DataIntegration.GetWorkspaceApplications.Invoke(new()
        ///     {
        ///         WorkspaceId = oci_dataintegration_workspace.Test_workspace.Id,
        ///         Fields = @var.Workspace_application_fields,
        ///         Identifiers = @var.Workspace_application_identifier,
        ///         Name = @var.Workspace_application_name,
        ///         NameContains = @var.Workspace_application_name_contains,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetWorkspaceApplicationsResult> Invoke(GetWorkspaceApplicationsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkspaceApplicationsResult>("oci:DataIntegration/getWorkspaceApplications:getWorkspaceApplications", args ?? new GetWorkspaceApplicationsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWorkspaceApplicationsArgs : global::Pulumi.InvokeArgs
    {
        [Input("fields")]
        private List<string>? _fields;

        /// <summary>
        /// Specifies the fields to get for an object.
        /// </summary>
        public List<string> Fields
        {
            get => _fields ?? (_fields = new List<string>());
            set => _fields = value;
        }

        [Input("filters")]
        private List<Inputs.GetWorkspaceApplicationsFilterArgs>? _filters;
        public List<Inputs.GetWorkspaceApplicationsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetWorkspaceApplicationsFilterArgs>());
            set => _filters = value;
        }

        [Input("identifiers")]
        private List<string>? _identifiers;

        /// <summary>
        /// Used to filter by the identifier of the published object.
        /// </summary>
        public List<string> Identifiers
        {
            get => _identifiers ?? (_identifiers = new List<string>());
            set => _identifiers = value;
        }

        /// <summary>
        /// Used to filter by the name of the object.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// This parameter can be used to filter objects by the names that match partially or fully with the given value.
        /// </summary>
        [Input("nameContains")]
        public string? NameContains { get; set; }

        /// <summary>
        /// The workspace ID.
        /// </summary>
        [Input("workspaceId", required: true)]
        public string WorkspaceId { get; set; } = null!;

        public GetWorkspaceApplicationsArgs()
        {
        }
        public static new GetWorkspaceApplicationsArgs Empty => new GetWorkspaceApplicationsArgs();
    }

    public sealed class GetWorkspaceApplicationsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("fields")]
        private InputList<string>? _fields;

        /// <summary>
        /// Specifies the fields to get for an object.
        /// </summary>
        public InputList<string> Fields
        {
            get => _fields ?? (_fields = new InputList<string>());
            set => _fields = value;
        }

        [Input("filters")]
        private InputList<Inputs.GetWorkspaceApplicationsFilterInputArgs>? _filters;
        public InputList<Inputs.GetWorkspaceApplicationsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetWorkspaceApplicationsFilterInputArgs>());
            set => _filters = value;
        }

        [Input("identifiers")]
        private InputList<string>? _identifiers;

        /// <summary>
        /// Used to filter by the identifier of the published object.
        /// </summary>
        public InputList<string> Identifiers
        {
            get => _identifiers ?? (_identifiers = new InputList<string>());
            set => _identifiers = value;
        }

        /// <summary>
        /// Used to filter by the name of the object.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// This parameter can be used to filter objects by the names that match partially or fully with the given value.
        /// </summary>
        [Input("nameContains")]
        public Input<string>? NameContains { get; set; }

        /// <summary>
        /// The workspace ID.
        /// </summary>
        [Input("workspaceId", required: true)]
        public Input<string> WorkspaceId { get; set; } = null!;

        public GetWorkspaceApplicationsInvokeArgs()
        {
        }
        public static new GetWorkspaceApplicationsInvokeArgs Empty => new GetWorkspaceApplicationsInvokeArgs();
    }


    [OutputType]
    public sealed class GetWorkspaceApplicationsResult
    {
        /// <summary>
        /// The list of application_summary_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkspaceApplicationsApplicationSummaryCollectionResult> ApplicationSummaryCollections;
        public readonly ImmutableArray<string> Fields;
        public readonly ImmutableArray<Outputs.GetWorkspaceApplicationsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Value can only contain upper case letters, underscore and numbers. It should begin with upper case letter or underscore. The value can be modified.
        /// </summary>
        public readonly ImmutableArray<string> Identifiers;
        /// <summary>
        /// Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
        /// </summary>
        public readonly string? Name;
        public readonly string? NameContains;
        /// <summary>
        /// The OCID of the workspace containing the application. This allows cross workspace deployment to publish an application from a different workspace into the current workspace specified in this operation.
        /// </summary>
        public readonly string WorkspaceId;

        [OutputConstructor]
        private GetWorkspaceApplicationsResult(
            ImmutableArray<Outputs.GetWorkspaceApplicationsApplicationSummaryCollectionResult> applicationSummaryCollections,

            ImmutableArray<string> fields,

            ImmutableArray<Outputs.GetWorkspaceApplicationsFilterResult> filters,

            string id,

            ImmutableArray<string> identifiers,

            string? name,

            string? nameContains,

            string workspaceId)
        {
            ApplicationSummaryCollections = applicationSummaryCollections;
            Fields = fields;
            Filters = filters;
            Id = id;
            Identifiers = identifiers;
            Name = name;
            NameContains = nameContains;
            WorkspaceId = workspaceId;
        }
    }
}
