// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataIntegration
{
    public static class GetWorkspaceFolder
    {
        /// <summary>
        /// This data source provides details about a specific Workspace Folder resource in Oracle Cloud Infrastructure Data Integration service.
        /// 
        /// Retrieves a folder using the specified identifier.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testWorkspaceFolder = Oci.DataIntegration.GetWorkspaceFolder.Invoke(new()
        ///     {
        ///         FolderKey = @var.Workspace_folder_folder_key,
        ///         WorkspaceId = oci_dataintegration_workspace.Test_workspace.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetWorkspaceFolderResult> InvokeAsync(GetWorkspaceFolderArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWorkspaceFolderResult>("oci:DataIntegration/getWorkspaceFolder:getWorkspaceFolder", args ?? new GetWorkspaceFolderArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Workspace Folder resource in Oracle Cloud Infrastructure Data Integration service.
        /// 
        /// Retrieves a folder using the specified identifier.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testWorkspaceFolder = Oci.DataIntegration.GetWorkspaceFolder.Invoke(new()
        ///     {
        ///         FolderKey = @var.Workspace_folder_folder_key,
        ///         WorkspaceId = oci_dataintegration_workspace.Test_workspace.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetWorkspaceFolderResult> Invoke(GetWorkspaceFolderInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkspaceFolderResult>("oci:DataIntegration/getWorkspaceFolder:getWorkspaceFolder", args ?? new GetWorkspaceFolderInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWorkspaceFolderArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The folder key.
        /// </summary>
        [Input("folderKey", required: true)]
        public string FolderKey { get; set; } = null!;

        /// <summary>
        /// The workspace ID.
        /// </summary>
        [Input("workspaceId", required: true)]
        public string WorkspaceId { get; set; } = null!;

        public GetWorkspaceFolderArgs()
        {
        }
        public static new GetWorkspaceFolderArgs Empty => new GetWorkspaceFolderArgs();
    }

    public sealed class GetWorkspaceFolderInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The folder key.
        /// </summary>
        [Input("folderKey", required: true)]
        public Input<string> FolderKey { get; set; } = null!;

        /// <summary>
        /// The workspace ID.
        /// </summary>
        [Input("workspaceId", required: true)]
        public Input<string> WorkspaceId { get; set; } = null!;

        public GetWorkspaceFolderInvokeArgs()
        {
        }
        public static new GetWorkspaceFolderInvokeArgs Empty => new GetWorkspaceFolderInvokeArgs();
    }


    [OutputType]
    public sealed class GetWorkspaceFolderResult
    {
        /// <summary>
        /// The category name.
        /// </summary>
        public readonly string CategoryName;
        /// <summary>
        /// The description of the aggregator.
        /// </summary>
        public readonly string Description;
        public readonly string FolderKey;
        public readonly string Id;
        /// <summary>
        /// The identifier of the aggregator.
        /// </summary>
        public readonly string Identifier;
        /// <summary>
        /// The key of the aggregator object.
        /// </summary>
        public readonly string Key;
        /// <summary>
        /// A key map. If provided, the key is replaced with generated key. This structure provides mapping between user provided key and generated key.
        /// </summary>
        public readonly ImmutableDictionary<string, object> KeyMap;
        /// <summary>
        /// A summary type containing information about the object including its key, name and when/who created/updated it.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkspaceFolderMetadataResult> Metadatas;
        /// <summary>
        /// The type of the object.
        /// </summary>
        public readonly string ModelType;
        /// <summary>
        /// The model version of an object.
        /// </summary>
        public readonly string ModelVersion;
        /// <summary>
        /// Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
        /// </summary>
        public readonly int ObjectStatus;
        /// <summary>
        /// The version of the object that is used to track changes in the object instance.
        /// </summary>
        public readonly int ObjectVersion;
        /// <summary>
        /// A reference to the object's parent.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkspaceFolderParentRefResult> ParentReves;
        public readonly ImmutableArray<Outputs.GetWorkspaceFolderRegistryMetadataResult> RegistryMetadatas;
        public readonly string WorkspaceId;

        [OutputConstructor]
        private GetWorkspaceFolderResult(
            string categoryName,

            string description,

            string folderKey,

            string id,

            string identifier,

            string key,

            ImmutableDictionary<string, object> keyMap,

            ImmutableArray<Outputs.GetWorkspaceFolderMetadataResult> metadatas,

            string modelType,

            string modelVersion,

            string name,

            int objectStatus,

            int objectVersion,

            ImmutableArray<Outputs.GetWorkspaceFolderParentRefResult> parentReves,

            ImmutableArray<Outputs.GetWorkspaceFolderRegistryMetadataResult> registryMetadatas,

            string workspaceId)
        {
            CategoryName = categoryName;
            Description = description;
            FolderKey = folderKey;
            Id = id;
            Identifier = identifier;
            Key = key;
            KeyMap = keyMap;
            Metadatas = metadatas;
            ModelType = modelType;
            ModelVersion = modelVersion;
            Name = name;
            ObjectStatus = objectStatus;
            ObjectVersion = objectVersion;
            ParentReves = parentReves;
            RegistryMetadatas = registryMetadatas;
            WorkspaceId = workspaceId;
        }
    }
}
