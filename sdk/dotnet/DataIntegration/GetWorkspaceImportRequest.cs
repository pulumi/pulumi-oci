// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataIntegration
{
    public static class GetWorkspaceImportRequest
    {
        /// <summary>
        /// This data source provides details about a specific Workspace Import Request resource in Oracle Cloud Infrastructure Data Integration service.
        /// 
        /// This endpoint can be used to get the summary/details of object being imported.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testWorkspaceImportRequest = Oci.DataIntegration.GetWorkspaceImportRequest.Invoke(new()
        ///     {
        ///         ImportRequestKey = @var.Workspace_import_request_import_request_key,
        ///         WorkspaceId = oci_dataintegration_workspace.Test_workspace.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetWorkspaceImportRequestResult> InvokeAsync(GetWorkspaceImportRequestArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWorkspaceImportRequestResult>("oci:DataIntegration/getWorkspaceImportRequest:getWorkspaceImportRequest", args ?? new GetWorkspaceImportRequestArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Workspace Import Request resource in Oracle Cloud Infrastructure Data Integration service.
        /// 
        /// This endpoint can be used to get the summary/details of object being imported.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testWorkspaceImportRequest = Oci.DataIntegration.GetWorkspaceImportRequest.Invoke(new()
        ///     {
        ///         ImportRequestKey = @var.Workspace_import_request_import_request_key,
        ///         WorkspaceId = oci_dataintegration_workspace.Test_workspace.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetWorkspaceImportRequestResult> Invoke(GetWorkspaceImportRequestInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkspaceImportRequestResult>("oci:DataIntegration/getWorkspaceImportRequest:getWorkspaceImportRequest", args ?? new GetWorkspaceImportRequestInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWorkspaceImportRequestArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The key of the object export object request
        /// </summary>
        [Input("importRequestKey", required: true)]
        public string ImportRequestKey { get; set; } = null!;

        /// <summary>
        /// The workspace ID.
        /// </summary>
        [Input("workspaceId", required: true)]
        public string WorkspaceId { get; set; } = null!;

        public GetWorkspaceImportRequestArgs()
        {
        }
        public static new GetWorkspaceImportRequestArgs Empty => new GetWorkspaceImportRequestArgs();
    }

    public sealed class GetWorkspaceImportRequestInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The key of the object export object request
        /// </summary>
        [Input("importRequestKey", required: true)]
        public Input<string> ImportRequestKey { get; set; } = null!;

        /// <summary>
        /// The workspace ID.
        /// </summary>
        [Input("workspaceId", required: true)]
        public Input<string> WorkspaceId { get; set; } = null!;

        public GetWorkspaceImportRequestInvokeArgs()
        {
        }
        public static new GetWorkspaceImportRequestInvokeArgs Empty => new GetWorkspaceImportRequestInvokeArgs();
    }


    [OutputType]
    public sealed class GetWorkspaceImportRequestResult
    {
        /// <summary>
        /// The name of the Object Storage Bucket where the objects will be imported from
        /// </summary>
        public readonly string? Bucket;
        /// <summary>
        /// Name of the user who initiated import request.
        /// </summary>
        public readonly string? CreatedBy;
        /// <summary>
        /// Contains key of the error
        /// </summary>
        public readonly ImmutableDictionary<string, object>? ErrorMessages;
        /// <summary>
        /// Name of the zip file from which objects will be imported.
        /// </summary>
        public readonly string? FileName;
        public readonly string? Id;
        /// <summary>
        /// Import Objects Conflict resolution.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkspaceImportRequestImportConflictResolutionResult> ImportConflictResolutions;
        public readonly string ImportRequestKey;
        /// <summary>
        /// The array of imported object details.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkspaceImportRequestImportedObjectResult> ImportedObjects;
        /// <summary>
        /// Import object request key
        /// </summary>
        public readonly string? Key;
        /// <summary>
        /// Name of the import request.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Key of the object inside which all the objects will be imported
        /// </summary>
        public readonly string? ObjectKeyForImport;
        /// <summary>
        /// Region of the object storage (if using object storage of different region)
        /// </summary>
        public readonly string? ObjectStorageRegion;
        /// <summary>
        /// Optional parameter to point to object storage tenancy (if using Object Storage of different tenancy)
        /// </summary>
        public readonly string? ObjectStorageTenancyId;
        /// <summary>
        /// Import Objects request status.
        /// </summary>
        public readonly string? Status;
        /// <summary>
        /// Time at which the request was completely processed.
        /// </summary>
        public readonly string? TimeEndedInMillis;
        /// <summary>
        /// Time at which the request started getting processed.
        /// </summary>
        public readonly string? TimeStartedInMillis;
        /// <summary>
        /// Number of objects that are imported.
        /// </summary>
        public readonly int? TotalImportedObjectCount;
        public readonly string WorkspaceId;

        [OutputConstructor]
        private GetWorkspaceImportRequestResult(
            string? bucket,

            string? createdBy,

            ImmutableDictionary<string, object>? errorMessages,

            string? fileName,

            string? id,

            ImmutableArray<Outputs.GetWorkspaceImportRequestImportConflictResolutionResult> importConflictResolutions,

            string importRequestKey,

            ImmutableArray<Outputs.GetWorkspaceImportRequestImportedObjectResult> importedObjects,

            string? key,

            string? name,

            string? objectKeyForImport,

            string? objectStorageRegion,

            string? objectStorageTenancyId,

            string? status,

            string? timeEndedInMillis,

            string? timeStartedInMillis,

            int? totalImportedObjectCount,

            string workspaceId)
        {
            Bucket = bucket;
            CreatedBy = createdBy;
            ErrorMessages = errorMessages;
            FileName = fileName;
            Id = id;
            ImportConflictResolutions = importConflictResolutions;
            ImportRequestKey = importRequestKey;
            ImportedObjects = importedObjects;
            Key = key;
            Name = name;
            ObjectKeyForImport = objectKeyForImport;
            ObjectStorageRegion = objectStorageRegion;
            ObjectStorageTenancyId = objectStorageTenancyId;
            Status = status;
            TimeEndedInMillis = timeEndedInMillis;
            TimeStartedInMillis = timeStartedInMillis;
            TotalImportedObjectCount = totalImportedObjectCount;
            WorkspaceId = workspaceId;
        }
    }
}
