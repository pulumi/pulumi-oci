// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataIntegration
{
    public static class GetWorkspaceProject
    {
        /// <summary>
        /// This data source provides details about a specific Workspace Project resource in Oracle Cloud Infrastructure Data Integration service.
        /// 
        /// Retrieves a project using the specified identifier.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testWorkspaceProject = Oci.DataIntegration.GetWorkspaceProject.Invoke(new()
        ///     {
        ///         ProjectKey = @var.Workspace_project_project_key,
        ///         WorkspaceId = oci_dataintegration_workspace.Test_workspace.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetWorkspaceProjectResult> InvokeAsync(GetWorkspaceProjectArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWorkspaceProjectResult>("oci:DataIntegration/getWorkspaceProject:getWorkspaceProject", args ?? new GetWorkspaceProjectArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Workspace Project resource in Oracle Cloud Infrastructure Data Integration service.
        /// 
        /// Retrieves a project using the specified identifier.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testWorkspaceProject = Oci.DataIntegration.GetWorkspaceProject.Invoke(new()
        ///     {
        ///         ProjectKey = @var.Workspace_project_project_key,
        ///         WorkspaceId = oci_dataintegration_workspace.Test_workspace.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetWorkspaceProjectResult> Invoke(GetWorkspaceProjectInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkspaceProjectResult>("oci:DataIntegration/getWorkspaceProject:getWorkspaceProject", args ?? new GetWorkspaceProjectInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWorkspaceProjectArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The project key.
        /// </summary>
        [Input("projectKey", required: true)]
        public string ProjectKey { get; set; } = null!;

        /// <summary>
        /// The workspace ID.
        /// </summary>
        [Input("workspaceId", required: true)]
        public string WorkspaceId { get; set; } = null!;

        public GetWorkspaceProjectArgs()
        {
        }
        public static new GetWorkspaceProjectArgs Empty => new GetWorkspaceProjectArgs();
    }

    public sealed class GetWorkspaceProjectInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The project key.
        /// </summary>
        [Input("projectKey", required: true)]
        public Input<string> ProjectKey { get; set; } = null!;

        /// <summary>
        /// The workspace ID.
        /// </summary>
        [Input("workspaceId", required: true)]
        public Input<string> WorkspaceId { get; set; } = null!;

        public GetWorkspaceProjectInvokeArgs()
        {
        }
        public static new GetWorkspaceProjectInvokeArgs Empty => new GetWorkspaceProjectInvokeArgs();
    }


    [OutputType]
    public sealed class GetWorkspaceProjectResult
    {
        /// <summary>
        /// The description of the aggregator.
        /// </summary>
        public readonly string Description;
        public readonly string Id;
        /// <summary>
        /// The identifier of the aggregator.
        /// </summary>
        public readonly string Identifier;
        /// <summary>
        /// The key of the aggregator object.
        /// </summary>
        public readonly string Key;
        /// <summary>
        /// A key map. If provided, the key is replaced with generated key. This structure provides mapping between user provided key and generated key.
        /// </summary>
        public readonly ImmutableDictionary<string, object> KeyMap;
        /// <summary>
        /// A summary type containing information about the object including its key, name and when/who created/updated it.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkspaceProjectMetadataResult> Metadatas;
        /// <summary>
        /// The type of the object.
        /// </summary>
        public readonly string ModelType;
        /// <summary>
        /// The model version of an object.
        /// </summary>
        public readonly string ModelVersion;
        /// <summary>
        /// Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
        /// </summary>
        public readonly int ObjectStatus;
        /// <summary>
        /// The version of the object that is used to track changes in the object instance.
        /// </summary>
        public readonly int ObjectVersion;
        /// <summary>
        /// A reference to the object's parent.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkspaceProjectParentRefResult> ParentReves;
        public readonly string ProjectKey;
        public readonly ImmutableArray<Outputs.GetWorkspaceProjectRegistryMetadataResult> RegistryMetadatas;
        public readonly string WorkspaceId;

        [OutputConstructor]
        private GetWorkspaceProjectResult(
            string description,

            string id,

            string identifier,

            string key,

            ImmutableDictionary<string, object> keyMap,

            ImmutableArray<Outputs.GetWorkspaceProjectMetadataResult> metadatas,

            string modelType,

            string modelVersion,

            string name,

            int objectStatus,

            int objectVersion,

            ImmutableArray<Outputs.GetWorkspaceProjectParentRefResult> parentReves,

            string projectKey,

            ImmutableArray<Outputs.GetWorkspaceProjectRegistryMetadataResult> registryMetadatas,

            string workspaceId)
        {
            Description = description;
            Id = id;
            Identifier = identifier;
            Key = key;
            KeyMap = keyMap;
            Metadatas = metadatas;
            ModelType = modelType;
            ModelVersion = modelVersion;
            Name = name;
            ObjectStatus = objectStatus;
            ObjectVersion = objectVersion;
            ParentReves = parentReves;
            ProjectKey = projectKey;
            RegistryMetadatas = registryMetadatas;
            WorkspaceId = workspaceId;
        }
    }
}
