// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataIntegration
{
    public static class GetWorkspaceTask
    {
        /// <summary>
        /// This data source provides details about a specific Workspace Task resource in Oracle Cloud Infrastructure Data Integration service.
        /// 
        /// Retrieves a task using the specified identifier.
        /// </summary>
        public static Task<GetWorkspaceTaskResult> InvokeAsync(GetWorkspaceTaskArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWorkspaceTaskResult>("oci:DataIntegration/getWorkspaceTask:getWorkspaceTask", args ?? new GetWorkspaceTaskArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Workspace Task resource in Oracle Cloud Infrastructure Data Integration service.
        /// 
        /// Retrieves a task using the specified identifier.
        /// </summary>
        public static Output<GetWorkspaceTaskResult> Invoke(GetWorkspaceTaskInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkspaceTaskResult>("oci:DataIntegration/getWorkspaceTask:getWorkspaceTask", args ?? new GetWorkspaceTaskInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWorkspaceTaskArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Used to expand references of the object. If value is true, then all referenced objects are expanded. If value is false, then shallow objects are returned in place of references. Default is false. &lt;br&gt;&lt;br&gt;&lt;B&gt;Example:&lt;/B&gt;&lt;br&gt; &lt;ul&gt; &lt;li&gt;&lt;B&gt;?expandReferences=true&lt;/B&gt; returns all objects of type data loader task&lt;/li&gt; &lt;/ul&gt;
        /// </summary>
        [Input("expandReferences", required: true)]
        public string ExpandReferences { get; set; } = null!;

        /// <summary>
        /// The key of the object.
        /// </summary>
        [Input("key", required: true)]
        public string Key { get; set; } = null!;

        /// <summary>
        /// The workspace ID.
        /// </summary>
        [Input("workspaceId", required: true)]
        public string WorkspaceId { get; set; } = null!;

        public GetWorkspaceTaskArgs()
        {
        }
        public static new GetWorkspaceTaskArgs Empty => new GetWorkspaceTaskArgs();
    }

    public sealed class GetWorkspaceTaskInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Used to expand references of the object. If value is true, then all referenced objects are expanded. If value is false, then shallow objects are returned in place of references. Default is false. &lt;br&gt;&lt;br&gt;&lt;B&gt;Example:&lt;/B&gt;&lt;br&gt; &lt;ul&gt; &lt;li&gt;&lt;B&gt;?expandReferences=true&lt;/B&gt; returns all objects of type data loader task&lt;/li&gt; &lt;/ul&gt;
        /// </summary>
        [Input("expandReferences", required: true)]
        public Input<string> ExpandReferences { get; set; } = null!;

        /// <summary>
        /// The key of the object.
        /// </summary>
        [Input("key", required: true)]
        public Input<string> Key { get; set; } = null!;

        /// <summary>
        /// The workspace ID.
        /// </summary>
        [Input("workspaceId", required: true)]
        public Input<string> WorkspaceId { get; set; } = null!;

        public GetWorkspaceTaskInvokeArgs()
        {
        }
        public static new GetWorkspaceTaskInvokeArgs Empty => new GetWorkspaceTaskInvokeArgs();
    }


    [OutputType]
    public sealed class GetWorkspaceTaskResult
    {
        /// <summary>
        /// The REST invocation pattern to use. ASYNC_OCI_WORKREQUEST is being deprecated as well as cancelEndpoint/MethodType.
        /// </summary>
        public readonly string ApiCallMode;
        /// <summary>
        /// Authentication configuration for Generic REST invocation.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkspaceTaskAuthConfigResult> AuthConfigs;
        /// <summary>
        /// The REST API configuration for cancelling the task.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkspaceTaskCancelRestCallConfigResult> CancelRestCallConfigs;
        /// <summary>
        /// The information about the configuration provider.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkspaceTaskConfigProviderDelegateResult> ConfigProviderDelegates;
        /// <summary>
        /// Detailed description for the object.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The REST API configuration for execution.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkspaceTaskExecuteRestCallConfigResult> ExecuteRestCallConfigs;
        public readonly string ExpandReferences;
        public readonly string Id;
        /// <summary>
        /// Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
        /// </summary>
        public readonly string Identifier;
        /// <summary>
        /// An array of input ports.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkspaceTaskInputPortResult> InputPorts;
        /// <summary>
        /// Defines whether Data Loader task is used for single load or multiple
        /// </summary>
        public readonly bool IsSingleLoad;
        /// <summary>
        /// The key of the object.
        /// </summary>
        public readonly string Key;
        /// <summary>
        /// A key map. If provided, key is replaced with generated key. This structure provides mapping between user provided key and generated key.
        /// </summary>
        public readonly ImmutableDictionary<string, string> KeyMap;
        /// <summary>
        /// A summary type containing information about the object including its key, name and when/who created/updated it.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkspaceTaskMetadataResult> Metadatas;
        /// <summary>
        /// The type of the types object.
        /// </summary>
        public readonly string ModelType;
        /// <summary>
        /// The model version of an object.
        /// </summary>
        public readonly string ModelVersion;
        /// <summary>
        /// Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
        /// </summary>
        public readonly int ObjectStatus;
        /// <summary>
        /// This is used by the service for optimistic locking of the object, to prevent multiple users from simultaneously updating the object.
        /// </summary>
        public readonly int ObjectVersion;
        /// <summary>
        /// Configuration values can be string, objects, or parameters.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkspaceTaskOpConfigValueResult> OpConfigValues;
        /// <summary>
        /// Describes the shape of the execution result
        /// </summary>
        public readonly string Operation;
        /// <summary>
        /// An array of output ports.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkspaceTaskOutputPortResult> OutputPorts;
        /// <summary>
        /// Defines the number of entities being loaded in parallel at a time for a Data Loader task
        /// </summary>
        public readonly int ParallelLoadLimit;
        /// <summary>
        /// A list of parameters for the pipeline, this allows certain aspects of the pipeline to be configured when the pipeline is executed.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkspaceTaskParameterResult> Parameters;
        /// <summary>
        /// A reference to the object's parent.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkspaceTaskParentRefResult> ParentReves;
        /// <summary>
        /// The REST API configuration for polling.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkspaceTaskPollRestCallConfigResult> PollRestCallConfigs;
        /// <summary>
        /// Information about the object and its parent.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkspaceTaskRegistryMetadataResult> RegistryMetadatas;
        /// <summary>
        /// List of typed expressions.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkspaceTaskTypedExpressionResult> TypedExpressions;
        public readonly string WorkspaceId;

        [OutputConstructor]
        private GetWorkspaceTaskResult(
            string apiCallMode,

            ImmutableArray<Outputs.GetWorkspaceTaskAuthConfigResult> authConfigs,

            ImmutableArray<Outputs.GetWorkspaceTaskCancelRestCallConfigResult> cancelRestCallConfigs,

            ImmutableArray<Outputs.GetWorkspaceTaskConfigProviderDelegateResult> configProviderDelegates,

            string description,

            ImmutableArray<Outputs.GetWorkspaceTaskExecuteRestCallConfigResult> executeRestCallConfigs,

            string expandReferences,

            string id,

            string identifier,

            ImmutableArray<Outputs.GetWorkspaceTaskInputPortResult> inputPorts,

            bool isSingleLoad,

            string key,

            ImmutableDictionary<string, string> keyMap,

            ImmutableArray<Outputs.GetWorkspaceTaskMetadataResult> metadatas,

            string modelType,

            string modelVersion,

            string name,

            int objectStatus,

            int objectVersion,

            ImmutableArray<Outputs.GetWorkspaceTaskOpConfigValueResult> opConfigValues,

            string operation,

            ImmutableArray<Outputs.GetWorkspaceTaskOutputPortResult> outputPorts,

            int parallelLoadLimit,

            ImmutableArray<Outputs.GetWorkspaceTaskParameterResult> parameters,

            ImmutableArray<Outputs.GetWorkspaceTaskParentRefResult> parentReves,

            ImmutableArray<Outputs.GetWorkspaceTaskPollRestCallConfigResult> pollRestCallConfigs,

            ImmutableArray<Outputs.GetWorkspaceTaskRegistryMetadataResult> registryMetadatas,

            ImmutableArray<Outputs.GetWorkspaceTaskTypedExpressionResult> typedExpressions,

            string workspaceId)
        {
            ApiCallMode = apiCallMode;
            AuthConfigs = authConfigs;
            CancelRestCallConfigs = cancelRestCallConfigs;
            ConfigProviderDelegates = configProviderDelegates;
            Description = description;
            ExecuteRestCallConfigs = executeRestCallConfigs;
            ExpandReferences = expandReferences;
            Id = id;
            Identifier = identifier;
            InputPorts = inputPorts;
            IsSingleLoad = isSingleLoad;
            Key = key;
            KeyMap = keyMap;
            Metadatas = metadatas;
            ModelType = modelType;
            ModelVersion = modelVersion;
            Name = name;
            ObjectStatus = objectStatus;
            ObjectVersion = objectVersion;
            OpConfigValues = opConfigValues;
            Operation = operation;
            OutputPorts = outputPorts;
            ParallelLoadLimit = parallelLoadLimit;
            Parameters = parameters;
            ParentReves = parentReves;
            PollRestCallConfigs = pollRestCallConfigs;
            RegistryMetadatas = registryMetadatas;
            TypedExpressions = typedExpressions;
            WorkspaceId = workspaceId;
        }
    }
}
