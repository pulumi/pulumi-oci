// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataIntegration.Inputs
{

    public sealed class WorkspaceTaskParameterGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) Configuration values can be string, objects, or parameters.
        /// </summary>
        [Input("configValues")]
        public Input<Inputs.WorkspaceTaskParameterConfigValuesGetArgs>? ConfigValues { get; set; }

        /// <summary>
        /// (Updatable) The default value of the parameter.
        /// </summary>
        [Input("defaultValue")]
        public Input<string>? DefaultValue { get; set; }

        /// <summary>
        /// (Updatable) Detailed description for the object.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) Specifies whether the parameter is input value.
        /// </summary>
        [Input("isInput")]
        public Input<bool>? IsInput { get; set; }

        /// <summary>
        /// (Updatable) Specifies whether the parameter is output value.
        /// </summary>
        [Input("isOutput")]
        public Input<bool>? IsOutput { get; set; }

        /// <summary>
        /// (Updatable) The key of the object.
        /// </summary>
        [Input("key")]
        public Input<string>? Key { get; set; }

        /// <summary>
        /// (Updatable) The type of the types object.
        /// </summary>
        [Input("modelType", required: true)]
        public Input<string> ModelType { get; set; } = null!;

        /// <summary>
        /// (Updatable) The model version of an object.
        /// </summary>
        [Input("modelVersion")]
        public Input<string>? ModelVersion { get; set; }

        /// <summary>
        /// (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
        /// </summary>
        [Input("objectStatus")]
        public Input<int>? ObjectStatus { get; set; }

        /// <summary>
        /// (Updatable) The output aggregation type.
        /// </summary>
        [Input("outputAggregationType")]
        public Input<string>? OutputAggregationType { get; set; }

        /// <summary>
        /// (Updatable) A reference to the object's parent.
        /// </summary>
        [Input("parentRef")]
        public Input<Inputs.WorkspaceTaskParameterParentRefGetArgs>? ParentRef { get; set; }

        /// <summary>
        /// (Updatable) The default value of the parameter which can be an object in DIS, such as a data entity.
        /// </summary>
        [Input("rootObjectDefaultValue")]
        public Input<string>? RootObjectDefaultValue { get; set; }

        /// <summary>
        /// (Updatable) This can either be a string value referencing the type or a BaseType object.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// (Updatable) The type of value the parameter was created for.
        /// </summary>
        [Input("typeName")]
        public Input<string>? TypeName { get; set; }

        /// <summary>
        /// (Updatable) The param name for which parameter is created for for eg. driver Shape, Operation etc.
        /// </summary>
        [Input("usedFor")]
        public Input<string>? UsedFor { get; set; }

        public WorkspaceTaskParameterGetArgs()
        {
        }
        public static new WorkspaceTaskParameterGetArgs Empty => new WorkspaceTaskParameterGetArgs();
    }
}
