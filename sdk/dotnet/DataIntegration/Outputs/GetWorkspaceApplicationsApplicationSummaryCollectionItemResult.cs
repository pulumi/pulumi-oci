// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataIntegration.Outputs
{

    [OutputType]
    public sealed class GetWorkspaceApplicationsApplicationSummaryCollectionItemResult
    {
        /// <summary>
        /// The source application version of the application.
        /// </summary>
        public readonly int? ApplicationVersion;
        /// <summary>
        /// OCID of the compartment that this resource belongs to. Defaults to compartment of the Workspace.
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? DefinedTags;
        /// <summary>
        /// A list of dependent objects in this patch.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkspaceApplicationsApplicationSummaryCollectionItemDependentObjectMetadataResult> DependentObjectMetadatas;
        /// <summary>
        /// The description of the aggregator.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? FreeformTags;
        /// <summary>
        /// OCID of the resource that is used to uniquely identify the application
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Used to filter by the identifier of the published object.
        /// </summary>
        public readonly string? Identifier;
        /// <summary>
        /// The key of the object.
        /// </summary>
        public readonly string? Key;
        /// <summary>
        /// A key map. If provided, key is replaced with generated key. This structure provides mapping between user provided key and generated key.
        /// </summary>
        public readonly ImmutableDictionary<string, object>? KeyMap;
        /// <summary>
        /// A summary type containing information about the object including its key, name and when/who created/updated it.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkspaceApplicationsApplicationSummaryCollectionItemMetadataResult> Metadatas;
        /// <summary>
        /// The object type.
        /// </summary>
        public readonly string? ModelType;
        /// <summary>
        /// The object's model version.
        /// </summary>
        public readonly string? ModelVersion;
        /// <summary>
        /// Used to filter by the name of the object.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
        /// </summary>
        public readonly int? ObjectStatus;
        /// <summary>
        /// The object version.
        /// </summary>
        public readonly int? ObjectVersion;
        /// <summary>
        /// A reference to the object's parent.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkspaceApplicationsApplicationSummaryCollectionItemParentRefResult> ParentReves;
        /// <summary>
        /// A list of objects that are published or unpublished in this patch.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkspaceApplicationsApplicationSummaryCollectionItemPublishedObjectMetadataResult> PublishedObjectMetadatas;
        public readonly ImmutableArray<Outputs.GetWorkspaceApplicationsApplicationSummaryCollectionItemRegistryMetadataResult> RegistryMetadatas;
        /// <summary>
        /// The information about the application.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkspaceApplicationsApplicationSummaryCollectionItemSourceApplicationInfoResult> SourceApplicationInfos;
        /// <summary>
        /// The current state of the workspace.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// The date and time the application was created, in the timestamp format defined by RFC3339.
        /// </summary>
        public readonly string? TimeCreated;
        /// <summary>
        /// The date and time the application was patched, in the timestamp format defined by RFC3339.
        /// </summary>
        public readonly string? TimePatched;
        /// <summary>
        /// The date and time the application was updated, in the timestamp format defined by RFC3339. example: 2019-08-25T21:10:29.41Z
        /// </summary>
        public readonly string? TimeUpdated;
        /// <summary>
        /// The workspace ID.
        /// </summary>
        public readonly string? WorkspaceId;

        [OutputConstructor]
        private GetWorkspaceApplicationsApplicationSummaryCollectionItemResult(
            int? applicationVersion,

            string? compartmentId,

            ImmutableDictionary<string, object>? definedTags,

            ImmutableArray<Outputs.GetWorkspaceApplicationsApplicationSummaryCollectionItemDependentObjectMetadataResult> dependentObjectMetadatas,

            string? description,

            string? displayName,

            ImmutableDictionary<string, object>? freeformTags,

            string? id,

            string? identifier,

            string? key,

            ImmutableDictionary<string, object>? keyMap,

            ImmutableArray<Outputs.GetWorkspaceApplicationsApplicationSummaryCollectionItemMetadataResult> metadatas,

            string? modelType,

            string? modelVersion,

            string? name,

            int? objectStatus,

            int? objectVersion,

            ImmutableArray<Outputs.GetWorkspaceApplicationsApplicationSummaryCollectionItemParentRefResult> parentReves,

            ImmutableArray<Outputs.GetWorkspaceApplicationsApplicationSummaryCollectionItemPublishedObjectMetadataResult> publishedObjectMetadatas,

            ImmutableArray<Outputs.GetWorkspaceApplicationsApplicationSummaryCollectionItemRegistryMetadataResult> registryMetadatas,

            ImmutableArray<Outputs.GetWorkspaceApplicationsApplicationSummaryCollectionItemSourceApplicationInfoResult> sourceApplicationInfos,

            string? state,

            string? timeCreated,

            string? timePatched,

            string? timeUpdated,

            string? workspaceId)
        {
            ApplicationVersion = applicationVersion;
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            DependentObjectMetadatas = dependentObjectMetadatas;
            Description = description;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            Identifier = identifier;
            Key = key;
            KeyMap = keyMap;
            Metadatas = metadatas;
            ModelType = modelType;
            ModelVersion = modelVersion;
            Name = name;
            ObjectStatus = objectStatus;
            ObjectVersion = objectVersion;
            ParentReves = parentReves;
            PublishedObjectMetadatas = publishedObjectMetadatas;
            RegistryMetadatas = registryMetadatas;
            SourceApplicationInfos = sourceApplicationInfos;
            State = state;
            TimeCreated = timeCreated;
            TimePatched = timePatched;
            TimeUpdated = timeUpdated;
            WorkspaceId = workspaceId;
        }
    }
}
