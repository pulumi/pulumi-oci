// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataIntegration.Outputs
{

    [OutputType]
    public sealed class GetWorkspaceFoldersFolderSummaryCollectionItemMetadataResult
    {
        /// <summary>
        /// Used to filter by the project or the folder object.
        /// </summary>
        public readonly string AggregatorKey;
        /// <summary>
        /// A summary type containing information about the object's aggregator including its type, key, name and description.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkspaceFoldersFolderSummaryCollectionItemMetadataAggregatorResult> Aggregators;
        /// <summary>
        /// A count statistics.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkspaceFoldersFolderSummaryCollectionItemMetadataCountStatisticResult> CountStatistics;
        /// <summary>
        /// The user that created the object.
        /// </summary>
        public readonly string CreatedBy;
        /// <summary>
        /// The user that created the object.
        /// </summary>
        public readonly string CreatedByName;
        /// <summary>
        /// The full path to identify this object.
        /// </summary>
        public readonly string IdentifierPath;
        /// <summary>
        /// Information property fields.
        /// </summary>
        public readonly ImmutableDictionary<string, object> InfoFields;
        /// <summary>
        /// Specifies whether this object is a favorite or not.
        /// </summary>
        public readonly bool IsFavorite;
        /// <summary>
        /// Labels are keywords or tags that you can add to data assets, dataflows and so on. You can define your own labels and use them to categorize content.
        /// </summary>
        public readonly ImmutableArray<string> Labels;
        /// <summary>
        /// The registry version of the object.
        /// </summary>
        public readonly int RegistryVersion;
        /// <summary>
        /// The date and time that the object was created.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The date and time that the object was updated.
        /// </summary>
        public readonly string TimeUpdated;
        /// <summary>
        /// The user that updated the object.
        /// </summary>
        public readonly string UpdatedBy;
        /// <summary>
        /// The user that updated the object.
        /// </summary>
        public readonly string UpdatedByName;

        [OutputConstructor]
        private GetWorkspaceFoldersFolderSummaryCollectionItemMetadataResult(
            string aggregatorKey,

            ImmutableArray<Outputs.GetWorkspaceFoldersFolderSummaryCollectionItemMetadataAggregatorResult> aggregators,

            ImmutableArray<Outputs.GetWorkspaceFoldersFolderSummaryCollectionItemMetadataCountStatisticResult> countStatistics,

            string createdBy,

            string createdByName,

            string identifierPath,

            ImmutableDictionary<string, object> infoFields,

            bool isFavorite,

            ImmutableArray<string> labels,

            int registryVersion,

            string timeCreated,

            string timeUpdated,

            string updatedBy,

            string updatedByName)
        {
            AggregatorKey = aggregatorKey;
            Aggregators = aggregators;
            CountStatistics = countStatistics;
            CreatedBy = createdBy;
            CreatedByName = createdByName;
            IdentifierPath = identifierPath;
            InfoFields = infoFields;
            IsFavorite = isFavorite;
            Labels = labels;
            RegistryVersion = registryVersion;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            UpdatedBy = updatedBy;
            UpdatedByName = updatedByName;
        }
    }
}
