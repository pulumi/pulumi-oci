// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataIntegration.Outputs
{

    [OutputType]
    public sealed class GetWorkspaceImportRequestsImportRequestSummaryCollectionItemResult
    {
        /// <summary>
        /// The name of the Object Storage Bucket where the objects will be imported from
        /// </summary>
        public readonly string Bucket;
        /// <summary>
        /// Name of the user who initiated import request.
        /// </summary>
        public readonly string? CreatedBy;
        /// <summary>
        /// Contains key of the error
        /// </summary>
        public readonly ImmutableDictionary<string, object>? ErrorMessages;
        /// <summary>
        /// Name of the zip file from which objects will be imported.
        /// </summary>
        public readonly string FileName;
        /// <summary>
        /// Import Objects Conflict resolution.
        /// </summary>
        public readonly Outputs.GetWorkspaceImportRequestsImportRequestSummaryCollectionItemImportConflictResolutionResult? ImportConflictResolution;
        /// <summary>
        /// The array of imported object details.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkspaceImportRequestsImportRequestSummaryCollectionItemImportedObjectResult> ImportedObjects;
        /// <summary>
        /// Import object request key
        /// </summary>
        public readonly string? Key;
        /// <summary>
        /// Used to filter by the name of the object.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Key of the object inside which all the objects will be imported
        /// </summary>
        public readonly string? ObjectKeyForImport;
        /// <summary>
        /// Region of the object storage (if using object storage of different region)
        /// </summary>
        public readonly string? ObjectStorageRegion;
        /// <summary>
        /// Optional parameter to point to object storage tenancy (if using Object Storage of different tenancy)
        /// </summary>
        public readonly string? ObjectStorageTenancyId;
        /// <summary>
        /// Import Objects request status.
        /// </summary>
        public readonly string? Status;
        /// <summary>
        /// Specifies end time of a copy object request.
        /// </summary>
        public readonly string? TimeEndedInMillis;
        /// <summary>
        /// Specifies start time of a copy object request.
        /// </summary>
        public readonly string? TimeStartedInMillis;
        /// <summary>
        /// Number of objects that are imported.
        /// </summary>
        public readonly int? TotalImportedObjectCount;
        /// <summary>
        /// The workspace ID.
        /// </summary>
        public readonly string WorkspaceId;

        [OutputConstructor]
        private GetWorkspaceImportRequestsImportRequestSummaryCollectionItemResult(
            string bucket,

            string? createdBy,

            ImmutableDictionary<string, object>? errorMessages,

            string fileName,

            Outputs.GetWorkspaceImportRequestsImportRequestSummaryCollectionItemImportConflictResolutionResult? importConflictResolution,

            ImmutableArray<Outputs.GetWorkspaceImportRequestsImportRequestSummaryCollectionItemImportedObjectResult> importedObjects,

            string? key,

            string? name,

            string? objectKeyForImport,

            string? objectStorageRegion,

            string? objectStorageTenancyId,

            string? status,

            string? timeEndedInMillis,

            string? timeStartedInMillis,

            int? totalImportedObjectCount,

            string workspaceId)
        {
            Bucket = bucket;
            CreatedBy = createdBy;
            ErrorMessages = errorMessages;
            FileName = fileName;
            ImportConflictResolution = importConflictResolution;
            ImportedObjects = importedObjects;
            Key = key;
            Name = name;
            ObjectKeyForImport = objectKeyForImport;
            ObjectStorageRegion = objectStorageRegion;
            ObjectStorageTenancyId = objectStorageTenancyId;
            Status = status;
            TimeEndedInMillis = timeEndedInMillis;
            TimeStartedInMillis = timeStartedInMillis;
            TotalImportedObjectCount = totalImportedObjectCount;
            WorkspaceId = workspaceId;
        }
    }
}
