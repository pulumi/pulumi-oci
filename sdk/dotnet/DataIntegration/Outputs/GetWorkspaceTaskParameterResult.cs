// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataIntegration.Outputs
{

    [OutputType]
    public sealed class GetWorkspaceTaskParameterResult
    {
        /// <summary>
        /// Configuration values can be string, objects, or parameters.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkspaceTaskParameterConfigValueResult> ConfigValues;
        /// <summary>
        /// A default value for the vairable.
        /// </summary>
        public readonly string DefaultValue;
        /// <summary>
        /// Detailed description for the object.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Specifies whether the parameter is input value.
        /// </summary>
        public readonly bool IsInput;
        /// <summary>
        /// Specifies whether the parameter is output value.
        /// </summary>
        public readonly bool IsOutput;
        /// <summary>
        /// The key of the object.
        /// </summary>
        public readonly string Key;
        /// <summary>
        /// The type of the types object.
        /// </summary>
        public readonly string ModelType;
        /// <summary>
        /// The model version of an object.
        /// </summary>
        public readonly string ModelVersion;
        /// <summary>
        /// Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
        /// </summary>
        public readonly int ObjectStatus;
        /// <summary>
        /// The output aggregation type.
        /// </summary>
        public readonly string OutputAggregationType;
        /// <summary>
        /// A reference to the object's parent.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkspaceTaskParameterParentRefResult> ParentReves;
        /// <summary>
        /// A base class for all model types, including First Class and its contained objects.
        /// </summary>
        public readonly string RootObjectDefaultValue;
        /// <summary>
        /// The object type.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The type of value the parameter was created for.
        /// </summary>
        public readonly string TypeName;
        /// <summary>
        /// The param name for which parameter is created for for eg. driver Shape, Operation etc.
        /// </summary>
        public readonly string UsedFor;

        [OutputConstructor]
        private GetWorkspaceTaskParameterResult(
            ImmutableArray<Outputs.GetWorkspaceTaskParameterConfigValueResult> configValues,

            string defaultValue,

            string description,

            bool isInput,

            bool isOutput,

            string key,

            string modelType,

            string modelVersion,

            string name,

            int objectStatus,

            string outputAggregationType,

            ImmutableArray<Outputs.GetWorkspaceTaskParameterParentRefResult> parentReves,

            string rootObjectDefaultValue,

            string type,

            string typeName,

            string usedFor)
        {
            ConfigValues = configValues;
            DefaultValue = defaultValue;
            Description = description;
            IsInput = isInput;
            IsOutput = isOutput;
            Key = key;
            ModelType = modelType;
            ModelVersion = modelVersion;
            Name = name;
            ObjectStatus = objectStatus;
            OutputAggregationType = outputAggregationType;
            ParentReves = parentReves;
            RootObjectDefaultValue = rootObjectDefaultValue;
            Type = type;
            TypeName = typeName;
            UsedFor = usedFor;
        }
    }
}
