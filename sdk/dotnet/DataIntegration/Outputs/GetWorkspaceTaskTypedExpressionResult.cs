// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataIntegration.Outputs
{

    [OutputType]
    public sealed class GetWorkspaceTaskTypedExpressionResult
    {
        /// <summary>
        /// Configuration values can be string, objects, or parameters.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkspaceTaskTypedExpressionConfigValueResult> ConfigValues;
        /// <summary>
        /// Detailed description for the object.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The expression string for the object.
        /// </summary>
        public readonly string Expression;
        /// <summary>
        /// The key of the object.
        /// </summary>
        public readonly string Key;
        /// <summary>
        /// The type of the types object.
        /// </summary>
        public readonly string ModelType;
        /// <summary>
        /// The model version of an object.
        /// </summary>
        public readonly string ModelVersion;
        /// <summary>
        /// Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
        /// </summary>
        public readonly int ObjectStatus;
        /// <summary>
        /// A reference to the object's parent.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkspaceTaskTypedExpressionParentRefResult> ParentReves;
        /// <summary>
        /// The object type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetWorkspaceTaskTypedExpressionResult(
            ImmutableArray<Outputs.GetWorkspaceTaskTypedExpressionConfigValueResult> configValues,

            string description,

            string expression,

            string key,

            string modelType,

            string modelVersion,

            string name,

            int objectStatus,

            ImmutableArray<Outputs.GetWorkspaceTaskTypedExpressionParentRefResult> parentReves,

            string type)
        {
            ConfigValues = configValues;
            Description = description;
            Expression = expression;
            Key = key;
            ModelType = modelType;
            ModelVersion = modelVersion;
            Name = name;
            ObjectStatus = objectStatus;
            ParentReves = parentReves;
            Type = type;
        }
    }
}
