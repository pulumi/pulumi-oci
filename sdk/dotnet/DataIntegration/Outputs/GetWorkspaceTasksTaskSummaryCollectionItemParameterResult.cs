// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataIntegration.Outputs
{

    [OutputType]
    public sealed class GetWorkspaceTasksTaskSummaryCollectionItemParameterResult
    {
        /// <summary>
        /// Configuration values can be string, objects, or parameters.
        /// </summary>
        public readonly Outputs.GetWorkspaceTasksTaskSummaryCollectionItemParameterConfigValuesResult ConfigValues;
        /// <summary>
        /// A default value for the vairable.
        /// </summary>
        public readonly string DefaultValue;
        /// <summary>
        /// Detailed description for the object.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Specifies whether the parameter is input value.
        /// </summary>
        public readonly bool IsInput;
        /// <summary>
        /// Specifies whether the parameter is output value.
        /// </summary>
        public readonly bool IsOutput;
        /// <summary>
        /// Used to filter by the key of the object.
        /// </summary>
        public readonly string Key;
        /// <summary>
        /// The type of the types object.
        /// </summary>
        public readonly string ModelType;
        /// <summary>
        /// The model version of an object.
        /// </summary>
        public readonly string ModelVersion;
        /// <summary>
        /// Used to filter by the name of the object.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
        /// </summary>
        public readonly int ObjectStatus;
        /// <summary>
        /// The output aggregation type.
        /// </summary>
        public readonly string OutputAggregationType;
        /// <summary>
        /// A reference to the object's parent.
        /// </summary>
        public readonly Outputs.GetWorkspaceTasksTaskSummaryCollectionItemParameterParentRefResult ParentRef;
        /// <summary>
        /// A base class for all model types, including First Class and its contained objects.
        /// </summary>
        public readonly string RootObjectDefaultValue;
        /// <summary>
        /// Used to filter by the object type of the object. It can be suffixed with an optional filter operator InSubtree. If this operator is not specified, then exact match is considered. &lt;br&gt;&lt;br&gt;&lt;B&gt;Examples:&lt;/B&gt;&lt;br&gt; &lt;ul&gt; &lt;li&gt;&lt;B&gt;?type=DATA_LOADER_TASK&amp;typeInSubtree=false&lt;/B&gt; returns all objects of type data loader task&lt;/li&gt; &lt;li&gt;&lt;B&gt;?type=DATA_LOADER_TASK&lt;/B&gt; returns all objects of type data loader task&lt;/li&gt; &lt;li&gt;&lt;B&gt;?type=DATA_LOADER_TASK&amp;typeInSubtree=true&lt;/B&gt; returns all objects of type data loader task&lt;/li&gt; &lt;/ul&gt;
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The type of value the parameter was created for.
        /// </summary>
        public readonly string TypeName;
        /// <summary>
        /// The param name for which parameter is created for for eg. driver Shape, Operation etc.
        /// </summary>
        public readonly string UsedFor;

        [OutputConstructor]
        private GetWorkspaceTasksTaskSummaryCollectionItemParameterResult(
            Outputs.GetWorkspaceTasksTaskSummaryCollectionItemParameterConfigValuesResult configValues,

            string defaultValue,

            string description,

            bool isInput,

            bool isOutput,

            string key,

            string modelType,

            string modelVersion,

            string name,

            int objectStatus,

            string outputAggregationType,

            Outputs.GetWorkspaceTasksTaskSummaryCollectionItemParameterParentRefResult parentRef,

            string rootObjectDefaultValue,

            string type,

            string typeName,

            string usedFor)
        {
            ConfigValues = configValues;
            DefaultValue = defaultValue;
            Description = description;
            IsInput = isInput;
            IsOutput = isOutput;
            Key = key;
            ModelType = modelType;
            ModelVersion = modelVersion;
            Name = name;
            ObjectStatus = objectStatus;
            OutputAggregationType = outputAggregationType;
            ParentRef = parentRef;
            RootObjectDefaultValue = rootObjectDefaultValue;
            Type = type;
            TypeName = typeName;
            UsedFor = usedFor;
        }
    }
}
