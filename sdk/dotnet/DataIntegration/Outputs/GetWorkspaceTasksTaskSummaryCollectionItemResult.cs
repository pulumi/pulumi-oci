// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataIntegration.Outputs
{

    [OutputType]
    public sealed class GetWorkspaceTasksTaskSummaryCollectionItemResult
    {
        /// <summary>
        /// The REST invocation pattern to use. ASYNC_OCI_WORKREQUEST is being deprecated as well as cancelEndpoint/MethodType.
        /// </summary>
        public readonly string ApiCallMode;
        /// <summary>
        /// Authentication configuration for Generic REST invocation.
        /// </summary>
        public readonly Outputs.GetWorkspaceTasksTaskSummaryCollectionItemAuthConfigResult AuthConfig;
        /// <summary>
        /// The REST API configuration for cancelling the task.
        /// </summary>
        public readonly Outputs.GetWorkspaceTasksTaskSummaryCollectionItemCancelRestCallConfigResult CancelRestCallConfig;
        /// <summary>
        /// The information about the configuration provider.
        /// </summary>
        public readonly Outputs.GetWorkspaceTasksTaskSummaryCollectionItemConfigProviderDelegateResult ConfigProviderDelegate;
        /// <summary>
        /// Detailed description for the object.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The REST API configuration for execution.
        /// </summary>
        public readonly Outputs.GetWorkspaceTasksTaskSummaryCollectionItemExecuteRestCallConfigResult ExecuteRestCallConfig;
        /// <summary>
        /// Used to filter by the identifier of the object.
        /// </summary>
        public readonly string Identifier;
        /// <summary>
        /// An array of input ports.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkspaceTasksTaskSummaryCollectionItemInputPortResult> InputPorts;
        /// <summary>
        /// Defines whether Data Loader task is used for single load or multiple
        /// </summary>
        public readonly bool IsSingleLoad;
        /// <summary>
        /// Used to filter by the key of the object.
        /// </summary>
        public readonly string Key;
        /// <summary>
        /// A key map. If provided, key is replaced with generated key. This structure provides mapping between user provided key and generated key.
        /// </summary>
        public readonly ImmutableDictionary<string, object> KeyMap;
        /// <summary>
        /// A summary type containing information about the object including its key, name and when/who created/updated it.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkspaceTasksTaskSummaryCollectionItemMetadataResult> Metadatas;
        /// <summary>
        /// The type of the types object.
        /// </summary>
        public readonly string ModelType;
        /// <summary>
        /// The model version of an object.
        /// </summary>
        public readonly string ModelVersion;
        /// <summary>
        /// Used to filter by the name of the object.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
        /// </summary>
        public readonly int ObjectStatus;
        /// <summary>
        /// This is used by the service for optimistic locking of the object, to prevent multiple users from simultaneously updating the object.
        /// </summary>
        public readonly int ObjectVersion;
        /// <summary>
        /// Configuration values can be string, objects, or parameters.
        /// </summary>
        public readonly Outputs.GetWorkspaceTasksTaskSummaryCollectionItemOpConfigValuesResult OpConfigValues;
        /// <summary>
        /// Describes the shape of the execution result
        /// </summary>
        public readonly string Operation;
        /// <summary>
        /// An array of output ports.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkspaceTasksTaskSummaryCollectionItemOutputPortResult> OutputPorts;
        /// <summary>
        /// Defines the number of entities being loaded in parallel at a time for a Data Loader task
        /// </summary>
        public readonly int ParallelLoadLimit;
        /// <summary>
        /// A list of parameters for the pipeline, this allows certain aspects of the pipeline to be configured when the pipeline is executed.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkspaceTasksTaskSummaryCollectionItemParameterResult> Parameters;
        /// <summary>
        /// A reference to the object's parent.
        /// </summary>
        public readonly Outputs.GetWorkspaceTasksTaskSummaryCollectionItemParentRefResult ParentRef;
        /// <summary>
        /// The REST API configuration for polling.
        /// </summary>
        public readonly Outputs.GetWorkspaceTasksTaskSummaryCollectionItemPollRestCallConfigResult PollRestCallConfig;
        /// <summary>
        /// Information about the object and its parent.
        /// </summary>
        public readonly Outputs.GetWorkspaceTasksTaskSummaryCollectionItemRegistryMetadataResult RegistryMetadata;
        /// <summary>
        /// List of typed expressions.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkspaceTasksTaskSummaryCollectionItemTypedExpressionResult> TypedExpressions;
        /// <summary>
        /// The workspace ID.
        /// </summary>
        public readonly string WorkspaceId;

        [OutputConstructor]
        private GetWorkspaceTasksTaskSummaryCollectionItemResult(
            string apiCallMode,

            Outputs.GetWorkspaceTasksTaskSummaryCollectionItemAuthConfigResult authConfig,

            Outputs.GetWorkspaceTasksTaskSummaryCollectionItemCancelRestCallConfigResult cancelRestCallConfig,

            Outputs.GetWorkspaceTasksTaskSummaryCollectionItemConfigProviderDelegateResult configProviderDelegate,

            string description,

            Outputs.GetWorkspaceTasksTaskSummaryCollectionItemExecuteRestCallConfigResult executeRestCallConfig,

            string identifier,

            ImmutableArray<Outputs.GetWorkspaceTasksTaskSummaryCollectionItemInputPortResult> inputPorts,

            bool isSingleLoad,

            string key,

            ImmutableDictionary<string, object> keyMap,

            ImmutableArray<Outputs.GetWorkspaceTasksTaskSummaryCollectionItemMetadataResult> metadatas,

            string modelType,

            string modelVersion,

            string name,

            int objectStatus,

            int objectVersion,

            Outputs.GetWorkspaceTasksTaskSummaryCollectionItemOpConfigValuesResult opConfigValues,

            string operation,

            ImmutableArray<Outputs.GetWorkspaceTasksTaskSummaryCollectionItemOutputPortResult> outputPorts,

            int parallelLoadLimit,

            ImmutableArray<Outputs.GetWorkspaceTasksTaskSummaryCollectionItemParameterResult> parameters,

            Outputs.GetWorkspaceTasksTaskSummaryCollectionItemParentRefResult parentRef,

            Outputs.GetWorkspaceTasksTaskSummaryCollectionItemPollRestCallConfigResult pollRestCallConfig,

            Outputs.GetWorkspaceTasksTaskSummaryCollectionItemRegistryMetadataResult registryMetadata,

            ImmutableArray<Outputs.GetWorkspaceTasksTaskSummaryCollectionItemTypedExpressionResult> typedExpressions,

            string workspaceId)
        {
            ApiCallMode = apiCallMode;
            AuthConfig = authConfig;
            CancelRestCallConfig = cancelRestCallConfig;
            ConfigProviderDelegate = configProviderDelegate;
            Description = description;
            ExecuteRestCallConfig = executeRestCallConfig;
            Identifier = identifier;
            InputPorts = inputPorts;
            IsSingleLoad = isSingleLoad;
            Key = key;
            KeyMap = keyMap;
            Metadatas = metadatas;
            ModelType = modelType;
            ModelVersion = modelVersion;
            Name = name;
            ObjectStatus = objectStatus;
            ObjectVersion = objectVersion;
            OpConfigValues = opConfigValues;
            Operation = operation;
            OutputPorts = outputPorts;
            ParallelLoadLimit = parallelLoadLimit;
            Parameters = parameters;
            ParentRef = parentRef;
            PollRestCallConfig = pollRestCallConfig;
            RegistryMetadata = registryMetadata;
            TypedExpressions = typedExpressions;
            WorkspaceId = workspaceId;
        }
    }
}
