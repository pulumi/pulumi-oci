// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataIntegration.Outputs
{

    [OutputType]
    public sealed class WorkspaceTaskParameter
    {
        /// <summary>
        /// (Updatable) Configuration values can be string, objects, or parameters.
        /// </summary>
        public readonly Outputs.WorkspaceTaskParameterConfigValues? ConfigValues;
        /// <summary>
        /// (Updatable) A default value for the vairable.
        /// </summary>
        public readonly string? DefaultValue;
        /// <summary>
        /// (Updatable) Detailed description for the object.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// (Updatable) Specifies whether the parameter is input value.
        /// </summary>
        public readonly bool? IsInput;
        /// <summary>
        /// (Updatable) Specifies whether the parameter is output value.
        /// </summary>
        public readonly bool? IsOutput;
        /// <summary>
        /// (Updatable) The key of the object.
        /// </summary>
        public readonly string? Key;
        /// <summary>
        /// (Updatable) The type of the types object.
        /// </summary>
        public readonly string ModelType;
        /// <summary>
        /// (Updatable) The model version of an object.
        /// </summary>
        public readonly string? ModelVersion;
        /// <summary>
        /// (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
        /// </summary>
        public readonly int? ObjectStatus;
        /// <summary>
        /// (Updatable) The output aggregation type.
        /// </summary>
        public readonly string? OutputAggregationType;
        /// <summary>
        /// (Updatable) A reference to the object's parent.
        /// </summary>
        public readonly Outputs.WorkspaceTaskParameterParentRef? ParentRef;
        /// <summary>
        /// (Updatable) A base class for all model types, including First Class and its contained objects.
        /// </summary>
        public readonly string? RootObjectDefaultValue;
        /// <summary>
        /// (Updatable) The object type.
        /// </summary>
        public readonly string? Type;
        /// <summary>
        /// (Updatable) The type of value the parameter was created for.
        /// </summary>
        public readonly string? TypeName;
        /// <summary>
        /// (Updatable) The param name for which parameter is created for for eg. driver Shape, Operation etc.
        /// </summary>
        public readonly string? UsedFor;

        [OutputConstructor]
        private WorkspaceTaskParameter(
            Outputs.WorkspaceTaskParameterConfigValues? configValues,

            string? defaultValue,

            string? description,

            bool? isInput,

            bool? isOutput,

            string? key,

            string modelType,

            string? modelVersion,

            string? name,

            int? objectStatus,

            string? outputAggregationType,

            Outputs.WorkspaceTaskParameterParentRef? parentRef,

            string? rootObjectDefaultValue,

            string? type,

            string? typeName,

            string? usedFor)
        {
            ConfigValues = configValues;
            DefaultValue = defaultValue;
            Description = description;
            IsInput = isInput;
            IsOutput = isOutput;
            Key = key;
            ModelType = modelType;
            ModelVersion = modelVersion;
            Name = name;
            ObjectStatus = objectStatus;
            OutputAggregationType = outputAggregationType;
            ParentRef = parentRef;
            RootObjectDefaultValue = rootObjectDefaultValue;
            Type = type;
            TypeName = typeName;
            UsedFor = usedFor;
        }
    }
}
