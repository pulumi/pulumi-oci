// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataIntegration
{
    /// <summary>
    /// This resource provides the Workspace Application resource in Oracle Cloud Infrastructure Data Integration service.
    /// 
    /// Creates an application.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testWorkspaceApplication = new Oci.DataIntegration.WorkspaceApplication("test_workspace_application", new()
    ///     {
    ///         Identifier = workspaceApplicationIdentifier,
    ///         Name = workspaceApplicationName,
    ///         WorkspaceId = testWorkspace.Id,
    ///         ModelType = workspaceApplicationModelType,
    ///         DefinedTags = 
    ///         {
    ///             { "foo-namespace.bar-key", "value" },
    ///         },
    ///         Description = workspaceApplicationDescription,
    ///         DisplayName = workspaceApplicationDisplayName,
    ///         FreeformTags = 
    ///         {
    ///             { "bar-key", "value" },
    ///         },
    ///         Key = workspaceApplicationKey,
    ///         ModelVersion = workspaceApplicationModelVersion,
    ///         ObjectStatus = workspaceApplicationObjectStatus,
    ///         RegistryMetadata = new Oci.DataIntegration.Inputs.WorkspaceApplicationRegistryMetadataArgs
    ///         {
    ///             AggregatorKey = workspaceApplicationRegistryMetadataAggregatorKey,
    ///             IsFavorite = workspaceApplicationRegistryMetadataIsFavorite,
    ///             Key = workspaceApplicationRegistryMetadataKey,
    ///             Labels = workspaceApplicationRegistryMetadataLabels,
    ///             RegistryVersion = workspaceApplicationRegistryMetadataRegistryVersion,
    ///         },
    ///         SourceApplicationInfo = new Oci.DataIntegration.Inputs.WorkspaceApplicationSourceApplicationInfoArgs
    ///         {
    ///             ApplicationKey = workspaceApplicationSourceApplicationInfoApplicationKey,
    ///             CopyType = workspaceApplicationSourceApplicationInfoCopyType,
    ///             WorkspaceId = testWorkspace.Id,
    ///         },
    ///         State = workspaceApplicationState,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// WorkspaceApplications can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:DataIntegration/workspaceApplication:WorkspaceApplication test_workspace_application "workspaces/{workspaceId}/applications/{applicationKey}"
    /// ```
    /// </summary>
    [OciResourceType("oci:DataIntegration/workspaceApplication:WorkspaceApplication")]
    public partial class WorkspaceApplication : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The source application version of the application.
        /// </summary>
        [Output("applicationVersion")]
        public Output<int> ApplicationVersion { get; private set; } = null!;

        /// <summary>
        /// OCID of the compartment that this resource belongs to. Defaults to compartment of the Workspace.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, string>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// A list of dependent objects in this patch.
        /// </summary>
        [Output("dependentObjectMetadatas")]
        public Output<ImmutableArray<Outputs.WorkspaceApplicationDependentObjectMetadata>> DependentObjectMetadatas { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Detailed description for the object.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, string>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
        /// </summary>
        [Output("identifier")]
        public Output<string> Identifier { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Currently not used on application creation. Reserved for future.
        /// </summary>
        [Output("key")]
        public Output<string> Key { get; private set; } = null!;

        /// <summary>
        /// A key map. If provided, key is replaced with generated key. This structure provides mapping between user provided key and generated key.
        /// </summary>
        [Output("keyMap")]
        public Output<ImmutableDictionary<string, string>> KeyMap { get; private set; } = null!;

        /// <summary>
        /// A summary type containing information about the object including its key, name and when/who created/updated it.
        /// </summary>
        [Output("metadatas")]
        public Output<ImmutableArray<Outputs.WorkspaceApplicationMetadata>> Metadatas { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The type of the application.
        /// </summary>
        [Output("modelType")]
        public Output<string> ModelType { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The object's model version.
        /// </summary>
        [Output("modelVersion")]
        public Output<string> ModelVersion { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
        /// </summary>
        [Output("objectStatus")]
        public Output<int> ObjectStatus { get; private set; } = null!;

        /// <summary>
        /// The object version.
        /// </summary>
        [Output("objectVersion")]
        public Output<int> ObjectVersion { get; private set; } = null!;

        /// <summary>
        /// A reference to the object's parent.
        /// </summary>
        [Output("parentReves")]
        public Output<ImmutableArray<Outputs.WorkspaceApplicationParentRef>> ParentReves { get; private set; } = null!;

        /// <summary>
        /// A list of objects that are published or unpublished in this patch.
        /// </summary>
        [Output("publishedObjectMetadatas")]
        public Output<ImmutableArray<Outputs.WorkspaceApplicationPublishedObjectMetadata>> PublishedObjectMetadatas { get; private set; } = null!;

        /// <summary>
        /// Information about the object and its parent.
        /// </summary>
        [Output("registryMetadata")]
        public Output<Outputs.WorkspaceApplicationRegistryMetadata> RegistryMetadata { get; private set; } = null!;

        /// <summary>
        /// The information about the application.
        /// </summary>
        [Output("sourceApplicationInfo")]
        public Output<Outputs.WorkspaceApplicationSourceApplicationInfo> SourceApplicationInfo { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The current state of the workspace.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The date and time the application was created, in the timestamp format defined by RFC3339.
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The date and time the application was patched, in the timestamp format defined by RFC3339.
        /// </summary>
        [Output("timePatched")]
        public Output<string> TimePatched { get; private set; } = null!;

        /// <summary>
        /// The date and time the application was updated, in the timestamp format defined by RFC3339. example: 2019-08-25T21:10:29.41Z
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;

        /// <summary>
        /// The workspace ID.
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("workspaceId")]
        public Output<string> WorkspaceId { get; private set; } = null!;


        /// <summary>
        /// Create a WorkspaceApplication resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WorkspaceApplication(string name, WorkspaceApplicationArgs args, CustomResourceOptions? options = null)
            : base("oci:DataIntegration/workspaceApplication:WorkspaceApplication", name, args ?? new WorkspaceApplicationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private WorkspaceApplication(string name, Input<string> id, WorkspaceApplicationState? state = null, CustomResourceOptions? options = null)
            : base("oci:DataIntegration/workspaceApplication:WorkspaceApplication", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WorkspaceApplication resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WorkspaceApplication Get(string name, Input<string> id, WorkspaceApplicationState? state = null, CustomResourceOptions? options = null)
        {
            return new WorkspaceApplication(name, id, state, options);
        }
    }

    public sealed class WorkspaceApplicationArgs : global::Pulumi.ResourceArgs
    {
        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) Detailed description for the object.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
        /// </summary>
        [Input("identifier", required: true)]
        public Input<string> Identifier { get; set; } = null!;

        /// <summary>
        /// (Updatable) Currently not used on application creation. Reserved for future.
        /// </summary>
        [Input("key")]
        public Input<string>? Key { get; set; }

        /// <summary>
        /// (Updatable) The type of the application.
        /// </summary>
        [Input("modelType", required: true)]
        public Input<string> ModelType { get; set; } = null!;

        /// <summary>
        /// (Updatable) The object's model version.
        /// </summary>
        [Input("modelVersion")]
        public Input<string>? ModelVersion { get; set; }

        /// <summary>
        /// (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
        /// </summary>
        [Input("objectStatus")]
        public Input<int>? ObjectStatus { get; set; }

        /// <summary>
        /// Information about the object and its parent.
        /// </summary>
        [Input("registryMetadata")]
        public Input<Inputs.WorkspaceApplicationRegistryMetadataArgs>? RegistryMetadata { get; set; }

        /// <summary>
        /// The information about the application.
        /// </summary>
        [Input("sourceApplicationInfo")]
        public Input<Inputs.WorkspaceApplicationSourceApplicationInfoArgs>? SourceApplicationInfo { get; set; }

        /// <summary>
        /// (Updatable) The current state of the workspace.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The workspace ID.
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("workspaceId", required: true)]
        public Input<string> WorkspaceId { get; set; } = null!;

        public WorkspaceApplicationArgs()
        {
        }
        public static new WorkspaceApplicationArgs Empty => new WorkspaceApplicationArgs();
    }

    public sealed class WorkspaceApplicationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The source application version of the application.
        /// </summary>
        [Input("applicationVersion")]
        public Input<int>? ApplicationVersion { get; set; }

        /// <summary>
        /// OCID of the compartment that this resource belongs to. Defaults to compartment of the Workspace.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        [Input("dependentObjectMetadatas")]
        private InputList<Inputs.WorkspaceApplicationDependentObjectMetadataGetArgs>? _dependentObjectMetadatas;

        /// <summary>
        /// A list of dependent objects in this patch.
        /// </summary>
        public InputList<Inputs.WorkspaceApplicationDependentObjectMetadataGetArgs> DependentObjectMetadatas
        {
            get => _dependentObjectMetadatas ?? (_dependentObjectMetadatas = new InputList<Inputs.WorkspaceApplicationDependentObjectMetadataGetArgs>());
            set => _dependentObjectMetadatas = value;
        }

        /// <summary>
        /// (Updatable) Detailed description for the object.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
        /// </summary>
        [Input("identifier")]
        public Input<string>? Identifier { get; set; }

        /// <summary>
        /// (Updatable) Currently not used on application creation. Reserved for future.
        /// </summary>
        [Input("key")]
        public Input<string>? Key { get; set; }

        [Input("keyMap")]
        private InputMap<string>? _keyMap;

        /// <summary>
        /// A key map. If provided, key is replaced with generated key. This structure provides mapping between user provided key and generated key.
        /// </summary>
        public InputMap<string> KeyMap
        {
            get => _keyMap ?? (_keyMap = new InputMap<string>());
            set => _keyMap = value;
        }

        [Input("metadatas")]
        private InputList<Inputs.WorkspaceApplicationMetadataGetArgs>? _metadatas;

        /// <summary>
        /// A summary type containing information about the object including its key, name and when/who created/updated it.
        /// </summary>
        public InputList<Inputs.WorkspaceApplicationMetadataGetArgs> Metadatas
        {
            get => _metadatas ?? (_metadatas = new InputList<Inputs.WorkspaceApplicationMetadataGetArgs>());
            set => _metadatas = value;
        }

        /// <summary>
        /// (Updatable) The type of the application.
        /// </summary>
        [Input("modelType")]
        public Input<string>? ModelType { get; set; }

        /// <summary>
        /// (Updatable) The object's model version.
        /// </summary>
        [Input("modelVersion")]
        public Input<string>? ModelVersion { get; set; }

        /// <summary>
        /// (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
        /// </summary>
        [Input("objectStatus")]
        public Input<int>? ObjectStatus { get; set; }

        /// <summary>
        /// The object version.
        /// </summary>
        [Input("objectVersion")]
        public Input<int>? ObjectVersion { get; set; }

        [Input("parentReves")]
        private InputList<Inputs.WorkspaceApplicationParentRefGetArgs>? _parentReves;

        /// <summary>
        /// A reference to the object's parent.
        /// </summary>
        public InputList<Inputs.WorkspaceApplicationParentRefGetArgs> ParentReves
        {
            get => _parentReves ?? (_parentReves = new InputList<Inputs.WorkspaceApplicationParentRefGetArgs>());
            set => _parentReves = value;
        }

        [Input("publishedObjectMetadatas")]
        private InputList<Inputs.WorkspaceApplicationPublishedObjectMetadataGetArgs>? _publishedObjectMetadatas;

        /// <summary>
        /// A list of objects that are published or unpublished in this patch.
        /// </summary>
        public InputList<Inputs.WorkspaceApplicationPublishedObjectMetadataGetArgs> PublishedObjectMetadatas
        {
            get => _publishedObjectMetadatas ?? (_publishedObjectMetadatas = new InputList<Inputs.WorkspaceApplicationPublishedObjectMetadataGetArgs>());
            set => _publishedObjectMetadatas = value;
        }

        /// <summary>
        /// Information about the object and its parent.
        /// </summary>
        [Input("registryMetadata")]
        public Input<Inputs.WorkspaceApplicationRegistryMetadataGetArgs>? RegistryMetadata { get; set; }

        /// <summary>
        /// The information about the application.
        /// </summary>
        [Input("sourceApplicationInfo")]
        public Input<Inputs.WorkspaceApplicationSourceApplicationInfoGetArgs>? SourceApplicationInfo { get; set; }

        /// <summary>
        /// (Updatable) The current state of the workspace.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The date and time the application was created, in the timestamp format defined by RFC3339.
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The date and time the application was patched, in the timestamp format defined by RFC3339.
        /// </summary>
        [Input("timePatched")]
        public Input<string>? TimePatched { get; set; }

        /// <summary>
        /// The date and time the application was updated, in the timestamp format defined by RFC3339. example: 2019-08-25T21:10:29.41Z
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        /// <summary>
        /// The workspace ID.
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("workspaceId")]
        public Input<string>? WorkspaceId { get; set; }

        public WorkspaceApplicationState()
        {
        }
        public static new WorkspaceApplicationState Empty => new WorkspaceApplicationState();
    }
}
