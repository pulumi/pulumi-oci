// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataIntegration
{
    /// <summary>
    /// This resource provides the Workspace Application Patch resource in Oracle Cloud Infrastructure Data Integration service.
    /// 
    /// Creates a patch in an application.
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testWorkspaceApplicationPatch = new Oci.DataIntegration.WorkspaceApplicationPatch("testWorkspaceApplicationPatch", new()
    ///     {
    ///         ApplicationKey = @var.Workspace_application_patch_application_key,
    ///         Identifier = @var.Workspace_application_patch_identifier,
    ///         ObjectKeys = @var.Workspace_application_patch_object_keys,
    ///         PatchType = @var.Workspace_application_patch_patch_type,
    ///         WorkspaceId = oci_dataintegration_workspace.Test_workspace.Id,
    ///         Description = @var.Workspace_application_patch_description,
    ///         Key = @var.Workspace_application_patch_key,
    ///         ModelVersion = @var.Workspace_application_patch_model_version,
    ///         ObjectStatus = @var.Workspace_application_patch_object_status,
    ///         RegistryMetadata = new Oci.DataIntegration.Inputs.WorkspaceApplicationPatchRegistryMetadataArgs
    ///         {
    ///             AggregatorKey = @var.Workspace_application_patch_registry_metadata_aggregator_key,
    ///             IsFavorite = @var.Workspace_application_patch_registry_metadata_is_favorite,
    ///             Key = @var.Workspace_application_patch_registry_metadata_key,
    ///             Labels = @var.Workspace_application_patch_registry_metadata_labels,
    ///             RegistryVersion = @var.Workspace_application_patch_registry_metadata_registry_version,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// WorkspaceApplicationPatches can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:DataIntegration/workspaceApplicationPatch:WorkspaceApplicationPatch test_workspace_application_patch "workspaces/{workspaceId}/applications/{applicationKey}/patches/{patchKey}"
    /// ```
    /// </summary>
    [OciResourceType("oci:DataIntegration/workspaceApplicationPatch:WorkspaceApplicationPatch")]
    public partial class WorkspaceApplicationPatch : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The application key.
        /// </summary>
        [Output("applicationKey")]
        public Output<string> ApplicationKey { get; private set; } = null!;

        /// <summary>
        /// The application version of the patch.
        /// </summary>
        [Output("applicationVersion")]
        public Output<int> ApplicationVersion { get; private set; } = null!;

        /// <summary>
        /// List of dependent objects in this patch.
        /// </summary>
        [Output("dependentObjectMetadatas")]
        public Output<ImmutableArray<Outputs.WorkspaceApplicationPatchDependentObjectMetadata>> DependentObjectMetadatas { get; private set; } = null!;

        /// <summary>
        /// Detailed description for the object.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// The errors encountered while applying the patch, if any.
        /// </summary>
        [Output("errorMessages")]
        public Output<ImmutableDictionary<string, object>> ErrorMessages { get; private set; } = null!;

        /// <summary>
        /// Value can only contain upper case letters, underscore and numbers. It should begin with upper case letter or underscore. The value can be modified.
        /// </summary>
        [Output("identifier")]
        public Output<string> Identifier { get; private set; } = null!;

        /// <summary>
        /// The identifying key for the object.
        /// </summary>
        [Output("key")]
        public Output<string> Key { get; private set; } = null!;

        /// <summary>
        /// A key map. If provided, key is replaced with generated key. This structure provides mapping between user provided key and generated key.
        /// </summary>
        [Output("keyMap")]
        public Output<ImmutableDictionary<string, object>> KeyMap { get; private set; } = null!;

        /// <summary>
        /// A summary type containing information about the object including its key, name and when/who created/updated it.
        /// </summary>
        [Output("metadatas")]
        public Output<ImmutableArray<Outputs.WorkspaceApplicationPatchMetadata>> Metadatas { get; private set; } = null!;

        /// <summary>
        /// The object type.
        /// </summary>
        [Output("modelType")]
        public Output<string> ModelType { get; private set; } = null!;

        /// <summary>
        /// The object's model version.
        /// </summary>
        [Output("modelVersion")]
        public Output<string> ModelVersion { get; private set; } = null!;

        /// <summary>
        /// Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The array of object keys to publish into application.
        /// </summary>
        [Output("objectKeys")]
        public Output<ImmutableArray<string>> ObjectKeys { get; private set; } = null!;

        /// <summary>
        /// The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
        /// </summary>
        [Output("objectStatus")]
        public Output<int> ObjectStatus { get; private set; } = null!;

        /// <summary>
        /// The object version.
        /// </summary>
        [Output("objectVersion")]
        public Output<int> ObjectVersion { get; private set; } = null!;

        /// <summary>
        /// A reference to the object's parent.
        /// </summary>
        [Output("parentReves")]
        public Output<ImmutableArray<Outputs.WorkspaceApplicationPatchParentRef>> ParentReves { get; private set; } = null!;

        /// <summary>
        /// List of objects that are published or unpublished in this patch.
        /// </summary>
        [Output("patchObjectMetadatas")]
        public Output<ImmutableArray<Outputs.WorkspaceApplicationPatchPatchObjectMetadata>> PatchObjectMetadatas { get; private set; } = null!;

        /// <summary>
        /// Status of the patch applied or being applied on the application
        /// </summary>
        [Output("patchStatus")]
        public Output<string> PatchStatus { get; private set; } = null!;

        /// <summary>
        /// The type of the patch applied or being applied on the application.
        /// </summary>
        [Output("patchType")]
        public Output<string> PatchType { get; private set; } = null!;

        /// <summary>
        /// Information about the object and its parent.
        /// </summary>
        [Output("registryMetadata")]
        public Output<Outputs.WorkspaceApplicationPatchRegistryMetadata> RegistryMetadata { get; private set; } = null!;

        /// <summary>
        /// The date and time the patch was applied, in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        [Output("timePatched")]
        public Output<string> TimePatched { get; private set; } = null!;

        /// <summary>
        /// The workspace ID.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("workspaceId")]
        public Output<string> WorkspaceId { get; private set; } = null!;


        /// <summary>
        /// Create a WorkspaceApplicationPatch resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WorkspaceApplicationPatch(string name, WorkspaceApplicationPatchArgs args, CustomResourceOptions? options = null)
            : base("oci:DataIntegration/workspaceApplicationPatch:WorkspaceApplicationPatch", name, args ?? new WorkspaceApplicationPatchArgs(), MakeResourceOptions(options, ""))
        {
        }

        private WorkspaceApplicationPatch(string name, Input<string> id, WorkspaceApplicationPatchState? state = null, CustomResourceOptions? options = null)
            : base("oci:DataIntegration/workspaceApplicationPatch:WorkspaceApplicationPatch", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WorkspaceApplicationPatch resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WorkspaceApplicationPatch Get(string name, Input<string> id, WorkspaceApplicationPatchState? state = null, CustomResourceOptions? options = null)
        {
            return new WorkspaceApplicationPatch(name, id, state, options);
        }
    }

    public sealed class WorkspaceApplicationPatchArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The application key.
        /// </summary>
        [Input("applicationKey", required: true)]
        public Input<string> ApplicationKey { get; set; } = null!;

        /// <summary>
        /// Detailed description for the object.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Value can only contain upper case letters, underscore and numbers. It should begin with upper case letter or underscore. The value can be modified.
        /// </summary>
        [Input("identifier")]
        public Input<string>? Identifier { get; set; }

        /// <summary>
        /// The identifying key for the object.
        /// </summary>
        [Input("key")]
        public Input<string>? Key { get; set; }

        /// <summary>
        /// The object's model version.
        /// </summary>
        [Input("modelVersion")]
        public Input<string>? ModelVersion { get; set; }

        /// <summary>
        /// Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("objectKeys")]
        private InputList<string>? _objectKeys;

        /// <summary>
        /// The array of object keys to publish into application.
        /// </summary>
        public InputList<string> ObjectKeys
        {
            get => _objectKeys ?? (_objectKeys = new InputList<string>());
            set => _objectKeys = value;
        }

        /// <summary>
        /// The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
        /// </summary>
        [Input("objectStatus")]
        public Input<int>? ObjectStatus { get; set; }

        /// <summary>
        /// The type of the patch applied or being applied on the application.
        /// </summary>
        [Input("patchType", required: true)]
        public Input<string> PatchType { get; set; } = null!;

        /// <summary>
        /// Information about the object and its parent.
        /// </summary>
        [Input("registryMetadata")]
        public Input<Inputs.WorkspaceApplicationPatchRegistryMetadataArgs>? RegistryMetadata { get; set; }

        /// <summary>
        /// The workspace ID.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("workspaceId", required: true)]
        public Input<string> WorkspaceId { get; set; } = null!;

        public WorkspaceApplicationPatchArgs()
        {
        }
        public static new WorkspaceApplicationPatchArgs Empty => new WorkspaceApplicationPatchArgs();
    }

    public sealed class WorkspaceApplicationPatchState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The application key.
        /// </summary>
        [Input("applicationKey")]
        public Input<string>? ApplicationKey { get; set; }

        /// <summary>
        /// The application version of the patch.
        /// </summary>
        [Input("applicationVersion")]
        public Input<int>? ApplicationVersion { get; set; }

        [Input("dependentObjectMetadatas")]
        private InputList<Inputs.WorkspaceApplicationPatchDependentObjectMetadataGetArgs>? _dependentObjectMetadatas;

        /// <summary>
        /// List of dependent objects in this patch.
        /// </summary>
        public InputList<Inputs.WorkspaceApplicationPatchDependentObjectMetadataGetArgs> DependentObjectMetadatas
        {
            get => _dependentObjectMetadatas ?? (_dependentObjectMetadatas = new InputList<Inputs.WorkspaceApplicationPatchDependentObjectMetadataGetArgs>());
            set => _dependentObjectMetadatas = value;
        }

        /// <summary>
        /// Detailed description for the object.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("errorMessages")]
        private InputMap<object>? _errorMessages;

        /// <summary>
        /// The errors encountered while applying the patch, if any.
        /// </summary>
        public InputMap<object> ErrorMessages
        {
            get => _errorMessages ?? (_errorMessages = new InputMap<object>());
            set => _errorMessages = value;
        }

        /// <summary>
        /// Value can only contain upper case letters, underscore and numbers. It should begin with upper case letter or underscore. The value can be modified.
        /// </summary>
        [Input("identifier")]
        public Input<string>? Identifier { get; set; }

        /// <summary>
        /// The identifying key for the object.
        /// </summary>
        [Input("key")]
        public Input<string>? Key { get; set; }

        [Input("keyMap")]
        private InputMap<object>? _keyMap;

        /// <summary>
        /// A key map. If provided, key is replaced with generated key. This structure provides mapping between user provided key and generated key.
        /// </summary>
        public InputMap<object> KeyMap
        {
            get => _keyMap ?? (_keyMap = new InputMap<object>());
            set => _keyMap = value;
        }

        [Input("metadatas")]
        private InputList<Inputs.WorkspaceApplicationPatchMetadataGetArgs>? _metadatas;

        /// <summary>
        /// A summary type containing information about the object including its key, name and when/who created/updated it.
        /// </summary>
        public InputList<Inputs.WorkspaceApplicationPatchMetadataGetArgs> Metadatas
        {
            get => _metadatas ?? (_metadatas = new InputList<Inputs.WorkspaceApplicationPatchMetadataGetArgs>());
            set => _metadatas = value;
        }

        /// <summary>
        /// The object type.
        /// </summary>
        [Input("modelType")]
        public Input<string>? ModelType { get; set; }

        /// <summary>
        /// The object's model version.
        /// </summary>
        [Input("modelVersion")]
        public Input<string>? ModelVersion { get; set; }

        /// <summary>
        /// Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("objectKeys")]
        private InputList<string>? _objectKeys;

        /// <summary>
        /// The array of object keys to publish into application.
        /// </summary>
        public InputList<string> ObjectKeys
        {
            get => _objectKeys ?? (_objectKeys = new InputList<string>());
            set => _objectKeys = value;
        }

        /// <summary>
        /// The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
        /// </summary>
        [Input("objectStatus")]
        public Input<int>? ObjectStatus { get; set; }

        /// <summary>
        /// The object version.
        /// </summary>
        [Input("objectVersion")]
        public Input<int>? ObjectVersion { get; set; }

        [Input("parentReves")]
        private InputList<Inputs.WorkspaceApplicationPatchParentRefGetArgs>? _parentReves;

        /// <summary>
        /// A reference to the object's parent.
        /// </summary>
        public InputList<Inputs.WorkspaceApplicationPatchParentRefGetArgs> ParentReves
        {
            get => _parentReves ?? (_parentReves = new InputList<Inputs.WorkspaceApplicationPatchParentRefGetArgs>());
            set => _parentReves = value;
        }

        [Input("patchObjectMetadatas")]
        private InputList<Inputs.WorkspaceApplicationPatchPatchObjectMetadataGetArgs>? _patchObjectMetadatas;

        /// <summary>
        /// List of objects that are published or unpublished in this patch.
        /// </summary>
        public InputList<Inputs.WorkspaceApplicationPatchPatchObjectMetadataGetArgs> PatchObjectMetadatas
        {
            get => _patchObjectMetadatas ?? (_patchObjectMetadatas = new InputList<Inputs.WorkspaceApplicationPatchPatchObjectMetadataGetArgs>());
            set => _patchObjectMetadatas = value;
        }

        /// <summary>
        /// Status of the patch applied or being applied on the application
        /// </summary>
        [Input("patchStatus")]
        public Input<string>? PatchStatus { get; set; }

        /// <summary>
        /// The type of the patch applied or being applied on the application.
        /// </summary>
        [Input("patchType")]
        public Input<string>? PatchType { get; set; }

        /// <summary>
        /// Information about the object and its parent.
        /// </summary>
        [Input("registryMetadata")]
        public Input<Inputs.WorkspaceApplicationPatchRegistryMetadataGetArgs>? RegistryMetadata { get; set; }

        /// <summary>
        /// The date and time the patch was applied, in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        [Input("timePatched")]
        public Input<string>? TimePatched { get; set; }

        /// <summary>
        /// The workspace ID.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("workspaceId")]
        public Input<string>? WorkspaceId { get; set; }

        public WorkspaceApplicationPatchState()
        {
        }
        public static new WorkspaceApplicationPatchState Empty => new WorkspaceApplicationPatchState();
    }
}
