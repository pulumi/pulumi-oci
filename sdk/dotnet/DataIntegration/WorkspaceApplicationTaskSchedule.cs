// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataIntegration
{
    /// <summary>
    /// This resource provides the Workspace Application Task Schedule resource in Oracle Cloud Infrastructure Data Integration service.
    /// 
    /// Endpoint to be used create TaskSchedule.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testWorkspaceApplicationTaskSchedule = new Oci.DataIntegration.WorkspaceApplicationTaskSchedule("test_workspace_application_task_schedule", new()
    ///     {
    ///         ApplicationKey = workspaceApplicationTaskScheduleApplicationKey,
    ///         Identifier = workspaceApplicationTaskScheduleIdentifier,
    ///         Name = workspaceApplicationTaskScheduleName,
    ///         WorkspaceId = testWorkspace.Id,
    ///         AuthMode = workspaceApplicationTaskScheduleAuthMode,
    ///         ConfigProviderDelegate = workspaceApplicationTaskScheduleConfigProviderDelegate,
    ///         Description = workspaceApplicationTaskScheduleDescription,
    ///         EndTimeMillis = workspaceApplicationTaskScheduleEndTimeMillis,
    ///         ExpectedDuration = workspaceApplicationTaskScheduleExpectedDuration,
    ///         ExpectedDurationUnit = workspaceApplicationTaskScheduleExpectedDurationUnit,
    ///         IsBackfillEnabled = workspaceApplicationTaskScheduleIsBackfillEnabled,
    ///         IsConcurrentAllowed = workspaceApplicationTaskScheduleIsConcurrentAllowed,
    ///         IsEnabled = workspaceApplicationTaskScheduleIsEnabled,
    ///         Key = workspaceApplicationTaskScheduleKey,
    ///         ModelVersion = workspaceApplicationTaskScheduleModelVersion,
    ///         NumberOfRetries = workspaceApplicationTaskScheduleNumberOfRetries,
    ///         ObjectStatus = workspaceApplicationTaskScheduleObjectStatus,
    ///         ObjectVersion = workspaceApplicationTaskScheduleObjectVersion,
    ///         ParentRef = new Oci.DataIntegration.Inputs.WorkspaceApplicationTaskScheduleParentRefArgs
    ///         {
    ///             Parent = workspaceApplicationTaskScheduleParentRefParent,
    ///             RootDocId = testRootDoc.Id,
    ///         },
    ///         RegistryMetadata = new Oci.DataIntegration.Inputs.WorkspaceApplicationTaskScheduleRegistryMetadataArgs
    ///         {
    ///             AggregatorKey = workspaceApplicationTaskScheduleRegistryMetadataAggregatorKey,
    ///             IsFavorite = workspaceApplicationTaskScheduleRegistryMetadataIsFavorite,
    ///             Key = workspaceApplicationTaskScheduleRegistryMetadataKey,
    ///             Labels = workspaceApplicationTaskScheduleRegistryMetadataLabels,
    ///             RegistryVersion = workspaceApplicationTaskScheduleRegistryMetadataRegistryVersion,
    ///         },
    ///         RetryDelay = workspaceApplicationTaskScheduleRetryDelay,
    ///         RetryDelayUnit = workspaceApplicationTaskScheduleRetryDelayUnit,
    ///         ScheduleRef = new Oci.DataIntegration.Inputs.WorkspaceApplicationTaskScheduleScheduleRefArgs
    ///         {
    ///             Description = workspaceApplicationTaskScheduleScheduleRefDescription,
    ///             FrequencyDetails = new Oci.DataIntegration.Inputs.WorkspaceApplicationTaskScheduleScheduleRefFrequencyDetailsArgs
    ///             {
    ///                 ModelType = workspaceApplicationTaskScheduleScheduleRefFrequencyDetailsModelType,
    ///                 CustomExpression = workspaceApplicationTaskScheduleScheduleRefFrequencyDetailsCustomExpression,
    ///                 DayOfWeek = workspaceApplicationTaskScheduleScheduleRefFrequencyDetailsDayOfWeek,
    ///                 Days = workspaceApplicationTaskScheduleScheduleRefFrequencyDetailsDays,
    ///                 Frequency = workspaceApplicationTaskScheduleScheduleRefFrequencyDetailsFrequency,
    ///                 Interval = workspaceApplicationTaskScheduleScheduleRefFrequencyDetailsInterval,
    ///                 Time = new Oci.DataIntegration.Inputs.WorkspaceApplicationTaskScheduleScheduleRefFrequencyDetailsTimeArgs
    ///                 {
    ///                     Hour = workspaceApplicationTaskScheduleScheduleRefFrequencyDetailsTimeHour,
    ///                     Minute = workspaceApplicationTaskScheduleScheduleRefFrequencyDetailsTimeMinute,
    ///                     Second = workspaceApplicationTaskScheduleScheduleRefFrequencyDetailsTimeSecond,
    ///                 },
    ///                 WeekOfMonth = workspaceApplicationTaskScheduleScheduleRefFrequencyDetailsWeekOfMonth,
    ///             },
    ///             Identifier = workspaceApplicationTaskScheduleScheduleRefIdentifier,
    ///             IsDaylightAdjustmentEnabled = workspaceApplicationTaskScheduleScheduleRefIsDaylightAdjustmentEnabled,
    ///             Key = workspaceApplicationTaskScheduleScheduleRefKey,
    ///             Metadata = new Oci.DataIntegration.Inputs.WorkspaceApplicationTaskScheduleScheduleRefMetadataArgs
    ///             {
    ///                 Aggregator = new Oci.DataIntegration.Inputs.WorkspaceApplicationTaskScheduleScheduleRefMetadataAggregatorArgs
    ///                 {
    ///                     Description = workspaceApplicationTaskScheduleScheduleRefMetadataAggregatorDescription,
    ///                     Identifier = workspaceApplicationTaskScheduleScheduleRefMetadataAggregatorIdentifier,
    ///                     Key = workspaceApplicationTaskScheduleScheduleRefMetadataAggregatorKey,
    ///                     Name = workspaceApplicationTaskScheduleScheduleRefMetadataAggregatorName,
    ///                     Type = workspaceApplicationTaskScheduleScheduleRefMetadataAggregatorType,
    ///                 },
    ///                 AggregatorKey = workspaceApplicationTaskScheduleScheduleRefMetadataAggregatorKey,
    ///                 CountStatistics = new Oci.DataIntegration.Inputs.WorkspaceApplicationTaskScheduleScheduleRefMetadataCountStatisticsArgs
    ///                 {
    ///                     ObjectTypeCountLists = new[]
    ///                     {
    ///                         new Oci.DataIntegration.Inputs.WorkspaceApplicationTaskScheduleScheduleRefMetadataCountStatisticsObjectTypeCountListArgs
    ///                         {
    ///                             ObjectCount = workspaceApplicationTaskScheduleScheduleRefMetadataCountStatisticsObjectTypeCountListObjectCount,
    ///                             ObjectType = workspaceApplicationTaskScheduleScheduleRefMetadataCountStatisticsObjectTypeCountListObjectType,
    ///                         },
    ///                     },
    ///                 },
    ///                 CreatedBy = workspaceApplicationTaskScheduleScheduleRefMetadataCreatedBy,
    ///                 CreatedByName = workspaceApplicationTaskScheduleScheduleRefMetadataCreatedByName,
    ///                 IdentifierPath = workspaceApplicationTaskScheduleScheduleRefMetadataIdentifierPath,
    ///                 InfoFields = workspaceApplicationTaskScheduleScheduleRefMetadataInfoFields,
    ///                 IsFavorite = workspaceApplicationTaskScheduleScheduleRefMetadataIsFavorite,
    ///                 Labels = workspaceApplicationTaskScheduleScheduleRefMetadataLabels,
    ///                 RegistryVersion = workspaceApplicationTaskScheduleScheduleRefMetadataRegistryVersion,
    ///                 TimeCreated = workspaceApplicationTaskScheduleScheduleRefMetadataTimeCreated,
    ///                 TimeUpdated = workspaceApplicationTaskScheduleScheduleRefMetadataTimeUpdated,
    ///                 UpdatedBy = workspaceApplicationTaskScheduleScheduleRefMetadataUpdatedBy,
    ///                 UpdatedByName = workspaceApplicationTaskScheduleScheduleRefMetadataUpdatedByName,
    ///             },
    ///             ModelType = workspaceApplicationTaskScheduleScheduleRefModelType,
    ///             ModelVersion = workspaceApplicationTaskScheduleScheduleRefModelVersion,
    ///             Name = workspaceApplicationTaskScheduleScheduleRefName,
    ///             ObjectStatus = workspaceApplicationTaskScheduleScheduleRefObjectStatus,
    ///             ObjectVersion = workspaceApplicationTaskScheduleScheduleRefObjectVersion,
    ///             ParentRef = new Oci.DataIntegration.Inputs.WorkspaceApplicationTaskScheduleScheduleRefParentRefArgs
    ///             {
    ///                 Parent = workspaceApplicationTaskScheduleScheduleRefParentRefParent,
    ///                 RootDocId = testRootDoc.Id,
    ///             },
    ///             Timezone = workspaceApplicationTaskScheduleScheduleRefTimezone,
    ///         },
    ///         StartTimeMillis = workspaceApplicationTaskScheduleStartTimeMillis,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// WorkspaceApplicationTaskSchedules can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:DataIntegration/workspaceApplicationTaskSchedule:WorkspaceApplicationTaskSchedule test_workspace_application_task_schedule "workspaces/{workspaceId}/applications/{applicationKey}/taskSchedules/{taskScheduleKey}"
    /// ```
    /// </summary>
    [OciResourceType("oci:DataIntegration/workspaceApplicationTaskSchedule:WorkspaceApplicationTaskSchedule")]
    public partial class WorkspaceApplicationTaskSchedule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The application key.
        /// </summary>
        [Output("applicationKey")]
        public Output<string> ApplicationKey { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The authorization mode for the task.
        /// </summary>
        [Output("authMode")]
        public Output<string> AuthMode { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The information about the configuration provider.
        /// </summary>
        [Output("configProviderDelegate")]
        public Output<string> ConfigProviderDelegate { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Detailed description for the object.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The end time in milliseconds.
        /// </summary>
        [Output("endTimeMillis")]
        public Output<string> EndTimeMillis { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The expected duration of the task execution.
        /// </summary>
        [Output("expectedDuration")]
        public Output<double> ExpectedDuration { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The expected duration unit of the task execution.
        /// </summary>
        [Output("expectedDurationUnit")]
        public Output<string> ExpectedDurationUnit { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
        /// </summary>
        [Output("identifier")]
        public Output<string> Identifier { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Whether the backfill is enabled.
        /// </summary>
        [Output("isBackfillEnabled")]
        public Output<bool> IsBackfillEnabled { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Whether the same task can be executed concurrently.
        /// </summary>
        [Output("isConcurrentAllowed")]
        public Output<bool> IsConcurrentAllowed { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Whether the task schedule is enabled.
        /// </summary>
        [Output("isEnabled")]
        public Output<bool> IsEnabled { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Generated key that can be used in API calls to identify taskSchedule. On scenarios where reference to the taskSchedule is needed, a value can be passed in create.
        /// </summary>
        [Output("key")]
        public Output<string> Key { get; private set; } = null!;

        /// <summary>
        /// The last run details for the task run.
        /// </summary>
        [Output("lastRunDetails")]
        public Output<ImmutableArray<Outputs.WorkspaceApplicationTaskScheduleLastRunDetail>> LastRunDetails { get; private set; } = null!;

        /// <summary>
        /// A summary type containing information about the object including its key, name and when/who created/updated it.
        /// </summary>
        [Output("metadatas")]
        public Output<ImmutableArray<Outputs.WorkspaceApplicationTaskScheduleMetadata>> Metadatas { get; private set; } = null!;

        /// <summary>
        /// The type of the object.
        /// </summary>
        [Output("modelType")]
        public Output<string> ModelType { get; private set; } = null!;

        /// <summary>
        /// (Updatable) This is a version number that is used by the service to upgrade objects if needed through releases of the service.
        /// </summary>
        [Output("modelVersion")]
        public Output<string> ModelVersion { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("nextRunTimeMillis")]
        public Output<string> NextRunTimeMillis { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The number of retries.
        /// </summary>
        [Output("numberOfRetries")]
        public Output<int> NumberOfRetries { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
        /// </summary>
        [Output("objectStatus")]
        public Output<int> ObjectStatus { get; private set; } = null!;

        /// <summary>
        /// (Updatable) This is used by the service for optimistic locking of the object, to prevent multiple users from simultaneously updating the object.
        /// </summary>
        [Output("objectVersion")]
        public Output<int> ObjectVersion { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A reference to the object's parent.
        /// </summary>
        [Output("parentRef")]
        public Output<Outputs.WorkspaceApplicationTaskScheduleParentRef> ParentRef { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Information about the object and its parent.
        /// </summary>
        [Output("registryMetadata")]
        public Output<Outputs.WorkspaceApplicationTaskScheduleRegistryMetadata> RegistryMetadata { get; private set; } = null!;

        /// <summary>
        /// The number of retry attempts.
        /// </summary>
        [Output("retryAttempts")]
        public Output<int> RetryAttempts { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The retry delay, the unit for measurement is in the property retry delay unit.
        /// </summary>
        [Output("retryDelay")]
        public Output<double> RetryDelay { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The unit for the retry delay.
        /// </summary>
        [Output("retryDelayUnit")]
        public Output<string> RetryDelayUnit { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The schedule object
        /// </summary>
        [Output("scheduleRef")]
        public Output<Outputs.WorkspaceApplicationTaskScheduleScheduleRef> ScheduleRef { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The start time in milliseconds.
        /// </summary>
        [Output("startTimeMillis")]
        public Output<string> StartTimeMillis { get; private set; } = null!;

        /// <summary>
        /// The workspace ID.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("workspaceId")]
        public Output<string> WorkspaceId { get; private set; } = null!;


        /// <summary>
        /// Create a WorkspaceApplicationTaskSchedule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WorkspaceApplicationTaskSchedule(string name, WorkspaceApplicationTaskScheduleArgs args, CustomResourceOptions? options = null)
            : base("oci:DataIntegration/workspaceApplicationTaskSchedule:WorkspaceApplicationTaskSchedule", name, args ?? new WorkspaceApplicationTaskScheduleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private WorkspaceApplicationTaskSchedule(string name, Input<string> id, WorkspaceApplicationTaskScheduleState? state = null, CustomResourceOptions? options = null)
            : base("oci:DataIntegration/workspaceApplicationTaskSchedule:WorkspaceApplicationTaskSchedule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WorkspaceApplicationTaskSchedule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WorkspaceApplicationTaskSchedule Get(string name, Input<string> id, WorkspaceApplicationTaskScheduleState? state = null, CustomResourceOptions? options = null)
        {
            return new WorkspaceApplicationTaskSchedule(name, id, state, options);
        }
    }

    public sealed class WorkspaceApplicationTaskScheduleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The application key.
        /// </summary>
        [Input("applicationKey", required: true)]
        public Input<string> ApplicationKey { get; set; } = null!;

        /// <summary>
        /// (Updatable) The authorization mode for the task.
        /// </summary>
        [Input("authMode")]
        public Input<string>? AuthMode { get; set; }

        /// <summary>
        /// (Updatable) The information about the configuration provider.
        /// </summary>
        [Input("configProviderDelegate")]
        public Input<string>? ConfigProviderDelegate { get; set; }

        /// <summary>
        /// (Updatable) Detailed description for the object.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) The end time in milliseconds.
        /// </summary>
        [Input("endTimeMillis")]
        public Input<string>? EndTimeMillis { get; set; }

        /// <summary>
        /// (Updatable) The expected duration of the task execution.
        /// </summary>
        [Input("expectedDuration")]
        public Input<double>? ExpectedDuration { get; set; }

        /// <summary>
        /// (Updatable) The expected duration unit of the task execution.
        /// </summary>
        [Input("expectedDurationUnit")]
        public Input<string>? ExpectedDurationUnit { get; set; }

        /// <summary>
        /// (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
        /// </summary>
        [Input("identifier", required: true)]
        public Input<string> Identifier { get; set; } = null!;

        /// <summary>
        /// (Updatable) Whether the backfill is enabled.
        /// </summary>
        [Input("isBackfillEnabled")]
        public Input<bool>? IsBackfillEnabled { get; set; }

        /// <summary>
        /// (Updatable) Whether the same task can be executed concurrently.
        /// </summary>
        [Input("isConcurrentAllowed")]
        public Input<bool>? IsConcurrentAllowed { get; set; }

        /// <summary>
        /// (Updatable) Whether the task schedule is enabled.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// (Updatable) Generated key that can be used in API calls to identify taskSchedule. On scenarios where reference to the taskSchedule is needed, a value can be passed in create.
        /// </summary>
        [Input("key")]
        public Input<string>? Key { get; set; }

        /// <summary>
        /// (Updatable) This is a version number that is used by the service to upgrade objects if needed through releases of the service.
        /// </summary>
        [Input("modelVersion")]
        public Input<string>? ModelVersion { get; set; }

        /// <summary>
        /// (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("nextRunTimeMillis")]
        public Input<string>? NextRunTimeMillis { get; set; }

        /// <summary>
        /// (Updatable) The number of retries.
        /// </summary>
        [Input("numberOfRetries")]
        public Input<int>? NumberOfRetries { get; set; }

        /// <summary>
        /// (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
        /// </summary>
        [Input("objectStatus")]
        public Input<int>? ObjectStatus { get; set; }

        /// <summary>
        /// (Updatable) This is used by the service for optimistic locking of the object, to prevent multiple users from simultaneously updating the object.
        /// </summary>
        [Input("objectVersion")]
        public Input<int>? ObjectVersion { get; set; }

        /// <summary>
        /// (Updatable) A reference to the object's parent.
        /// </summary>
        [Input("parentRef")]
        public Input<Inputs.WorkspaceApplicationTaskScheduleParentRefArgs>? ParentRef { get; set; }

        /// <summary>
        /// (Updatable) Information about the object and its parent.
        /// </summary>
        [Input("registryMetadata")]
        public Input<Inputs.WorkspaceApplicationTaskScheduleRegistryMetadataArgs>? RegistryMetadata { get; set; }

        /// <summary>
        /// (Updatable) The retry delay, the unit for measurement is in the property retry delay unit.
        /// </summary>
        [Input("retryDelay")]
        public Input<double>? RetryDelay { get; set; }

        /// <summary>
        /// (Updatable) The unit for the retry delay.
        /// </summary>
        [Input("retryDelayUnit")]
        public Input<string>? RetryDelayUnit { get; set; }

        /// <summary>
        /// (Updatable) The schedule object
        /// </summary>
        [Input("scheduleRef")]
        public Input<Inputs.WorkspaceApplicationTaskScheduleScheduleRefArgs>? ScheduleRef { get; set; }

        /// <summary>
        /// (Updatable) The start time in milliseconds.
        /// </summary>
        [Input("startTimeMillis")]
        public Input<string>? StartTimeMillis { get; set; }

        /// <summary>
        /// The workspace ID.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("workspaceId", required: true)]
        public Input<string> WorkspaceId { get; set; } = null!;

        public WorkspaceApplicationTaskScheduleArgs()
        {
        }
        public static new WorkspaceApplicationTaskScheduleArgs Empty => new WorkspaceApplicationTaskScheduleArgs();
    }

    public sealed class WorkspaceApplicationTaskScheduleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The application key.
        /// </summary>
        [Input("applicationKey")]
        public Input<string>? ApplicationKey { get; set; }

        /// <summary>
        /// (Updatable) The authorization mode for the task.
        /// </summary>
        [Input("authMode")]
        public Input<string>? AuthMode { get; set; }

        /// <summary>
        /// (Updatable) The information about the configuration provider.
        /// </summary>
        [Input("configProviderDelegate")]
        public Input<string>? ConfigProviderDelegate { get; set; }

        /// <summary>
        /// (Updatable) Detailed description for the object.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) The end time in milliseconds.
        /// </summary>
        [Input("endTimeMillis")]
        public Input<string>? EndTimeMillis { get; set; }

        /// <summary>
        /// (Updatable) The expected duration of the task execution.
        /// </summary>
        [Input("expectedDuration")]
        public Input<double>? ExpectedDuration { get; set; }

        /// <summary>
        /// (Updatable) The expected duration unit of the task execution.
        /// </summary>
        [Input("expectedDurationUnit")]
        public Input<string>? ExpectedDurationUnit { get; set; }

        /// <summary>
        /// (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
        /// </summary>
        [Input("identifier")]
        public Input<string>? Identifier { get; set; }

        /// <summary>
        /// (Updatable) Whether the backfill is enabled.
        /// </summary>
        [Input("isBackfillEnabled")]
        public Input<bool>? IsBackfillEnabled { get; set; }

        /// <summary>
        /// (Updatable) Whether the same task can be executed concurrently.
        /// </summary>
        [Input("isConcurrentAllowed")]
        public Input<bool>? IsConcurrentAllowed { get; set; }

        /// <summary>
        /// (Updatable) Whether the task schedule is enabled.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// (Updatable) Generated key that can be used in API calls to identify taskSchedule. On scenarios where reference to the taskSchedule is needed, a value can be passed in create.
        /// </summary>
        [Input("key")]
        public Input<string>? Key { get; set; }

        [Input("lastRunDetails")]
        private InputList<Inputs.WorkspaceApplicationTaskScheduleLastRunDetailGetArgs>? _lastRunDetails;

        /// <summary>
        /// The last run details for the task run.
        /// </summary>
        public InputList<Inputs.WorkspaceApplicationTaskScheduleLastRunDetailGetArgs> LastRunDetails
        {
            get => _lastRunDetails ?? (_lastRunDetails = new InputList<Inputs.WorkspaceApplicationTaskScheduleLastRunDetailGetArgs>());
            set => _lastRunDetails = value;
        }

        [Input("metadatas")]
        private InputList<Inputs.WorkspaceApplicationTaskScheduleMetadataGetArgs>? _metadatas;

        /// <summary>
        /// A summary type containing information about the object including its key, name and when/who created/updated it.
        /// </summary>
        public InputList<Inputs.WorkspaceApplicationTaskScheduleMetadataGetArgs> Metadatas
        {
            get => _metadatas ?? (_metadatas = new InputList<Inputs.WorkspaceApplicationTaskScheduleMetadataGetArgs>());
            set => _metadatas = value;
        }

        /// <summary>
        /// The type of the object.
        /// </summary>
        [Input("modelType")]
        public Input<string>? ModelType { get; set; }

        /// <summary>
        /// (Updatable) This is a version number that is used by the service to upgrade objects if needed through releases of the service.
        /// </summary>
        [Input("modelVersion")]
        public Input<string>? ModelVersion { get; set; }

        /// <summary>
        /// (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("nextRunTimeMillis")]
        public Input<string>? NextRunTimeMillis { get; set; }

        /// <summary>
        /// (Updatable) The number of retries.
        /// </summary>
        [Input("numberOfRetries")]
        public Input<int>? NumberOfRetries { get; set; }

        /// <summary>
        /// (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
        /// </summary>
        [Input("objectStatus")]
        public Input<int>? ObjectStatus { get; set; }

        /// <summary>
        /// (Updatable) This is used by the service for optimistic locking of the object, to prevent multiple users from simultaneously updating the object.
        /// </summary>
        [Input("objectVersion")]
        public Input<int>? ObjectVersion { get; set; }

        /// <summary>
        /// (Updatable) A reference to the object's parent.
        /// </summary>
        [Input("parentRef")]
        public Input<Inputs.WorkspaceApplicationTaskScheduleParentRefGetArgs>? ParentRef { get; set; }

        /// <summary>
        /// (Updatable) Information about the object and its parent.
        /// </summary>
        [Input("registryMetadata")]
        public Input<Inputs.WorkspaceApplicationTaskScheduleRegistryMetadataGetArgs>? RegistryMetadata { get; set; }

        /// <summary>
        /// The number of retry attempts.
        /// </summary>
        [Input("retryAttempts")]
        public Input<int>? RetryAttempts { get; set; }

        /// <summary>
        /// (Updatable) The retry delay, the unit for measurement is in the property retry delay unit.
        /// </summary>
        [Input("retryDelay")]
        public Input<double>? RetryDelay { get; set; }

        /// <summary>
        /// (Updatable) The unit for the retry delay.
        /// </summary>
        [Input("retryDelayUnit")]
        public Input<string>? RetryDelayUnit { get; set; }

        /// <summary>
        /// (Updatable) The schedule object
        /// </summary>
        [Input("scheduleRef")]
        public Input<Inputs.WorkspaceApplicationTaskScheduleScheduleRefGetArgs>? ScheduleRef { get; set; }

        /// <summary>
        /// (Updatable) The start time in milliseconds.
        /// </summary>
        [Input("startTimeMillis")]
        public Input<string>? StartTimeMillis { get; set; }

        /// <summary>
        /// The workspace ID.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("workspaceId")]
        public Input<string>? WorkspaceId { get; set; }

        public WorkspaceApplicationTaskScheduleState()
        {
        }
        public static new WorkspaceApplicationTaskScheduleState Empty => new WorkspaceApplicationTaskScheduleState();
    }
}
