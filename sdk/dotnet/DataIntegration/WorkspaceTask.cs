// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataIntegration
{
    /// <summary>
    /// This resource provides the Workspace Task resource in Oracle Cloud Infrastructure Data Integration service.
    /// 
    /// Creates a new task ready for performing data integrations. There are specialized types of tasks that include data loader and integration tasks.
    /// 
    /// ## Import
    /// 
    /// WorkspaceTasks can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:DataIntegration/workspaceTask:WorkspaceTask test_workspace_task "workspaces/{workspaceId}/tasks/{taskKey}"
    /// ```
    /// </summary>
    [OciResourceType("oci:DataIntegration/workspaceTask:WorkspaceTask")]
    public partial class WorkspaceTask : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) The REST invocation pattern to use. ASYNC_OCI_WORKREQUEST is being deprecated as well as cancelEndpoint/MethodType.
        /// </summary>
        [Output("apiCallMode")]
        public Output<string> ApiCallMode { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Authentication configuration for Generic REST invocation.
        /// </summary>
        [Output("authConfig")]
        public Output<Outputs.WorkspaceTaskAuthConfig> AuthConfig { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The REST API configuration for cancelling the task.
        /// </summary>
        [Output("cancelRestCallConfig")]
        public Output<Outputs.WorkspaceTaskCancelRestCallConfig> CancelRestCallConfig { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The type to create a config provider.
        /// </summary>
        [Output("configProviderDelegate")]
        public Output<Outputs.WorkspaceTaskConfigProviderDelegate> ConfigProviderDelegate { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Detailed description for the object.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The REST API configuration for execution.
        /// </summary>
        [Output("executeRestCallConfig")]
        public Output<Outputs.WorkspaceTaskExecuteRestCallConfig> ExecuteRestCallConfig { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
        /// </summary>
        [Output("identifier")]
        public Output<string> Identifier { get; private set; } = null!;

        /// <summary>
        /// (Updatable) An array of input ports.
        /// </summary>
        [Output("inputPorts")]
        public Output<ImmutableArray<Outputs.WorkspaceTaskInputPort>> InputPorts { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defines whether Data Loader task is used for single load or multiple
        /// </summary>
        [Output("isSingleLoad")]
        public Output<bool> IsSingleLoad { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Generated key that can be used in API calls to identify task. On scenarios where reference to the task is needed, a value can be passed in create.
        /// </summary>
        [Output("key")]
        public Output<string> Key { get; private set; } = null!;

        /// <summary>
        /// A key map. If provided, key is replaced with generated key. This structure provides mapping between user provided key and generated key.
        /// </summary>
        [Output("keyMap")]
        public Output<ImmutableDictionary<string, object>> KeyMap { get; private set; } = null!;

        /// <summary>
        /// A summary type containing information about the object including its key, name and when/who created/updated it.
        /// </summary>
        [Output("metadatas")]
        public Output<ImmutableArray<Outputs.WorkspaceTaskMetadata>> Metadatas { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The type of the task.
        /// </summary>
        [Output("modelType")]
        public Output<string> ModelType { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The object's model version.
        /// </summary>
        [Output("modelVersion")]
        public Output<string> ModelVersion { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
        /// </summary>
        [Output("objectStatus")]
        public Output<int> ObjectStatus { get; private set; } = null!;

        /// <summary>
        /// This is used by the service for optimistic locking of the object, to prevent multiple users from simultaneously updating the object.
        /// </summary>
        [Output("objectVersion")]
        public Output<int> ObjectVersion { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Configuration values can be string, objects, or parameters.
        /// </summary>
        [Output("opConfigValues")]
        public Output<Outputs.WorkspaceTaskOpConfigValues> OpConfigValues { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Describes the shape of the execution result
        /// </summary>
        [Output("operation")]
        public Output<string> Operation { get; private set; } = null!;

        /// <summary>
        /// (Updatable) An array of output ports.
        /// </summary>
        [Output("outputPorts")]
        public Output<ImmutableArray<Outputs.WorkspaceTaskOutputPort>> OutputPorts { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defines the number of entities being loaded in parallel at a time for a Data Loader task
        /// </summary>
        [Output("parallelLoadLimit")]
        public Output<int> ParallelLoadLimit { get; private set; } = null!;

        /// <summary>
        /// (Updatable) An array of parameters.
        /// </summary>
        [Output("parameters")]
        public Output<ImmutableArray<Outputs.WorkspaceTaskParameter>> Parameters { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A reference to the object's parent.
        /// </summary>
        [Output("parentRef")]
        public Output<Outputs.WorkspaceTaskParentRef> ParentRef { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The REST API configuration for polling.
        /// </summary>
        [Output("pollRestCallConfig")]
        public Output<Outputs.WorkspaceTaskPollRestCallConfig> PollRestCallConfig { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Information about the object and its parent.
        /// </summary>
        [Output("registryMetadata")]
        public Output<Outputs.WorkspaceTaskRegistryMetadata> RegistryMetadata { get; private set; } = null!;

        /// <summary>
        /// (Updatable) List of typed expressions.
        /// </summary>
        [Output("typedExpressions")]
        public Output<ImmutableArray<Outputs.WorkspaceTaskTypedExpression>> TypedExpressions { get; private set; } = null!;

        /// <summary>
        /// The workspace ID.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("workspaceId")]
        public Output<string> WorkspaceId { get; private set; } = null!;


        /// <summary>
        /// Create a WorkspaceTask resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WorkspaceTask(string name, WorkspaceTaskArgs args, CustomResourceOptions? options = null)
            : base("oci:DataIntegration/workspaceTask:WorkspaceTask", name, args ?? new WorkspaceTaskArgs(), MakeResourceOptions(options, ""))
        {
        }

        private WorkspaceTask(string name, Input<string> id, WorkspaceTaskState? state = null, CustomResourceOptions? options = null)
            : base("oci:DataIntegration/workspaceTask:WorkspaceTask", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WorkspaceTask resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WorkspaceTask Get(string name, Input<string> id, WorkspaceTaskState? state = null, CustomResourceOptions? options = null)
        {
            return new WorkspaceTask(name, id, state, options);
        }
    }

    public sealed class WorkspaceTaskArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The REST invocation pattern to use. ASYNC_OCI_WORKREQUEST is being deprecated as well as cancelEndpoint/MethodType.
        /// </summary>
        [Input("apiCallMode")]
        public Input<string>? ApiCallMode { get; set; }

        /// <summary>
        /// (Updatable) Authentication configuration for Generic REST invocation.
        /// </summary>
        [Input("authConfig")]
        public Input<Inputs.WorkspaceTaskAuthConfigArgs>? AuthConfig { get; set; }

        /// <summary>
        /// (Updatable) The REST API configuration for cancelling the task.
        /// </summary>
        [Input("cancelRestCallConfig")]
        public Input<Inputs.WorkspaceTaskCancelRestCallConfigArgs>? CancelRestCallConfig { get; set; }

        /// <summary>
        /// (Updatable) The type to create a config provider.
        /// </summary>
        [Input("configProviderDelegate")]
        public Input<Inputs.WorkspaceTaskConfigProviderDelegateArgs>? ConfigProviderDelegate { get; set; }

        /// <summary>
        /// (Updatable) Detailed description for the object.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) The REST API configuration for execution.
        /// </summary>
        [Input("executeRestCallConfig")]
        public Input<Inputs.WorkspaceTaskExecuteRestCallConfigArgs>? ExecuteRestCallConfig { get; set; }

        /// <summary>
        /// (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
        /// </summary>
        [Input("identifier", required: true)]
        public Input<string> Identifier { get; set; } = null!;

        [Input("inputPorts")]
        private InputList<Inputs.WorkspaceTaskInputPortArgs>? _inputPorts;

        /// <summary>
        /// (Updatable) An array of input ports.
        /// </summary>
        public InputList<Inputs.WorkspaceTaskInputPortArgs> InputPorts
        {
            get => _inputPorts ?? (_inputPorts = new InputList<Inputs.WorkspaceTaskInputPortArgs>());
            set => _inputPorts = value;
        }

        /// <summary>
        /// (Updatable) Defines whether Data Loader task is used for single load or multiple
        /// </summary>
        [Input("isSingleLoad")]
        public Input<bool>? IsSingleLoad { get; set; }

        /// <summary>
        /// (Updatable) Generated key that can be used in API calls to identify task. On scenarios where reference to the task is needed, a value can be passed in create.
        /// </summary>
        [Input("key")]
        public Input<string>? Key { get; set; }

        /// <summary>
        /// (Updatable) The type of the task.
        /// </summary>
        [Input("modelType", required: true)]
        public Input<string> ModelType { get; set; } = null!;

        /// <summary>
        /// (Updatable) The object's model version.
        /// </summary>
        [Input("modelVersion")]
        public Input<string>? ModelVersion { get; set; }

        /// <summary>
        /// (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
        /// </summary>
        [Input("objectStatus")]
        public Input<int>? ObjectStatus { get; set; }

        /// <summary>
        /// (Updatable) Configuration values can be string, objects, or parameters.
        /// </summary>
        [Input("opConfigValues")]
        public Input<Inputs.WorkspaceTaskOpConfigValuesArgs>? OpConfigValues { get; set; }

        /// <summary>
        /// (Updatable) Describes the shape of the execution result
        /// </summary>
        [Input("operation")]
        public Input<string>? Operation { get; set; }

        [Input("outputPorts")]
        private InputList<Inputs.WorkspaceTaskOutputPortArgs>? _outputPorts;

        /// <summary>
        /// (Updatable) An array of output ports.
        /// </summary>
        public InputList<Inputs.WorkspaceTaskOutputPortArgs> OutputPorts
        {
            get => _outputPorts ?? (_outputPorts = new InputList<Inputs.WorkspaceTaskOutputPortArgs>());
            set => _outputPorts = value;
        }

        /// <summary>
        /// (Updatable) Defines the number of entities being loaded in parallel at a time for a Data Loader task
        /// </summary>
        [Input("parallelLoadLimit")]
        public Input<int>? ParallelLoadLimit { get; set; }

        [Input("parameters")]
        private InputList<Inputs.WorkspaceTaskParameterArgs>? _parameters;

        /// <summary>
        /// (Updatable) An array of parameters.
        /// </summary>
        public InputList<Inputs.WorkspaceTaskParameterArgs> Parameters
        {
            get => _parameters ?? (_parameters = new InputList<Inputs.WorkspaceTaskParameterArgs>());
            set => _parameters = value;
        }

        /// <summary>
        /// (Updatable) A reference to the object's parent.
        /// </summary>
        [Input("parentRef")]
        public Input<Inputs.WorkspaceTaskParentRefArgs>? ParentRef { get; set; }

        /// <summary>
        /// (Updatable) The REST API configuration for polling.
        /// </summary>
        [Input("pollRestCallConfig")]
        public Input<Inputs.WorkspaceTaskPollRestCallConfigArgs>? PollRestCallConfig { get; set; }

        /// <summary>
        /// (Updatable) Information about the object and its parent.
        /// </summary>
        [Input("registryMetadata", required: true)]
        public Input<Inputs.WorkspaceTaskRegistryMetadataArgs> RegistryMetadata { get; set; } = null!;

        [Input("typedExpressions")]
        private InputList<Inputs.WorkspaceTaskTypedExpressionArgs>? _typedExpressions;

        /// <summary>
        /// (Updatable) List of typed expressions.
        /// </summary>
        public InputList<Inputs.WorkspaceTaskTypedExpressionArgs> TypedExpressions
        {
            get => _typedExpressions ?? (_typedExpressions = new InputList<Inputs.WorkspaceTaskTypedExpressionArgs>());
            set => _typedExpressions = value;
        }

        /// <summary>
        /// The workspace ID.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("workspaceId", required: true)]
        public Input<string> WorkspaceId { get; set; } = null!;

        public WorkspaceTaskArgs()
        {
        }
        public static new WorkspaceTaskArgs Empty => new WorkspaceTaskArgs();
    }

    public sealed class WorkspaceTaskState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The REST invocation pattern to use. ASYNC_OCI_WORKREQUEST is being deprecated as well as cancelEndpoint/MethodType.
        /// </summary>
        [Input("apiCallMode")]
        public Input<string>? ApiCallMode { get; set; }

        /// <summary>
        /// (Updatable) Authentication configuration for Generic REST invocation.
        /// </summary>
        [Input("authConfig")]
        public Input<Inputs.WorkspaceTaskAuthConfigGetArgs>? AuthConfig { get; set; }

        /// <summary>
        /// (Updatable) The REST API configuration for cancelling the task.
        /// </summary>
        [Input("cancelRestCallConfig")]
        public Input<Inputs.WorkspaceTaskCancelRestCallConfigGetArgs>? CancelRestCallConfig { get; set; }

        /// <summary>
        /// (Updatable) The type to create a config provider.
        /// </summary>
        [Input("configProviderDelegate")]
        public Input<Inputs.WorkspaceTaskConfigProviderDelegateGetArgs>? ConfigProviderDelegate { get; set; }

        /// <summary>
        /// (Updatable) Detailed description for the object.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) The REST API configuration for execution.
        /// </summary>
        [Input("executeRestCallConfig")]
        public Input<Inputs.WorkspaceTaskExecuteRestCallConfigGetArgs>? ExecuteRestCallConfig { get; set; }

        /// <summary>
        /// (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
        /// </summary>
        [Input("identifier")]
        public Input<string>? Identifier { get; set; }

        [Input("inputPorts")]
        private InputList<Inputs.WorkspaceTaskInputPortGetArgs>? _inputPorts;

        /// <summary>
        /// (Updatable) An array of input ports.
        /// </summary>
        public InputList<Inputs.WorkspaceTaskInputPortGetArgs> InputPorts
        {
            get => _inputPorts ?? (_inputPorts = new InputList<Inputs.WorkspaceTaskInputPortGetArgs>());
            set => _inputPorts = value;
        }

        /// <summary>
        /// (Updatable) Defines whether Data Loader task is used for single load or multiple
        /// </summary>
        [Input("isSingleLoad")]
        public Input<bool>? IsSingleLoad { get; set; }

        /// <summary>
        /// (Updatable) Generated key that can be used in API calls to identify task. On scenarios where reference to the task is needed, a value can be passed in create.
        /// </summary>
        [Input("key")]
        public Input<string>? Key { get; set; }

        [Input("keyMap")]
        private InputMap<object>? _keyMap;

        /// <summary>
        /// A key map. If provided, key is replaced with generated key. This structure provides mapping between user provided key and generated key.
        /// </summary>
        public InputMap<object> KeyMap
        {
            get => _keyMap ?? (_keyMap = new InputMap<object>());
            set => _keyMap = value;
        }

        [Input("metadatas")]
        private InputList<Inputs.WorkspaceTaskMetadataGetArgs>? _metadatas;

        /// <summary>
        /// A summary type containing information about the object including its key, name and when/who created/updated it.
        /// </summary>
        public InputList<Inputs.WorkspaceTaskMetadataGetArgs> Metadatas
        {
            get => _metadatas ?? (_metadatas = new InputList<Inputs.WorkspaceTaskMetadataGetArgs>());
            set => _metadatas = value;
        }

        /// <summary>
        /// (Updatable) The type of the task.
        /// </summary>
        [Input("modelType")]
        public Input<string>? ModelType { get; set; }

        /// <summary>
        /// (Updatable) The object's model version.
        /// </summary>
        [Input("modelVersion")]
        public Input<string>? ModelVersion { get; set; }

        /// <summary>
        /// (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
        /// </summary>
        [Input("objectStatus")]
        public Input<int>? ObjectStatus { get; set; }

        /// <summary>
        /// This is used by the service for optimistic locking of the object, to prevent multiple users from simultaneously updating the object.
        /// </summary>
        [Input("objectVersion")]
        public Input<int>? ObjectVersion { get; set; }

        /// <summary>
        /// (Updatable) Configuration values can be string, objects, or parameters.
        /// </summary>
        [Input("opConfigValues")]
        public Input<Inputs.WorkspaceTaskOpConfigValuesGetArgs>? OpConfigValues { get; set; }

        /// <summary>
        /// (Updatable) Describes the shape of the execution result
        /// </summary>
        [Input("operation")]
        public Input<string>? Operation { get; set; }

        [Input("outputPorts")]
        private InputList<Inputs.WorkspaceTaskOutputPortGetArgs>? _outputPorts;

        /// <summary>
        /// (Updatable) An array of output ports.
        /// </summary>
        public InputList<Inputs.WorkspaceTaskOutputPortGetArgs> OutputPorts
        {
            get => _outputPorts ?? (_outputPorts = new InputList<Inputs.WorkspaceTaskOutputPortGetArgs>());
            set => _outputPorts = value;
        }

        /// <summary>
        /// (Updatable) Defines the number of entities being loaded in parallel at a time for a Data Loader task
        /// </summary>
        [Input("parallelLoadLimit")]
        public Input<int>? ParallelLoadLimit { get; set; }

        [Input("parameters")]
        private InputList<Inputs.WorkspaceTaskParameterGetArgs>? _parameters;

        /// <summary>
        /// (Updatable) An array of parameters.
        /// </summary>
        public InputList<Inputs.WorkspaceTaskParameterGetArgs> Parameters
        {
            get => _parameters ?? (_parameters = new InputList<Inputs.WorkspaceTaskParameterGetArgs>());
            set => _parameters = value;
        }

        /// <summary>
        /// (Updatable) A reference to the object's parent.
        /// </summary>
        [Input("parentRef")]
        public Input<Inputs.WorkspaceTaskParentRefGetArgs>? ParentRef { get; set; }

        /// <summary>
        /// (Updatable) The REST API configuration for polling.
        /// </summary>
        [Input("pollRestCallConfig")]
        public Input<Inputs.WorkspaceTaskPollRestCallConfigGetArgs>? PollRestCallConfig { get; set; }

        /// <summary>
        /// (Updatable) Information about the object and its parent.
        /// </summary>
        [Input("registryMetadata")]
        public Input<Inputs.WorkspaceTaskRegistryMetadataGetArgs>? RegistryMetadata { get; set; }

        [Input("typedExpressions")]
        private InputList<Inputs.WorkspaceTaskTypedExpressionGetArgs>? _typedExpressions;

        /// <summary>
        /// (Updatable) List of typed expressions.
        /// </summary>
        public InputList<Inputs.WorkspaceTaskTypedExpressionGetArgs> TypedExpressions
        {
            get => _typedExpressions ?? (_typedExpressions = new InputList<Inputs.WorkspaceTaskTypedExpressionGetArgs>());
            set => _typedExpressions = value;
        }

        /// <summary>
        /// The workspace ID.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("workspaceId")]
        public Input<string>? WorkspaceId { get; set; }

        public WorkspaceTaskState()
        {
        }
        public static new WorkspaceTaskState Empty => new WorkspaceTaskState();
    }
}
