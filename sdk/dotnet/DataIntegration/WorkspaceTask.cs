// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataIntegration
{
    /// <summary>
    /// This resource provides the Workspace Task resource in Oracle Cloud Infrastructure Data Integration service.
    /// 
    /// Creates a new task ready for performing data integrations. There are specialized types of tasks that include data loader and integration tasks.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testWorkspaceTask = new Oci.DataIntegration.WorkspaceTask("test_workspace_task", new()
    ///     {
    ///         Identifier = workspaceTaskIdentifier,
    ///         ModelType = workspaceTaskModelType,
    ///         Name = workspaceTaskName,
    ///         RegistryMetadata = new Oci.DataIntegration.Inputs.WorkspaceTaskRegistryMetadataArgs
    ///         {
    ///             AggregatorKey = workspaceTaskRegistryMetadataAggregatorKey,
    ///             IsFavorite = workspaceTaskRegistryMetadataIsFavorite,
    ///             Key = workspaceTaskRegistryMetadataKey,
    ///             Labels = workspaceTaskRegistryMetadataLabels,
    ///             RegistryVersion = workspaceTaskRegistryMetadataRegistryVersion,
    ///         },
    ///         WorkspaceId = testWorkspace.Id,
    ///         ApiCallMode = workspaceTaskApiCallMode,
    ///         AuthConfig = new Oci.DataIntegration.Inputs.WorkspaceTaskAuthConfigArgs
    ///         {
    ///             Key = workspaceTaskAuthConfigKey,
    ///             ModelType = workspaceTaskAuthConfigModelType,
    ///             ModelVersion = workspaceTaskAuthConfigModelVersion,
    ///             ParentRef = new Oci.DataIntegration.Inputs.WorkspaceTaskAuthConfigParentRefArgs
    ///             {
    ///                 Parent = workspaceTaskAuthConfigParentRefParent,
    ///                 RootDocId = testRootDoc.Id,
    ///             },
    ///             ResourcePrincipalSource = workspaceTaskAuthConfigResourcePrincipalSource,
    ///         },
    ///         AuthDetails = new[]
    ///         {
    ///             
    ///             {
    ///                 { "key", workspaceTaskAuthDetailsKey },
    ///                 { "modelType", workspaceTaskAuthDetailsModelType },
    ///                 { "modelVersion", workspaceTaskAuthDetailsModelVersion },
    ///                 { "parentRef", new[]
    ///                 {
    ///                     
    ///                     {
    ///                         { "parent", workspaceTaskAuthDetailsParentRefParent },
    ///                         { "rootDocId", testRootDoc.Id },
    ///                     },
    ///                 } },
    ///             },
    ///         },
    ///         CancelEndpoint = new[]
    ///         {
    ///             
    ///             {
    ///                 { "configValues", new[]
    ///                 {
    ///                     
    ///                     {
    ///                         { "configParamValues", new[]
    ///                         {
    ///                             
    ///                             {
    ///                                 { "intValue", workspaceTaskCancelEndpointConfigValuesConfigParamValuesIntValue },
    ///                                 { "objectValue", workspaceTaskCancelEndpointConfigValuesConfigParamValuesObjectValue },
    ///                                 { "parameterValue", workspaceTaskCancelEndpointConfigValuesConfigParamValuesParameterValue },
    ///                                 { "refValue", workspaceTaskCancelEndpointConfigValuesConfigParamValuesRefValue },
    ///                                 { "rootObjectValue", workspaceTaskCancelEndpointConfigValuesConfigParamValuesRootObjectValue },
    ///                                 { "stringValue", workspaceTaskCancelEndpointConfigValuesConfigParamValuesStringValue },
    ///                             },
    ///                         } },
    ///                         { "parentRef", new[]
    ///                         {
    ///                             
    ///                             {
    ///                                 { "parent", workspaceTaskCancelEndpointConfigValuesParentRefParent },
    ///                                 { "rootDocId", testRootDoc.Id },
    ///                             },
    ///                         } },
    ///                     },
    ///                 } },
    ///                 { "exprString", workspaceTaskCancelEndpointExprString },
    ///                 { "key", workspaceTaskCancelEndpointKey },
    ///                 { "modelType", workspaceTaskCancelEndpointModelType },
    ///                 { "modelVersion", workspaceTaskCancelEndpointModelVersion },
    ///                 { "objectStatus", workspaceTaskCancelEndpointObjectStatus },
    ///                 { "parentRef", new[]
    ///                 {
    ///                     
    ///                     {
    ///                         { "parent", workspaceTaskCancelEndpointParentRefParent },
    ///                         { "rootDocId", testRootDoc.Id },
    ///                     },
    ///                 } },
    ///             },
    ///         },
    ///         CancelMethodType = workspaceTaskCancelMethodType,
    ///         CancelRestCallConfig = new Oci.DataIntegration.Inputs.WorkspaceTaskCancelRestCallConfigArgs
    ///         {
    ///             ConfigValues = new Oci.DataIntegration.Inputs.WorkspaceTaskCancelRestCallConfigConfigValuesArgs
    ///             {
    ///                 ConfigParamValues = new Oci.DataIntegration.Inputs.WorkspaceTaskCancelRestCallConfigConfigValuesConfigParamValuesArgs
    ///                 {
    ///                     IntValue = workspaceTaskCancelRestCallConfigConfigValuesConfigParamValuesIntValue,
    ///                     ObjectValue = workspaceTaskCancelRestCallConfigConfigValuesConfigParamValuesObjectValue,
    ///                     ParameterValue = workspaceTaskCancelRestCallConfigConfigValuesConfigParamValuesParameterValue,
    ///                     RefValue = workspaceTaskCancelRestCallConfigConfigValuesConfigParamValuesRefValue,
    ///                     RootObjectValue = workspaceTaskCancelRestCallConfigConfigValuesConfigParamValuesRootObjectValue,
    ///                     StringValue = workspaceTaskCancelRestCallConfigConfigValuesConfigParamValuesStringValue,
    ///                 },
    ///                 ParentRef = new Oci.DataIntegration.Inputs.WorkspaceTaskCancelRestCallConfigConfigValuesParentRefArgs
    ///                 {
    ///                     Parent = workspaceTaskCancelRestCallConfigConfigValuesParentRefParent,
    ///                     RootDocId = testRootDoc.Id,
    ///                 },
    ///             },
    ///             MethodType = workspaceTaskCancelRestCallConfigMethodType,
    ///             RequestHeaders = workspaceTaskCancelRestCallConfigRequestHeaders,
    ///         },
    ///         ConditionalCompositeFieldMap = new[]
    ///         {
    ///             
    ///             {
    ///                 { "configValues", new[]
    ///                 {
    ///                     
    ///                     {
    ///                         { "configParamValues", new[]
    ///                         {
    ///                             
    ///                             {
    ///                                 { "intValue", workspaceTaskConditionalCompositeFieldMapConfigValuesConfigParamValuesIntValue },
    ///                                 { "objectValue", workspaceTaskConditionalCompositeFieldMapConfigValuesConfigParamValuesObjectValue },
    ///                                 { "parameterValue", workspaceTaskConditionalCompositeFieldMapConfigValuesConfigParamValuesParameterValue },
    ///                                 { "refValue", workspaceTaskConditionalCompositeFieldMapConfigValuesConfigParamValuesRefValue },
    ///                                 { "rootObjectValue", workspaceTaskConditionalCompositeFieldMapConfigValuesConfigParamValuesRootObjectValue },
    ///                                 { "stringValue", workspaceTaskConditionalCompositeFieldMapConfigValuesConfigParamValuesStringValue },
    ///                             },
    ///                         } },
    ///                         { "parentRef", new[]
    ///                         {
    ///                             
    ///                             {
    ///                                 { "parent", workspaceTaskConditionalCompositeFieldMapConfigValuesParentRefParent },
    ///                                 { "rootDocId", testRootDoc.Id },
    ///                             },
    ///                         } },
    ///                     },
    ///                 } },
    ///                 { "description", workspaceTaskConditionalCompositeFieldMapDescription },
    ///                 { "fieldMapScope", new[]
    ///                 {
    ///                     
    ///                     {
    ///                         { "modelType", workspaceTaskConditionalCompositeFieldMapFieldMapScopeModelType },
    ///                         { "configValues", new[]
    ///                         {
    ///                             
    ///                             {
    ///                                 { "configParamValues", new[]
    ///                                 {
    ///                                     
    ///                                     {
    ///                                         { "intValue", workspaceTaskConditionalCompositeFieldMapFieldMapScopeConfigValuesConfigParamValuesIntValue },
    ///                                         { "objectValue", workspaceTaskConditionalCompositeFieldMapFieldMapScopeConfigValuesConfigParamValuesObjectValue },
    ///                                         { "parameterValue", workspaceTaskConditionalCompositeFieldMapFieldMapScopeConfigValuesConfigParamValuesParameterValue },
    ///                                         { "refValue", workspaceTaskConditionalCompositeFieldMapFieldMapScopeConfigValuesConfigParamValuesRefValue },
    ///                                         { "rootObjectValue", workspaceTaskConditionalCompositeFieldMapFieldMapScopeConfigValuesConfigParamValuesRootObjectValue },
    ///                                         { "stringValue", workspaceTaskConditionalCompositeFieldMapFieldMapScopeConfigValuesConfigParamValuesStringValue },
    ///                                     },
    ///                                 } },
    ///                                 { "parentRef", new[]
    ///                                 {
    ///                                     
    ///                                     {
    ///                                         { "parent", workspaceTaskConditionalCompositeFieldMapFieldMapScopeConfigValuesParentRefParent },
    ///                                         { "rootDocId", testRootDoc.Id },
    ///                                     },
    ///                                 } },
    ///                             },
    ///                         } },
    ///                         { "description", workspaceTaskConditionalCompositeFieldMapFieldMapScopeDescription },
    ///                         { "fromName", workspaceTaskConditionalCompositeFieldMapFieldMapScopeFromName },
    ///                         { "isCascade", workspaceTaskConditionalCompositeFieldMapFieldMapScopeIsCascade },
    ///                         { "isCaseSensitive", workspaceTaskConditionalCompositeFieldMapFieldMapScopeIsCaseSensitive },
    ///                         { "isJavaRegexSyntax", workspaceTaskConditionalCompositeFieldMapFieldMapScopeIsJavaRegexSyntax },
    ///                         { "isSkipRemainingRulesOnMatch", workspaceTaskConditionalCompositeFieldMapFieldMapScopeIsSkipRemainingRulesOnMatch },
    ///                         { "key", workspaceTaskConditionalCompositeFieldMapFieldMapScopeKey },
    ///                         { "matchingStrategy", workspaceTaskConditionalCompositeFieldMapFieldMapScopeMatchingStrategy },
    ///                         { "modelVersion", workspaceTaskConditionalCompositeFieldMapFieldMapScopeModelVersion },
    ///                         { "name", workspaceTaskConditionalCompositeFieldMapFieldMapScopeName },
    ///                         { "names", workspaceTaskConditionalCompositeFieldMapFieldMapScopeNames },
    ///                         { "objectStatus", workspaceTaskConditionalCompositeFieldMapFieldMapScopeObjectStatus },
    ///                         { "parentRef", new[]
    ///                         {
    ///                             
    ///                             {
    ///                                 { "parent", workspaceTaskConditionalCompositeFieldMapFieldMapScopeParentRefParent },
    ///                                 { "rootDocId", testRootDoc.Id },
    ///                             },
    ///                         } },
    ///                         { "pattern", workspaceTaskConditionalCompositeFieldMapFieldMapScopePattern },
    ///                         { "ruleType", workspaceTaskConditionalCompositeFieldMapFieldMapScopeRuleType },
    ///                         { "scope", workspaceTaskConditionalCompositeFieldMapFieldMapScopeScope },
    ///                         { "toName", workspaceTaskConditionalCompositeFieldMapFieldMapScopeToName },
    ///                         { "types", workspaceTaskConditionalCompositeFieldMapFieldMapScopeTypes },
    ///                     },
    ///                 } },
    ///                 { "fieldMaps", workspaceTaskConditionalCompositeFieldMapFieldMaps },
    ///                 { "key", workspaceTaskConditionalCompositeFieldMapKey },
    ///                 { "modelType", workspaceTaskConditionalCompositeFieldMapModelType },
    ///                 { "modelVersion", workspaceTaskConditionalCompositeFieldMapModelVersion },
    ///                 { "objectStatus", workspaceTaskConditionalCompositeFieldMapObjectStatus },
    ///                 { "parentRef", new[]
    ///                 {
    ///                     
    ///                     {
    ///                         { "parent", workspaceTaskConditionalCompositeFieldMapParentRefParent },
    ///                         { "rootDocId", testRootDoc.Id },
    ///                     },
    ///                 } },
    ///             },
    ///         },
    ///         ConfigProviderDelegate = new Oci.DataIntegration.Inputs.WorkspaceTaskConfigProviderDelegateArgs
    ///         {
    ///             Bindings = new[]
    ///             {
    ///                 new Oci.DataIntegration.Inputs.WorkspaceTaskConfigProviderDelegateBindingArgs
    ///                 {
    ///                     RootObjectValue = workspaceTaskConfigProviderDelegateBindingsRootObjectValue,
    ///                     SimpleValue = workspaceTaskConfigProviderDelegateBindingsSimpleValue,
    ///                 },
    ///             },
    ///         },
    ///         DataFlow = new[]
    ///         {
    ///             
    ///             {
    ///                 { "description", workspaceTaskDataFlowDescription },
    ///                 { "flowConfigValues", new[]
    ///                 {
    ///                     
    ///                     {
    ///                         { "configParamValues", new[]
    ///                         {
    ///                             
    ///                             {
    ///                                 { "intValue", workspaceTaskDataFlowFlowConfigValuesConfigParamValuesIntValue },
    ///                                 { "objectValue", workspaceTaskDataFlowFlowConfigValuesConfigParamValuesObjectValue },
    ///                                 { "parameterValue", workspaceTaskDataFlowFlowConfigValuesConfigParamValuesParameterValue },
    ///                                 { "refValue", workspaceTaskDataFlowFlowConfigValuesConfigParamValuesRefValue },
    ///                                 { "rootObjectValue", workspaceTaskDataFlowFlowConfigValuesConfigParamValuesRootObjectValue },
    ///                                 { "stringValue", workspaceTaskDataFlowFlowConfigValuesConfigParamValuesStringValue },
    ///                             },
    ///                         } },
    ///                         { "parentRef", new[]
    ///                         {
    ///                             
    ///                             {
    ///                                 { "parent", workspaceTaskDataFlowFlowConfigValuesParentRefParent },
    ///                                 { "rootDocId", testRootDoc.Id },
    ///                             },
    ///                         } },
    ///                     },
    ///                 } },
    ///                 { "identifier", workspaceTaskDataFlowIdentifier },
    ///                 { "key", workspaceTaskDataFlowKey },
    ///                 { "keyMap", workspaceTaskDataFlowKeyMap },
    ///                 { "metadata", new[]
    ///                 {
    ///                     
    ///                     {
    ///                         { "aggregator", new[]
    ///                         {
    ///                             
    ///                             {
    ///                                 { "description", workspaceTaskDataFlowMetadataAggregatorDescription },
    ///                                 { "identifier", workspaceTaskDataFlowMetadataAggregatorIdentifier },
    ///                                 { "key", workspaceTaskDataFlowMetadataAggregatorKey },
    ///                                 { "name", workspaceTaskDataFlowMetadataAggregatorName },
    ///                                 { "type", workspaceTaskDataFlowMetadataAggregatorType },
    ///                             },
    ///                         } },
    ///                         { "aggregatorKey", workspaceTaskDataFlowMetadataAggregatorKey },
    ///                         { "countStatistics", new[]
    ///                         {
    ///                             
    ///                             {
    ///                                 { "objectTypeCountList", new[]
    ///                                 {
    ///                                     
    ///                                     {
    ///                                         { "objectCount", workspaceTaskDataFlowMetadataCountStatisticsObjectTypeCountListObjectCount },
    ///                                         { "objectType", workspaceTaskDataFlowMetadataCountStatisticsObjectTypeCountListObjectType },
    ///                                     },
    ///                                 } },
    ///                             },
    ///                         } },
    ///                         { "createdBy", workspaceTaskDataFlowMetadataCreatedBy },
    ///                         { "createdByName", workspaceTaskDataFlowMetadataCreatedByName },
    ///                         { "identifierPath", workspaceTaskDataFlowMetadataIdentifierPath },
    ///                         { "infoFields", workspaceTaskDataFlowMetadataInfoFields },
    ///                         { "isFavorite", workspaceTaskDataFlowMetadataIsFavorite },
    ///                         { "labels", workspaceTaskDataFlowMetadataLabels },
    ///                         { "registryVersion", workspaceTaskDataFlowMetadataRegistryVersion },
    ///                         { "timeCreated", workspaceTaskDataFlowMetadataTimeCreated },
    ///                         { "timeUpdated", workspaceTaskDataFlowMetadataTimeUpdated },
    ///                         { "updatedBy", workspaceTaskDataFlowMetadataUpdatedBy },
    ///                         { "updatedByName", workspaceTaskDataFlowMetadataUpdatedByName },
    ///                     },
    ///                 } },
    ///                 { "modelType", workspaceTaskDataFlowModelType },
    ///                 { "modelVersion", workspaceTaskDataFlowModelVersion },
    ///                 { "name", workspaceTaskDataFlowName },
    ///                 { "nodes", new[]
    ///                 {
    ///                     
    ///                     {
    ///                         { "configProviderDelegate", workspaceTaskDataFlowNodesConfigProviderDelegate },
    ///                         { "description", workspaceTaskDataFlowNodesDescription },
    ///                         { "inputLinks", new[]
    ///                         {
    ///                             
    ///                             {
    ///                                 { "description", workspaceTaskDataFlowNodesInputLinksDescription },
    ///                                 { "fieldMap", workspaceTaskDataFlowNodesInputLinksFieldMap },
    ///                                 { "fromLink", workspaceTaskDataFlowNodesInputLinksFromLink },
    ///                                 { "key", workspaceTaskDataFlowNodesInputLinksKey },
    ///                                 { "modelType", workspaceTaskDataFlowNodesInputLinksModelType },
    ///                                 { "modelVersion", workspaceTaskDataFlowNodesInputLinksModelVersion },
    ///                                 { "objectStatus", workspaceTaskDataFlowNodesInputLinksObjectStatus },
    ///                                 { "parentRef", new[]
    ///                                 {
    ///                                     
    ///                                     {
    ///                                         { "parent", workspaceTaskDataFlowNodesInputLinksParentRefParent },
    ///                                         { "rootDocId", testRootDoc.Id },
    ///                                     },
    ///                                 } },
    ///                                 { "port", workspaceTaskDataFlowNodesInputLinksPort },
    ///                             },
    ///                         } },
    ///                         { "key", workspaceTaskDataFlowNodesKey },
    ///                         { "modelType", workspaceTaskDataFlowNodesModelType },
    ///                         { "modelVersion", workspaceTaskDataFlowNodesModelVersion },
    ///                         { "name", workspaceTaskDataFlowNodesName },
    ///                         { "objectStatus", workspaceTaskDataFlowNodesObjectStatus },
    ///                         { "operator", workspaceTaskDataFlowNodesOperator },
    ///                         { "outputLinks", new[]
    ///                         {
    ///                             
    ///                             {
    ///                                 { "description", workspaceTaskDataFlowNodesOutputLinksDescription },
    ///                                 { "key", workspaceTaskDataFlowNodesOutputLinksKey },
    ///                                 { "modelType", workspaceTaskDataFlowNodesOutputLinksModelType },
    ///                                 { "modelVersion", workspaceTaskDataFlowNodesOutputLinksModelVersion },
    ///                                 { "objectStatus", workspaceTaskDataFlowNodesOutputLinksObjectStatus },
    ///                                 { "parentRef", new[]
    ///                                 {
    ///                                     
    ///                                     {
    ///                                         { "parent", workspaceTaskDataFlowNodesOutputLinksParentRefParent },
    ///                                         { "rootDocId", testRootDoc.Id },
    ///                                     },
    ///                                 } },
    ///                                 { "port", workspaceTaskDataFlowNodesOutputLinksPort },
    ///                                 { "toLinks", workspaceTaskDataFlowNodesOutputLinksToLinks },
    ///                             },
    ///                         } },
    ///                         { "parentRef", new[]
    ///                         {
    ///                             
    ///                             {
    ///                                 { "parent", workspaceTaskDataFlowNodesParentRefParent },
    ///                                 { "rootDocId", testRootDoc.Id },
    ///                             },
    ///                         } },
    ///                         { "uiProperties", new[]
    ///                         {
    ///                             
    ///                             {
    ///                                 { "coordinateX", workspaceTaskDataFlowNodesUiPropertiesCoordinateX },
    ///                                 { "coordinateY", workspaceTaskDataFlowNodesUiPropertiesCoordinateY },
    ///                             },
    ///                         } },
    ///                     },
    ///                 } },
    ///                 { "objectStatus", workspaceTaskDataFlowObjectStatus },
    ///                 { "objectVersion", workspaceTaskDataFlowObjectVersion },
    ///                 { "parameters", new[]
    ///                 {
    ///                     
    ///                     {
    ///                         { "configValues", new[]
    ///                         {
    ///                             
    ///                             {
    ///                                 { "configParamValues", new[]
    ///                                 {
    ///                                     
    ///                                     {
    ///                                         { "intValue", workspaceTaskDataFlowParametersConfigValuesConfigParamValuesIntValue },
    ///                                         { "objectValue", workspaceTaskDataFlowParametersConfigValuesConfigParamValuesObjectValue },
    ///                                         { "parameterValue", workspaceTaskDataFlowParametersConfigValuesConfigParamValuesParameterValue },
    ///                                         { "refValue", workspaceTaskDataFlowParametersConfigValuesConfigParamValuesRefValue },
    ///                                         { "rootObjectValue", workspaceTaskDataFlowParametersConfigValuesConfigParamValuesRootObjectValue },
    ///                                         { "stringValue", workspaceTaskDataFlowParametersConfigValuesConfigParamValuesStringValue },
    ///                                     },
    ///                                 } },
    ///                                 { "parentRef", new[]
    ///                                 {
    ///                                     
    ///                                     {
    ///                                         { "parent", workspaceTaskDataFlowParametersConfigValuesParentRefParent },
    ///                                         { "rootDocId", testRootDoc.Id },
    ///                                     },
    ///                                 } },
    ///                             },
    ///                         } },
    ///                         { "defaultValue", workspaceTaskDataFlowParametersDefaultValue },
    ///                         { "description", workspaceTaskDataFlowParametersDescription },
    ///                         { "isInput", workspaceTaskDataFlowParametersIsInput },
    ///                         { "isOutput", workspaceTaskDataFlowParametersIsOutput },
    ///                         { "key", workspaceTaskDataFlowParametersKey },
    ///                         { "modelType", workspaceTaskDataFlowParametersModelType },
    ///                         { "modelVersion", workspaceTaskDataFlowParametersModelVersion },
    ///                         { "name", workspaceTaskDataFlowParametersName },
    ///                         { "objectStatus", workspaceTaskDataFlowParametersObjectStatus },
    ///                         { "outputAggregationType", workspaceTaskDataFlowParametersOutputAggregationType },
    ///                         { "parentRef", new[]
    ///                         {
    ///                             
    ///                             {
    ///                                 { "parent", workspaceTaskDataFlowParametersParentRefParent },
    ///                                 { "rootDocId", testRootDoc.Id },
    ///                             },
    ///                         } },
    ///                         { "rootObjectDefaultValue", workspaceTaskDataFlowParametersRootObjectDefaultValue },
    ///                         { "type", workspaceTaskDataFlowParametersType },
    ///                         { "typeName", workspaceTaskDataFlowParametersTypeName },
    ///                         { "usedFor", workspaceTaskDataFlowParametersUsedFor },
    ///                     },
    ///                 } },
    ///                 { "parentRef", new[]
    ///                 {
    ///                     
    ///                     {
    ///                         { "parent", workspaceTaskDataFlowParentRefParent },
    ///                         { "rootDocId", testRootDoc.Id },
    ///                     },
    ///                 } },
    ///                 { "targetFieldMapSummary", new[]
    ///                 {
    ///                     
    ///                     {
    ///                         { "fieldMap", workspaceTaskDataFlowTargetFieldMapSummaryFieldMap },
    ///                     },
    ///                 } },
    ///                 { "typedObjectMap", new[]
    ///                 {
    ///                     
    ///                     {
    ///                         { "typedObject", workspaceTaskDataFlowTypedObjectMapTypedObject },
    ///                     },
    ///                 } },
    ///             },
    ///         },
    ///         DataflowApplication = new[]
    ///         {
    ///             
    ///             {
    ///                 { "applicationId", testApplication.Id },
    ///                 { "compartmentId", compartmentId },
    ///                 { "configValues", new[]
    ///                 {
    ///                     
    ///                     {
    ///                         { "configParamValues", new[]
    ///                         {
    ///                             
    ///                             {
    ///                                 { "intValue", workspaceTaskDataflowApplicationConfigValuesConfigParamValuesIntValue },
    ///                                 { "objectValue", workspaceTaskDataflowApplicationConfigValuesConfigParamValuesObjectValue },
    ///                                 { "parameterValue", workspaceTaskDataflowApplicationConfigValuesConfigParamValuesParameterValue },
    ///                                 { "refValue", workspaceTaskDataflowApplicationConfigValuesConfigParamValuesRefValue },
    ///                                 { "rootObjectValue", workspaceTaskDataflowApplicationConfigValuesConfigParamValuesRootObjectValue },
    ///                                 { "stringValue", workspaceTaskDataflowApplicationConfigValuesConfigParamValuesStringValue },
    ///                             },
    ///                         } },
    ///                         { "parentRef", new[]
    ///                         {
    ///                             
    ///                             {
    ///                                 { "parent", workspaceTaskDataflowApplicationConfigValuesParentRefParent },
    ///                                 { "rootDocId", testRootDoc.Id },
    ///                             },
    ///                         } },
    ///                     },
    ///                 } },
    ///             },
    ///         },
    ///         Description = workspaceTaskDescription,
    ///         Endpoint = new[]
    ///         {
    ///             
    ///             {
    ///                 { "configValues", new[]
    ///                 {
    ///                     
    ///                     {
    ///                         { "configParamValues", new[]
    ///                         {
    ///                             
    ///                             {
    ///                                 { "intValue", workspaceTaskEndpointConfigValuesConfigParamValuesIntValue },
    ///                                 { "objectValue", workspaceTaskEndpointConfigValuesConfigParamValuesObjectValue },
    ///                                 { "parameterValue", workspaceTaskEndpointConfigValuesConfigParamValuesParameterValue },
    ///                                 { "refValue", workspaceTaskEndpointConfigValuesConfigParamValuesRefValue },
    ///                                 { "rootObjectValue", workspaceTaskEndpointConfigValuesConfigParamValuesRootObjectValue },
    ///                                 { "stringValue", workspaceTaskEndpointConfigValuesConfigParamValuesStringValue },
    ///                             },
    ///                         } },
    ///                         { "parentRef", new[]
    ///                         {
    ///                             
    ///                             {
    ///                                 { "parent", workspaceTaskEndpointConfigValuesParentRefParent },
    ///                                 { "rootDocId", testRootDoc.Id },
    ///                             },
    ///                         } },
    ///                     },
    ///                 } },
    ///                 { "exprString", workspaceTaskEndpointExprString },
    ///                 { "key", workspaceTaskEndpointKey },
    ///                 { "modelType", workspaceTaskEndpointModelType },
    ///                 { "modelVersion", workspaceTaskEndpointModelVersion },
    ///                 { "objectStatus", workspaceTaskEndpointObjectStatus },
    ///                 { "parentRef", new[]
    ///                 {
    ///                     
    ///                     {
    ///                         { "parent", workspaceTaskEndpointParentRefParent },
    ///                         { "rootDocId", testRootDoc.Id },
    ///                     },
    ///                 } },
    ///             },
    ///         },
    ///         ExecuteRestCallConfig = new Oci.DataIntegration.Inputs.WorkspaceTaskExecuteRestCallConfigArgs
    ///         {
    ///             ConfigValues = new Oci.DataIntegration.Inputs.WorkspaceTaskExecuteRestCallConfigConfigValuesArgs
    ///             {
    ///                 ConfigParamValues = new Oci.DataIntegration.Inputs.WorkspaceTaskExecuteRestCallConfigConfigValuesConfigParamValuesArgs
    ///                 {
    ///                     IntValue = workspaceTaskExecuteRestCallConfigConfigValuesConfigParamValuesIntValue,
    ///                     ObjectValue = workspaceTaskExecuteRestCallConfigConfigValuesConfigParamValuesObjectValue,
    ///                     ParameterValue = workspaceTaskExecuteRestCallConfigConfigValuesConfigParamValuesParameterValue,
    ///                     RefValue = workspaceTaskExecuteRestCallConfigConfigValuesConfigParamValuesRefValue,
    ///                     RootObjectValue = workspaceTaskExecuteRestCallConfigConfigValuesConfigParamValuesRootObjectValue,
    ///                     StringValue = workspaceTaskExecuteRestCallConfigConfigValuesConfigParamValuesStringValue,
    ///                 },
    ///                 ParentRef = new Oci.DataIntegration.Inputs.WorkspaceTaskExecuteRestCallConfigConfigValuesParentRefArgs
    ///                 {
    ///                     Parent = workspaceTaskExecuteRestCallConfigConfigValuesParentRefParent,
    ///                     RootDocId = testRootDoc.Id,
    ///                 },
    ///             },
    ///             MethodType = workspaceTaskExecuteRestCallConfigMethodType,
    ///             RequestHeaders = workspaceTaskExecuteRestCallConfigRequestHeaders,
    ///         },
    ///         Headers = workspaceTaskHeaders,
    ///         InputPorts = new[]
    ///         {
    ///             new Oci.DataIntegration.Inputs.WorkspaceTaskInputPortArgs
    ///             {
    ///                 ModelType = workspaceTaskInputPortsModelType,
    ///                 ConfigValues = new Oci.DataIntegration.Inputs.WorkspaceTaskInputPortConfigValuesArgs
    ///                 {
    ///                     ConfigParamValues = new Oci.DataIntegration.Inputs.WorkspaceTaskInputPortConfigValuesConfigParamValuesArgs
    ///                     {
    ///                         IntValue = workspaceTaskInputPortsConfigValuesConfigParamValuesIntValue,
    ///                         ObjectValue = workspaceTaskInputPortsConfigValuesConfigParamValuesObjectValue,
    ///                         ParameterValue = workspaceTaskInputPortsConfigValuesConfigParamValuesParameterValue,
    ///                         RefValue = workspaceTaskInputPortsConfigValuesConfigParamValuesRefValue,
    ///                         RootObjectValue = workspaceTaskInputPortsConfigValuesConfigParamValuesRootObjectValue,
    ///                         StringValue = workspaceTaskInputPortsConfigValuesConfigParamValuesStringValue,
    ///                     },
    ///                     ParentRef = new Oci.DataIntegration.Inputs.WorkspaceTaskInputPortConfigValuesParentRefArgs
    ///                     {
    ///                         Parent = workspaceTaskInputPortsConfigValuesParentRefParent,
    ///                         RootDocId = testRootDoc.Id,
    ///                     },
    ///                 },
    ///                 Description = workspaceTaskInputPortsDescription,
    ///                 Fields = workspaceTaskInputPortsFields,
    ///                 Key = workspaceTaskInputPortsKey,
    ///                 ModelVersion = workspaceTaskInputPortsModelVersion,
    ///                 Name = workspaceTaskInputPortsName,
    ///                 ObjectStatus = workspaceTaskInputPortsObjectStatus,
    ///                 ParentRef = new Oci.DataIntegration.Inputs.WorkspaceTaskInputPortParentRefArgs
    ///                 {
    ///                     Parent = workspaceTaskInputPortsParentRefParent,
    ///                     RootDocId = testRootDoc.Id,
    ///                 },
    ///                 PortType = workspaceTaskInputPortsPortType,
    ///             },
    ///         },
    ///         IsSingleLoad = workspaceTaskIsSingleLoad,
    ///         JsonData = workspaceTaskJsonData,
    ///         Key = workspaceTaskKey,
    ///         MethodType = workspaceTaskMethodType,
    ///         ModelVersion = workspaceTaskModelVersion,
    ///         ObjectStatus = workspaceTaskObjectStatus,
    ///         OpConfigValues = new Oci.DataIntegration.Inputs.WorkspaceTaskOpConfigValuesArgs
    ///         {
    ///             ConfigParamValues = new Oci.DataIntegration.Inputs.WorkspaceTaskOpConfigValuesConfigParamValuesArgs
    ///             {
    ///                 IntValue = workspaceTaskOpConfigValuesConfigParamValuesIntValue,
    ///                 ObjectValue = workspaceTaskOpConfigValuesConfigParamValuesObjectValue,
    ///                 ParameterValue = workspaceTaskOpConfigValuesConfigParamValuesParameterValue,
    ///                 RefValue = workspaceTaskOpConfigValuesConfigParamValuesRefValue,
    ///                 RootObjectValue = workspaceTaskOpConfigValuesConfigParamValuesRootObjectValue,
    ///                 StringValue = workspaceTaskOpConfigValuesConfigParamValuesStringValue,
    ///             },
    ///             ParentRef = new Oci.DataIntegration.Inputs.WorkspaceTaskOpConfigValuesParentRefArgs
    ///             {
    ///                 Parent = workspaceTaskOpConfigValuesParentRefParent,
    ///                 RootDocId = testRootDoc.Id,
    ///             },
    ///         },
    ///         Operation = workspaceTaskOperation,
    ///         OutputPorts = new[]
    ///         {
    ///             new Oci.DataIntegration.Inputs.WorkspaceTaskOutputPortArgs
    ///             {
    ///                 ModelType = workspaceTaskOutputPortsModelType,
    ///                 ConfigValues = new Oci.DataIntegration.Inputs.WorkspaceTaskOutputPortConfigValuesArgs
    ///                 {
    ///                     ConfigParamValues = new Oci.DataIntegration.Inputs.WorkspaceTaskOutputPortConfigValuesConfigParamValuesArgs
    ///                     {
    ///                         IntValue = workspaceTaskOutputPortsConfigValuesConfigParamValuesIntValue,
    ///                         ObjectValue = workspaceTaskOutputPortsConfigValuesConfigParamValuesObjectValue,
    ///                         ParameterValue = workspaceTaskOutputPortsConfigValuesConfigParamValuesParameterValue,
    ///                         RefValue = workspaceTaskOutputPortsConfigValuesConfigParamValuesRefValue,
    ///                         RootObjectValue = workspaceTaskOutputPortsConfigValuesConfigParamValuesRootObjectValue,
    ///                         StringValue = workspaceTaskOutputPortsConfigValuesConfigParamValuesStringValue,
    ///                     },
    ///                     ParentRef = new Oci.DataIntegration.Inputs.WorkspaceTaskOutputPortConfigValuesParentRefArgs
    ///                     {
    ///                         Parent = workspaceTaskOutputPortsConfigValuesParentRefParent,
    ///                         RootDocId = testRootDoc.Id,
    ///                     },
    ///                 },
    ///                 Description = workspaceTaskOutputPortsDescription,
    ///                 Fields = workspaceTaskOutputPortsFields,
    ///                 Key = workspaceTaskOutputPortsKey,
    ///                 ModelVersion = workspaceTaskOutputPortsModelVersion,
    ///                 Name = workspaceTaskOutputPortsName,
    ///                 ObjectStatus = workspaceTaskOutputPortsObjectStatus,
    ///                 ParentRef = new Oci.DataIntegration.Inputs.WorkspaceTaskOutputPortParentRefArgs
    ///                 {
    ///                     Parent = workspaceTaskOutputPortsParentRefParent,
    ///                     RootDocId = testRootDoc.Id,
    ///                 },
    ///                 PortType = workspaceTaskOutputPortsPortType,
    ///             },
    ///         },
    ///         ParallelLoadLimit = workspaceTaskParallelLoadLimit,
    ///         Parameters = new[]
    ///         {
    ///             new Oci.DataIntegration.Inputs.WorkspaceTaskParameterArgs
    ///             {
    ///                 ModelType = workspaceTaskParametersModelType,
    ///                 ConfigValues = new Oci.DataIntegration.Inputs.WorkspaceTaskParameterConfigValuesArgs
    ///                 {
    ///                     ConfigParamValues = new Oci.DataIntegration.Inputs.WorkspaceTaskParameterConfigValuesConfigParamValuesArgs
    ///                     {
    ///                         IntValue = workspaceTaskParametersConfigValuesConfigParamValuesIntValue,
    ///                         ObjectValue = workspaceTaskParametersConfigValuesConfigParamValuesObjectValue,
    ///                         ParameterValue = workspaceTaskParametersConfigValuesConfigParamValuesParameterValue,
    ///                         RefValue = workspaceTaskParametersConfigValuesConfigParamValuesRefValue,
    ///                         RootObjectValue = workspaceTaskParametersConfigValuesConfigParamValuesRootObjectValue,
    ///                         StringValue = workspaceTaskParametersConfigValuesConfigParamValuesStringValue,
    ///                     },
    ///                     ParentRef = new Oci.DataIntegration.Inputs.WorkspaceTaskParameterConfigValuesParentRefArgs
    ///                     {
    ///                         Parent = workspaceTaskParametersConfigValuesParentRefParent,
    ///                         RootDocId = testRootDoc.Id,
    ///                     },
    ///                 },
    ///                 DefaultValue = workspaceTaskParametersDefaultValue,
    ///                 Description = workspaceTaskParametersDescription,
    ///                 IsInput = workspaceTaskParametersIsInput,
    ///                 IsOutput = workspaceTaskParametersIsOutput,
    ///                 Key = workspaceTaskParametersKey,
    ///                 ModelVersion = workspaceTaskParametersModelVersion,
    ///                 Name = workspaceTaskParametersName,
    ///                 ObjectStatus = workspaceTaskParametersObjectStatus,
    ///                 OutputAggregationType = workspaceTaskParametersOutputAggregationType,
    ///                 ParentRef = new Oci.DataIntegration.Inputs.WorkspaceTaskParameterParentRefArgs
    ///                 {
    ///                     Parent = workspaceTaskParametersParentRefParent,
    ///                     RootDocId = testRootDoc.Id,
    ///                 },
    ///                 RootObjectDefaultValue = workspaceTaskParametersRootObjectDefaultValue,
    ///                 Type = workspaceTaskParametersType,
    ///                 TypeName = workspaceTaskParametersTypeName,
    ///                 UsedFor = workspaceTaskParametersUsedFor,
    ///             },
    ///         },
    ///         ParentRef = new Oci.DataIntegration.Inputs.WorkspaceTaskParentRefArgs
    ///         {
    ///             Parent = workspaceTaskParentRefParent,
    ///             RootDocId = testRootDoc.Id,
    ///         },
    ///         Pipeline = new[]
    ///         {
    ///             
    ///             {
    ///                 { "description", workspaceTaskPipelineDescription },
    ///                 { "flowConfigValues", new[]
    ///                 {
    ///                     
    ///                     {
    ///                         { "configParamValues", new[]
    ///                         {
    ///                             
    ///                             {
    ///                                 { "intValue", workspaceTaskPipelineFlowConfigValuesConfigParamValuesIntValue },
    ///                                 { "objectValue", workspaceTaskPipelineFlowConfigValuesConfigParamValuesObjectValue },
    ///                                 { "parameterValue", workspaceTaskPipelineFlowConfigValuesConfigParamValuesParameterValue },
    ///                                 { "refValue", workspaceTaskPipelineFlowConfigValuesConfigParamValuesRefValue },
    ///                                 { "rootObjectValue", workspaceTaskPipelineFlowConfigValuesConfigParamValuesRootObjectValue },
    ///                                 { "stringValue", workspaceTaskPipelineFlowConfigValuesConfigParamValuesStringValue },
    ///                             },
    ///                         } },
    ///                         { "parentRef", new[]
    ///                         {
    ///                             
    ///                             {
    ///                                 { "parent", workspaceTaskPipelineFlowConfigValuesParentRefParent },
    ///                                 { "rootDocId", testRootDoc.Id },
    ///                             },
    ///                         } },
    ///                     },
    ///                 } },
    ///                 { "identifier", workspaceTaskPipelineIdentifier },
    ///                 { "key", workspaceTaskPipelineKey },
    ///                 { "metadata", new[]
    ///                 {
    ///                     
    ///                     {
    ///                         { "aggregator", new[]
    ///                         {
    ///                             
    ///                             {
    ///                                 { "description", workspaceTaskPipelineMetadataAggregatorDescription },
    ///                                 { "identifier", workspaceTaskPipelineMetadataAggregatorIdentifier },
    ///                                 { "key", workspaceTaskPipelineMetadataAggregatorKey },
    ///                                 { "name", workspaceTaskPipelineMetadataAggregatorName },
    ///                                 { "type", workspaceTaskPipelineMetadataAggregatorType },
    ///                             },
    ///                         } },
    ///                         { "aggregatorKey", workspaceTaskPipelineMetadataAggregatorKey },
    ///                         { "countStatistics", new[]
    ///                         {
    ///                             
    ///                             {
    ///                                 { "objectTypeCountList", new[]
    ///                                 {
    ///                                     
    ///                                     {
    ///                                         { "objectCount", workspaceTaskPipelineMetadataCountStatisticsObjectTypeCountListObjectCount },
    ///                                         { "objectType", workspaceTaskPipelineMetadataCountStatisticsObjectTypeCountListObjectType },
    ///                                     },
    ///                                 } },
    ///                             },
    ///                         } },
    ///                         { "createdBy", workspaceTaskPipelineMetadataCreatedBy },
    ///                         { "createdByName", workspaceTaskPipelineMetadataCreatedByName },
    ///                         { "identifierPath", workspaceTaskPipelineMetadataIdentifierPath },
    ///                         { "infoFields", workspaceTaskPipelineMetadataInfoFields },
    ///                         { "isFavorite", workspaceTaskPipelineMetadataIsFavorite },
    ///                         { "labels", workspaceTaskPipelineMetadataLabels },
    ///                         { "registryVersion", workspaceTaskPipelineMetadataRegistryVersion },
    ///                         { "timeCreated", workspaceTaskPipelineMetadataTimeCreated },
    ///                         { "timeUpdated", workspaceTaskPipelineMetadataTimeUpdated },
    ///                         { "updatedBy", workspaceTaskPipelineMetadataUpdatedBy },
    ///                         { "updatedByName", workspaceTaskPipelineMetadataUpdatedByName },
    ///                     },
    ///                 } },
    ///                 { "modelType", workspaceTaskPipelineModelType },
    ///                 { "modelVersion", workspaceTaskPipelineModelVersion },
    ///                 { "name", workspaceTaskPipelineName },
    ///                 { "nodes", new[]
    ///                 {
    ///                     
    ///                     {
    ///                         { "configProviderDelegate", workspaceTaskPipelineNodesConfigProviderDelegate },
    ///                         { "description", workspaceTaskPipelineNodesDescription },
    ///                         { "inputLinks", new[]
    ///                         {
    ///                             
    ///                             {
    ///                                 { "description", workspaceTaskPipelineNodesInputLinksDescription },
    ///                                 { "fieldMap", workspaceTaskPipelineNodesInputLinksFieldMap },
    ///                                 { "fromLink", workspaceTaskPipelineNodesInputLinksFromLink },
    ///                                 { "key", workspaceTaskPipelineNodesInputLinksKey },
    ///                                 { "modelType", workspaceTaskPipelineNodesInputLinksModelType },
    ///                                 { "modelVersion", workspaceTaskPipelineNodesInputLinksModelVersion },
    ///                                 { "objectStatus", workspaceTaskPipelineNodesInputLinksObjectStatus },
    ///                                 { "parentRef", new[]
    ///                                 {
    ///                                     
    ///                                     {
    ///                                         { "parent", workspaceTaskPipelineNodesInputLinksParentRefParent },
    ///                                         { "rootDocId", testRootDoc.Id },
    ///                                     },
    ///                                 } },
    ///                                 { "port", workspaceTaskPipelineNodesInputLinksPort },
    ///                             },
    ///                         } },
    ///                         { "key", workspaceTaskPipelineNodesKey },
    ///                         { "modelType", workspaceTaskPipelineNodesModelType },
    ///                         { "modelVersion", workspaceTaskPipelineNodesModelVersion },
    ///                         { "name", workspaceTaskPipelineNodesName },
    ///                         { "objectStatus", workspaceTaskPipelineNodesObjectStatus },
    ///                         { "operator", workspaceTaskPipelineNodesOperator },
    ///                         { "outputLinks", new[]
    ///                         {
    ///                             
    ///                             {
    ///                                 { "description", workspaceTaskPipelineNodesOutputLinksDescription },
    ///                                 { "key", workspaceTaskPipelineNodesOutputLinksKey },
    ///                                 { "modelType", workspaceTaskPipelineNodesOutputLinksModelType },
    ///                                 { "modelVersion", workspaceTaskPipelineNodesOutputLinksModelVersion },
    ///                                 { "objectStatus", workspaceTaskPipelineNodesOutputLinksObjectStatus },
    ///                                 { "parentRef", new[]
    ///                                 {
    ///                                     
    ///                                     {
    ///                                         { "parent", workspaceTaskPipelineNodesOutputLinksParentRefParent },
    ///                                         { "rootDocId", testRootDoc.Id },
    ///                                     },
    ///                                 } },
    ///                                 { "port", workspaceTaskPipelineNodesOutputLinksPort },
    ///                                 { "toLinks", workspaceTaskPipelineNodesOutputLinksToLinks },
    ///                             },
    ///                         } },
    ///                         { "parentRef", new[]
    ///                         {
    ///                             
    ///                             {
    ///                                 { "parent", workspaceTaskPipelineNodesParentRefParent },
    ///                                 { "rootDocId", testRootDoc.Id },
    ///                             },
    ///                         } },
    ///                         { "uiProperties", new[]
    ///                         {
    ///                             
    ///                             {
    ///                                 { "coordinateX", workspaceTaskPipelineNodesUiPropertiesCoordinateX },
    ///                                 { "coordinateY", workspaceTaskPipelineNodesUiPropertiesCoordinateY },
    ///                             },
    ///                         } },
    ///                     },
    ///                 } },
    ///                 { "objectStatus", workspaceTaskPipelineObjectStatus },
    ///                 { "objectVersion", workspaceTaskPipelineObjectVersion },
    ///                 { "parameters", new[]
    ///                 {
    ///                     
    ///                     {
    ///                         { "configValues", new[]
    ///                         {
    ///                             
    ///                             {
    ///                                 { "configParamValues", new[]
    ///                                 {
    ///                                     
    ///                                     {
    ///                                         { "intValue", workspaceTaskPipelineParametersConfigValuesConfigParamValuesIntValue },
    ///                                         { "objectValue", workspaceTaskPipelineParametersConfigValuesConfigParamValuesObjectValue },
    ///                                         { "parameterValue", workspaceTaskPipelineParametersConfigValuesConfigParamValuesParameterValue },
    ///                                         { "refValue", workspaceTaskPipelineParametersConfigValuesConfigParamValuesRefValue },
    ///                                         { "rootObjectValue", workspaceTaskPipelineParametersConfigValuesConfigParamValuesRootObjectValue },
    ///                                         { "stringValue", workspaceTaskPipelineParametersConfigValuesConfigParamValuesStringValue },
    ///                                     },
    ///                                 } },
    ///                                 { "parentRef", new[]
    ///                                 {
    ///                                     
    ///                                     {
    ///                                         { "parent", workspaceTaskPipelineParametersConfigValuesParentRefParent },
    ///                                         { "rootDocId", testRootDoc.Id },
    ///                                     },
    ///                                 } },
    ///                             },
    ///                         } },
    ///                         { "defaultValue", workspaceTaskPipelineParametersDefaultValue },
    ///                         { "description", workspaceTaskPipelineParametersDescription },
    ///                         { "isInput", workspaceTaskPipelineParametersIsInput },
    ///                         { "isOutput", workspaceTaskPipelineParametersIsOutput },
    ///                         { "key", workspaceTaskPipelineParametersKey },
    ///                         { "modelType", workspaceTaskPipelineParametersModelType },
    ///                         { "modelVersion", workspaceTaskPipelineParametersModelVersion },
    ///                         { "name", workspaceTaskPipelineParametersName },
    ///                         { "objectStatus", workspaceTaskPipelineParametersObjectStatus },
    ///                         { "outputAggregationType", workspaceTaskPipelineParametersOutputAggregationType },
    ///                         { "parentRef", new[]
    ///                         {
    ///                             
    ///                             {
    ///                                 { "parent", workspaceTaskPipelineParametersParentRefParent },
    ///                                 { "rootDocId", testRootDoc.Id },
    ///                             },
    ///                         } },
    ///                         { "rootObjectDefaultValue", workspaceTaskPipelineParametersRootObjectDefaultValue },
    ///                         { "type", workspaceTaskPipelineParametersType },
    ///                         { "typeName", workspaceTaskPipelineParametersTypeName },
    ///                         { "usedFor", workspaceTaskPipelineParametersUsedFor },
    ///                     },
    ///                 } },
    ///                 { "parentRef", new[]
    ///                 {
    ///                     
    ///                     {
    ///                         { "parent", workspaceTaskPipelineParentRefParent },
    ///                         { "rootDocId", testRootDoc.Id },
    ///                     },
    ///                 } },
    ///                 { "variables", new[]
    ///                 {
    ///                     
    ///                     {
    ///                         { "configValues", new[]
    ///                         {
    ///                             
    ///                             {
    ///                                 { "configParamValues", new[]
    ///                                 {
    ///                                     
    ///                                     {
    ///                                         { "intValue", workspaceTaskPipelineVariablesConfigValuesConfigParamValuesIntValue },
    ///                                         { "objectValue", workspaceTaskPipelineVariablesConfigValuesConfigParamValuesObjectValue },
    ///                                         { "parameterValue", workspaceTaskPipelineVariablesConfigValuesConfigParamValuesParameterValue },
    ///                                         { "refValue", workspaceTaskPipelineVariablesConfigValuesConfigParamValuesRefValue },
    ///                                         { "rootObjectValue", workspaceTaskPipelineVariablesConfigValuesConfigParamValuesRootObjectValue },
    ///                                         { "stringValue", workspaceTaskPipelineVariablesConfigValuesConfigParamValuesStringValue },
    ///                                     },
    ///                                 } },
    ///                                 { "parentRef", new[]
    ///                                 {
    ///                                     
    ///                                     {
    ///                                         { "parent", workspaceTaskPipelineVariablesConfigValuesParentRefParent },
    ///                                         { "rootDocId", testRootDoc.Id },
    ///                                     },
    ///                                 } },
    ///                             },
    ///                         } },
    ///                         { "defaultValue", workspaceTaskPipelineVariablesDefaultValue },
    ///                         { "description", workspaceTaskPipelineVariablesDescription },
    ///                         { "identifier", workspaceTaskPipelineVariablesIdentifier },
    ///                         { "key", workspaceTaskPipelineVariablesKey },
    ///                         { "modelType", workspaceTaskPipelineVariablesModelType },
    ///                         { "modelVersion", workspaceTaskPipelineVariablesModelVersion },
    ///                         { "name", workspaceTaskPipelineVariablesName },
    ///                         { "objectStatus", workspaceTaskPipelineVariablesObjectStatus },
    ///                         { "objectVersion", workspaceTaskPipelineVariablesObjectVersion },
    ///                         { "parentRef", new[]
    ///                         {
    ///                             
    ///                             {
    ///                                 { "parent", workspaceTaskPipelineVariablesParentRefParent },
    ///                                 { "rootDocId", testRootDoc.Id },
    ///                             },
    ///                         } },
    ///                         { "rootObjectDefaultValue", new[]
    ///                         {
    ///                             
    ///                             {
    ///                                 { "key", workspaceTaskPipelineVariablesRootObjectDefaultValueKey },
    ///                                 { "modelType", workspaceTaskPipelineVariablesRootObjectDefaultValueModelType },
    ///                                 { "modelVersion", workspaceTaskPipelineVariablesRootObjectDefaultValueModelVersion },
    ///                                 { "objectStatus", workspaceTaskPipelineVariablesRootObjectDefaultValueObjectStatus },
    ///                                 { "parentRef", new[]
    ///                                 {
    ///                                     
    ///                                     {
    ///                                         { "parent", workspaceTaskPipelineVariablesRootObjectDefaultValueParentRefParent },
    ///                                         { "rootDocId", testRootDoc.Id },
    ///                                     },
    ///                                 } },
    ///                             },
    ///                         } },
    ///                         { "type", workspaceTaskPipelineVariablesType },
    ///                     },
    ///                 } },
    ///             },
    ///         },
    ///         PollRestCallConfig = new Oci.DataIntegration.Inputs.WorkspaceTaskPollRestCallConfigArgs
    ///         {
    ///             ConfigValues = new Oci.DataIntegration.Inputs.WorkspaceTaskPollRestCallConfigConfigValuesArgs
    ///             {
    ///                 ConfigParamValues = new Oci.DataIntegration.Inputs.WorkspaceTaskPollRestCallConfigConfigValuesConfigParamValuesArgs
    ///                 {
    ///                     IntValue = workspaceTaskPollRestCallConfigConfigValuesConfigParamValuesIntValue,
    ///                     ObjectValue = workspaceTaskPollRestCallConfigConfigValuesConfigParamValuesObjectValue,
    ///                     ParameterValue = workspaceTaskPollRestCallConfigConfigValuesConfigParamValuesParameterValue,
    ///                     RefValue = workspaceTaskPollRestCallConfigConfigValuesConfigParamValuesRefValue,
    ///                     RootObjectValue = workspaceTaskPollRestCallConfigConfigValuesConfigParamValuesRootObjectValue,
    ///                     StringValue = workspaceTaskPollRestCallConfigConfigValuesConfigParamValuesStringValue,
    ///                 },
    ///                 ParentRef = new Oci.DataIntegration.Inputs.WorkspaceTaskPollRestCallConfigConfigValuesParentRefArgs
    ///                 {
    ///                     Parent = workspaceTaskPollRestCallConfigConfigValuesParentRefParent,
    ///                     RootDocId = testRootDoc.Id,
    ///                 },
    ///             },
    ///             MethodType = workspaceTaskPollRestCallConfigMethodType,
    ///             RequestHeaders = workspaceTaskPollRestCallConfigRequestHeaders,
    ///         },
    ///         Script = new[]
    ///         {
    ///             
    ///             {
    ///                 { "key", workspaceTaskScriptKey },
    ///                 { "modelType", workspaceTaskScriptModelType },
    ///                 { "modelVersion", workspaceTaskScriptModelVersion },
    ///                 { "objectStatus", workspaceTaskScriptObjectStatus },
    ///                 { "parentRef", new[]
    ///                 {
    ///                     
    ///                     {
    ///                         { "parent", workspaceTaskScriptParentRefParent },
    ///                         { "rootDocId", testRootDoc.Id },
    ///                     },
    ///                 } },
    ///             },
    ///         },
    ///         SqlScriptType = workspaceTaskSqlScriptType,
    ///         TypedExpressions = new[]
    ///         {
    ///             new Oci.DataIntegration.Inputs.WorkspaceTaskTypedExpressionArgs
    ///             {
    ///                 ConfigValues = new Oci.DataIntegration.Inputs.WorkspaceTaskTypedExpressionConfigValuesArgs
    ///                 {
    ///                     ConfigParamValues = new Oci.DataIntegration.Inputs.WorkspaceTaskTypedExpressionConfigValuesConfigParamValuesArgs
    ///                     {
    ///                         IntValue = workspaceTaskTypedExpressionsConfigValuesConfigParamValuesIntValue,
    ///                         ObjectValue = workspaceTaskTypedExpressionsConfigValuesConfigParamValuesObjectValue,
    ///                         ParameterValue = workspaceTaskTypedExpressionsConfigValuesConfigParamValuesParameterValue,
    ///                         RefValue = workspaceTaskTypedExpressionsConfigValuesConfigParamValuesRefValue,
    ///                         RootObjectValue = workspaceTaskTypedExpressionsConfigValuesConfigParamValuesRootObjectValue,
    ///                         StringValue = workspaceTaskTypedExpressionsConfigValuesConfigParamValuesStringValue,
    ///                     },
    ///                     ParentRef = new Oci.DataIntegration.Inputs.WorkspaceTaskTypedExpressionConfigValuesParentRefArgs
    ///                     {
    ///                         Parent = workspaceTaskTypedExpressionsConfigValuesParentRefParent,
    ///                         RootDocId = testRootDoc.Id,
    ///                     },
    ///                 },
    ///                 Description = workspaceTaskTypedExpressionsDescription,
    ///                 Expression = workspaceTaskTypedExpressionsExpression,
    ///                 Key = workspaceTaskTypedExpressionsKey,
    ///                 ModelType = workspaceTaskTypedExpressionsModelType,
    ///                 ModelVersion = workspaceTaskTypedExpressionsModelVersion,
    ///                 Name = workspaceTaskTypedExpressionsName,
    ///                 ObjectStatus = workspaceTaskTypedExpressionsObjectStatus,
    ///                 ParentRef = new Oci.DataIntegration.Inputs.WorkspaceTaskTypedExpressionParentRefArgs
    ///                 {
    ///                     Parent = workspaceTaskTypedExpressionsParentRefParent,
    ///                     RootDocId = testRootDoc.Id,
    ///                 },
    ///                 Type = workspaceTaskTypedExpressionsType,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// WorkspaceTasks can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:DataIntegration/workspaceTask:WorkspaceTask test_workspace_task "workspaces/{workspaceId}/tasks/{taskKey}"
    /// ```
    /// </summary>
    [OciResourceType("oci:DataIntegration/workspaceTask:WorkspaceTask")]
    public partial class WorkspaceTask : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) The REST invocation pattern to use. ASYNC_OCI_WORKREQUEST is being deprecated as well as cancelEndpoint/MethodType.
        /// </summary>
        [Output("apiCallMode")]
        public Output<string> ApiCallMode { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Authentication configuration for Generic REST invocation.
        /// </summary>
        [Output("authConfig")]
        public Output<Outputs.WorkspaceTaskAuthConfig> AuthConfig { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The REST API configuration for cancelling the task.
        /// </summary>
        [Output("cancelRestCallConfig")]
        public Output<Outputs.WorkspaceTaskCancelRestCallConfig> CancelRestCallConfig { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The type to create a config provider.
        /// </summary>
        [Output("configProviderDelegate")]
        public Output<Outputs.WorkspaceTaskConfigProviderDelegate> ConfigProviderDelegate { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Detailed description for the object.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The REST API configuration for execution.
        /// </summary>
        [Output("executeRestCallConfig")]
        public Output<Outputs.WorkspaceTaskExecuteRestCallConfig> ExecuteRestCallConfig { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
        /// </summary>
        [Output("identifier")]
        public Output<string> Identifier { get; private set; } = null!;

        /// <summary>
        /// (Updatable) An array of input ports.
        /// </summary>
        [Output("inputPorts")]
        public Output<ImmutableArray<Outputs.WorkspaceTaskInputPort>> InputPorts { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defines whether Data Loader task is used for single load or multiple
        /// </summary>
        [Output("isSingleLoad")]
        public Output<bool> IsSingleLoad { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Generated key that can be used in API calls to identify task. On scenarios where reference to the task is needed, a value can be passed in create.
        /// </summary>
        [Output("key")]
        public Output<string> Key { get; private set; } = null!;

        /// <summary>
        /// A key map. If provided, key is replaced with generated key. This structure provides mapping between user provided key and generated key.
        /// </summary>
        [Output("keyMap")]
        public Output<ImmutableDictionary<string, string>> KeyMap { get; private set; } = null!;

        /// <summary>
        /// A summary type containing information about the object including its key, name and when/who created/updated it.
        /// </summary>
        [Output("metadatas")]
        public Output<ImmutableArray<Outputs.WorkspaceTaskMetadata>> Metadatas { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The type of the task.
        /// </summary>
        [Output("modelType")]
        public Output<string> ModelType { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The object's model version.
        /// </summary>
        [Output("modelVersion")]
        public Output<string> ModelVersion { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
        /// </summary>
        [Output("objectStatus")]
        public Output<int> ObjectStatus { get; private set; } = null!;

        /// <summary>
        /// This is used by the service for optimistic locking of the object, to prevent multiple users from simultaneously updating the object.
        /// </summary>
        [Output("objectVersion")]
        public Output<int> ObjectVersion { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Configuration values can be string, objects, or parameters.
        /// </summary>
        [Output("opConfigValues")]
        public Output<Outputs.WorkspaceTaskOpConfigValues> OpConfigValues { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Describes the shape of the execution result
        /// </summary>
        [Output("operation")]
        public Output<string> Operation { get; private set; } = null!;

        /// <summary>
        /// (Updatable) An array of output ports.
        /// </summary>
        [Output("outputPorts")]
        public Output<ImmutableArray<Outputs.WorkspaceTaskOutputPort>> OutputPorts { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defines the number of entities being loaded in parallel at a time for a Data Loader task
        /// </summary>
        [Output("parallelLoadLimit")]
        public Output<int> ParallelLoadLimit { get; private set; } = null!;

        /// <summary>
        /// (Updatable) An array of parameters.
        /// </summary>
        [Output("parameters")]
        public Output<ImmutableArray<Outputs.WorkspaceTaskParameter>> Parameters { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A reference to the object's parent.
        /// </summary>
        [Output("parentRef")]
        public Output<Outputs.WorkspaceTaskParentRef> ParentRef { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The REST API configuration for polling.
        /// </summary>
        [Output("pollRestCallConfig")]
        public Output<Outputs.WorkspaceTaskPollRestCallConfig> PollRestCallConfig { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Information about the object and its parent.
        /// </summary>
        [Output("registryMetadata")]
        public Output<Outputs.WorkspaceTaskRegistryMetadata> RegistryMetadata { get; private set; } = null!;

        /// <summary>
        /// (Updatable) List of typed expressions.
        /// </summary>
        [Output("typedExpressions")]
        public Output<ImmutableArray<Outputs.WorkspaceTaskTypedExpression>> TypedExpressions { get; private set; } = null!;

        /// <summary>
        /// The workspace ID.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("workspaceId")]
        public Output<string> WorkspaceId { get; private set; } = null!;


        /// <summary>
        /// Create a WorkspaceTask resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WorkspaceTask(string name, WorkspaceTaskArgs args, CustomResourceOptions? options = null)
            : base("oci:DataIntegration/workspaceTask:WorkspaceTask", name, args ?? new WorkspaceTaskArgs(), MakeResourceOptions(options, ""))
        {
        }

        private WorkspaceTask(string name, Input<string> id, WorkspaceTaskState? state = null, CustomResourceOptions? options = null)
            : base("oci:DataIntegration/workspaceTask:WorkspaceTask", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WorkspaceTask resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WorkspaceTask Get(string name, Input<string> id, WorkspaceTaskState? state = null, CustomResourceOptions? options = null)
        {
            return new WorkspaceTask(name, id, state, options);
        }
    }

    public sealed class WorkspaceTaskArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The REST invocation pattern to use. ASYNC_OCI_WORKREQUEST is being deprecated as well as cancelEndpoint/MethodType.
        /// </summary>
        [Input("apiCallMode")]
        public Input<string>? ApiCallMode { get; set; }

        /// <summary>
        /// (Updatable) Authentication configuration for Generic REST invocation.
        /// </summary>
        [Input("authConfig")]
        public Input<Inputs.WorkspaceTaskAuthConfigArgs>? AuthConfig { get; set; }

        /// <summary>
        /// (Updatable) The REST API configuration for cancelling the task.
        /// </summary>
        [Input("cancelRestCallConfig")]
        public Input<Inputs.WorkspaceTaskCancelRestCallConfigArgs>? CancelRestCallConfig { get; set; }

        /// <summary>
        /// (Updatable) The type to create a config provider.
        /// </summary>
        [Input("configProviderDelegate")]
        public Input<Inputs.WorkspaceTaskConfigProviderDelegateArgs>? ConfigProviderDelegate { get; set; }

        /// <summary>
        /// (Updatable) Detailed description for the object.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) The REST API configuration for execution.
        /// </summary>
        [Input("executeRestCallConfig")]
        public Input<Inputs.WorkspaceTaskExecuteRestCallConfigArgs>? ExecuteRestCallConfig { get; set; }

        /// <summary>
        /// (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
        /// </summary>
        [Input("identifier", required: true)]
        public Input<string> Identifier { get; set; } = null!;

        [Input("inputPorts")]
        private InputList<Inputs.WorkspaceTaskInputPortArgs>? _inputPorts;

        /// <summary>
        /// (Updatable) An array of input ports.
        /// </summary>
        public InputList<Inputs.WorkspaceTaskInputPortArgs> InputPorts
        {
            get => _inputPorts ?? (_inputPorts = new InputList<Inputs.WorkspaceTaskInputPortArgs>());
            set => _inputPorts = value;
        }

        /// <summary>
        /// (Updatable) Defines whether Data Loader task is used for single load or multiple
        /// </summary>
        [Input("isSingleLoad")]
        public Input<bool>? IsSingleLoad { get; set; }

        /// <summary>
        /// (Updatable) Generated key that can be used in API calls to identify task. On scenarios where reference to the task is needed, a value can be passed in create.
        /// </summary>
        [Input("key")]
        public Input<string>? Key { get; set; }

        /// <summary>
        /// (Updatable) The type of the task.
        /// </summary>
        [Input("modelType", required: true)]
        public Input<string> ModelType { get; set; } = null!;

        /// <summary>
        /// (Updatable) The object's model version.
        /// </summary>
        [Input("modelVersion")]
        public Input<string>? ModelVersion { get; set; }

        /// <summary>
        /// (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
        /// </summary>
        [Input("objectStatus")]
        public Input<int>? ObjectStatus { get; set; }

        /// <summary>
        /// (Updatable) Configuration values can be string, objects, or parameters.
        /// </summary>
        [Input("opConfigValues")]
        public Input<Inputs.WorkspaceTaskOpConfigValuesArgs>? OpConfigValues { get; set; }

        /// <summary>
        /// (Updatable) Describes the shape of the execution result
        /// </summary>
        [Input("operation")]
        public Input<string>? Operation { get; set; }

        [Input("outputPorts")]
        private InputList<Inputs.WorkspaceTaskOutputPortArgs>? _outputPorts;

        /// <summary>
        /// (Updatable) An array of output ports.
        /// </summary>
        public InputList<Inputs.WorkspaceTaskOutputPortArgs> OutputPorts
        {
            get => _outputPorts ?? (_outputPorts = new InputList<Inputs.WorkspaceTaskOutputPortArgs>());
            set => _outputPorts = value;
        }

        /// <summary>
        /// (Updatable) Defines the number of entities being loaded in parallel at a time for a Data Loader task
        /// </summary>
        [Input("parallelLoadLimit")]
        public Input<int>? ParallelLoadLimit { get; set; }

        [Input("parameters")]
        private InputList<Inputs.WorkspaceTaskParameterArgs>? _parameters;

        /// <summary>
        /// (Updatable) An array of parameters.
        /// </summary>
        public InputList<Inputs.WorkspaceTaskParameterArgs> Parameters
        {
            get => _parameters ?? (_parameters = new InputList<Inputs.WorkspaceTaskParameterArgs>());
            set => _parameters = value;
        }

        /// <summary>
        /// (Updatable) A reference to the object's parent.
        /// </summary>
        [Input("parentRef")]
        public Input<Inputs.WorkspaceTaskParentRefArgs>? ParentRef { get; set; }

        /// <summary>
        /// (Updatable) The REST API configuration for polling.
        /// </summary>
        [Input("pollRestCallConfig")]
        public Input<Inputs.WorkspaceTaskPollRestCallConfigArgs>? PollRestCallConfig { get; set; }

        /// <summary>
        /// (Updatable) Information about the object and its parent.
        /// </summary>
        [Input("registryMetadata", required: true)]
        public Input<Inputs.WorkspaceTaskRegistryMetadataArgs> RegistryMetadata { get; set; } = null!;

        [Input("typedExpressions")]
        private InputList<Inputs.WorkspaceTaskTypedExpressionArgs>? _typedExpressions;

        /// <summary>
        /// (Updatable) List of typed expressions.
        /// </summary>
        public InputList<Inputs.WorkspaceTaskTypedExpressionArgs> TypedExpressions
        {
            get => _typedExpressions ?? (_typedExpressions = new InputList<Inputs.WorkspaceTaskTypedExpressionArgs>());
            set => _typedExpressions = value;
        }

        /// <summary>
        /// The workspace ID.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("workspaceId", required: true)]
        public Input<string> WorkspaceId { get; set; } = null!;

        public WorkspaceTaskArgs()
        {
        }
        public static new WorkspaceTaskArgs Empty => new WorkspaceTaskArgs();
    }

    public sealed class WorkspaceTaskState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The REST invocation pattern to use. ASYNC_OCI_WORKREQUEST is being deprecated as well as cancelEndpoint/MethodType.
        /// </summary>
        [Input("apiCallMode")]
        public Input<string>? ApiCallMode { get; set; }

        /// <summary>
        /// (Updatable) Authentication configuration for Generic REST invocation.
        /// </summary>
        [Input("authConfig")]
        public Input<Inputs.WorkspaceTaskAuthConfigGetArgs>? AuthConfig { get; set; }

        /// <summary>
        /// (Updatable) The REST API configuration for cancelling the task.
        /// </summary>
        [Input("cancelRestCallConfig")]
        public Input<Inputs.WorkspaceTaskCancelRestCallConfigGetArgs>? CancelRestCallConfig { get; set; }

        /// <summary>
        /// (Updatable) The type to create a config provider.
        /// </summary>
        [Input("configProviderDelegate")]
        public Input<Inputs.WorkspaceTaskConfigProviderDelegateGetArgs>? ConfigProviderDelegate { get; set; }

        /// <summary>
        /// (Updatable) Detailed description for the object.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) The REST API configuration for execution.
        /// </summary>
        [Input("executeRestCallConfig")]
        public Input<Inputs.WorkspaceTaskExecuteRestCallConfigGetArgs>? ExecuteRestCallConfig { get; set; }

        /// <summary>
        /// (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
        /// </summary>
        [Input("identifier")]
        public Input<string>? Identifier { get; set; }

        [Input("inputPorts")]
        private InputList<Inputs.WorkspaceTaskInputPortGetArgs>? _inputPorts;

        /// <summary>
        /// (Updatable) An array of input ports.
        /// </summary>
        public InputList<Inputs.WorkspaceTaskInputPortGetArgs> InputPorts
        {
            get => _inputPorts ?? (_inputPorts = new InputList<Inputs.WorkspaceTaskInputPortGetArgs>());
            set => _inputPorts = value;
        }

        /// <summary>
        /// (Updatable) Defines whether Data Loader task is used for single load or multiple
        /// </summary>
        [Input("isSingleLoad")]
        public Input<bool>? IsSingleLoad { get; set; }

        /// <summary>
        /// (Updatable) Generated key that can be used in API calls to identify task. On scenarios where reference to the task is needed, a value can be passed in create.
        /// </summary>
        [Input("key")]
        public Input<string>? Key { get; set; }

        [Input("keyMap")]
        private InputMap<string>? _keyMap;

        /// <summary>
        /// A key map. If provided, key is replaced with generated key. This structure provides mapping between user provided key and generated key.
        /// </summary>
        public InputMap<string> KeyMap
        {
            get => _keyMap ?? (_keyMap = new InputMap<string>());
            set => _keyMap = value;
        }

        [Input("metadatas")]
        private InputList<Inputs.WorkspaceTaskMetadataGetArgs>? _metadatas;

        /// <summary>
        /// A summary type containing information about the object including its key, name and when/who created/updated it.
        /// </summary>
        public InputList<Inputs.WorkspaceTaskMetadataGetArgs> Metadatas
        {
            get => _metadatas ?? (_metadatas = new InputList<Inputs.WorkspaceTaskMetadataGetArgs>());
            set => _metadatas = value;
        }

        /// <summary>
        /// (Updatable) The type of the task.
        /// </summary>
        [Input("modelType")]
        public Input<string>? ModelType { get; set; }

        /// <summary>
        /// (Updatable) The object's model version.
        /// </summary>
        [Input("modelVersion")]
        public Input<string>? ModelVersion { get; set; }

        /// <summary>
        /// (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
        /// </summary>
        [Input("objectStatus")]
        public Input<int>? ObjectStatus { get; set; }

        /// <summary>
        /// This is used by the service for optimistic locking of the object, to prevent multiple users from simultaneously updating the object.
        /// </summary>
        [Input("objectVersion")]
        public Input<int>? ObjectVersion { get; set; }

        /// <summary>
        /// (Updatable) Configuration values can be string, objects, or parameters.
        /// </summary>
        [Input("opConfigValues")]
        public Input<Inputs.WorkspaceTaskOpConfigValuesGetArgs>? OpConfigValues { get; set; }

        /// <summary>
        /// (Updatable) Describes the shape of the execution result
        /// </summary>
        [Input("operation")]
        public Input<string>? Operation { get; set; }

        [Input("outputPorts")]
        private InputList<Inputs.WorkspaceTaskOutputPortGetArgs>? _outputPorts;

        /// <summary>
        /// (Updatable) An array of output ports.
        /// </summary>
        public InputList<Inputs.WorkspaceTaskOutputPortGetArgs> OutputPorts
        {
            get => _outputPorts ?? (_outputPorts = new InputList<Inputs.WorkspaceTaskOutputPortGetArgs>());
            set => _outputPorts = value;
        }

        /// <summary>
        /// (Updatable) Defines the number of entities being loaded in parallel at a time for a Data Loader task
        /// </summary>
        [Input("parallelLoadLimit")]
        public Input<int>? ParallelLoadLimit { get; set; }

        [Input("parameters")]
        private InputList<Inputs.WorkspaceTaskParameterGetArgs>? _parameters;

        /// <summary>
        /// (Updatable) An array of parameters.
        /// </summary>
        public InputList<Inputs.WorkspaceTaskParameterGetArgs> Parameters
        {
            get => _parameters ?? (_parameters = new InputList<Inputs.WorkspaceTaskParameterGetArgs>());
            set => _parameters = value;
        }

        /// <summary>
        /// (Updatable) A reference to the object's parent.
        /// </summary>
        [Input("parentRef")]
        public Input<Inputs.WorkspaceTaskParentRefGetArgs>? ParentRef { get; set; }

        /// <summary>
        /// (Updatable) The REST API configuration for polling.
        /// </summary>
        [Input("pollRestCallConfig")]
        public Input<Inputs.WorkspaceTaskPollRestCallConfigGetArgs>? PollRestCallConfig { get; set; }

        /// <summary>
        /// (Updatable) Information about the object and its parent.
        /// </summary>
        [Input("registryMetadata")]
        public Input<Inputs.WorkspaceTaskRegistryMetadataGetArgs>? RegistryMetadata { get; set; }

        [Input("typedExpressions")]
        private InputList<Inputs.WorkspaceTaskTypedExpressionGetArgs>? _typedExpressions;

        /// <summary>
        /// (Updatable) List of typed expressions.
        /// </summary>
        public InputList<Inputs.WorkspaceTaskTypedExpressionGetArgs> TypedExpressions
        {
            get => _typedExpressions ?? (_typedExpressions = new InputList<Inputs.WorkspaceTaskTypedExpressionGetArgs>());
            set => _typedExpressions = value;
        }

        /// <summary>
        /// The workspace ID.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("workspaceId")]
        public Input<string>? WorkspaceId { get; set; }

        public WorkspaceTaskState()
        {
        }
        public static new WorkspaceTaskState Empty => new WorkspaceTaskState();
    }
}
