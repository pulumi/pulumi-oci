// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataLabellingService
{
    public static class GetAnnotationFormat
    {
        /// <summary>
        /// This data source provides details about a specific Annotation Format resource in Oracle Cloud Infrastructure Data Labeling Service service.
        /// 
        /// These are a static list in a given region.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAnnotationFormat = Oci.DataLabellingService.GetAnnotationFormat.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetAnnotationFormatResult> InvokeAsync(GetAnnotationFormatArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAnnotationFormatResult>("oci:DataLabellingService/getAnnotationFormat:getAnnotationFormat", args ?? new GetAnnotationFormatArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Annotation Format resource in Oracle Cloud Infrastructure Data Labeling Service service.
        /// 
        /// These are a static list in a given region.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAnnotationFormat = Oci.DataLabellingService.GetAnnotationFormat.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAnnotationFormatResult> Invoke(GetAnnotationFormatInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAnnotationFormatResult>("oci:DataLabellingService/getAnnotationFormat:getAnnotationFormat", args ?? new GetAnnotationFormatInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAnnotationFormatArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        public GetAnnotationFormatArgs()
        {
        }
        public static new GetAnnotationFormatArgs Empty => new GetAnnotationFormatArgs();
    }

    public sealed class GetAnnotationFormatInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        public GetAnnotationFormatInvokeArgs()
        {
        }
        public static new GetAnnotationFormatInvokeArgs Empty => new GetAnnotationFormatInvokeArgs();
    }


    [OutputType]
    public sealed class GetAnnotationFormatResult
    {
        public readonly string CompartmentId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// List of annotation formats.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAnnotationFormatItemResult> Items;

        [OutputConstructor]
        private GetAnnotationFormatResult(
            string compartmentId,

            string id,

            ImmutableArray<Outputs.GetAnnotationFormatItemResult> items)
        {
            CompartmentId = compartmentId;
            Id = id;
            Items = items;
        }
    }
}
