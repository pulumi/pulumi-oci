// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataLabellingService
{
    public static class GetAnnotationFormats
    {
        /// <summary>
        /// This data source provides the list of Annotation Formats in Oracle Cloud Infrastructure Data Labeling Service service.
        /// 
        /// These are a static list in a given region.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAnnotationFormats = Oci.DataLabellingService.GetAnnotationFormats.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetAnnotationFormatsResult> InvokeAsync(GetAnnotationFormatsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAnnotationFormatsResult>("oci:DataLabellingService/getAnnotationFormats:getAnnotationFormats", args ?? new GetAnnotationFormatsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Annotation Formats in Oracle Cloud Infrastructure Data Labeling Service service.
        /// 
        /// These are a static list in a given region.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAnnotationFormats = Oci.DataLabellingService.GetAnnotationFormats.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetAnnotationFormatsResult> Invoke(GetAnnotationFormatsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAnnotationFormatsResult>("oci:DataLabellingService/getAnnotationFormats:getAnnotationFormats", args ?? new GetAnnotationFormatsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAnnotationFormatsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetAnnotationFormatsFilterArgs>? _filters;
        public List<Inputs.GetAnnotationFormatsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetAnnotationFormatsFilterArgs>());
            set => _filters = value;
        }

        public GetAnnotationFormatsArgs()
        {
        }
        public static new GetAnnotationFormatsArgs Empty => new GetAnnotationFormatsArgs();
    }

    public sealed class GetAnnotationFormatsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetAnnotationFormatsFilterInputArgs>? _filters;
        public InputList<Inputs.GetAnnotationFormatsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetAnnotationFormatsFilterInputArgs>());
            set => _filters = value;
        }

        public GetAnnotationFormatsInvokeArgs()
        {
        }
        public static new GetAnnotationFormatsInvokeArgs Empty => new GetAnnotationFormatsInvokeArgs();
    }


    [OutputType]
    public sealed class GetAnnotationFormatsResult
    {
        /// <summary>
        /// The list of annotation_format_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAnnotationFormatsAnnotationFormatCollectionResult> AnnotationFormatCollections;
        public readonly string CompartmentId;
        public readonly ImmutableArray<Outputs.GetAnnotationFormatsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetAnnotationFormatsResult(
            ImmutableArray<Outputs.GetAnnotationFormatsAnnotationFormatCollectionResult> annotationFormatCollections,

            string compartmentId,

            ImmutableArray<Outputs.GetAnnotationFormatsFilterResult> filters,

            string id)
        {
            AnnotationFormatCollections = annotationFormatCollections;
            CompartmentId = compartmentId;
            Filters = filters;
            Id = id;
        }
    }
}
