// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataLabellingService.Outputs
{

    [OutputType]
    public sealed class GetDatasetsDatasetCollectionItemResult
    {
        /// <summary>
        /// A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> AdditionalProperties;
        /// <summary>
        /// A filter to return only resources that match the entire annotation format given.
        /// </summary>
        public readonly string AnnotationFormat;
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// It specifies how to process the data. Supported formats include DOCUMENT, IMAGE, and TEXT.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDatasetsDatasetCollectionItemDatasetFormatDetailResult> DatasetFormatDetails;
        /// <summary>
        /// This allows the customer to specify the source of the dataset.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDatasetsDatasetCollectionItemDatasetSourceDetailResult> DatasetSourceDetails;
        /// <summary>
        /// The defined tags for this resource. Each key is predefined and scoped to a namespace. For example: `{"foo-namespace": {"bar-key": "value"}}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// A user provided description of the dataset
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// Unique Dataset OCID
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Initial import dataset configuration. Allows user to create dataset from existing dataset files.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDatasetsDatasetCollectionItemInitialImportDatasetConfigurationResult> InitialImportDatasetConfigurations;
        /// <summary>
        /// The initial generate records configuration. It generates records from the dataset's source.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDatasetsDatasetCollectionItemInitialRecordGenerationConfigurationResult> InitialRecordGenerationConfigurations;
        /// <summary>
        /// An ordered collection of labels that are unique by name.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDatasetsDatasetCollectionItemLabelSetResult> LabelSets;
        /// <summary>
        /// The labeling instructions for human labelers in rich text format
        /// </summary>
        public readonly string LabelingInstructions;
        /// <summary>
        /// A message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in FAILED or NEEDS_ATTENTION state.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// The sub-state of the dataset. IMPORT_DATASET - The dataset is being imported.
        /// </summary>
        public readonly string LifecycleSubstate;
        /// <summary>
        /// A filter to return only resources whose lifecycleState matches this query param.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The date and time the resource was created, in the timestamp format defined by RFC3339.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The date and time the resource was last updated, in the timestamp format defined by RFC3339.
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetDatasetsDatasetCollectionItemResult(
            ImmutableDictionary<string, string> additionalProperties,

            string annotationFormat,

            string compartmentId,

            ImmutableArray<Outputs.GetDatasetsDatasetCollectionItemDatasetFormatDetailResult> datasetFormatDetails,

            ImmutableArray<Outputs.GetDatasetsDatasetCollectionItemDatasetSourceDetailResult> datasetSourceDetails,

            ImmutableDictionary<string, string> definedTags,

            string description,

            string displayName,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            ImmutableArray<Outputs.GetDatasetsDatasetCollectionItemInitialImportDatasetConfigurationResult> initialImportDatasetConfigurations,

            ImmutableArray<Outputs.GetDatasetsDatasetCollectionItemInitialRecordGenerationConfigurationResult> initialRecordGenerationConfigurations,

            ImmutableArray<Outputs.GetDatasetsDatasetCollectionItemLabelSetResult> labelSets,

            string labelingInstructions,

            string lifecycleDetails,

            string lifecycleSubstate,

            string state,

            string timeCreated,

            string timeUpdated)
        {
            AdditionalProperties = additionalProperties;
            AnnotationFormat = annotationFormat;
            CompartmentId = compartmentId;
            DatasetFormatDetails = datasetFormatDetails;
            DatasetSourceDetails = datasetSourceDetails;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            InitialImportDatasetConfigurations = initialImportDatasetConfigurations;
            InitialRecordGenerationConfigurations = initialRecordGenerationConfigurations;
            LabelSets = labelSets;
            LabelingInstructions = labelingInstructions;
            LifecycleDetails = lifecycleDetails;
            LifecycleSubstate = lifecycleSubstate;
            State = state;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
