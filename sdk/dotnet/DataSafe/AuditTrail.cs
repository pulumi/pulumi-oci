// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe
{
    /// <summary>
    /// This resource provides the Audit Trail resource in Oracle Cloud Infrastructure Data Safe service.
    /// 
    /// Updates one or more attributes of the specified audit trail.
    /// 
    /// ## Import
    /// 
    /// AuditTrails can be imported using the `id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import oci:DataSafe/auditTrail:AuditTrail test_audit_trail "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:DataSafe/auditTrail:AuditTrail")]
    public partial class AuditTrail : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The date from which the audit trail must start collecting data, in the format defined by RFC3339.
        /// </summary>
        [Output("auditCollectionStartTime")]
        public Output<string> AuditCollectionStartTime { get; private set; } = null!;

        /// <summary>
        /// The OCID of the  parent audit.
        /// </summary>
        [Output("auditProfileId")]
        public Output<string> AuditProfileId { get; private set; } = null!;

        /// <summary>
        /// The OCID of the audit trail.
        /// </summary>
        [Output("auditTrailId")]
        public Output<string> AuditTrailId { get; private set; } = null!;

        /// <summary>
        /// The OCID of the compartment that contains the audit trail and is the same as the compartment of the audit profile resource.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, object>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The description of the audit trail.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The display name of the audit trail. The name does not have to be unique, and it's changeable.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, object>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Indicates if auto purge is enabled on the target database, which helps delete audit data in the target database every seven days so that the database's audit trail does not become too large.
        /// </summary>
        [Output("isAutoPurgeEnabled")]
        public Output<bool> IsAutoPurgeEnabled { get; private set; } = null!;

        /// <summary>
        /// Details about the current state of the audit trail in Data Safe.
        /// </summary>
        [Output("lifecycleDetails")]
        public Output<string> LifecycleDetails { get; private set; } = null!;

        /// <summary>
        /// The secondary id assigned for the peer database registered with Data Safe.
        /// </summary>
        [Output("peerTargetDatabaseKey")]
        public Output<int> PeerTargetDatabaseKey { get; private set; } = null!;

        /// <summary>
        /// The details of the audit trail purge job that ran on the "purgeJobTime".
        /// </summary>
        [Output("purgeJobDetails")]
        public Output<string> PurgeJobDetails { get; private set; } = null!;

        /// <summary>
        /// The current status of the audit trail purge job.
        /// </summary>
        [Output("purgeJobStatus")]
        public Output<string> PurgeJobStatus { get; private set; } = null!;

        /// <summary>
        /// The date and time of the last purge job, which deletes audit data in the target database every seven days so that the database's audit trail does not become too large. In the format defined by RFC3339.
        /// </summary>
        [Output("purgeJobTime")]
        public Output<string> PurgeJobTime { get; private set; } = null!;

        /// <summary>
        /// (Updatable) An optional property when incremented triggers Resume. Could be set to any integer value.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("resumeTrigger")]
        public Output<int?> ResumeTrigger { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The target state for the Audit Trail. Could be set to `ACTIVE` or `INACTIVE`.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The current sub-state of the audit trail.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        [Output("systemTags")]
        public Output<ImmutableDictionary<string, object>> SystemTags { get; private set; } = null!;

        /// <summary>
        /// The OCID of the Data Safe target for which the audit trail is created.
        /// </summary>
        [Output("targetId")]
        public Output<string> TargetId { get; private set; } = null!;

        /// <summary>
        /// The date and time the audit trail was created, in the format defined by RFC3339.
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The date and time until when the audit events were collected from the target database by the Data Safe audit trail  collection process, in the format defined by RFC3339.
        /// </summary>
        [Output("timeLastCollected")]
        public Output<string> TimeLastCollected { get; private set; } = null!;

        /// <summary>
        /// The date and time the audit trail was updated, in the format defined by RFC3339.
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;

        /// <summary>
        /// An audit trail location represents the source of audit records that provides documentary evidence of the sequence of activities in the target database.
        /// </summary>
        [Output("trailLocation")]
        public Output<string> TrailLocation { get; private set; } = null!;

        /// <summary>
        /// The underlying source of unified audit trail.
        /// </summary>
        [Output("trailSource")]
        public Output<string> TrailSource { get; private set; } = null!;

        /// <summary>
        /// The OCID of the workrequest for audit trail which collects audit records.
        /// </summary>
        [Output("workRequestId")]
        public Output<string> WorkRequestId { get; private set; } = null!;


        /// <summary>
        /// Create a AuditTrail resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AuditTrail(string name, AuditTrailArgs args, CustomResourceOptions? options = null)
            : base("oci:DataSafe/auditTrail:AuditTrail", name, args ?? new AuditTrailArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AuditTrail(string name, Input<string> id, AuditTrailState? state = null, CustomResourceOptions? options = null)
            : base("oci:DataSafe/auditTrail:AuditTrail", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AuditTrail resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AuditTrail Get(string name, Input<string> id, AuditTrailState? state = null, CustomResourceOptions? options = null)
        {
            return new AuditTrail(name, id, state, options);
        }
    }

    public sealed class AuditTrailArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The OCID of the audit trail.
        /// </summary>
        [Input("auditTrailId", required: true)]
        public Input<string> AuditTrailId { get; set; } = null!;

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) The description of the audit trail.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) The display name of the audit trail. The name does not have to be unique, and it's changeable.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) Indicates if auto purge is enabled on the target database, which helps delete audit data in the target database every seven days so that the database's audit trail does not become too large.
        /// </summary>
        [Input("isAutoPurgeEnabled")]
        public Input<bool>? IsAutoPurgeEnabled { get; set; }

        /// <summary>
        /// (Updatable) An optional property when incremented triggers Resume. Could be set to any integer value.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("resumeTrigger")]
        public Input<int>? ResumeTrigger { get; set; }

        /// <summary>
        /// (Updatable) The target state for the Audit Trail. Could be set to `ACTIVE` or `INACTIVE`.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public AuditTrailArgs()
        {
        }
        public static new AuditTrailArgs Empty => new AuditTrailArgs();
    }

    public sealed class AuditTrailState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The date from which the audit trail must start collecting data, in the format defined by RFC3339.
        /// </summary>
        [Input("auditCollectionStartTime")]
        public Input<string>? AuditCollectionStartTime { get; set; }

        /// <summary>
        /// The OCID of the  parent audit.
        /// </summary>
        [Input("auditProfileId")]
        public Input<string>? AuditProfileId { get; set; }

        /// <summary>
        /// The OCID of the audit trail.
        /// </summary>
        [Input("auditTrailId")]
        public Input<string>? AuditTrailId { get; set; }

        /// <summary>
        /// The OCID of the compartment that contains the audit trail and is the same as the compartment of the audit profile resource.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) The description of the audit trail.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) The display name of the audit trail. The name does not have to be unique, and it's changeable.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) Indicates if auto purge is enabled on the target database, which helps delete audit data in the target database every seven days so that the database's audit trail does not become too large.
        /// </summary>
        [Input("isAutoPurgeEnabled")]
        public Input<bool>? IsAutoPurgeEnabled { get; set; }

        /// <summary>
        /// Details about the current state of the audit trail in Data Safe.
        /// </summary>
        [Input("lifecycleDetails")]
        public Input<string>? LifecycleDetails { get; set; }

        /// <summary>
        /// The secondary id assigned for the peer database registered with Data Safe.
        /// </summary>
        [Input("peerTargetDatabaseKey")]
        public Input<int>? PeerTargetDatabaseKey { get; set; }

        /// <summary>
        /// The details of the audit trail purge job that ran on the "purgeJobTime".
        /// </summary>
        [Input("purgeJobDetails")]
        public Input<string>? PurgeJobDetails { get; set; }

        /// <summary>
        /// The current status of the audit trail purge job.
        /// </summary>
        [Input("purgeJobStatus")]
        public Input<string>? PurgeJobStatus { get; set; }

        /// <summary>
        /// The date and time of the last purge job, which deletes audit data in the target database every seven days so that the database's audit trail does not become too large. In the format defined by RFC3339.
        /// </summary>
        [Input("purgeJobTime")]
        public Input<string>? PurgeJobTime { get; set; }

        /// <summary>
        /// (Updatable) An optional property when incremented triggers Resume. Could be set to any integer value.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("resumeTrigger")]
        public Input<int>? ResumeTrigger { get; set; }

        /// <summary>
        /// (Updatable) The target state for the Audit Trail. Could be set to `ACTIVE` or `INACTIVE`.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The current sub-state of the audit trail.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("systemTags")]
        private InputMap<object>? _systemTags;

        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public InputMap<object> SystemTags
        {
            get => _systemTags ?? (_systemTags = new InputMap<object>());
            set => _systemTags = value;
        }

        /// <summary>
        /// The OCID of the Data Safe target for which the audit trail is created.
        /// </summary>
        [Input("targetId")]
        public Input<string>? TargetId { get; set; }

        /// <summary>
        /// The date and time the audit trail was created, in the format defined by RFC3339.
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The date and time until when the audit events were collected from the target database by the Data Safe audit trail  collection process, in the format defined by RFC3339.
        /// </summary>
        [Input("timeLastCollected")]
        public Input<string>? TimeLastCollected { get; set; }

        /// <summary>
        /// The date and time the audit trail was updated, in the format defined by RFC3339.
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        /// <summary>
        /// An audit trail location represents the source of audit records that provides documentary evidence of the sequence of activities in the target database.
        /// </summary>
        [Input("trailLocation")]
        public Input<string>? TrailLocation { get; set; }

        /// <summary>
        /// The underlying source of unified audit trail.
        /// </summary>
        [Input("trailSource")]
        public Input<string>? TrailSource { get; set; }

        /// <summary>
        /// The OCID of the workrequest for audit trail which collects audit records.
        /// </summary>
        [Input("workRequestId")]
        public Input<string>? WorkRequestId { get; set; }

        public AuditTrailState()
        {
        }
        public static new AuditTrailState Empty => new AuditTrailState();
    }
}
