// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe
{
    /// <summary>
    /// This resource provides the Calculate Audit Volume Collected resource in Oracle Cloud Infrastructure Data Safe service.
    /// 
    /// Calculates the volume of audit events collected by data safe.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testCalculateAuditVolumeCollected = new Oci.DataSafe.CalculateAuditVolumeCollected("test_calculate_audit_volume_collected", new()
    ///     {
    ///         AuditProfileId = testAuditProfile.Id,
    ///         TimeFromMonth = calculateAuditVolumeCollectedTimeFromMonth,
    ///         TimeToMonth = calculateAuditVolumeCollectedTimeToMonth,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// CalculateAuditVolumeCollected can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:DataSafe/calculateAuditVolumeCollected:CalculateAuditVolumeCollected test_calculate_audit_volume_collected "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:DataSafe/calculateAuditVolumeCollected:CalculateAuditVolumeCollected")]
    public partial class CalculateAuditVolumeCollected : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The OCID of the audit.
        /// </summary>
        [Output("auditProfileId")]
        public Output<string> AuditProfileId { get; private set; } = null!;

        /// <summary>
        /// List of collected audit volumes.
        /// </summary>
        [Output("collectedAuditVolumes")]
        public Output<ImmutableArray<Outputs.CalculateAuditVolumeCollectedCollectedAuditVolume>> CollectedAuditVolumes { get; private set; } = null!;

        /// <summary>
        /// The date from which the audit volume collected by data safe has to be calculated, in the format defined by RFC3339.
        /// </summary>
        [Output("timeFromMonth")]
        public Output<string> TimeFromMonth { get; private set; } = null!;

        /// <summary>
        /// The date from which the audit volume collected by data safe has to be calculated, in the format defined by RFC3339. If not specified, this will default to the current date.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("timeToMonth")]
        public Output<string> TimeToMonth { get; private set; } = null!;


        /// <summary>
        /// Create a CalculateAuditVolumeCollected resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CalculateAuditVolumeCollected(string name, CalculateAuditVolumeCollectedArgs args, CustomResourceOptions? options = null)
            : base("oci:DataSafe/calculateAuditVolumeCollected:CalculateAuditVolumeCollected", name, args ?? new CalculateAuditVolumeCollectedArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CalculateAuditVolumeCollected(string name, Input<string> id, CalculateAuditVolumeCollectedState? state = null, CustomResourceOptions? options = null)
            : base("oci:DataSafe/calculateAuditVolumeCollected:CalculateAuditVolumeCollected", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CalculateAuditVolumeCollected resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CalculateAuditVolumeCollected Get(string name, Input<string> id, CalculateAuditVolumeCollectedState? state = null, CustomResourceOptions? options = null)
        {
            return new CalculateAuditVolumeCollected(name, id, state, options);
        }
    }

    public sealed class CalculateAuditVolumeCollectedArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The OCID of the audit.
        /// </summary>
        [Input("auditProfileId", required: true)]
        public Input<string> AuditProfileId { get; set; } = null!;

        /// <summary>
        /// The date from which the audit volume collected by data safe has to be calculated, in the format defined by RFC3339.
        /// </summary>
        [Input("timeFromMonth", required: true)]
        public Input<string> TimeFromMonth { get; set; } = null!;

        /// <summary>
        /// The date from which the audit volume collected by data safe has to be calculated, in the format defined by RFC3339. If not specified, this will default to the current date.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("timeToMonth")]
        public Input<string>? TimeToMonth { get; set; }

        public CalculateAuditVolumeCollectedArgs()
        {
        }
        public static new CalculateAuditVolumeCollectedArgs Empty => new CalculateAuditVolumeCollectedArgs();
    }

    public sealed class CalculateAuditVolumeCollectedState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The OCID of the audit.
        /// </summary>
        [Input("auditProfileId")]
        public Input<string>? AuditProfileId { get; set; }

        [Input("collectedAuditVolumes")]
        private InputList<Inputs.CalculateAuditVolumeCollectedCollectedAuditVolumeGetArgs>? _collectedAuditVolumes;

        /// <summary>
        /// List of collected audit volumes.
        /// </summary>
        public InputList<Inputs.CalculateAuditVolumeCollectedCollectedAuditVolumeGetArgs> CollectedAuditVolumes
        {
            get => _collectedAuditVolumes ?? (_collectedAuditVolumes = new InputList<Inputs.CalculateAuditVolumeCollectedCollectedAuditVolumeGetArgs>());
            set => _collectedAuditVolumes = value;
        }

        /// <summary>
        /// The date from which the audit volume collected by data safe has to be calculated, in the format defined by RFC3339.
        /// </summary>
        [Input("timeFromMonth")]
        public Input<string>? TimeFromMonth { get; set; }

        /// <summary>
        /// The date from which the audit volume collected by data safe has to be calculated, in the format defined by RFC3339. If not specified, this will default to the current date.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("timeToMonth")]
        public Input<string>? TimeToMonth { get; set; }

        public CalculateAuditVolumeCollectedState()
        {
        }
        public static new CalculateAuditVolumeCollectedState Empty => new CalculateAuditVolumeCollectedState();
    }
}
