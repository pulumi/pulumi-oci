// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe
{
    /// <summary>
    /// This resource provides the Compare User Assessment resource in Oracle Cloud Infrastructure Data Safe service.
    /// 
    /// Compares two user assessments. For this comparison, a user assessment can be a saved, a latest assessment, or a baseline.
    /// As an example, it can be used to compare a user assessment saved or a latest assessment with a baseline.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testCompareUserAssessment = new Oci.DataSafe.CompareUserAssessment("testCompareUserAssessment", new()
    ///     {
    ///         ComparisonUserAssessmentId = oci_data_safe_user_assessment.Test_user_assessment.Id,
    ///         UserAssessmentId = oci_data_safe_user_assessment.Test_user_assessment.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// CompareUserAssessment can be imported using the `id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import oci:DataSafe/compareUserAssessment:CompareUserAssessment test_compare_user_assessment "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:DataSafe/compareUserAssessment:CompareUserAssessment")]
    public partial class CompareUserAssessment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The OCID of the user assessment to be compared. You can compare with another user assessment, a latest assessment, or a baseline.
        /// </summary>
        [Output("comparisonUserAssessmentId")]
        public Output<string> ComparisonUserAssessmentId { get; private set; } = null!;

        /// <summary>
        /// The OCID of the user assessment.
        /// </summary>
        [Output("userAssessmentId")]
        public Output<string> UserAssessmentId { get; private set; } = null!;


        /// <summary>
        /// Create a CompareUserAssessment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CompareUserAssessment(string name, CompareUserAssessmentArgs args, CustomResourceOptions? options = null)
            : base("oci:DataSafe/compareUserAssessment:CompareUserAssessment", name, args ?? new CompareUserAssessmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CompareUserAssessment(string name, Input<string> id, CompareUserAssessmentState? state = null, CustomResourceOptions? options = null)
            : base("oci:DataSafe/compareUserAssessment:CompareUserAssessment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CompareUserAssessment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CompareUserAssessment Get(string name, Input<string> id, CompareUserAssessmentState? state = null, CustomResourceOptions? options = null)
        {
            return new CompareUserAssessment(name, id, state, options);
        }
    }

    public sealed class CompareUserAssessmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The OCID of the user assessment to be compared. You can compare with another user assessment, a latest assessment, or a baseline.
        /// </summary>
        [Input("comparisonUserAssessmentId", required: true)]
        public Input<string> ComparisonUserAssessmentId { get; set; } = null!;

        /// <summary>
        /// The OCID of the user assessment.
        /// </summary>
        [Input("userAssessmentId", required: true)]
        public Input<string> UserAssessmentId { get; set; } = null!;

        public CompareUserAssessmentArgs()
        {
        }
        public static new CompareUserAssessmentArgs Empty => new CompareUserAssessmentArgs();
    }

    public sealed class CompareUserAssessmentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The OCID of the user assessment to be compared. You can compare with another user assessment, a latest assessment, or a baseline.
        /// </summary>
        [Input("comparisonUserAssessmentId")]
        public Input<string>? ComparisonUserAssessmentId { get; set; }

        /// <summary>
        /// The OCID of the user assessment.
        /// </summary>
        [Input("userAssessmentId")]
        public Input<string>? UserAssessmentId { get; set; }

        public CompareUserAssessmentState()
        {
        }
        public static new CompareUserAssessmentState Empty => new CompareUserAssessmentState();
    }
}
