// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe
{
    public static class GetAlertPolicyRule
    {
        /// <summary>
        /// This data source provides details about a specific Alert Policy Rule resource in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Lists the rules of the specified alert policy. The alert policy is said to be satisfied when all rules in the policy evaulate to true.
        /// If there are three rules: rule1,rule2 and rule3, the policy is satisfied if rule1 AND rule2 AND rule3 is True.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAlertPolicyRule = Oci.DataSafe.GetAlertPolicyRule.Invoke(new()
        ///     {
        ///         AlertPolicyId = oci_data_safe_alert_policy.Test_alert_policy.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetAlertPolicyRuleResult> InvokeAsync(GetAlertPolicyRuleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAlertPolicyRuleResult>("oci:DataSafe/getAlertPolicyRule:getAlertPolicyRule", args ?? new GetAlertPolicyRuleArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Alert Policy Rule resource in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Lists the rules of the specified alert policy. The alert policy is said to be satisfied when all rules in the policy evaulate to true.
        /// If there are three rules: rule1,rule2 and rule3, the policy is satisfied if rule1 AND rule2 AND rule3 is True.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAlertPolicyRule = Oci.DataSafe.GetAlertPolicyRule.Invoke(new()
        ///     {
        ///         AlertPolicyId = oci_data_safe_alert_policy.Test_alert_policy.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetAlertPolicyRuleResult> Invoke(GetAlertPolicyRuleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAlertPolicyRuleResult>("oci:DataSafe/getAlertPolicyRule:getAlertPolicyRule", args ?? new GetAlertPolicyRuleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAlertPolicyRuleArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the alert policy.
        /// </summary>
        [Input("alertPolicyId", required: true)]
        public string AlertPolicyId { get; set; } = null!;

        public GetAlertPolicyRuleArgs()
        {
        }
        public static new GetAlertPolicyRuleArgs Empty => new GetAlertPolicyRuleArgs();
    }

    public sealed class GetAlertPolicyRuleInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the alert policy.
        /// </summary>
        [Input("alertPolicyId", required: true)]
        public Input<string> AlertPolicyId { get; set; } = null!;

        public GetAlertPolicyRuleInvokeArgs()
        {
        }
        public static new GetAlertPolicyRuleInvokeArgs Empty => new GetAlertPolicyRuleInvokeArgs();
    }


    [OutputType]
    public sealed class GetAlertPolicyRuleResult
    {
        public readonly string AlertPolicyId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Array of alert policy rules summary
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAlertPolicyRuleItemResult> Items;

        [OutputConstructor]
        private GetAlertPolicyRuleResult(
            string alertPolicyId,

            string? id,

            ImmutableArray<Outputs.GetAlertPolicyRuleItemResult> items)
        {
            AlertPolicyId = alertPolicyId;
            Id = id;
            Items = items;
        }
    }
}
