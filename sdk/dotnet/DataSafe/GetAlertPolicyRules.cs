// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe
{
    public static class GetAlertPolicyRules
    {
        /// <summary>
        /// This data source provides the list of Alert Policy Rules in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Lists the rules of the specified alert policy. The alert policy is said to be satisfied when all rules in the policy evaulate to true.
        /// If there are three rules: rule1,rule2 and rule3, the policy is satisfied if rule1 AND rule2 AND rule3 is True.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAlertPolicyRules = Oci.DataSafe.GetAlertPolicyRules.Invoke(new()
        ///     {
        ///         AlertPolicyId = oci_data_safe_alert_policy.Test_alert_policy.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetAlertPolicyRulesResult> InvokeAsync(GetAlertPolicyRulesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAlertPolicyRulesResult>("oci:DataSafe/getAlertPolicyRules:getAlertPolicyRules", args ?? new GetAlertPolicyRulesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Alert Policy Rules in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Lists the rules of the specified alert policy. The alert policy is said to be satisfied when all rules in the policy evaulate to true.
        /// If there are three rules: rule1,rule2 and rule3, the policy is satisfied if rule1 AND rule2 AND rule3 is True.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAlertPolicyRules = Oci.DataSafe.GetAlertPolicyRules.Invoke(new()
        ///     {
        ///         AlertPolicyId = oci_data_safe_alert_policy.Test_alert_policy.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetAlertPolicyRulesResult> Invoke(GetAlertPolicyRulesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAlertPolicyRulesResult>("oci:DataSafe/getAlertPolicyRules:getAlertPolicyRules", args ?? new GetAlertPolicyRulesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAlertPolicyRulesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the alert policy.
        /// </summary>
        [Input("alertPolicyId", required: true)]
        public string AlertPolicyId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetAlertPolicyRulesFilterArgs>? _filters;
        public List<Inputs.GetAlertPolicyRulesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetAlertPolicyRulesFilterArgs>());
            set => _filters = value;
        }

        public GetAlertPolicyRulesArgs()
        {
        }
        public static new GetAlertPolicyRulesArgs Empty => new GetAlertPolicyRulesArgs();
    }

    public sealed class GetAlertPolicyRulesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the alert policy.
        /// </summary>
        [Input("alertPolicyId", required: true)]
        public Input<string> AlertPolicyId { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetAlertPolicyRulesFilterInputArgs>? _filters;
        public InputList<Inputs.GetAlertPolicyRulesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetAlertPolicyRulesFilterInputArgs>());
            set => _filters = value;
        }

        public GetAlertPolicyRulesInvokeArgs()
        {
        }
        public static new GetAlertPolicyRulesInvokeArgs Empty => new GetAlertPolicyRulesInvokeArgs();
    }


    [OutputType]
    public sealed class GetAlertPolicyRulesResult
    {
        public readonly string AlertPolicyId;
        /// <summary>
        /// The list of alert_policy_rule_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAlertPolicyRulesAlertPolicyRuleCollectionResult> AlertPolicyRuleCollections;
        public readonly ImmutableArray<Outputs.GetAlertPolicyRulesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetAlertPolicyRulesResult(
            string alertPolicyId,

            ImmutableArray<Outputs.GetAlertPolicyRulesAlertPolicyRuleCollectionResult> alertPolicyRuleCollections,

            ImmutableArray<Outputs.GetAlertPolicyRulesFilterResult> filters,

            string id)
        {
            AlertPolicyId = alertPolicyId;
            AlertPolicyRuleCollections = alertPolicyRuleCollections;
            Filters = filters;
            Id = id;
        }
    }
}
