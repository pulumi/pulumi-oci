// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe
{
    public static class GetAuditProfileAvailableAuditVolume
    {
        /// <summary>
        /// This data source provides details about a specific Audit Profile Available Audit Volume resource in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Retrieves a list of audit trails, and associated audit event volume for each trail up to defined start date.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAuditProfileAvailableAuditVolume = Oci.DataSafe.GetAuditProfileAvailableAuditVolume.Invoke(new()
        ///     {
        ///         AuditProfileId = oci_data_safe_audit_profile.Test_audit_profile.Id,
        ///         WorkRequestId = oci_containerengine_work_request.Test_work_request.Id,
        ///         MonthInConsiderationGreaterThan = @var.Audit_profile_available_audit_volume_month_in_consideration_greater_than,
        ///         MonthInConsiderationLessThan = @var.Audit_profile_available_audit_volume_month_in_consideration_less_than,
        ///         TrailLocation = @var.Audit_profile_available_audit_volume_trail_location,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetAuditProfileAvailableAuditVolumeResult> InvokeAsync(GetAuditProfileAvailableAuditVolumeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAuditProfileAvailableAuditVolumeResult>("oci:DataSafe/getAuditProfileAvailableAuditVolume:getAuditProfileAvailableAuditVolume", args ?? new GetAuditProfileAvailableAuditVolumeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Audit Profile Available Audit Volume resource in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Retrieves a list of audit trails, and associated audit event volume for each trail up to defined start date.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAuditProfileAvailableAuditVolume = Oci.DataSafe.GetAuditProfileAvailableAuditVolume.Invoke(new()
        ///     {
        ///         AuditProfileId = oci_data_safe_audit_profile.Test_audit_profile.Id,
        ///         WorkRequestId = oci_containerengine_work_request.Test_work_request.Id,
        ///         MonthInConsiderationGreaterThan = @var.Audit_profile_available_audit_volume_month_in_consideration_greater_than,
        ///         MonthInConsiderationLessThan = @var.Audit_profile_available_audit_volume_month_in_consideration_less_than,
        ///         TrailLocation = @var.Audit_profile_available_audit_volume_trail_location,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetAuditProfileAvailableAuditVolumeResult> Invoke(GetAuditProfileAvailableAuditVolumeInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetAuditProfileAvailableAuditVolumeResult>("oci:DataSafe/getAuditProfileAvailableAuditVolume:getAuditProfileAvailableAuditVolume", args ?? new GetAuditProfileAvailableAuditVolumeInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAuditProfileAvailableAuditVolumeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the audit.
        /// </summary>
        [Input("auditProfileId", required: true)]
        public string AuditProfileId { get; set; } = null!;

        /// <summary>
        /// Specifying `monthInConsiderationGreaterThan` parameter will retrieve all items for which the event month is greater than the date and time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        [Input("monthInConsiderationGreaterThan")]
        public string? MonthInConsiderationGreaterThan { get; set; }

        /// <summary>
        /// Specifying `monthInConsiderationLessThan` parameter will retrieve all items for which the event month is less than the date and time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        [Input("monthInConsiderationLessThan")]
        public string? MonthInConsiderationLessThan { get; set; }

        /// <summary>
        /// The audit trail location.
        /// </summary>
        [Input("trailLocation")]
        public string? TrailLocation { get; set; }

        /// <summary>
        /// The OCID of the work request.
        /// </summary>
        [Input("workRequestId", required: true)]
        public string WorkRequestId { get; set; } = null!;

        public GetAuditProfileAvailableAuditVolumeArgs()
        {
        }
        public static new GetAuditProfileAvailableAuditVolumeArgs Empty => new GetAuditProfileAvailableAuditVolumeArgs();
    }

    public sealed class GetAuditProfileAvailableAuditVolumeInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the audit.
        /// </summary>
        [Input("auditProfileId", required: true)]
        public Input<string> AuditProfileId { get; set; } = null!;

        /// <summary>
        /// Specifying `monthInConsiderationGreaterThan` parameter will retrieve all items for which the event month is greater than the date and time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        [Input("monthInConsiderationGreaterThan")]
        public Input<string>? MonthInConsiderationGreaterThan { get; set; }

        /// <summary>
        /// Specifying `monthInConsiderationLessThan` parameter will retrieve all items for which the event month is less than the date and time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        [Input("monthInConsiderationLessThan")]
        public Input<string>? MonthInConsiderationLessThan { get; set; }

        /// <summary>
        /// The audit trail location.
        /// </summary>
        [Input("trailLocation")]
        public Input<string>? TrailLocation { get; set; }

        /// <summary>
        /// The OCID of the work request.
        /// </summary>
        [Input("workRequestId", required: true)]
        public Input<string> WorkRequestId { get; set; } = null!;

        public GetAuditProfileAvailableAuditVolumeInvokeArgs()
        {
        }
        public static new GetAuditProfileAvailableAuditVolumeInvokeArgs Empty => new GetAuditProfileAvailableAuditVolumeInvokeArgs();
    }


    [OutputType]
    public sealed class GetAuditProfileAvailableAuditVolumeResult
    {
        /// <summary>
        /// The OCID of the audit profile resource.
        /// </summary>
        public readonly string AuditProfileId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Array of available audit volume summary.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAuditProfileAvailableAuditVolumeItemResult> Items;
        public readonly string? MonthInConsiderationGreaterThan;
        public readonly string? MonthInConsiderationLessThan;
        /// <summary>
        /// Audit trail location on the target database from where the audit data is being collected by Data Safe.
        /// </summary>
        public readonly string? TrailLocation;
        public readonly string WorkRequestId;

        [OutputConstructor]
        private GetAuditProfileAvailableAuditVolumeResult(
            string auditProfileId,

            string id,

            ImmutableArray<Outputs.GetAuditProfileAvailableAuditVolumeItemResult> items,

            string? monthInConsiderationGreaterThan,

            string? monthInConsiderationLessThan,

            string? trailLocation,

            string workRequestId)
        {
            AuditProfileId = auditProfileId;
            Id = id;
            Items = items;
            MonthInConsiderationGreaterThan = monthInConsiderationGreaterThan;
            MonthInConsiderationLessThan = monthInConsiderationLessThan;
            TrailLocation = trailLocation;
            WorkRequestId = workRequestId;
        }
    }
}
