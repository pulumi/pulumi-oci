// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe
{
    public static class GetAuditTrail
    {
        /// <summary>
        /// This data source provides details about a specific Audit Trail resource in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Gets the details of audit trail.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAuditTrail = Oci.DataSafe.GetAuditTrail.Invoke(new()
        ///     {
        ///         AuditTrailId = oci_data_safe_audit_trail.Test_audit_trail.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetAuditTrailResult> InvokeAsync(GetAuditTrailArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAuditTrailResult>("oci:DataSafe/getAuditTrail:getAuditTrail", args ?? new GetAuditTrailArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Audit Trail resource in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Gets the details of audit trail.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAuditTrail = Oci.DataSafe.GetAuditTrail.Invoke(new()
        ///     {
        ///         AuditTrailId = oci_data_safe_audit_trail.Test_audit_trail.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetAuditTrailResult> Invoke(GetAuditTrailInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAuditTrailResult>("oci:DataSafe/getAuditTrail:getAuditTrail", args ?? new GetAuditTrailInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAuditTrailArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the audit trail.
        /// </summary>
        [Input("auditTrailId", required: true)]
        public string AuditTrailId { get; set; } = null!;

        public GetAuditTrailArgs()
        {
        }
        public static new GetAuditTrailArgs Empty => new GetAuditTrailArgs();
    }

    public sealed class GetAuditTrailInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the audit trail.
        /// </summary>
        [Input("auditTrailId", required: true)]
        public Input<string> AuditTrailId { get; set; } = null!;

        public GetAuditTrailInvokeArgs()
        {
        }
        public static new GetAuditTrailInvokeArgs Empty => new GetAuditTrailInvokeArgs();
    }


    [OutputType]
    public sealed class GetAuditTrailResult
    {
        /// <summary>
        /// The date from which the audit trail must start collecting data, in the format defined by RFC3339.
        /// </summary>
        public readonly string? AuditCollectionStartTime;
        /// <summary>
        /// The OCID of the  parent audit.
        /// </summary>
        public readonly string? AuditProfileId;
        public readonly string AuditTrailId;
        /// <summary>
        /// The OCID of the compartment that contains the audit trail and is the same as the compartment of the audit profile resource.
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? DefinedTags;
        /// <summary>
        /// The description of the audit trail.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The display name of the audit trail.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? FreeformTags;
        /// <summary>
        /// The OCID of the audit trail.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Indicates if auto purge is enabled on the target database, which helps delete audit data in the target database every seven days so that the database's audit trail does not become too large.
        /// </summary>
        public readonly bool? IsAutoPurgeEnabled;
        /// <summary>
        /// Details about the current state of the audit trail in Data Safe.
        /// </summary>
        public readonly string? LifecycleDetails;
        public readonly int? ResumeTrigger;
        /// <summary>
        /// The current state of the audit trail.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// The current sub-state of the audit trail.
        /// </summary>
        public readonly string? Status;
        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? SystemTags;
        /// <summary>
        /// The OCID of the Data Safe target for which the audit trail is created.
        /// </summary>
        public readonly string? TargetId;
        /// <summary>
        /// The date and time the audit trail was created, in the format defined by RFC3339.
        /// </summary>
        public readonly string? TimeCreated;
        /// <summary>
        /// The date and time until when the audit events were collected from the target database by the Data Safe audit trail  collection process, in the format defined by RFC3339.
        /// </summary>
        public readonly string? TimeLastCollected;
        /// <summary>
        /// The date and time the audit trail was updated, in the format defined by RFC3339.
        /// </summary>
        public readonly string? TimeUpdated;
        /// <summary>
        /// An audit trail location represents the source of audit records that provides documentary evidence of the sequence of activities in the target database.
        /// </summary>
        public readonly string? TrailLocation;
        /// <summary>
        /// The OCID of the workrequest for audit trail which collects audit records.
        /// </summary>
        public readonly string? WorkRequestId;

        [OutputConstructor]
        private GetAuditTrailResult(
            string? auditCollectionStartTime,

            string? auditProfileId,

            string auditTrailId,

            string? compartmentId,

            ImmutableDictionary<string, object>? definedTags,

            string? description,

            string? displayName,

            ImmutableDictionary<string, object>? freeformTags,

            string? id,

            bool? isAutoPurgeEnabled,

            string? lifecycleDetails,

            int? resumeTrigger,

            string? state,

            string? status,

            ImmutableDictionary<string, object>? systemTags,

            string? targetId,

            string? timeCreated,

            string? timeLastCollected,

            string? timeUpdated,

            string? trailLocation,

            string? workRequestId)
        {
            AuditCollectionStartTime = auditCollectionStartTime;
            AuditProfileId = auditProfileId;
            AuditTrailId = auditTrailId;
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            IsAutoPurgeEnabled = isAutoPurgeEnabled;
            LifecycleDetails = lifecycleDetails;
            ResumeTrigger = resumeTrigger;
            State = state;
            Status = status;
            SystemTags = systemTags;
            TargetId = targetId;
            TimeCreated = timeCreated;
            TimeLastCollected = timeLastCollected;
            TimeUpdated = timeUpdated;
            TrailLocation = trailLocation;
            WorkRequestId = workRequestId;
        }
    }
}
