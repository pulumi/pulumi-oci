// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe
{
    public static class GetCompatibleFormatsForDataType
    {
        /// <summary>
        /// This data source provides details about a specific Compatible Formats For Data Type resource in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Gets a list of basic masking formats compatible with the supported data types.
        /// The data types are grouped into the following categories -
        /// Character - Includes CHAR, NCHAR, VARCHAR2, and NVARCHAR2
        /// Numeric - Includes NUMBER, FLOAT, RAW, BINARY_FLOAT, and BINARY_DOUBLE
        /// Date - Includes DATE and TIMESTAMP
        /// LOB - Includes BLOB, CLOB, and NCLOB
        /// All - Includes all the supported data types
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testCompatibleFormatsForDataType = Oci.DataSafe.GetCompatibleFormatsForDataType.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetCompatibleFormatsForDataTypeResult> InvokeAsync(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCompatibleFormatsForDataTypeResult>("oci:DataSafe/getCompatibleFormatsForDataType:getCompatibleFormatsForDataType", InvokeArgs.Empty, options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Compatible Formats For Data Type resource in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Gets a list of basic masking formats compatible with the supported data types.
        /// The data types are grouped into the following categories -
        /// Character - Includes CHAR, NCHAR, VARCHAR2, and NVARCHAR2
        /// Numeric - Includes NUMBER, FLOAT, RAW, BINARY_FLOAT, and BINARY_DOUBLE
        /// Date - Includes DATE and TIMESTAMP
        /// LOB - Includes BLOB, CLOB, and NCLOB
        /// All - Includes all the supported data types
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testCompatibleFormatsForDataType = Oci.DataSafe.GetCompatibleFormatsForDataType.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCompatibleFormatsForDataTypeResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCompatibleFormatsForDataTypeResult>("oci:DataSafe/getCompatibleFormatsForDataType:getCompatibleFormatsForDataType", InvokeArgs.Empty, options.WithDefaults());
    }


    [OutputType]
    public sealed class GetCompatibleFormatsForDataTypeResult
    {
        /// <summary>
        /// An array of lists of basic masking formats compatible with the supported data types.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCompatibleFormatsForDataTypeFormatsForDataTypeResult> FormatsForDataTypes;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetCompatibleFormatsForDataTypeResult(
            ImmutableArray<Outputs.GetCompatibleFormatsForDataTypeFormatsForDataTypeResult> formatsForDataTypes,

            string id)
        {
            FormatsForDataTypes = formatsForDataTypes;
            Id = id;
        }
    }
}
