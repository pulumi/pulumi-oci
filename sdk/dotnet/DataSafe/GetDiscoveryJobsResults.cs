// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe
{
    public static class GetDiscoveryJobsResults
    {
        /// <summary>
        /// This data source provides the list of Discovery Jobs Results in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Gets a list of discovery results based on the specified query parameters.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDiscoveryJobsResults = Oci.DataSafe.GetDiscoveryJobsResults.Invoke(new()
        ///     {
        ///         DiscoveryJobId = oci_data_safe_discovery_job.Test_discovery_job.Id,
        ///         ColumnNames = @var.Discovery_jobs_result_column_name,
        ///         DiscoveryType = @var.Discovery_jobs_result_discovery_type,
        ///         IsResultApplied = @var.Discovery_jobs_result_is_result_applied,
        ///         Objects = @var.Discovery_jobs_result_object,
        ///         PlannedAction = @var.Discovery_jobs_result_planned_action,
        ///         SchemaNames = @var.Discovery_jobs_result_schema_name,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetDiscoveryJobsResultsResult> InvokeAsync(GetDiscoveryJobsResultsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDiscoveryJobsResultsResult>("oci:DataSafe/getDiscoveryJobsResults:getDiscoveryJobsResults", args ?? new GetDiscoveryJobsResultsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Discovery Jobs Results in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Gets a list of discovery results based on the specified query parameters.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDiscoveryJobsResults = Oci.DataSafe.GetDiscoveryJobsResults.Invoke(new()
        ///     {
        ///         DiscoveryJobId = oci_data_safe_discovery_job.Test_discovery_job.Id,
        ///         ColumnNames = @var.Discovery_jobs_result_column_name,
        ///         DiscoveryType = @var.Discovery_jobs_result_discovery_type,
        ///         IsResultApplied = @var.Discovery_jobs_result_is_result_applied,
        ///         Objects = @var.Discovery_jobs_result_object,
        ///         PlannedAction = @var.Discovery_jobs_result_planned_action,
        ///         SchemaNames = @var.Discovery_jobs_result_schema_name,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetDiscoveryJobsResultsResult> Invoke(GetDiscoveryJobsResultsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDiscoveryJobsResultsResult>("oci:DataSafe/getDiscoveryJobsResults:getDiscoveryJobsResults", args ?? new GetDiscoveryJobsResultsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDiscoveryJobsResultsArgs : global::Pulumi.InvokeArgs
    {
        [Input("columnNames")]
        private List<string>? _columnNames;

        /// <summary>
        /// A filter to return only a specific column based on column name.
        /// </summary>
        public List<string> ColumnNames
        {
            get => _columnNames ?? (_columnNames = new List<string>());
            set => _columnNames = value;
        }

        /// <summary>
        /// The OCID of the discovery job.
        /// </summary>
        [Input("discoveryJobId", required: true)]
        public string DiscoveryJobId { get; set; } = null!;

        /// <summary>
        /// A filter to return only the resources that match the specified discovery type.
        /// </summary>
        [Input("discoveryType")]
        public string? DiscoveryType { get; set; }

        [Input("filters")]
        private List<Inputs.GetDiscoveryJobsResultsFilterArgs>? _filters;
        public List<Inputs.GetDiscoveryJobsResultsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetDiscoveryJobsResultsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return the discovery result resources based on the value of their isResultApplied attribute.
        /// </summary>
        [Input("isResultApplied")]
        public bool? IsResultApplied { get; set; }

        [Input("objects")]
        private List<string>? _objects;

        /// <summary>
        /// A filter to return only items related to a specific object name.
        /// </summary>
        public List<string> Objects
        {
            get => _objects ?? (_objects = new List<string>());
            set => _objects = value;
        }

        /// <summary>
        /// A filter to return only the resources that match the specified planned action.
        /// </summary>
        [Input("plannedAction")]
        public string? PlannedAction { get; set; }

        [Input("schemaNames")]
        private List<string>? _schemaNames;

        /// <summary>
        /// A filter to return only items related to specific schema name.
        /// </summary>
        public List<string> SchemaNames
        {
            get => _schemaNames ?? (_schemaNames = new List<string>());
            set => _schemaNames = value;
        }

        public GetDiscoveryJobsResultsArgs()
        {
        }
        public static new GetDiscoveryJobsResultsArgs Empty => new GetDiscoveryJobsResultsArgs();
    }

    public sealed class GetDiscoveryJobsResultsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("columnNames")]
        private InputList<string>? _columnNames;

        /// <summary>
        /// A filter to return only a specific column based on column name.
        /// </summary>
        public InputList<string> ColumnNames
        {
            get => _columnNames ?? (_columnNames = new InputList<string>());
            set => _columnNames = value;
        }

        /// <summary>
        /// The OCID of the discovery job.
        /// </summary>
        [Input("discoveryJobId", required: true)]
        public Input<string> DiscoveryJobId { get; set; } = null!;

        /// <summary>
        /// A filter to return only the resources that match the specified discovery type.
        /// </summary>
        [Input("discoveryType")]
        public Input<string>? DiscoveryType { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetDiscoveryJobsResultsFilterInputArgs>? _filters;
        public InputList<Inputs.GetDiscoveryJobsResultsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetDiscoveryJobsResultsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return the discovery result resources based on the value of their isResultApplied attribute.
        /// </summary>
        [Input("isResultApplied")]
        public Input<bool>? IsResultApplied { get; set; }

        [Input("objects")]
        private InputList<string>? _objects;

        /// <summary>
        /// A filter to return only items related to a specific object name.
        /// </summary>
        public InputList<string> Objects
        {
            get => _objects ?? (_objects = new InputList<string>());
            set => _objects = value;
        }

        /// <summary>
        /// A filter to return only the resources that match the specified planned action.
        /// </summary>
        [Input("plannedAction")]
        public Input<string>? PlannedAction { get; set; }

        [Input("schemaNames")]
        private InputList<string>? _schemaNames;

        /// <summary>
        /// A filter to return only items related to specific schema name.
        /// </summary>
        public InputList<string> SchemaNames
        {
            get => _schemaNames ?? (_schemaNames = new InputList<string>());
            set => _schemaNames = value;
        }

        public GetDiscoveryJobsResultsInvokeArgs()
        {
        }
        public static new GetDiscoveryJobsResultsInvokeArgs Empty => new GetDiscoveryJobsResultsInvokeArgs();
    }


    [OutputType]
    public sealed class GetDiscoveryJobsResultsResult
    {
        /// <summary>
        /// The name of the sensitive column.
        /// </summary>
        public readonly ImmutableArray<string> ColumnNames;
        /// <summary>
        /// The OCID of the discovery job.
        /// </summary>
        public readonly string DiscoveryJobId;
        /// <summary>
        /// The list of discovery_job_result_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDiscoveryJobsResultsDiscoveryJobResultCollectionResult> DiscoveryJobResultCollections;
        /// <summary>
        /// The type of the discovery result. It can be one of the following three types: NEW: A new sensitive column in the target database that is not in the sensitive data model. DELETED: A column that is present in the sensitive data model but has been deleted from the target database. MODIFIED: A column that is present in the target database as well as the sensitive data model but some of its attributes have been modified.
        /// </summary>
        public readonly string? DiscoveryType;
        public readonly ImmutableArray<Outputs.GetDiscoveryJobsResultsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Indicates whether the discovery result has been processed. You can update this attribute using the PatchDiscoveryJobResults operation to track whether the discovery result has already been processed and applied to the sensitive data model.
        /// </summary>
        public readonly bool? IsResultApplied;
        /// <summary>
        /// The database object that contains the sensitive column.
        /// </summary>
        public readonly ImmutableArray<string> Objects;
        /// <summary>
        /// Specifies how to process the discovery result. It's set to NONE by default. Use the PatchDiscoveryJobResults operation to update this attribute. You can choose one of the following options: ACCEPT: To accept the discovery result and update the sensitive data model to reflect the changes. REJECT: To reject the discovery result so that it doesn't change the sensitive data model. INVALIDATE: To invalidate a newly discovered column. It adds the column to the sensitive data model but marks it as invalid. It helps track false positives and ensure that they aren't reported by future discovery jobs. After specifying the planned action, you can use the ApplyDiscoveryJobResults operation to automatically process the discovery results.
        /// </summary>
        public readonly string? PlannedAction;
        /// <summary>
        /// The database schema that contains the sensitive column.
        /// </summary>
        public readonly ImmutableArray<string> SchemaNames;

        [OutputConstructor]
        private GetDiscoveryJobsResultsResult(
            ImmutableArray<string> columnNames,

            string discoveryJobId,

            ImmutableArray<Outputs.GetDiscoveryJobsResultsDiscoveryJobResultCollectionResult> discoveryJobResultCollections,

            string? discoveryType,

            ImmutableArray<Outputs.GetDiscoveryJobsResultsFilterResult> filters,

            string? id,

            bool? isResultApplied,

            ImmutableArray<string> objects,

            string? plannedAction,

            ImmutableArray<string> schemaNames)
        {
            ColumnNames = columnNames;
            DiscoveryJobId = discoveryJobId;
            DiscoveryJobResultCollections = discoveryJobResultCollections;
            DiscoveryType = discoveryType;
            Filters = filters;
            Id = id;
            IsResultApplied = isResultApplied;
            Objects = objects;
            PlannedAction = plannedAction;
            SchemaNames = schemaNames;
        }
    }
}
