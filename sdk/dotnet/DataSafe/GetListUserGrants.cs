// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe
{
    public static class GetListUserGrants
    {
        /// <summary>
        /// This data source provides the list of List User Grants in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Gets a list of grants for a particular user in the specified user assessment. A user grant contains details such as the
        /// privilege name, type, category, and depth level. The depth level indicates how deep in the hierarchy of roles granted to
        /// roles a privilege grant is. The userKey in this operation is a system-generated identifier. Perform the operation ListUsers
        /// to get the userKey for a particular user.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testListUserGrants = Oci.DataSafe.GetListUserGrants.Invoke(new()
        ///     {
        ///         UserAssessmentId = oci_data_safe_user_assessment.Test_user_assessment.Id,
        ///         UserKey = @var.List_user_grant_user_key,
        ///         DepthLevel = @var.List_user_grant_depth_level,
        ///         DepthLevelGreaterThanOrEqualTo = @var.List_user_grant_depth_level_greater_than_or_equal_to,
        ///         DepthLevelLessThan = @var.List_user_grant_depth_level_less_than,
        ///         GrantKey = @var.List_user_grant_grant_key,
        ///         GrantName = @var.List_user_grant_grant_name,
        ///         PrivilegeCategory = @var.List_user_grant_privilege_category,
        ///         PrivilegeType = @var.List_user_grant_privilege_type,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetListUserGrantsResult> InvokeAsync(GetListUserGrantsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetListUserGrantsResult>("oci:DataSafe/getListUserGrants:getListUserGrants", args ?? new GetListUserGrantsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of List User Grants in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Gets a list of grants for a particular user in the specified user assessment. A user grant contains details such as the
        /// privilege name, type, category, and depth level. The depth level indicates how deep in the hierarchy of roles granted to
        /// roles a privilege grant is. The userKey in this operation is a system-generated identifier. Perform the operation ListUsers
        /// to get the userKey for a particular user.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testListUserGrants = Oci.DataSafe.GetListUserGrants.Invoke(new()
        ///     {
        ///         UserAssessmentId = oci_data_safe_user_assessment.Test_user_assessment.Id,
        ///         UserKey = @var.List_user_grant_user_key,
        ///         DepthLevel = @var.List_user_grant_depth_level,
        ///         DepthLevelGreaterThanOrEqualTo = @var.List_user_grant_depth_level_greater_than_or_equal_to,
        ///         DepthLevelLessThan = @var.List_user_grant_depth_level_less_than,
        ///         GrantKey = @var.List_user_grant_grant_key,
        ///         GrantName = @var.List_user_grant_grant_name,
        ///         PrivilegeCategory = @var.List_user_grant_privilege_category,
        ///         PrivilegeType = @var.List_user_grant_privilege_type,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetListUserGrantsResult> Invoke(GetListUserGrantsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetListUserGrantsResult>("oci:DataSafe/getListUserGrants:getListUserGrants", args ?? new GetListUserGrantsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetListUserGrantsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A filter to return only items that match the specified user grant depth level.
        /// </summary>
        [Input("depthLevel")]
        public int? DepthLevel { get; set; }

        /// <summary>
        /// A filter to return only items that are at a level greater than or equal to the specified user grant depth level.
        /// </summary>
        [Input("depthLevelGreaterThanOrEqualTo")]
        public int? DepthLevelGreaterThanOrEqualTo { get; set; }

        /// <summary>
        /// A filter to return only items that are at a level less than the specified user grant depth level.
        /// </summary>
        [Input("depthLevelLessThan")]
        public int? DepthLevelLessThan { get; set; }

        [Input("filters")]
        private List<Inputs.GetListUserGrantsFilterArgs>? _filters;
        public List<Inputs.GetListUserGrantsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetListUserGrantsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only items that match the specified user grant key.
        /// </summary>
        [Input("grantKey")]
        public string? GrantKey { get; set; }

        /// <summary>
        /// A filter to return only items that match the specified user grant name.
        /// </summary>
        [Input("grantName")]
        public string? GrantName { get; set; }

        /// <summary>
        /// A filter to return only items that match the specified user privilege category.
        /// </summary>
        [Input("privilegeCategory")]
        public string? PrivilegeCategory { get; set; }

        /// <summary>
        /// A filter to return only items that match the specified privilege grant type.
        /// </summary>
        [Input("privilegeType")]
        public string? PrivilegeType { get; set; }

        /// <summary>
        /// The OCID of the user assessment.
        /// </summary>
        [Input("userAssessmentId", required: true)]
        public string UserAssessmentId { get; set; } = null!;

        /// <summary>
        /// The unique user key. This is a system-generated identifier. ListUsers gets the user key for a user.
        /// </summary>
        [Input("userKey", required: true)]
        public string UserKey { get; set; } = null!;

        public GetListUserGrantsArgs()
        {
        }
        public static new GetListUserGrantsArgs Empty => new GetListUserGrantsArgs();
    }

    public sealed class GetListUserGrantsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A filter to return only items that match the specified user grant depth level.
        /// </summary>
        [Input("depthLevel")]
        public Input<int>? DepthLevel { get; set; }

        /// <summary>
        /// A filter to return only items that are at a level greater than or equal to the specified user grant depth level.
        /// </summary>
        [Input("depthLevelGreaterThanOrEqualTo")]
        public Input<int>? DepthLevelGreaterThanOrEqualTo { get; set; }

        /// <summary>
        /// A filter to return only items that are at a level less than the specified user grant depth level.
        /// </summary>
        [Input("depthLevelLessThan")]
        public Input<int>? DepthLevelLessThan { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetListUserGrantsFilterInputArgs>? _filters;
        public InputList<Inputs.GetListUserGrantsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetListUserGrantsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only items that match the specified user grant key.
        /// </summary>
        [Input("grantKey")]
        public Input<string>? GrantKey { get; set; }

        /// <summary>
        /// A filter to return only items that match the specified user grant name.
        /// </summary>
        [Input("grantName")]
        public Input<string>? GrantName { get; set; }

        /// <summary>
        /// A filter to return only items that match the specified user privilege category.
        /// </summary>
        [Input("privilegeCategory")]
        public Input<string>? PrivilegeCategory { get; set; }

        /// <summary>
        /// A filter to return only items that match the specified privilege grant type.
        /// </summary>
        [Input("privilegeType")]
        public Input<string>? PrivilegeType { get; set; }

        /// <summary>
        /// The OCID of the user assessment.
        /// </summary>
        [Input("userAssessmentId", required: true)]
        public Input<string> UserAssessmentId { get; set; } = null!;

        /// <summary>
        /// The unique user key. This is a system-generated identifier. ListUsers gets the user key for a user.
        /// </summary>
        [Input("userKey", required: true)]
        public Input<string> UserKey { get; set; } = null!;

        public GetListUserGrantsInvokeArgs()
        {
        }
        public static new GetListUserGrantsInvokeArgs Empty => new GetListUserGrantsInvokeArgs();
    }


    [OutputType]
    public sealed class GetListUserGrantsResult
    {
        /// <summary>
        /// The grant depth level of the indirect grant. An indirectly granted role/privilege is granted to the user through another role. The depth level indicates how deep a privilege is within the grant hierarchy.
        /// </summary>
        public readonly int? DepthLevel;
        public readonly int? DepthLevelGreaterThanOrEqualTo;
        public readonly int? DepthLevelLessThan;
        public readonly ImmutableArray<Outputs.GetListUserGrantsFilterResult> Filters;
        public readonly string? GrantKey;
        /// <summary>
        /// The name of a user grant.
        /// </summary>
        public readonly string? GrantName;
        /// <summary>
        /// The list of grants.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetListUserGrantsGrantResult> Grants;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The privilege category.
        /// </summary>
        public readonly string? PrivilegeCategory;
        /// <summary>
        /// The type of a user grant.
        /// </summary>
        public readonly string? PrivilegeType;
        public readonly string UserAssessmentId;
        public readonly string UserKey;

        [OutputConstructor]
        private GetListUserGrantsResult(
            int? depthLevel,

            int? depthLevelGreaterThanOrEqualTo,

            int? depthLevelLessThan,

            ImmutableArray<Outputs.GetListUserGrantsFilterResult> filters,

            string? grantKey,

            string? grantName,

            ImmutableArray<Outputs.GetListUserGrantsGrantResult> grants,

            string? id,

            string? privilegeCategory,

            string? privilegeType,

            string userAssessmentId,

            string userKey)
        {
            DepthLevel = depthLevel;
            DepthLevelGreaterThanOrEqualTo = depthLevelGreaterThanOrEqualTo;
            DepthLevelLessThan = depthLevelLessThan;
            Filters = filters;
            GrantKey = grantKey;
            GrantName = grantName;
            Grants = grants;
            Id = id;
            PrivilegeCategory = privilegeCategory;
            PrivilegeType = privilegeType;
            UserAssessmentId = userAssessmentId;
            UserKey = userKey;
        }
    }
}
