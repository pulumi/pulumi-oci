// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe
{
    public static class GetMaskingPoliciesMaskingColumns
    {
        /// <summary>
        /// This data source provides the list of Masking Policies Masking Columns in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Gets a list of masking columns present in the specified masking policy and based on the specified query parameters. 
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMaskingPoliciesMaskingColumns = Oci.DataSafe.GetMaskingPoliciesMaskingColumns.Invoke(new()
        ///     {
        ///         MaskingPolicyId = testMaskingPolicy.Id,
        ///         ColumnNames = maskingPoliciesMaskingColumnColumnName,
        ///         DataTypes = maskingPoliciesMaskingColumnDataType,
        ///         IsMaskingEnabled = maskingPoliciesMaskingColumnIsMaskingEnabled,
        ///         IsSeedRequired = maskingPoliciesMaskingColumnIsSeedRequired,
        ///         MaskingColumnGroups = maskingPoliciesMaskingColumnMaskingColumnGroup,
        ///         MaskingColumnLifecycleState = maskingPoliciesMaskingColumnMaskingColumnLifecycleState,
        ///         Objects = maskingPoliciesMaskingColumnObject,
        ///         ObjectTypes = maskingPoliciesMaskingColumnObjectType,
        ///         SchemaNames = maskingPoliciesMaskingColumnSchemaName,
        ///         SensitiveTypeId = testSensitiveType.Id,
        ///         TimeCreatedGreaterThanOrEqualTo = maskingPoliciesMaskingColumnTimeCreatedGreaterThanOrEqualTo,
        ///         TimeCreatedLessThan = maskingPoliciesMaskingColumnTimeCreatedLessThan,
        ///         TimeUpdatedGreaterThanOrEqualTo = maskingPoliciesMaskingColumnTimeUpdatedGreaterThanOrEqualTo,
        ///         TimeUpdatedLessThan = maskingPoliciesMaskingColumnTimeUpdatedLessThan,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetMaskingPoliciesMaskingColumnsResult> InvokeAsync(GetMaskingPoliciesMaskingColumnsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMaskingPoliciesMaskingColumnsResult>("oci:DataSafe/getMaskingPoliciesMaskingColumns:getMaskingPoliciesMaskingColumns", args ?? new GetMaskingPoliciesMaskingColumnsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Masking Policies Masking Columns in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Gets a list of masking columns present in the specified masking policy and based on the specified query parameters. 
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMaskingPoliciesMaskingColumns = Oci.DataSafe.GetMaskingPoliciesMaskingColumns.Invoke(new()
        ///     {
        ///         MaskingPolicyId = testMaskingPolicy.Id,
        ///         ColumnNames = maskingPoliciesMaskingColumnColumnName,
        ///         DataTypes = maskingPoliciesMaskingColumnDataType,
        ///         IsMaskingEnabled = maskingPoliciesMaskingColumnIsMaskingEnabled,
        ///         IsSeedRequired = maskingPoliciesMaskingColumnIsSeedRequired,
        ///         MaskingColumnGroups = maskingPoliciesMaskingColumnMaskingColumnGroup,
        ///         MaskingColumnLifecycleState = maskingPoliciesMaskingColumnMaskingColumnLifecycleState,
        ///         Objects = maskingPoliciesMaskingColumnObject,
        ///         ObjectTypes = maskingPoliciesMaskingColumnObjectType,
        ///         SchemaNames = maskingPoliciesMaskingColumnSchemaName,
        ///         SensitiveTypeId = testSensitiveType.Id,
        ///         TimeCreatedGreaterThanOrEqualTo = maskingPoliciesMaskingColumnTimeCreatedGreaterThanOrEqualTo,
        ///         TimeCreatedLessThan = maskingPoliciesMaskingColumnTimeCreatedLessThan,
        ///         TimeUpdatedGreaterThanOrEqualTo = maskingPoliciesMaskingColumnTimeUpdatedGreaterThanOrEqualTo,
        ///         TimeUpdatedLessThan = maskingPoliciesMaskingColumnTimeUpdatedLessThan,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetMaskingPoliciesMaskingColumnsResult> Invoke(GetMaskingPoliciesMaskingColumnsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMaskingPoliciesMaskingColumnsResult>("oci:DataSafe/getMaskingPoliciesMaskingColumns:getMaskingPoliciesMaskingColumns", args ?? new GetMaskingPoliciesMaskingColumnsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMaskingPoliciesMaskingColumnsArgs : global::Pulumi.InvokeArgs
    {
        [Input("columnNames")]
        private List<string>? _columnNames;

        /// <summary>
        /// A filter to return only a specific column based on column name.
        /// </summary>
        public List<string> ColumnNames
        {
            get => _columnNames ?? (_columnNames = new List<string>());
            set => _columnNames = value;
        }

        [Input("dataTypes")]
        private List<string>? _dataTypes;

        /// <summary>
        /// A filter to return only resources that match the specified data types.
        /// </summary>
        public List<string> DataTypes
        {
            get => _dataTypes ?? (_dataTypes = new List<string>());
            set => _dataTypes = value;
        }

        [Input("filters")]
        private List<Inputs.GetMaskingPoliciesMaskingColumnsFilterArgs>? _filters;
        public List<Inputs.GetMaskingPoliciesMaskingColumnsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetMaskingPoliciesMaskingColumnsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return the masking column resources based on the value of their isMaskingEnabled attribute. A value of true returns only those columns for which masking is enabled. A value of false returns only those columns for which masking is disabled. Omitting this parameter returns all the masking columns in a masking policy.
        /// </summary>
        [Input("isMaskingEnabled")]
        public bool? IsMaskingEnabled { get; set; }

        /// <summary>
        /// A filter to return masking columns based on whether the assigned masking formats need a seed value for masking. A value of true returns those masking columns that are using Deterministic Encryption or Deterministic Substitution masking format.
        /// </summary>
        [Input("isSeedRequired")]
        public bool? IsSeedRequired { get; set; }

        [Input("maskingColumnGroups")]
        private List<string>? _maskingColumnGroups;

        /// <summary>
        /// A filter to return only the resources that match the specified masking column group.
        /// </summary>
        public List<string> MaskingColumnGroups
        {
            get => _maskingColumnGroups ?? (_maskingColumnGroups = new List<string>());
            set => _maskingColumnGroups = value;
        }

        /// <summary>
        /// A filter to return only the resources that match the specified lifecycle states.
        /// </summary>
        [Input("maskingColumnLifecycleState")]
        public string? MaskingColumnLifecycleState { get; set; }

        /// <summary>
        /// The OCID of the masking policy.
        /// </summary>
        [Input("maskingPolicyId", required: true)]
        public string MaskingPolicyId { get; set; } = null!;

        [Input("objectTypes")]
        private List<string>? _objectTypes;

        /// <summary>
        /// A filter to return only items related to a specific object type.
        /// </summary>
        public List<string> ObjectTypes
        {
            get => _objectTypes ?? (_objectTypes = new List<string>());
            set => _objectTypes = value;
        }

        [Input("objects")]
        private List<string>? _objects;

        /// <summary>
        /// A filter to return only items related to a specific object name.
        /// </summary>
        public List<string> Objects
        {
            get => _objects ?? (_objects = new List<string>());
            set => _objects = value;
        }

        [Input("schemaNames")]
        private List<string>? _schemaNames;

        /// <summary>
        /// A filter to return only items related to specific schema name.
        /// </summary>
        public List<string> SchemaNames
        {
            get => _schemaNames ?? (_schemaNames = new List<string>());
            set => _schemaNames = value;
        }

        /// <summary>
        /// A filter to return only items related to a specific sensitive type OCID.
        /// </summary>
        [Input("sensitiveTypeId")]
        public string? SensitiveTypeId { get; set; }

        /// <summary>
        /// A filter to return only the resources that were created after the specified date and time, as defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Using TimeCreatedGreaterThanOrEqualToQueryParam parameter retrieves all resources created after that date.
        /// 
        /// **Example:** 2016-12-19T16:39:57.600Z
        /// </summary>
        [Input("timeCreatedGreaterThanOrEqualTo")]
        public string? TimeCreatedGreaterThanOrEqualTo { get; set; }

        /// <summary>
        /// Search for resources that were created before a specific date. Specifying this parameter corresponding `timeCreatedLessThan` parameter will retrieve all resources created before the specified created date, in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by RFC 3339.
        /// 
        /// **Example:** 2016-12-19T16:39:57.600Z
        /// </summary>
        [Input("timeCreatedLessThan")]
        public string? TimeCreatedLessThan { get; set; }

        /// <summary>
        /// Search for resources that were updated after a specific date. Specifying this parameter corresponding `timeUpdatedGreaterThanOrEqualTo` parameter will retrieve all resources updated after the specified created date, in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by RFC 3339.
        /// </summary>
        [Input("timeUpdatedGreaterThanOrEqualTo")]
        public string? TimeUpdatedGreaterThanOrEqualTo { get; set; }

        /// <summary>
        /// Search for resources that were updated before a specific date. Specifying this parameter corresponding `timeUpdatedLessThan` parameter will retrieve all resources updated before the specified created date, in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by RFC 3339.
        /// </summary>
        [Input("timeUpdatedLessThan")]
        public string? TimeUpdatedLessThan { get; set; }

        public GetMaskingPoliciesMaskingColumnsArgs()
        {
        }
        public static new GetMaskingPoliciesMaskingColumnsArgs Empty => new GetMaskingPoliciesMaskingColumnsArgs();
    }

    public sealed class GetMaskingPoliciesMaskingColumnsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("columnNames")]
        private InputList<string>? _columnNames;

        /// <summary>
        /// A filter to return only a specific column based on column name.
        /// </summary>
        public InputList<string> ColumnNames
        {
            get => _columnNames ?? (_columnNames = new InputList<string>());
            set => _columnNames = value;
        }

        [Input("dataTypes")]
        private InputList<string>? _dataTypes;

        /// <summary>
        /// A filter to return only resources that match the specified data types.
        /// </summary>
        public InputList<string> DataTypes
        {
            get => _dataTypes ?? (_dataTypes = new InputList<string>());
            set => _dataTypes = value;
        }

        [Input("filters")]
        private InputList<Inputs.GetMaskingPoliciesMaskingColumnsFilterInputArgs>? _filters;
        public InputList<Inputs.GetMaskingPoliciesMaskingColumnsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetMaskingPoliciesMaskingColumnsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return the masking column resources based on the value of their isMaskingEnabled attribute. A value of true returns only those columns for which masking is enabled. A value of false returns only those columns for which masking is disabled. Omitting this parameter returns all the masking columns in a masking policy.
        /// </summary>
        [Input("isMaskingEnabled")]
        public Input<bool>? IsMaskingEnabled { get; set; }

        /// <summary>
        /// A filter to return masking columns based on whether the assigned masking formats need a seed value for masking. A value of true returns those masking columns that are using Deterministic Encryption or Deterministic Substitution masking format.
        /// </summary>
        [Input("isSeedRequired")]
        public Input<bool>? IsSeedRequired { get; set; }

        [Input("maskingColumnGroups")]
        private InputList<string>? _maskingColumnGroups;

        /// <summary>
        /// A filter to return only the resources that match the specified masking column group.
        /// </summary>
        public InputList<string> MaskingColumnGroups
        {
            get => _maskingColumnGroups ?? (_maskingColumnGroups = new InputList<string>());
            set => _maskingColumnGroups = value;
        }

        /// <summary>
        /// A filter to return only the resources that match the specified lifecycle states.
        /// </summary>
        [Input("maskingColumnLifecycleState")]
        public Input<string>? MaskingColumnLifecycleState { get; set; }

        /// <summary>
        /// The OCID of the masking policy.
        /// </summary>
        [Input("maskingPolicyId", required: true)]
        public Input<string> MaskingPolicyId { get; set; } = null!;

        [Input("objectTypes")]
        private InputList<string>? _objectTypes;

        /// <summary>
        /// A filter to return only items related to a specific object type.
        /// </summary>
        public InputList<string> ObjectTypes
        {
            get => _objectTypes ?? (_objectTypes = new InputList<string>());
            set => _objectTypes = value;
        }

        [Input("objects")]
        private InputList<string>? _objects;

        /// <summary>
        /// A filter to return only items related to a specific object name.
        /// </summary>
        public InputList<string> Objects
        {
            get => _objects ?? (_objects = new InputList<string>());
            set => _objects = value;
        }

        [Input("schemaNames")]
        private InputList<string>? _schemaNames;

        /// <summary>
        /// A filter to return only items related to specific schema name.
        /// </summary>
        public InputList<string> SchemaNames
        {
            get => _schemaNames ?? (_schemaNames = new InputList<string>());
            set => _schemaNames = value;
        }

        /// <summary>
        /// A filter to return only items related to a specific sensitive type OCID.
        /// </summary>
        [Input("sensitiveTypeId")]
        public Input<string>? SensitiveTypeId { get; set; }

        /// <summary>
        /// A filter to return only the resources that were created after the specified date and time, as defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Using TimeCreatedGreaterThanOrEqualToQueryParam parameter retrieves all resources created after that date.
        /// 
        /// **Example:** 2016-12-19T16:39:57.600Z
        /// </summary>
        [Input("timeCreatedGreaterThanOrEqualTo")]
        public Input<string>? TimeCreatedGreaterThanOrEqualTo { get; set; }

        /// <summary>
        /// Search for resources that were created before a specific date. Specifying this parameter corresponding `timeCreatedLessThan` parameter will retrieve all resources created before the specified created date, in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by RFC 3339.
        /// 
        /// **Example:** 2016-12-19T16:39:57.600Z
        /// </summary>
        [Input("timeCreatedLessThan")]
        public Input<string>? TimeCreatedLessThan { get; set; }

        /// <summary>
        /// Search for resources that were updated after a specific date. Specifying this parameter corresponding `timeUpdatedGreaterThanOrEqualTo` parameter will retrieve all resources updated after the specified created date, in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by RFC 3339.
        /// </summary>
        [Input("timeUpdatedGreaterThanOrEqualTo")]
        public Input<string>? TimeUpdatedGreaterThanOrEqualTo { get; set; }

        /// <summary>
        /// Search for resources that were updated before a specific date. Specifying this parameter corresponding `timeUpdatedLessThan` parameter will retrieve all resources updated before the specified created date, in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by RFC 3339.
        /// </summary>
        [Input("timeUpdatedLessThan")]
        public Input<string>? TimeUpdatedLessThan { get; set; }

        public GetMaskingPoliciesMaskingColumnsInvokeArgs()
        {
        }
        public static new GetMaskingPoliciesMaskingColumnsInvokeArgs Empty => new GetMaskingPoliciesMaskingColumnsInvokeArgs();
    }


    [OutputType]
    public sealed class GetMaskingPoliciesMaskingColumnsResult
    {
        /// <summary>
        /// The name of the substitution column.
        /// </summary>
        public readonly ImmutableArray<string> ColumnNames;
        /// <summary>
        /// The data type of the masking column.
        /// </summary>
        public readonly ImmutableArray<string> DataTypes;
        public readonly ImmutableArray<Outputs.GetMaskingPoliciesMaskingColumnsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Indicates whether data masking is enabled for the masking column.
        /// </summary>
        public readonly bool? IsMaskingEnabled;
        public readonly bool? IsSeedRequired;
        /// <summary>
        /// The list of masking_column_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMaskingPoliciesMaskingColumnsMaskingColumnCollectionResult> MaskingColumnCollections;
        /// <summary>
        /// The group of the masking column. All the columns in a group are masked together to ensure  that the masked data across these columns continue to retain the same logical relationship.  For more details, check &lt;a href=https://docs.oracle.com/en/cloud/paas/data-safe/udscs/group-masking1.html#GUID-755056B9-9540-48C0-9491-262A44A85037&gt;Group Masking in the Data Safe documentation.&lt;/a&gt;
        /// </summary>
        public readonly ImmutableArray<string> MaskingColumnGroups;
        public readonly string? MaskingColumnLifecycleState;
        /// <summary>
        /// The OCID of the masking policy that contains the masking column.
        /// </summary>
        public readonly string MaskingPolicyId;
        /// <summary>
        /// The type of the object that contains the database column.
        /// </summary>
        public readonly ImmutableArray<string> ObjectTypes;
        /// <summary>
        /// The name of the object (table or editioning view) that contains the database column.
        /// </summary>
        public readonly ImmutableArray<string> Objects;
        /// <summary>
        /// The name of the schema that contains the database column.
        /// </summary>
        public readonly ImmutableArray<string> SchemaNames;
        /// <summary>
        /// The OCID of the sensitive type associated with the masking column.
        /// </summary>
        public readonly string? SensitiveTypeId;
        public readonly string? TimeCreatedGreaterThanOrEqualTo;
        public readonly string? TimeCreatedLessThan;
        public readonly string? TimeUpdatedGreaterThanOrEqualTo;
        public readonly string? TimeUpdatedLessThan;

        [OutputConstructor]
        private GetMaskingPoliciesMaskingColumnsResult(
            ImmutableArray<string> columnNames,

            ImmutableArray<string> dataTypes,

            ImmutableArray<Outputs.GetMaskingPoliciesMaskingColumnsFilterResult> filters,

            string id,

            bool? isMaskingEnabled,

            bool? isSeedRequired,

            ImmutableArray<Outputs.GetMaskingPoliciesMaskingColumnsMaskingColumnCollectionResult> maskingColumnCollections,

            ImmutableArray<string> maskingColumnGroups,

            string? maskingColumnLifecycleState,

            string maskingPolicyId,

            ImmutableArray<string> objectTypes,

            ImmutableArray<string> objects,

            ImmutableArray<string> schemaNames,

            string? sensitiveTypeId,

            string? timeCreatedGreaterThanOrEqualTo,

            string? timeCreatedLessThan,

            string? timeUpdatedGreaterThanOrEqualTo,

            string? timeUpdatedLessThan)
        {
            ColumnNames = columnNames;
            DataTypes = dataTypes;
            Filters = filters;
            Id = id;
            IsMaskingEnabled = isMaskingEnabled;
            IsSeedRequired = isSeedRequired;
            MaskingColumnCollections = maskingColumnCollections;
            MaskingColumnGroups = maskingColumnGroups;
            MaskingColumnLifecycleState = maskingColumnLifecycleState;
            MaskingPolicyId = maskingPolicyId;
            ObjectTypes = objectTypes;
            Objects = objects;
            SchemaNames = schemaNames;
            SensitiveTypeId = sensitiveTypeId;
            TimeCreatedGreaterThanOrEqualTo = timeCreatedGreaterThanOrEqualTo;
            TimeCreatedLessThan = timeCreatedLessThan;
            TimeUpdatedGreaterThanOrEqualTo = timeUpdatedGreaterThanOrEqualTo;
            TimeUpdatedLessThan = timeUpdatedLessThan;
        }
    }
}
