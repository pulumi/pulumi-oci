// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe
{
    public static class GetMaskingPolicyMaskingSchemas
    {
        /// <summary>
        /// This data source provides the list of Masking Policy Masking Schemas in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Gets a list of masking schemas present in the specified masking policy and based on the specified query parameters.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMaskingPolicyMaskingSchemas = Oci.DataSafe.GetMaskingPolicyMaskingSchemas.Invoke(new()
        ///     {
        ///         MaskingPolicyId = testMaskingPolicy.Id,
        ///         SchemaNames = maskingPolicyMaskingSchemaSchemaName,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetMaskingPolicyMaskingSchemasResult> InvokeAsync(GetMaskingPolicyMaskingSchemasArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMaskingPolicyMaskingSchemasResult>("oci:DataSafe/getMaskingPolicyMaskingSchemas:getMaskingPolicyMaskingSchemas", args ?? new GetMaskingPolicyMaskingSchemasArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Masking Policy Masking Schemas in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Gets a list of masking schemas present in the specified masking policy and based on the specified query parameters.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMaskingPolicyMaskingSchemas = Oci.DataSafe.GetMaskingPolicyMaskingSchemas.Invoke(new()
        ///     {
        ///         MaskingPolicyId = testMaskingPolicy.Id,
        ///         SchemaNames = maskingPolicyMaskingSchemaSchemaName,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetMaskingPolicyMaskingSchemasResult> Invoke(GetMaskingPolicyMaskingSchemasInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMaskingPolicyMaskingSchemasResult>("oci:DataSafe/getMaskingPolicyMaskingSchemas:getMaskingPolicyMaskingSchemas", args ?? new GetMaskingPolicyMaskingSchemasInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMaskingPolicyMaskingSchemasArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetMaskingPolicyMaskingSchemasFilterArgs>? _filters;
        public List<Inputs.GetMaskingPolicyMaskingSchemasFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetMaskingPolicyMaskingSchemasFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The OCID of the masking policy.
        /// </summary>
        [Input("maskingPolicyId", required: true)]
        public string MaskingPolicyId { get; set; } = null!;

        [Input("schemaNames")]
        private List<string>? _schemaNames;

        /// <summary>
        /// A filter to return only items related to specific schema name.
        /// </summary>
        public List<string> SchemaNames
        {
            get => _schemaNames ?? (_schemaNames = new List<string>());
            set => _schemaNames = value;
        }

        public GetMaskingPolicyMaskingSchemasArgs()
        {
        }
        public static new GetMaskingPolicyMaskingSchemasArgs Empty => new GetMaskingPolicyMaskingSchemasArgs();
    }

    public sealed class GetMaskingPolicyMaskingSchemasInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetMaskingPolicyMaskingSchemasFilterInputArgs>? _filters;
        public InputList<Inputs.GetMaskingPolicyMaskingSchemasFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetMaskingPolicyMaskingSchemasFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The OCID of the masking policy.
        /// </summary>
        [Input("maskingPolicyId", required: true)]
        public Input<string> MaskingPolicyId { get; set; } = null!;

        [Input("schemaNames")]
        private InputList<string>? _schemaNames;

        /// <summary>
        /// A filter to return only items related to specific schema name.
        /// </summary>
        public InputList<string> SchemaNames
        {
            get => _schemaNames ?? (_schemaNames = new InputList<string>());
            set => _schemaNames = value;
        }

        public GetMaskingPolicyMaskingSchemasInvokeArgs()
        {
        }
        public static new GetMaskingPolicyMaskingSchemasInvokeArgs Empty => new GetMaskingPolicyMaskingSchemasInvokeArgs();
    }


    [OutputType]
    public sealed class GetMaskingPolicyMaskingSchemasResult
    {
        public readonly ImmutableArray<Outputs.GetMaskingPolicyMaskingSchemasFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string MaskingPolicyId;
        /// <summary>
        /// The list of masking_schema_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMaskingPolicyMaskingSchemasMaskingSchemaCollectionResult> MaskingSchemaCollections;
        /// <summary>
        /// The database schema that contains the masking column.
        /// </summary>
        public readonly ImmutableArray<string> SchemaNames;

        [OutputConstructor]
        private GetMaskingPolicyMaskingSchemasResult(
            ImmutableArray<Outputs.GetMaskingPolicyMaskingSchemasFilterResult> filters,

            string id,

            string maskingPolicyId,

            ImmutableArray<Outputs.GetMaskingPolicyMaskingSchemasMaskingSchemaCollectionResult> maskingSchemaCollections,

            ImmutableArray<string> schemaNames)
        {
            Filters = filters;
            Id = id;
            MaskingPolicyId = maskingPolicyId;
            MaskingSchemaCollections = maskingSchemaCollections;
            SchemaNames = schemaNames;
        }
    }
}
