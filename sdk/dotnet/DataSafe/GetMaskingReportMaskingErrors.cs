// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe
{
    public static class GetMaskingReportMaskingErrors
    {
        /// <summary>
        /// This data source provides the list of Masking Report Masking Errors in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Gets a list of masking errors in a masking run based on the specified query parameters.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMaskingReportMaskingErrors = Oci.DataSafe.GetMaskingReportMaskingErrors.Invoke(new()
        ///     {
        ///         MaskingReportId = testMaskingReport.Id,
        ///         StepName = maskingReportMaskingErrorStepName,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetMaskingReportMaskingErrorsResult> InvokeAsync(GetMaskingReportMaskingErrorsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMaskingReportMaskingErrorsResult>("oci:DataSafe/getMaskingReportMaskingErrors:getMaskingReportMaskingErrors", args ?? new GetMaskingReportMaskingErrorsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Masking Report Masking Errors in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Gets a list of masking errors in a masking run based on the specified query parameters.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMaskingReportMaskingErrors = Oci.DataSafe.GetMaskingReportMaskingErrors.Invoke(new()
        ///     {
        ///         MaskingReportId = testMaskingReport.Id,
        ///         StepName = maskingReportMaskingErrorStepName,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetMaskingReportMaskingErrorsResult> Invoke(GetMaskingReportMaskingErrorsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMaskingReportMaskingErrorsResult>("oci:DataSafe/getMaskingReportMaskingErrors:getMaskingReportMaskingErrors", args ?? new GetMaskingReportMaskingErrorsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Masking Report Masking Errors in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Gets a list of masking errors in a masking run based on the specified query parameters.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMaskingReportMaskingErrors = Oci.DataSafe.GetMaskingReportMaskingErrors.Invoke(new()
        ///     {
        ///         MaskingReportId = testMaskingReport.Id,
        ///         StepName = maskingReportMaskingErrorStepName,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetMaskingReportMaskingErrorsResult> Invoke(GetMaskingReportMaskingErrorsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetMaskingReportMaskingErrorsResult>("oci:DataSafe/getMaskingReportMaskingErrors:getMaskingReportMaskingErrors", args ?? new GetMaskingReportMaskingErrorsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMaskingReportMaskingErrorsArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetMaskingReportMaskingErrorsFilterArgs>? _filters;
        public List<Inputs.GetMaskingReportMaskingErrorsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetMaskingReportMaskingErrorsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The OCID of the masking report.
        /// </summary>
        [Input("maskingReportId", required: true)]
        public string MaskingReportId { get; set; } = null!;

        /// <summary>
        /// A filter to return only masking errors that match the specified step name.
        /// </summary>
        [Input("stepName")]
        public string? StepName { get; set; }

        public GetMaskingReportMaskingErrorsArgs()
        {
        }
        public static new GetMaskingReportMaskingErrorsArgs Empty => new GetMaskingReportMaskingErrorsArgs();
    }

    public sealed class GetMaskingReportMaskingErrorsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetMaskingReportMaskingErrorsFilterInputArgs>? _filters;
        public InputList<Inputs.GetMaskingReportMaskingErrorsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetMaskingReportMaskingErrorsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The OCID of the masking report.
        /// </summary>
        [Input("maskingReportId", required: true)]
        public Input<string> MaskingReportId { get; set; } = null!;

        /// <summary>
        /// A filter to return only masking errors that match the specified step name.
        /// </summary>
        [Input("stepName")]
        public Input<string>? StepName { get; set; }

        public GetMaskingReportMaskingErrorsInvokeArgs()
        {
        }
        public static new GetMaskingReportMaskingErrorsInvokeArgs Empty => new GetMaskingReportMaskingErrorsInvokeArgs();
    }


    [OutputType]
    public sealed class GetMaskingReportMaskingErrorsResult
    {
        public readonly ImmutableArray<Outputs.GetMaskingReportMaskingErrorsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of masking_error_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMaskingReportMaskingErrorsMaskingErrorCollectionResult> MaskingErrorCollections;
        public readonly string MaskingReportId;
        /// <summary>
        /// The stepName of the masking error.
        /// </summary>
        public readonly string? StepName;

        [OutputConstructor]
        private GetMaskingReportMaskingErrorsResult(
            ImmutableArray<Outputs.GetMaskingReportMaskingErrorsFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetMaskingReportMaskingErrorsMaskingErrorCollectionResult> maskingErrorCollections,

            string maskingReportId,

            string? stepName)
        {
            Filters = filters;
            Id = id;
            MaskingErrorCollections = maskingErrorCollections;
            MaskingReportId = maskingReportId;
            StepName = stepName;
        }
    }
}
