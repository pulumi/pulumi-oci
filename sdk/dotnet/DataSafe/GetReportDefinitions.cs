// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe
{
    public static class GetReportDefinitions
    {
        /// <summary>
        /// This data source provides the list of Report Definitions in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Gets a list of report definitions.
        /// The ListReportDefinitions operation returns only the report definitions in the specified `compartmentId`.
        /// It also returns the seeded report definitions which are available to all the compartments.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testReportDefinitions = Oci.DataSafe.GetReportDefinitions.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         AccessLevel = @var.Report_definition_access_level,
        ///         Category = @var.Report_definition_category,
        ///         CompartmentIdInSubtree = @var.Report_definition_compartment_id_in_subtree,
        ///         DataSource = @var.Report_definition_data_source,
        ///         DisplayName = @var.Report_definition_display_name,
        ///         IsSeeded = @var.Report_definition_is_seeded,
        ///         State = @var.Report_definition_state,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetReportDefinitionsResult> InvokeAsync(GetReportDefinitionsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetReportDefinitionsResult>("oci:DataSafe/getReportDefinitions:getReportDefinitions", args ?? new GetReportDefinitionsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Report Definitions in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Gets a list of report definitions.
        /// The ListReportDefinitions operation returns only the report definitions in the specified `compartmentId`.
        /// It also returns the seeded report definitions which are available to all the compartments.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testReportDefinitions = Oci.DataSafe.GetReportDefinitions.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         AccessLevel = @var.Report_definition_access_level,
        ///         Category = @var.Report_definition_category,
        ///         CompartmentIdInSubtree = @var.Report_definition_compartment_id_in_subtree,
        ///         DataSource = @var.Report_definition_data_source,
        ///         DisplayName = @var.Report_definition_display_name,
        ///         IsSeeded = @var.Report_definition_is_seeded,
        ///         State = @var.Report_definition_state,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetReportDefinitionsResult> Invoke(GetReportDefinitionsInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetReportDefinitionsResult>("oci:DataSafe/getReportDefinitions:getReportDefinitions", args ?? new GetReportDefinitionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetReportDefinitionsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
        /// </summary>
        [Input("accessLevel")]
        public string? AccessLevel { get; set; }

        /// <summary>
        /// An optional filter to return only resources that match the specified category.
        /// </summary>
        [Input("category")]
        public string? Category { get; set; }

        /// <summary>
        /// A filter to return only resources that match the specified compartment OCID.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
        /// </summary>
        [Input("compartmentIdInSubtree")]
        public bool? CompartmentIdInSubtree { get; set; }

        /// <summary>
        /// Specifies the name of a resource that provides data for the report. For example  alerts, events.
        /// </summary>
        [Input("dataSource")]
        public string? DataSource { get; set; }

        /// <summary>
        /// The name of the report definition to query.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetReportDefinitionsFilterArgs>? _filters;
        public List<Inputs.GetReportDefinitionsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetReportDefinitionsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A boolean flag indicating to list seeded report definitions. Set this parameter to get list of seeded report definitions.
        /// </summary>
        [Input("isSeeded")]
        public bool? IsSeeded { get; set; }

        /// <summary>
        /// An optional filter to return only resources that match the specified lifecycle state.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetReportDefinitionsArgs()
        {
        }
        public static new GetReportDefinitionsArgs Empty => new GetReportDefinitionsArgs();
    }

    public sealed class GetReportDefinitionsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
        /// </summary>
        [Input("accessLevel")]
        public Input<string>? AccessLevel { get; set; }

        /// <summary>
        /// An optional filter to return only resources that match the specified category.
        /// </summary>
        [Input("category")]
        public Input<string>? Category { get; set; }

        /// <summary>
        /// A filter to return only resources that match the specified compartment OCID.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
        /// </summary>
        [Input("compartmentIdInSubtree")]
        public Input<bool>? CompartmentIdInSubtree { get; set; }

        /// <summary>
        /// Specifies the name of a resource that provides data for the report. For example  alerts, events.
        /// </summary>
        [Input("dataSource")]
        public Input<string>? DataSource { get; set; }

        /// <summary>
        /// The name of the report definition to query.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetReportDefinitionsFilterInputArgs>? _filters;
        public InputList<Inputs.GetReportDefinitionsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetReportDefinitionsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A boolean flag indicating to list seeded report definitions. Set this parameter to get list of seeded report definitions.
        /// </summary>
        [Input("isSeeded")]
        public Input<bool>? IsSeeded { get; set; }

        /// <summary>
        /// An optional filter to return only resources that match the specified lifecycle state.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetReportDefinitionsInvokeArgs()
        {
        }
        public static new GetReportDefinitionsInvokeArgs Empty => new GetReportDefinitionsInvokeArgs();
    }


    [OutputType]
    public sealed class GetReportDefinitionsResult
    {
        public readonly string? AccessLevel;
        /// <summary>
        /// Specifies the name of the category that this report belongs to.
        /// </summary>
        public readonly string? Category;
        /// <summary>
        /// The OCID of the compartment containing the report definition.
        /// </summary>
        public readonly string CompartmentId;
        public readonly bool? CompartmentIdInSubtree;
        /// <summary>
        /// Specifies the name of a resource that provides data for the report. For example alerts, events.
        /// </summary>
        public readonly string? DataSource;
        /// <summary>
        /// Name of the report definition.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetReportDefinitionsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Signifies whether the definition is seeded or user defined. Values can either be 'true' or 'false'.
        /// </summary>
        public readonly bool? IsSeeded;
        /// <summary>
        /// The list of report_definition_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetReportDefinitionsReportDefinitionCollectionResult> ReportDefinitionCollections;
        /// <summary>
        /// The current state of the report.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetReportDefinitionsResult(
            string? accessLevel,

            string? category,

            string compartmentId,

            bool? compartmentIdInSubtree,

            string? dataSource,

            string? displayName,

            ImmutableArray<Outputs.GetReportDefinitionsFilterResult> filters,

            string id,

            bool? isSeeded,

            ImmutableArray<Outputs.GetReportDefinitionsReportDefinitionCollectionResult> reportDefinitionCollections,

            string? state)
        {
            AccessLevel = accessLevel;
            Category = category;
            CompartmentId = compartmentId;
            CompartmentIdInSubtree = compartmentIdInSubtree;
            DataSource = dataSource;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            IsSeeded = isSeeded;
            ReportDefinitionCollections = reportDefinitionCollections;
            State = state;
        }
    }
}
