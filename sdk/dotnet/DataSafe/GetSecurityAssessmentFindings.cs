// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe
{
    public static class GetSecurityAssessmentFindings
    {
        /// <summary>
        /// This data source provides the list of Security Assessment Findings in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// List all the findings from all the targets in the specified assessment.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSecurityAssessmentFindings = Oci.DataSafe.GetSecurityAssessmentFindings.Invoke(new()
        ///     {
        ///         SecurityAssessmentId = oci_data_safe_security_assessment.Test_security_assessment.Id,
        ///         AccessLevel = @var.Security_assessment_finding_access_level,
        ///         CompartmentIdInSubtree = @var.Security_assessment_finding_compartment_id_in_subtree,
        ///         FindingKey = @var.Security_assessment_finding_finding_key,
        ///         Severity = @var.Security_assessment_finding_severity,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetSecurityAssessmentFindingsResult> InvokeAsync(GetSecurityAssessmentFindingsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSecurityAssessmentFindingsResult>("oci:DataSafe/getSecurityAssessmentFindings:getSecurityAssessmentFindings", args ?? new GetSecurityAssessmentFindingsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Security Assessment Findings in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// List all the findings from all the targets in the specified assessment.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSecurityAssessmentFindings = Oci.DataSafe.GetSecurityAssessmentFindings.Invoke(new()
        ///     {
        ///         SecurityAssessmentId = oci_data_safe_security_assessment.Test_security_assessment.Id,
        ///         AccessLevel = @var.Security_assessment_finding_access_level,
        ///         CompartmentIdInSubtree = @var.Security_assessment_finding_compartment_id_in_subtree,
        ///         FindingKey = @var.Security_assessment_finding_finding_key,
        ///         Severity = @var.Security_assessment_finding_severity,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetSecurityAssessmentFindingsResult> Invoke(GetSecurityAssessmentFindingsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSecurityAssessmentFindingsResult>("oci:DataSafe/getSecurityAssessmentFindings:getSecurityAssessmentFindings", args ?? new GetSecurityAssessmentFindingsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSecurityAssessmentFindingsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
        /// </summary>
        [Input("accessLevel")]
        public string? AccessLevel { get; set; }

        /// <summary>
        /// Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
        /// </summary>
        [Input("compartmentIdInSubtree")]
        public bool? CompartmentIdInSubtree { get; set; }

        [Input("filters")]
        private List<Inputs.GetSecurityAssessmentFindingsFilterArgs>? _filters;
        public List<Inputs.GetSecurityAssessmentFindingsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetSecurityAssessmentFindingsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Each finding has a key. This key is same for the finding across targets
        /// </summary>
        [Input("findingKey")]
        public string? FindingKey { get; set; }

        /// <summary>
        /// The OCID of the security assessment.
        /// </summary>
        [Input("securityAssessmentId", required: true)]
        public string SecurityAssessmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only findings of a particular risk level.
        /// </summary>
        [Input("severity")]
        public string? Severity { get; set; }

        public GetSecurityAssessmentFindingsArgs()
        {
        }
        public static new GetSecurityAssessmentFindingsArgs Empty => new GetSecurityAssessmentFindingsArgs();
    }

    public sealed class GetSecurityAssessmentFindingsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
        /// </summary>
        [Input("accessLevel")]
        public Input<string>? AccessLevel { get; set; }

        /// <summary>
        /// Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
        /// </summary>
        [Input("compartmentIdInSubtree")]
        public Input<bool>? CompartmentIdInSubtree { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetSecurityAssessmentFindingsFilterInputArgs>? _filters;
        public InputList<Inputs.GetSecurityAssessmentFindingsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetSecurityAssessmentFindingsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Each finding has a key. This key is same for the finding across targets
        /// </summary>
        [Input("findingKey")]
        public Input<string>? FindingKey { get; set; }

        /// <summary>
        /// The OCID of the security assessment.
        /// </summary>
        [Input("securityAssessmentId", required: true)]
        public Input<string> SecurityAssessmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only findings of a particular risk level.
        /// </summary>
        [Input("severity")]
        public Input<string>? Severity { get; set; }

        public GetSecurityAssessmentFindingsInvokeArgs()
        {
        }
        public static new GetSecurityAssessmentFindingsInvokeArgs Empty => new GetSecurityAssessmentFindingsInvokeArgs();
    }


    [OutputType]
    public sealed class GetSecurityAssessmentFindingsResult
    {
        public readonly string? AccessLevel;
        public readonly bool? CompartmentIdInSubtree;
        public readonly ImmutableArray<Outputs.GetSecurityAssessmentFindingsFilterResult> Filters;
        public readonly string? FindingKey;
        /// <summary>
        /// The list of findings.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSecurityAssessmentFindingsFindingResult> Findings;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string SecurityAssessmentId;
        /// <summary>
        /// The severity of the finding.
        /// </summary>
        public readonly string? Severity;

        [OutputConstructor]
        private GetSecurityAssessmentFindingsResult(
            string? accessLevel,

            bool? compartmentIdInSubtree,

            ImmutableArray<Outputs.GetSecurityAssessmentFindingsFilterResult> filters,

            string? findingKey,

            ImmutableArray<Outputs.GetSecurityAssessmentFindingsFindingResult> findings,

            string id,

            string securityAssessmentId,

            string? severity)
        {
            AccessLevel = accessLevel;
            CompartmentIdInSubtree = compartmentIdInSubtree;
            Filters = filters;
            FindingKey = findingKey;
            Findings = findings;
            Id = id;
            SecurityAssessmentId = securityAssessmentId;
            Severity = severity;
        }
    }
}
