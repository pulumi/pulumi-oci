// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe
{
    public static class GetSecurityAssessmentFindings
    {
        /// <summary>
        /// subcategory: "Data Safe"
        /// layout: "oci"
        /// page_title: "Oracle Cloud Infrastructure: oci.DataSafe.getSecurityAssessmentFindings"
        /// sidebar_current: "docs-oci-datasource-data_safe-security_assessment_findings"
        /// description: |-
        /// 	Provides the list of Security Assessment Findings in Oracle Cloud Infrastructure Data Safe service
        /// &lt;!-- yaml: line 6: found a tab character where an indentation space is expected --&gt;
        /// 
        /// # Data Source: oci.DataSafe.getSecurityAssessmentFindings
        /// This data source provides the list of Security Assessment Findings in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// List all the findings from all the targets in the specified compartment.
        /// </summary>
        public static Task<GetSecurityAssessmentFindingsResult> InvokeAsync(GetSecurityAssessmentFindingsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSecurityAssessmentFindingsResult>("oci:DataSafe/getSecurityAssessmentFindings:getSecurityAssessmentFindings", args ?? new GetSecurityAssessmentFindingsArgs(), options.WithDefaults());

        /// <summary>
        /// subcategory: "Data Safe"
        /// layout: "oci"
        /// page_title: "Oracle Cloud Infrastructure: oci.DataSafe.getSecurityAssessmentFindings"
        /// sidebar_current: "docs-oci-datasource-data_safe-security_assessment_findings"
        /// description: |-
        /// 	Provides the list of Security Assessment Findings in Oracle Cloud Infrastructure Data Safe service
        /// &lt;!-- yaml: line 6: found a tab character where an indentation space is expected --&gt;
        /// 
        /// # Data Source: oci.DataSafe.getSecurityAssessmentFindings
        /// This data source provides the list of Security Assessment Findings in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// List all the findings from all the targets in the specified compartment.
        /// </summary>
        public static Output<GetSecurityAssessmentFindingsResult> Invoke(GetSecurityAssessmentFindingsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSecurityAssessmentFindingsResult>("oci:DataSafe/getSecurityAssessmentFindings:getSecurityAssessmentFindings", args ?? new GetSecurityAssessmentFindingsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSecurityAssessmentFindingsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
        /// </summary>
        [Input("accessLevel")]
        public string? AccessLevel { get; set; }

        /// <summary>
        /// Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
        /// </summary>
        [Input("compartmentIdInSubtree")]
        public bool? CompartmentIdInSubtree { get; set; }

        [Input("filters")]
        private List<Inputs.GetSecurityAssessmentFindingsFilterArgs>? _filters;
        public List<Inputs.GetSecurityAssessmentFindingsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetSecurityAssessmentFindingsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Each finding in security assessment has an associated key (think of key as a finding's name). For a given finding, the key will be the same across targets. The user can use these keys to filter the findings.
        /// </summary>
        [Input("findingKey")]
        public string? FindingKey { get; set; }

        /// <summary>
        /// A filter to return only the findings that are marked as top findings.
        /// </summary>
        [Input("isTopFinding")]
        public bool? IsTopFinding { get; set; }

        /// <summary>
        /// An optional filter to return only findings containing the specified reference.
        /// </summary>
        [Input("references")]
        public string? References { get; set; }

        /// <summary>
        /// The OCID of the security assessment.
        /// </summary>
        [Input("securityAssessmentId", required: true)]
        public string SecurityAssessmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only findings of a particular risk level.
        /// </summary>
        [Input("severity")]
        public string? Severity { get; set; }

        /// <summary>
        /// A filter to return only the findings that match the specified lifecycle states.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        /// <summary>
        /// A filter to return only items related to a specific target OCID.
        /// </summary>
        [Input("targetId")]
        public string? TargetId { get; set; }

        public GetSecurityAssessmentFindingsArgs()
        {
        }
        public static new GetSecurityAssessmentFindingsArgs Empty => new GetSecurityAssessmentFindingsArgs();
    }

    public sealed class GetSecurityAssessmentFindingsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
        /// </summary>
        [Input("accessLevel")]
        public Input<string>? AccessLevel { get; set; }

        /// <summary>
        /// Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
        /// </summary>
        [Input("compartmentIdInSubtree")]
        public Input<bool>? CompartmentIdInSubtree { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetSecurityAssessmentFindingsFilterInputArgs>? _filters;
        public InputList<Inputs.GetSecurityAssessmentFindingsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetSecurityAssessmentFindingsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Each finding in security assessment has an associated key (think of key as a finding's name). For a given finding, the key will be the same across targets. The user can use these keys to filter the findings.
        /// </summary>
        [Input("findingKey")]
        public Input<string>? FindingKey { get; set; }

        /// <summary>
        /// A filter to return only the findings that are marked as top findings.
        /// </summary>
        [Input("isTopFinding")]
        public Input<bool>? IsTopFinding { get; set; }

        /// <summary>
        /// An optional filter to return only findings containing the specified reference.
        /// </summary>
        [Input("references")]
        public Input<string>? References { get; set; }

        /// <summary>
        /// The OCID of the security assessment.
        /// </summary>
        [Input("securityAssessmentId", required: true)]
        public Input<string> SecurityAssessmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only findings of a particular risk level.
        /// </summary>
        [Input("severity")]
        public Input<string>? Severity { get; set; }

        /// <summary>
        /// A filter to return only the findings that match the specified lifecycle states.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// A filter to return only items related to a specific target OCID.
        /// </summary>
        [Input("targetId")]
        public Input<string>? TargetId { get; set; }

        public GetSecurityAssessmentFindingsInvokeArgs()
        {
        }
        public static new GetSecurityAssessmentFindingsInvokeArgs Empty => new GetSecurityAssessmentFindingsInvokeArgs();
    }


    [OutputType]
    public sealed class GetSecurityAssessmentFindingsResult
    {
        public readonly string? AccessLevel;
        public readonly bool? CompartmentIdInSubtree;
        public readonly ImmutableArray<Outputs.GetSecurityAssessmentFindingsFilterResult> Filters;
        public readonly string? FindingKey;
        /// <summary>
        /// The list of findings.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSecurityAssessmentFindingsFindingResult> Findings;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Indicates whether a given finding is marked as topFinding or not.
        /// </summary>
        public readonly bool? IsTopFinding;
        /// <summary>
        /// Provides information on whether the finding is related to a CIS Oracle Database Benchmark recommendation, a STIG rule, or a GDPR Article/Recital.
        /// </summary>
        public readonly string? References;
        public readonly string SecurityAssessmentId;
        /// <summary>
        /// The severity of the finding as determined by security assessment and is same as oracleDefinedSeverity, unless modified by user.
        /// </summary>
        public readonly string? Severity;
        /// <summary>
        /// The current state of the finding.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// The OCID of the target database.
        /// </summary>
        public readonly string? TargetId;

        [OutputConstructor]
        private GetSecurityAssessmentFindingsResult(
            string? accessLevel,

            bool? compartmentIdInSubtree,

            ImmutableArray<Outputs.GetSecurityAssessmentFindingsFilterResult> filters,

            string? findingKey,

            ImmutableArray<Outputs.GetSecurityAssessmentFindingsFindingResult> findings,

            string id,

            bool? isTopFinding,

            string? references,

            string securityAssessmentId,

            string? severity,

            string? state,

            string? targetId)
        {
            AccessLevel = accessLevel;
            CompartmentIdInSubtree = compartmentIdInSubtree;
            Filters = filters;
            FindingKey = findingKey;
            Findings = findings;
            Id = id;
            IsTopFinding = isTopFinding;
            References = references;
            SecurityAssessmentId = securityAssessmentId;
            Severity = severity;
            State = state;
            TargetId = targetId;
        }
    }
}
