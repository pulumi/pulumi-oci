// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe
{
    public static class GetSecurityAssessmentFindingsChangeAuditLogs
    {
        /// <summary>
        /// This data source provides the list of Security Assessment Findings Change Audit Logs in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// List all changes made by user to risk level of findings of the specified assessment.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSecurityAssessmentFindingsChangeAuditLogs = Oci.DataSafe.GetSecurityAssessmentFindingsChangeAuditLogs.Invoke(new()
        ///     {
        ///         SecurityAssessmentId = oci_data_safe_security_assessment.Test_security_assessment.Id,
        ///         FindingKey = @var.Security_assessment_findings_change_audit_log_finding_key,
        ///         FindingTitle = @var.Security_assessment_findings_change_audit_log_finding_title,
        ///         IsRiskDeferred = @var.Security_assessment_findings_change_audit_log_is_risk_deferred,
        ///         ModifiedBy = @var.Security_assessment_findings_change_audit_log_modified_by,
        ///         Severity = @var.Security_assessment_findings_change_audit_log_severity,
        ///         TimeUpdatedGreaterThanOrEqualTo = @var.Security_assessment_findings_change_audit_log_time_updated_greater_than_or_equal_to,
        ///         TimeUpdatedLessThan = @var.Security_assessment_findings_change_audit_log_time_updated_less_than,
        ///         TimeValidUntilGreaterThanOrEqualTo = @var.Security_assessment_findings_change_audit_log_time_valid_until_greater_than_or_equal_to,
        ///         TimeValidUntilLessThan = @var.Security_assessment_findings_change_audit_log_time_valid_until_less_than,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetSecurityAssessmentFindingsChangeAuditLogsResult> InvokeAsync(GetSecurityAssessmentFindingsChangeAuditLogsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSecurityAssessmentFindingsChangeAuditLogsResult>("oci:DataSafe/getSecurityAssessmentFindingsChangeAuditLogs:getSecurityAssessmentFindingsChangeAuditLogs", args ?? new GetSecurityAssessmentFindingsChangeAuditLogsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Security Assessment Findings Change Audit Logs in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// List all changes made by user to risk level of findings of the specified assessment.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSecurityAssessmentFindingsChangeAuditLogs = Oci.DataSafe.GetSecurityAssessmentFindingsChangeAuditLogs.Invoke(new()
        ///     {
        ///         SecurityAssessmentId = oci_data_safe_security_assessment.Test_security_assessment.Id,
        ///         FindingKey = @var.Security_assessment_findings_change_audit_log_finding_key,
        ///         FindingTitle = @var.Security_assessment_findings_change_audit_log_finding_title,
        ///         IsRiskDeferred = @var.Security_assessment_findings_change_audit_log_is_risk_deferred,
        ///         ModifiedBy = @var.Security_assessment_findings_change_audit_log_modified_by,
        ///         Severity = @var.Security_assessment_findings_change_audit_log_severity,
        ///         TimeUpdatedGreaterThanOrEqualTo = @var.Security_assessment_findings_change_audit_log_time_updated_greater_than_or_equal_to,
        ///         TimeUpdatedLessThan = @var.Security_assessment_findings_change_audit_log_time_updated_less_than,
        ///         TimeValidUntilGreaterThanOrEqualTo = @var.Security_assessment_findings_change_audit_log_time_valid_until_greater_than_or_equal_to,
        ///         TimeValidUntilLessThan = @var.Security_assessment_findings_change_audit_log_time_valid_until_less_than,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetSecurityAssessmentFindingsChangeAuditLogsResult> Invoke(GetSecurityAssessmentFindingsChangeAuditLogsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSecurityAssessmentFindingsChangeAuditLogsResult>("oci:DataSafe/getSecurityAssessmentFindingsChangeAuditLogs:getSecurityAssessmentFindingsChangeAuditLogs", args ?? new GetSecurityAssessmentFindingsChangeAuditLogsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSecurityAssessmentFindingsChangeAuditLogsArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetSecurityAssessmentFindingsChangeAuditLogsFilterArgs>? _filters;
        public List<Inputs.GetSecurityAssessmentFindingsChangeAuditLogsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetSecurityAssessmentFindingsChangeAuditLogsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The unique key that identifies the finding. It is a string and unique within a security assessment.
        /// </summary>
        [Input("findingKey")]
        public string? FindingKey { get; set; }

        /// <summary>
        /// The unique title that identifies the finding. It is a string and unique within a security assessment.
        /// </summary>
        [Input("findingTitle")]
        public string? FindingTitle { get; set; }

        /// <summary>
        /// A filter to check findings whose risks were deferred by the user.
        /// </summary>
        [Input("isRiskDeferred")]
        public bool? IsRiskDeferred { get; set; }

        /// <summary>
        /// A filter to check which user modified the risk level of the finding.
        /// </summary>
        [Input("modifiedBy")]
        public string? ModifiedBy { get; set; }

        /// <summary>
        /// The OCID of the security assessment.
        /// </summary>
        [Input("securityAssessmentId", required: true)]
        public string SecurityAssessmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only findings of a particular risk level.
        /// </summary>
        [Input("severity")]
        public string? Severity { get; set; }

        /// <summary>
        /// Search for resources that were updated after a specific date. Specifying this parameter corresponding `timeUpdatedGreaterThanOrEqualTo` parameter will retrieve all resources updated after the specified created date, in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by RFC 3339.
        /// </summary>
        [Input("timeUpdatedGreaterThanOrEqualTo")]
        public string? TimeUpdatedGreaterThanOrEqualTo { get; set; }

        /// <summary>
        /// Search for resources that were updated before a specific date. Specifying this parameter corresponding `timeUpdatedLessThan` parameter will retrieve all resources updated before the specified created date, in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by RFC 3339.
        /// </summary>
        [Input("timeUpdatedLessThan")]
        public string? TimeUpdatedLessThan { get; set; }

        /// <summary>
        /// Specifying `TimeValidUntilGreaterThanOrEqualToQueryParam` parameter  will retrieve all items for which the risk level modification by user will  no longer be valid greater than the date and time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// 
        /// **Example:** 2016-12-19T00:00:00.000Z
        /// </summary>
        [Input("timeValidUntilGreaterThanOrEqualTo")]
        public string? TimeValidUntilGreaterThanOrEqualTo { get; set; }

        /// <summary>
        /// Specifying `TimeValidUntilLessThanQueryParam` parameter will retrieve all items for which the risk level modification by user will  be valid until less than the date and time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// 
        /// **Example:** 2016-12-19T00:00:00.000Z
        /// </summary>
        [Input("timeValidUntilLessThan")]
        public string? TimeValidUntilLessThan { get; set; }

        public GetSecurityAssessmentFindingsChangeAuditLogsArgs()
        {
        }
        public static new GetSecurityAssessmentFindingsChangeAuditLogsArgs Empty => new GetSecurityAssessmentFindingsChangeAuditLogsArgs();
    }

    public sealed class GetSecurityAssessmentFindingsChangeAuditLogsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetSecurityAssessmentFindingsChangeAuditLogsFilterInputArgs>? _filters;
        public InputList<Inputs.GetSecurityAssessmentFindingsChangeAuditLogsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetSecurityAssessmentFindingsChangeAuditLogsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The unique key that identifies the finding. It is a string and unique within a security assessment.
        /// </summary>
        [Input("findingKey")]
        public Input<string>? FindingKey { get; set; }

        /// <summary>
        /// The unique title that identifies the finding. It is a string and unique within a security assessment.
        /// </summary>
        [Input("findingTitle")]
        public Input<string>? FindingTitle { get; set; }

        /// <summary>
        /// A filter to check findings whose risks were deferred by the user.
        /// </summary>
        [Input("isRiskDeferred")]
        public Input<bool>? IsRiskDeferred { get; set; }

        /// <summary>
        /// A filter to check which user modified the risk level of the finding.
        /// </summary>
        [Input("modifiedBy")]
        public Input<string>? ModifiedBy { get; set; }

        /// <summary>
        /// The OCID of the security assessment.
        /// </summary>
        [Input("securityAssessmentId", required: true)]
        public Input<string> SecurityAssessmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only findings of a particular risk level.
        /// </summary>
        [Input("severity")]
        public Input<string>? Severity { get; set; }

        /// <summary>
        /// Search for resources that were updated after a specific date. Specifying this parameter corresponding `timeUpdatedGreaterThanOrEqualTo` parameter will retrieve all resources updated after the specified created date, in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by RFC 3339.
        /// </summary>
        [Input("timeUpdatedGreaterThanOrEqualTo")]
        public Input<string>? TimeUpdatedGreaterThanOrEqualTo { get; set; }

        /// <summary>
        /// Search for resources that were updated before a specific date. Specifying this parameter corresponding `timeUpdatedLessThan` parameter will retrieve all resources updated before the specified created date, in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by RFC 3339.
        /// </summary>
        [Input("timeUpdatedLessThan")]
        public Input<string>? TimeUpdatedLessThan { get; set; }

        /// <summary>
        /// Specifying `TimeValidUntilGreaterThanOrEqualToQueryParam` parameter  will retrieve all items for which the risk level modification by user will  no longer be valid greater than the date and time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// 
        /// **Example:** 2016-12-19T00:00:00.000Z
        /// </summary>
        [Input("timeValidUntilGreaterThanOrEqualTo")]
        public Input<string>? TimeValidUntilGreaterThanOrEqualTo { get; set; }

        /// <summary>
        /// Specifying `TimeValidUntilLessThanQueryParam` parameter will retrieve all items for which the risk level modification by user will  be valid until less than the date and time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// 
        /// **Example:** 2016-12-19T00:00:00.000Z
        /// </summary>
        [Input("timeValidUntilLessThan")]
        public Input<string>? TimeValidUntilLessThan { get; set; }

        public GetSecurityAssessmentFindingsChangeAuditLogsInvokeArgs()
        {
        }
        public static new GetSecurityAssessmentFindingsChangeAuditLogsInvokeArgs Empty => new GetSecurityAssessmentFindingsChangeAuditLogsInvokeArgs();
    }


    [OutputType]
    public sealed class GetSecurityAssessmentFindingsChangeAuditLogsResult
    {
        public readonly ImmutableArray<Outputs.GetSecurityAssessmentFindingsChangeAuditLogsFilterResult> Filters;
        /// <summary>
        /// The unique key that identifies the finding.
        /// </summary>
        public readonly string? FindingKey;
        /// <summary>
        /// The short title for the finding whose risk is being modified.
        /// </summary>
        public readonly string? FindingTitle;
        /// <summary>
        /// The list of findings_change_audit_log_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSecurityAssessmentFindingsChangeAuditLogsFindingsChangeAuditLogCollectionResult> FindingsChangeAuditLogCollections;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Determines if the user has deferred the risk level of this finding when he is ok with it  and does not plan to do anything about it.
        /// </summary>
        public readonly bool? IsRiskDeferred;
        /// <summary>
        /// The user who initiated change of risk level of the finding
        /// </summary>
        public readonly string? ModifiedBy;
        public readonly string SecurityAssessmentId;
        /// <summary>
        /// The original severity / risk level of the finding as determined by security assessment.
        /// </summary>
        public readonly string? Severity;
        public readonly string? TimeUpdatedGreaterThanOrEqualTo;
        public readonly string? TimeUpdatedLessThan;
        public readonly string? TimeValidUntilGreaterThanOrEqualTo;
        public readonly string? TimeValidUntilLessThan;

        [OutputConstructor]
        private GetSecurityAssessmentFindingsChangeAuditLogsResult(
            ImmutableArray<Outputs.GetSecurityAssessmentFindingsChangeAuditLogsFilterResult> filters,

            string? findingKey,

            string? findingTitle,

            ImmutableArray<Outputs.GetSecurityAssessmentFindingsChangeAuditLogsFindingsChangeAuditLogCollectionResult> findingsChangeAuditLogCollections,

            string id,

            bool? isRiskDeferred,

            string? modifiedBy,

            string securityAssessmentId,

            string? severity,

            string? timeUpdatedGreaterThanOrEqualTo,

            string? timeUpdatedLessThan,

            string? timeValidUntilGreaterThanOrEqualTo,

            string? timeValidUntilLessThan)
        {
            Filters = filters;
            FindingKey = findingKey;
            FindingTitle = findingTitle;
            FindingsChangeAuditLogCollections = findingsChangeAuditLogCollections;
            Id = id;
            IsRiskDeferred = isRiskDeferred;
            ModifiedBy = modifiedBy;
            SecurityAssessmentId = securityAssessmentId;
            Severity = severity;
            TimeUpdatedGreaterThanOrEqualTo = timeUpdatedGreaterThanOrEqualTo;
            TimeUpdatedLessThan = timeUpdatedLessThan;
            TimeValidUntilGreaterThanOrEqualTo = timeValidUntilGreaterThanOrEqualTo;
            TimeValidUntilLessThan = timeValidUntilLessThan;
        }
    }
}
