// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe
{
    public static class GetSecurityAssessments
    {
        /// <summary>
        /// This data source provides the list of Security Assessments in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Gets a list of security assessments.
        /// 
        /// The ListSecurityAssessments operation returns only the assessments in the specified `compartmentId`.
        /// The list does not include any subcompartments of the compartmentId passed.
        /// 
        /// The parameter `accessLevel` specifies whether to return only those compartments for which the
        /// requestor has INSPECT permissions on at least one resource directly
        /// or indirectly (ACCESSIBLE) (the resource can be in a subcompartment) or to return Not Authorized if
        /// Principal doesn't have access to even one of the child compartments. This is valid only when
        /// `compartmentIdInSubtree` is set to `true`.
        /// 
        /// The parameter `compartmentIdInSubtree` applies when you perform ListSecurityAssessments on the
        /// `compartmentId` passed and when it is set to true, the entire hierarchy of compartments can be returned.
        /// To get a full list of all compartments and subcompartments in the tenancy (root compartment),
        /// set the parameter `compartmentIdInSubtree` to true and `accessLevel` to ACCESSIBLE.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSecurityAssessments = Oci.DataSafe.GetSecurityAssessments.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         AccessLevel = @var.Security_assessment_access_level,
        ///         CompartmentIdInSubtree = @var.Security_assessment_compartment_id_in_subtree,
        ///         DisplayName = @var.Security_assessment_display_name,
        ///         IsBaseline = @var.Security_assessment_is_baseline,
        ///         IsScheduleAssessment = @var.Security_assessment_is_schedule_assessment,
        ///         ScheduleAssessmentId = oci_data_safe_schedule_assessment.Test_schedule_assessment.Id,
        ///         State = @var.Security_assessment_state,
        ///         TargetId = oci_cloud_guard_target.Test_target.Id,
        ///         TimeCreatedGreaterThanOrEqualTo = @var.Security_assessment_time_created_greater_than_or_equal_to,
        ///         TimeCreatedLessThan = @var.Security_assessment_time_created_less_than,
        ///         TriggeredBy = @var.Security_assessment_triggered_by,
        ///         Type = @var.Security_assessment_type,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetSecurityAssessmentsResult> InvokeAsync(GetSecurityAssessmentsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSecurityAssessmentsResult>("oci:DataSafe/getSecurityAssessments:getSecurityAssessments", args ?? new GetSecurityAssessmentsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Security Assessments in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Gets a list of security assessments.
        /// 
        /// The ListSecurityAssessments operation returns only the assessments in the specified `compartmentId`.
        /// The list does not include any subcompartments of the compartmentId passed.
        /// 
        /// The parameter `accessLevel` specifies whether to return only those compartments for which the
        /// requestor has INSPECT permissions on at least one resource directly
        /// or indirectly (ACCESSIBLE) (the resource can be in a subcompartment) or to return Not Authorized if
        /// Principal doesn't have access to even one of the child compartments. This is valid only when
        /// `compartmentIdInSubtree` is set to `true`.
        /// 
        /// The parameter `compartmentIdInSubtree` applies when you perform ListSecurityAssessments on the
        /// `compartmentId` passed and when it is set to true, the entire hierarchy of compartments can be returned.
        /// To get a full list of all compartments and subcompartments in the tenancy (root compartment),
        /// set the parameter `compartmentIdInSubtree` to true and `accessLevel` to ACCESSIBLE.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSecurityAssessments = Oci.DataSafe.GetSecurityAssessments.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         AccessLevel = @var.Security_assessment_access_level,
        ///         CompartmentIdInSubtree = @var.Security_assessment_compartment_id_in_subtree,
        ///         DisplayName = @var.Security_assessment_display_name,
        ///         IsBaseline = @var.Security_assessment_is_baseline,
        ///         IsScheduleAssessment = @var.Security_assessment_is_schedule_assessment,
        ///         ScheduleAssessmentId = oci_data_safe_schedule_assessment.Test_schedule_assessment.Id,
        ///         State = @var.Security_assessment_state,
        ///         TargetId = oci_cloud_guard_target.Test_target.Id,
        ///         TimeCreatedGreaterThanOrEqualTo = @var.Security_assessment_time_created_greater_than_or_equal_to,
        ///         TimeCreatedLessThan = @var.Security_assessment_time_created_less_than,
        ///         TriggeredBy = @var.Security_assessment_triggered_by,
        ///         Type = @var.Security_assessment_type,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetSecurityAssessmentsResult> Invoke(GetSecurityAssessmentsInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetSecurityAssessmentsResult>("oci:DataSafe/getSecurityAssessments:getSecurityAssessments", args ?? new GetSecurityAssessmentsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSecurityAssessmentsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
        /// </summary>
        [Input("accessLevel")]
        public string? AccessLevel { get; set; }

        /// <summary>
        /// A filter to return only resources that match the specified compartment OCID.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
        /// </summary>
        [Input("compartmentIdInSubtree")]
        public bool? CompartmentIdInSubtree { get; set; }

        /// <summary>
        /// A filter to return only resources that match the specified display name.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetSecurityAssessmentsFilterArgs>? _filters;
        public List<Inputs.GetSecurityAssessmentsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetSecurityAssessmentsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only security assessments that are set as baseline.
        /// </summary>
        [Input("isBaseline")]
        public bool? IsBaseline { get; set; }

        /// <summary>
        /// A filter to return only security assessments of type save schedule.
        /// </summary>
        [Input("isScheduleAssessment")]
        public bool? IsScheduleAssessment { get; set; }

        /// <summary>
        /// The OCID of the security assessment of type SAVE_SCHEDULE.
        /// </summary>
        [Input("scheduleAssessmentId")]
        public string? ScheduleAssessmentId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the specified lifecycle state.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        /// <summary>
        /// A filter to return only items related to a specific target OCID.
        /// </summary>
        [Input("targetId")]
        public string? TargetId { get; set; }

        /// <summary>
        /// A filter to return only the resources that were created after the specified date and time, as defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Using TimeCreatedGreaterThanOrEqualToQueryParam parameter retrieves all resources created after that date.
        /// </summary>
        [Input("timeCreatedGreaterThanOrEqualTo")]
        public string? TimeCreatedGreaterThanOrEqualTo { get; set; }

        /// <summary>
        /// Search for resources that were created before a specific date. Specifying this parameter corresponding `timeCreatedLessThan` parameter will retrieve all resources created before the specified created date, in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by RFC 3339.
        /// </summary>
        [Input("timeCreatedLessThan")]
        public string? TimeCreatedLessThan { get; set; }

        /// <summary>
        /// A filter to return only security asessments that were created by either user or system.
        /// </summary>
        [Input("triggeredBy")]
        public string? TriggeredBy { get; set; }

        /// <summary>
        /// A filter to return only items that match the specified security assessment type.
        /// </summary>
        [Input("type")]
        public string? Type { get; set; }

        public GetSecurityAssessmentsArgs()
        {
        }
        public static new GetSecurityAssessmentsArgs Empty => new GetSecurityAssessmentsArgs();
    }

    public sealed class GetSecurityAssessmentsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
        /// </summary>
        [Input("accessLevel")]
        public Input<string>? AccessLevel { get; set; }

        /// <summary>
        /// A filter to return only resources that match the specified compartment OCID.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
        /// </summary>
        [Input("compartmentIdInSubtree")]
        public Input<bool>? CompartmentIdInSubtree { get; set; }

        /// <summary>
        /// A filter to return only resources that match the specified display name.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetSecurityAssessmentsFilterInputArgs>? _filters;
        public InputList<Inputs.GetSecurityAssessmentsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetSecurityAssessmentsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only security assessments that are set as baseline.
        /// </summary>
        [Input("isBaseline")]
        public Input<bool>? IsBaseline { get; set; }

        /// <summary>
        /// A filter to return only security assessments of type save schedule.
        /// </summary>
        [Input("isScheduleAssessment")]
        public Input<bool>? IsScheduleAssessment { get; set; }

        /// <summary>
        /// The OCID of the security assessment of type SAVE_SCHEDULE.
        /// </summary>
        [Input("scheduleAssessmentId")]
        public Input<string>? ScheduleAssessmentId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the specified lifecycle state.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// A filter to return only items related to a specific target OCID.
        /// </summary>
        [Input("targetId")]
        public Input<string>? TargetId { get; set; }

        /// <summary>
        /// A filter to return only the resources that were created after the specified date and time, as defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Using TimeCreatedGreaterThanOrEqualToQueryParam parameter retrieves all resources created after that date.
        /// </summary>
        [Input("timeCreatedGreaterThanOrEqualTo")]
        public Input<string>? TimeCreatedGreaterThanOrEqualTo { get; set; }

        /// <summary>
        /// Search for resources that were created before a specific date. Specifying this parameter corresponding `timeCreatedLessThan` parameter will retrieve all resources created before the specified created date, in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by RFC 3339.
        /// </summary>
        [Input("timeCreatedLessThan")]
        public Input<string>? TimeCreatedLessThan { get; set; }

        /// <summary>
        /// A filter to return only security asessments that were created by either user or system.
        /// </summary>
        [Input("triggeredBy")]
        public Input<string>? TriggeredBy { get; set; }

        /// <summary>
        /// A filter to return only items that match the specified security assessment type.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public GetSecurityAssessmentsInvokeArgs()
        {
        }
        public static new GetSecurityAssessmentsInvokeArgs Empty => new GetSecurityAssessmentsInvokeArgs();
    }


    [OutputType]
    public sealed class GetSecurityAssessmentsResult
    {
        public readonly string? AccessLevel;
        /// <summary>
        /// The OCID of the compartment that contains the security assessment.
        /// </summary>
        public readonly string CompartmentId;
        public readonly bool? CompartmentIdInSubtree;
        /// <summary>
        /// The display name of the security assessment.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetSecurityAssessmentsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Indicates whether or not the security assessment is set as a baseline. This is applicable only for saved security assessments.
        /// </summary>
        public readonly bool? IsBaseline;
        public readonly bool? IsScheduleAssessment;
        public readonly string? ScheduleAssessmentId;
        /// <summary>
        /// The list of security_assessments.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSecurityAssessmentsSecurityAssessmentResult> SecurityAssessments;
        /// <summary>
        /// The current state of the security assessment.
        /// </summary>
        public readonly string? State;
        public readonly string? TargetId;
        public readonly string? TimeCreatedGreaterThanOrEqualTo;
        public readonly string? TimeCreatedLessThan;
        /// <summary>
        /// Indicates whether the security assessment was created by system or by a user.
        /// </summary>
        public readonly string? TriggeredBy;
        /// <summary>
        /// The type of this security assessment. The possible types are:
        /// </summary>
        public readonly string? Type;

        [OutputConstructor]
        private GetSecurityAssessmentsResult(
            string? accessLevel,

            string compartmentId,

            bool? compartmentIdInSubtree,

            string? displayName,

            ImmutableArray<Outputs.GetSecurityAssessmentsFilterResult> filters,

            string id,

            bool? isBaseline,

            bool? isScheduleAssessment,

            string? scheduleAssessmentId,

            ImmutableArray<Outputs.GetSecurityAssessmentsSecurityAssessmentResult> securityAssessments,

            string? state,

            string? targetId,

            string? timeCreatedGreaterThanOrEqualTo,

            string? timeCreatedLessThan,

            string? triggeredBy,

            string? type)
        {
            AccessLevel = accessLevel;
            CompartmentId = compartmentId;
            CompartmentIdInSubtree = compartmentIdInSubtree;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            IsBaseline = isBaseline;
            IsScheduleAssessment = isScheduleAssessment;
            ScheduleAssessmentId = scheduleAssessmentId;
            SecurityAssessments = securityAssessments;
            State = state;
            TargetId = targetId;
            TimeCreatedGreaterThanOrEqualTo = timeCreatedGreaterThanOrEqualTo;
            TimeCreatedLessThan = timeCreatedLessThan;
            TriggeredBy = triggeredBy;
            Type = type;
        }
    }
}
