// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe
{
    public static class GetSecurityPolicyReportDatabaseViewAccessEntries
    {
        /// <summary>
        /// This data source provides the list of Security Policy Report Database View Access Entries in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Retrieves a list of all database view access entries in Data Safe.
        /// 
        /// The ListDatabaseViewAccessEntries operation returns only the database view access objects for the specified security policy report.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSecurityPolicyReportDatabaseViewAccessEntries = Oci.DataSafe.GetSecurityPolicyReportDatabaseViewAccessEntries.Invoke(new()
        ///     {
        ///         SecurityPolicyReportId = testSecurityPolicyReport.Id,
        ///         ScimQuery = securityPolicyReportDatabaseViewAccessEntryScimQuery,
        ///         TargetId = testTarget.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSecurityPolicyReportDatabaseViewAccessEntriesResult> InvokeAsync(GetSecurityPolicyReportDatabaseViewAccessEntriesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSecurityPolicyReportDatabaseViewAccessEntriesResult>("oci:DataSafe/getSecurityPolicyReportDatabaseViewAccessEntries:getSecurityPolicyReportDatabaseViewAccessEntries", args ?? new GetSecurityPolicyReportDatabaseViewAccessEntriesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Security Policy Report Database View Access Entries in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Retrieves a list of all database view access entries in Data Safe.
        /// 
        /// The ListDatabaseViewAccessEntries operation returns only the database view access objects for the specified security policy report.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSecurityPolicyReportDatabaseViewAccessEntries = Oci.DataSafe.GetSecurityPolicyReportDatabaseViewAccessEntries.Invoke(new()
        ///     {
        ///         SecurityPolicyReportId = testSecurityPolicyReport.Id,
        ///         ScimQuery = securityPolicyReportDatabaseViewAccessEntryScimQuery,
        ///         TargetId = testTarget.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSecurityPolicyReportDatabaseViewAccessEntriesResult> Invoke(GetSecurityPolicyReportDatabaseViewAccessEntriesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSecurityPolicyReportDatabaseViewAccessEntriesResult>("oci:DataSafe/getSecurityPolicyReportDatabaseViewAccessEntries:getSecurityPolicyReportDatabaseViewAccessEntries", args ?? new GetSecurityPolicyReportDatabaseViewAccessEntriesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSecurityPolicyReportDatabaseViewAccessEntriesArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetSecurityPolicyReportDatabaseViewAccessEntriesFilterArgs>? _filters;
        public List<Inputs.GetSecurityPolicyReportDatabaseViewAccessEntriesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetSecurityPolicyReportDatabaseViewAccessEntriesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The scimQuery query parameter accepts filter expressions that use the syntax described in Section 3.2.2.2 of the System for Cross-Domain Identity Management (SCIM) specification, which is available at [RFC3339](https://tools.ietf.org/html/draft-ietf-scim-api-12). In SCIM filtering expressions, text, date, and time values must be enclosed in quotation marks, with date and time values using ISO-8601 format. (Numeric and boolean values should not be quoted.)
        /// 
        /// **Example:** query=(accessType eq 'SELECT') and (grantee eq 'ADMIN')
        /// </summary>
        [Input("scimQuery")]
        public string? ScimQuery { get; set; }

        /// <summary>
        /// The OCID of the security policy report resource.
        /// </summary>
        [Input("securityPolicyReportId", required: true)]
        public string SecurityPolicyReportId { get; set; } = null!;

        /// <summary>
        /// A filter to return only items related to a specific target OCID.
        /// </summary>
        [Input("targetId")]
        public string? TargetId { get; set; }

        public GetSecurityPolicyReportDatabaseViewAccessEntriesArgs()
        {
        }
        public static new GetSecurityPolicyReportDatabaseViewAccessEntriesArgs Empty => new GetSecurityPolicyReportDatabaseViewAccessEntriesArgs();
    }

    public sealed class GetSecurityPolicyReportDatabaseViewAccessEntriesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetSecurityPolicyReportDatabaseViewAccessEntriesFilterInputArgs>? _filters;
        public InputList<Inputs.GetSecurityPolicyReportDatabaseViewAccessEntriesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetSecurityPolicyReportDatabaseViewAccessEntriesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The scimQuery query parameter accepts filter expressions that use the syntax described in Section 3.2.2.2 of the System for Cross-Domain Identity Management (SCIM) specification, which is available at [RFC3339](https://tools.ietf.org/html/draft-ietf-scim-api-12). In SCIM filtering expressions, text, date, and time values must be enclosed in quotation marks, with date and time values using ISO-8601 format. (Numeric and boolean values should not be quoted.)
        /// 
        /// **Example:** query=(accessType eq 'SELECT') and (grantee eq 'ADMIN')
        /// </summary>
        [Input("scimQuery")]
        public Input<string>? ScimQuery { get; set; }

        /// <summary>
        /// The OCID of the security policy report resource.
        /// </summary>
        [Input("securityPolicyReportId", required: true)]
        public Input<string> SecurityPolicyReportId { get; set; } = null!;

        /// <summary>
        /// A filter to return only items related to a specific target OCID.
        /// </summary>
        [Input("targetId")]
        public Input<string>? TargetId { get; set; }

        public GetSecurityPolicyReportDatabaseViewAccessEntriesInvokeArgs()
        {
        }
        public static new GetSecurityPolicyReportDatabaseViewAccessEntriesInvokeArgs Empty => new GetSecurityPolicyReportDatabaseViewAccessEntriesInvokeArgs();
    }


    [OutputType]
    public sealed class GetSecurityPolicyReportDatabaseViewAccessEntriesResult
    {
        /// <summary>
        /// The list of database_view_access_entry_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSecurityPolicyReportDatabaseViewAccessEntriesDatabaseViewAccessEntryCollectionResult> DatabaseViewAccessEntryCollections;
        public readonly ImmutableArray<Outputs.GetSecurityPolicyReportDatabaseViewAccessEntriesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? ScimQuery;
        public readonly string SecurityPolicyReportId;
        /// <summary>
        /// The OCID of the of the  target database.
        /// </summary>
        public readonly string? TargetId;

        [OutputConstructor]
        private GetSecurityPolicyReportDatabaseViewAccessEntriesResult(
            ImmutableArray<Outputs.GetSecurityPolicyReportDatabaseViewAccessEntriesDatabaseViewAccessEntryCollectionResult> databaseViewAccessEntryCollections,

            ImmutableArray<Outputs.GetSecurityPolicyReportDatabaseViewAccessEntriesFilterResult> filters,

            string id,

            string? scimQuery,

            string securityPolicyReportId,

            string? targetId)
        {
            DatabaseViewAccessEntryCollections = databaseViewAccessEntryCollections;
            Filters = filters;
            Id = id;
            ScimQuery = scimQuery;
            SecurityPolicyReportId = securityPolicyReportId;
            TargetId = targetId;
        }
    }
}
