// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe
{
    public static class GetSecurityPolicyReportRoleGrantPaths
    {
        /// <summary>
        /// This data source provides the list of Security Policy Report Role Grant Paths in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Retrieves a list of all role grant paths for a particular user.
        /// 
        /// The ListRoleGrantPaths operation returns only the role grant paths for the specified security policy report.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSecurityPolicyReportRoleGrantPaths = Oci.DataSafe.GetSecurityPolicyReportRoleGrantPaths.Invoke(new()
        ///     {
        ///         GrantedRole = securityPolicyReportRoleGrantPathGrantedRole,
        ///         Grantee = securityPolicyReportRoleGrantPathGrantee,
        ///         SecurityPolicyReportId = testSecurityPolicyReport.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSecurityPolicyReportRoleGrantPathsResult> InvokeAsync(GetSecurityPolicyReportRoleGrantPathsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSecurityPolicyReportRoleGrantPathsResult>("oci:DataSafe/getSecurityPolicyReportRoleGrantPaths:getSecurityPolicyReportRoleGrantPaths", args ?? new GetSecurityPolicyReportRoleGrantPathsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Security Policy Report Role Grant Paths in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Retrieves a list of all role grant paths for a particular user.
        /// 
        /// The ListRoleGrantPaths operation returns only the role grant paths for the specified security policy report.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSecurityPolicyReportRoleGrantPaths = Oci.DataSafe.GetSecurityPolicyReportRoleGrantPaths.Invoke(new()
        ///     {
        ///         GrantedRole = securityPolicyReportRoleGrantPathGrantedRole,
        ///         Grantee = securityPolicyReportRoleGrantPathGrantee,
        ///         SecurityPolicyReportId = testSecurityPolicyReport.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSecurityPolicyReportRoleGrantPathsResult> Invoke(GetSecurityPolicyReportRoleGrantPathsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSecurityPolicyReportRoleGrantPathsResult>("oci:DataSafe/getSecurityPolicyReportRoleGrantPaths:getSecurityPolicyReportRoleGrantPaths", args ?? new GetSecurityPolicyReportRoleGrantPathsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSecurityPolicyReportRoleGrantPathsArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetSecurityPolicyReportRoleGrantPathsFilterArgs>? _filters;
        public List<Inputs.GetSecurityPolicyReportRoleGrantPathsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetSecurityPolicyReportRoleGrantPathsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only items that match the specified role.
        /// </summary>
        [Input("grantedRole", required: true)]
        public string GrantedRole { get; set; } = null!;

        /// <summary>
        /// A filter to return only items that match the specified grantee.
        /// </summary>
        [Input("grantee", required: true)]
        public string Grantee { get; set; } = null!;

        /// <summary>
        /// The OCID of the security policy report resource.
        /// </summary>
        [Input("securityPolicyReportId", required: true)]
        public string SecurityPolicyReportId { get; set; } = null!;

        public GetSecurityPolicyReportRoleGrantPathsArgs()
        {
        }
        public static new GetSecurityPolicyReportRoleGrantPathsArgs Empty => new GetSecurityPolicyReportRoleGrantPathsArgs();
    }

    public sealed class GetSecurityPolicyReportRoleGrantPathsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetSecurityPolicyReportRoleGrantPathsFilterInputArgs>? _filters;
        public InputList<Inputs.GetSecurityPolicyReportRoleGrantPathsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetSecurityPolicyReportRoleGrantPathsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only items that match the specified role.
        /// </summary>
        [Input("grantedRole", required: true)]
        public Input<string> GrantedRole { get; set; } = null!;

        /// <summary>
        /// A filter to return only items that match the specified grantee.
        /// </summary>
        [Input("grantee", required: true)]
        public Input<string> Grantee { get; set; } = null!;

        /// <summary>
        /// The OCID of the security policy report resource.
        /// </summary>
        [Input("securityPolicyReportId", required: true)]
        public Input<string> SecurityPolicyReportId { get; set; } = null!;

        public GetSecurityPolicyReportRoleGrantPathsInvokeArgs()
        {
        }
        public static new GetSecurityPolicyReportRoleGrantPathsInvokeArgs Empty => new GetSecurityPolicyReportRoleGrantPathsInvokeArgs();
    }


    [OutputType]
    public sealed class GetSecurityPolicyReportRoleGrantPathsResult
    {
        public readonly ImmutableArray<Outputs.GetSecurityPolicyReportRoleGrantPathsFilterResult> Filters;
        /// <summary>
        /// The name of the role.
        /// </summary>
        public readonly string GrantedRole;
        /// <summary>
        /// Grantee is the user who can access the table.
        /// </summary>
        public readonly string Grantee;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of role_grant_path_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSecurityPolicyReportRoleGrantPathsRoleGrantPathCollectionResult> RoleGrantPathCollections;
        public readonly string SecurityPolicyReportId;

        [OutputConstructor]
        private GetSecurityPolicyReportRoleGrantPathsResult(
            ImmutableArray<Outputs.GetSecurityPolicyReportRoleGrantPathsFilterResult> filters,

            string grantedRole,

            string grantee,

            string id,

            ImmutableArray<Outputs.GetSecurityPolicyReportRoleGrantPathsRoleGrantPathCollectionResult> roleGrantPathCollections,

            string securityPolicyReportId)
        {
            Filters = filters;
            GrantedRole = grantedRole;
            Grantee = grantee;
            Id = id;
            RoleGrantPathCollections = roleGrantPathCollections;
            SecurityPolicyReportId = securityPolicyReportId;
        }
    }
}
