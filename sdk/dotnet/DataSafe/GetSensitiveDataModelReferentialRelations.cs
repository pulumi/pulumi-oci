// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe
{
    public static class GetSensitiveDataModelReferentialRelations
    {
        /// <summary>
        /// This data source provides the list of Sensitive Data Model Referential Relations in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Gets a list of referential relations present in the specified sensitive data model based on the specified query parameters.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSensitiveDataModelReferentialRelations = Oci.DataSafe.GetSensitiveDataModelReferentialRelations.Invoke(new()
        ///     {
        ///         SensitiveDataModelId = testSensitiveDataModel.Id,
        ///         ColumnNames = sensitiveDataModelReferentialRelationColumnName,
        ///         IsSensitive = sensitiveDataModelReferentialRelationIsSensitive,
        ///         Objects = sensitiveDataModelReferentialRelationObject,
        ///         RelationTypes = sensitiveDataModelReferentialRelationRelationType,
        ///         SchemaNames = sensitiveDataModelReferentialRelationSchemaName,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSensitiveDataModelReferentialRelationsResult> InvokeAsync(GetSensitiveDataModelReferentialRelationsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSensitiveDataModelReferentialRelationsResult>("oci:DataSafe/getSensitiveDataModelReferentialRelations:getSensitiveDataModelReferentialRelations", args ?? new GetSensitiveDataModelReferentialRelationsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Sensitive Data Model Referential Relations in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Gets a list of referential relations present in the specified sensitive data model based on the specified query parameters.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSensitiveDataModelReferentialRelations = Oci.DataSafe.GetSensitiveDataModelReferentialRelations.Invoke(new()
        ///     {
        ///         SensitiveDataModelId = testSensitiveDataModel.Id,
        ///         ColumnNames = sensitiveDataModelReferentialRelationColumnName,
        ///         IsSensitive = sensitiveDataModelReferentialRelationIsSensitive,
        ///         Objects = sensitiveDataModelReferentialRelationObject,
        ///         RelationTypes = sensitiveDataModelReferentialRelationRelationType,
        ///         SchemaNames = sensitiveDataModelReferentialRelationSchemaName,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSensitiveDataModelReferentialRelationsResult> Invoke(GetSensitiveDataModelReferentialRelationsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSensitiveDataModelReferentialRelationsResult>("oci:DataSafe/getSensitiveDataModelReferentialRelations:getSensitiveDataModelReferentialRelations", args ?? new GetSensitiveDataModelReferentialRelationsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Sensitive Data Model Referential Relations in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Gets a list of referential relations present in the specified sensitive data model based on the specified query parameters.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSensitiveDataModelReferentialRelations = Oci.DataSafe.GetSensitiveDataModelReferentialRelations.Invoke(new()
        ///     {
        ///         SensitiveDataModelId = testSensitiveDataModel.Id,
        ///         ColumnNames = sensitiveDataModelReferentialRelationColumnName,
        ///         IsSensitive = sensitiveDataModelReferentialRelationIsSensitive,
        ///         Objects = sensitiveDataModelReferentialRelationObject,
        ///         RelationTypes = sensitiveDataModelReferentialRelationRelationType,
        ///         SchemaNames = sensitiveDataModelReferentialRelationSchemaName,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSensitiveDataModelReferentialRelationsResult> Invoke(GetSensitiveDataModelReferentialRelationsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSensitiveDataModelReferentialRelationsResult>("oci:DataSafe/getSensitiveDataModelReferentialRelations:getSensitiveDataModelReferentialRelations", args ?? new GetSensitiveDataModelReferentialRelationsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSensitiveDataModelReferentialRelationsArgs : global::Pulumi.InvokeArgs
    {
        [Input("columnNames")]
        private List<string>? _columnNames;

        /// <summary>
        /// A filter to return only a specific column based on column name.
        /// </summary>
        public List<string> ColumnNames
        {
            get => _columnNames ?? (_columnNames = new List<string>());
            set => _columnNames = value;
        }

        [Input("filters")]
        private List<Inputs.GetSensitiveDataModelReferentialRelationsFilterArgs>? _filters;
        public List<Inputs.GetSensitiveDataModelReferentialRelationsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetSensitiveDataModelReferentialRelationsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Returns referential relations containing sensitive columns when true. Returns referential relations containing non sensitive columns when false.
        /// </summary>
        [Input("isSensitive")]
        public bool? IsSensitive { get; set; }

        [Input("objects")]
        private List<string>? _objects;

        /// <summary>
        /// A filter to return only items related to a specific object name.
        /// </summary>
        public List<string> Objects
        {
            get => _objects ?? (_objects = new List<string>());
            set => _objects = value;
        }

        [Input("relationTypes")]
        private List<string>? _relationTypes;

        /// <summary>
        /// A filter to return sensitive columns based on their relationship with their parent columns. If set to NONE, it returns the sensitive columns that do not have any parent. The response includes the parent columns as well as the independent columns that are not in any relationship. If set to APP_DEFINED, it returns all the child columns that have application-level (non-dictionary) relationship with their parents. If set to DB_DEFINED, it returns all the child columns that have database-level (dictionary-defined) relationship with their parents.
        /// </summary>
        public List<string> RelationTypes
        {
            get => _relationTypes ?? (_relationTypes = new List<string>());
            set => _relationTypes = value;
        }

        [Input("schemaNames")]
        private List<string>? _schemaNames;

        /// <summary>
        /// A filter to return only items related to specific schema name.
        /// </summary>
        public List<string> SchemaNames
        {
            get => _schemaNames ?? (_schemaNames = new List<string>());
            set => _schemaNames = value;
        }

        /// <summary>
        /// The OCID of the sensitive data model.
        /// </summary>
        [Input("sensitiveDataModelId", required: true)]
        public string SensitiveDataModelId { get; set; } = null!;

        public GetSensitiveDataModelReferentialRelationsArgs()
        {
        }
        public static new GetSensitiveDataModelReferentialRelationsArgs Empty => new GetSensitiveDataModelReferentialRelationsArgs();
    }

    public sealed class GetSensitiveDataModelReferentialRelationsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("columnNames")]
        private InputList<string>? _columnNames;

        /// <summary>
        /// A filter to return only a specific column based on column name.
        /// </summary>
        public InputList<string> ColumnNames
        {
            get => _columnNames ?? (_columnNames = new InputList<string>());
            set => _columnNames = value;
        }

        [Input("filters")]
        private InputList<Inputs.GetSensitiveDataModelReferentialRelationsFilterInputArgs>? _filters;
        public InputList<Inputs.GetSensitiveDataModelReferentialRelationsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetSensitiveDataModelReferentialRelationsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Returns referential relations containing sensitive columns when true. Returns referential relations containing non sensitive columns when false.
        /// </summary>
        [Input("isSensitive")]
        public Input<bool>? IsSensitive { get; set; }

        [Input("objects")]
        private InputList<string>? _objects;

        /// <summary>
        /// A filter to return only items related to a specific object name.
        /// </summary>
        public InputList<string> Objects
        {
            get => _objects ?? (_objects = new InputList<string>());
            set => _objects = value;
        }

        [Input("relationTypes")]
        private InputList<string>? _relationTypes;

        /// <summary>
        /// A filter to return sensitive columns based on their relationship with their parent columns. If set to NONE, it returns the sensitive columns that do not have any parent. The response includes the parent columns as well as the independent columns that are not in any relationship. If set to APP_DEFINED, it returns all the child columns that have application-level (non-dictionary) relationship with their parents. If set to DB_DEFINED, it returns all the child columns that have database-level (dictionary-defined) relationship with their parents.
        /// </summary>
        public InputList<string> RelationTypes
        {
            get => _relationTypes ?? (_relationTypes = new InputList<string>());
            set => _relationTypes = value;
        }

        [Input("schemaNames")]
        private InputList<string>? _schemaNames;

        /// <summary>
        /// A filter to return only items related to specific schema name.
        /// </summary>
        public InputList<string> SchemaNames
        {
            get => _schemaNames ?? (_schemaNames = new InputList<string>());
            set => _schemaNames = value;
        }

        /// <summary>
        /// The OCID of the sensitive data model.
        /// </summary>
        [Input("sensitiveDataModelId", required: true)]
        public Input<string> SensitiveDataModelId { get; set; } = null!;

        public GetSensitiveDataModelReferentialRelationsInvokeArgs()
        {
        }
        public static new GetSensitiveDataModelReferentialRelationsInvokeArgs Empty => new GetSensitiveDataModelReferentialRelationsInvokeArgs();
    }


    [OutputType]
    public sealed class GetSensitiveDataModelReferentialRelationsResult
    {
        public readonly ImmutableArray<string> ColumnNames;
        public readonly ImmutableArray<Outputs.GetSensitiveDataModelReferentialRelationsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Determines if the columns present in the referential relation is present in the sensitive data model
        /// </summary>
        public readonly bool? IsSensitive;
        /// <summary>
        /// The database object that contains the columns.
        /// </summary>
        public readonly ImmutableArray<string> Objects;
        /// <summary>
        /// The list of referential_relation_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSensitiveDataModelReferentialRelationsReferentialRelationCollectionResult> ReferentialRelationCollections;
        /// <summary>
        /// The type of referential relationship the sensitive column has with its parent. NONE indicates that the sensitive column does not have a parent. DB_DEFINED indicates that the relationship is defined in the database dictionary. APP_DEFINED indicates that the relationship is defined at the application level and not in the database dictionary.
        /// </summary>
        public readonly ImmutableArray<string> RelationTypes;
        /// <summary>
        /// The schema name.
        /// </summary>
        public readonly ImmutableArray<string> SchemaNames;
        /// <summary>
        /// The OCID of the sensitive data model that contains the sensitive column.
        /// </summary>
        public readonly string SensitiveDataModelId;

        [OutputConstructor]
        private GetSensitiveDataModelReferentialRelationsResult(
            ImmutableArray<string> columnNames,

            ImmutableArray<Outputs.GetSensitiveDataModelReferentialRelationsFilterResult> filters,

            string id,

            bool? isSensitive,

            ImmutableArray<string> objects,

            ImmutableArray<Outputs.GetSensitiveDataModelReferentialRelationsReferentialRelationCollectionResult> referentialRelationCollections,

            ImmutableArray<string> relationTypes,

            ImmutableArray<string> schemaNames,

            string sensitiveDataModelId)
        {
            ColumnNames = columnNames;
            Filters = filters;
            Id = id;
            IsSensitive = isSensitive;
            Objects = objects;
            ReferentialRelationCollections = referentialRelationCollections;
            RelationTypes = relationTypes;
            SchemaNames = schemaNames;
            SensitiveDataModelId = sensitiveDataModelId;
        }
    }
}
