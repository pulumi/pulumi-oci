// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe
{
    public static class GetSensitiveType
    {
        /// <summary>
        /// This data source provides details about a specific Sensitive Type resource in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Gets the details of the specified sensitive type.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSensitiveType = Oci.DataSafe.GetSensitiveType.Invoke(new()
        ///     {
        ///         SensitiveTypeId = testSensitiveTypeOciDataSafeSensitiveType.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSensitiveTypeResult> InvokeAsync(GetSensitiveTypeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSensitiveTypeResult>("oci:DataSafe/getSensitiveType:getSensitiveType", args ?? new GetSensitiveTypeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Sensitive Type resource in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Gets the details of the specified sensitive type.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSensitiveType = Oci.DataSafe.GetSensitiveType.Invoke(new()
        ///     {
        ///         SensitiveTypeId = testSensitiveTypeOciDataSafeSensitiveType.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSensitiveTypeResult> Invoke(GetSensitiveTypeInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSensitiveTypeResult>("oci:DataSafe/getSensitiveType:getSensitiveType", args ?? new GetSensitiveTypeInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSensitiveTypeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the sensitive type.
        /// </summary>
        [Input("sensitiveTypeId", required: true)]
        public string SensitiveTypeId { get; set; } = null!;

        public GetSensitiveTypeArgs()
        {
        }
        public static new GetSensitiveTypeArgs Empty => new GetSensitiveTypeArgs();
    }

    public sealed class GetSensitiveTypeInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the sensitive type.
        /// </summary>
        [Input("sensitiveTypeId", required: true)]
        public Input<string> SensitiveTypeId { get; set; } = null!;

        public GetSensitiveTypeInvokeArgs()
        {
        }
        public static new GetSensitiveTypeInvokeArgs Empty => new GetSensitiveTypeInvokeArgs();
    }


    [OutputType]
    public sealed class GetSensitiveTypeResult
    {
        /// <summary>
        /// A regular expression to be used by data discovery for matching column comments.
        /// </summary>
        public readonly string CommentPattern;
        /// <summary>
        /// The OCID of the compartment that contains the sensitive type.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// A regular expression to be used by data discovery for matching column data values.
        /// </summary>
        public readonly string DataPattern;
        /// <summary>
        /// The OCID of the library masking format that should be used to mask the sensitive columns associated with the sensitive type.
        /// </summary>
        public readonly string DefaultMaskingFormatId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// The description of the sensitive type.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The display name of the sensitive type.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// The entity type. It can be either a sensitive type with regular expressions or a sensitive category used for grouping similar sensitive types.
        /// </summary>
        public readonly string EntityType;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// The OCID of the sensitive type.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Specifies whether the sensitive type is common. Common sensitive types belong to  library sensitive types which are frequently used to perform sensitive data discovery.
        /// </summary>
        public readonly bool IsCommon;
        /// <summary>
        /// A regular expression to be used by data discovery for matching column names.
        /// </summary>
        public readonly string NamePattern;
        /// <summary>
        /// The OCID of the parent sensitive category.
        /// </summary>
        public readonly string ParentCategoryId;
        /// <summary>
        /// The search type indicating how the column name, comment and data patterns should be used by data discovery. [Learn more](https://docs.oracle.com/en/cloud/paas/data-safe/udscs/sensitive-types.html#GUID-1D1AD98E-B93F-4FF2-80AE-CB7D8A14F6CC).
        /// </summary>
        public readonly string SearchType;
        public readonly string SensitiveTypeId;
        /// <summary>
        /// The short name of the sensitive type.
        /// </summary>
        public readonly string ShortName;
        /// <summary>
        /// Specifies whether the sensitive type is user-defined or predefined.
        /// </summary>
        public readonly string Source;
        /// <summary>
        /// The current state of the sensitive type.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> SystemTags;
        /// <summary>
        /// The date and time the sensitive type was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The date and time the sensitive type was last updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetSensitiveTypeResult(
            string commentPattern,

            string compartmentId,

            string dataPattern,

            string defaultMaskingFormatId,

            ImmutableDictionary<string, object> definedTags,

            string description,

            string displayName,

            string entityType,

            ImmutableDictionary<string, object> freeformTags,

            string id,

            bool isCommon,

            string namePattern,

            string parentCategoryId,

            string searchType,

            string sensitiveTypeId,

            string shortName,

            string source,

            string state,

            ImmutableDictionary<string, object> systemTags,

            string timeCreated,

            string timeUpdated)
        {
            CommentPattern = commentPattern;
            CompartmentId = compartmentId;
            DataPattern = dataPattern;
            DefaultMaskingFormatId = defaultMaskingFormatId;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            EntityType = entityType;
            FreeformTags = freeformTags;
            Id = id;
            IsCommon = isCommon;
            NamePattern = namePattern;
            ParentCategoryId = parentCategoryId;
            SearchType = searchType;
            SensitiveTypeId = sensitiveTypeId;
            ShortName = shortName;
            Source = source;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
