// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe
{
    public static class GetSensitiveTypes
    {
        /// <summary>
        /// This data source provides the list of Sensitive Types in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Gets a list of sensitive types based on the specified query parameters.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSensitiveTypes = Oci.DataSafe.GetSensitiveTypes.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         AccessLevel = @var.Sensitive_type_access_level,
        ///         CompartmentIdInSubtree = @var.Sensitive_type_compartment_id_in_subtree,
        ///         DefaultMaskingFormatId = oci_data_safe_default_masking_format.Test_default_masking_format.Id,
        ///         DisplayName = @var.Sensitive_type_display_name,
        ///         EntityType = @var.Sensitive_type_entity_type,
        ///         ParentCategoryId = oci_marketplace_category.Test_category.Id,
        ///         SensitiveTypeId = oci_data_safe_sensitive_type.Test_sensitive_type.Id,
        ///         SensitiveTypeSource = @var.Sensitive_type_sensitive_type_source,
        ///         State = @var.Sensitive_type_state,
        ///         TimeCreatedGreaterThanOrEqualTo = @var.Sensitive_type_time_created_greater_than_or_equal_to,
        ///         TimeCreatedLessThan = @var.Sensitive_type_time_created_less_than,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetSensitiveTypesResult> InvokeAsync(GetSensitiveTypesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSensitiveTypesResult>("oci:DataSafe/getSensitiveTypes:getSensitiveTypes", args ?? new GetSensitiveTypesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Sensitive Types in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Gets a list of sensitive types based on the specified query parameters.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSensitiveTypes = Oci.DataSafe.GetSensitiveTypes.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         AccessLevel = @var.Sensitive_type_access_level,
        ///         CompartmentIdInSubtree = @var.Sensitive_type_compartment_id_in_subtree,
        ///         DefaultMaskingFormatId = oci_data_safe_default_masking_format.Test_default_masking_format.Id,
        ///         DisplayName = @var.Sensitive_type_display_name,
        ///         EntityType = @var.Sensitive_type_entity_type,
        ///         ParentCategoryId = oci_marketplace_category.Test_category.Id,
        ///         SensitiveTypeId = oci_data_safe_sensitive_type.Test_sensitive_type.Id,
        ///         SensitiveTypeSource = @var.Sensitive_type_sensitive_type_source,
        ///         State = @var.Sensitive_type_state,
        ///         TimeCreatedGreaterThanOrEqualTo = @var.Sensitive_type_time_created_greater_than_or_equal_to,
        ///         TimeCreatedLessThan = @var.Sensitive_type_time_created_less_than,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetSensitiveTypesResult> Invoke(GetSensitiveTypesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSensitiveTypesResult>("oci:DataSafe/getSensitiveTypes:getSensitiveTypes", args ?? new GetSensitiveTypesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSensitiveTypesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
        /// </summary>
        [Input("accessLevel")]
        public string? AccessLevel { get; set; }

        /// <summary>
        /// A filter to return only resources that match the specified compartment OCID.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
        /// </summary>
        [Input("compartmentIdInSubtree")]
        public bool? CompartmentIdInSubtree { get; set; }

        /// <summary>
        /// A filter to return only the sensitive types that have the default masking format identified by the specified OCID.
        /// </summary>
        [Input("defaultMaskingFormatId")]
        public string? DefaultMaskingFormatId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the specified display name.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        /// <summary>
        /// A filter to return the sensitive type resources based on the value of their entityType attribute.
        /// </summary>
        [Input("entityType")]
        public string? EntityType { get; set; }

        [Input("filters")]
        private List<Inputs.GetSensitiveTypesFilterArgs>? _filters;
        public List<Inputs.GetSensitiveTypesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetSensitiveTypesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only the sensitive types that are children of the sensitive category identified by the specified OCID.
        /// </summary>
        [Input("parentCategoryId")]
        public string? ParentCategoryId { get; set; }

        /// <summary>
        /// A filter to return only items related to a specific sensitive type OCID.
        /// </summary>
        [Input("sensitiveTypeId")]
        public string? SensitiveTypeId { get; set; }

        /// <summary>
        /// A filter to return the sensitive type resources based on the value of their source attribute.
        /// </summary>
        [Input("sensitiveTypeSource")]
        public string? SensitiveTypeSource { get; set; }

        /// <summary>
        /// A filter to return only the resources that match the specified lifecycle state.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        /// <summary>
        /// A filter to return only the resources that were created after the specified date and time, as defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Using TimeCreatedGreaterThanOrEqualToQueryParam parameter retrieves all resources created after that date.
        /// 
        /// **Example:** 2016-12-19T16:39:57.600Z
        /// </summary>
        [Input("timeCreatedGreaterThanOrEqualTo")]
        public string? TimeCreatedGreaterThanOrEqualTo { get; set; }

        /// <summary>
        /// Search for resources that were created before a specific date. Specifying this parameter corresponding `timeCreatedLessThan` parameter will retrieve all resources created before the specified created date, in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by RFC 3339.
        /// 
        /// **Example:** 2016-12-19T16:39:57.600Z
        /// </summary>
        [Input("timeCreatedLessThan")]
        public string? TimeCreatedLessThan { get; set; }

        public GetSensitiveTypesArgs()
        {
        }
        public static new GetSensitiveTypesArgs Empty => new GetSensitiveTypesArgs();
    }

    public sealed class GetSensitiveTypesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
        /// </summary>
        [Input("accessLevel")]
        public Input<string>? AccessLevel { get; set; }

        /// <summary>
        /// A filter to return only resources that match the specified compartment OCID.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
        /// </summary>
        [Input("compartmentIdInSubtree")]
        public Input<bool>? CompartmentIdInSubtree { get; set; }

        /// <summary>
        /// A filter to return only the sensitive types that have the default masking format identified by the specified OCID.
        /// </summary>
        [Input("defaultMaskingFormatId")]
        public Input<string>? DefaultMaskingFormatId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the specified display name.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// A filter to return the sensitive type resources based on the value of their entityType attribute.
        /// </summary>
        [Input("entityType")]
        public Input<string>? EntityType { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetSensitiveTypesFilterInputArgs>? _filters;
        public InputList<Inputs.GetSensitiveTypesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetSensitiveTypesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only the sensitive types that are children of the sensitive category identified by the specified OCID.
        /// </summary>
        [Input("parentCategoryId")]
        public Input<string>? ParentCategoryId { get; set; }

        /// <summary>
        /// A filter to return only items related to a specific sensitive type OCID.
        /// </summary>
        [Input("sensitiveTypeId")]
        public Input<string>? SensitiveTypeId { get; set; }

        /// <summary>
        /// A filter to return the sensitive type resources based on the value of their source attribute.
        /// </summary>
        [Input("sensitiveTypeSource")]
        public Input<string>? SensitiveTypeSource { get; set; }

        /// <summary>
        /// A filter to return only the resources that match the specified lifecycle state.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// A filter to return only the resources that were created after the specified date and time, as defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Using TimeCreatedGreaterThanOrEqualToQueryParam parameter retrieves all resources created after that date.
        /// 
        /// **Example:** 2016-12-19T16:39:57.600Z
        /// </summary>
        [Input("timeCreatedGreaterThanOrEqualTo")]
        public Input<string>? TimeCreatedGreaterThanOrEqualTo { get; set; }

        /// <summary>
        /// Search for resources that were created before a specific date. Specifying this parameter corresponding `timeCreatedLessThan` parameter will retrieve all resources created before the specified created date, in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by RFC 3339.
        /// 
        /// **Example:** 2016-12-19T16:39:57.600Z
        /// </summary>
        [Input("timeCreatedLessThan")]
        public Input<string>? TimeCreatedLessThan { get; set; }

        public GetSensitiveTypesInvokeArgs()
        {
        }
        public static new GetSensitiveTypesInvokeArgs Empty => new GetSensitiveTypesInvokeArgs();
    }


    [OutputType]
    public sealed class GetSensitiveTypesResult
    {
        public readonly string? AccessLevel;
        /// <summary>
        /// The OCID of the compartment that contains the sensitive type.
        /// </summary>
        public readonly string CompartmentId;
        public readonly bool? CompartmentIdInSubtree;
        /// <summary>
        /// The OCID of the library masking format that should be used to mask the sensitive columns associated with the sensitive type.
        /// </summary>
        public readonly string? DefaultMaskingFormatId;
        /// <summary>
        /// The display name of the sensitive type.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// The entity type. It can be either a sensitive type with regular expressions or a sensitive category used for grouping similar sensitive types.
        /// </summary>
        public readonly string? EntityType;
        public readonly ImmutableArray<Outputs.GetSensitiveTypesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The OCID of the parent sensitive category.
        /// </summary>
        public readonly string? ParentCategoryId;
        /// <summary>
        /// The list of sensitive_type_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSensitiveTypesSensitiveTypeCollectionResult> SensitiveTypeCollections;
        public readonly string? SensitiveTypeId;
        public readonly string? SensitiveTypeSource;
        /// <summary>
        /// The current state of the sensitive type.
        /// </summary>
        public readonly string? State;
        public readonly string? TimeCreatedGreaterThanOrEqualTo;
        public readonly string? TimeCreatedLessThan;

        [OutputConstructor]
        private GetSensitiveTypesResult(
            string? accessLevel,

            string compartmentId,

            bool? compartmentIdInSubtree,

            string? defaultMaskingFormatId,

            string? displayName,

            string? entityType,

            ImmutableArray<Outputs.GetSensitiveTypesFilterResult> filters,

            string? id,

            string? parentCategoryId,

            ImmutableArray<Outputs.GetSensitiveTypesSensitiveTypeCollectionResult> sensitiveTypeCollections,

            string? sensitiveTypeId,

            string? sensitiveTypeSource,

            string? state,

            string? timeCreatedGreaterThanOrEqualTo,

            string? timeCreatedLessThan)
        {
            AccessLevel = accessLevel;
            CompartmentId = compartmentId;
            CompartmentIdInSubtree = compartmentIdInSubtree;
            DefaultMaskingFormatId = defaultMaskingFormatId;
            DisplayName = displayName;
            EntityType = entityType;
            Filters = filters;
            Id = id;
            ParentCategoryId = parentCategoryId;
            SensitiveTypeCollections = sensitiveTypeCollections;
            SensitiveTypeId = sensitiveTypeId;
            SensitiveTypeSource = sensitiveTypeSource;
            State = state;
            TimeCreatedGreaterThanOrEqualTo = timeCreatedGreaterThanOrEqualTo;
            TimeCreatedLessThan = timeCreatedLessThan;
        }
    }
}
