// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe
{
    public static class GetSqlCollection
    {
        /// <summary>
        /// This data source provides details about a specific Sql Collection resource in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Gets a SQL collection by identifier.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSqlCollection = Oci.DataSafe.GetSqlCollection.Invoke(new()
        ///     {
        ///         SqlCollectionId = oci_data_safe_sql_collection.Test_sql_collection.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetSqlCollectionResult> InvokeAsync(GetSqlCollectionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSqlCollectionResult>("oci:DataSafe/getSqlCollection:getSqlCollection", args ?? new GetSqlCollectionArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Sql Collection resource in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Gets a SQL collection by identifier.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSqlCollection = Oci.DataSafe.GetSqlCollection.Invoke(new()
        ///     {
        ///         SqlCollectionId = oci_data_safe_sql_collection.Test_sql_collection.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetSqlCollectionResult> Invoke(GetSqlCollectionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSqlCollectionResult>("oci:DataSafe/getSqlCollection:getSqlCollection", args ?? new GetSqlCollectionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSqlCollectionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the SQL collection resource.
        /// </summary>
        [Input("sqlCollectionId", required: true)]
        public string SqlCollectionId { get; set; } = null!;

        public GetSqlCollectionArgs()
        {
        }
        public static new GetSqlCollectionArgs Empty => new GetSqlCollectionArgs();
    }

    public sealed class GetSqlCollectionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the SQL collection resource.
        /// </summary>
        [Input("sqlCollectionId", required: true)]
        public Input<string> SqlCollectionId { get; set; } = null!;

        public GetSqlCollectionInvokeArgs()
        {
        }
        public static new GetSqlCollectionInvokeArgs Empty => new GetSqlCollectionInvokeArgs();
    }


    [OutputType]
    public sealed class GetSqlCollectionResult
    {
        /// <summary>
        /// The OCID of the compartment containing the SQL collection.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The database user name.
        /// </summary>
        public readonly string DbUserName;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// The description of the SQL collection.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The display name of the SQL collection.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        public readonly bool GenerateSqlFirewallPolicyTrigger;
        /// <summary>
        /// The OCID of the SQL collection.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Details about the current state of the SQL collection in Data Safe.
        /// </summary>
        public readonly string LifecycleDetails;
        public readonly bool PurgeLogsTrigger;
        public readonly bool RefreshLogInsightsTrigger;
        public readonly string SqlCollectionId;
        /// <summary>
        /// Specifies the level of SQL that will be collected. USER_ISSUED_SQL - User issued SQL statements only. ALL_SQL - Includes all SQL statements including SQL statement issued inside PL/SQL units.
        /// </summary>
        public readonly string SqlLevel;
        public readonly bool StartTrigger;
        /// <summary>
        /// The current state of the SQL collection.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Specifies if the status of the SqlCollection. Enabled indicates that the collecting is in progress.
        /// </summary>
        public readonly string Status;
        public readonly bool StopTrigger;
        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> SystemTags;
        /// <summary>
        /// The OCID of the target corresponding to the security policy deployment.
        /// </summary>
        public readonly string TargetId;
        /// <summary>
        /// The time that the SQL collection was created, in the format defined by RFC3339.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The timestamp of the most recent SqlCollection start operation, in the format defined by RFC3339.
        /// </summary>
        public readonly string TimeLastStarted;
        /// <summary>
        /// The timestamp of the most recent SqlCollection stop operation, in the format defined by RFC3339.
        /// </summary>
        public readonly string TimeLastStopped;
        /// <summary>
        /// The last date and time the SQL collection was updated, in the format defined by RFC3339.
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetSqlCollectionResult(
            string compartmentId,

            string dbUserName,

            ImmutableDictionary<string, object> definedTags,

            string description,

            string displayName,

            ImmutableDictionary<string, object> freeformTags,

            bool generateSqlFirewallPolicyTrigger,

            string id,

            string lifecycleDetails,

            bool purgeLogsTrigger,

            bool refreshLogInsightsTrigger,

            string sqlCollectionId,

            string sqlLevel,

            bool startTrigger,

            string state,

            string status,

            bool stopTrigger,

            ImmutableDictionary<string, object> systemTags,

            string targetId,

            string timeCreated,

            string timeLastStarted,

            string timeLastStopped,

            string timeUpdated)
        {
            CompartmentId = compartmentId;
            DbUserName = dbUserName;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            GenerateSqlFirewallPolicyTrigger = generateSqlFirewallPolicyTrigger;
            Id = id;
            LifecycleDetails = lifecycleDetails;
            PurgeLogsTrigger = purgeLogsTrigger;
            RefreshLogInsightsTrigger = refreshLogInsightsTrigger;
            SqlCollectionId = sqlCollectionId;
            SqlLevel = sqlLevel;
            StartTrigger = startTrigger;
            State = state;
            Status = status;
            StopTrigger = stopTrigger;
            SystemTags = systemTags;
            TargetId = targetId;
            TimeCreated = timeCreated;
            TimeLastStarted = timeLastStarted;
            TimeLastStopped = timeLastStopped;
            TimeUpdated = timeUpdated;
        }
    }
}
