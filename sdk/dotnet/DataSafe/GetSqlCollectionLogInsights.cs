// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe
{
    public static class GetSqlCollectionLogInsights
    {
        /// <summary>
        /// This data source provides the list of Sql Collection Log Insights in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Retrieves a list of the SQL collection log analytics.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSqlCollectionLogInsights = Oci.DataSafe.GetSqlCollectionLogInsights.Invoke(new()
        ///     {
        ///         SqlCollectionId = testSqlCollection.Id,
        ///         TimeEnded = sqlCollectionLogInsightTimeEnded,
        ///         TimeStarted = sqlCollectionLogInsightTimeStarted,
        ///         GroupBy = sqlCollectionLogInsightGroupBy,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSqlCollectionLogInsightsResult> InvokeAsync(GetSqlCollectionLogInsightsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSqlCollectionLogInsightsResult>("oci:DataSafe/getSqlCollectionLogInsights:getSqlCollectionLogInsights", args ?? new GetSqlCollectionLogInsightsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Sql Collection Log Insights in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Retrieves a list of the SQL collection log analytics.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSqlCollectionLogInsights = Oci.DataSafe.GetSqlCollectionLogInsights.Invoke(new()
        ///     {
        ///         SqlCollectionId = testSqlCollection.Id,
        ///         TimeEnded = sqlCollectionLogInsightTimeEnded,
        ///         TimeStarted = sqlCollectionLogInsightTimeStarted,
        ///         GroupBy = sqlCollectionLogInsightGroupBy,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSqlCollectionLogInsightsResult> Invoke(GetSqlCollectionLogInsightsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSqlCollectionLogInsightsResult>("oci:DataSafe/getSqlCollectionLogInsights:getSqlCollectionLogInsights", args ?? new GetSqlCollectionLogInsightsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Sql Collection Log Insights in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Retrieves a list of the SQL collection log analytics.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSqlCollectionLogInsights = Oci.DataSafe.GetSqlCollectionLogInsights.Invoke(new()
        ///     {
        ///         SqlCollectionId = testSqlCollection.Id,
        ///         TimeEnded = sqlCollectionLogInsightTimeEnded,
        ///         TimeStarted = sqlCollectionLogInsightTimeStarted,
        ///         GroupBy = sqlCollectionLogInsightGroupBy,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSqlCollectionLogInsightsResult> Invoke(GetSqlCollectionLogInsightsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSqlCollectionLogInsightsResult>("oci:DataSafe/getSqlCollectionLogInsights:getSqlCollectionLogInsights", args ?? new GetSqlCollectionLogInsightsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSqlCollectionLogInsightsArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetSqlCollectionLogInsightsFilterArgs>? _filters;
        public List<Inputs.GetSqlCollectionLogInsightsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetSqlCollectionLogInsightsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The group by parameter to summarize SQL collection log insights aggregation.
        /// </summary>
        [Input("groupBy")]
        public string? GroupBy { get; set; }

        /// <summary>
        /// The OCID of the SQL collection resource.
        /// </summary>
        [Input("sqlCollectionId", required: true)]
        public string SqlCollectionId { get; set; } = null!;

        /// <summary>
        /// An optional filter to return the stats of the SQL collection logs collected before the date-time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        [Input("timeEnded", required: true)]
        public string TimeEnded { get; set; } = null!;

        /// <summary>
        /// An optional filter to return the stats of the SQL collection logs collected after the date-time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        [Input("timeStarted", required: true)]
        public string TimeStarted { get; set; } = null!;

        public GetSqlCollectionLogInsightsArgs()
        {
        }
        public static new GetSqlCollectionLogInsightsArgs Empty => new GetSqlCollectionLogInsightsArgs();
    }

    public sealed class GetSqlCollectionLogInsightsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetSqlCollectionLogInsightsFilterInputArgs>? _filters;
        public InputList<Inputs.GetSqlCollectionLogInsightsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetSqlCollectionLogInsightsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The group by parameter to summarize SQL collection log insights aggregation.
        /// </summary>
        [Input("groupBy")]
        public Input<string>? GroupBy { get; set; }

        /// <summary>
        /// The OCID of the SQL collection resource.
        /// </summary>
        [Input("sqlCollectionId", required: true)]
        public Input<string> SqlCollectionId { get; set; } = null!;

        /// <summary>
        /// An optional filter to return the stats of the SQL collection logs collected before the date-time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        [Input("timeEnded", required: true)]
        public Input<string> TimeEnded { get; set; } = null!;

        /// <summary>
        /// An optional filter to return the stats of the SQL collection logs collected after the date-time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        [Input("timeStarted", required: true)]
        public Input<string> TimeStarted { get; set; } = null!;

        public GetSqlCollectionLogInsightsInvokeArgs()
        {
        }
        public static new GetSqlCollectionLogInsightsInvokeArgs Empty => new GetSqlCollectionLogInsightsInvokeArgs();
    }


    [OutputType]
    public sealed class GetSqlCollectionLogInsightsResult
    {
        public readonly ImmutableArray<Outputs.GetSqlCollectionLogInsightsFilterResult> Filters;
        public readonly string? GroupBy;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string SqlCollectionId;
        /// <summary>
        /// The list of sql_collection_log_insights_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSqlCollectionLogInsightsSqlCollectionLogInsightsCollectionResult> SqlCollectionLogInsightsCollections;
        /// <summary>
        /// The time at which the aggregation ended.
        /// </summary>
        public readonly string TimeEnded;
        /// <summary>
        /// The time at which the aggregation started.
        /// </summary>
        public readonly string TimeStarted;

        [OutputConstructor]
        private GetSqlCollectionLogInsightsResult(
            ImmutableArray<Outputs.GetSqlCollectionLogInsightsFilterResult> filters,

            string? groupBy,

            string id,

            string sqlCollectionId,

            ImmutableArray<Outputs.GetSqlCollectionLogInsightsSqlCollectionLogInsightsCollectionResult> sqlCollectionLogInsightsCollections,

            string timeEnded,

            string timeStarted)
        {
            Filters = filters;
            GroupBy = groupBy;
            Id = id;
            SqlCollectionId = sqlCollectionId;
            SqlCollectionLogInsightsCollections = sqlCollectionLogInsightsCollections;
            TimeEnded = timeEnded;
            TimeStarted = timeStarted;
        }
    }
}
