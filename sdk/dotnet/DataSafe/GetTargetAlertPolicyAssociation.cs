// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe
{
    public static class GetTargetAlertPolicyAssociation
    {
        /// <summary>
        /// This data source provides details about a specific Target Alert Policy Association resource in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Gets the details of target-alert policy association by its ID.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testTargetAlertPolicyAssociation = Oci.DataSafe.GetTargetAlertPolicyAssociation.Invoke(new()
        ///     {
        ///         TargetAlertPolicyAssociationId = oci_data_safe_target_alert_policy_association.Test_target_alert_policy_association.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetTargetAlertPolicyAssociationResult> InvokeAsync(GetTargetAlertPolicyAssociationArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetTargetAlertPolicyAssociationResult>("oci:DataSafe/getTargetAlertPolicyAssociation:getTargetAlertPolicyAssociation", args ?? new GetTargetAlertPolicyAssociationArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Target Alert Policy Association resource in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Gets the details of target-alert policy association by its ID.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testTargetAlertPolicyAssociation = Oci.DataSafe.GetTargetAlertPolicyAssociation.Invoke(new()
        ///     {
        ///         TargetAlertPolicyAssociationId = oci_data_safe_target_alert_policy_association.Test_target_alert_policy_association.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetTargetAlertPolicyAssociationResult> Invoke(GetTargetAlertPolicyAssociationInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetTargetAlertPolicyAssociationResult>("oci:DataSafe/getTargetAlertPolicyAssociation:getTargetAlertPolicyAssociation", args ?? new GetTargetAlertPolicyAssociationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTargetAlertPolicyAssociationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the target-alert policy association.
        /// </summary>
        [Input("targetAlertPolicyAssociationId", required: true)]
        public string TargetAlertPolicyAssociationId { get; set; } = null!;

        public GetTargetAlertPolicyAssociationArgs()
        {
        }
        public static new GetTargetAlertPolicyAssociationArgs Empty => new GetTargetAlertPolicyAssociationArgs();
    }

    public sealed class GetTargetAlertPolicyAssociationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the target-alert policy association.
        /// </summary>
        [Input("targetAlertPolicyAssociationId", required: true)]
        public Input<string> TargetAlertPolicyAssociationId { get; set; } = null!;

        public GetTargetAlertPolicyAssociationInvokeArgs()
        {
        }
        public static new GetTargetAlertPolicyAssociationInvokeArgs Empty => new GetTargetAlertPolicyAssociationInvokeArgs();
    }


    [OutputType]
    public sealed class GetTargetAlertPolicyAssociationResult
    {
        /// <summary>
        /// The OCID of the compartment that contains the policy.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// Describes the target-alert policy association.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The display name of the target-alert policy association.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// The OCID of the target-alert policy association.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Indicates if the target-alert policy association is enabled or disabled.
        /// </summary>
        public readonly bool IsEnabled;
        /// <summary>
        /// The OCID of the alert policy.
        /// </summary>
        public readonly string PolicyId;
        /// <summary>
        /// The current state of the target-alert policy association.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> SystemTags;
        public readonly string TargetAlertPolicyAssociationId;
        /// <summary>
        /// The OCID of the target on which alert policy is to be applied.
        /// </summary>
        public readonly string TargetId;
        /// <summary>
        /// Creation date and time of the alert policy, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// Last date and time the alert policy was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetTargetAlertPolicyAssociationResult(
            string compartmentId,

            ImmutableDictionary<string, object> definedTags,

            string description,

            string displayName,

            ImmutableDictionary<string, object> freeformTags,

            string id,

            bool isEnabled,

            string policyId,

            string state,

            ImmutableDictionary<string, object> systemTags,

            string targetAlertPolicyAssociationId,

            string targetId,

            string timeCreated,

            string timeUpdated)
        {
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            IsEnabled = isEnabled;
            PolicyId = policyId;
            State = state;
            SystemTags = systemTags;
            TargetAlertPolicyAssociationId = targetAlertPolicyAssociationId;
            TargetId = targetId;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
