// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe
{
    public static class GetTargetDatabaseGroup
    {
        /// <summary>
        /// This data source provides details about a specific Target Database Group resource in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Returns the details of the specified target database group.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testTargetDatabaseGroup = Oci.DataSafe.GetTargetDatabaseGroup.Invoke(new()
        ///     {
        ///         TargetDatabaseGroupId = testTargetDatabaseGroupOciDataSafeTargetDatabaseGroup.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetTargetDatabaseGroupResult> InvokeAsync(GetTargetDatabaseGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTargetDatabaseGroupResult>("oci:DataSafe/getTargetDatabaseGroup:getTargetDatabaseGroup", args ?? new GetTargetDatabaseGroupArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Target Database Group resource in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Returns the details of the specified target database group.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testTargetDatabaseGroup = Oci.DataSafe.GetTargetDatabaseGroup.Invoke(new()
        ///     {
        ///         TargetDatabaseGroupId = testTargetDatabaseGroupOciDataSafeTargetDatabaseGroup.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetTargetDatabaseGroupResult> Invoke(GetTargetDatabaseGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTargetDatabaseGroupResult>("oci:DataSafe/getTargetDatabaseGroup:getTargetDatabaseGroup", args ?? new GetTargetDatabaseGroupInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Target Database Group resource in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Returns the details of the specified target database group.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testTargetDatabaseGroup = Oci.DataSafe.GetTargetDatabaseGroup.Invoke(new()
        ///     {
        ///         TargetDatabaseGroupId = testTargetDatabaseGroupOciDataSafeTargetDatabaseGroup.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetTargetDatabaseGroupResult> Invoke(GetTargetDatabaseGroupInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetTargetDatabaseGroupResult>("oci:DataSafe/getTargetDatabaseGroup:getTargetDatabaseGroup", args ?? new GetTargetDatabaseGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTargetDatabaseGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the specified target database group.
        /// </summary>
        [Input("targetDatabaseGroupId", required: true)]
        public string TargetDatabaseGroupId { get; set; } = null!;

        public GetTargetDatabaseGroupArgs()
        {
        }
        public static new GetTargetDatabaseGroupArgs Empty => new GetTargetDatabaseGroupArgs();
    }

    public sealed class GetTargetDatabaseGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the specified target database group.
        /// </summary>
        [Input("targetDatabaseGroupId", required: true)]
        public Input<string> TargetDatabaseGroupId { get; set; } = null!;

        public GetTargetDatabaseGroupInvokeArgs()
        {
        }
        public static new GetTargetDatabaseGroupInvokeArgs Empty => new GetTargetDatabaseGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetTargetDatabaseGroupResult
    {
        /// <summary>
        /// The OCID for the compartment containing the target database group.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// Description of the target database group.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The name of the target database group.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The OCID of the compartment for including target databases to the target database group. All target databases in the compartment will be members of the target database group.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Details for the lifecycle status of the target database group.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// Criteria to either include or exclude target databases from the target database group. These criteria can be based on compartments or tags or a list of target databases. See examples below for more details. Include: Target databases will be added to the target database group if they match at least one of the include criteria. Exclude: Target databases that will be excluded from the target database group (even if they match any of the include criteria).
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTargetDatabaseGroupMatchingCriteriaResult> MatchingCriterias;
        /// <summary>
        /// The number of target databases in the specified target database group.
        /// </summary>
        public readonly int MembershipCount;
        /// <summary>
        /// Time when the members of the target database group were last changed, i.e. the list was refreshed, a target database was added or removed.
        /// </summary>
        public readonly string MembershipUpdateTime;
        /// <summary>
        /// The lifecycle status of the target database group.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        public readonly string TargetDatabaseGroupId;
        /// <summary>
        /// Time when the target database group was created.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// Time when the target database group was last updated.
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetTargetDatabaseGroupResult(
            string compartmentId,

            ImmutableDictionary<string, string> definedTags,

            string description,

            string displayName,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            string lifecycleDetails,

            ImmutableArray<Outputs.GetTargetDatabaseGroupMatchingCriteriaResult> matchingCriterias,

            int membershipCount,

            string membershipUpdateTime,

            string state,

            ImmutableDictionary<string, string> systemTags,

            string targetDatabaseGroupId,

            string timeCreated,

            string timeUpdated)
        {
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            LifecycleDetails = lifecycleDetails;
            MatchingCriterias = matchingCriterias;
            MembershipCount = membershipCount;
            MembershipUpdateTime = membershipUpdateTime;
            State = state;
            SystemTags = systemTags;
            TargetDatabaseGroupId = targetDatabaseGroupId;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
