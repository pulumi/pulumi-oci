// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe
{
    public static class GetTargetDatabaseGroups
    {
        /// <summary>
        /// This data source provides the list of Target Database Groups in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Retrieves a list of target database groups according to the specified query parameters.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testTargetDatabaseGroups = Oci.DataSafe.GetTargetDatabaseGroups.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         AccessLevel = targetDatabaseGroupAccessLevel,
        ///         CompartmentIdInSubtree = targetDatabaseGroupCompartmentIdInSubtree,
        ///         DisplayName = targetDatabaseGroupDisplayName,
        ///         State = targetDatabaseGroupState,
        ///         TargetDatabaseGroupId = testTargetDatabaseGroup.Id,
        ///         TargetDatabaseGroupFilter = targetDatabaseGroupTargetDatabaseGroupFilter,
        ///         TimeCreatedGreaterThanOrEqualTo = targetDatabaseGroupTimeCreatedGreaterThanOrEqualTo,
        ///         TimeCreatedLessThan = targetDatabaseGroupTimeCreatedLessThan,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetTargetDatabaseGroupsResult> InvokeAsync(GetTargetDatabaseGroupsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTargetDatabaseGroupsResult>("oci:DataSafe/getTargetDatabaseGroups:getTargetDatabaseGroups", args ?? new GetTargetDatabaseGroupsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Target Database Groups in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Retrieves a list of target database groups according to the specified query parameters.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testTargetDatabaseGroups = Oci.DataSafe.GetTargetDatabaseGroups.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         AccessLevel = targetDatabaseGroupAccessLevel,
        ///         CompartmentIdInSubtree = targetDatabaseGroupCompartmentIdInSubtree,
        ///         DisplayName = targetDatabaseGroupDisplayName,
        ///         State = targetDatabaseGroupState,
        ///         TargetDatabaseGroupId = testTargetDatabaseGroup.Id,
        ///         TargetDatabaseGroupFilter = targetDatabaseGroupTargetDatabaseGroupFilter,
        ///         TimeCreatedGreaterThanOrEqualTo = targetDatabaseGroupTimeCreatedGreaterThanOrEqualTo,
        ///         TimeCreatedLessThan = targetDatabaseGroupTimeCreatedLessThan,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetTargetDatabaseGroupsResult> Invoke(GetTargetDatabaseGroupsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTargetDatabaseGroupsResult>("oci:DataSafe/getTargetDatabaseGroups:getTargetDatabaseGroups", args ?? new GetTargetDatabaseGroupsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Target Database Groups in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Retrieves a list of target database groups according to the specified query parameters.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testTargetDatabaseGroups = Oci.DataSafe.GetTargetDatabaseGroups.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         AccessLevel = targetDatabaseGroupAccessLevel,
        ///         CompartmentIdInSubtree = targetDatabaseGroupCompartmentIdInSubtree,
        ///         DisplayName = targetDatabaseGroupDisplayName,
        ///         State = targetDatabaseGroupState,
        ///         TargetDatabaseGroupId = testTargetDatabaseGroup.Id,
        ///         TargetDatabaseGroupFilter = targetDatabaseGroupTargetDatabaseGroupFilter,
        ///         TimeCreatedGreaterThanOrEqualTo = targetDatabaseGroupTimeCreatedGreaterThanOrEqualTo,
        ///         TimeCreatedLessThan = targetDatabaseGroupTimeCreatedLessThan,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetTargetDatabaseGroupsResult> Invoke(GetTargetDatabaseGroupsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetTargetDatabaseGroupsResult>("oci:DataSafe/getTargetDatabaseGroups:getTargetDatabaseGroups", args ?? new GetTargetDatabaseGroupsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTargetDatabaseGroupsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
        /// </summary>
        [Input("accessLevel")]
        public string? AccessLevel { get; set; }

        /// <summary>
        /// A filter to return only resources that match the specified compartment OCID.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
        /// </summary>
        [Input("compartmentIdInSubtree")]
        public bool? CompartmentIdInSubtree { get; set; }

        /// <summary>
        /// A filter to return only resources that match the specified display name.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetTargetDatabaseGroupsFilterArgs>? _filters;
        public List<Inputs.GetTargetDatabaseGroupsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetTargetDatabaseGroupsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to retrieve resources that exclusively align with the designated lifecycle state.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        /// <summary>
        /// The scim query filter parameter accepts filter expressions that use the syntax described in Section 3.2.2.2 of the System for Cross-Domain Identity Management (SCIM) specification, which is available at [RFC3339](https://tools.ietf.org/html/draft-ietf-scim-api-12). In SCIM filtering expressions, text, date, and time values must be enclosed in quotation marks, with date and time values using ISO-8601 format. (Numeric and boolean values should not be quoted.) Ex:** filter=(targetDatabaseId eq 'ocid1.datasafetargetdatabase.oc1.iad.abuwcljr3u2va4ba5wek53idpe5qq5kkbigzclscc6mysfecxzjt5dgmxqza')
        /// </summary>
        [Input("targetDatabaseGroupFilter")]
        public string? TargetDatabaseGroupFilter { get; set; }

        /// <summary>
        /// A filter to return the target database group that matches the specified OCID.
        /// </summary>
        [Input("targetDatabaseGroupId")]
        public string? TargetDatabaseGroupId { get; set; }

        /// <summary>
        /// A filter to return only the resources that were created after the specified date and time, as defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Using TimeCreatedGreaterThanOrEqualToQueryParam parameter retrieves all resources created after that date.
        /// 
        /// **Example:** 2016-12-19T16:39:57.600Z
        /// </summary>
        [Input("timeCreatedGreaterThanOrEqualTo")]
        public string? TimeCreatedGreaterThanOrEqualTo { get; set; }

        /// <summary>
        /// Search for resources that were created before a specific date. Specifying this parameter corresponding `timeCreatedLessThan` parameter will retrieve all resources created before the specified created date, in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by RFC 3339.
        /// 
        /// **Example:** 2016-12-19T16:39:57.600Z
        /// </summary>
        [Input("timeCreatedLessThan")]
        public string? TimeCreatedLessThan { get; set; }

        public GetTargetDatabaseGroupsArgs()
        {
        }
        public static new GetTargetDatabaseGroupsArgs Empty => new GetTargetDatabaseGroupsArgs();
    }

    public sealed class GetTargetDatabaseGroupsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
        /// </summary>
        [Input("accessLevel")]
        public Input<string>? AccessLevel { get; set; }

        /// <summary>
        /// A filter to return only resources that match the specified compartment OCID.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
        /// </summary>
        [Input("compartmentIdInSubtree")]
        public Input<bool>? CompartmentIdInSubtree { get; set; }

        /// <summary>
        /// A filter to return only resources that match the specified display name.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetTargetDatabaseGroupsFilterInputArgs>? _filters;
        public InputList<Inputs.GetTargetDatabaseGroupsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetTargetDatabaseGroupsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to retrieve resources that exclusively align with the designated lifecycle state.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The scim query filter parameter accepts filter expressions that use the syntax described in Section 3.2.2.2 of the System for Cross-Domain Identity Management (SCIM) specification, which is available at [RFC3339](https://tools.ietf.org/html/draft-ietf-scim-api-12). In SCIM filtering expressions, text, date, and time values must be enclosed in quotation marks, with date and time values using ISO-8601 format. (Numeric and boolean values should not be quoted.) Ex:** filter=(targetDatabaseId eq 'ocid1.datasafetargetdatabase.oc1.iad.abuwcljr3u2va4ba5wek53idpe5qq5kkbigzclscc6mysfecxzjt5dgmxqza')
        /// </summary>
        [Input("targetDatabaseGroupFilter")]
        public Input<string>? TargetDatabaseGroupFilter { get; set; }

        /// <summary>
        /// A filter to return the target database group that matches the specified OCID.
        /// </summary>
        [Input("targetDatabaseGroupId")]
        public Input<string>? TargetDatabaseGroupId { get; set; }

        /// <summary>
        /// A filter to return only the resources that were created after the specified date and time, as defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Using TimeCreatedGreaterThanOrEqualToQueryParam parameter retrieves all resources created after that date.
        /// 
        /// **Example:** 2016-12-19T16:39:57.600Z
        /// </summary>
        [Input("timeCreatedGreaterThanOrEqualTo")]
        public Input<string>? TimeCreatedGreaterThanOrEqualTo { get; set; }

        /// <summary>
        /// Search for resources that were created before a specific date. Specifying this parameter corresponding `timeCreatedLessThan` parameter will retrieve all resources created before the specified created date, in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by RFC 3339.
        /// 
        /// **Example:** 2016-12-19T16:39:57.600Z
        /// </summary>
        [Input("timeCreatedLessThan")]
        public Input<string>? TimeCreatedLessThan { get; set; }

        public GetTargetDatabaseGroupsInvokeArgs()
        {
        }
        public static new GetTargetDatabaseGroupsInvokeArgs Empty => new GetTargetDatabaseGroupsInvokeArgs();
    }


    [OutputType]
    public sealed class GetTargetDatabaseGroupsResult
    {
        public readonly string? AccessLevel;
        /// <summary>
        /// The OCID for the compartment containing the target database group.
        /// </summary>
        public readonly string CompartmentId;
        public readonly bool? CompartmentIdInSubtree;
        /// <summary>
        /// The name of the target database group.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetTargetDatabaseGroupsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The lifecycle status of the target database group.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// The list of target_database_group_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTargetDatabaseGroupsTargetDatabaseGroupCollectionResult> TargetDatabaseGroupCollections;
        public readonly string? TargetDatabaseGroupFilter;
        public readonly string? TargetDatabaseGroupId;
        public readonly string? TimeCreatedGreaterThanOrEqualTo;
        public readonly string? TimeCreatedLessThan;

        [OutputConstructor]
        private GetTargetDatabaseGroupsResult(
            string? accessLevel,

            string compartmentId,

            bool? compartmentIdInSubtree,

            string? displayName,

            ImmutableArray<Outputs.GetTargetDatabaseGroupsFilterResult> filters,

            string id,

            string? state,

            ImmutableArray<Outputs.GetTargetDatabaseGroupsTargetDatabaseGroupCollectionResult> targetDatabaseGroupCollections,

            string? targetDatabaseGroupFilter,

            string? targetDatabaseGroupId,

            string? timeCreatedGreaterThanOrEqualTo,

            string? timeCreatedLessThan)
        {
            AccessLevel = accessLevel;
            CompartmentId = compartmentId;
            CompartmentIdInSubtree = compartmentIdInSubtree;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            State = state;
            TargetDatabaseGroupCollections = targetDatabaseGroupCollections;
            TargetDatabaseGroupFilter = targetDatabaseGroupFilter;
            TargetDatabaseGroupId = targetDatabaseGroupId;
            TimeCreatedGreaterThanOrEqualTo = timeCreatedGreaterThanOrEqualTo;
            TimeCreatedLessThan = timeCreatedLessThan;
        }
    }
}
