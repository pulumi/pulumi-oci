// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe
{
    public static class GetTargetDatabasePeerTargetDatabase
    {
        /// <summary>
        /// This data source provides details about a specific Target Database Peer Target Database resource in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Returns the details of the specified Data Safe peer target database.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testTargetDatabasePeerTargetDatabase = Oci.DataSafe.GetTargetDatabasePeerTargetDatabase.Invoke(new()
        ///     {
        ///         PeerTargetDatabaseId = oci_data_safe_target_database.Test_target_database.Id,
        ///         TargetDatabaseId = oci_data_safe_target_database.Test_target_database.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetTargetDatabasePeerTargetDatabaseResult> InvokeAsync(GetTargetDatabasePeerTargetDatabaseArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTargetDatabasePeerTargetDatabaseResult>("oci:DataSafe/getTargetDatabasePeerTargetDatabase:getTargetDatabasePeerTargetDatabase", args ?? new GetTargetDatabasePeerTargetDatabaseArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Target Database Peer Target Database resource in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Returns the details of the specified Data Safe peer target database.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testTargetDatabasePeerTargetDatabase = Oci.DataSafe.GetTargetDatabasePeerTargetDatabase.Invoke(new()
        ///     {
        ///         PeerTargetDatabaseId = oci_data_safe_target_database.Test_target_database.Id,
        ///         TargetDatabaseId = oci_data_safe_target_database.Test_target_database.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetTargetDatabasePeerTargetDatabaseResult> Invoke(GetTargetDatabasePeerTargetDatabaseInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTargetDatabasePeerTargetDatabaseResult>("oci:DataSafe/getTargetDatabasePeerTargetDatabase:getTargetDatabasePeerTargetDatabase", args ?? new GetTargetDatabasePeerTargetDatabaseInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTargetDatabasePeerTargetDatabaseArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique id of the peer target database.
        /// </summary>
        [Input("peerTargetDatabaseId", required: true)]
        public string PeerTargetDatabaseId { get; set; } = null!;

        /// <summary>
        /// The OCID of the Data Safe target database.
        /// </summary>
        [Input("targetDatabaseId", required: true)]
        public string TargetDatabaseId { get; set; } = null!;

        public GetTargetDatabasePeerTargetDatabaseArgs()
        {
        }
        public static new GetTargetDatabasePeerTargetDatabaseArgs Empty => new GetTargetDatabasePeerTargetDatabaseArgs();
    }

    public sealed class GetTargetDatabasePeerTargetDatabaseInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique id of the peer target database.
        /// </summary>
        [Input("peerTargetDatabaseId", required: true)]
        public Input<string> PeerTargetDatabaseId { get; set; } = null!;

        /// <summary>
        /// The OCID of the Data Safe target database.
        /// </summary>
        [Input("targetDatabaseId", required: true)]
        public Input<string> TargetDatabaseId { get; set; } = null!;

        public GetTargetDatabasePeerTargetDatabaseInvokeArgs()
        {
        }
        public static new GetTargetDatabasePeerTargetDatabaseInvokeArgs Empty => new GetTargetDatabasePeerTargetDatabaseInvokeArgs();
    }


    [OutputType]
    public sealed class GetTargetDatabasePeerTargetDatabaseResult
    {
        /// <summary>
        /// Details of the database for the registration in Data Safe.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTargetDatabasePeerTargetDatabaseDatabaseDetailResult> DatabaseDetails;
        /// <summary>
        /// Unique name of the database associated to the peer target database.
        /// </summary>
        public readonly string DatabaseUniqueName;
        /// <summary>
        /// The OCID of the Data Guard Association resource in which the database associated to the peer target database is considered as peer database to the primary database.
        /// </summary>
        public readonly string DataguardAssociationId;
        /// <summary>
        /// The description of the peer target database in Data Safe.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The display name of the peer target database in Data Safe.
        /// </summary>
        public readonly string DisplayName;
        public readonly string Id;
        /// <summary>
        /// The secondary key assigned for the peer target database in Data Safe.
        /// </summary>
        public readonly int Key;
        /// <summary>
        /// Details about the current state of the peer target database in Data Safe.
        /// </summary>
        public readonly string LifecycleDetails;
        public readonly string PeerTargetDatabaseId;
        /// <summary>
        /// Role of the database associated to the peer target database.
        /// </summary>
        public readonly string Role;
        /// <summary>
        /// The current state of the peer target database in Data Safe.
        /// </summary>
        public readonly string State;
        public readonly string TargetDatabaseId;
        /// <summary>
        /// The date and time of the peer target database registration in Data Safe.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The details required to establish a TLS enabled connection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTargetDatabasePeerTargetDatabaseTlsConfigResult> TlsConfigs;

        [OutputConstructor]
        private GetTargetDatabasePeerTargetDatabaseResult(
            ImmutableArray<Outputs.GetTargetDatabasePeerTargetDatabaseDatabaseDetailResult> databaseDetails,

            string databaseUniqueName,

            string dataguardAssociationId,

            string description,

            string displayName,

            string id,

            int key,

            string lifecycleDetails,

            string peerTargetDatabaseId,

            string role,

            string state,

            string targetDatabaseId,

            string timeCreated,

            ImmutableArray<Outputs.GetTargetDatabasePeerTargetDatabaseTlsConfigResult> tlsConfigs)
        {
            DatabaseDetails = databaseDetails;
            DatabaseUniqueName = databaseUniqueName;
            DataguardAssociationId = dataguardAssociationId;
            Description = description;
            DisplayName = displayName;
            Id = id;
            Key = key;
            LifecycleDetails = lifecycleDetails;
            PeerTargetDatabaseId = peerTargetDatabaseId;
            Role = role;
            State = state;
            TargetDatabaseId = targetDatabaseId;
            TimeCreated = timeCreated;
            TlsConfigs = tlsConfigs;
        }
    }
}
