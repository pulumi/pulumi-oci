// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe
{
    public static class GetTargetDatabasePeerTargetDatabases
    {
        /// <summary>
        /// This data source provides the list of Target Database Peer Target Databases in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Lists all the peer target databases under the primary target database identified by the OCID passed as path parameter.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testTargetDatabasePeerTargetDatabases = Oci.DataSafe.GetTargetDatabasePeerTargetDatabases.Invoke(new()
        ///     {
        ///         TargetDatabaseId = testTargetDatabase.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetTargetDatabasePeerTargetDatabasesResult> InvokeAsync(GetTargetDatabasePeerTargetDatabasesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTargetDatabasePeerTargetDatabasesResult>("oci:DataSafe/getTargetDatabasePeerTargetDatabases:getTargetDatabasePeerTargetDatabases", args ?? new GetTargetDatabasePeerTargetDatabasesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Target Database Peer Target Databases in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Lists all the peer target databases under the primary target database identified by the OCID passed as path parameter.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testTargetDatabasePeerTargetDatabases = Oci.DataSafe.GetTargetDatabasePeerTargetDatabases.Invoke(new()
        ///     {
        ///         TargetDatabaseId = testTargetDatabase.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetTargetDatabasePeerTargetDatabasesResult> Invoke(GetTargetDatabasePeerTargetDatabasesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTargetDatabasePeerTargetDatabasesResult>("oci:DataSafe/getTargetDatabasePeerTargetDatabases:getTargetDatabasePeerTargetDatabases", args ?? new GetTargetDatabasePeerTargetDatabasesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Target Database Peer Target Databases in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Lists all the peer target databases under the primary target database identified by the OCID passed as path parameter.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testTargetDatabasePeerTargetDatabases = Oci.DataSafe.GetTargetDatabasePeerTargetDatabases.Invoke(new()
        ///     {
        ///         TargetDatabaseId = testTargetDatabase.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetTargetDatabasePeerTargetDatabasesResult> Invoke(GetTargetDatabasePeerTargetDatabasesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetTargetDatabasePeerTargetDatabasesResult>("oci:DataSafe/getTargetDatabasePeerTargetDatabases:getTargetDatabasePeerTargetDatabases", args ?? new GetTargetDatabasePeerTargetDatabasesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTargetDatabasePeerTargetDatabasesArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetTargetDatabasePeerTargetDatabasesFilterArgs>? _filters;
        public List<Inputs.GetTargetDatabasePeerTargetDatabasesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetTargetDatabasePeerTargetDatabasesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The OCID of the Data Safe target database.
        /// </summary>
        [Input("targetDatabaseId", required: true)]
        public string TargetDatabaseId { get; set; } = null!;

        public GetTargetDatabasePeerTargetDatabasesArgs()
        {
        }
        public static new GetTargetDatabasePeerTargetDatabasesArgs Empty => new GetTargetDatabasePeerTargetDatabasesArgs();
    }

    public sealed class GetTargetDatabasePeerTargetDatabasesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetTargetDatabasePeerTargetDatabasesFilterInputArgs>? _filters;
        public InputList<Inputs.GetTargetDatabasePeerTargetDatabasesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetTargetDatabasePeerTargetDatabasesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The OCID of the Data Safe target database.
        /// </summary>
        [Input("targetDatabaseId", required: true)]
        public Input<string> TargetDatabaseId { get; set; } = null!;

        public GetTargetDatabasePeerTargetDatabasesInvokeArgs()
        {
        }
        public static new GetTargetDatabasePeerTargetDatabasesInvokeArgs Empty => new GetTargetDatabasePeerTargetDatabasesInvokeArgs();
    }


    [OutputType]
    public sealed class GetTargetDatabasePeerTargetDatabasesResult
    {
        public readonly ImmutableArray<Outputs.GetTargetDatabasePeerTargetDatabasesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of peer_target_database_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTargetDatabasePeerTargetDatabasesPeerTargetDatabaseCollectionResult> PeerTargetDatabaseCollections;
        public readonly string TargetDatabaseId;

        [OutputConstructor]
        private GetTargetDatabasePeerTargetDatabasesResult(
            ImmutableArray<Outputs.GetTargetDatabasePeerTargetDatabasesFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetTargetDatabasePeerTargetDatabasesPeerTargetDatabaseCollectionResult> peerTargetDatabaseCollections,

            string targetDatabaseId)
        {
            Filters = filters;
            Id = id;
            PeerTargetDatabaseCollections = peerTargetDatabaseCollections;
            TargetDatabaseId = targetDatabaseId;
        }
    }
}
