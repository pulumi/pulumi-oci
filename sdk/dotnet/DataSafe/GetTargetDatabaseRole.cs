// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe
{
    public static class GetTargetDatabaseRole
    {
        public static Task<GetTargetDatabaseRoleResult> InvokeAsync(GetTargetDatabaseRoleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTargetDatabaseRoleResult>("oci:DataSafe/getTargetDatabaseRole:getTargetDatabaseRole", args ?? new GetTargetDatabaseRoleArgs(), options.WithDefaults());

        public static Output<GetTargetDatabaseRoleResult> Invoke(GetTargetDatabaseRoleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTargetDatabaseRoleResult>("oci:DataSafe/getTargetDatabaseRole:getTargetDatabaseRole", args ?? new GetTargetDatabaseRoleInvokeArgs(), options.WithDefaults());

        public static Output<GetTargetDatabaseRoleResult> Invoke(GetTargetDatabaseRoleInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetTargetDatabaseRoleResult>("oci:DataSafe/getTargetDatabaseRole:getTargetDatabaseRole", args ?? new GetTargetDatabaseRoleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTargetDatabaseRoleArgs : global::Pulumi.InvokeArgs
    {
        [Input("authenticationType")]
        public string? AuthenticationType { get; set; }

        [Input("filters")]
        private List<Inputs.GetTargetDatabaseRoleFilterArgs>? _filters;
        public List<Inputs.GetTargetDatabaseRoleFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetTargetDatabaseRoleFilterArgs>());
            set => _filters = value;
        }

        [Input("isOracleMaintained")]
        public bool? IsOracleMaintained { get; set; }

        [Input("roleNameContains")]
        public string? RoleNameContains { get; set; }

        [Input("roleNames")]
        private List<string>? _roleNames;
        public List<string> RoleNames
        {
            get => _roleNames ?? (_roleNames = new List<string>());
            set => _roleNames = value;
        }

        [Input("targetDatabaseId", required: true)]
        public string TargetDatabaseId { get; set; } = null!;

        public GetTargetDatabaseRoleArgs()
        {
        }
        public static new GetTargetDatabaseRoleArgs Empty => new GetTargetDatabaseRoleArgs();
    }

    public sealed class GetTargetDatabaseRoleInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("authenticationType")]
        public Input<string>? AuthenticationType { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetTargetDatabaseRoleFilterInputArgs>? _filters;
        public InputList<Inputs.GetTargetDatabaseRoleFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetTargetDatabaseRoleFilterInputArgs>());
            set => _filters = value;
        }

        [Input("isOracleMaintained")]
        public Input<bool>? IsOracleMaintained { get; set; }

        [Input("roleNameContains")]
        public Input<string>? RoleNameContains { get; set; }

        [Input("roleNames")]
        private InputList<string>? _roleNames;
        public InputList<string> RoleNames
        {
            get => _roleNames ?? (_roleNames = new InputList<string>());
            set => _roleNames = value;
        }

        [Input("targetDatabaseId", required: true)]
        public Input<string> TargetDatabaseId { get; set; } = null!;

        public GetTargetDatabaseRoleInvokeArgs()
        {
        }
        public static new GetTargetDatabaseRoleInvokeArgs Empty => new GetTargetDatabaseRoleInvokeArgs();
    }


    [OutputType]
    public sealed class GetTargetDatabaseRoleResult
    {
        public readonly string? AuthenticationType;
        public readonly ImmutableArray<Outputs.GetTargetDatabaseRoleFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool? IsOracleMaintained;
        public readonly string? RoleNameContains;
        public readonly ImmutableArray<string> RoleNames;
        public readonly ImmutableArray<Outputs.GetTargetDatabaseRoleRoleResult> Roles;
        public readonly string TargetDatabaseId;

        [OutputConstructor]
        private GetTargetDatabaseRoleResult(
            string? authenticationType,

            ImmutableArray<Outputs.GetTargetDatabaseRoleFilterResult> filters,

            string id,

            bool? isOracleMaintained,

            string? roleNameContains,

            ImmutableArray<string> roleNames,

            ImmutableArray<Outputs.GetTargetDatabaseRoleRoleResult> roles,

            string targetDatabaseId)
        {
            AuthenticationType = authenticationType;
            Filters = filters;
            Id = id;
            IsOracleMaintained = isOracleMaintained;
            RoleNameContains = roleNameContains;
            RoleNames = roleNames;
            Roles = roles;
            TargetDatabaseId = targetDatabaseId;
        }
    }
}
