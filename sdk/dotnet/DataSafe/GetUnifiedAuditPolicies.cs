// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe
{
    public static class GetUnifiedAuditPolicies
    {
        /// <summary>
        /// This data source provides the list of Unified Audit Policies in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Retrieves a list of all Unified Audit policies.
        /// 
        /// The ListUnifiedAuditPolicies operation returns only the Unified Audit policies in the specified `compartmentId`.
        /// 
        /// The parameter `accessLevel` specifies whether to return only those compartments for which the
        /// requester has INSPECT permissions on at least one resource directly
        /// or indirectly (ACCESSIBLE) (the resource can be in a sub-compartment) or to return Not Authorized if
        /// Principal doesn't have access to even one of the child compartments. This is valid only when
        /// `compartmentIdInSubtree` is set to `True`.
        /// 
        /// The parameter `compartmentIdInSubtree` applies when you perform ListUnifiedAuditPolicies on the
        /// `compartmentId` passed and when it is set to true, the entire hierarchy of compartments can be returned.
        /// To get a full list of all compartments and sub-compartments in the tenancy (root compartment),
        /// set the parameter `compartmentIdInSubtree` to true and `accessLevel` to ACCESSIBLE.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testUnifiedAuditPolicies = Oci.DataSafe.GetUnifiedAuditPolicies.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         AccessLevel = unifiedAuditPolicyAccessLevel,
        ///         CompartmentIdInSubtree = unifiedAuditPolicyCompartmentIdInSubtree,
        ///         DisplayName = unifiedAuditPolicyDisplayName,
        ///         IsSeeded = unifiedAuditPolicyIsSeeded,
        ///         SecurityPolicyId = testSecurityPolicy.Id,
        ///         State = unifiedAuditPolicyState,
        ///         TimeCreatedGreaterThanOrEqualTo = unifiedAuditPolicyTimeCreatedGreaterThanOrEqualTo,
        ///         TimeCreatedLessThan = unifiedAuditPolicyTimeCreatedLessThan,
        ///         UnifiedAuditPolicyDefinitionId = testUnifiedAuditPolicyDefinition.Id,
        ///         UnifiedAuditPolicyId = testUnifiedAuditPolicy.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetUnifiedAuditPoliciesResult> InvokeAsync(GetUnifiedAuditPoliciesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetUnifiedAuditPoliciesResult>("oci:DataSafe/getUnifiedAuditPolicies:getUnifiedAuditPolicies", args ?? new GetUnifiedAuditPoliciesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Unified Audit Policies in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Retrieves a list of all Unified Audit policies.
        /// 
        /// The ListUnifiedAuditPolicies operation returns only the Unified Audit policies in the specified `compartmentId`.
        /// 
        /// The parameter `accessLevel` specifies whether to return only those compartments for which the
        /// requester has INSPECT permissions on at least one resource directly
        /// or indirectly (ACCESSIBLE) (the resource can be in a sub-compartment) or to return Not Authorized if
        /// Principal doesn't have access to even one of the child compartments. This is valid only when
        /// `compartmentIdInSubtree` is set to `True`.
        /// 
        /// The parameter `compartmentIdInSubtree` applies when you perform ListUnifiedAuditPolicies on the
        /// `compartmentId` passed and when it is set to true, the entire hierarchy of compartments can be returned.
        /// To get a full list of all compartments and sub-compartments in the tenancy (root compartment),
        /// set the parameter `compartmentIdInSubtree` to true and `accessLevel` to ACCESSIBLE.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testUnifiedAuditPolicies = Oci.DataSafe.GetUnifiedAuditPolicies.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         AccessLevel = unifiedAuditPolicyAccessLevel,
        ///         CompartmentIdInSubtree = unifiedAuditPolicyCompartmentIdInSubtree,
        ///         DisplayName = unifiedAuditPolicyDisplayName,
        ///         IsSeeded = unifiedAuditPolicyIsSeeded,
        ///         SecurityPolicyId = testSecurityPolicy.Id,
        ///         State = unifiedAuditPolicyState,
        ///         TimeCreatedGreaterThanOrEqualTo = unifiedAuditPolicyTimeCreatedGreaterThanOrEqualTo,
        ///         TimeCreatedLessThan = unifiedAuditPolicyTimeCreatedLessThan,
        ///         UnifiedAuditPolicyDefinitionId = testUnifiedAuditPolicyDefinition.Id,
        ///         UnifiedAuditPolicyId = testUnifiedAuditPolicy.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetUnifiedAuditPoliciesResult> Invoke(GetUnifiedAuditPoliciesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetUnifiedAuditPoliciesResult>("oci:DataSafe/getUnifiedAuditPolicies:getUnifiedAuditPolicies", args ?? new GetUnifiedAuditPoliciesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Unified Audit Policies in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Retrieves a list of all Unified Audit policies.
        /// 
        /// The ListUnifiedAuditPolicies operation returns only the Unified Audit policies in the specified `compartmentId`.
        /// 
        /// The parameter `accessLevel` specifies whether to return only those compartments for which the
        /// requester has INSPECT permissions on at least one resource directly
        /// or indirectly (ACCESSIBLE) (the resource can be in a sub-compartment) or to return Not Authorized if
        /// Principal doesn't have access to even one of the child compartments. This is valid only when
        /// `compartmentIdInSubtree` is set to `True`.
        /// 
        /// The parameter `compartmentIdInSubtree` applies when you perform ListUnifiedAuditPolicies on the
        /// `compartmentId` passed and when it is set to true, the entire hierarchy of compartments can be returned.
        /// To get a full list of all compartments and sub-compartments in the tenancy (root compartment),
        /// set the parameter `compartmentIdInSubtree` to true and `accessLevel` to ACCESSIBLE.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testUnifiedAuditPolicies = Oci.DataSafe.GetUnifiedAuditPolicies.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         AccessLevel = unifiedAuditPolicyAccessLevel,
        ///         CompartmentIdInSubtree = unifiedAuditPolicyCompartmentIdInSubtree,
        ///         DisplayName = unifiedAuditPolicyDisplayName,
        ///         IsSeeded = unifiedAuditPolicyIsSeeded,
        ///         SecurityPolicyId = testSecurityPolicy.Id,
        ///         State = unifiedAuditPolicyState,
        ///         TimeCreatedGreaterThanOrEqualTo = unifiedAuditPolicyTimeCreatedGreaterThanOrEqualTo,
        ///         TimeCreatedLessThan = unifiedAuditPolicyTimeCreatedLessThan,
        ///         UnifiedAuditPolicyDefinitionId = testUnifiedAuditPolicyDefinition.Id,
        ///         UnifiedAuditPolicyId = testUnifiedAuditPolicy.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetUnifiedAuditPoliciesResult> Invoke(GetUnifiedAuditPoliciesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetUnifiedAuditPoliciesResult>("oci:DataSafe/getUnifiedAuditPolicies:getUnifiedAuditPolicies", args ?? new GetUnifiedAuditPoliciesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetUnifiedAuditPoliciesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
        /// </summary>
        [Input("accessLevel")]
        public string? AccessLevel { get; set; }

        /// <summary>
        /// A filter to return only resources that match the specified compartment OCID.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
        /// </summary>
        [Input("compartmentIdInSubtree")]
        public bool? CompartmentIdInSubtree { get; set; }

        /// <summary>
        /// A filter to return only resources that match the specified display name.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetUnifiedAuditPoliciesFilterArgs>? _filters;
        public List<Inputs.GetUnifiedAuditPoliciesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetUnifiedAuditPoliciesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A boolean flag indicating to list seeded unified audit policies. Set this parameter to get list of seeded unified audit policies.
        /// </summary>
        [Input("isSeeded")]
        public bool? IsSeeded { get; set; }

        /// <summary>
        /// An optional filter to return only resources that match the specified OCID of the security policy resource.
        /// </summary>
        [Input("securityPolicyId")]
        public string? SecurityPolicyId { get; set; }

        /// <summary>
        /// The current state of the Unified Audit policy.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        /// <summary>
        /// A filter to return only the resources that were created after the specified date and time, as defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Using TimeCreatedGreaterThanOrEqualToQueryParam parameter retrieves all resources created after that date.
        /// 
        /// **Example:** 2016-12-19T16:39:57.600Z
        /// </summary>
        [Input("timeCreatedGreaterThanOrEqualTo")]
        public string? TimeCreatedGreaterThanOrEqualTo { get; set; }

        /// <summary>
        /// Search for resources that were created before a specific date. Specifying this parameter corresponding `timeCreatedLessThan` parameter will retrieve all resources created before the specified created date, in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by RFC 3339.
        /// 
        /// **Example:** 2016-12-19T16:39:57.600Z
        /// </summary>
        [Input("timeCreatedLessThan")]
        public string? TimeCreatedLessThan { get; set; }

        /// <summary>
        /// An optional filter to return only resources that match the specified OCID of the unified audit policy definition resource.
        /// </summary>
        [Input("unifiedAuditPolicyDefinitionId")]
        public string? UnifiedAuditPolicyDefinitionId { get; set; }

        /// <summary>
        /// An optional filter to return only resources that match the specified OCID of the Unified Audit policy resource.
        /// </summary>
        [Input("unifiedAuditPolicyId")]
        public string? UnifiedAuditPolicyId { get; set; }

        public GetUnifiedAuditPoliciesArgs()
        {
        }
        public static new GetUnifiedAuditPoliciesArgs Empty => new GetUnifiedAuditPoliciesArgs();
    }

    public sealed class GetUnifiedAuditPoliciesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
        /// </summary>
        [Input("accessLevel")]
        public Input<string>? AccessLevel { get; set; }

        /// <summary>
        /// A filter to return only resources that match the specified compartment OCID.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
        /// </summary>
        [Input("compartmentIdInSubtree")]
        public Input<bool>? CompartmentIdInSubtree { get; set; }

        /// <summary>
        /// A filter to return only resources that match the specified display name.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetUnifiedAuditPoliciesFilterInputArgs>? _filters;
        public InputList<Inputs.GetUnifiedAuditPoliciesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetUnifiedAuditPoliciesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A boolean flag indicating to list seeded unified audit policies. Set this parameter to get list of seeded unified audit policies.
        /// </summary>
        [Input("isSeeded")]
        public Input<bool>? IsSeeded { get; set; }

        /// <summary>
        /// An optional filter to return only resources that match the specified OCID of the security policy resource.
        /// </summary>
        [Input("securityPolicyId")]
        public Input<string>? SecurityPolicyId { get; set; }

        /// <summary>
        /// The current state of the Unified Audit policy.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// A filter to return only the resources that were created after the specified date and time, as defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Using TimeCreatedGreaterThanOrEqualToQueryParam parameter retrieves all resources created after that date.
        /// 
        /// **Example:** 2016-12-19T16:39:57.600Z
        /// </summary>
        [Input("timeCreatedGreaterThanOrEqualTo")]
        public Input<string>? TimeCreatedGreaterThanOrEqualTo { get; set; }

        /// <summary>
        /// Search for resources that were created before a specific date. Specifying this parameter corresponding `timeCreatedLessThan` parameter will retrieve all resources created before the specified created date, in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by RFC 3339.
        /// 
        /// **Example:** 2016-12-19T16:39:57.600Z
        /// </summary>
        [Input("timeCreatedLessThan")]
        public Input<string>? TimeCreatedLessThan { get; set; }

        /// <summary>
        /// An optional filter to return only resources that match the specified OCID of the unified audit policy definition resource.
        /// </summary>
        [Input("unifiedAuditPolicyDefinitionId")]
        public Input<string>? UnifiedAuditPolicyDefinitionId { get; set; }

        /// <summary>
        /// An optional filter to return only resources that match the specified OCID of the Unified Audit policy resource.
        /// </summary>
        [Input("unifiedAuditPolicyId")]
        public Input<string>? UnifiedAuditPolicyId { get; set; }

        public GetUnifiedAuditPoliciesInvokeArgs()
        {
        }
        public static new GetUnifiedAuditPoliciesInvokeArgs Empty => new GetUnifiedAuditPoliciesInvokeArgs();
    }


    [OutputType]
    public sealed class GetUnifiedAuditPoliciesResult
    {
        public readonly string? AccessLevel;
        /// <summary>
        /// The OCID of the compartment containing the unified audit policy.
        /// </summary>
        public readonly string CompartmentId;
        public readonly bool? CompartmentIdInSubtree;
        /// <summary>
        /// The display name of the unified audit policy.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetUnifiedAuditPoliciesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Indicates whether the unified audit policy is seeded or not.
        /// </summary>
        public readonly bool? IsSeeded;
        /// <summary>
        /// The OCID of the security policy corresponding to the unified audit policy.
        /// </summary>
        public readonly string? SecurityPolicyId;
        /// <summary>
        /// The current state of the unified audit policy.
        /// </summary>
        public readonly string? State;
        public readonly string? TimeCreatedGreaterThanOrEqualTo;
        public readonly string? TimeCreatedLessThan;
        /// <summary>
        /// The list of unified_audit_policy_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionResult> UnifiedAuditPolicyCollections;
        /// <summary>
        /// The OCID of the associated unified audit policy definition.
        /// </summary>
        public readonly string? UnifiedAuditPolicyDefinitionId;
        public readonly string? UnifiedAuditPolicyId;

        [OutputConstructor]
        private GetUnifiedAuditPoliciesResult(
            string? accessLevel,

            string compartmentId,

            bool? compartmentIdInSubtree,

            string? displayName,

            ImmutableArray<Outputs.GetUnifiedAuditPoliciesFilterResult> filters,

            string id,

            bool? isSeeded,

            string? securityPolicyId,

            string? state,

            string? timeCreatedGreaterThanOrEqualTo,

            string? timeCreatedLessThan,

            ImmutableArray<Outputs.GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionResult> unifiedAuditPolicyCollections,

            string? unifiedAuditPolicyDefinitionId,

            string? unifiedAuditPolicyId)
        {
            AccessLevel = accessLevel;
            CompartmentId = compartmentId;
            CompartmentIdInSubtree = compartmentIdInSubtree;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            IsSeeded = isSeeded;
            SecurityPolicyId = securityPolicyId;
            State = state;
            TimeCreatedGreaterThanOrEqualTo = timeCreatedGreaterThanOrEqualTo;
            TimeCreatedLessThan = timeCreatedLessThan;
            UnifiedAuditPolicyCollections = unifiedAuditPolicyCollections;
            UnifiedAuditPolicyDefinitionId = unifiedAuditPolicyDefinitionId;
            UnifiedAuditPolicyId = unifiedAuditPolicyId;
        }
    }
}
