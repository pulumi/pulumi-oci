// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe
{
    public static class GetUnifiedAuditPolicyDefinitions
    {
        /// <summary>
        /// This data source provides the list of Unified Audit Policy Definitions in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Retrieves a list of all unified audit policy definitions in Data Safe.
        /// 
        /// The ListUnifiedAuditPolicyDefinitions operation returns only the unified audit policy definitions in the specified `compartmentId`.
        /// 
        /// The parameter `accessLevel` specifies whether to return only those compartments for which the
        /// requester has INSPECT permissions on at least one resource directly
        /// or indirectly (ACCESSIBLE) (the resource can be in a subcompartment) or to return Not Authorized if
        /// Principal doesn't have access to even one of the child compartments. This is valid only when
        /// `compartmentIdInSubtree` is set to `True`.
        /// 
        /// The parameter `compartmentIdInSubtree` applies when you perform ListUnifiedAuditPolicyDefinitions on the
        /// `compartmentId` passed and when it is set to true, the entire hierarchy of compartments can be returned.
        /// To get a full list of all compartments and subcompartments in the tenancy (root compartment),
        /// set the parameter `compartmentIdInSubtree` to true and `accessLevel` to ACCESSIBLE.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testUnifiedAuditPolicyDefinitions = Oci.DataSafe.GetUnifiedAuditPolicyDefinitions.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         AccessLevel = unifiedAuditPolicyDefinitionAccessLevel,
        ///         CompartmentIdInSubtree = unifiedAuditPolicyDefinitionCompartmentIdInSubtree,
        ///         DisplayName = unifiedAuditPolicyDefinitionDisplayName,
        ///         IsSeeded = unifiedAuditPolicyDefinitionIsSeeded,
        ///         State = unifiedAuditPolicyDefinitionState,
        ///         UnifiedAuditPolicyCategory = unifiedAuditPolicyDefinitionUnifiedAuditPolicyCategory,
        ///         UnifiedAuditPolicyDefinitionId = testUnifiedAuditPolicyDefinition.Id,
        ///         UnifiedAuditPolicyName = testUnifiedAuditPolicy.Name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetUnifiedAuditPolicyDefinitionsResult> InvokeAsync(GetUnifiedAuditPolicyDefinitionsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetUnifiedAuditPolicyDefinitionsResult>("oci:DataSafe/getUnifiedAuditPolicyDefinitions:getUnifiedAuditPolicyDefinitions", args ?? new GetUnifiedAuditPolicyDefinitionsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Unified Audit Policy Definitions in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Retrieves a list of all unified audit policy definitions in Data Safe.
        /// 
        /// The ListUnifiedAuditPolicyDefinitions operation returns only the unified audit policy definitions in the specified `compartmentId`.
        /// 
        /// The parameter `accessLevel` specifies whether to return only those compartments for which the
        /// requester has INSPECT permissions on at least one resource directly
        /// or indirectly (ACCESSIBLE) (the resource can be in a subcompartment) or to return Not Authorized if
        /// Principal doesn't have access to even one of the child compartments. This is valid only when
        /// `compartmentIdInSubtree` is set to `True`.
        /// 
        /// The parameter `compartmentIdInSubtree` applies when you perform ListUnifiedAuditPolicyDefinitions on the
        /// `compartmentId` passed and when it is set to true, the entire hierarchy of compartments can be returned.
        /// To get a full list of all compartments and subcompartments in the tenancy (root compartment),
        /// set the parameter `compartmentIdInSubtree` to true and `accessLevel` to ACCESSIBLE.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testUnifiedAuditPolicyDefinitions = Oci.DataSafe.GetUnifiedAuditPolicyDefinitions.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         AccessLevel = unifiedAuditPolicyDefinitionAccessLevel,
        ///         CompartmentIdInSubtree = unifiedAuditPolicyDefinitionCompartmentIdInSubtree,
        ///         DisplayName = unifiedAuditPolicyDefinitionDisplayName,
        ///         IsSeeded = unifiedAuditPolicyDefinitionIsSeeded,
        ///         State = unifiedAuditPolicyDefinitionState,
        ///         UnifiedAuditPolicyCategory = unifiedAuditPolicyDefinitionUnifiedAuditPolicyCategory,
        ///         UnifiedAuditPolicyDefinitionId = testUnifiedAuditPolicyDefinition.Id,
        ///         UnifiedAuditPolicyName = testUnifiedAuditPolicy.Name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetUnifiedAuditPolicyDefinitionsResult> Invoke(GetUnifiedAuditPolicyDefinitionsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetUnifiedAuditPolicyDefinitionsResult>("oci:DataSafe/getUnifiedAuditPolicyDefinitions:getUnifiedAuditPolicyDefinitions", args ?? new GetUnifiedAuditPolicyDefinitionsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Unified Audit Policy Definitions in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Retrieves a list of all unified audit policy definitions in Data Safe.
        /// 
        /// The ListUnifiedAuditPolicyDefinitions operation returns only the unified audit policy definitions in the specified `compartmentId`.
        /// 
        /// The parameter `accessLevel` specifies whether to return only those compartments for which the
        /// requester has INSPECT permissions on at least one resource directly
        /// or indirectly (ACCESSIBLE) (the resource can be in a subcompartment) or to return Not Authorized if
        /// Principal doesn't have access to even one of the child compartments. This is valid only when
        /// `compartmentIdInSubtree` is set to `True`.
        /// 
        /// The parameter `compartmentIdInSubtree` applies when you perform ListUnifiedAuditPolicyDefinitions on the
        /// `compartmentId` passed and when it is set to true, the entire hierarchy of compartments can be returned.
        /// To get a full list of all compartments and subcompartments in the tenancy (root compartment),
        /// set the parameter `compartmentIdInSubtree` to true and `accessLevel` to ACCESSIBLE.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testUnifiedAuditPolicyDefinitions = Oci.DataSafe.GetUnifiedAuditPolicyDefinitions.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         AccessLevel = unifiedAuditPolicyDefinitionAccessLevel,
        ///         CompartmentIdInSubtree = unifiedAuditPolicyDefinitionCompartmentIdInSubtree,
        ///         DisplayName = unifiedAuditPolicyDefinitionDisplayName,
        ///         IsSeeded = unifiedAuditPolicyDefinitionIsSeeded,
        ///         State = unifiedAuditPolicyDefinitionState,
        ///         UnifiedAuditPolicyCategory = unifiedAuditPolicyDefinitionUnifiedAuditPolicyCategory,
        ///         UnifiedAuditPolicyDefinitionId = testUnifiedAuditPolicyDefinition.Id,
        ///         UnifiedAuditPolicyName = testUnifiedAuditPolicy.Name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetUnifiedAuditPolicyDefinitionsResult> Invoke(GetUnifiedAuditPolicyDefinitionsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetUnifiedAuditPolicyDefinitionsResult>("oci:DataSafe/getUnifiedAuditPolicyDefinitions:getUnifiedAuditPolicyDefinitions", args ?? new GetUnifiedAuditPolicyDefinitionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetUnifiedAuditPolicyDefinitionsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
        /// </summary>
        [Input("accessLevel")]
        public string? AccessLevel { get; set; }

        /// <summary>
        /// A filter to return only resources that match the specified compartment OCID.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
        /// </summary>
        [Input("compartmentIdInSubtree")]
        public bool? CompartmentIdInSubtree { get; set; }

        /// <summary>
        /// A filter to return only resources that match the specified display name.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetUnifiedAuditPolicyDefinitionsFilterArgs>? _filters;
        public List<Inputs.GetUnifiedAuditPolicyDefinitionsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetUnifiedAuditPolicyDefinitionsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A boolean flag indicating to list seeded unified audit policy definitions. Set this parameter to get list of seeded unified audit policy definitions.
        /// </summary>
        [Input("isSeeded")]
        public bool? IsSeeded { get; set; }

        /// <summary>
        /// The current state of the unified audit policy definition.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        /// <summary>
        /// The category to which the unified audit policy definition belongs to.
        /// </summary>
        [Input("unifiedAuditPolicyCategory")]
        public string? UnifiedAuditPolicyCategory { get; set; }

        /// <summary>
        /// An optional filter to return only resources that match the specified OCID of the unified audit policy definition resource.
        /// </summary>
        [Input("unifiedAuditPolicyDefinitionId")]
        public string? UnifiedAuditPolicyDefinitionId { get; set; }

        /// <summary>
        /// The name of the unified audit policy.
        /// </summary>
        [Input("unifiedAuditPolicyName")]
        public string? UnifiedAuditPolicyName { get; set; }

        public GetUnifiedAuditPolicyDefinitionsArgs()
        {
        }
        public static new GetUnifiedAuditPolicyDefinitionsArgs Empty => new GetUnifiedAuditPolicyDefinitionsArgs();
    }

    public sealed class GetUnifiedAuditPolicyDefinitionsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
        /// </summary>
        [Input("accessLevel")]
        public Input<string>? AccessLevel { get; set; }

        /// <summary>
        /// A filter to return only resources that match the specified compartment OCID.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
        /// </summary>
        [Input("compartmentIdInSubtree")]
        public Input<bool>? CompartmentIdInSubtree { get; set; }

        /// <summary>
        /// A filter to return only resources that match the specified display name.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetUnifiedAuditPolicyDefinitionsFilterInputArgs>? _filters;
        public InputList<Inputs.GetUnifiedAuditPolicyDefinitionsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetUnifiedAuditPolicyDefinitionsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A boolean flag indicating to list seeded unified audit policy definitions. Set this parameter to get list of seeded unified audit policy definitions.
        /// </summary>
        [Input("isSeeded")]
        public Input<bool>? IsSeeded { get; set; }

        /// <summary>
        /// The current state of the unified audit policy definition.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The category to which the unified audit policy definition belongs to.
        /// </summary>
        [Input("unifiedAuditPolicyCategory")]
        public Input<string>? UnifiedAuditPolicyCategory { get; set; }

        /// <summary>
        /// An optional filter to return only resources that match the specified OCID of the unified audit policy definition resource.
        /// </summary>
        [Input("unifiedAuditPolicyDefinitionId")]
        public Input<string>? UnifiedAuditPolicyDefinitionId { get; set; }

        /// <summary>
        /// The name of the unified audit policy.
        /// </summary>
        [Input("unifiedAuditPolicyName")]
        public Input<string>? UnifiedAuditPolicyName { get; set; }

        public GetUnifiedAuditPolicyDefinitionsInvokeArgs()
        {
        }
        public static new GetUnifiedAuditPolicyDefinitionsInvokeArgs Empty => new GetUnifiedAuditPolicyDefinitionsInvokeArgs();
    }


    [OutputType]
    public sealed class GetUnifiedAuditPolicyDefinitionsResult
    {
        public readonly string? AccessLevel;
        /// <summary>
        /// The OCID of the compartment containing the unified audit policy definition.
        /// </summary>
        public readonly string CompartmentId;
        public readonly bool? CompartmentIdInSubtree;
        /// <summary>
        /// The display name of the unified audit policy definition.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetUnifiedAuditPolicyDefinitionsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Signifies whether the unified audit policy definition is seeded or not.
        /// </summary>
        public readonly bool? IsSeeded;
        /// <summary>
        /// The current state of the unified audit policy definition.
        /// </summary>
        public readonly string? State;
        public readonly string? UnifiedAuditPolicyCategory;
        /// <summary>
        /// The list of unified_audit_policy_definition_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionResult> UnifiedAuditPolicyDefinitionCollections;
        public readonly string? UnifiedAuditPolicyDefinitionId;
        public readonly string? UnifiedAuditPolicyName;

        [OutputConstructor]
        private GetUnifiedAuditPolicyDefinitionsResult(
            string? accessLevel,

            string compartmentId,

            bool? compartmentIdInSubtree,

            string? displayName,

            ImmutableArray<Outputs.GetUnifiedAuditPolicyDefinitionsFilterResult> filters,

            string id,

            bool? isSeeded,

            string? state,

            string? unifiedAuditPolicyCategory,

            ImmutableArray<Outputs.GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionResult> unifiedAuditPolicyDefinitionCollections,

            string? unifiedAuditPolicyDefinitionId,

            string? unifiedAuditPolicyName)
        {
            AccessLevel = accessLevel;
            CompartmentId = compartmentId;
            CompartmentIdInSubtree = compartmentIdInSubtree;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            IsSeeded = isSeeded;
            State = state;
            UnifiedAuditPolicyCategory = unifiedAuditPolicyCategory;
            UnifiedAuditPolicyDefinitionCollections = unifiedAuditPolicyDefinitionCollections;
            UnifiedAuditPolicyDefinitionId = unifiedAuditPolicyDefinitionId;
            UnifiedAuditPolicyName = unifiedAuditPolicyName;
        }
    }
}
