// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe
{
    public static class GetUserAssessmentComparison
    {
        /// <summary>
        /// This data source provides details about a specific User Assessment Comparison resource in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Gets the details of the comparison report for the user assessments provided.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testUserAssessmentComparison = Oci.DataSafe.GetUserAssessmentComparison.Invoke(new()
        ///     {
        ///         ComparisonUserAssessmentId = oci_data_safe_user_assessment.Test_user_assessment.Id,
        ///         UserAssessmentId = oci_data_safe_user_assessment.Test_user_assessment.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetUserAssessmentComparisonResult> InvokeAsync(GetUserAssessmentComparisonArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetUserAssessmentComparisonResult>("oci:DataSafe/getUserAssessmentComparison:getUserAssessmentComparison", args ?? new GetUserAssessmentComparisonArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific User Assessment Comparison resource in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Gets the details of the comparison report for the user assessments provided.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testUserAssessmentComparison = Oci.DataSafe.GetUserAssessmentComparison.Invoke(new()
        ///     {
        ///         ComparisonUserAssessmentId = oci_data_safe_user_assessment.Test_user_assessment.Id,
        ///         UserAssessmentId = oci_data_safe_user_assessment.Test_user_assessment.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetUserAssessmentComparisonResult> Invoke(GetUserAssessmentComparisonInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetUserAssessmentComparisonResult>("oci:DataSafe/getUserAssessmentComparison:getUserAssessmentComparison", args ?? new GetUserAssessmentComparisonInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetUserAssessmentComparisonArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the baseline user assessment.
        /// </summary>
        [Input("comparisonUserAssessmentId", required: true)]
        public string ComparisonUserAssessmentId { get; set; } = null!;

        /// <summary>
        /// The OCID of the user assessment.
        /// </summary>
        [Input("userAssessmentId", required: true)]
        public string UserAssessmentId { get; set; } = null!;

        public GetUserAssessmentComparisonArgs()
        {
        }
        public static new GetUserAssessmentComparisonArgs Empty => new GetUserAssessmentComparisonArgs();
    }

    public sealed class GetUserAssessmentComparisonInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the baseline user assessment.
        /// </summary>
        [Input("comparisonUserAssessmentId", required: true)]
        public Input<string> ComparisonUserAssessmentId { get; set; } = null!;

        /// <summary>
        /// The OCID of the user assessment.
        /// </summary>
        [Input("userAssessmentId", required: true)]
        public Input<string> UserAssessmentId { get; set; } = null!;

        public GetUserAssessmentComparisonInvokeArgs()
        {
        }
        public static new GetUserAssessmentComparisonInvokeArgs Empty => new GetUserAssessmentComparisonInvokeArgs();
    }


    [OutputType]
    public sealed class GetUserAssessmentComparisonResult
    {
        public readonly string ComparisonUserAssessmentId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The current state of the user assessment comparison.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// List containing maps as values. Example: `{"Operations": [ {"CostCenter": "42"} ] }`
        /// </summary>
        public readonly ImmutableArray<Outputs.GetUserAssessmentComparisonSummaryResult> Summaries;
        /// <summary>
        /// The date and time the user assessment comparison was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        public readonly string TimeCreated;
        public readonly string UserAssessmentId;

        [OutputConstructor]
        private GetUserAssessmentComparisonResult(
            string comparisonUserAssessmentId,

            string id,

            string state,

            ImmutableArray<Outputs.GetUserAssessmentComparisonSummaryResult> summaries,

            string timeCreated,

            string userAssessmentId)
        {
            ComparisonUserAssessmentId = comparisonUserAssessmentId;
            Id = id;
            State = state;
            Summaries = summaries;
            TimeCreated = timeCreated;
            UserAssessmentId = userAssessmentId;
        }
    }
}
