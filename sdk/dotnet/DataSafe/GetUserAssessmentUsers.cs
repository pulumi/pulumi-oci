// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe
{
    public static class GetUserAssessmentUsers
    {
        /// <summary>
        /// This data source provides the list of User Assessment Users in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Gets a list of users of the specified user assessment. The result contains the database user details for each user, such
        /// as user type, account status, last login time, user creation time, authentication type, user profile, and the date and time
        /// of the latest password change. It also contains the user category derived from these user details as well as privileges
        /// granted to each user.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testUserAssessmentUsers = Oci.DataSafe.GetUserAssessmentUsers.Invoke(new()
        ///     {
        ///         UserAssessmentId = oci_data_safe_user_assessment.Test_user_assessment.Id,
        ///         AccessLevel = @var.User_assessment_user_access_level,
        ///         AccountStatus = @var.User_assessment_user_account_status,
        ///         AuthenticationType = @var.User_assessment_user_authentication_type,
        ///         CompartmentIdInSubtree = @var.User_assessment_user_compartment_id_in_subtree,
        ///         TargetId = oci_cloud_guard_target.Test_target.Id,
        ///         TimeLastLoginGreaterThanOrEqualTo = @var.User_assessment_user_time_last_login_greater_than_or_equal_to,
        ///         TimeLastLoginLessThan = @var.User_assessment_user_time_last_login_less_than,
        ///         TimePasswordLastChangedGreaterThanOrEqualTo = @var.User_assessment_user_time_password_last_changed_greater_than_or_equal_to,
        ///         TimePasswordLastChangedLessThan = @var.User_assessment_user_time_password_last_changed_less_than,
        ///         TimeUserCreatedGreaterThanOrEqualTo = @var.User_assessment_user_time_user_created_greater_than_or_equal_to,
        ///         TimeUserCreatedLessThan = @var.User_assessment_user_time_user_created_less_than,
        ///         UserCategory = @var.User_assessment_user_user_category,
        ///         UserKey = @var.User_assessment_user_user_key,
        ///         UserName = oci_identity_user.Test_user.Name,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetUserAssessmentUsersResult> InvokeAsync(GetUserAssessmentUsersArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetUserAssessmentUsersResult>("oci:DataSafe/getUserAssessmentUsers:getUserAssessmentUsers", args ?? new GetUserAssessmentUsersArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of User Assessment Users in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Gets a list of users of the specified user assessment. The result contains the database user details for each user, such
        /// as user type, account status, last login time, user creation time, authentication type, user profile, and the date and time
        /// of the latest password change. It also contains the user category derived from these user details as well as privileges
        /// granted to each user.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testUserAssessmentUsers = Oci.DataSafe.GetUserAssessmentUsers.Invoke(new()
        ///     {
        ///         UserAssessmentId = oci_data_safe_user_assessment.Test_user_assessment.Id,
        ///         AccessLevel = @var.User_assessment_user_access_level,
        ///         AccountStatus = @var.User_assessment_user_account_status,
        ///         AuthenticationType = @var.User_assessment_user_authentication_type,
        ///         CompartmentIdInSubtree = @var.User_assessment_user_compartment_id_in_subtree,
        ///         TargetId = oci_cloud_guard_target.Test_target.Id,
        ///         TimeLastLoginGreaterThanOrEqualTo = @var.User_assessment_user_time_last_login_greater_than_or_equal_to,
        ///         TimeLastLoginLessThan = @var.User_assessment_user_time_last_login_less_than,
        ///         TimePasswordLastChangedGreaterThanOrEqualTo = @var.User_assessment_user_time_password_last_changed_greater_than_or_equal_to,
        ///         TimePasswordLastChangedLessThan = @var.User_assessment_user_time_password_last_changed_less_than,
        ///         TimeUserCreatedGreaterThanOrEqualTo = @var.User_assessment_user_time_user_created_greater_than_or_equal_to,
        ///         TimeUserCreatedLessThan = @var.User_assessment_user_time_user_created_less_than,
        ///         UserCategory = @var.User_assessment_user_user_category,
        ///         UserKey = @var.User_assessment_user_user_key,
        ///         UserName = oci_identity_user.Test_user.Name,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetUserAssessmentUsersResult> Invoke(GetUserAssessmentUsersInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetUserAssessmentUsersResult>("oci:DataSafe/getUserAssessmentUsers:getUserAssessmentUsers", args ?? new GetUserAssessmentUsersInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetUserAssessmentUsersArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
        /// </summary>
        [Input("accessLevel")]
        public string? AccessLevel { get; set; }

        /// <summary>
        /// A filter to return only items that match the specified account status.
        /// </summary>
        [Input("accountStatus")]
        public string? AccountStatus { get; set; }

        /// <summary>
        /// A filter to return only items that match the specified authentication type.
        /// </summary>
        [Input("authenticationType")]
        public string? AuthenticationType { get; set; }

        /// <summary>
        /// Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
        /// </summary>
        [Input("compartmentIdInSubtree")]
        public bool? CompartmentIdInSubtree { get; set; }

        [Input("filters")]
        private List<Inputs.GetUserAssessmentUsersFilterArgs>? _filters;
        public List<Inputs.GetUserAssessmentUsersFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetUserAssessmentUsersFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only items related to a specific target OCID.
        /// </summary>
        [Input("targetId")]
        public string? TargetId { get; set; }

        /// <summary>
        /// A filter to return users whose last login time in the database is greater than or equal to the date and time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        [Input("timeLastLoginGreaterThanOrEqualTo")]
        public string? TimeLastLoginGreaterThanOrEqualTo { get; set; }

        /// <summary>
        /// A filter to return users whose last login time in the database is less than the date and time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). **Example:** 2016-12-19T16:39:57.600Z
        /// </summary>
        [Input("timeLastLoginLessThan")]
        public string? TimeLastLoginLessThan { get; set; }

        /// <summary>
        /// A filter to return users whose last password change in the database is greater than or equal to the date and time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        [Input("timePasswordLastChangedGreaterThanOrEqualTo")]
        public string? TimePasswordLastChangedGreaterThanOrEqualTo { get; set; }

        /// <summary>
        /// A filter to return users whose last password change in the database is less than the date and time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        [Input("timePasswordLastChangedLessThan")]
        public string? TimePasswordLastChangedLessThan { get; set; }

        /// <summary>
        /// A filter to return users whose creation time in the database is greater than or equal to the date and time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). **Example:** 2016-12-19T16:39:57.600Z
        /// </summary>
        [Input("timeUserCreatedGreaterThanOrEqualTo")]
        public string? TimeUserCreatedGreaterThanOrEqualTo { get; set; }

        /// <summary>
        /// A filter to return users whose creation time in the database is less than the date and time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). **Example:** 2016-12-19T16:39:57.600Z
        /// </summary>
        [Input("timeUserCreatedLessThan")]
        public string? TimeUserCreatedLessThan { get; set; }

        /// <summary>
        /// The OCID of the user assessment.
        /// </summary>
        [Input("userAssessmentId", required: true)]
        public string UserAssessmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only items that match the specified user category.
        /// </summary>
        [Input("userCategory")]
        public string? UserCategory { get; set; }

        /// <summary>
        /// A filter to return only items that match the specified user key.
        /// </summary>
        [Input("userKey")]
        public string? UserKey { get; set; }

        /// <summary>
        /// A filter to return only items that match the specified user name.
        /// </summary>
        [Input("userName")]
        public string? UserName { get; set; }

        public GetUserAssessmentUsersArgs()
        {
        }
        public static new GetUserAssessmentUsersArgs Empty => new GetUserAssessmentUsersArgs();
    }

    public sealed class GetUserAssessmentUsersInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
        /// </summary>
        [Input("accessLevel")]
        public Input<string>? AccessLevel { get; set; }

        /// <summary>
        /// A filter to return only items that match the specified account status.
        /// </summary>
        [Input("accountStatus")]
        public Input<string>? AccountStatus { get; set; }

        /// <summary>
        /// A filter to return only items that match the specified authentication type.
        /// </summary>
        [Input("authenticationType")]
        public Input<string>? AuthenticationType { get; set; }

        /// <summary>
        /// Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
        /// </summary>
        [Input("compartmentIdInSubtree")]
        public Input<bool>? CompartmentIdInSubtree { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetUserAssessmentUsersFilterInputArgs>? _filters;
        public InputList<Inputs.GetUserAssessmentUsersFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetUserAssessmentUsersFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only items related to a specific target OCID.
        /// </summary>
        [Input("targetId")]
        public Input<string>? TargetId { get; set; }

        /// <summary>
        /// A filter to return users whose last login time in the database is greater than or equal to the date and time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        [Input("timeLastLoginGreaterThanOrEqualTo")]
        public Input<string>? TimeLastLoginGreaterThanOrEqualTo { get; set; }

        /// <summary>
        /// A filter to return users whose last login time in the database is less than the date and time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). **Example:** 2016-12-19T16:39:57.600Z
        /// </summary>
        [Input("timeLastLoginLessThan")]
        public Input<string>? TimeLastLoginLessThan { get; set; }

        /// <summary>
        /// A filter to return users whose last password change in the database is greater than or equal to the date and time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        [Input("timePasswordLastChangedGreaterThanOrEqualTo")]
        public Input<string>? TimePasswordLastChangedGreaterThanOrEqualTo { get; set; }

        /// <summary>
        /// A filter to return users whose last password change in the database is less than the date and time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        [Input("timePasswordLastChangedLessThan")]
        public Input<string>? TimePasswordLastChangedLessThan { get; set; }

        /// <summary>
        /// A filter to return users whose creation time in the database is greater than or equal to the date and time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). **Example:** 2016-12-19T16:39:57.600Z
        /// </summary>
        [Input("timeUserCreatedGreaterThanOrEqualTo")]
        public Input<string>? TimeUserCreatedGreaterThanOrEqualTo { get; set; }

        /// <summary>
        /// A filter to return users whose creation time in the database is less than the date and time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). **Example:** 2016-12-19T16:39:57.600Z
        /// </summary>
        [Input("timeUserCreatedLessThan")]
        public Input<string>? TimeUserCreatedLessThan { get; set; }

        /// <summary>
        /// The OCID of the user assessment.
        /// </summary>
        [Input("userAssessmentId", required: true)]
        public Input<string> UserAssessmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only items that match the specified user category.
        /// </summary>
        [Input("userCategory")]
        public Input<string>? UserCategory { get; set; }

        /// <summary>
        /// A filter to return only items that match the specified user key.
        /// </summary>
        [Input("userKey")]
        public Input<string>? UserKey { get; set; }

        /// <summary>
        /// A filter to return only items that match the specified user name.
        /// </summary>
        [Input("userName")]
        public Input<string>? UserName { get; set; }

        public GetUserAssessmentUsersInvokeArgs()
        {
        }
        public static new GetUserAssessmentUsersInvokeArgs Empty => new GetUserAssessmentUsersInvokeArgs();
    }


    [OutputType]
    public sealed class GetUserAssessmentUsersResult
    {
        public readonly string? AccessLevel;
        /// <summary>
        /// The user account status.
        /// </summary>
        public readonly string? AccountStatus;
        /// <summary>
        /// The user authentication method.
        /// </summary>
        public readonly string? AuthenticationType;
        public readonly bool? CompartmentIdInSubtree;
        public readonly ImmutableArray<Outputs.GetUserAssessmentUsersFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The OCID of the target database.
        /// </summary>
        public readonly string? TargetId;
        public readonly string? TimeLastLoginGreaterThanOrEqualTo;
        public readonly string? TimeLastLoginLessThan;
        public readonly string? TimePasswordLastChangedGreaterThanOrEqualTo;
        public readonly string? TimePasswordLastChangedLessThan;
        public readonly string? TimeUserCreatedGreaterThanOrEqualTo;
        public readonly string? TimeUserCreatedLessThan;
        public readonly string UserAssessmentId;
        /// <summary>
        /// The user category based on the privileges and other details of the user.
        /// </summary>
        public readonly string? UserCategory;
        public readonly string? UserKey;
        /// <summary>
        /// The database user name.
        /// </summary>
        public readonly string? UserName;
        /// <summary>
        /// The list of users.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetUserAssessmentUsersUserResult> Users;

        [OutputConstructor]
        private GetUserAssessmentUsersResult(
            string? accessLevel,

            string? accountStatus,

            string? authenticationType,

            bool? compartmentIdInSubtree,

            ImmutableArray<Outputs.GetUserAssessmentUsersFilterResult> filters,

            string id,

            string? targetId,

            string? timeLastLoginGreaterThanOrEqualTo,

            string? timeLastLoginLessThan,

            string? timePasswordLastChangedGreaterThanOrEqualTo,

            string? timePasswordLastChangedLessThan,

            string? timeUserCreatedGreaterThanOrEqualTo,

            string? timeUserCreatedLessThan,

            string userAssessmentId,

            string? userCategory,

            string? userKey,

            string? userName,

            ImmutableArray<Outputs.GetUserAssessmentUsersUserResult> users)
        {
            AccessLevel = accessLevel;
            AccountStatus = accountStatus;
            AuthenticationType = authenticationType;
            CompartmentIdInSubtree = compartmentIdInSubtree;
            Filters = filters;
            Id = id;
            TargetId = targetId;
            TimeLastLoginGreaterThanOrEqualTo = timeLastLoginGreaterThanOrEqualTo;
            TimeLastLoginLessThan = timeLastLoginLessThan;
            TimePasswordLastChangedGreaterThanOrEqualTo = timePasswordLastChangedGreaterThanOrEqualTo;
            TimePasswordLastChangedLessThan = timePasswordLastChangedLessThan;
            TimeUserCreatedGreaterThanOrEqualTo = timeUserCreatedGreaterThanOrEqualTo;
            TimeUserCreatedLessThan = timeUserCreatedLessThan;
            UserAssessmentId = userAssessmentId;
            UserCategory = userCategory;
            UserKey = userKey;
            UserName = userName;
            Users = users;
        }
    }
}
