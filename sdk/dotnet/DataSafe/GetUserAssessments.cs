// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe
{
    public static class GetUserAssessments
    {
        /// <summary>
        /// This data source provides the list of User Assessments in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Gets a list of user assessments.
        /// 
        /// The ListUserAssessments operation returns only the assessments in the specified `compartmentId`.
        /// The list does not include any subcompartments of the compartmentId passed.
        /// 
        /// The parameter `accessLevel` specifies whether to return only those compartments for which the
        /// requestor has INSPECT permissions on at least one resource directly
        /// or indirectly (ACCESSIBLE) (the resource can be in a subcompartment) or to return Not Authorized if
        /// Principal doesn't have access to even one of the child compartments. This is valid only when
        /// `compartmentIdInSubtree` is set to `true`.
        /// 
        /// The parameter `compartmentIdInSubtree` applies when you perform ListUserAssessments on the
        /// `compartmentId` passed and when it is set to true, the entire hierarchy of compartments can be returned.
        /// To get a full list of all compartments and subcompartments in the tenancy (root compartment),
        /// set the parameter `compartmentIdInSubtree` to true and `accessLevel` to ACCESSIBLE.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testUserAssessments = Oci.DataSafe.GetUserAssessments.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         AccessLevel = @var.User_assessment_access_level,
        ///         CompartmentIdInSubtree = @var.User_assessment_compartment_id_in_subtree,
        ///         DisplayName = @var.User_assessment_display_name,
        ///         IsBaseline = @var.User_assessment_is_baseline,
        ///         IsScheduleAssessment = @var.User_assessment_is_schedule_assessment,
        ///         ScheduleUserAssessmentId = oci_data_safe_user_assessment.Test_user_assessment.Id,
        ///         State = @var.User_assessment_state,
        ///         TargetId = oci_cloud_guard_target.Test_target.Id,
        ///         TimeCreatedGreaterThanOrEqualTo = @var.User_assessment_time_created_greater_than_or_equal_to,
        ///         TimeCreatedLessThan = @var.User_assessment_time_created_less_than,
        ///         TriggeredBy = @var.User_assessment_triggered_by,
        ///         Type = @var.User_assessment_type,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetUserAssessmentsResult> InvokeAsync(GetUserAssessmentsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetUserAssessmentsResult>("oci:DataSafe/getUserAssessments:getUserAssessments", args ?? new GetUserAssessmentsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of User Assessments in Oracle Cloud Infrastructure Data Safe service.
        /// 
        /// Gets a list of user assessments.
        /// 
        /// The ListUserAssessments operation returns only the assessments in the specified `compartmentId`.
        /// The list does not include any subcompartments of the compartmentId passed.
        /// 
        /// The parameter `accessLevel` specifies whether to return only those compartments for which the
        /// requestor has INSPECT permissions on at least one resource directly
        /// or indirectly (ACCESSIBLE) (the resource can be in a subcompartment) or to return Not Authorized if
        /// Principal doesn't have access to even one of the child compartments. This is valid only when
        /// `compartmentIdInSubtree` is set to `true`.
        /// 
        /// The parameter `compartmentIdInSubtree` applies when you perform ListUserAssessments on the
        /// `compartmentId` passed and when it is set to true, the entire hierarchy of compartments can be returned.
        /// To get a full list of all compartments and subcompartments in the tenancy (root compartment),
        /// set the parameter `compartmentIdInSubtree` to true and `accessLevel` to ACCESSIBLE.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testUserAssessments = Oci.DataSafe.GetUserAssessments.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         AccessLevel = @var.User_assessment_access_level,
        ///         CompartmentIdInSubtree = @var.User_assessment_compartment_id_in_subtree,
        ///         DisplayName = @var.User_assessment_display_name,
        ///         IsBaseline = @var.User_assessment_is_baseline,
        ///         IsScheduleAssessment = @var.User_assessment_is_schedule_assessment,
        ///         ScheduleUserAssessmentId = oci_data_safe_user_assessment.Test_user_assessment.Id,
        ///         State = @var.User_assessment_state,
        ///         TargetId = oci_cloud_guard_target.Test_target.Id,
        ///         TimeCreatedGreaterThanOrEqualTo = @var.User_assessment_time_created_greater_than_or_equal_to,
        ///         TimeCreatedLessThan = @var.User_assessment_time_created_less_than,
        ///         TriggeredBy = @var.User_assessment_triggered_by,
        ///         Type = @var.User_assessment_type,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetUserAssessmentsResult> Invoke(GetUserAssessmentsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetUserAssessmentsResult>("oci:DataSafe/getUserAssessments:getUserAssessments", args ?? new GetUserAssessmentsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetUserAssessmentsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
        /// </summary>
        [Input("accessLevel")]
        public string? AccessLevel { get; set; }

        /// <summary>
        /// A filter to return only resources that match the specified compartment OCID.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
        /// </summary>
        [Input("compartmentIdInSubtree")]
        public bool? CompartmentIdInSubtree { get; set; }

        /// <summary>
        /// A filter to return only resources that match the specified display name.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetUserAssessmentsFilterArgs>? _filters;
        public List<Inputs.GetUserAssessmentsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetUserAssessmentsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only user assessments that are set as baseline.
        /// </summary>
        [Input("isBaseline")]
        public bool? IsBaseline { get; set; }

        /// <summary>
        /// A filter to return only user assessments of type SAVE_SCHEDULE.
        /// </summary>
        [Input("isScheduleAssessment")]
        public bool? IsScheduleAssessment { get; set; }

        /// <summary>
        /// The OCID of the user assessment of type SAVE_SCHEDULE.
        /// </summary>
        [Input("scheduleUserAssessmentId")]
        public string? ScheduleUserAssessmentId { get; set; }

        /// <summary>
        /// The current state of the user assessment.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        /// <summary>
        /// A filter to return only items related to a specific target OCID.
        /// </summary>
        [Input("targetId")]
        public string? TargetId { get; set; }

        /// <summary>
        /// A filter to return only user assessments that were created after the specified date and time, as defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Using timeCreatedGreaterThanOrEqualTo parameter retrieves all assessments created after that date.
        /// 
        /// **Example:** 2016-12-19T16:39:57.600Z
        /// </summary>
        [Input("timeCreatedGreaterThanOrEqualTo")]
        public string? TimeCreatedGreaterThanOrEqualTo { get; set; }

        /// <summary>
        /// Search for resources that were created before a specific date. Specifying this parameter corresponding `timeCreatedLessThan` parameter will retrieve all resources created before the specified created date, in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by RFC 3339.
        /// 
        /// **Example:** 2016-12-19T16:39:57.600Z
        /// </summary>
        [Input("timeCreatedLessThan")]
        public string? TimeCreatedLessThan { get; set; }

        /// <summary>
        /// A filter to return user assessments that were created by either the system or by a user only.
        /// </summary>
        [Input("triggeredBy")]
        public string? TriggeredBy { get; set; }

        /// <summary>
        /// A filter to return only items that match the specified assessment type.
        /// </summary>
        [Input("type")]
        public string? Type { get; set; }

        public GetUserAssessmentsArgs()
        {
        }
        public static new GetUserAssessmentsArgs Empty => new GetUserAssessmentsArgs();
    }

    public sealed class GetUserAssessmentsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
        /// </summary>
        [Input("accessLevel")]
        public Input<string>? AccessLevel { get; set; }

        /// <summary>
        /// A filter to return only resources that match the specified compartment OCID.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
        /// </summary>
        [Input("compartmentIdInSubtree")]
        public Input<bool>? CompartmentIdInSubtree { get; set; }

        /// <summary>
        /// A filter to return only resources that match the specified display name.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetUserAssessmentsFilterInputArgs>? _filters;
        public InputList<Inputs.GetUserAssessmentsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetUserAssessmentsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only user assessments that are set as baseline.
        /// </summary>
        [Input("isBaseline")]
        public Input<bool>? IsBaseline { get; set; }

        /// <summary>
        /// A filter to return only user assessments of type SAVE_SCHEDULE.
        /// </summary>
        [Input("isScheduleAssessment")]
        public Input<bool>? IsScheduleAssessment { get; set; }

        /// <summary>
        /// The OCID of the user assessment of type SAVE_SCHEDULE.
        /// </summary>
        [Input("scheduleUserAssessmentId")]
        public Input<string>? ScheduleUserAssessmentId { get; set; }

        /// <summary>
        /// The current state of the user assessment.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// A filter to return only items related to a specific target OCID.
        /// </summary>
        [Input("targetId")]
        public Input<string>? TargetId { get; set; }

        /// <summary>
        /// A filter to return only user assessments that were created after the specified date and time, as defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Using timeCreatedGreaterThanOrEqualTo parameter retrieves all assessments created after that date.
        /// 
        /// **Example:** 2016-12-19T16:39:57.600Z
        /// </summary>
        [Input("timeCreatedGreaterThanOrEqualTo")]
        public Input<string>? TimeCreatedGreaterThanOrEqualTo { get; set; }

        /// <summary>
        /// Search for resources that were created before a specific date. Specifying this parameter corresponding `timeCreatedLessThan` parameter will retrieve all resources created before the specified created date, in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by RFC 3339.
        /// 
        /// **Example:** 2016-12-19T16:39:57.600Z
        /// </summary>
        [Input("timeCreatedLessThan")]
        public Input<string>? TimeCreatedLessThan { get; set; }

        /// <summary>
        /// A filter to return user assessments that were created by either the system or by a user only.
        /// </summary>
        [Input("triggeredBy")]
        public Input<string>? TriggeredBy { get; set; }

        /// <summary>
        /// A filter to return only items that match the specified assessment type.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public GetUserAssessmentsInvokeArgs()
        {
        }
        public static new GetUserAssessmentsInvokeArgs Empty => new GetUserAssessmentsInvokeArgs();
    }


    [OutputType]
    public sealed class GetUserAssessmentsResult
    {
        public readonly string? AccessLevel;
        /// <summary>
        /// The OCID of the compartment that contains the user assessment.
        /// </summary>
        public readonly string CompartmentId;
        public readonly bool? CompartmentIdInSubtree;
        /// <summary>
        /// The display name of the user assessment.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetUserAssessmentsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// List containing maps as values. Example: `{"Operations": [ {"CostCenter": "42"} ] }`
        /// </summary>
        public readonly ImmutableArray<Outputs.GetUserAssessmentsIgnoredTargetResult> IgnoredTargets;
        /// <summary>
        /// Indicates if the user assessment is set as a baseline. This is applicable only to saved user assessments.
        /// </summary>
        public readonly bool? IsBaseline;
        public readonly bool? IsScheduleAssessment;
        public readonly string? ScheduleUserAssessmentId;
        /// <summary>
        /// The current state of the user assessment.
        /// </summary>
        public readonly string? State;
        public readonly string? TargetId;
        public readonly string? TimeCreatedGreaterThanOrEqualTo;
        public readonly string? TimeCreatedLessThan;
        /// <summary>
        /// Indicates whether the user assessment was created by system or user.
        /// </summary>
        public readonly string? TriggeredBy;
        /// <summary>
        /// Type of user assessment. Type can be:
        /// </summary>
        public readonly string? Type;
        /// <summary>
        /// The list of user_assessments.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetUserAssessmentsUserAssessmentResult> UserAssessments;

        [OutputConstructor]
        private GetUserAssessmentsResult(
            string? accessLevel,

            string compartmentId,

            bool? compartmentIdInSubtree,

            string? displayName,

            ImmutableArray<Outputs.GetUserAssessmentsFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetUserAssessmentsIgnoredTargetResult> ignoredTargets,

            bool? isBaseline,

            bool? isScheduleAssessment,

            string? scheduleUserAssessmentId,

            string? state,

            string? targetId,

            string? timeCreatedGreaterThanOrEqualTo,

            string? timeCreatedLessThan,

            string? triggeredBy,

            string? type,

            ImmutableArray<Outputs.GetUserAssessmentsUserAssessmentResult> userAssessments)
        {
            AccessLevel = accessLevel;
            CompartmentId = compartmentId;
            CompartmentIdInSubtree = compartmentIdInSubtree;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            IgnoredTargets = ignoredTargets;
            IsBaseline = isBaseline;
            IsScheduleAssessment = isScheduleAssessment;
            ScheduleUserAssessmentId = scheduleUserAssessmentId;
            State = state;
            TargetId = targetId;
            TimeCreatedGreaterThanOrEqualTo = timeCreatedGreaterThanOrEqualTo;
            TimeCreatedLessThan = timeCreatedLessThan;
            TriggeredBy = triggeredBy;
            Type = type;
            UserAssessments = userAssessments;
        }
    }
}
