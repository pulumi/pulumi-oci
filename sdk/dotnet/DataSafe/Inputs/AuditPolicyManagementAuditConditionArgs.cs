// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe.Inputs
{

    public sealed class AuditPolicyManagementAuditConditionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Indicates the audit policy name. Refer to the [documentation](https://docs.oracle.com/en/cloud/paas/data-safe/udscs/audit-policies.html#GUID-361A9A9A-7C21-4F5A-8945-9B3A0C472827) for seeded audit policy names. For custom policies, refer to the user-defined policy name created in the target database.
        /// </summary>
        [Input("auditPolicyName")]
        public Input<string>? AuditPolicyName { get; set; }

        [Input("enableConditions")]
        private InputList<Inputs.AuditPolicyManagementAuditConditionEnableConditionArgs>? _enableConditions;

        /// <summary>
        /// Indicates the users/roles in the target database for which the audit policy is enforced, and the success/failure event condition to generate the audit event..
        /// </summary>
        public InputList<Inputs.AuditPolicyManagementAuditConditionEnableConditionArgs> EnableConditions
        {
            get => _enableConditions ?? (_enableConditions = new InputList<Inputs.AuditPolicyManagementAuditConditionEnableConditionArgs>());
            set => _enableConditions = value;
        }

        /// <summary>
        /// Indicates whether the Data Safe user activity on the target database will be audited by the policy.
        /// </summary>
        [Input("isDataSafeServiceAccountAudited")]
        public Input<bool>? IsDataSafeServiceAccountAudited { get; set; }

        /// <summary>
        /// Indicates whether the policy has to be enabled or disabled in the target database. Set this to true if you want the audit policy to be enabled in the target database. If the seeded audit policy is not already created in the database, the provisioning creates and enables them. If this is set to false, the policy will be disabled in the target database.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// Indicates whether the privileged user list is managed by Data Safe.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("isPrivUsersManagedByDataSafe")]
        public Input<bool>? IsPrivUsersManagedByDataSafe { get; set; }

        public AuditPolicyManagementAuditConditionArgs()
        {
        }
        public static new AuditPolicyManagementAuditConditionArgs Empty => new AuditPolicyManagementAuditConditionArgs();
    }
}
