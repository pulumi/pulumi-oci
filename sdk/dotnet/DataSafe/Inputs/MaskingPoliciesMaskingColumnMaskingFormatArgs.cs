// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe.Inputs
{

    public sealed class MaskingPoliciesMaskingColumnMaskingFormatArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) A condition that must be true for applying the masking format. It can be any valid  SQL construct that can be used in a SQL predicate. It enables you to do  &lt;a href="https://docs.oracle.com/en/cloud/paas/data-safe/udscs/conditional-masking.html"&gt;conditional masking&lt;/a&gt;  so that you can mask the column data values differently using different masking  formats and the associated conditions.
        /// </summary>
        [Input("condition")]
        public Input<string>? Condition { get; set; }

        /// <summary>
        /// (Updatable) The description of the masking format.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("formatEntries", required: true)]
        private InputList<Inputs.MaskingPoliciesMaskingColumnMaskingFormatFormatEntryArgs>? _formatEntries;

        /// <summary>
        /// (Updatable) An array of format entries. The combined output of all the format entries is  used for masking the column data values.
        /// </summary>
        public InputList<Inputs.MaskingPoliciesMaskingColumnMaskingFormatFormatEntryArgs> FormatEntries
        {
            get => _formatEntries ?? (_formatEntries = new InputList<Inputs.MaskingPoliciesMaskingColumnMaskingFormatFormatEntryArgs>());
            set => _formatEntries = value;
        }

        public MaskingPoliciesMaskingColumnMaskingFormatArgs()
        {
        }
        public static new MaskingPoliciesMaskingColumnMaskingFormatArgs Empty => new MaskingPoliciesMaskingColumnMaskingFormatArgs();
    }
}
