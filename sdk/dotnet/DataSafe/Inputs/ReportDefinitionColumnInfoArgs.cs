// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe.Inputs
{

    public sealed class ReportDefinitionColumnInfoArgs : global::Pulumi.ResourceArgs
    {
        [Input("applicableOperators")]
        private InputList<string>? _applicableOperators;

        /// <summary>
        /// (Updatable) An array of operators that can be supported by column fieldName.
        /// </summary>
        public InputList<string> ApplicableOperators
        {
            get => _applicableOperators ?? (_applicableOperators = new InputList<string>());
            set => _applicableOperators = value;
        }

        /// <summary>
        /// (Updatable) Specifies the data type of the column.
        /// </summary>
        [Input("dataType")]
        public Input<string>? DataType { get; set; }

        /// <summary>
        /// (Updatable) Name of the column displayed on UI.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// (Updatable) Specifies the display order of the column.
        /// </summary>
        [Input("displayOrder", required: true)]
        public Input<int> DisplayOrder { get; set; } = null!;

        /// <summary>
        /// (Updatable) Specifies the corresponding field name in the data source.
        /// </summary>
        [Input("fieldName", required: true)]
        public Input<string> FieldName { get; set; } = null!;

        /// <summary>
        /// (Updatable) Indicates if the column is hidden. Values can either be 'true' or 'false'.
        /// </summary>
        [Input("isHidden", required: true)]
        public Input<bool> IsHidden { get; set; } = null!;

        /// <summary>
        /// (Updatable) Specifies if column is virtual and can only be used as column filter.
        /// </summary>
        [Input("isVirtual")]
        public Input<bool>? IsVirtual { get; set; }

        public ReportDefinitionColumnInfoArgs()
        {
        }
        public static new ReportDefinitionColumnInfoArgs Empty => new ReportDefinitionColumnInfoArgs();
    }
}
