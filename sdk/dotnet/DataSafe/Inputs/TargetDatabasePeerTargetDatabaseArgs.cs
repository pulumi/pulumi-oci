// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe.Inputs
{

    public sealed class TargetDatabasePeerTargetDatabaseArgs : global::Pulumi.ResourceArgs
    {
        [Input("databaseDetails")]
        private InputList<Inputs.TargetDatabasePeerTargetDatabaseDatabaseDetailArgs>? _databaseDetails;

        /// <summary>
        /// Details of the database for the registration in Data Safe.
        /// </summary>
        public InputList<Inputs.TargetDatabasePeerTargetDatabaseDatabaseDetailArgs> DatabaseDetails
        {
            get => _databaseDetails ?? (_databaseDetails = new InputList<Inputs.TargetDatabasePeerTargetDatabaseDatabaseDetailArgs>());
            set => _databaseDetails = value;
        }

        /// <summary>
        /// Unique name of the database associated to the peer target database.
        /// </summary>
        [Input("databaseUniqueName")]
        public Input<string>? DatabaseUniqueName { get; set; }

        /// <summary>
        /// The OCID of the Data Guard Association resource in which the database being registered is considered as peer database to the primary database.
        /// </summary>
        [Input("dataguardAssociationId")]
        public Input<string>? DataguardAssociationId { get; set; }

        /// <summary>
        /// The description of the peer target database in Data Safe.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The display name of the peer target database in Data Safe. The name is modifiable and does not need to be unique.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// The secondary key assigned for the peer target database in Data Safe.
        /// </summary>
        [Input("key")]
        public Input<int>? Key { get; set; }

        /// <summary>
        /// Details about the current state of the peer target database in Data Safe.
        /// </summary>
        [Input("lifecycleDetails")]
        public Input<string>? LifecycleDetails { get; set; }

        /// <summary>
        /// Role of the database associated to the peer target database.
        /// </summary>
        [Input("role")]
        public Input<string>? Role { get; set; }

        /// <summary>
        /// The current state of the target database in Data Safe.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The date and time the database was registered in Data Safe and created as a target database in Data Safe.
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        [Input("tlsConfigs")]
        private InputList<Inputs.TargetDatabasePeerTargetDatabaseTlsConfigArgs>? _tlsConfigs;

        /// <summary>
        /// (Updatable) The details required to establish a TLS enabled connection.
        /// </summary>
        public InputList<Inputs.TargetDatabasePeerTargetDatabaseTlsConfigArgs> TlsConfigs
        {
            get => _tlsConfigs ?? (_tlsConfigs = new InputList<Inputs.TargetDatabasePeerTargetDatabaseTlsConfigArgs>());
            set => _tlsConfigs = value;
        }

        public TargetDatabasePeerTargetDatabaseArgs()
        {
        }
        public static new TargetDatabasePeerTargetDatabaseArgs Empty => new TargetDatabasePeerTargetDatabaseArgs();
    }
}
