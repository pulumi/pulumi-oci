// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe
{
    /// <summary>
    /// This resource provides Pre-masking Report Management resource in Oracle Cloud Infrastructure Data Safe service.
    /// 
    /// Gets the details of the specified pre-masking health report.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testPreMaskingReportManagement = new Oci.DataSafe.MaskingPolicyHealthReportManagement("test_pre_masking_report_management", new()
    ///     {
    ///         TargetId = testTargetDatabase.Id,
    ///         MaskingPolicyId = testMaskingPolicy.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Import is not supported for this resource.
    /// </summary>
    [OciResourceType("oci:DataSafe/maskingPolicyHealthReportManagement:MaskingPolicyHealthReportManagement")]
    public partial class MaskingPolicyHealthReportManagement : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The OCID of the compartment that contains the masking report.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        [Output("definedTags")]
        public Output<ImmutableDictionary<string, string>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// Description for the pre-masking report,
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// The display name of the pre-masking report,
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, string>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// The OCID of the masking policy.
        /// </summary>
        [Output("maskingPolicyId")]
        public Output<string> MaskingPolicyId { get; private set; } = null!;

        /// <summary>
        /// The current state of the pre-masking report.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The OCID of the target database masked.
        /// </summary>
        [Output("targetId")]
        public Output<string> TargetId { get; private set; } = null!;

        /// <summary>
        /// The date and time the pre-masking report was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339),
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The date and time the pre-masking report was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339),
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;


        /// <summary>
        /// Create a MaskingPolicyHealthReportManagement resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MaskingPolicyHealthReportManagement(string name, MaskingPolicyHealthReportManagementArgs? args = null, CustomResourceOptions? options = null)
            : base("oci:DataSafe/maskingPolicyHealthReportManagement:MaskingPolicyHealthReportManagement", name, args ?? new MaskingPolicyHealthReportManagementArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MaskingPolicyHealthReportManagement(string name, Input<string> id, MaskingPolicyHealthReportManagementState? state = null, CustomResourceOptions? options = null)
            : base("oci:DataSafe/maskingPolicyHealthReportManagement:MaskingPolicyHealthReportManagement", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MaskingPolicyHealthReportManagement resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MaskingPolicyHealthReportManagement Get(string name, Input<string> id, MaskingPolicyHealthReportManagementState? state = null, CustomResourceOptions? options = null)
        {
            return new MaskingPolicyHealthReportManagement(name, id, state, options);
        }
    }

    public sealed class MaskingPolicyHealthReportManagementArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The OCID of the compartment that contains the masking report.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// The OCID of the masking policy.
        /// </summary>
        [Input("maskingPolicyId")]
        public Input<string>? MaskingPolicyId { get; set; }

        /// <summary>
        /// The OCID of the target database masked.
        /// </summary>
        [Input("targetId")]
        public Input<string>? TargetId { get; set; }

        public MaskingPolicyHealthReportManagementArgs()
        {
        }
        public static new MaskingPolicyHealthReportManagementArgs Empty => new MaskingPolicyHealthReportManagementArgs();
    }

    public sealed class MaskingPolicyHealthReportManagementState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The OCID of the compartment that contains the masking report.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("definedTags")]
        private InputMap<string>? _definedTags;
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// Description for the pre-masking report,
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The display name of the pre-masking report,
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// The OCID of the masking policy.
        /// </summary>
        [Input("maskingPolicyId")]
        public Input<string>? MaskingPolicyId { get; set; }

        /// <summary>
        /// The current state of the pre-masking report.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The OCID of the target database masked.
        /// </summary>
        [Input("targetId")]
        public Input<string>? TargetId { get; set; }

        /// <summary>
        /// The date and time the pre-masking report was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339),
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The date and time the pre-masking report was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339),
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        public MaskingPolicyHealthReportManagementState()
        {
        }
        public static new MaskingPolicyHealthReportManagementState Empty => new MaskingPolicyHealthReportManagementState();
    }
}
