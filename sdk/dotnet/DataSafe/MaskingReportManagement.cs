// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe
{
    /// <summary>
    /// This resource provides Masking Report Management resource in Oracle Cloud Infrastructure Data Safe service.
    /// 
    /// Gets the details of the specified masking report.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testMaskingReportManagement = new Oci.DataSafe.MaskingReportManagement("test_masking_report_management", new()
    ///     {
    ///         TargetId = testTargetDatabase.Id,
    ///         MaskingPolicyId = testMaskingPolicy.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Import is not supported for this resource.
    /// </summary>
    [OciResourceType("oci:DataSafe/maskingReportManagement:MaskingReportManagement")]
    public partial class MaskingReportManagement : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The OCID of the compartment that contains the masking report.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// Indicates if the temporary tables created during the masking operation were dropped after masking.
        /// </summary>
        [Output("isDropTempTablesEnabled")]
        public Output<bool> IsDropTempTablesEnabled { get; private set; } = null!;

        /// <summary>
        /// Indicates if redo logging was enabled during the masking operation.
        /// </summary>
        [Output("isRedoLoggingEnabled")]
        public Output<bool> IsRedoLoggingEnabled { get; private set; } = null!;

        /// <summary>
        /// Indicates if statistics gathering was enabled during the masking operation.
        /// </summary>
        [Output("isRefreshStatsEnabled")]
        public Output<bool> IsRefreshStatsEnabled { get; private set; } = null!;

        /// <summary>
        /// The OCID of the masking policy.
        /// </summary>
        [Output("maskingPolicyId")]
        public Output<string> MaskingPolicyId { get; private set; } = null!;

        /// <summary>
        /// The OCID of the masking work request that resulted in this masking report.
        /// </summary>
        [Output("maskingWorkRequestId")]
        public Output<string> MaskingWorkRequestId { get; private set; } = null!;

        /// <summary>
        /// Indicates if parallel execution was enabled during the masking operation.
        /// </summary>
        [Output("parallelDegree")]
        public Output<string> ParallelDegree { get; private set; } = null!;

        /// <summary>
        /// Indicates how invalid objects were recompiled post the masking operation.
        /// </summary>
        [Output("recompile")]
        public Output<string> Recompile { get; private set; } = null!;

        /// <summary>
        /// The current state of the masking report.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The OCID of the target database masked.
        /// </summary>
        [Output("targetId")]
        public Output<string> TargetId { get; private set; } = null!;

        /// <summary>
        /// The date and time the masking report was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The date and time data masking finished, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339)
        /// </summary>
        [Output("timeMaskingFinished")]
        public Output<string> TimeMaskingFinished { get; private set; } = null!;

        /// <summary>
        /// The date and time data masking started, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339)
        /// </summary>
        [Output("timeMaskingStarted")]
        public Output<string> TimeMaskingStarted { get; private set; } = null!;

        /// <summary>
        /// The total number of masked columns.
        /// </summary>
        [Output("totalMaskedColumns")]
        public Output<string> TotalMaskedColumns { get; private set; } = null!;

        /// <summary>
        /// The total number of unique objects (tables and editioning views) that contain the masked columns.
        /// </summary>
        [Output("totalMaskedObjects")]
        public Output<string> TotalMaskedObjects { get; private set; } = null!;

        /// <summary>
        /// The total number of unique schemas that contain the masked columns.
        /// </summary>
        [Output("totalMaskedSchemas")]
        public Output<string> TotalMaskedSchemas { get; private set; } = null!;

        /// <summary>
        /// The total number of unique sensitive types associated with the masked columns.
        /// </summary>
        [Output("totalMaskedSensitiveTypes")]
        public Output<string> TotalMaskedSensitiveTypes { get; private set; } = null!;

        /// <summary>
        /// The total number of masked values.
        /// </summary>
        [Output("totalMaskedValues")]
        public Output<string> TotalMaskedValues { get; private set; } = null!;


        /// <summary>
        /// Create a MaskingReportManagement resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MaskingReportManagement(string name, MaskingReportManagementArgs? args = null, CustomResourceOptions? options = null)
            : base("oci:DataSafe/maskingReportManagement:MaskingReportManagement", name, args ?? new MaskingReportManagementArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MaskingReportManagement(string name, Input<string> id, MaskingReportManagementState? state = null, CustomResourceOptions? options = null)
            : base("oci:DataSafe/maskingReportManagement:MaskingReportManagement", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MaskingReportManagement resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MaskingReportManagement Get(string name, Input<string> id, MaskingReportManagementState? state = null, CustomResourceOptions? options = null)
        {
            return new MaskingReportManagement(name, id, state, options);
        }
    }

    public sealed class MaskingReportManagementArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The OCID of the compartment that contains the masking report.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// The OCID of the masking policy.
        /// </summary>
        [Input("maskingPolicyId")]
        public Input<string>? MaskingPolicyId { get; set; }

        /// <summary>
        /// The OCID of the target database masked.
        /// </summary>
        [Input("targetId")]
        public Input<string>? TargetId { get; set; }

        public MaskingReportManagementArgs()
        {
        }
        public static new MaskingReportManagementArgs Empty => new MaskingReportManagementArgs();
    }

    public sealed class MaskingReportManagementState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The OCID of the compartment that contains the masking report.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// Indicates if the temporary tables created during the masking operation were dropped after masking.
        /// </summary>
        [Input("isDropTempTablesEnabled")]
        public Input<bool>? IsDropTempTablesEnabled { get; set; }

        /// <summary>
        /// Indicates if redo logging was enabled during the masking operation.
        /// </summary>
        [Input("isRedoLoggingEnabled")]
        public Input<bool>? IsRedoLoggingEnabled { get; set; }

        /// <summary>
        /// Indicates if statistics gathering was enabled during the masking operation.
        /// </summary>
        [Input("isRefreshStatsEnabled")]
        public Input<bool>? IsRefreshStatsEnabled { get; set; }

        /// <summary>
        /// The OCID of the masking policy.
        /// </summary>
        [Input("maskingPolicyId")]
        public Input<string>? MaskingPolicyId { get; set; }

        /// <summary>
        /// The OCID of the masking work request that resulted in this masking report.
        /// </summary>
        [Input("maskingWorkRequestId")]
        public Input<string>? MaskingWorkRequestId { get; set; }

        /// <summary>
        /// Indicates if parallel execution was enabled during the masking operation.
        /// </summary>
        [Input("parallelDegree")]
        public Input<string>? ParallelDegree { get; set; }

        /// <summary>
        /// Indicates how invalid objects were recompiled post the masking operation.
        /// </summary>
        [Input("recompile")]
        public Input<string>? Recompile { get; set; }

        /// <summary>
        /// The current state of the masking report.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The OCID of the target database masked.
        /// </summary>
        [Input("targetId")]
        public Input<string>? TargetId { get; set; }

        /// <summary>
        /// The date and time the masking report was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The date and time data masking finished, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339)
        /// </summary>
        [Input("timeMaskingFinished")]
        public Input<string>? TimeMaskingFinished { get; set; }

        /// <summary>
        /// The date and time data masking started, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339)
        /// </summary>
        [Input("timeMaskingStarted")]
        public Input<string>? TimeMaskingStarted { get; set; }

        /// <summary>
        /// The total number of masked columns.
        /// </summary>
        [Input("totalMaskedColumns")]
        public Input<string>? TotalMaskedColumns { get; set; }

        /// <summary>
        /// The total number of unique objects (tables and editioning views) that contain the masked columns.
        /// </summary>
        [Input("totalMaskedObjects")]
        public Input<string>? TotalMaskedObjects { get; set; }

        /// <summary>
        /// The total number of unique schemas that contain the masked columns.
        /// </summary>
        [Input("totalMaskedSchemas")]
        public Input<string>? TotalMaskedSchemas { get; set; }

        /// <summary>
        /// The total number of unique sensitive types associated with the masked columns.
        /// </summary>
        [Input("totalMaskedSensitiveTypes")]
        public Input<string>? TotalMaskedSensitiveTypes { get; set; }

        /// <summary>
        /// The total number of masked values.
        /// </summary>
        [Input("totalMaskedValues")]
        public Input<string>? TotalMaskedValues { get; set; }

        public MaskingReportManagementState()
        {
        }
        public static new MaskingReportManagementState Empty => new MaskingReportManagementState();
    }
}
