// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe.Outputs
{

    [OutputType]
    public sealed class AuditPolicyManagementAuditCondition
    {
        /// <summary>
        /// Indicates the audit policy name. Refer to the [documentation](https://docs.oracle.com/en/cloud/paas/data-safe/udscs/audit-policies.html#GUID-361A9A9A-7C21-4F5A-8945-9B3A0C472827) for seeded audit policy names. For custom policies, refer to the user-defined policy name created in the target database.
        /// </summary>
        public readonly string? AuditPolicyName;
        /// <summary>
        /// Indicates the users/roles in the target database for which the audit policy is enforced, and the success/failure event condition to generate the audit event..
        /// </summary>
        public readonly ImmutableArray<Outputs.AuditPolicyManagementAuditConditionEnableCondition> EnableConditions;
        /// <summary>
        /// Indicates whether the Data Safe user activity on the target database will be audited by the policy.
        /// </summary>
        public readonly bool? IsDataSafeServiceAccountAudited;
        public readonly bool? IsEnabled;
        /// <summary>
        /// Indicates whether the privileged user list is managed by Data Safe.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        public readonly bool? IsPrivUsersManagedByDataSafe;

        [OutputConstructor]
        private AuditPolicyManagementAuditCondition(
            string? auditPolicyName,

            ImmutableArray<Outputs.AuditPolicyManagementAuditConditionEnableCondition> enableConditions,

            bool? isDataSafeServiceAccountAudited,

            bool? isEnabled,

            bool? isPrivUsersManagedByDataSafe)
        {
            AuditPolicyName = auditPolicyName;
            EnableConditions = enableConditions;
            IsDataSafeServiceAccountAudited = isDataSafeServiceAccountAudited;
            IsEnabled = isEnabled;
            IsPrivUsersManagedByDataSafe = isPrivUsersManagedByDataSafe;
        }
    }
}
