// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe.Outputs
{

    [OutputType]
    public sealed class GetAuditEventAnalyticItemResult
    {
        /// <summary>
        /// Total count of aggregated value.
        /// </summary>
        public readonly string? Count;
        /// <summary>
        /// Details of aggregation dimensions used for summarizing audit events.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAuditEventAnalyticItemDimensionResult> Dimensions;
        /// <summary>
        /// Display Name of aggregation field.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// Name of the aggregation.
        /// </summary>
        public readonly string? MetricName;
        /// <summary>
        /// An optional filter to return audit events whose creation time in the database is less than and equal to the date-time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        public readonly string? TimeEnded;
        /// <summary>
        /// An optional filter to return audit events whose creation time in the database is greater than and equal to the date-time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        public readonly string? TimeStarted;

        [OutputConstructor]
        private GetAuditEventAnalyticItemResult(
            string? count,

            ImmutableArray<Outputs.GetAuditEventAnalyticItemDimensionResult> dimensions,

            string? displayName,

            string? metricName,

            string? timeEnded,

            string? timeStarted)
        {
            Count = count;
            Dimensions = dimensions;
            DisplayName = displayName;
            MetricName = metricName;
            TimeEnded = timeEnded;
            TimeStarted = timeStarted;
        }
    }
}
