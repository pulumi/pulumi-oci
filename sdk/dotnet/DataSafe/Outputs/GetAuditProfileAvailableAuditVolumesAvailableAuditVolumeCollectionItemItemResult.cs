// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe.Outputs
{

    [OutputType]
    public sealed class GetAuditProfileAvailableAuditVolumesAvailableAuditVolumeCollectionItemItemResult
    {
        /// <summary>
        /// The OCID of the audit.
        /// </summary>
        public readonly string AuditProfileId;
        /// <summary>
        /// The OCID of the audit trail.
        /// </summary>
        public readonly string AuditTrailId;
        /// <summary>
        /// Unique name of the database associated to the peer target database.
        /// </summary>
        public readonly string DatabaseUniqueName;
        /// <summary>
        /// Represents the month under consideration for which aggregated audit data volume available at the target is computed. This field will be the UTC start of the day of the first day of the month for which the aggregate count corresponds to, in the format defined by RFC3339.. For instance, the value of 01-01-2021T00:00:00Z represents Jan 2021.
        /// </summary>
        public readonly string MonthInConsideration;
        /// <summary>
        /// The audit trail location.
        /// </summary>
        public readonly string TrailLocation;
        /// <summary>
        /// Represents the aggregated audit data volume available in the audit trails on the target database which is yet to be collected by Data Safe for the specified month.
        /// </summary>
        public readonly string Volume;

        [OutputConstructor]
        private GetAuditProfileAvailableAuditVolumesAvailableAuditVolumeCollectionItemItemResult(
            string auditProfileId,

            string auditTrailId,

            string databaseUniqueName,

            string monthInConsideration,

            string trailLocation,

            string volume)
        {
            AuditProfileId = auditProfileId;
            AuditTrailId = auditTrailId;
            DatabaseUniqueName = databaseUniqueName;
            MonthInConsideration = monthInConsideration;
            TrailLocation = trailLocation;
            Volume = volume;
        }
    }
}
