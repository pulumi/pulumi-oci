// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe.Outputs
{

    [OutputType]
    public sealed class GetMaskingPolicyHealthReportLogsMaskingPolicyHealthReportLogCollectionItemResult
    {
        /// <summary>
        /// A human-readable description for the log entry.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// An enum type entry for each health check in the masking policy. Each enum describes a type of health check. INVALID_OBJECT_CHECK checks if there exist any invalid objects in the masking tables. PRIVILEGE_CHECK checks if the masking user has sufficient privilege to run masking. TABLESPACE_CHECK checks if the user has sufficient default and TEMP tablespace. DATABASE_OR_SYSTEM_TRIGGERS_CHECK checks if there exist any database/system triggers available. UNDO_TABLESPACE_CHECK checks if the AUTOEXTEND feature is enabled for the undo tablespace. If it's not enabled, it further checks if the undo tablespace has any space remaining STATE_STATS_CHECK checks if all the statistics of the masking table is upto date or not. OLS_POLICY_CHECK , VPD_POLICY_CHECK and REDACTION_POLICY_CHECK checks if the masking tables has Oracle Label Security (OLS) or Virtual Private Database (VPD) or Redaction policies enabled. DV_ENABLE_CHECK checks if database has Database Vault(DV) enabled DE_COL_SIZE_CHECK checks if any masking column with DETERMINISTIC ENCRYPTION as masking format has average column size greater than 27 or not. ACTIVE_MASK_JOB_CHECK checks if there is any active masking job running on the target database. DETERMINISTIC_ENCRYPTION_FORMAT_CHECK checks if any masking column has deterministic encryption masking format. COLUMN_EXIST_CHECK checks if the masking columns are available in the target database.
        /// </summary>
        public readonly string HealthCheckType;
        /// <summary>
        /// A human-readable log entry.
        /// </summary>
        public readonly string Message;
        /// <summary>
        /// A filter to return only the resources that match the specified log message type.
        /// </summary>
        public readonly string MessageType;
        /// <summary>
        /// A human-readable log entry to remedy any error or warnings in the masking policy.
        /// </summary>
        public readonly string Remediation;
        /// <summary>
        /// The date and time the log entry was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        public readonly string Timestamp;

        [OutputConstructor]
        private GetMaskingPolicyHealthReportLogsMaskingPolicyHealthReportLogCollectionItemResult(
            string description,

            string healthCheckType,

            string message,

            string messageType,

            string remediation,

            string timestamp)
        {
            Description = description;
            HealthCheckType = healthCheckType;
            Message = message;
            MessageType = messageType;
            Remediation = remediation;
            Timestamp = timestamp;
        }
    }
}
