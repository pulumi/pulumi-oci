// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe.Outputs
{

    [OutputType]
    public sealed class GetMaskingPolicyHealthReportsMaskingPolicyHealthReportCollectionItemResult
    {
        /// <summary>
        /// A filter to return only resources that match the specified compartment OCID.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// The description of the masking health report.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// A filter to return only resources that match the specified display name.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// The count of errors in the masking health report.
        /// </summary>
        public readonly string ErrorCount;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The OCID of the health report.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A filter to return only the resources that match the specified masking policy OCID.
        /// </summary>
        public readonly string MaskingPolicyId;
        /// <summary>
        /// A filter to return only the resources that match the specified lifecycle states.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// A filter to return only items related to a specific target OCID.
        /// </summary>
        public readonly string TargetId;
        /// <summary>
        /// The date and time the report was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The date and time the report was last updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339)
        /// </summary>
        public readonly string TimeUpdated;
        /// <summary>
        /// The count of warnings in the masking health report.
        /// </summary>
        public readonly string WarningCount;

        [OutputConstructor]
        private GetMaskingPolicyHealthReportsMaskingPolicyHealthReportCollectionItemResult(
            string compartmentId,

            ImmutableDictionary<string, string> definedTags,

            string description,

            string displayName,

            string errorCount,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            string maskingPolicyId,

            string state,

            string targetId,

            string timeCreated,

            string timeUpdated,

            string warningCount)
        {
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            ErrorCount = errorCount;
            FreeformTags = freeformTags;
            Id = id;
            MaskingPolicyId = maskingPolicyId;
            State = state;
            TargetId = targetId;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            WarningCount = warningCount;
        }
    }
}
