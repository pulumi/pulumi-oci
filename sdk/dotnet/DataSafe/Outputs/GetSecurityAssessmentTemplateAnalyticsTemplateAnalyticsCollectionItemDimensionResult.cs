// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe.Outputs
{

    [OutputType]
    public sealed class GetSecurityAssessmentTemplateAnalyticsTemplateAnalyticsCollectionItemDimensionResult
    {
        /// <summary>
        /// A filter to return only the statistics where the comparison between the latest assessment and the template baseline assessment is done.
        /// </summary>
        public readonly bool IsCompared;
        /// <summary>
        /// A filter to return only the statistics where the latest assessment is compliant with the template baseline assessment.
        /// </summary>
        public readonly bool IsCompliant;
        /// <summary>
        /// A filter to return only the target group related information if the OCID belongs to a target group.
        /// </summary>
        public readonly bool IsGroup;
        /// <summary>
        /// A filter to return the target database group that matches the specified OCID.
        /// </summary>
        public readonly string TargetDatabaseGroupId;
        /// <summary>
        /// A filter to return only items related to a specific target OCID.
        /// </summary>
        public readonly string TargetId;
        /// <summary>
        /// The OCID of the security assessment of type TEMPLATE.
        /// </summary>
        public readonly string TemplateAssessmentId;
        /// <summary>
        /// The OCID of the security assessment of type TEMPLATE_BASELINE.
        /// </summary>
        public readonly string TemplateBaselineAssessmentId;
        /// <summary>
        /// The date and time when the comparison was made upon the template baseline. Conforms to the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        public readonly string TimeLastCompared;
        /// <summary>
        /// The number of checks inside the template assessment.
        /// </summary>
        public readonly int TotalChecks;
        /// <summary>
        /// Indicates how many checks in the template have drifts in the comparison report. This field is only present if isCompliant is false.
        /// </summary>
        public readonly int TotalChecksFailed;
        /// <summary>
        /// The number of the target(s) that have drifts in the comparison report. This field is only present if isCompared is true.
        /// </summary>
        public readonly int TotalNonCompliantTargets;
        /// <summary>
        /// The number of the target(s) inside the target group for which the template baseline assessment was created for. If the isGroup field is false, the value will be 1, representing the single target.
        /// </summary>
        public readonly int TotalTargets;

        [OutputConstructor]
        private GetSecurityAssessmentTemplateAnalyticsTemplateAnalyticsCollectionItemDimensionResult(
            bool isCompared,

            bool isCompliant,

            bool isGroup,

            string targetDatabaseGroupId,

            string targetId,

            string templateAssessmentId,

            string templateBaselineAssessmentId,

            string timeLastCompared,

            int totalChecks,

            int totalChecksFailed,

            int totalNonCompliantTargets,

            int totalTargets)
        {
            IsCompared = isCompared;
            IsCompliant = isCompliant;
            IsGroup = isGroup;
            TargetDatabaseGroupId = targetDatabaseGroupId;
            TargetId = targetId;
            TemplateAssessmentId = templateAssessmentId;
            TemplateBaselineAssessmentId = templateBaselineAssessmentId;
            TimeLastCompared = timeLastCompared;
            TotalChecks = totalChecks;
            TotalChecksFailed = totalChecksFailed;
            TotalNonCompliantTargets = totalNonCompliantTargets;
            TotalTargets = totalTargets;
        }
    }
}
