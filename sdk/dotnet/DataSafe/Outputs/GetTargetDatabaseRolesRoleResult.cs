// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe.Outputs
{

    [OutputType]
    public sealed class GetTargetDatabaseRolesRoleResult
    {
        /// <summary>
        /// A filter to return roles based on authentication type.
        /// </summary>
        public readonly string AuthenticationType;
        /// <summary>
        /// Is the role common.
        /// </summary>
        public readonly bool IsCommon;
        /// <summary>
        /// Is the role implicit.
        /// </summary>
        public readonly bool IsImplicit;
        /// <summary>
        /// Is the role inherited.
        /// </summary>
        public readonly bool IsInherited;
        /// <summary>
        /// A filter to return roles based on whether they are maintained by oracle or not.
        /// </summary>
        public readonly bool IsOracleMaintained;
        /// <summary>
        /// Is password required.
        /// </summary>
        public readonly bool IsPasswordRequired;
        /// <summary>
        /// A filter to return only a specific role based on role name.
        /// </summary>
        public readonly string RoleName;

        [OutputConstructor]
        private GetTargetDatabaseRolesRoleResult(
            string authenticationType,

            bool isCommon,

            bool isImplicit,

            bool isInherited,

            bool isOracleMaintained,

            bool isPasswordRequired,

            string roleName)
        {
            AuthenticationType = authenticationType;
            IsCommon = isCommon;
            IsImplicit = isImplicit;
            IsInherited = isInherited;
            IsOracleMaintained = isOracleMaintained;
            IsPasswordRequired = isPasswordRequired;
            RoleName = roleName;
        }
    }
}
