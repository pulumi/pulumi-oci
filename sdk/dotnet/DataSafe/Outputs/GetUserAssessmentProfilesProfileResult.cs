// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe.Outputs
{

    [OutputType]
    public sealed class GetUserAssessmentProfilesProfileResult
    {
        /// <summary>
        /// A filter to return only resources that match the specified compartment OCID.
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// Specify the total resource cost for a session, expressed in service units. Oracle Database calculates the total service units as a weighted sum of CPU_PER_SESSION, CONNECT_TIME, LOGICAL_READS_PER_SESSION, and PRIVATE_SGA.
        /// </summary>
        public readonly string? CompositeLimit;
        /// <summary>
        /// Specify the total elapsed time limit for a session, expressed in minutes.
        /// </summary>
        public readonly string? ConnectTime;
        /// <summary>
        /// Specify the CPU time limit for a call (a parse, execute, or fetch), expressed in hundredths of seconds.
        /// </summary>
        public readonly string? CpuPerCall;
        /// <summary>
        /// Specify the CPU time limit for a session, expressed in hundredth of seconds.
        /// </summary>
        public readonly string? CpuPerSession;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? DefinedTags;
        /// <summary>
        /// Maximum times the user is allowed in fail login before the user account is locked.
        /// </summary>
        public readonly string? FailedLoginAttempts;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? FreeformTags;
        /// <summary>
        /// Specify the permitted periods of continuous inactive time during a  session, expressed in minutes.
        /// </summary>
        public readonly string? IdleTime;
        /// <summary>
        /// The permitted periods of continuous inactive time during a session, expressed in minutes. Long-running queries and other operations are not subjected to this limit.
        /// </summary>
        public readonly string? InactiveAccountTime;
        /// <summary>
        /// An optional filter to return the user created profiles.
        /// </summary>
        public readonly bool? IsUserCreated;
        /// <summary>
        /// Specify the permitted the number of data blocks read for a call to process a SQL statement (a parse, execute, or fetch).
        /// </summary>
        public readonly string? LogicalReadsPerCall;
        /// <summary>
        /// Specify the permitted number of data blocks read in a session, including blocks read from memory and disk.
        /// </summary>
        public readonly string? LogicalReadsPerSession;
        /// <summary>
        /// Number of grace days for user to change password.
        /// </summary>
        public readonly string? PasswordGraceTime;
        /// <summary>
        /// Number of days the password is valid before expiry.
        /// </summary>
        public readonly string? PasswordLifeTime;
        /// <summary>
        /// Number of days the user account remains locked after failed login.
        /// </summary>
        public readonly string? PasswordLockTime;
        /// <summary>
        /// Number of day after the user can use the already used password.
        /// </summary>
        public readonly string? PasswordReuseMax;
        /// <summary>
        /// Number of days before which a password cannot be reused.
        /// </summary>
        public readonly string? PasswordReuseTime;
        /// <summary>
        /// Number of days the password rollover is allowed. Minimum value can be 1/24 day (1 hour) to 60 days.
        /// </summary>
        public readonly string? PasswordRolloverTime;
        /// <summary>
        /// An optional filter to filter the profiles based on password verification function.
        /// </summary>
        public readonly string? PasswordVerificationFunction;
        /// <summary>
        /// Details about the PL/SQL that can be used for password verification.
        /// </summary>
        public readonly string? PasswordVerificationFunctionDetails;
        /// <summary>
        /// Specify the amount of private space a session can allocate in the shared pool of the system global area (SGA), expressed in bytes.
        /// </summary>
        public readonly string? PrivateSga;
        /// <summary>
        /// A filter to return only items that match the specified profile name.
        /// </summary>
        public readonly string? ProfileName;
        /// <summary>
        /// Specify the number of concurrent sessions to which you want to limit the user.
        /// </summary>
        public readonly string? SessionsPerUser;
        /// <summary>
        /// A filter to return only items related to a specific target OCID.
        /// </summary>
        public readonly string? TargetId;
        /// <summary>
        /// The OCID of the user assessment.
        /// </summary>
        public readonly string? UserAssessmentId;
        /// <summary>
        /// The number of users that have a given profile.
        /// </summary>
        public readonly int? UserCount;

        [OutputConstructor]
        private GetUserAssessmentProfilesProfileResult(
            string? compartmentId,

            string? compositeLimit,

            string? connectTime,

            string? cpuPerCall,

            string? cpuPerSession,

            ImmutableDictionary<string, object>? definedTags,

            string? failedLoginAttempts,

            ImmutableDictionary<string, object>? freeformTags,

            string? idleTime,

            string? inactiveAccountTime,

            bool? isUserCreated,

            string? logicalReadsPerCall,

            string? logicalReadsPerSession,

            string? passwordGraceTime,

            string? passwordLifeTime,

            string? passwordLockTime,

            string? passwordReuseMax,

            string? passwordReuseTime,

            string? passwordRolloverTime,

            string? passwordVerificationFunction,

            string? passwordVerificationFunctionDetails,

            string? privateSga,

            string? profileName,

            string? sessionsPerUser,

            string? targetId,

            string? userAssessmentId,

            int? userCount)
        {
            CompartmentId = compartmentId;
            CompositeLimit = compositeLimit;
            ConnectTime = connectTime;
            CpuPerCall = cpuPerCall;
            CpuPerSession = cpuPerSession;
            DefinedTags = definedTags;
            FailedLoginAttempts = failedLoginAttempts;
            FreeformTags = freeformTags;
            IdleTime = idleTime;
            InactiveAccountTime = inactiveAccountTime;
            IsUserCreated = isUserCreated;
            LogicalReadsPerCall = logicalReadsPerCall;
            LogicalReadsPerSession = logicalReadsPerSession;
            PasswordGraceTime = passwordGraceTime;
            PasswordLifeTime = passwordLifeTime;
            PasswordLockTime = passwordLockTime;
            PasswordReuseMax = passwordReuseMax;
            PasswordReuseTime = passwordReuseTime;
            PasswordRolloverTime = passwordRolloverTime;
            PasswordVerificationFunction = passwordVerificationFunction;
            PasswordVerificationFunctionDetails = passwordVerificationFunctionDetails;
            PrivateSga = privateSga;
            ProfileName = profileName;
            SessionsPerUser = sessionsPerUser;
            TargetId = targetId;
            UserAssessmentId = userAssessmentId;
            UserCount = userCount;
        }
    }
}
