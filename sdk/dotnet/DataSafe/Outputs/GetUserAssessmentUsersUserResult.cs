// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe.Outputs
{

    [OutputType]
    public sealed class GetUserAssessmentUsersUserResult
    {
        /// <summary>
        /// A filter to return only items that match the specified account status.
        /// </summary>
        public readonly string AccountStatus;
        /// <summary>
        /// The admin roles granted to the user.
        /// </summary>
        public readonly ImmutableArray<string> AdminRoles;
        /// <summary>
        /// A filter to return only items that match the criteria that all schemas can be accessed by a user.
        /// </summary>
        public readonly bool AreAllSchemasAccessible;
        /// <summary>
        /// A filter to return only items that match the specified authentication type.
        /// </summary>
        public readonly string AuthenticationType;
        /// <summary>
        /// The unique user key. This is a system-generated identifier. Use ListUsers to get the user key for a user.
        /// </summary>
        public readonly string Key;
        /// <summary>
        /// A filter to return items that contain the specified schema list.
        /// </summary>
        public readonly ImmutableArray<string> SchemaLists;
        /// <summary>
        /// A filter to return only items related to a specific target OCID.
        /// </summary>
        public readonly string TargetId;
        /// <summary>
        /// The date and time the user last logged in, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        public readonly string TimeLastLogin;
        /// <summary>
        /// The date and time the user password was last changed, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        public readonly string TimePasswordChanged;
        /// <summary>
        /// The date and time the user's password will expire, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        public readonly string TimePasswordExpiry;
        /// <summary>
        /// The date and time the user was created in the database, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        public readonly string TimeUserCreated;
        /// <summary>
        /// A filter to return only items that match the specified user category.
        /// </summary>
        public readonly string UserCategory;
        /// <summary>
        /// A filter to return only items that match the specified user name.
        /// </summary>
        public readonly string UserName;
        /// <summary>
        /// A filter to return only items that match the specified user profile.
        /// </summary>
        public readonly string UserProfile;
        /// <summary>
        /// The user type, which can be a combination of the following:
        /// </summary>
        public readonly ImmutableArray<string> UserTypes;

        [OutputConstructor]
        private GetUserAssessmentUsersUserResult(
            string accountStatus,

            ImmutableArray<string> adminRoles,

            bool areAllSchemasAccessible,

            string authenticationType,

            string key,

            ImmutableArray<string> schemaLists,

            string targetId,

            string timeLastLogin,

            string timePasswordChanged,

            string timePasswordExpiry,

            string timeUserCreated,

            string userCategory,

            string userName,

            string userProfile,

            ImmutableArray<string> userTypes)
        {
            AccountStatus = accountStatus;
            AdminRoles = adminRoles;
            AreAllSchemasAccessible = areAllSchemasAccessible;
            AuthenticationType = authenticationType;
            Key = key;
            SchemaLists = schemaLists;
            TargetId = targetId;
            TimeLastLogin = timeLastLogin;
            TimePasswordChanged = timePasswordChanged;
            TimePasswordExpiry = timePasswordExpiry;
            TimeUserCreated = timeUserCreated;
            UserCategory = userCategory;
            UserName = userName;
            UserProfile = userProfile;
            UserTypes = userTypes;
        }
    }
}
