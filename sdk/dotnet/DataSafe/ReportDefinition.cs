// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe
{
    /// <summary>
    /// This resource provides the Report Definition resource in Oracle Cloud Infrastructure Data Safe service.
    /// 
    /// Creates a new report definition with parameters specified in the body. The report definition is stored in the specified compartment.
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testReportDefinition = new Oci.DataSafe.ReportDefinition("testReportDefinition", new()
    ///     {
    ///         ColumnFilters = new[]
    ///         {
    ///             new Oci.DataSafe.Inputs.ReportDefinitionColumnFilterArgs
    ///             {
    ///                 Expressions = @var.Report_definition_column_filters_expressions,
    ///                 FieldName = @var.Report_definition_column_filters_field_name,
    ///                 IsEnabled = @var.Report_definition_column_filters_is_enabled,
    ///                 IsHidden = @var.Report_definition_column_filters_is_hidden,
    ///                 Operator = @var.Report_definition_column_filters_operator,
    ///             },
    ///         },
    ///         ColumnInfos = new[]
    ///         {
    ///             new Oci.DataSafe.Inputs.ReportDefinitionColumnInfoArgs
    ///             {
    ///                 DisplayName = @var.Report_definition_column_info_display_name,
    ///                 DisplayOrder = @var.Report_definition_column_info_display_order,
    ///                 FieldName = @var.Report_definition_column_info_field_name,
    ///                 IsHidden = @var.Report_definition_column_info_is_hidden,
    ///                 DataType = @var.Report_definition_column_info_data_type,
    ///             },
    ///         },
    ///         ColumnSortings = new[]
    ///         {
    ///             new Oci.DataSafe.Inputs.ReportDefinitionColumnSortingArgs
    ///             {
    ///                 FieldName = @var.Report_definition_column_sortings_field_name,
    ///                 IsAscending = @var.Report_definition_column_sortings_is_ascending,
    ///                 SortingOrder = @var.Report_definition_column_sortings_sorting_order,
    ///             },
    ///         },
    ///         CompartmentId = @var.Compartment_id,
    ///         DisplayName = @var.Report_definition_display_name,
    ///         ParentId = oci_data_safe_parent.Test_parent.Id,
    ///         Summaries = new[]
    ///         {
    ///             new Oci.DataSafe.Inputs.ReportDefinitionSummaryArgs
    ///             {
    ///                 DisplayOrder = @var.Report_definition_summary_display_order,
    ///                 Name = @var.Report_definition_summary_name,
    ///                 CountOf = @var.Report_definition_summary_count_of,
    ///                 GroupByFieldName = @var.Report_definition_summary_group_by_field_name,
    ///                 IsHidden = @var.Report_definition_summary_is_hidden,
    ///                 ScimFilter = @var.Report_definition_summary_scim_filter,
    ///             },
    ///         },
    ///         DefinedTags = 
    ///         {
    ///             { "Operations.CostCenter", "42" },
    ///         },
    ///         Description = @var.Report_definition_description,
    ///         FreeformTags = 
    ///         {
    ///             { "Department", "Finance" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// ReportDefinitions can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:DataSafe/reportDefinition:ReportDefinition test_report_definition "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:DataSafe/reportDefinition:ReportDefinition")]
    public partial class ReportDefinition : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies the name of the category that this report belongs to.
        /// </summary>
        [Output("category")]
        public Output<string> Category { get; private set; } = null!;

        /// <summary>
        /// (Updatable) An array of column filter objects. A column Filter object stores all information about a column filter including field name, an operator, one or more expressions, if the filter is enabled, or if the filter is hidden.
        /// </summary>
        [Output("columnFilters")]
        public Output<ImmutableArray<Outputs.ReportDefinitionColumnFilter>> ColumnFilters { get; private set; } = null!;

        /// <summary>
        /// (Updatable) An array of column objects in the order (left to right) displayed in the report. A column object stores all information about a column, including the name displayed on the UI, corresponding field name in the data source, data type of the column, and column visibility (if the column is visible to the user).
        /// </summary>
        [Output("columnInfos")]
        public Output<ImmutableArray<Outputs.ReportDefinitionColumnInfo>> ColumnInfos { get; private set; } = null!;

        /// <summary>
        /// (Updatable) An array of column sorting objects. Each column sorting object stores the column name to be sorted and if the sorting is in ascending order; sorting is done by the first column in the array, then by the second column in the array, etc.
        /// </summary>
        [Output("columnSortings")]
        public Output<ImmutableArray<Outputs.ReportDefinitionColumnSorting>> ColumnSortings { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The OCID of the compartment containing the report definition.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// The list of the data protection regulations/standards used in the report that will help demonstrate compliance.
        /// </summary>
        [Output("complianceStandards")]
        public Output<ImmutableArray<string>> ComplianceStandards { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of a resource that provides data for the report. For example alerts, events.
        /// </summary>
        [Output("dataSource")]
        public Output<string> DataSource { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, object>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The description of the report definition.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Specifies the name of the report definition.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Specifies the order in which the summary must be displayed.
        /// </summary>
        [Output("displayOrder")]
        public Output<int> DisplayOrder { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, object>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// Signifies whether the definition is seeded or user defined. Values can either be 'true' or 'false'.
        /// </summary>
        [Output("isSeeded")]
        public Output<bool> IsSeeded { get; private set; } = null!;

        /// <summary>
        /// The OCID of the parent report definition.
        /// </summary>
        [Output("parentId")]
        public Output<string> ParentId { get; private set; } = null!;

        /// <summary>
        /// The time span for the records in the report to be scheduled. &lt;period-value&gt;&lt;period&gt; Allowed period strings - "H","D","M","Y" Each of the above fields potentially introduce constraints. A workRequest is created only when period-value satisfies all the constraints. Constraints introduced: 1. period = H (The allowed range for period-value is [1, 23]) 2. period = D (The allowed range for period-value is [1, 30]) 3. period = M (The allowed range for period-value is [1, 11]) 4. period = Y (The minimum period-value is 1)
        /// </summary>
        [Output("recordTimeSpan")]
        public Output<string> RecordTimeSpan { get; private set; } = null!;

        /// <summary>
        /// The schedule to generate the report periodically in the specified format: &lt;version-string&gt;;&lt;version-specific-schedule&gt;
        /// </summary>
        [Output("schedule")]
        public Output<string> Schedule { get; private set; } = null!;

        /// <summary>
        /// The OCID of the compartment in which the scheduled resource will be created.
        /// </summary>
        [Output("scheduledReportCompartmentId")]
        public Output<string> ScheduledReportCompartmentId { get; private set; } = null!;

        /// <summary>
        /// Specifies the format of the report ( either .xls or .pdf )
        /// </summary>
        [Output("scheduledReportMimeType")]
        public Output<string> ScheduledReportMimeType { get; private set; } = null!;

        /// <summary>
        /// The name of the report to be scheduled.
        /// </summary>
        [Output("scheduledReportName")]
        public Output<string> ScheduledReportName { get; private set; } = null!;

        /// <summary>
        /// Specifies the limit on the number of rows in the report.
        /// </summary>
        [Output("scheduledReportRowLimit")]
        public Output<int> ScheduledReportRowLimit { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Additional scim filters used to get the specific summary.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("scimFilter")]
        public Output<string> ScimFilter { get; private set; } = null!;

        /// <summary>
        /// The current state of the report.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// (Updatable) An array of report summary objects in the order (left to right)  displayed in the report.  A  report summary object stores all information about summary of report to be displayed, including the name displayed on UI, the display order, corresponding group by and count of values, summary visibility (if the summary is visible to user).
        /// </summary>
        [Output("summaries")]
        public Output<ImmutableArray<Outputs.ReportDefinitionSummary>> Summaries { get; private set; } = null!;

        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        [Output("systemTags")]
        public Output<ImmutableDictionary<string, object>> SystemTags { get; private set; } = null!;

        /// <summary>
        /// Specifies the date and time the report definition was created.
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The date and time the report definition was updated.
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;


        /// <summary>
        /// Create a ReportDefinition resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ReportDefinition(string name, ReportDefinitionArgs args, CustomResourceOptions? options = null)
            : base("oci:DataSafe/reportDefinition:ReportDefinition", name, args ?? new ReportDefinitionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ReportDefinition(string name, Input<string> id, ReportDefinitionState? state = null, CustomResourceOptions? options = null)
            : base("oci:DataSafe/reportDefinition:ReportDefinition", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ReportDefinition resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ReportDefinition Get(string name, Input<string> id, ReportDefinitionState? state = null, CustomResourceOptions? options = null)
        {
            return new ReportDefinition(name, id, state, options);
        }
    }

    public sealed class ReportDefinitionArgs : global::Pulumi.ResourceArgs
    {
        [Input("columnFilters", required: true)]
        private InputList<Inputs.ReportDefinitionColumnFilterArgs>? _columnFilters;

        /// <summary>
        /// (Updatable) An array of column filter objects. A column Filter object stores all information about a column filter including field name, an operator, one or more expressions, if the filter is enabled, or if the filter is hidden.
        /// </summary>
        public InputList<Inputs.ReportDefinitionColumnFilterArgs> ColumnFilters
        {
            get => _columnFilters ?? (_columnFilters = new InputList<Inputs.ReportDefinitionColumnFilterArgs>());
            set => _columnFilters = value;
        }

        [Input("columnInfos", required: true)]
        private InputList<Inputs.ReportDefinitionColumnInfoArgs>? _columnInfos;

        /// <summary>
        /// (Updatable) An array of column objects in the order (left to right) displayed in the report. A column object stores all information about a column, including the name displayed on the UI, corresponding field name in the data source, data type of the column, and column visibility (if the column is visible to the user).
        /// </summary>
        public InputList<Inputs.ReportDefinitionColumnInfoArgs> ColumnInfos
        {
            get => _columnInfos ?? (_columnInfos = new InputList<Inputs.ReportDefinitionColumnInfoArgs>());
            set => _columnInfos = value;
        }

        [Input("columnSortings", required: true)]
        private InputList<Inputs.ReportDefinitionColumnSortingArgs>? _columnSortings;

        /// <summary>
        /// (Updatable) An array of column sorting objects. Each column sorting object stores the column name to be sorted and if the sorting is in ascending order; sorting is done by the first column in the array, then by the second column in the array, etc.
        /// </summary>
        public InputList<Inputs.ReportDefinitionColumnSortingArgs> ColumnSortings
        {
            get => _columnSortings ?? (_columnSortings = new InputList<Inputs.ReportDefinitionColumnSortingArgs>());
            set => _columnSortings = value;
        }

        /// <summary>
        /// (Updatable) The OCID of the compartment containing the report definition.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) The description of the report definition.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) Specifies the name of the report definition.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// The OCID of the parent report definition.
        /// </summary>
        [Input("parentId", required: true)]
        public Input<string> ParentId { get; set; } = null!;

        [Input("summaries", required: true)]
        private InputList<Inputs.ReportDefinitionSummaryArgs>? _summaries;

        /// <summary>
        /// (Updatable) An array of report summary objects in the order (left to right)  displayed in the report.  A  report summary object stores all information about summary of report to be displayed, including the name displayed on UI, the display order, corresponding group by and count of values, summary visibility (if the summary is visible to user).
        /// </summary>
        public InputList<Inputs.ReportDefinitionSummaryArgs> Summaries
        {
            get => _summaries ?? (_summaries = new InputList<Inputs.ReportDefinitionSummaryArgs>());
            set => _summaries = value;
        }

        public ReportDefinitionArgs()
        {
        }
        public static new ReportDefinitionArgs Empty => new ReportDefinitionArgs();
    }

    public sealed class ReportDefinitionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the name of the category that this report belongs to.
        /// </summary>
        [Input("category")]
        public Input<string>? Category { get; set; }

        [Input("columnFilters")]
        private InputList<Inputs.ReportDefinitionColumnFilterGetArgs>? _columnFilters;

        /// <summary>
        /// (Updatable) An array of column filter objects. A column Filter object stores all information about a column filter including field name, an operator, one or more expressions, if the filter is enabled, or if the filter is hidden.
        /// </summary>
        public InputList<Inputs.ReportDefinitionColumnFilterGetArgs> ColumnFilters
        {
            get => _columnFilters ?? (_columnFilters = new InputList<Inputs.ReportDefinitionColumnFilterGetArgs>());
            set => _columnFilters = value;
        }

        [Input("columnInfos")]
        private InputList<Inputs.ReportDefinitionColumnInfoGetArgs>? _columnInfos;

        /// <summary>
        /// (Updatable) An array of column objects in the order (left to right) displayed in the report. A column object stores all information about a column, including the name displayed on the UI, corresponding field name in the data source, data type of the column, and column visibility (if the column is visible to the user).
        /// </summary>
        public InputList<Inputs.ReportDefinitionColumnInfoGetArgs> ColumnInfos
        {
            get => _columnInfos ?? (_columnInfos = new InputList<Inputs.ReportDefinitionColumnInfoGetArgs>());
            set => _columnInfos = value;
        }

        [Input("columnSortings")]
        private InputList<Inputs.ReportDefinitionColumnSortingGetArgs>? _columnSortings;

        /// <summary>
        /// (Updatable) An array of column sorting objects. Each column sorting object stores the column name to be sorted and if the sorting is in ascending order; sorting is done by the first column in the array, then by the second column in the array, etc.
        /// </summary>
        public InputList<Inputs.ReportDefinitionColumnSortingGetArgs> ColumnSortings
        {
            get => _columnSortings ?? (_columnSortings = new InputList<Inputs.ReportDefinitionColumnSortingGetArgs>());
            set => _columnSortings = value;
        }

        /// <summary>
        /// (Updatable) The OCID of the compartment containing the report definition.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("complianceStandards")]
        private InputList<string>? _complianceStandards;

        /// <summary>
        /// The list of the data protection regulations/standards used in the report that will help demonstrate compliance.
        /// </summary>
        public InputList<string> ComplianceStandards
        {
            get => _complianceStandards ?? (_complianceStandards = new InputList<string>());
            set => _complianceStandards = value;
        }

        /// <summary>
        /// Specifies the name of a resource that provides data for the report. For example alerts, events.
        /// </summary>
        [Input("dataSource")]
        public Input<string>? DataSource { get; set; }

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) The description of the report definition.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) Specifies the name of the report definition.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// (Updatable) Specifies the order in which the summary must be displayed.
        /// </summary>
        [Input("displayOrder")]
        public Input<int>? DisplayOrder { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// Signifies whether the definition is seeded or user defined. Values can either be 'true' or 'false'.
        /// </summary>
        [Input("isSeeded")]
        public Input<bool>? IsSeeded { get; set; }

        /// <summary>
        /// The OCID of the parent report definition.
        /// </summary>
        [Input("parentId")]
        public Input<string>? ParentId { get; set; }

        /// <summary>
        /// The time span for the records in the report to be scheduled. &lt;period-value&gt;&lt;period&gt; Allowed period strings - "H","D","M","Y" Each of the above fields potentially introduce constraints. A workRequest is created only when period-value satisfies all the constraints. Constraints introduced: 1. period = H (The allowed range for period-value is [1, 23]) 2. period = D (The allowed range for period-value is [1, 30]) 3. period = M (The allowed range for period-value is [1, 11]) 4. period = Y (The minimum period-value is 1)
        /// </summary>
        [Input("recordTimeSpan")]
        public Input<string>? RecordTimeSpan { get; set; }

        /// <summary>
        /// The schedule to generate the report periodically in the specified format: &lt;version-string&gt;;&lt;version-specific-schedule&gt;
        /// </summary>
        [Input("schedule")]
        public Input<string>? Schedule { get; set; }

        /// <summary>
        /// The OCID of the compartment in which the scheduled resource will be created.
        /// </summary>
        [Input("scheduledReportCompartmentId")]
        public Input<string>? ScheduledReportCompartmentId { get; set; }

        /// <summary>
        /// Specifies the format of the report ( either .xls or .pdf )
        /// </summary>
        [Input("scheduledReportMimeType")]
        public Input<string>? ScheduledReportMimeType { get; set; }

        /// <summary>
        /// The name of the report to be scheduled.
        /// </summary>
        [Input("scheduledReportName")]
        public Input<string>? ScheduledReportName { get; set; }

        /// <summary>
        /// Specifies the limit on the number of rows in the report.
        /// </summary>
        [Input("scheduledReportRowLimit")]
        public Input<int>? ScheduledReportRowLimit { get; set; }

        /// <summary>
        /// (Updatable) Additional scim filters used to get the specific summary.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("scimFilter")]
        public Input<string>? ScimFilter { get; set; }

        /// <summary>
        /// The current state of the report.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("summaries")]
        private InputList<Inputs.ReportDefinitionSummaryGetArgs>? _summaries;

        /// <summary>
        /// (Updatable) An array of report summary objects in the order (left to right)  displayed in the report.  A  report summary object stores all information about summary of report to be displayed, including the name displayed on UI, the display order, corresponding group by and count of values, summary visibility (if the summary is visible to user).
        /// </summary>
        public InputList<Inputs.ReportDefinitionSummaryGetArgs> Summaries
        {
            get => _summaries ?? (_summaries = new InputList<Inputs.ReportDefinitionSummaryGetArgs>());
            set => _summaries = value;
        }

        [Input("systemTags")]
        private InputMap<object>? _systemTags;

        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public InputMap<object> SystemTags
        {
            get => _systemTags ?? (_systemTags = new InputMap<object>());
            set => _systemTags = value;
        }

        /// <summary>
        /// Specifies the date and time the report definition was created.
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The date and time the report definition was updated.
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        public ReportDefinitionState()
        {
        }
        public static new ReportDefinitionState Empty => new ReportDefinitionState();
    }
}
