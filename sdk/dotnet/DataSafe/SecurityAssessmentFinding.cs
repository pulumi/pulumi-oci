// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe
{
    /// <summary>
    /// This resource provides the Security Assessment Finding resource in Oracle Cloud Infrastructure Data Safe service.
    /// 
    ///   Patches one or more findings in the specified template baseline type security assessment. Use it to modify max allowed risk level in template baseline.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testSecurityAssessmentFinding = new Oci.DataSafe.SecurityAssessmentFinding("test_security_assessment_finding", new()
    ///     {
    ///         SecurityAssessmentId = testSecurityAssessment.Id,
    ///         PatchOperations = new[]
    ///         {
    ///             new Oci.DataSafe.Inputs.SecurityAssessmentFindingPatchOperationArgs
    ///             {
    ///                 Operation = securityAssessmentFindingPatchOperationsOperation,
    ///                 Selection = securityAssessmentFindingPatchOperationsSelection,
    ///                 Value = securityAssessmentFindingPatchOperationsValue,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// SecurityAssessmentFindings can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:DataSafe/securityAssessmentFinding:SecurityAssessmentFinding test_security_assessment_finding "securityAssessments/{securityAssessmentId}/findings"
    /// ```
    /// </summary>
    [OciResourceType("oci:DataSafe/securityAssessmentFinding:SecurityAssessmentFinding")]
    public partial class SecurityAssessmentFinding : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The OCID of the assessment that generated this finding.
        /// </summary>
        [Output("assessmentId")]
        public Output<string> AssessmentId { get; private set; } = null!;

        /// <summary>
        /// The category to which the finding belongs to.
        /// </summary>
        [Output("category")]
        public Output<string> Category { get; private set; } = null!;

        /// <summary>
        /// The details of the finding. Provides detailed information to explain the finding summary, typically results from the assessed database, followed by any recommendations for changes.
        /// </summary>
        [Output("details")]
        public Output<ImmutableArray<string>> Details { get; private set; } = null!;

        /// <summary>
        /// Determines if this risk level has changed on the target database since the last time 'severity' was modified by user.
        /// </summary>
        [Output("hasTargetDbRiskLevelChanged")]
        public Output<bool> HasTargetDbRiskLevelChanged { get; private set; } = null!;

        /// <summary>
        /// Determines if this risk level was modified by user.
        /// </summary>
        [Output("isRiskModified")]
        public Output<bool> IsRiskModified { get; private set; } = null!;

        /// <summary>
        /// Indicates whether a given finding is marked as topFinding or not.
        /// </summary>
        [Output("isTopFinding")]
        public Output<bool> IsTopFinding { get; private set; } = null!;

        /// <summary>
        /// User provided reason for accepting or modifying this finding if they choose to do so.
        /// </summary>
        [Output("justification")]
        public Output<string> Justification { get; private set; } = null!;

        /// <summary>
        /// The unique finding key. This is a system-generated identifier. To get the finding key for a finding, use ListFindings.
        /// </summary>
        [Output("key")]
        public Output<string> Key { get; private set; } = null!;

        /// <summary>
        /// Details about the current state of the finding.
        /// </summary>
        [Output("lifecycleDetails")]
        public Output<string> LifecycleDetails { get; private set; } = null!;

        /// <summary>
        /// Provides a recommended approach to take to remediate the finding reported.
        /// </summary>
        [Output("oneline")]
        public Output<string> Oneline { get; private set; } = null!;

        /// <summary>
        /// The severity of the finding as determined by security assessment. This cannot be modified by user.
        /// </summary>
        [Output("oracleDefinedSeverity")]
        public Output<string> OracleDefinedSeverity { get; private set; } = null!;

        /// <summary>
        /// (Updatable)
        /// </summary>
        [Output("patchOperations")]
        public Output<ImmutableArray<Outputs.SecurityAssessmentFindingPatchOperation>> PatchOperations { get; private set; } = null!;

        /// <summary>
        /// Provides information on whether the finding is related to a CIS Oracle Database Benchmark recommendation, a STIG rule, or a GDPR Article/Recital.
        /// </summary>
        [Output("references")]
        public Output<ImmutableArray<Outputs.SecurityAssessmentFindingReference>> References { get; private set; } = null!;

        /// <summary>
        /// The explanation of the issue in this finding. It explains the reason for the rule and, if a risk is reported, it may also explain the recommended actions for remediation.
        /// </summary>
        [Output("remarks")]
        public Output<string> Remarks { get; private set; } = null!;

        /// <summary>
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("securityAssessmentId")]
        public Output<string> SecurityAssessmentId { get; private set; } = null!;

        /// <summary>
        /// The severity of the finding as determined by security assessment and is same as oracleDefinedSeverity, unless modified by user.
        /// </summary>
        [Output("severity")]
        public Output<string> Severity { get; private set; } = null!;

        /// <summary>
        /// The current state of the finding.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The brief summary of the finding. When the finding is informational, the summary typically reports only the number of data elements that were examined.
        /// </summary>
        [Output("summary")]
        public Output<string> Summary { get; private set; } = null!;

        /// <summary>
        /// The OCID of the target database.
        /// </summary>
        [Output("targetId")]
        public Output<string> TargetId { get; private set; } = null!;

        /// <summary>
        /// The date and time the risk level of finding was last updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;

        /// <summary>
        /// The time until which the change in severity(deferred / modified) of this finding is valid.
        /// </summary>
        [Output("timeValidUntil")]
        public Output<string> TimeValidUntil { get; private set; } = null!;

        /// <summary>
        /// The short title for the finding.
        /// </summary>
        [Output("title")]
        public Output<string> Title { get; private set; } = null!;


        /// <summary>
        /// Create a SecurityAssessmentFinding resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SecurityAssessmentFinding(string name, SecurityAssessmentFindingArgs args, CustomResourceOptions? options = null)
            : base("oci:DataSafe/securityAssessmentFinding:SecurityAssessmentFinding", name, args ?? new SecurityAssessmentFindingArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SecurityAssessmentFinding(string name, Input<string> id, SecurityAssessmentFindingState? state = null, CustomResourceOptions? options = null)
            : base("oci:DataSafe/securityAssessmentFinding:SecurityAssessmentFinding", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SecurityAssessmentFinding resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SecurityAssessmentFinding Get(string name, Input<string> id, SecurityAssessmentFindingState? state = null, CustomResourceOptions? options = null)
        {
            return new SecurityAssessmentFinding(name, id, state, options);
        }
    }

    public sealed class SecurityAssessmentFindingArgs : global::Pulumi.ResourceArgs
    {
        [Input("patchOperations")]
        private InputList<Inputs.SecurityAssessmentFindingPatchOperationArgs>? _patchOperations;

        /// <summary>
        /// (Updatable)
        /// </summary>
        public InputList<Inputs.SecurityAssessmentFindingPatchOperationArgs> PatchOperations
        {
            get => _patchOperations ?? (_patchOperations = new InputList<Inputs.SecurityAssessmentFindingPatchOperationArgs>());
            set => _patchOperations = value;
        }

        /// <summary>
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("securityAssessmentId", required: true)]
        public Input<string> SecurityAssessmentId { get; set; } = null!;

        public SecurityAssessmentFindingArgs()
        {
        }
        public static new SecurityAssessmentFindingArgs Empty => new SecurityAssessmentFindingArgs();
    }

    public sealed class SecurityAssessmentFindingState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The OCID of the assessment that generated this finding.
        /// </summary>
        [Input("assessmentId")]
        public Input<string>? AssessmentId { get; set; }

        /// <summary>
        /// The category to which the finding belongs to.
        /// </summary>
        [Input("category")]
        public Input<string>? Category { get; set; }

        [Input("details")]
        private InputList<string>? _details;

        /// <summary>
        /// The details of the finding. Provides detailed information to explain the finding summary, typically results from the assessed database, followed by any recommendations for changes.
        /// </summary>
        public InputList<string> Details
        {
            get => _details ?? (_details = new InputList<string>());
            set => _details = value;
        }

        /// <summary>
        /// Determines if this risk level has changed on the target database since the last time 'severity' was modified by user.
        /// </summary>
        [Input("hasTargetDbRiskLevelChanged")]
        public Input<bool>? HasTargetDbRiskLevelChanged { get; set; }

        /// <summary>
        /// Determines if this risk level was modified by user.
        /// </summary>
        [Input("isRiskModified")]
        public Input<bool>? IsRiskModified { get; set; }

        /// <summary>
        /// Indicates whether a given finding is marked as topFinding or not.
        /// </summary>
        [Input("isTopFinding")]
        public Input<bool>? IsTopFinding { get; set; }

        /// <summary>
        /// User provided reason for accepting or modifying this finding if they choose to do so.
        /// </summary>
        [Input("justification")]
        public Input<string>? Justification { get; set; }

        /// <summary>
        /// The unique finding key. This is a system-generated identifier. To get the finding key for a finding, use ListFindings.
        /// </summary>
        [Input("key")]
        public Input<string>? Key { get; set; }

        /// <summary>
        /// Details about the current state of the finding.
        /// </summary>
        [Input("lifecycleDetails")]
        public Input<string>? LifecycleDetails { get; set; }

        /// <summary>
        /// Provides a recommended approach to take to remediate the finding reported.
        /// </summary>
        [Input("oneline")]
        public Input<string>? Oneline { get; set; }

        /// <summary>
        /// The severity of the finding as determined by security assessment. This cannot be modified by user.
        /// </summary>
        [Input("oracleDefinedSeverity")]
        public Input<string>? OracleDefinedSeverity { get; set; }

        [Input("patchOperations")]
        private InputList<Inputs.SecurityAssessmentFindingPatchOperationGetArgs>? _patchOperations;

        /// <summary>
        /// (Updatable)
        /// </summary>
        public InputList<Inputs.SecurityAssessmentFindingPatchOperationGetArgs> PatchOperations
        {
            get => _patchOperations ?? (_patchOperations = new InputList<Inputs.SecurityAssessmentFindingPatchOperationGetArgs>());
            set => _patchOperations = value;
        }

        [Input("references")]
        private InputList<Inputs.SecurityAssessmentFindingReferenceGetArgs>? _references;

        /// <summary>
        /// Provides information on whether the finding is related to a CIS Oracle Database Benchmark recommendation, a STIG rule, or a GDPR Article/Recital.
        /// </summary>
        public InputList<Inputs.SecurityAssessmentFindingReferenceGetArgs> References
        {
            get => _references ?? (_references = new InputList<Inputs.SecurityAssessmentFindingReferenceGetArgs>());
            set => _references = value;
        }

        /// <summary>
        /// The explanation of the issue in this finding. It explains the reason for the rule and, if a risk is reported, it may also explain the recommended actions for remediation.
        /// </summary>
        [Input("remarks")]
        public Input<string>? Remarks { get; set; }

        /// <summary>
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("securityAssessmentId")]
        public Input<string>? SecurityAssessmentId { get; set; }

        /// <summary>
        /// The severity of the finding as determined by security assessment and is same as oracleDefinedSeverity, unless modified by user.
        /// </summary>
        [Input("severity")]
        public Input<string>? Severity { get; set; }

        /// <summary>
        /// The current state of the finding.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The brief summary of the finding. When the finding is informational, the summary typically reports only the number of data elements that were examined.
        /// </summary>
        [Input("summary")]
        public Input<string>? Summary { get; set; }

        /// <summary>
        /// The OCID of the target database.
        /// </summary>
        [Input("targetId")]
        public Input<string>? TargetId { get; set; }

        /// <summary>
        /// The date and time the risk level of finding was last updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        /// <summary>
        /// The time until which the change in severity(deferred / modified) of this finding is valid.
        /// </summary>
        [Input("timeValidUntil")]
        public Input<string>? TimeValidUntil { get; set; }

        /// <summary>
        /// The short title for the finding.
        /// </summary>
        [Input("title")]
        public Input<string>? Title { get; set; }

        public SecurityAssessmentFindingState()
        {
        }
        public static new SecurityAssessmentFindingState Empty => new SecurityAssessmentFindingState();
    }
}
