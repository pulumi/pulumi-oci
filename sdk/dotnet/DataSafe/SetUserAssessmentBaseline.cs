// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe
{
    /// <summary>
    /// This resource provides the Set User Assessment Baseline resource in Oracle Cloud Infrastructure Data Safe service.
    /// 
    /// Sets the saved user assessment as the baseline in the compartment where the specified assessment resides. The user assessment needs to be of type 'SAVED'.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testSetUserAssessmentBaseline = new Oci.DataSafe.SetUserAssessmentBaseline("testSetUserAssessmentBaseline", new()
    ///     {
    ///         UserAssessmentId = oci_data_safe_user_assessment.Test_user_assessment.Id,
    ///         AssessmentIds = @var.Set_user_assessment_baseline_assessment_ids,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// SetUserAssessmentBaseline can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:DataSafe/setUserAssessmentBaseline:SetUserAssessmentBaseline test_set_user_assessment_baseline "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:DataSafe/setUserAssessmentBaseline:SetUserAssessmentBaseline")]
    public partial class SetUserAssessmentBaseline : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The list of OCIDs for the user assessments that need to be updated while setting the baseline.
        /// </summary>
        [Output("assessmentIds")]
        public Output<ImmutableArray<string>> AssessmentIds { get; private set; } = null!;

        /// <summary>
        /// The OCID of the user assessment.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("userAssessmentId")]
        public Output<string> UserAssessmentId { get; private set; } = null!;


        /// <summary>
        /// Create a SetUserAssessmentBaseline resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SetUserAssessmentBaseline(string name, SetUserAssessmentBaselineArgs args, CustomResourceOptions? options = null)
            : base("oci:DataSafe/setUserAssessmentBaseline:SetUserAssessmentBaseline", name, args ?? new SetUserAssessmentBaselineArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SetUserAssessmentBaseline(string name, Input<string> id, SetUserAssessmentBaselineState? state = null, CustomResourceOptions? options = null)
            : base("oci:DataSafe/setUserAssessmentBaseline:SetUserAssessmentBaseline", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SetUserAssessmentBaseline resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SetUserAssessmentBaseline Get(string name, Input<string> id, SetUserAssessmentBaselineState? state = null, CustomResourceOptions? options = null)
        {
            return new SetUserAssessmentBaseline(name, id, state, options);
        }
    }

    public sealed class SetUserAssessmentBaselineArgs : global::Pulumi.ResourceArgs
    {
        [Input("assessmentIds")]
        private InputList<string>? _assessmentIds;

        /// <summary>
        /// The list of OCIDs for the user assessments that need to be updated while setting the baseline.
        /// </summary>
        public InputList<string> AssessmentIds
        {
            get => _assessmentIds ?? (_assessmentIds = new InputList<string>());
            set => _assessmentIds = value;
        }

        /// <summary>
        /// The OCID of the user assessment.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("userAssessmentId", required: true)]
        public Input<string> UserAssessmentId { get; set; } = null!;

        public SetUserAssessmentBaselineArgs()
        {
        }
        public static new SetUserAssessmentBaselineArgs Empty => new SetUserAssessmentBaselineArgs();
    }

    public sealed class SetUserAssessmentBaselineState : global::Pulumi.ResourceArgs
    {
        [Input("assessmentIds")]
        private InputList<string>? _assessmentIds;

        /// <summary>
        /// The list of OCIDs for the user assessments that need to be updated while setting the baseline.
        /// </summary>
        public InputList<string> AssessmentIds
        {
            get => _assessmentIds ?? (_assessmentIds = new InputList<string>());
            set => _assessmentIds = value;
        }

        /// <summary>
        /// The OCID of the user assessment.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("userAssessmentId")]
        public Input<string>? UserAssessmentId { get; set; }

        public SetUserAssessmentBaselineState()
        {
        }
        public static new SetUserAssessmentBaselineState Empty => new SetUserAssessmentBaselineState();
    }
}
