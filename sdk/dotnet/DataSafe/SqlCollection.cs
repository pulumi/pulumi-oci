// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe
{
    /// <summary>
    /// This resource provides the Sql Collection resource in Oracle Cloud Infrastructure Data Safe service.
    /// 
    /// Creates a new SQL collection resource.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testSqlCollection = new Oci.DataSafe.SqlCollection("test_sql_collection", new()
    ///     {
    ///         CompartmentId = compartmentId,
    ///         DbUserName = testUser.Name,
    ///         TargetId = testTarget.Id,
    ///         DefinedTags = 
    ///         {
    ///             { "Operations.CostCenter", "42" },
    ///         },
    ///         Description = sqlCollectionDescription,
    ///         DisplayName = sqlCollectionDisplayName,
    ///         FreeformTags = 
    ///         {
    ///             { "Department", "Finance" },
    ///         },
    ///         SqlLevel = sqlCollectionSqlLevel,
    ///         Status = sqlCollectionStatus,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// SqlCollections can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:DataSafe/sqlCollection:SqlCollection test_sql_collection "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:DataSafe/sqlCollection:SqlCollection")]
    public partial class SqlCollection : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) The OCID of the compartment containing the SQL collection.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// The database user name.
        /// </summary>
        [Output("dbUserName")]
        public Output<string> DbUserName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, string>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The description of the SQL collection.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The display name of the SQL collection. The name does not have to be unique, and it is changeable.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, string>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) An optional property when incremented triggers Generate Sql Firewall Policy. Could be set to any integer value.
        /// </summary>
        [Output("generateSqlFirewallPolicyTrigger")]
        public Output<bool?> GenerateSqlFirewallPolicyTrigger { get; private set; } = null!;

        /// <summary>
        /// Details about the current state of the SQL collection in Data Safe.
        /// </summary>
        [Output("lifecycleDetails")]
        public Output<string> LifecycleDetails { get; private set; } = null!;

        /// <summary>
        /// (Updatable) An optional property when incremented triggers Purge Logs. Could be set to any integer value.
        /// </summary>
        [Output("purgeLogsTrigger")]
        public Output<bool?> PurgeLogsTrigger { get; private set; } = null!;

        /// <summary>
        /// (Updatable) An optional property when incremented triggers Refresh Log Insights. Could be set to any integer value.
        /// </summary>
        [Output("refreshLogInsightsTrigger")]
        public Output<bool?> RefreshLogInsightsTrigger { get; private set; } = null!;

        /// <summary>
        /// Specifies the level of SQL that will be collected. USER_ISSUED_SQL - User issued SQL statements only. ALL_SQL - Includes all SQL statements including SQL statement issued inside PL/SQL units.
        /// </summary>
        [Output("sqlLevel")]
        public Output<string> SqlLevel { get; private set; } = null!;

        /// <summary>
        /// (Updatable) An optional property when incremented triggers Start. Could be set to any integer value.
        /// </summary>
        [Output("startTrigger")]
        public Output<bool?> StartTrigger { get; private set; } = null!;

        /// <summary>
        /// The current state of the SQL collection.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// Specifies if the SqlCollection has to be started after creation. Enabled indicates that the SqlCollection will be started after creation.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// (Updatable) An optional property when incremented triggers Stop. Could be set to any integer value.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("stopTrigger")]
        public Output<bool?> StopTrigger { get; private set; } = null!;

        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        [Output("systemTags")]
        public Output<ImmutableDictionary<string, string>> SystemTags { get; private set; } = null!;

        /// <summary>
        /// The OCID of the target corresponding to the security policy deployment.
        /// </summary>
        [Output("targetId")]
        public Output<string> TargetId { get; private set; } = null!;

        /// <summary>
        /// The time that the SQL collection was created, in the format defined by RFC3339.
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The timestamp of the most recent SqlCollection start operation, in the format defined by RFC3339.
        /// </summary>
        [Output("timeLastStarted")]
        public Output<string> TimeLastStarted { get; private set; } = null!;

        /// <summary>
        /// The timestamp of the most recent SqlCollection stop operation, in the format defined by RFC3339.
        /// </summary>
        [Output("timeLastStopped")]
        public Output<string> TimeLastStopped { get; private set; } = null!;

        /// <summary>
        /// The last date and time the SQL collection was updated, in the format defined by RFC3339.
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;


        /// <summary>
        /// Create a SqlCollection resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SqlCollection(string name, SqlCollectionArgs args, CustomResourceOptions? options = null)
            : base("oci:DataSafe/sqlCollection:SqlCollection", name, args ?? new SqlCollectionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SqlCollection(string name, Input<string> id, SqlCollectionState? state = null, CustomResourceOptions? options = null)
            : base("oci:DataSafe/sqlCollection:SqlCollection", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SqlCollection resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SqlCollection Get(string name, Input<string> id, SqlCollectionState? state = null, CustomResourceOptions? options = null)
        {
            return new SqlCollection(name, id, state, options);
        }
    }

    public sealed class SqlCollectionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The OCID of the compartment containing the SQL collection.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// The database user name.
        /// </summary>
        [Input("dbUserName", required: true)]
        public Input<string> DbUserName { get; set; } = null!;

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) The description of the SQL collection.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) The display name of the SQL collection. The name does not have to be unique, and it is changeable.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) An optional property when incremented triggers Generate Sql Firewall Policy. Could be set to any integer value.
        /// </summary>
        [Input("generateSqlFirewallPolicyTrigger")]
        public Input<bool>? GenerateSqlFirewallPolicyTrigger { get; set; }

        /// <summary>
        /// (Updatable) An optional property when incremented triggers Purge Logs. Could be set to any integer value.
        /// </summary>
        [Input("purgeLogsTrigger")]
        public Input<bool>? PurgeLogsTrigger { get; set; }

        /// <summary>
        /// (Updatable) An optional property when incremented triggers Refresh Log Insights. Could be set to any integer value.
        /// </summary>
        [Input("refreshLogInsightsTrigger")]
        public Input<bool>? RefreshLogInsightsTrigger { get; set; }

        /// <summary>
        /// Specifies the level of SQL that will be collected. USER_ISSUED_SQL - User issued SQL statements only. ALL_SQL - Includes all SQL statements including SQL statement issued inside PL/SQL units.
        /// </summary>
        [Input("sqlLevel")]
        public Input<string>? SqlLevel { get; set; }

        /// <summary>
        /// (Updatable) An optional property when incremented triggers Start. Could be set to any integer value.
        /// </summary>
        [Input("startTrigger")]
        public Input<bool>? StartTrigger { get; set; }

        /// <summary>
        /// Specifies if the SqlCollection has to be started after creation. Enabled indicates that the SqlCollection will be started after creation.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// (Updatable) An optional property when incremented triggers Stop. Could be set to any integer value.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("stopTrigger")]
        public Input<bool>? StopTrigger { get; set; }

        /// <summary>
        /// The OCID of the target corresponding to the security policy deployment.
        /// </summary>
        [Input("targetId", required: true)]
        public Input<string> TargetId { get; set; } = null!;

        public SqlCollectionArgs()
        {
        }
        public static new SqlCollectionArgs Empty => new SqlCollectionArgs();
    }

    public sealed class SqlCollectionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The OCID of the compartment containing the SQL collection.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// The database user name.
        /// </summary>
        [Input("dbUserName")]
        public Input<string>? DbUserName { get; set; }

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) The description of the SQL collection.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) The display name of the SQL collection. The name does not have to be unique, and it is changeable.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) An optional property when incremented triggers Generate Sql Firewall Policy. Could be set to any integer value.
        /// </summary>
        [Input("generateSqlFirewallPolicyTrigger")]
        public Input<bool>? GenerateSqlFirewallPolicyTrigger { get; set; }

        /// <summary>
        /// Details about the current state of the SQL collection in Data Safe.
        /// </summary>
        [Input("lifecycleDetails")]
        public Input<string>? LifecycleDetails { get; set; }

        /// <summary>
        /// (Updatable) An optional property when incremented triggers Purge Logs. Could be set to any integer value.
        /// </summary>
        [Input("purgeLogsTrigger")]
        public Input<bool>? PurgeLogsTrigger { get; set; }

        /// <summary>
        /// (Updatable) An optional property when incremented triggers Refresh Log Insights. Could be set to any integer value.
        /// </summary>
        [Input("refreshLogInsightsTrigger")]
        public Input<bool>? RefreshLogInsightsTrigger { get; set; }

        /// <summary>
        /// Specifies the level of SQL that will be collected. USER_ISSUED_SQL - User issued SQL statements only. ALL_SQL - Includes all SQL statements including SQL statement issued inside PL/SQL units.
        /// </summary>
        [Input("sqlLevel")]
        public Input<string>? SqlLevel { get; set; }

        /// <summary>
        /// (Updatable) An optional property when incremented triggers Start. Could be set to any integer value.
        /// </summary>
        [Input("startTrigger")]
        public Input<bool>? StartTrigger { get; set; }

        /// <summary>
        /// The current state of the SQL collection.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// Specifies if the SqlCollection has to be started after creation. Enabled indicates that the SqlCollection will be started after creation.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// (Updatable) An optional property when incremented triggers Stop. Could be set to any integer value.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("stopTrigger")]
        public Input<bool>? StopTrigger { get; set; }

        [Input("systemTags")]
        private InputMap<string>? _systemTags;

        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public InputMap<string> SystemTags
        {
            get => _systemTags ?? (_systemTags = new InputMap<string>());
            set => _systemTags = value;
        }

        /// <summary>
        /// The OCID of the target corresponding to the security policy deployment.
        /// </summary>
        [Input("targetId")]
        public Input<string>? TargetId { get; set; }

        /// <summary>
        /// The time that the SQL collection was created, in the format defined by RFC3339.
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The timestamp of the most recent SqlCollection start operation, in the format defined by RFC3339.
        /// </summary>
        [Input("timeLastStarted")]
        public Input<string>? TimeLastStarted { get; set; }

        /// <summary>
        /// The timestamp of the most recent SqlCollection stop operation, in the format defined by RFC3339.
        /// </summary>
        [Input("timeLastStopped")]
        public Input<string>? TimeLastStopped { get; set; }

        /// <summary>
        /// The last date and time the SQL collection was updated, in the format defined by RFC3339.
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        public SqlCollectionState()
        {
        }
        public static new SqlCollectionState Empty => new SqlCollectionState();
    }
}
