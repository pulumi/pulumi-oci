// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe
{
    /// <summary>
    /// This resource provides the Target Database resource in Oracle Cloud Infrastructure Data Safe service.
    /// 
    /// Registers the specified database with Data Safe and creates a Data Safe target database in the Data Safe Console.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testTargetDatabase = new Oci.DataSafe.TargetDatabase("testTargetDatabase", new()
    ///     {
    ///         CompartmentId = @var.Compartment_id,
    ///         DatabaseDetails = new Oci.DataSafe.Inputs.TargetDatabaseDatabaseDetailsArgs
    ///         {
    ///             DatabaseType = @var.Target_database_database_details_database_type,
    ///             InfrastructureType = @var.Target_database_database_details_infrastructure_type,
    ///             AutonomousDatabaseId = oci_database_autonomous_database.Test_autonomous_database.Id,
    ///             DbSystemId = oci_database_db_system.Test_db_system.Id,
    ///             InstanceId = oci_core_instance.Test_instance.Id,
    ///             IpAddresses = @var.Target_database_database_details_ip_addresses,
    ///             ListenerPort = @var.Target_database_database_details_listener_port,
    ///             ServiceName = oci_core_service.Test_service.Name,
    ///             VmClusterId = oci_database_vm_cluster.Test_vm_cluster.Id,
    ///         },
    ///         ConnectionOption = new Oci.DataSafe.Inputs.TargetDatabaseConnectionOptionArgs
    ///         {
    ///             ConnectionType = @var.Target_database_connection_option_connection_type,
    ///             DatasafePrivateEndpointId = oci_dataflow_private_endpoint.Test_private_endpoint.Id,
    ///             OnPremConnectorId = oci_data_safe_on_prem_connector.Test_on_prem_connector.Id,
    ///         },
    ///         Credentials = new Oci.DataSafe.Inputs.TargetDatabaseCredentialsArgs
    ///         {
    ///             Password = @var.Target_database_credentials_password,
    ///             UserName = oci_identity_user.Test_user.Name,
    ///         },
    ///         DefinedTags = 
    ///         {
    ///             { "Operations.CostCenter", "42" },
    ///         },
    ///         Description = @var.Target_database_description,
    ///         DisplayName = @var.Target_database_display_name,
    ///         FreeformTags = 
    ///         {
    ///             { "Department", "Finance" },
    ///         },
    ///         TlsConfig = new Oci.DataSafe.Inputs.TargetDatabaseTlsConfigArgs
    ///         {
    ///             Status = @var.Target_database_tls_config_status,
    ///             CertificateStoreType = @var.Target_database_tls_config_certificate_store_type,
    ///             KeyStoreContent = @var.Target_database_tls_config_key_store_content,
    ///             StorePassword = @var.Target_database_tls_config_store_password,
    ///             TrustStoreContent = @var.Target_database_tls_config_trust_store_content,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// TargetDatabases can be imported using the `id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import oci:DataSafe/targetDatabase:TargetDatabase test_target_database "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:DataSafe/targetDatabase:TargetDatabase")]
    public partial class TargetDatabase : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The OCIDs of associated resources like database, Data Safe private endpoint etc.
        /// </summary>
        [Output("associatedResourceIds")]
        public Output<ImmutableArray<string>> AssociatedResourceIds { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The OCID of the compartment in which to create the Data Safe target database.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Types of connection supported by Data Safe.
        /// </summary>
        [Output("connectionOption")]
        public Output<Outputs.TargetDatabaseConnectionOption?> ConnectionOption { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The database credentials required for Data Safe to connect to the database.
        /// </summary>
        [Output("credentials")]
        public Output<Outputs.TargetDatabaseCredentials?> Credentials { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Details of the database for the registration in Data Safe.
        /// </summary>
        [Output("databaseDetails")]
        public Output<Outputs.TargetDatabaseDatabaseDetails> DatabaseDetails { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, object>?> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The description of the target database in Data Safe.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The display name of the target database in Data Safe. The name is modifiable and does not need to be unique.
        /// </summary>
        [Output("displayName")]
        public Output<string?> DisplayName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, object>?> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// Details about the current state of the target database in Data Safe.
        /// </summary>
        [Output("lifecycleDetails")]
        public Output<string?> LifecycleDetails { get; private set; } = null!;

        /// <summary>
        /// The current state of the target database in Data Safe.
        /// </summary>
        [Output("state")]
        public Output<string?> State { get; private set; } = null!;

        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        [Output("systemTags")]
        public Output<ImmutableDictionary<string, object>?> SystemTags { get; private set; } = null!;

        /// <summary>
        /// The date and time the database was registered in Data Safe and created as a target database in Data Safe.
        /// </summary>
        [Output("timeCreated")]
        public Output<string?> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The date and time of the target database update in Data Safe.
        /// </summary>
        [Output("timeUpdated")]
        public Output<string?> TimeUpdated { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The details required to establish a TLS enabled connection.
        /// </summary>
        [Output("tlsConfig")]
        public Output<Outputs.TargetDatabaseTlsConfig?> TlsConfig { get; private set; } = null!;


        /// <summary>
        /// Create a TargetDatabase resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TargetDatabase(string name, TargetDatabaseArgs args, CustomResourceOptions? options = null)
            : base("oci:DataSafe/targetDatabase:TargetDatabase", name, args ?? new TargetDatabaseArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TargetDatabase(string name, Input<string> id, TargetDatabaseState? state = null, CustomResourceOptions? options = null)
            : base("oci:DataSafe/targetDatabase:TargetDatabase", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TargetDatabase resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TargetDatabase Get(string name, Input<string> id, TargetDatabaseState? state = null, CustomResourceOptions? options = null)
        {
            return new TargetDatabase(name, id, state, options);
        }
    }

    public sealed class TargetDatabaseArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The OCID of the compartment in which to create the Data Safe target database.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// (Updatable) Types of connection supported by Data Safe.
        /// </summary>
        [Input("connectionOption")]
        public Input<Inputs.TargetDatabaseConnectionOptionArgs>? ConnectionOption { get; set; }

        /// <summary>
        /// (Updatable) The database credentials required for Data Safe to connect to the database.
        /// </summary>
        [Input("credentials")]
        public Input<Inputs.TargetDatabaseCredentialsArgs>? Credentials { get; set; }

        /// <summary>
        /// (Updatable) Details of the database for the registration in Data Safe.
        /// </summary>
        [Input("databaseDetails", required: true)]
        public Input<Inputs.TargetDatabaseDatabaseDetailsArgs> DatabaseDetails { get; set; } = null!;

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) The description of the target database in Data Safe.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) The display name of the target database in Data Safe. The name is modifiable and does not need to be unique.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) The details required to establish a TLS enabled connection.
        /// </summary>
        [Input("tlsConfig")]
        public Input<Inputs.TargetDatabaseTlsConfigArgs>? TlsConfig { get; set; }

        public TargetDatabaseArgs()
        {
        }
        public static new TargetDatabaseArgs Empty => new TargetDatabaseArgs();
    }

    public sealed class TargetDatabaseState : global::Pulumi.ResourceArgs
    {
        [Input("associatedResourceIds")]
        private InputList<string>? _associatedResourceIds;

        /// <summary>
        /// The OCIDs of associated resources like database, Data Safe private endpoint etc.
        /// </summary>
        public InputList<string> AssociatedResourceIds
        {
            get => _associatedResourceIds ?? (_associatedResourceIds = new InputList<string>());
            set => _associatedResourceIds = value;
        }

        /// <summary>
        /// (Updatable) The OCID of the compartment in which to create the Data Safe target database.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// (Updatable) Types of connection supported by Data Safe.
        /// </summary>
        [Input("connectionOption")]
        public Input<Inputs.TargetDatabaseConnectionOptionGetArgs>? ConnectionOption { get; set; }

        /// <summary>
        /// (Updatable) The database credentials required for Data Safe to connect to the database.
        /// </summary>
        [Input("credentials")]
        public Input<Inputs.TargetDatabaseCredentialsGetArgs>? Credentials { get; set; }

        /// <summary>
        /// (Updatable) Details of the database for the registration in Data Safe.
        /// </summary>
        [Input("databaseDetails")]
        public Input<Inputs.TargetDatabaseDatabaseDetailsGetArgs>? DatabaseDetails { get; set; }

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) The description of the target database in Data Safe.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) The display name of the target database in Data Safe. The name is modifiable and does not need to be unique.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// Details about the current state of the target database in Data Safe.
        /// </summary>
        [Input("lifecycleDetails")]
        public Input<string>? LifecycleDetails { get; set; }

        /// <summary>
        /// The current state of the target database in Data Safe.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("systemTags")]
        private InputMap<object>? _systemTags;

        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public InputMap<object> SystemTags
        {
            get => _systemTags ?? (_systemTags = new InputMap<object>());
            set => _systemTags = value;
        }

        /// <summary>
        /// The date and time the database was registered in Data Safe and created as a target database in Data Safe.
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The date and time of the target database update in Data Safe.
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        /// <summary>
        /// (Updatable) The details required to establish a TLS enabled connection.
        /// </summary>
        [Input("tlsConfig")]
        public Input<Inputs.TargetDatabaseTlsConfigGetArgs>? TlsConfig { get; set; }

        public TargetDatabaseState()
        {
        }
        public static new TargetDatabaseState Empty => new TargetDatabaseState();
    }
}
