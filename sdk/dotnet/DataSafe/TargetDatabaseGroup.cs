// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe
{
    /// <summary>
    /// This resource provides the Target Database Group resource in Oracle Cloud Infrastructure Data Safe service.
    /// 
    /// Creates a new target database group.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testTargetDatabaseGroup = new Oci.DataSafe.TargetDatabaseGroup("test_target_database_group", new()
    ///     {
    ///         CompartmentId = compartmentId,
    ///         DisplayName = targetDatabaseGroupDisplayName,
    ///         MatchingCriteria = new Oci.DataSafe.Inputs.TargetDatabaseGroupMatchingCriteriaArgs
    ///         {
    ///             Include = new Oci.DataSafe.Inputs.TargetDatabaseGroupMatchingCriteriaIncludeArgs
    ///             {
    ///                 Compartments = new[]
    ///                 {
    ///                     new Oci.DataSafe.Inputs.TargetDatabaseGroupMatchingCriteriaIncludeCompartmentArgs
    ///                     {
    ///                         Id = targetDatabaseGroupMatchingCriteriaIncludeCompartmentsId,
    ///                         IsIncludeSubtree = targetDatabaseGroupMatchingCriteriaIncludeCompartmentsIsIncludeSubtree,
    ///                     },
    ///                 },
    ///                 DefinedTags = 
    ///                 {
    ///                     { "Operations.CostCenter", "42" },
    ///                 },
    ///                 FreeformTags = 
    ///                 {
    ///                     { "Department", "Finance" },
    ///                 },
    ///                 TargetDatabaseIds = targetDatabaseGroupMatchingCriteriaIncludeTargetDatabaseIds,
    ///             },
    ///             Exclude = new Oci.DataSafe.Inputs.TargetDatabaseGroupMatchingCriteriaExcludeArgs
    ///             {
    ///                 TargetDatabaseIds = targetDatabaseGroupMatchingCriteriaExcludeTargetDatabaseIds,
    ///             },
    ///         },
    ///         DefinedTags = 
    ///         {
    ///             { "Operations.CostCenter", "42" },
    ///         },
    ///         Description = targetDatabaseGroupDescription,
    ///         FreeformTags = 
    ///         {
    ///             { "Department", "Finance" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// TargetDatabaseGroups can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:DataSafe/targetDatabaseGroup:TargetDatabaseGroup test_target_database_group "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:DataSafe/targetDatabaseGroup:TargetDatabaseGroup")]
    public partial class TargetDatabaseGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) The OCID of the compartment to create the target database group.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, string>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Description of the target database group (optional).
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The name of the target database group.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, string>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// Details for the lifecycle status of the target database group.
        /// </summary>
        [Output("lifecycleDetails")]
        public Output<string> LifecycleDetails { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Criteria to either include or exclude target databases from the target database group. These criteria can be based on compartments or tags or a list of target databases. See examples below for more details. Include: Target databases will be added to the target database group if they match at least one of the include criteria. Exclude: Target databases that will be excluded from the target database group (even if they match any of the include criteria).
        /// </summary>
        [Output("matchingCriteria")]
        public Output<Outputs.TargetDatabaseGroupMatchingCriteria> MatchingCriteria { get; private set; } = null!;

        /// <summary>
        /// The number of target databases in the specified target database group.
        /// </summary>
        [Output("membershipCount")]
        public Output<int> MembershipCount { get; private set; } = null!;

        /// <summary>
        /// Time when the members of the target database group were last changed, i.e. the list was refreshed, a target database was added or removed.
        /// </summary>
        [Output("membershipUpdateTime")]
        public Output<string> MembershipUpdateTime { get; private set; } = null!;

        /// <summary>
        /// The lifecycle status of the target database group.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        [Output("systemTags")]
        public Output<ImmutableDictionary<string, string>> SystemTags { get; private set; } = null!;

        /// <summary>
        /// Time when the target database group was created.
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// Time when the target database group was last updated.
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;


        /// <summary>
        /// Create a TargetDatabaseGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TargetDatabaseGroup(string name, TargetDatabaseGroupArgs args, CustomResourceOptions? options = null)
            : base("oci:DataSafe/targetDatabaseGroup:TargetDatabaseGroup", name, args ?? new TargetDatabaseGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TargetDatabaseGroup(string name, Input<string> id, TargetDatabaseGroupState? state = null, CustomResourceOptions? options = null)
            : base("oci:DataSafe/targetDatabaseGroup:TargetDatabaseGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TargetDatabaseGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TargetDatabaseGroup Get(string name, Input<string> id, TargetDatabaseGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new TargetDatabaseGroup(name, id, state, options);
        }
    }

    public sealed class TargetDatabaseGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The OCID of the compartment to create the target database group.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) Description of the target database group (optional).
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) The name of the target database group.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) Criteria to either include or exclude target databases from the target database group. These criteria can be based on compartments or tags or a list of target databases. See examples below for more details. Include: Target databases will be added to the target database group if they match at least one of the include criteria. Exclude: Target databases that will be excluded from the target database group (even if they match any of the include criteria).
        /// </summary>
        [Input("matchingCriteria", required: true)]
        public Input<Inputs.TargetDatabaseGroupMatchingCriteriaArgs> MatchingCriteria { get; set; } = null!;

        public TargetDatabaseGroupArgs()
        {
        }
        public static new TargetDatabaseGroupArgs Empty => new TargetDatabaseGroupArgs();
    }

    public sealed class TargetDatabaseGroupState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The OCID of the compartment to create the target database group.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) Description of the target database group (optional).
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) The name of the target database group.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// Details for the lifecycle status of the target database group.
        /// </summary>
        [Input("lifecycleDetails")]
        public Input<string>? LifecycleDetails { get; set; }

        /// <summary>
        /// (Updatable) Criteria to either include or exclude target databases from the target database group. These criteria can be based on compartments or tags or a list of target databases. See examples below for more details. Include: Target databases will be added to the target database group if they match at least one of the include criteria. Exclude: Target databases that will be excluded from the target database group (even if they match any of the include criteria).
        /// </summary>
        [Input("matchingCriteria")]
        public Input<Inputs.TargetDatabaseGroupMatchingCriteriaGetArgs>? MatchingCriteria { get; set; }

        /// <summary>
        /// The number of target databases in the specified target database group.
        /// </summary>
        [Input("membershipCount")]
        public Input<int>? MembershipCount { get; set; }

        /// <summary>
        /// Time when the members of the target database group were last changed, i.e. the list was refreshed, a target database was added or removed.
        /// </summary>
        [Input("membershipUpdateTime")]
        public Input<string>? MembershipUpdateTime { get; set; }

        /// <summary>
        /// The lifecycle status of the target database group.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("systemTags")]
        private InputMap<string>? _systemTags;

        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public InputMap<string> SystemTags
        {
            get => _systemTags ?? (_systemTags = new InputMap<string>());
            set => _systemTags = value;
        }

        /// <summary>
        /// Time when the target database group was created.
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// Time when the target database group was last updated.
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        public TargetDatabaseGroupState()
        {
        }
        public static new TargetDatabaseGroupState Empty => new TargetDatabaseGroupState();
    }
}
