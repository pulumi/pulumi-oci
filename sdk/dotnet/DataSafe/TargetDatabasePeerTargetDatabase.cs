// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe
{
    /// <summary>
    /// This resource provides the Target Database Peer Target Database resource in Oracle Cloud Infrastructure Data Safe service.
    /// 
    /// Creates the peer target database under the primary target database in Data Safe.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testTargetDatabasePeerTargetDatabase = new Oci.DataSafe.TargetDatabasePeerTargetDatabase("testTargetDatabasePeerTargetDatabase", new()
    ///     {
    ///         DatabaseDetails = new Oci.DataSafe.Inputs.TargetDatabasePeerTargetDatabaseDatabaseDetailsArgs
    ///         {
    ///             DatabaseType = @var.Target_database_peer_target_database_database_details_database_type,
    ///             InfrastructureType = @var.Target_database_peer_target_database_database_details_infrastructure_type,
    ///             AutonomousDatabaseId = oci_database_autonomous_database.Test_autonomous_database.Id,
    ///             DbSystemId = oci_database_db_system.Test_db_system.Id,
    ///             InstanceId = oci_core_instance.Test_instance.Id,
    ///             IpAddresses = @var.Target_database_peer_target_database_database_details_ip_addresses,
    ///             ListenerPort = @var.Target_database_peer_target_database_database_details_listener_port,
    ///             ServiceName = oci_core_service.Test_service.Name,
    ///             VmClusterId = oci_database_vm_cluster.Test_vm_cluster.Id,
    ///         },
    ///         TargetDatabaseId = oci_data_safe_target_database.Test_target_database.Id,
    ///         DataguardAssociationId = oci_certificates_management_association.Test_association.Id,
    ///         Description = @var.Target_database_peer_target_database_description,
    ///         DisplayName = @var.Target_database_peer_target_database_display_name,
    ///         TlsConfig = new Oci.DataSafe.Inputs.TargetDatabasePeerTargetDatabaseTlsConfigArgs
    ///         {
    ///             Status = @var.Target_database_peer_target_database_tls_config_status,
    ///             CertificateStoreType = @var.Target_database_peer_target_database_tls_config_certificate_store_type,
    ///             KeyStoreContent = @var.Target_database_peer_target_database_tls_config_key_store_content,
    ///             StorePassword = @var.Target_database_peer_target_database_tls_config_store_password,
    ///             TrustStoreContent = @var.Target_database_peer_target_database_tls_config_trust_store_content,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// TargetDatabasePeerTargetDatabases can be imported using the `id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import oci:DataSafe/targetDatabasePeerTargetDatabase:TargetDatabasePeerTargetDatabase test_target_database_peer_target_database "targetDatabases/{targetDatabaseId}/peerTargetDatabases/{peerTargetDatabaseId}"
    /// ```
    /// </summary>
    [OciResourceType("oci:DataSafe/targetDatabasePeerTargetDatabase:TargetDatabasePeerTargetDatabase")]
    public partial class TargetDatabasePeerTargetDatabase : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) Details of the database for the registration in Data Safe.
        /// </summary>
        [Output("databaseDetails")]
        public Output<Outputs.TargetDatabasePeerTargetDatabaseDatabaseDetails> DatabaseDetails { get; private set; } = null!;

        /// <summary>
        /// Unique name of the database associated to the peer target database.
        /// </summary>
        [Output("databaseUniqueName")]
        public Output<string> DatabaseUniqueName { get; private set; } = null!;

        /// <summary>
        /// The OCID of the Data Guard Association resource in which the database being registered is considered as peer database to the primary database.
        /// </summary>
        [Output("dataguardAssociationId")]
        public Output<string> DataguardAssociationId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The description of the peer target database in Data Safe.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The display name of the peer target database in Data Safe. The name is modifiable and does not need to be unique.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// The secondary key assigned for the peer target database in Data Safe.
        /// </summary>
        [Output("key")]
        public Output<int> Key { get; private set; } = null!;

        /// <summary>
        /// Details about the current state of the peer target database in Data Safe.
        /// </summary>
        [Output("lifecycleDetails")]
        public Output<string> LifecycleDetails { get; private set; } = null!;

        /// <summary>
        /// Role of the database associated to the peer target database.
        /// </summary>
        [Output("role")]
        public Output<string> Role { get; private set; } = null!;

        /// <summary>
        /// The current state of the peer target database in Data Safe.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The OCID of the Data Safe target database.
        /// </summary>
        [Output("targetDatabaseId")]
        public Output<string> TargetDatabaseId { get; private set; } = null!;

        /// <summary>
        /// The date and time of the peer target database registration in Data Safe.
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The details required to establish a TLS enabled connection.
        /// </summary>
        [Output("tlsConfig")]
        public Output<Outputs.TargetDatabasePeerTargetDatabaseTlsConfig> TlsConfig { get; private set; } = null!;


        /// <summary>
        /// Create a TargetDatabasePeerTargetDatabase resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TargetDatabasePeerTargetDatabase(string name, TargetDatabasePeerTargetDatabaseArgs args, CustomResourceOptions? options = null)
            : base("oci:DataSafe/targetDatabasePeerTargetDatabase:TargetDatabasePeerTargetDatabase", name, args ?? new TargetDatabasePeerTargetDatabaseArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TargetDatabasePeerTargetDatabase(string name, Input<string> id, TargetDatabasePeerTargetDatabaseState? state = null, CustomResourceOptions? options = null)
            : base("oci:DataSafe/targetDatabasePeerTargetDatabase:TargetDatabasePeerTargetDatabase", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TargetDatabasePeerTargetDatabase resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TargetDatabasePeerTargetDatabase Get(string name, Input<string> id, TargetDatabasePeerTargetDatabaseState? state = null, CustomResourceOptions? options = null)
        {
            return new TargetDatabasePeerTargetDatabase(name, id, state, options);
        }
    }

    public sealed class TargetDatabasePeerTargetDatabaseArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) Details of the database for the registration in Data Safe.
        /// </summary>
        [Input("databaseDetails", required: true)]
        public Input<Inputs.TargetDatabasePeerTargetDatabaseDatabaseDetailsArgs> DatabaseDetails { get; set; } = null!;

        /// <summary>
        /// The OCID of the Data Guard Association resource in which the database being registered is considered as peer database to the primary database.
        /// </summary>
        [Input("dataguardAssociationId")]
        public Input<string>? DataguardAssociationId { get; set; }

        /// <summary>
        /// (Updatable) The description of the peer target database in Data Safe.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) The display name of the peer target database in Data Safe. The name is modifiable and does not need to be unique.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// The OCID of the Data Safe target database.
        /// </summary>
        [Input("targetDatabaseId", required: true)]
        public Input<string> TargetDatabaseId { get; set; } = null!;

        /// <summary>
        /// (Updatable) The details required to establish a TLS enabled connection.
        /// </summary>
        [Input("tlsConfig")]
        public Input<Inputs.TargetDatabasePeerTargetDatabaseTlsConfigArgs>? TlsConfig { get; set; }

        public TargetDatabasePeerTargetDatabaseArgs()
        {
        }
        public static new TargetDatabasePeerTargetDatabaseArgs Empty => new TargetDatabasePeerTargetDatabaseArgs();
    }

    public sealed class TargetDatabasePeerTargetDatabaseState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) Details of the database for the registration in Data Safe.
        /// </summary>
        [Input("databaseDetails")]
        public Input<Inputs.TargetDatabasePeerTargetDatabaseDatabaseDetailsGetArgs>? DatabaseDetails { get; set; }

        /// <summary>
        /// Unique name of the database associated to the peer target database.
        /// </summary>
        [Input("databaseUniqueName")]
        public Input<string>? DatabaseUniqueName { get; set; }

        /// <summary>
        /// The OCID of the Data Guard Association resource in which the database being registered is considered as peer database to the primary database.
        /// </summary>
        [Input("dataguardAssociationId")]
        public Input<string>? DataguardAssociationId { get; set; }

        /// <summary>
        /// (Updatable) The description of the peer target database in Data Safe.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) The display name of the peer target database in Data Safe. The name is modifiable and does not need to be unique.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// The secondary key assigned for the peer target database in Data Safe.
        /// </summary>
        [Input("key")]
        public Input<int>? Key { get; set; }

        /// <summary>
        /// Details about the current state of the peer target database in Data Safe.
        /// </summary>
        [Input("lifecycleDetails")]
        public Input<string>? LifecycleDetails { get; set; }

        /// <summary>
        /// Role of the database associated to the peer target database.
        /// </summary>
        [Input("role")]
        public Input<string>? Role { get; set; }

        /// <summary>
        /// The current state of the peer target database in Data Safe.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The OCID of the Data Safe target database.
        /// </summary>
        [Input("targetDatabaseId")]
        public Input<string>? TargetDatabaseId { get; set; }

        /// <summary>
        /// The date and time of the peer target database registration in Data Safe.
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// (Updatable) The details required to establish a TLS enabled connection.
        /// </summary>
        [Input("tlsConfig")]
        public Input<Inputs.TargetDatabasePeerTargetDatabaseTlsConfigGetArgs>? TlsConfig { get; set; }

        public TargetDatabasePeerTargetDatabaseState()
        {
        }
        public static new TargetDatabasePeerTargetDatabaseState Empty => new TargetDatabasePeerTargetDatabaseState();
    }
}
