// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe
{
    /// <summary>
    /// This resource provides the Unified Audit Policy resource in Oracle Cloud Infrastructure Data Safe service.
    /// 
    /// Creates the specified unified audit policy.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testUnifiedAuditPolicy = new Oci.DataSafe.UnifiedAuditPolicy("test_unified_audit_policy", new()
    ///     {
    ///         CompartmentId = compartmentId,
    ///         Conditions = new[]
    ///         {
    ///             new Oci.DataSafe.Inputs.UnifiedAuditPolicyConditionArgs
    ///             {
    ///                 EntitySelection = unifiedAuditPolicyConditionsEntitySelection,
    ///                 EntityType = unifiedAuditPolicyConditionsEntityType,
    ///                 OperationStatus = unifiedAuditPolicyConditionsOperationStatus,
    ///                 AttributeSetId = testAttributeSet.Id,
    ///                 RoleNames = unifiedAuditPolicyConditionsRoleNames,
    ///                 UserNames = unifiedAuditPolicyConditionsUserNames,
    ///             },
    ///         },
    ///         SecurityPolicyId = testSecurityPolicy.Id,
    ///         Status = unifiedAuditPolicyStatus,
    ///         UnifiedAuditPolicyDefinitionId = testUnifiedAuditPolicyDefinition.Id,
    ///         DefinedTags = 
    ///         {
    ///             { "Operations.CostCenter", "42" },
    ///         },
    ///         Description = unifiedAuditPolicyDescription,
    ///         DisplayName = unifiedAuditPolicyDisplayName,
    ///         FreeformTags = 
    ///         {
    ///             { "Department", "Finance" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// UnifiedAuditPolicies can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:DataSafe/unifiedAuditPolicy:UnifiedAuditPolicy test_unified_audit_policy "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:DataSafe/unifiedAuditPolicy:UnifiedAuditPolicy")]
    public partial class UnifiedAuditPolicy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) The OCID of the compartment in which to create the unified audit policy.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Lists the audit policy provisioning conditions.
        /// </summary>
        [Output("conditions")]
        public Output<ImmutableArray<Outputs.UnifiedAuditPolicyCondition>> Conditions { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, string>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The description of the unified audit policy in Data Safe.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The display name of the unified audit policy in Data Safe. The name is modifiable and does not need to be unique.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Indicates on whom the audit policy is enabled.
        /// </summary>
        [Output("enabledEntities")]
        public Output<string> EnabledEntities { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, string>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// Indicates whether the unified audit policy is seeded or not.
        /// </summary>
        [Output("isSeeded")]
        public Output<bool> IsSeeded { get; private set; } = null!;

        /// <summary>
        /// The details of the current state of the unified audit policy in Data Safe.
        /// </summary>
        [Output("lifecycleDetails")]
        public Output<string> LifecycleDetails { get; private set; } = null!;

        /// <summary>
        /// The OCID of the security policy corresponding to the unified audit policy.
        /// </summary>
        [Output("securityPolicyId")]
        public Output<string> SecurityPolicyId { get; private set; } = null!;

        /// <summary>
        /// The current state of the unified audit policy.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Indicates whether the unified audit policy has been enabled or disabled.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        [Output("systemTags")]
        public Output<ImmutableDictionary<string, string>> SystemTags { get; private set; } = null!;

        /// <summary>
        /// The time the the unified audit policy was created, in the format defined by RFC3339.
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The last date and time the unified audit policy was updated, in the format defined by RFC3339.
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;

        /// <summary>
        /// The OCID of the associated unified audit policy definition.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("unifiedAuditPolicyDefinitionId")]
        public Output<string> UnifiedAuditPolicyDefinitionId { get; private set; } = null!;


        /// <summary>
        /// Create a UnifiedAuditPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public UnifiedAuditPolicy(string name, UnifiedAuditPolicyArgs args, CustomResourceOptions? options = null)
            : base("oci:DataSafe/unifiedAuditPolicy:UnifiedAuditPolicy", name, args ?? new UnifiedAuditPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private UnifiedAuditPolicy(string name, Input<string> id, UnifiedAuditPolicyState? state = null, CustomResourceOptions? options = null)
            : base("oci:DataSafe/unifiedAuditPolicy:UnifiedAuditPolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing UnifiedAuditPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static UnifiedAuditPolicy Get(string name, Input<string> id, UnifiedAuditPolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new UnifiedAuditPolicy(name, id, state, options);
        }
    }

    public sealed class UnifiedAuditPolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The OCID of the compartment in which to create the unified audit policy.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("conditions", required: true)]
        private InputList<Inputs.UnifiedAuditPolicyConditionArgs>? _conditions;

        /// <summary>
        /// (Updatable) Lists the audit policy provisioning conditions.
        /// </summary>
        public InputList<Inputs.UnifiedAuditPolicyConditionArgs> Conditions
        {
            get => _conditions ?? (_conditions = new InputList<Inputs.UnifiedAuditPolicyConditionArgs>());
            set => _conditions = value;
        }

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) The description of the unified audit policy in Data Safe.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) The display name of the unified audit policy in Data Safe. The name is modifiable and does not need to be unique.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// The OCID of the security policy corresponding to the unified audit policy.
        /// </summary>
        [Input("securityPolicyId", required: true)]
        public Input<string> SecurityPolicyId { get; set; } = null!;

        /// <summary>
        /// (Updatable) Indicates whether the unified audit policy has been enabled or disabled.
        /// </summary>
        [Input("status", required: true)]
        public Input<string> Status { get; set; } = null!;

        /// <summary>
        /// The OCID of the associated unified audit policy definition.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("unifiedAuditPolicyDefinitionId", required: true)]
        public Input<string> UnifiedAuditPolicyDefinitionId { get; set; } = null!;

        public UnifiedAuditPolicyArgs()
        {
        }
        public static new UnifiedAuditPolicyArgs Empty => new UnifiedAuditPolicyArgs();
    }

    public sealed class UnifiedAuditPolicyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The OCID of the compartment in which to create the unified audit policy.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("conditions")]
        private InputList<Inputs.UnifiedAuditPolicyConditionGetArgs>? _conditions;

        /// <summary>
        /// (Updatable) Lists the audit policy provisioning conditions.
        /// </summary>
        public InputList<Inputs.UnifiedAuditPolicyConditionGetArgs> Conditions
        {
            get => _conditions ?? (_conditions = new InputList<Inputs.UnifiedAuditPolicyConditionGetArgs>());
            set => _conditions = value;
        }

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) The description of the unified audit policy in Data Safe.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) The display name of the unified audit policy in Data Safe. The name is modifiable and does not need to be unique.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// Indicates on whom the audit policy is enabled.
        /// </summary>
        [Input("enabledEntities")]
        public Input<string>? EnabledEntities { get; set; }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// Indicates whether the unified audit policy is seeded or not.
        /// </summary>
        [Input("isSeeded")]
        public Input<bool>? IsSeeded { get; set; }

        /// <summary>
        /// The details of the current state of the unified audit policy in Data Safe.
        /// </summary>
        [Input("lifecycleDetails")]
        public Input<string>? LifecycleDetails { get; set; }

        /// <summary>
        /// The OCID of the security policy corresponding to the unified audit policy.
        /// </summary>
        [Input("securityPolicyId")]
        public Input<string>? SecurityPolicyId { get; set; }

        /// <summary>
        /// The current state of the unified audit policy.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// (Updatable) Indicates whether the unified audit policy has been enabled or disabled.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("systemTags")]
        private InputMap<string>? _systemTags;

        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public InputMap<string> SystemTags
        {
            get => _systemTags ?? (_systemTags = new InputMap<string>());
            set => _systemTags = value;
        }

        /// <summary>
        /// The time the the unified audit policy was created, in the format defined by RFC3339.
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The last date and time the unified audit policy was updated, in the format defined by RFC3339.
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        /// <summary>
        /// The OCID of the associated unified audit policy definition.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("unifiedAuditPolicyDefinitionId")]
        public Input<string>? UnifiedAuditPolicyDefinitionId { get; set; }

        public UnifiedAuditPolicyState()
        {
        }
        public static new UnifiedAuditPolicyState Empty => new UnifiedAuditPolicyState();
    }
}
