// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataSafe
{
    /// <summary>
    /// This resource provides the User Assessment resource in Oracle Cloud Infrastructure Data Safe service.
    /// 
    /// Creates a new saved user assessment for one or multiple targets in a compartment. It saves the latest assessments in the
    /// specified compartment. If a scheduled is passed in, this operation persists the latest assessments that exist at the defined
    /// date and time, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var testUserAssessment = new Oci.DataSafe.UserAssessment("testUserAssessment", new Oci.DataSafe.UserAssessmentArgs
    ///         {
    ///             CompartmentId = @var.Compartment_id,
    ///             TargetId = oci_cloud_guard_target.Test_target.Id,
    ///             DefinedTags = 
    ///             {
    ///                 { "Operations.CostCenter", "42" },
    ///             },
    ///             Description = @var.User_assessment_description,
    ///             DisplayName = @var.User_assessment_display_name,
    ///             FreeformTags = 
    ///             {
    ///                 { "Department", "Finance" },
    ///             },
    ///             Schedule = @var.User_assessment_schedule,
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// UserAssessments can be imported using the `id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import oci:DataSafe/userAssessment:UserAssessment test_user_assessment "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:DataSafe/userAssessment:UserAssessment")]
    public partial class UserAssessment : Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) The OCID of the compartment that contains the user assessment.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, object>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The description of the user assessment.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The display name of the user assessment.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, object>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// List containing maps as values. Example: `{"Operations": [ {"CostCenter": "42"} ] }`
        /// </summary>
        [Output("ignoredAssessmentIds")]
        public Output<ImmutableArray<string>> IgnoredAssessmentIds { get; private set; } = null!;

        /// <summary>
        /// List containing maps as values. Example: `{"Operations": [ {"CostCenter": "42"} ] }`
        /// </summary>
        [Output("ignoredTargets")]
        public Output<ImmutableArray<Outputs.UserAssessmentIgnoredTarget>> IgnoredTargets { get; private set; } = null!;

        /// <summary>
        /// Indicates if the user assessment is set as a baseline. This is applicable only to saved user assessments.
        /// </summary>
        [Output("isBaseline")]
        public Output<bool> IsBaseline { get; private set; } = null!;

        /// <summary>
        /// Indicates if the user assessment deviates from the baseline.
        /// </summary>
        [Output("isDeviatedFromBaseline")]
        public Output<bool> IsDeviatedFromBaseline { get; private set; } = null!;

        /// <summary>
        /// The OCID of the last user assessment baseline against which the latest assessment was compared.
        /// </summary>
        [Output("lastComparedBaselineId")]
        public Output<string> LastComparedBaselineId { get; private set; } = null!;

        /// <summary>
        /// Details about the current state of the user assessment.
        /// </summary>
        [Output("lifecycleDetails")]
        public Output<string> LifecycleDetails { get; private set; } = null!;

        /// <summary>
        /// (Updatable) To schedule the assessment for saving periodically, specify the schedule in this attribute. Create or schedule one assessment per compartment. If not defined, the assessment runs immediately. Format - &lt;version-string&gt;;&lt;version-specific-schedule&gt;
        /// </summary>
        [Output("schedule")]
        public Output<string> Schedule { get; private set; } = null!;

        /// <summary>
        /// The OCID of the user assessment that is responsible for creating this scheduled save assessment.
        /// </summary>
        [Output("scheduleAssessmentId")]
        public Output<string> ScheduleAssessmentId { get; private set; } = null!;

        /// <summary>
        /// The current state of the user assessment.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// Map that contains maps of values. Example: `{"Operations": {"CostCenter": "42"}}`
        /// </summary>
        [Output("statistics")]
        public Output<string> Statistics { get; private set; } = null!;

        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        [Output("systemTags")]
        public Output<ImmutableDictionary<string, object>> SystemTags { get; private set; } = null!;

        /// <summary>
        /// The OCID of the target database on which the user assessment is to be run.
        /// </summary>
        [Output("targetId")]
        public Output<string> TargetId { get; private set; } = null!;

        /// <summary>
        /// Array of database target OCIDs.
        /// </summary>
        [Output("targetIds")]
        public Output<ImmutableArray<string>> TargetIds { get; private set; } = null!;

        /// <summary>
        /// The date and time when the user assessment was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The last date and time when the user assessment was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;

        /// <summary>
        /// Indicates whether the user assessment was created by system or user.
        /// </summary>
        [Output("triggeredBy")]
        public Output<string> TriggeredBy { get; private set; } = null!;

        /// <summary>
        /// Type of user assessment. The possible types are:
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a UserAssessment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public UserAssessment(string name, UserAssessmentArgs args, CustomResourceOptions? options = null)
            : base("oci:DataSafe/userAssessment:UserAssessment", name, args ?? new UserAssessmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private UserAssessment(string name, Input<string> id, UserAssessmentState? state = null, CustomResourceOptions? options = null)
            : base("oci:DataSafe/userAssessment:UserAssessment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing UserAssessment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static UserAssessment Get(string name, Input<string> id, UserAssessmentState? state = null, CustomResourceOptions? options = null)
        {
            return new UserAssessment(name, id, state, options);
        }
    }

    public sealed class UserAssessmentArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The OCID of the compartment that contains the user assessment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) The description of the user assessment.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) The display name of the user assessment.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) To schedule the assessment for saving periodically, specify the schedule in this attribute. Create or schedule one assessment per compartment. If not defined, the assessment runs immediately. Format - &lt;version-string&gt;;&lt;version-specific-schedule&gt;
        /// </summary>
        [Input("schedule")]
        public Input<string>? Schedule { get; set; }

        /// <summary>
        /// The OCID of the target database on which the user assessment is to be run.
        /// </summary>
        [Input("targetId", required: true)]
        public Input<string> TargetId { get; set; } = null!;

        public UserAssessmentArgs()
        {
        }
    }

    public sealed class UserAssessmentState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The OCID of the compartment that contains the user assessment.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) The description of the user assessment.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) The display name of the user assessment.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        [Input("ignoredAssessmentIds")]
        private InputList<string>? _ignoredAssessmentIds;

        /// <summary>
        /// List containing maps as values. Example: `{"Operations": [ {"CostCenter": "42"} ] }`
        /// </summary>
        public InputList<string> IgnoredAssessmentIds
        {
            get => _ignoredAssessmentIds ?? (_ignoredAssessmentIds = new InputList<string>());
            set => _ignoredAssessmentIds = value;
        }

        [Input("ignoredTargets")]
        private InputList<Inputs.UserAssessmentIgnoredTargetGetArgs>? _ignoredTargets;

        /// <summary>
        /// List containing maps as values. Example: `{"Operations": [ {"CostCenter": "42"} ] }`
        /// </summary>
        public InputList<Inputs.UserAssessmentIgnoredTargetGetArgs> IgnoredTargets
        {
            get => _ignoredTargets ?? (_ignoredTargets = new InputList<Inputs.UserAssessmentIgnoredTargetGetArgs>());
            set => _ignoredTargets = value;
        }

        /// <summary>
        /// Indicates if the user assessment is set as a baseline. This is applicable only to saved user assessments.
        /// </summary>
        [Input("isBaseline")]
        public Input<bool>? IsBaseline { get; set; }

        /// <summary>
        /// Indicates if the user assessment deviates from the baseline.
        /// </summary>
        [Input("isDeviatedFromBaseline")]
        public Input<bool>? IsDeviatedFromBaseline { get; set; }

        /// <summary>
        /// The OCID of the last user assessment baseline against which the latest assessment was compared.
        /// </summary>
        [Input("lastComparedBaselineId")]
        public Input<string>? LastComparedBaselineId { get; set; }

        /// <summary>
        /// Details about the current state of the user assessment.
        /// </summary>
        [Input("lifecycleDetails")]
        public Input<string>? LifecycleDetails { get; set; }

        /// <summary>
        /// (Updatable) To schedule the assessment for saving periodically, specify the schedule in this attribute. Create or schedule one assessment per compartment. If not defined, the assessment runs immediately. Format - &lt;version-string&gt;;&lt;version-specific-schedule&gt;
        /// </summary>
        [Input("schedule")]
        public Input<string>? Schedule { get; set; }

        /// <summary>
        /// The OCID of the user assessment that is responsible for creating this scheduled save assessment.
        /// </summary>
        [Input("scheduleAssessmentId")]
        public Input<string>? ScheduleAssessmentId { get; set; }

        /// <summary>
        /// The current state of the user assessment.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// Map that contains maps of values. Example: `{"Operations": {"CostCenter": "42"}}`
        /// </summary>
        [Input("statistics")]
        public Input<string>? Statistics { get; set; }

        [Input("systemTags")]
        private InputMap<object>? _systemTags;

        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public InputMap<object> SystemTags
        {
            get => _systemTags ?? (_systemTags = new InputMap<object>());
            set => _systemTags = value;
        }

        /// <summary>
        /// The OCID of the target database on which the user assessment is to be run.
        /// </summary>
        [Input("targetId")]
        public Input<string>? TargetId { get; set; }

        [Input("targetIds")]
        private InputList<string>? _targetIds;

        /// <summary>
        /// Array of database target OCIDs.
        /// </summary>
        public InputList<string> TargetIds
        {
            get => _targetIds ?? (_targetIds = new InputList<string>());
            set => _targetIds = value;
        }

        /// <summary>
        /// The date and time when the user assessment was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The last date and time when the user assessment was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        /// <summary>
        /// Indicates whether the user assessment was created by system or user.
        /// </summary>
        [Input("triggeredBy")]
        public Input<string>? TriggeredBy { get; set; }

        /// <summary>
        /// Type of user assessment. The possible types are:
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public UserAssessmentState()
        {
        }
    }
}
