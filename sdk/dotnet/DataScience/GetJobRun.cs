// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataScience
{
    public static class GetJobRun
    {
        /// <summary>
        /// This data source provides details about a specific Job Run resource in Oracle Cloud Infrastructure Data Science service.
        /// 
        /// Gets a job run.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testJobRun = Oci.DataScience.GetJobRun.Invoke(new()
        ///     {
        ///         JobRunId = testJobRunOciDatascienceJobRun.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetJobRunResult> InvokeAsync(GetJobRunArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetJobRunResult>("oci:DataScience/getJobRun:getJobRun", args ?? new GetJobRunArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Job Run resource in Oracle Cloud Infrastructure Data Science service.
        /// 
        /// Gets a job run.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testJobRun = Oci.DataScience.GetJobRun.Invoke(new()
        ///     {
        ///         JobRunId = testJobRunOciDatascienceJobRun.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetJobRunResult> Invoke(GetJobRunInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetJobRunResult>("oci:DataScience/getJobRun:getJobRun", args ?? new GetJobRunInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetJobRunArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the job run.
        /// </summary>
        [Input("jobRunId", required: true)]
        public string JobRunId { get; set; } = null!;

        public GetJobRunArgs()
        {
        }
        public static new GetJobRunArgs Empty => new GetJobRunArgs();
    }

    public sealed class GetJobRunInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the job run.
        /// </summary>
        [Input("jobRunId", required: true)]
        public Input<string> JobRunId { get; set; } = null!;

        public GetJobRunInvokeArgs()
        {
        }
        public static new GetJobRunInvokeArgs Empty => new GetJobRunInvokeArgs();
    }


    [OutputType]
    public sealed class GetJobRunResult
    {
        public readonly bool Asynchronous;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the job.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the user who created the job run.
        /// </summary>
        public readonly string CreatedBy;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// A user-friendly display name for the resource.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the job run.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The job configuration details
        /// </summary>
        public readonly ImmutableArray<Outputs.GetJobRunJobConfigurationOverrideDetailResult> JobConfigurationOverrideDetails;
        /// <summary>
        /// Environment configuration to capture job runtime dependencies.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetJobRunJobEnvironmentConfigurationOverrideDetailResult> JobEnvironmentConfigurationOverrideDetails;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the job run.
        /// </summary>
        public readonly string JobId;
        /// <summary>
        /// The job infrastructure configuration details (shape, block storage, etc.)
        /// </summary>
        public readonly ImmutableArray<Outputs.GetJobRunJobInfrastructureConfigurationDetailResult> JobInfrastructureConfigurationDetails;
        /// <summary>
        /// Logging configuration for resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetJobRunJobLogConfigurationOverrideDetailResult> JobLogConfigurationOverrideDetails;
        public readonly string JobRunId;
        /// <summary>
        /// Collection of JobStorageMountConfigurationDetails.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetJobRunJobStorageMountConfigurationDetailsListResult> JobStorageMountConfigurationDetailsLists;
        /// <summary>
        /// Details of the state of the job run.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// Customer logging details for job run.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetJobRunLogDetailResult> LogDetails;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project to associate the job with.
        /// </summary>
        public readonly string ProjectId;
        /// <summary>
        /// The state of the job run.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The date and time the job run was accepted in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        public readonly string TimeAccepted;
        /// <summary>
        /// The date and time the job run request was finished in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        public readonly string TimeFinished;
        /// <summary>
        /// The date and time the job run request was started in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        public readonly string TimeStarted;

        [OutputConstructor]
        private GetJobRunResult(
            bool asynchronous,

            string compartmentId,

            string createdBy,

            ImmutableDictionary<string, object> definedTags,

            string displayName,

            ImmutableDictionary<string, object> freeformTags,

            string id,

            ImmutableArray<Outputs.GetJobRunJobConfigurationOverrideDetailResult> jobConfigurationOverrideDetails,

            ImmutableArray<Outputs.GetJobRunJobEnvironmentConfigurationOverrideDetailResult> jobEnvironmentConfigurationOverrideDetails,

            string jobId,

            ImmutableArray<Outputs.GetJobRunJobInfrastructureConfigurationDetailResult> jobInfrastructureConfigurationDetails,

            ImmutableArray<Outputs.GetJobRunJobLogConfigurationOverrideDetailResult> jobLogConfigurationOverrideDetails,

            string jobRunId,

            ImmutableArray<Outputs.GetJobRunJobStorageMountConfigurationDetailsListResult> jobStorageMountConfigurationDetailsLists,

            string lifecycleDetails,

            ImmutableArray<Outputs.GetJobRunLogDetailResult> logDetails,

            string projectId,

            string state,

            string timeAccepted,

            string timeFinished,

            string timeStarted)
        {
            Asynchronous = asynchronous;
            CompartmentId = compartmentId;
            CreatedBy = createdBy;
            DefinedTags = definedTags;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            JobConfigurationOverrideDetails = jobConfigurationOverrideDetails;
            JobEnvironmentConfigurationOverrideDetails = jobEnvironmentConfigurationOverrideDetails;
            JobId = jobId;
            JobInfrastructureConfigurationDetails = jobInfrastructureConfigurationDetails;
            JobLogConfigurationOverrideDetails = jobLogConfigurationOverrideDetails;
            JobRunId = jobRunId;
            JobStorageMountConfigurationDetailsLists = jobStorageMountConfigurationDetailsLists;
            LifecycleDetails = lifecycleDetails;
            LogDetails = logDetails;
            ProjectId = projectId;
            State = state;
            TimeAccepted = timeAccepted;
            TimeFinished = timeFinished;
            TimeStarted = timeStarted;
        }
    }
}
