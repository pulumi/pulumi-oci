// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataScience
{
    public static class GetJobRuns
    {
        /// <summary>
        /// This data source provides the list of Job Runs in Oracle Cloud Infrastructure Data Science service.
        /// 
        /// List out job runs.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testJobRuns = Oci.DataScience.GetJobRuns.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         CreatedBy = jobRunCreatedBy,
        ///         DisplayName = jobRunDisplayName,
        ///         Id = jobRunId,
        ///         JobId = testJob.Id,
        ///         State = jobRunState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetJobRunsResult> InvokeAsync(GetJobRunsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetJobRunsResult>("oci:DataScience/getJobRuns:getJobRuns", args ?? new GetJobRunsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Job Runs in Oracle Cloud Infrastructure Data Science service.
        /// 
        /// List out job runs.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testJobRuns = Oci.DataScience.GetJobRuns.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         CreatedBy = jobRunCreatedBy,
        ///         DisplayName = jobRunDisplayName,
        ///         Id = jobRunId,
        ///         JobId = testJob.Id,
        ///         State = jobRunState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetJobRunsResult> Invoke(GetJobRunsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetJobRunsResult>("oci:DataScience/getJobRuns:getJobRuns", args ?? new GetJobRunsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Job Runs in Oracle Cloud Infrastructure Data Science service.
        /// 
        /// List out job runs.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testJobRuns = Oci.DataScience.GetJobRuns.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         CreatedBy = jobRunCreatedBy,
        ///         DisplayName = jobRunDisplayName,
        ///         Id = jobRunId,
        ///         JobId = testJob.Id,
        ///         State = jobRunState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetJobRunsResult> Invoke(GetJobRunsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetJobRunsResult>("oci:DataScience/getJobRuns:getJobRuns", args ?? new GetJobRunsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetJobRunsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// &lt;b&gt;Filter&lt;/b&gt; results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// &lt;b&gt;Filter&lt;/b&gt; results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the user who created the resource.
        /// </summary>
        [Input("createdBy")]
        public string? CreatedBy { get; set; }

        /// <summary>
        /// &lt;b&gt;Filter&lt;/b&gt; results by its user-friendly name.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetJobRunsFilterArgs>? _filters;
        public List<Inputs.GetJobRunsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetJobRunsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// &lt;b&gt;Filter&lt;/b&gt; results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resource type.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the job.
        /// </summary>
        [Input("jobId")]
        public string? JobId { get; set; }

        /// <summary>
        /// &lt;b&gt;Filter&lt;/b&gt; results by the specified lifecycle state. Must be a valid state for the resource type.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetJobRunsArgs()
        {
        }
        public static new GetJobRunsArgs Empty => new GetJobRunsArgs();
    }

    public sealed class GetJobRunsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// &lt;b&gt;Filter&lt;/b&gt; results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// &lt;b&gt;Filter&lt;/b&gt; results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the user who created the resource.
        /// </summary>
        [Input("createdBy")]
        public Input<string>? CreatedBy { get; set; }

        /// <summary>
        /// &lt;b&gt;Filter&lt;/b&gt; results by its user-friendly name.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetJobRunsFilterInputArgs>? _filters;
        public InputList<Inputs.GetJobRunsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetJobRunsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// &lt;b&gt;Filter&lt;/b&gt; results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resource type.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the job.
        /// </summary>
        [Input("jobId")]
        public Input<string>? JobId { get; set; }

        /// <summary>
        /// &lt;b&gt;Filter&lt;/b&gt; results by the specified lifecycle state. Must be a valid state for the resource type.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetJobRunsInvokeArgs()
        {
        }
        public static new GetJobRunsInvokeArgs Empty => new GetJobRunsInvokeArgs();
    }


    [OutputType]
    public sealed class GetJobRunsResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the job run.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the user who created the job run.
        /// </summary>
        public readonly string? CreatedBy;
        /// <summary>
        /// A user-friendly display name for the resource.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetJobRunsFilterResult> Filters;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the job run.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the job.
        /// </summary>
        public readonly string? JobId;
        /// <summary>
        /// The list of job_runs.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetJobRunsJobRunResult> JobRuns;
        /// <summary>
        /// The state of the job run.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetJobRunsResult(
            string compartmentId,

            string? createdBy,

            string? displayName,

            ImmutableArray<Outputs.GetJobRunsFilterResult> filters,

            string? id,

            string? jobId,

            ImmutableArray<Outputs.GetJobRunsJobRunResult> jobRuns,

            string? state)
        {
            CompartmentId = compartmentId;
            CreatedBy = createdBy;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            JobId = jobId;
            JobRuns = jobRuns;
            State = state;
        }
    }
}
