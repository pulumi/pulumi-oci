// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataScience
{
    public static class GetMlApplicationImplementations
    {
        /// <summary>
        /// This data source provides the list of Ml Application Implementations in Oracle Cloud Infrastructure Data Science service.
        /// 
        /// Returns a list of MlApplicationImplementations.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMlApplicationImplementations = Oci.DataScience.GetMlApplicationImplementations.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         CompartmentIdInSubtree = mlApplicationImplementationCompartmentIdInSubtree,
        ///         MlApplicationId = testMlApplication.Id,
        ///         MlApplicationImplementationId = testMlApplicationImplementation.Id,
        ///         Name = mlApplicationImplementationName,
        ///         State = mlApplicationImplementationState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetMlApplicationImplementationsResult> InvokeAsync(GetMlApplicationImplementationsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMlApplicationImplementationsResult>("oci:DataScience/getMlApplicationImplementations:getMlApplicationImplementations", args ?? new GetMlApplicationImplementationsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Ml Application Implementations in Oracle Cloud Infrastructure Data Science service.
        /// 
        /// Returns a list of MlApplicationImplementations.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMlApplicationImplementations = Oci.DataScience.GetMlApplicationImplementations.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         CompartmentIdInSubtree = mlApplicationImplementationCompartmentIdInSubtree,
        ///         MlApplicationId = testMlApplication.Id,
        ///         MlApplicationImplementationId = testMlApplicationImplementation.Id,
        ///         Name = mlApplicationImplementationName,
        ///         State = mlApplicationImplementationState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetMlApplicationImplementationsResult> Invoke(GetMlApplicationImplementationsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMlApplicationImplementationsResult>("oci:DataScience/getMlApplicationImplementations:getMlApplicationImplementations", args ?? new GetMlApplicationImplementationsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Ml Application Implementations in Oracle Cloud Infrastructure Data Science service.
        /// 
        /// Returns a list of MlApplicationImplementations.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMlApplicationImplementations = Oci.DataScience.GetMlApplicationImplementations.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         CompartmentIdInSubtree = mlApplicationImplementationCompartmentIdInSubtree,
        ///         MlApplicationId = testMlApplication.Id,
        ///         MlApplicationImplementationId = testMlApplicationImplementation.Id,
        ///         Name = mlApplicationImplementationName,
        ///         State = mlApplicationImplementationState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetMlApplicationImplementationsResult> Invoke(GetMlApplicationImplementationsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetMlApplicationImplementationsResult>("oci:DataScience/getMlApplicationImplementations:getMlApplicationImplementations", args ?? new GetMlApplicationImplementationsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMlApplicationImplementationsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// &lt;b&gt;Filter&lt;/b&gt; results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// If it is true search must include all results from descendant compartments. Value true is allowed only if compartmentId refers to root compartment.
        /// </summary>
        [Input("compartmentIdInSubtree")]
        public bool? CompartmentIdInSubtree { get; set; }

        [Input("filters")]
        private List<Inputs.GetMlApplicationImplementationsFilterArgs>? _filters;
        public List<Inputs.GetMlApplicationImplementationsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetMlApplicationImplementationsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// unique MlApplication identifier
        /// </summary>
        [Input("mlApplicationId")]
        public string? MlApplicationId { get; set; }

        /// <summary>
        /// unique MlApplicationImplementation identifier
        /// </summary>
        [Input("mlApplicationImplementationId")]
        public string? MlApplicationImplementationId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the entire name given.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// A filter to return only resources with lifecycleState matching the given lifecycleState.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetMlApplicationImplementationsArgs()
        {
        }
        public static new GetMlApplicationImplementationsArgs Empty => new GetMlApplicationImplementationsArgs();
    }

    public sealed class GetMlApplicationImplementationsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// &lt;b&gt;Filter&lt;/b&gt; results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// If it is true search must include all results from descendant compartments. Value true is allowed only if compartmentId refers to root compartment.
        /// </summary>
        [Input("compartmentIdInSubtree")]
        public Input<bool>? CompartmentIdInSubtree { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetMlApplicationImplementationsFilterInputArgs>? _filters;
        public InputList<Inputs.GetMlApplicationImplementationsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetMlApplicationImplementationsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// unique MlApplication identifier
        /// </summary>
        [Input("mlApplicationId")]
        public Input<string>? MlApplicationId { get; set; }

        /// <summary>
        /// unique MlApplicationImplementation identifier
        /// </summary>
        [Input("mlApplicationImplementationId")]
        public Input<string>? MlApplicationImplementationId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the entire name given.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A filter to return only resources with lifecycleState matching the given lifecycleState.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetMlApplicationImplementationsInvokeArgs()
        {
        }
        public static new GetMlApplicationImplementationsInvokeArgs Empty => new GetMlApplicationImplementationsInvokeArgs();
    }


    [OutputType]
    public sealed class GetMlApplicationImplementationsResult
    {
        /// <summary>
        /// The OCID of the compartment where ML Application Implementation is created.
        /// </summary>
        public readonly string CompartmentId;
        public readonly bool? CompartmentIdInSubtree;
        public readonly ImmutableArray<Outputs.GetMlApplicationImplementationsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The OCID of the ML Application implemented by this ML Application Implementation.
        /// </summary>
        public readonly string? MlApplicationId;
        /// <summary>
        /// The list of ml_application_implementation_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMlApplicationImplementationsMlApplicationImplementationCollectionResult> MlApplicationImplementationCollections;
        public readonly string? MlApplicationImplementationId;
        /// <summary>
        /// ML Application Implementation name which is unique for given ML Application.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The current state of the MlApplicationImplementation.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetMlApplicationImplementationsResult(
            string compartmentId,

            bool? compartmentIdInSubtree,

            ImmutableArray<Outputs.GetMlApplicationImplementationsFilterResult> filters,

            string id,

            string? mlApplicationId,

            ImmutableArray<Outputs.GetMlApplicationImplementationsMlApplicationImplementationCollectionResult> mlApplicationImplementationCollections,

            string? mlApplicationImplementationId,

            string? name,

            string? state)
        {
            CompartmentId = compartmentId;
            CompartmentIdInSubtree = compartmentIdInSubtree;
            Filters = filters;
            Id = id;
            MlApplicationId = mlApplicationId;
            MlApplicationImplementationCollections = mlApplicationImplementationCollections;
            MlApplicationImplementationId = mlApplicationImplementationId;
            Name = name;
            State = state;
        }
    }
}
