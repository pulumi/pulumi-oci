// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataScience
{
    public static class GetMlApplicationInstances
    {
        /// <summary>
        /// This data source provides the list of Ml Application Instances in Oracle Cloud Infrastructure Data Science service.
        /// 
        /// Returns a list of MlApplicationsInstances.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMlApplicationInstances = Oci.DataScience.GetMlApplicationInstances.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = mlApplicationInstanceDisplayName,
        ///         MlApplicationId = testMlApplication.Id,
        ///         State = mlApplicationInstanceState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetMlApplicationInstancesResult> InvokeAsync(GetMlApplicationInstancesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMlApplicationInstancesResult>("oci:DataScience/getMlApplicationInstances:getMlApplicationInstances", args ?? new GetMlApplicationInstancesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Ml Application Instances in Oracle Cloud Infrastructure Data Science service.
        /// 
        /// Returns a list of MlApplicationsInstances.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMlApplicationInstances = Oci.DataScience.GetMlApplicationInstances.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = mlApplicationInstanceDisplayName,
        ///         MlApplicationId = testMlApplication.Id,
        ///         State = mlApplicationInstanceState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetMlApplicationInstancesResult> Invoke(GetMlApplicationInstancesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMlApplicationInstancesResult>("oci:DataScience/getMlApplicationInstances:getMlApplicationInstances", args ?? new GetMlApplicationInstancesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Ml Application Instances in Oracle Cloud Infrastructure Data Science service.
        /// 
        /// Returns a list of MlApplicationsInstances.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMlApplicationInstances = Oci.DataScience.GetMlApplicationInstances.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = mlApplicationInstanceDisplayName,
        ///         MlApplicationId = testMlApplication.Id,
        ///         State = mlApplicationInstanceState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetMlApplicationInstancesResult> Invoke(GetMlApplicationInstancesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetMlApplicationInstancesResult>("oci:DataScience/getMlApplicationInstances:getMlApplicationInstances", args ?? new GetMlApplicationInstancesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMlApplicationInstancesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// &lt;b&gt;Filter&lt;/b&gt; results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// &lt;b&gt;Filter&lt;/b&gt; results by its user-friendly name.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetMlApplicationInstancesFilterArgs>? _filters;
        public List<Inputs.GetMlApplicationInstancesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetMlApplicationInstancesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// unique MlApplication identifier
        /// </summary>
        [Input("mlApplicationId")]
        public string? MlApplicationId { get; set; }

        /// <summary>
        /// A filter to return only resources matching the given lifecycleState.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetMlApplicationInstancesArgs()
        {
        }
        public static new GetMlApplicationInstancesArgs Empty => new GetMlApplicationInstancesArgs();
    }

    public sealed class GetMlApplicationInstancesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// &lt;b&gt;Filter&lt;/b&gt; results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// &lt;b&gt;Filter&lt;/b&gt; results by its user-friendly name.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetMlApplicationInstancesFilterInputArgs>? _filters;
        public InputList<Inputs.GetMlApplicationInstancesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetMlApplicationInstancesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// unique MlApplication identifier
        /// </summary>
        [Input("mlApplicationId")]
        public Input<string>? MlApplicationId { get; set; }

        /// <summary>
        /// A filter to return only resources matching the given lifecycleState.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetMlApplicationInstancesInvokeArgs()
        {
        }
        public static new GetMlApplicationInstancesInvokeArgs Empty => new GetMlApplicationInstancesInvokeArgs();
    }


    [OutputType]
    public sealed class GetMlApplicationInstancesResult
    {
        /// <summary>
        /// The OCID of the compartment where the MlApplicationInstance is created.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The name of MlApplicationInstance. System will generate displayName when not provided during creation.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetMlApplicationInstancesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The OCID of ML Application. This resource is an instance of ML Application referenced by this OCID.
        /// </summary>
        public readonly string? MlApplicationId;
        /// <summary>
        /// The list of ml_application_instance_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMlApplicationInstancesMlApplicationInstanceCollectionResult> MlApplicationInstanceCollections;
        /// <summary>
        /// The current state of the MlApplicationInstance.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetMlApplicationInstancesResult(
            string compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetMlApplicationInstancesFilterResult> filters,

            string id,

            string? mlApplicationId,

            ImmutableArray<Outputs.GetMlApplicationInstancesMlApplicationInstanceCollectionResult> mlApplicationInstanceCollections,

            string? state)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            MlApplicationId = mlApplicationId;
            MlApplicationInstanceCollections = mlApplicationInstanceCollections;
            State = state;
        }
    }
}
