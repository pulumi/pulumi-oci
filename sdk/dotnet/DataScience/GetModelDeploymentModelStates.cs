// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataScience
{
    public static class GetModelDeploymentModelStates
    {
        /// <summary>
        /// This data source provides the list of Model Deployment Model States in Oracle Cloud Infrastructure Data Science service.
        /// 
        /// Lists the status of models in a model group deployment.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testModelDeploymentModelStates = Oci.DataScience.GetModelDeploymentModelStates.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         ModelDeploymentId = testModelDeployment.Id,
        ///         DisplayName = modelDeploymentModelStateDisplayName,
        ///         InferenceKey = modelDeploymentModelStateInferenceKey,
        ///         ModelId = testModel.Id,
        ///         ProjectId = testProject.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetModelDeploymentModelStatesResult> InvokeAsync(GetModelDeploymentModelStatesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetModelDeploymentModelStatesResult>("oci:DataScience/getModelDeploymentModelStates:getModelDeploymentModelStates", args ?? new GetModelDeploymentModelStatesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Model Deployment Model States in Oracle Cloud Infrastructure Data Science service.
        /// 
        /// Lists the status of models in a model group deployment.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testModelDeploymentModelStates = Oci.DataScience.GetModelDeploymentModelStates.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         ModelDeploymentId = testModelDeployment.Id,
        ///         DisplayName = modelDeploymentModelStateDisplayName,
        ///         InferenceKey = modelDeploymentModelStateInferenceKey,
        ///         ModelId = testModel.Id,
        ///         ProjectId = testProject.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetModelDeploymentModelStatesResult> Invoke(GetModelDeploymentModelStatesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetModelDeploymentModelStatesResult>("oci:DataScience/getModelDeploymentModelStates:getModelDeploymentModelStates", args ?? new GetModelDeploymentModelStatesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Model Deployment Model States in Oracle Cloud Infrastructure Data Science service.
        /// 
        /// Lists the status of models in a model group deployment.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testModelDeploymentModelStates = Oci.DataScience.GetModelDeploymentModelStates.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         ModelDeploymentId = testModelDeployment.Id,
        ///         DisplayName = modelDeploymentModelStateDisplayName,
        ///         InferenceKey = modelDeploymentModelStateInferenceKey,
        ///         ModelId = testModel.Id,
        ///         ProjectId = testProject.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetModelDeploymentModelStatesResult> Invoke(GetModelDeploymentModelStatesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetModelDeploymentModelStatesResult>("oci:DataScience/getModelDeploymentModelStates:getModelDeploymentModelStates", args ?? new GetModelDeploymentModelStatesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetModelDeploymentModelStatesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// &lt;b&gt;Filter&lt;/b&gt; results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// &lt;b&gt;Filter&lt;/b&gt; results by its user-friendly name.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetModelDeploymentModelStatesFilterArgs>? _filters;
        public List<Inputs.GetModelDeploymentModelStatesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetModelDeploymentModelStatesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// &lt;b&gt;Filter&lt;/b&gt; results by the inference key.
        /// </summary>
        [Input("inferenceKey")]
        public string? InferenceKey { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the model deployment.
        /// </summary>
        [Input("modelDeploymentId", required: true)]
        public string ModelDeploymentId { get; set; } = null!;

        /// <summary>
        /// &lt;b&gt;Filter&lt;/b&gt; results by the model ocid.
        /// </summary>
        [Input("modelId")]
        public string? ModelId { get; set; }

        /// <summary>
        /// &lt;b&gt;Filter&lt;/b&gt; results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project.
        /// </summary>
        [Input("projectId")]
        public string? ProjectId { get; set; }

        public GetModelDeploymentModelStatesArgs()
        {
        }
        public static new GetModelDeploymentModelStatesArgs Empty => new GetModelDeploymentModelStatesArgs();
    }

    public sealed class GetModelDeploymentModelStatesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// &lt;b&gt;Filter&lt;/b&gt; results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// &lt;b&gt;Filter&lt;/b&gt; results by its user-friendly name.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetModelDeploymentModelStatesFilterInputArgs>? _filters;
        public InputList<Inputs.GetModelDeploymentModelStatesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetModelDeploymentModelStatesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// &lt;b&gt;Filter&lt;/b&gt; results by the inference key.
        /// </summary>
        [Input("inferenceKey")]
        public Input<string>? InferenceKey { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the model deployment.
        /// </summary>
        [Input("modelDeploymentId", required: true)]
        public Input<string> ModelDeploymentId { get; set; } = null!;

        /// <summary>
        /// &lt;b&gt;Filter&lt;/b&gt; results by the model ocid.
        /// </summary>
        [Input("modelId")]
        public Input<string>? ModelId { get; set; }

        /// <summary>
        /// &lt;b&gt;Filter&lt;/b&gt; results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        public GetModelDeploymentModelStatesInvokeArgs()
        {
        }
        public static new GetModelDeploymentModelStatesInvokeArgs Empty => new GetModelDeploymentModelStatesInvokeArgs();
    }


    [OutputType]
    public sealed class GetModelDeploymentModelStatesResult
    {
        public readonly string CompartmentId;
        /// <summary>
        /// A user-friendly display name for the resource.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetModelDeploymentModelStatesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// SaaS friendly name for the model OCID.
        /// </summary>
        public readonly string? InferenceKey;
        public readonly string ModelDeploymentId;
        /// <summary>
        /// The list of model_deployment_model_states.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetModelDeploymentModelStatesModelDeploymentModelStateResult> ModelDeploymentModelStates;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployed model in model deployment.
        /// </summary>
        public readonly string? ModelId;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project associated with the model.
        /// </summary>
        public readonly string? ProjectId;

        [OutputConstructor]
        private GetModelDeploymentModelStatesResult(
            string compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetModelDeploymentModelStatesFilterResult> filters,

            string id,

            string? inferenceKey,

            string modelDeploymentId,

            ImmutableArray<Outputs.GetModelDeploymentModelStatesModelDeploymentModelStateResult> modelDeploymentModelStates,

            string? modelId,

            string? projectId)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            InferenceKey = inferenceKey;
            ModelDeploymentId = modelDeploymentId;
            ModelDeploymentModelStates = modelDeploymentModelStates;
            ModelId = modelId;
            ProjectId = projectId;
        }
    }
}
