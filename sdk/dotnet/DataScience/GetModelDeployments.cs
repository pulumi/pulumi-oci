// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataScience
{
    public static class GetModelDeployments
    {
        /// <summary>
        /// This data source provides the list of Model Deployments in Oracle Cloud Infrastructure Datascience service.
        /// 
        /// Lists all model deployments in the specified compartment. Only one parameter other than compartmentId may also be included in a query. The query must include compartmentId. If the query does not include compartmentId, or includes compartmentId but two or more other parameters an error is returned.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testModelDeployments = Oci.DataScience.GetModelDeployments.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         CreatedBy = modelDeploymentCreatedBy,
        ///         DisplayName = modelDeploymentDisplayName,
        ///         Id = modelDeploymentId,
        ///         ProjectId = testProject.Id,
        ///         State = modelDeploymentState,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetModelDeploymentsResult> InvokeAsync(GetModelDeploymentsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetModelDeploymentsResult>("oci:DataScience/getModelDeployments:getModelDeployments", args ?? new GetModelDeploymentsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Model Deployments in Oracle Cloud Infrastructure Datascience service.
        /// 
        /// Lists all model deployments in the specified compartment. Only one parameter other than compartmentId may also be included in a query. The query must include compartmentId. If the query does not include compartmentId, or includes compartmentId but two or more other parameters an error is returned.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testModelDeployments = Oci.DataScience.GetModelDeployments.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         CreatedBy = modelDeploymentCreatedBy,
        ///         DisplayName = modelDeploymentDisplayName,
        ///         Id = modelDeploymentId,
        ///         ProjectId = testProject.Id,
        ///         State = modelDeploymentState,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetModelDeploymentsResult> Invoke(GetModelDeploymentsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetModelDeploymentsResult>("oci:DataScience/getModelDeployments:getModelDeployments", args ?? new GetModelDeploymentsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetModelDeploymentsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// &lt;b&gt;Filter&lt;/b&gt; results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// &lt;b&gt;Filter&lt;/b&gt; results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the user who created the resource.
        /// </summary>
        [Input("createdBy")]
        public string? CreatedBy { get; set; }

        /// <summary>
        /// &lt;b&gt;Filter&lt;/b&gt; results by its user-friendly name.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetModelDeploymentsFilterArgs>? _filters;
        public List<Inputs.GetModelDeploymentsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetModelDeploymentsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// &lt;b&gt;Filter&lt;/b&gt; results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resource type.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// &lt;b&gt;Filter&lt;/b&gt; results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project.
        /// </summary>
        [Input("projectId")]
        public string? ProjectId { get; set; }

        /// <summary>
        /// &lt;b&gt;Filter&lt;/b&gt; results by the specified lifecycle state. Must be a valid state for the resource type.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetModelDeploymentsArgs()
        {
        }
        public static new GetModelDeploymentsArgs Empty => new GetModelDeploymentsArgs();
    }

    public sealed class GetModelDeploymentsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// &lt;b&gt;Filter&lt;/b&gt; results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// &lt;b&gt;Filter&lt;/b&gt; results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the user who created the resource.
        /// </summary>
        [Input("createdBy")]
        public Input<string>? CreatedBy { get; set; }

        /// <summary>
        /// &lt;b&gt;Filter&lt;/b&gt; results by its user-friendly name.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetModelDeploymentsFilterInputArgs>? _filters;
        public InputList<Inputs.GetModelDeploymentsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetModelDeploymentsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// &lt;b&gt;Filter&lt;/b&gt; results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resource type.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// &lt;b&gt;Filter&lt;/b&gt; results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// &lt;b&gt;Filter&lt;/b&gt; results by the specified lifecycle state. Must be a valid state for the resource type.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetModelDeploymentsInvokeArgs()
        {
        }
        public static new GetModelDeploymentsInvokeArgs Empty => new GetModelDeploymentsInvokeArgs();
    }


    [OutputType]
    public sealed class GetModelDeploymentsResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the model deployment's compartment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the user who created the model deployment.
        /// </summary>
        public readonly string? CreatedBy;
        /// <summary>
        /// A user-friendly display name for the resource. Does not have to be unique, and can be modified. Avoid entering confidential information. Example: `My ModelDeployment`
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetModelDeploymentsFilterResult> Filters;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the model deployment.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The list of model_deployments.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetModelDeploymentsModelDeploymentResult> ModelDeployments;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project associated with the model deployment.
        /// </summary>
        public readonly string? ProjectId;
        /// <summary>
        /// The state of the model deployment.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetModelDeploymentsResult(
            string compartmentId,

            string? createdBy,

            string? displayName,

            ImmutableArray<Outputs.GetModelDeploymentsFilterResult> filters,

            string? id,

            ImmutableArray<Outputs.GetModelDeploymentsModelDeploymentResult> modelDeployments,

            string? projectId,

            string? state)
        {
            CompartmentId = compartmentId;
            CreatedBy = createdBy;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            ModelDeployments = modelDeployments;
            ProjectId = projectId;
            State = state;
        }
    }
}
