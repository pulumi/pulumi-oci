// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataScience
{
    public static class GetModelProvenance
    {
        /// <summary>
        /// This data source provides details about a specific Model Provenance resource in Oracle Cloud Infrastructure Data Science service.
        /// 
        /// Gets provenance information for specified model.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testModelProvenance = Oci.DataScience.GetModelProvenance.Invoke(new()
        ///     {
        ///         ModelId = testModel.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetModelProvenanceResult> InvokeAsync(GetModelProvenanceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetModelProvenanceResult>("oci:DataScience/getModelProvenance:getModelProvenance", args ?? new GetModelProvenanceArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Model Provenance resource in Oracle Cloud Infrastructure Data Science service.
        /// 
        /// Gets provenance information for specified model.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testModelProvenance = Oci.DataScience.GetModelProvenance.Invoke(new()
        ///     {
        ///         ModelId = testModel.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetModelProvenanceResult> Invoke(GetModelProvenanceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetModelProvenanceResult>("oci:DataScience/getModelProvenance:getModelProvenance", args ?? new GetModelProvenanceInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Model Provenance resource in Oracle Cloud Infrastructure Data Science service.
        /// 
        /// Gets provenance information for specified model.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testModelProvenance = Oci.DataScience.GetModelProvenance.Invoke(new()
        ///     {
        ///         ModelId = testModel.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetModelProvenanceResult> Invoke(GetModelProvenanceInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetModelProvenanceResult>("oci:DataScience/getModelProvenance:getModelProvenance", args ?? new GetModelProvenanceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetModelProvenanceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the model.
        /// </summary>
        [Input("modelId", required: true)]
        public string ModelId { get; set; } = null!;

        public GetModelProvenanceArgs()
        {
        }
        public static new GetModelProvenanceArgs Empty => new GetModelProvenanceArgs();
    }

    public sealed class GetModelProvenanceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the model.
        /// </summary>
        [Input("modelId", required: true)]
        public Input<string> ModelId { get; set; } = null!;

        public GetModelProvenanceInvokeArgs()
        {
        }
        public static new GetModelProvenanceInvokeArgs Empty => new GetModelProvenanceInvokeArgs();
    }


    [OutputType]
    public sealed class GetModelProvenanceResult
    {
        /// <summary>
        /// For model reproducibility purposes. Branch of the git repository associated with model training.
        /// </summary>
        public readonly string GitBranch;
        /// <summary>
        /// For model reproducibility purposes. Commit ID of the git repository associated with model training.
        /// </summary>
        public readonly string GitCommit;
        public readonly string Id;
        public readonly string ModelId;
        /// <summary>
        /// For model reproducibility purposes. URL of the git repository associated with model training.
        /// </summary>
        public readonly string RepositoryUrl;
        /// <summary>
        /// For model reproducibility purposes. Path to model artifacts.
        /// </summary>
        public readonly string ScriptDir;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a training session(Job or NotebookSession) in which the model was trained. It is used for model reproducibility purposes.
        /// </summary>
        public readonly string TrainingId;
        /// <summary>
        /// For model reproducibility purposes. Path to the python script or notebook in which the model was trained."
        /// </summary>
        public readonly string TrainingScript;

        [OutputConstructor]
        private GetModelProvenanceResult(
            string gitBranch,

            string gitCommit,

            string id,

            string modelId,

            string repositoryUrl,

            string scriptDir,

            string trainingId,

            string trainingScript)
        {
            GitBranch = gitBranch;
            GitCommit = gitCommit;
            Id = id;
            ModelId = modelId;
            RepositoryUrl = repositoryUrl;
            ScriptDir = scriptDir;
            TrainingId = trainingId;
            TrainingScript = trainingScript;
        }
    }
}
