// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataScience
{
    public static class GetSchedule
    {
        /// <summary>
        /// This data source provides details about a specific Schedule resource in Oracle Cloud Infrastructure Data Science service.
        /// 
        /// Gets a Schedule by identifier
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSchedule = Oci.DataScience.GetSchedule.Invoke(new()
        ///     {
        ///         ScheduleId = testScheduleOciDatascienceSchedule.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetScheduleResult> InvokeAsync(GetScheduleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetScheduleResult>("oci:DataScience/getSchedule:getSchedule", args ?? new GetScheduleArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Schedule resource in Oracle Cloud Infrastructure Data Science service.
        /// 
        /// Gets a Schedule by identifier
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSchedule = Oci.DataScience.GetSchedule.Invoke(new()
        ///     {
        ///         ScheduleId = testScheduleOciDatascienceSchedule.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetScheduleResult> Invoke(GetScheduleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetScheduleResult>("oci:DataScience/getSchedule:getSchedule", args ?? new GetScheduleInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Schedule resource in Oracle Cloud Infrastructure Data Science service.
        /// 
        /// Gets a Schedule by identifier
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSchedule = Oci.DataScience.GetSchedule.Invoke(new()
        ///     {
        ///         ScheduleId = testScheduleOciDatascienceSchedule.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetScheduleResult> Invoke(GetScheduleInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetScheduleResult>("oci:DataScience/getSchedule:getSchedule", args ?? new GetScheduleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetScheduleArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// unique Schedule identifier
        /// </summary>
        [Input("scheduleId", required: true)]
        public string ScheduleId { get; set; } = null!;

        public GetScheduleArgs()
        {
        }
        public static new GetScheduleArgs Empty => new GetScheduleArgs();
    }

    public sealed class GetScheduleInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// unique Schedule identifier
        /// </summary>
        [Input("scheduleId", required: true)]
        public Input<string> ScheduleId { get; set; } = null!;

        public GetScheduleInvokeArgs()
        {
        }
        public static new GetScheduleInvokeArgs Empty => new GetScheduleInvokeArgs();
    }


    [OutputType]
    public sealed class GetScheduleResult
    {
        /// <summary>
        /// The schedule action
        /// </summary>
        public readonly ImmutableArray<Outputs.GetScheduleActionResult> Actions;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the schedule.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the user who created the schedule.
        /// </summary>
        public readonly string CreatedBy;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// A short description of the schedule.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// A user-friendly display name for the resource. Avoid entering confidential information.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the schedule.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Details about the action performed by the last schedule execution. Example: `Invoked ML Application trigger.`
        /// </summary>
        public readonly string LastScheduleRunDetails;
        /// <summary>
        /// A message describing the current state in more detail.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// Custom logging details for schedule execution.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetScheduleLogDetailResult> LogDetails;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project associated with the schedule.
        /// </summary>
        public readonly string ProjectId;
        public readonly string ScheduleId;
        /// <summary>
        /// The current state of the schedule.           Example: `ACTIVE`
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// The date and time the schedule was created. Format is defined by RFC3339.           Example: `2022-08-05T01:02:29.600Z`
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The last schedule execution time. Format is defined by RFC3339. Example: `2022-08-05T01:02:29.600Z`
        /// </summary>
        public readonly string TimeLastScheduleRun;
        /// <summary>
        /// The next scheduled execution time for the schedule. Format is defined by RFC3339. Example: `2022-08-05T01:02:29.600Z`
        /// </summary>
        public readonly string TimeNextScheduledRun;
        /// <summary>
        /// The date and time the schedule was updated. Format is defined by RFC3339.           Example: `2022-09-05T01:02:29.600Z`
        /// </summary>
        public readonly string TimeUpdated;
        /// <summary>
        /// The trigger of the schedule can be UNIX cron or iCal expression or simple interval
        /// </summary>
        public readonly ImmutableArray<Outputs.GetScheduleTriggerResult> Triggers;

        [OutputConstructor]
        private GetScheduleResult(
            ImmutableArray<Outputs.GetScheduleActionResult> actions,

            string compartmentId,

            string createdBy,

            ImmutableDictionary<string, string> definedTags,

            string description,

            string displayName,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            string lastScheduleRunDetails,

            string lifecycleDetails,

            ImmutableArray<Outputs.GetScheduleLogDetailResult> logDetails,

            string projectId,

            string scheduleId,

            string state,

            ImmutableDictionary<string, string> systemTags,

            string timeCreated,

            string timeLastScheduleRun,

            string timeNextScheduledRun,

            string timeUpdated,

            ImmutableArray<Outputs.GetScheduleTriggerResult> triggers)
        {
            Actions = actions;
            CompartmentId = compartmentId;
            CreatedBy = createdBy;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            LastScheduleRunDetails = lastScheduleRunDetails;
            LifecycleDetails = lifecycleDetails;
            LogDetails = logDetails;
            ProjectId = projectId;
            ScheduleId = scheduleId;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeLastScheduleRun = timeLastScheduleRun;
            TimeNextScheduledRun = timeNextScheduledRun;
            TimeUpdated = timeUpdated;
            Triggers = triggers;
        }
    }
}
