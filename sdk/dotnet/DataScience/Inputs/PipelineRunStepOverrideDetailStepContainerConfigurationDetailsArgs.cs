// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataScience.Inputs
{

    public sealed class PipelineRunStepOverrideDetailStepContainerConfigurationDetailsArgs : global::Pulumi.ResourceArgs
    {
        [Input("cmds")]
        private InputList<string>? _cmds;

        /// <summary>
        /// The container image run [CMD](https://docs.docker.com/engine/reference/builder/#cmd) as a list of strings. Use `CMD` as arguments to the `ENTRYPOINT` or the only command to run in the absence of an `ENTRYPOINT`. The combined size of `CMD` and `ENTRYPOINT` must be less than 2048 bytes.
        /// </summary>
        public InputList<string> Cmds
        {
            get => _cmds ?? (_cmds = new InputList<string>());
            set => _cmds = value;
        }

        /// <summary>
        /// The type of container.
        /// </summary>
        [Input("containerType", required: true)]
        public Input<string> ContainerType { get; set; } = null!;

        [Input("entrypoints")]
        private InputList<string>? _entrypoints;

        /// <summary>
        /// The container image run [ENTRYPOINT](https://docs.docker.com/engine/reference/builder/#entrypoint) as a list of strings. Accept the `CMD` as extra arguments. The combined size of `CMD` and `ENTRYPOINT` must be less than 2048 bytes. More information on how `CMD` and `ENTRYPOINT` interact are [here](https://docs.docker.com/engine/reference/builder/#understand-how-cmd-and-entrypoint-interact).
        /// </summary>
        public InputList<string> Entrypoints
        {
            get => _entrypoints ?? (_entrypoints = new InputList<string>());
            set => _entrypoints = value;
        }

        /// <summary>
        /// The full path to the Oracle Container Repository (OCIR) registry, image, and tag in a canonical format.
        /// </summary>
        [Input("image", required: true)]
        public Input<string> Image { get; set; } = null!;

        /// <summary>
        /// The digest of the container image. For example, `sha256:881303a6b2738834d795a32b4a98eb0e5e3d1cad590a712d1e04f9b2fa90a030`
        /// </summary>
        [Input("imageDigest")]
        public Input<string>? ImageDigest { get; set; }

        /// <summary>
        /// OCID of the container image signature
        /// </summary>
        [Input("imageSignatureId")]
        public Input<string>? ImageSignatureId { get; set; }

        public PipelineRunStepOverrideDetailStepContainerConfigurationDetailsArgs()
        {
        }
        public static new PipelineRunStepOverrideDetailStepContainerConfigurationDetailsArgs Empty => new PipelineRunStepOverrideDetailStepContainerConfigurationDetailsArgs();
    }
}
