// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataScience
{
    /// <summary>
    /// This resource provides the Ml Application Implementation resource in Oracle Cloud Infrastructure Data Science service.
    /// 
    /// Creates a new MlApplicationImplementation.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testMlApplicationImplementation = new Oci.DataScience.MlApplicationImplementation("test_ml_application_implementation", new()
    ///     {
    ///         CompartmentId = compartmentId,
    ///         MlApplicationId = testMlApplication.Id,
    ///         Name = mlApplicationImplementationName,
    ///         MlApplicationPackage = 
    ///         {
    ///             { "source_type", mlApplicationPackageSourceType },
    ///             { "uri", mlApplicationPackageUri },
    ///         },
    ///         OpcMlAppPackageArgs = opcMlAppPackageArgs,
    ///         AllowedMigrationDestinations = mlApplicationImplementationAllowedMigrationDestinations,
    ///         DefinedTags = 
    ///         {
    ///             { "Operations.CostCenter", "42" },
    ///         },
    ///         FreeformTags = 
    ///         {
    ///             { "Department", "Finance" },
    ///         },
    ///         Logging = new Oci.DataScience.Inputs.MlApplicationImplementationLoggingArgs
    ///         {
    ///             AggregatedInstanceViewLog = new Oci.DataScience.Inputs.MlApplicationImplementationLoggingAggregatedInstanceViewLogArgs
    ///             {
    ///                 EnableLogging = mlApplicationImplementationLoggingAggregatedInstanceViewLogEnableLogging,
    ///                 LogGroupId = testLogGroup.Id,
    ///                 LogId = testLog.Id,
    ///             },
    ///             ImplementationLog = new Oci.DataScience.Inputs.MlApplicationImplementationLoggingImplementationLogArgs
    ///             {
    ///                 EnableLogging = mlApplicationImplementationLoggingImplementationLogEnableLogging,
    ///                 LogGroupId = testLogGroup.Id,
    ///                 LogId = testLog.Id,
    ///             },
    ///             TriggerLog = new Oci.DataScience.Inputs.MlApplicationImplementationLoggingTriggerLogArgs
    ///             {
    ///                 EnableLogging = mlApplicationImplementationLoggingTriggerLogEnableLogging,
    ///                 LogGroupId = testLogGroup.Id,
    ///                 LogId = testLog.Id,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// MlApplicationImplementations can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:DataScience/mlApplicationImplementation:MlApplicationImplementation test_ml_application_implementation "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:DataScience/mlApplicationImplementation:MlApplicationImplementation")]
    public partial class MlApplicationImplementation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) List of ML Application Implementation OCIDs for which migration from this implementation is allowed. Migration means that if consumers change implementation for their instances to implementation with OCID from this list, instance components will be updated in place otherwise new instance components are created based on the new implementation and old instance components are removed.
        /// </summary>
        [Output("allowedMigrationDestinations")]
        public Output<ImmutableArray<string>> AllowedMigrationDestinations { get; private set; } = null!;

        /// <summary>
        /// List of application components (OCI resources shared for all MlApplicationInstances). These have been created automatically based on their definitions in the ML Application package.
        /// </summary>
        [Output("applicationComponents")]
        public Output<ImmutableArray<Outputs.MlApplicationImplementationApplicationComponent>> ApplicationComponents { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The OCID of the compartment where ML Application Implementation is created.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// Schema of configuration which needs to be provided for each ML Application Instance. It is defined in the ML Application package descriptor.
        /// </summary>
        [Output("configurationSchemas")]
        public Output<ImmutableArray<Outputs.MlApplicationImplementationConfigurationSchema>> ConfigurationSchemas { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, string>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// short description of the argument
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, string>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        [Output("lifecycleDetails")]
        public Output<string> LifecycleDetails { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Configuration of Logging for ML Application Implementation.
        /// </summary>
        [Output("logging")]
        public Output<Outputs.MlApplicationImplementationLogging> Logging { get; private set; } = null!;

        /// <summary>
        /// The OCID of the ML Application implemented by this ML Application Implementation
        /// </summary>
        [Output("mlApplicationId")]
        public Output<string> MlApplicationId { get; private set; } = null!;

        /// <summary>
        /// The name of ML Application (based on mlApplicationId)
        /// </summary>
        [Output("mlApplicationName")]
        public Output<string> MlApplicationName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Configuration of The ML Application Package to upload.
        /// </summary>
        [Output("mlApplicationPackage")]
        public Output<ImmutableDictionary<string, string>> MlApplicationPackage { get; private set; } = null!;

        /// <summary>
        /// List of ML Application package arguments provided during ML Application package upload.
        /// </summary>
        [Output("mlApplicationPackageArguments")]
        public Output<ImmutableArray<Outputs.MlApplicationImplementationMlApplicationPackageArgument>> MlApplicationPackageArguments { get; private set; } = null!;

        /// <summary>
        /// ML Application Implementation name which is unique for given ML Application.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// (Updatable) ML Application package arguments required during ML Application package upload. Each argument is a simple key-value pair.
        /// </summary>
        [Output("opcMlAppPackageArgs")]
        public Output<ImmutableDictionary<string, string>?> OpcMlAppPackageArgs { get; private set; } = null!;

        /// <summary>
        /// The version of ML Application Package (e.g. "1.2" or "2.0.4") defined in ML Application package descriptor. Value is not mandatory only for CREATING state otherwise it must be always presented.
        /// </summary>
        [Output("packageVersion")]
        public Output<string> PackageVersion { get; private set; } = null!;

        /// <summary>
        /// The current state of the MlApplicationImplementation.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        [Output("systemTags")]
        public Output<ImmutableDictionary<string, string>> SystemTags { get; private set; } = null!;

        /// <summary>
        /// Creation time of MlApplicationImplementation creation in the format defined by RFC 3339.
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// Time of last MlApplicationImplementation update in the format defined by RFC 3339.
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;


        /// <summary>
        /// Create a MlApplicationImplementation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MlApplicationImplementation(string name, MlApplicationImplementationArgs args, CustomResourceOptions? options = null)
            : base("oci:DataScience/mlApplicationImplementation:MlApplicationImplementation", name, args ?? new MlApplicationImplementationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MlApplicationImplementation(string name, Input<string> id, MlApplicationImplementationState? state = null, CustomResourceOptions? options = null)
            : base("oci:DataScience/mlApplicationImplementation:MlApplicationImplementation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MlApplicationImplementation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MlApplicationImplementation Get(string name, Input<string> id, MlApplicationImplementationState? state = null, CustomResourceOptions? options = null)
        {
            return new MlApplicationImplementation(name, id, state, options);
        }
    }

    public sealed class MlApplicationImplementationArgs : global::Pulumi.ResourceArgs
    {
        [Input("allowedMigrationDestinations")]
        private InputList<string>? _allowedMigrationDestinations;

        /// <summary>
        /// (Updatable) List of ML Application Implementation OCIDs for which migration from this implementation is allowed. Migration means that if consumers change implementation for their instances to implementation with OCID from this list, instance components will be updated in place otherwise new instance components are created based on the new implementation and old instance components are removed.
        /// </summary>
        public InputList<string> AllowedMigrationDestinations
        {
            get => _allowedMigrationDestinations ?? (_allowedMigrationDestinations = new InputList<string>());
            set => _allowedMigrationDestinations = value;
        }

        /// <summary>
        /// (Updatable) The OCID of the compartment where ML Application Implementation is created.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) Configuration of Logging for ML Application Implementation.
        /// </summary>
        [Input("logging")]
        public Input<Inputs.MlApplicationImplementationLoggingArgs>? Logging { get; set; }

        /// <summary>
        /// The OCID of the ML Application implemented by this ML Application Implementation
        /// </summary>
        [Input("mlApplicationId", required: true)]
        public Input<string> MlApplicationId { get; set; } = null!;

        [Input("mlApplicationPackage")]
        private InputMap<string>? _mlApplicationPackage;

        /// <summary>
        /// (Updatable) Configuration of The ML Application Package to upload.
        /// </summary>
        public InputMap<string> MlApplicationPackage
        {
            get => _mlApplicationPackage ?? (_mlApplicationPackage = new InputMap<string>());
            set => _mlApplicationPackage = value;
        }

        /// <summary>
        /// ML Application Implementation name which is unique for given ML Application.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("opcMlAppPackageArgs")]
        private InputMap<string>? _opcMlAppPackageArgs;

        /// <summary>
        /// (Updatable) ML Application package arguments required during ML Application package upload. Each argument is a simple key-value pair.
        /// </summary>
        public InputMap<string> OpcMlAppPackageArgs
        {
            get => _opcMlAppPackageArgs ?? (_opcMlAppPackageArgs = new InputMap<string>());
            set => _opcMlAppPackageArgs = value;
        }

        public MlApplicationImplementationArgs()
        {
        }
        public static new MlApplicationImplementationArgs Empty => new MlApplicationImplementationArgs();
    }

    public sealed class MlApplicationImplementationState : global::Pulumi.ResourceArgs
    {
        [Input("allowedMigrationDestinations")]
        private InputList<string>? _allowedMigrationDestinations;

        /// <summary>
        /// (Updatable) List of ML Application Implementation OCIDs for which migration from this implementation is allowed. Migration means that if consumers change implementation for their instances to implementation with OCID from this list, instance components will be updated in place otherwise new instance components are created based on the new implementation and old instance components are removed.
        /// </summary>
        public InputList<string> AllowedMigrationDestinations
        {
            get => _allowedMigrationDestinations ?? (_allowedMigrationDestinations = new InputList<string>());
            set => _allowedMigrationDestinations = value;
        }

        [Input("applicationComponents")]
        private InputList<Inputs.MlApplicationImplementationApplicationComponentGetArgs>? _applicationComponents;

        /// <summary>
        /// List of application components (OCI resources shared for all MlApplicationInstances). These have been created automatically based on their definitions in the ML Application package.
        /// </summary>
        public InputList<Inputs.MlApplicationImplementationApplicationComponentGetArgs> ApplicationComponents
        {
            get => _applicationComponents ?? (_applicationComponents = new InputList<Inputs.MlApplicationImplementationApplicationComponentGetArgs>());
            set => _applicationComponents = value;
        }

        /// <summary>
        /// (Updatable) The OCID of the compartment where ML Application Implementation is created.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("configurationSchemas")]
        private InputList<Inputs.MlApplicationImplementationConfigurationSchemaGetArgs>? _configurationSchemas;

        /// <summary>
        /// Schema of configuration which needs to be provided for each ML Application Instance. It is defined in the ML Application package descriptor.
        /// </summary>
        public InputList<Inputs.MlApplicationImplementationConfigurationSchemaGetArgs> ConfigurationSchemas
        {
            get => _configurationSchemas ?? (_configurationSchemas = new InputList<Inputs.MlApplicationImplementationConfigurationSchemaGetArgs>());
            set => _configurationSchemas = value;
        }

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// short description of the argument
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        [Input("lifecycleDetails")]
        public Input<string>? LifecycleDetails { get; set; }

        /// <summary>
        /// (Updatable) Configuration of Logging for ML Application Implementation.
        /// </summary>
        [Input("logging")]
        public Input<Inputs.MlApplicationImplementationLoggingGetArgs>? Logging { get; set; }

        /// <summary>
        /// The OCID of the ML Application implemented by this ML Application Implementation
        /// </summary>
        [Input("mlApplicationId")]
        public Input<string>? MlApplicationId { get; set; }

        /// <summary>
        /// The name of ML Application (based on mlApplicationId)
        /// </summary>
        [Input("mlApplicationName")]
        public Input<string>? MlApplicationName { get; set; }

        [Input("mlApplicationPackage")]
        private InputMap<string>? _mlApplicationPackage;

        /// <summary>
        /// (Updatable) Configuration of The ML Application Package to upload.
        /// </summary>
        public InputMap<string> MlApplicationPackage
        {
            get => _mlApplicationPackage ?? (_mlApplicationPackage = new InputMap<string>());
            set => _mlApplicationPackage = value;
        }

        [Input("mlApplicationPackageArguments")]
        private InputList<Inputs.MlApplicationImplementationMlApplicationPackageArgumentGetArgs>? _mlApplicationPackageArguments;

        /// <summary>
        /// List of ML Application package arguments provided during ML Application package upload.
        /// </summary>
        public InputList<Inputs.MlApplicationImplementationMlApplicationPackageArgumentGetArgs> MlApplicationPackageArguments
        {
            get => _mlApplicationPackageArguments ?? (_mlApplicationPackageArguments = new InputList<Inputs.MlApplicationImplementationMlApplicationPackageArgumentGetArgs>());
            set => _mlApplicationPackageArguments = value;
        }

        /// <summary>
        /// ML Application Implementation name which is unique for given ML Application.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("opcMlAppPackageArgs")]
        private InputMap<string>? _opcMlAppPackageArgs;

        /// <summary>
        /// (Updatable) ML Application package arguments required during ML Application package upload. Each argument is a simple key-value pair.
        /// </summary>
        public InputMap<string> OpcMlAppPackageArgs
        {
            get => _opcMlAppPackageArgs ?? (_opcMlAppPackageArgs = new InputMap<string>());
            set => _opcMlAppPackageArgs = value;
        }

        /// <summary>
        /// The version of ML Application Package (e.g. "1.2" or "2.0.4") defined in ML Application package descriptor. Value is not mandatory only for CREATING state otherwise it must be always presented.
        /// </summary>
        [Input("packageVersion")]
        public Input<string>? PackageVersion { get; set; }

        /// <summary>
        /// The current state of the MlApplicationImplementation.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("systemTags")]
        private InputMap<string>? _systemTags;

        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public InputMap<string> SystemTags
        {
            get => _systemTags ?? (_systemTags = new InputMap<string>());
            set => _systemTags = value;
        }

        /// <summary>
        /// Creation time of MlApplicationImplementation creation in the format defined by RFC 3339.
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// Time of last MlApplicationImplementation update in the format defined by RFC 3339.
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        public MlApplicationImplementationState()
        {
        }
        public static new MlApplicationImplementationState Empty => new MlApplicationImplementationState();
    }
}
