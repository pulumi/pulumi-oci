// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataScience
{
    /// <summary>
    /// This resource provides the Ml Application Instance resource in Oracle Cloud Infrastructure Data Science service.
    /// 
    /// Creates a new MlApplicationInstance.
    /// 
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// MlApplicationInstances can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:DataScience/mlApplicationInstance:MlApplicationInstance test_ml_application_instance "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:DataScience/mlApplicationInstance:MlApplicationInstance")]
    public partial class MlApplicationInstance : global::Pulumi.CustomResource
    {
        /// <summary>
        /// AuthN/Z configuration for online prediction
        /// </summary>
        [Output("authConfiguration")]
        public Output<Outputs.MlApplicationInstanceAuthConfiguration> AuthConfiguration { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The OCID of the compartment where the MlApplicationInstance is created.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Data that are used for provisioning of the given MlApplicationInstance. These are validated against configurationSchema defined in referenced MlApplicationImplementation.
        /// </summary>
        [Output("configurations")]
        public Output<ImmutableArray<Outputs.MlApplicationInstanceConfiguration>> Configurations { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, string>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// The name of MlApplicationInstance. System will generate displayName when not provided.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, string>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defines whether the MlApplicationInstance will be created in ACTIVE (true value) or INACTIVE (false value) lifecycle state.
        /// </summary>
        [Output("isEnabled")]
        public Output<bool> IsEnabled { get; private set; } = null!;

        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        [Output("lifecycleDetails")]
        public Output<string> LifecycleDetails { get; private set; } = null!;

        /// <summary>
        /// The current substate of the MlApplicationInstance. The substate has MlApplicationInstance specific values in comparison with lifecycleState which has standard values common for all Oracle Cloud Infrastructure resources. The NEEDS_ATTENTION and FAILED substates are deprecated in favor of (NON_)?RECOVERABLE_(PROVIDER|SERVICE)_ISSUE and will be removed in next release.
        /// </summary>
        [Output("lifecycleSubstate")]
        public Output<string> LifecycleSubstate { get; private set; } = null!;

        /// <summary>
        /// The OCID of ML Application. This resource is an instance of ML Application referenced by this OCID.
        /// </summary>
        [Output("mlApplicationId")]
        public Output<string> MlApplicationId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The OCID of ML Application Implementation selected as a certain solution for a given ML problem (ML Application)
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("mlApplicationImplementationId")]
        public Output<string> MlApplicationImplementationId { get; private set; } = null!;

        /// <summary>
        /// The name of Ml Application Implementation (based on mlApplicationImplementationId)
        /// </summary>
        [Output("mlApplicationImplementationName")]
        public Output<string> MlApplicationImplementationName { get; private set; } = null!;

        /// <summary>
        /// The name of ML Application (based on mlApplicationId).
        /// </summary>
        [Output("mlApplicationName")]
        public Output<string> MlApplicationName { get; private set; } = null!;

        /// <summary>
        /// Prediction endpoint related information.
        /// </summary>
        [Output("predictionEndpointDetails")]
        public Output<ImmutableArray<Outputs.MlApplicationInstancePredictionEndpointDetail>> PredictionEndpointDetails { get; private set; } = null!;

        /// <summary>
        /// The current state of the MlApplicationInstance.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        [Output("systemTags")]
        public Output<ImmutableDictionary<string, string>> SystemTags { get; private set; } = null!;

        /// <summary>
        /// The time the the MlApplication was created. An RFC3339 formatted datetime string
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// Time of last MlApplicationInstance update in the format defined by RFC 3339.
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;


        /// <summary>
        /// Create a MlApplicationInstance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MlApplicationInstance(string name, MlApplicationInstanceArgs args, CustomResourceOptions? options = null)
            : base("oci:DataScience/mlApplicationInstance:MlApplicationInstance", name, args ?? new MlApplicationInstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MlApplicationInstance(string name, Input<string> id, MlApplicationInstanceState? state = null, CustomResourceOptions? options = null)
            : base("oci:DataScience/mlApplicationInstance:MlApplicationInstance", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MlApplicationInstance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MlApplicationInstance Get(string name, Input<string> id, MlApplicationInstanceState? state = null, CustomResourceOptions? options = null)
        {
            return new MlApplicationInstance(name, id, state, options);
        }
    }

    public sealed class MlApplicationInstanceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// AuthN/Z configuration for online prediction
        /// </summary>
        [Input("authConfiguration")]
        public Input<Inputs.MlApplicationInstanceAuthConfigurationArgs>? AuthConfiguration { get; set; }

        /// <summary>
        /// (Updatable) The OCID of the compartment where the MlApplicationInstance is created.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("configurations")]
        private InputList<Inputs.MlApplicationInstanceConfigurationArgs>? _configurations;

        /// <summary>
        /// (Updatable) Data that are used for provisioning of the given MlApplicationInstance. These are validated against configurationSchema defined in referenced MlApplicationImplementation.
        /// </summary>
        public InputList<Inputs.MlApplicationInstanceConfigurationArgs> Configurations
        {
            get => _configurations ?? (_configurations = new InputList<Inputs.MlApplicationInstanceConfigurationArgs>());
            set => _configurations = value;
        }

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// The name of MlApplicationInstance. System will generate displayName when not provided.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) Defines whether the MlApplicationInstance will be created in ACTIVE (true value) or INACTIVE (false value) lifecycle state.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// The OCID of ML Application. This resource is an instance of ML Application referenced by this OCID.
        /// </summary>
        [Input("mlApplicationId", required: true)]
        public Input<string> MlApplicationId { get; set; } = null!;

        /// <summary>
        /// (Updatable) The OCID of ML Application Implementation selected as a certain solution for a given ML problem (ML Application)
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("mlApplicationImplementationId", required: true)]
        public Input<string> MlApplicationImplementationId { get; set; } = null!;

        public MlApplicationInstanceArgs()
        {
        }
        public static new MlApplicationInstanceArgs Empty => new MlApplicationInstanceArgs();
    }

    public sealed class MlApplicationInstanceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// AuthN/Z configuration for online prediction
        /// </summary>
        [Input("authConfiguration")]
        public Input<Inputs.MlApplicationInstanceAuthConfigurationGetArgs>? AuthConfiguration { get; set; }

        /// <summary>
        /// (Updatable) The OCID of the compartment where the MlApplicationInstance is created.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("configurations")]
        private InputList<Inputs.MlApplicationInstanceConfigurationGetArgs>? _configurations;

        /// <summary>
        /// (Updatable) Data that are used for provisioning of the given MlApplicationInstance. These are validated against configurationSchema defined in referenced MlApplicationImplementation.
        /// </summary>
        public InputList<Inputs.MlApplicationInstanceConfigurationGetArgs> Configurations
        {
            get => _configurations ?? (_configurations = new InputList<Inputs.MlApplicationInstanceConfigurationGetArgs>());
            set => _configurations = value;
        }

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// The name of MlApplicationInstance. System will generate displayName when not provided.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) Defines whether the MlApplicationInstance will be created in ACTIVE (true value) or INACTIVE (false value) lifecycle state.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        [Input("lifecycleDetails")]
        public Input<string>? LifecycleDetails { get; set; }

        /// <summary>
        /// The current substate of the MlApplicationInstance. The substate has MlApplicationInstance specific values in comparison with lifecycleState which has standard values common for all Oracle Cloud Infrastructure resources. The NEEDS_ATTENTION and FAILED substates are deprecated in favor of (NON_)?RECOVERABLE_(PROVIDER|SERVICE)_ISSUE and will be removed in next release.
        /// </summary>
        [Input("lifecycleSubstate")]
        public Input<string>? LifecycleSubstate { get; set; }

        /// <summary>
        /// The OCID of ML Application. This resource is an instance of ML Application referenced by this OCID.
        /// </summary>
        [Input("mlApplicationId")]
        public Input<string>? MlApplicationId { get; set; }

        /// <summary>
        /// (Updatable) The OCID of ML Application Implementation selected as a certain solution for a given ML problem (ML Application)
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("mlApplicationImplementationId")]
        public Input<string>? MlApplicationImplementationId { get; set; }

        /// <summary>
        /// The name of Ml Application Implementation (based on mlApplicationImplementationId)
        /// </summary>
        [Input("mlApplicationImplementationName")]
        public Input<string>? MlApplicationImplementationName { get; set; }

        /// <summary>
        /// The name of ML Application (based on mlApplicationId).
        /// </summary>
        [Input("mlApplicationName")]
        public Input<string>? MlApplicationName { get; set; }

        [Input("predictionEndpointDetails")]
        private InputList<Inputs.MlApplicationInstancePredictionEndpointDetailGetArgs>? _predictionEndpointDetails;

        /// <summary>
        /// Prediction endpoint related information.
        /// </summary>
        public InputList<Inputs.MlApplicationInstancePredictionEndpointDetailGetArgs> PredictionEndpointDetails
        {
            get => _predictionEndpointDetails ?? (_predictionEndpointDetails = new InputList<Inputs.MlApplicationInstancePredictionEndpointDetailGetArgs>());
            set => _predictionEndpointDetails = value;
        }

        /// <summary>
        /// The current state of the MlApplicationInstance.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("systemTags")]
        private InputMap<string>? _systemTags;

        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public InputMap<string> SystemTags
        {
            get => _systemTags ?? (_systemTags = new InputMap<string>());
            set => _systemTags = value;
        }

        /// <summary>
        /// The time the the MlApplication was created. An RFC3339 formatted datetime string
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// Time of last MlApplicationInstance update in the format defined by RFC 3339.
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        public MlApplicationInstanceState()
        {
        }
        public static new MlApplicationInstanceState Empty => new MlApplicationInstanceState();
    }
}
