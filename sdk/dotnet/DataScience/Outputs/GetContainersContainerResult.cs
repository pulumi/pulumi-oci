// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataScience.Outputs
{

    [OutputType]
    public sealed class GetContainersContainerResult
    {
        /// <summary>
        /// &lt;b&gt;Filter&lt;/b&gt; results by the container name.
        /// </summary>
        public readonly string ContainerName;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// Description of the container.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// &lt;b&gt;Filter&lt;/b&gt; results by its user-friendly name.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// The family name of the container.
        /// </summary>
        public readonly string FamilyName;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// if true, this returns latest version of container.
        /// </summary>
        public readonly bool IsLatest;
        /// <summary>
        /// &lt;b&gt;Filter&lt;/b&gt; results by the specified lifecycle state. Must be a valid state for the resource type.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Container Tag.
        /// </summary>
        public readonly string Tag;
        /// <summary>
        /// An array of defined metadata details for the model.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetContainersContainerTagConfigurationListResult> TagConfigurationLists;
        /// <summary>
        /// The list of target workload. This Container can be used with given data science resources.
        /// </summary>
        public readonly ImmutableArray<string> TargetWorkloads;
        /// <summary>
        /// The list of usages of this container. This Container can be used for given use-cases.
        /// </summary>
        public readonly ImmutableArray<string> Usages;
        /// <summary>
        /// workload configuration of the container.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetContainersContainerWorkloadConfigurationDetailsListResult> WorkloadConfigurationDetailsLists;

        [OutputConstructor]
        private GetContainersContainerResult(
            string containerName,

            ImmutableDictionary<string, string> definedTags,

            string description,

            string displayName,

            string familyName,

            ImmutableDictionary<string, string> freeformTags,

            bool isLatest,

            string state,

            string tag,

            ImmutableArray<Outputs.GetContainersContainerTagConfigurationListResult> tagConfigurationLists,

            ImmutableArray<string> targetWorkloads,

            ImmutableArray<string> usages,

            ImmutableArray<Outputs.GetContainersContainerWorkloadConfigurationDetailsListResult> workloadConfigurationDetailsLists)
        {
            ContainerName = containerName;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            FamilyName = familyName;
            FreeformTags = freeformTags;
            IsLatest = isLatest;
            State = state;
            Tag = tag;
            TagConfigurationLists = tagConfigurationLists;
            TargetWorkloads = targetWorkloads;
            Usages = usages;
            WorkloadConfigurationDetailsLists = workloadConfigurationDetailsLists;
        }
    }
}
