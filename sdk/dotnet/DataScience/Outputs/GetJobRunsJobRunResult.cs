// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataScience.Outputs
{

    [OutputType]
    public sealed class GetJobRunsJobRunResult
    {
        public readonly bool Asynchronous;
        /// <summary>
        /// &lt;b&gt;Filter&lt;/b&gt; results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// &lt;b&gt;Filter&lt;/b&gt; results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the user who created the resource.
        /// </summary>
        public readonly string CreatedBy;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// &lt;b&gt;Filter&lt;/b&gt; results by its user-friendly name.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// &lt;b&gt;Filter&lt;/b&gt; results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resource type.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The job configuration details
        /// </summary>
        public readonly ImmutableArray<Outputs.GetJobRunsJobRunJobConfigurationOverrideDetailResult> JobConfigurationOverrideDetails;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the job.
        /// </summary>
        public readonly string JobId;
        /// <summary>
        /// The job infrastructure configuration details (shape, block storage, etc.)
        /// </summary>
        public readonly ImmutableArray<Outputs.GetJobRunsJobRunJobInfrastructureConfigurationDetailResult> JobInfrastructureConfigurationDetails;
        /// <summary>
        /// Logging configuration for resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetJobRunsJobRunJobLogConfigurationOverrideDetailResult> JobLogConfigurationOverrideDetails;
        /// <summary>
        /// Details of the state of the job run.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// Customer logging details for job run.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetJobRunsJobRunLogDetailResult> LogDetails;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project to associate the job with.
        /// </summary>
        public readonly string ProjectId;
        /// <summary>
        /// &lt;b&gt;Filter&lt;/b&gt; results by the specified lifecycle state. Must be a valid state for the resource type.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The date and time the job run was accepted in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        public readonly string TimeAccepted;
        /// <summary>
        /// The date and time the job run request was finished in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        public readonly string TimeFinished;
        /// <summary>
        /// The date and time the job run request was started in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        public readonly string TimeStarted;

        [OutputConstructor]
        private GetJobRunsJobRunResult(
            bool asynchronous,

            string compartmentId,

            string createdBy,

            ImmutableDictionary<string, object> definedTags,

            string displayName,

            ImmutableDictionary<string, object> freeformTags,

            string id,

            ImmutableArray<Outputs.GetJobRunsJobRunJobConfigurationOverrideDetailResult> jobConfigurationOverrideDetails,

            string jobId,

            ImmutableArray<Outputs.GetJobRunsJobRunJobInfrastructureConfigurationDetailResult> jobInfrastructureConfigurationDetails,

            ImmutableArray<Outputs.GetJobRunsJobRunJobLogConfigurationOverrideDetailResult> jobLogConfigurationOverrideDetails,

            string lifecycleDetails,

            ImmutableArray<Outputs.GetJobRunsJobRunLogDetailResult> logDetails,

            string projectId,

            string state,

            string timeAccepted,

            string timeFinished,

            string timeStarted)
        {
            Asynchronous = asynchronous;
            CompartmentId = compartmentId;
            CreatedBy = createdBy;
            DefinedTags = definedTags;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            JobConfigurationOverrideDetails = jobConfigurationOverrideDetails;
            JobId = jobId;
            JobInfrastructureConfigurationDetails = jobInfrastructureConfigurationDetails;
            JobLogConfigurationOverrideDetails = jobLogConfigurationOverrideDetails;
            LifecycleDetails = lifecycleDetails;
            LogDetails = logDetails;
            ProjectId = projectId;
            State = state;
            TimeAccepted = timeAccepted;
            TimeFinished = timeFinished;
            TimeStarted = timeStarted;
        }
    }
}
