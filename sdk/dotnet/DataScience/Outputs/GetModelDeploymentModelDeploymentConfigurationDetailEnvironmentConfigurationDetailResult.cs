// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataScience.Outputs
{

    [OutputType]
    public sealed class GetModelDeploymentModelDeploymentConfigurationDetailEnvironmentConfigurationDetailResult
    {
        /// <summary>
        /// The container image run [CMD](https://docs.docker.com/engine/reference/builder/#cmd) as a list of strings. Use `CMD` as arguments to the `ENTRYPOINT` or the only command to run in the absence of an `ENTRYPOINT`. The combined size of `CMD` and `ENTRYPOINT` must be less than 2048 bytes.
        /// </summary>
        public readonly ImmutableArray<string> Cmds;
        /// <summary>
        /// The container image run [ENTRYPOINT](https://docs.docker.com/engine/reference/builder/#entrypoint) as a list of strings. Accept the `CMD` as extra arguments. The combined size of `CMD` and `ENTRYPOINT` must be less than 2048 bytes. More information on how `CMD` and `ENTRYPOINT` interact are [here](https://docs.docker.com/engine/reference/builder/#understand-how-cmd-and-entrypoint-interact).
        /// </summary>
        public readonly ImmutableArray<string> Entrypoints;
        /// <summary>
        /// The environment configuration type
        /// </summary>
        public readonly string EnvironmentConfigurationType;
        /// <summary>
        /// Environment variables to set for the web server container. The size of envVars must be less than 2048 bytes. Key should be under 32 characters. Key should contain only letters, digits and underscore (_) Key should start with a letter. Key should have at least 2 characters. Key should not end with underscore eg. `TEST_` Key if added cannot be empty. Value can be empty. No specific size limits on individual Values. But overall environment variables is limited to 2048 bytes. Key can't be reserved Model Deployment environment variables.
        /// </summary>
        public readonly ImmutableDictionary<string, object> EnvironmentVariables;
        /// <summary>
        /// The port on which the container [HEALTHCHECK](https://docs.docker.com/engine/reference/builder/#healthcheck) would listen. The port can be anything between `1024` and `65535`. The following ports cannot be used `24224`, `8446`, `8447`.
        /// </summary>
        public readonly int HealthCheckPort;
        /// <summary>
        /// The full path to the Oracle Container Repository (OCIR) registry, image, and tag in a canonical format. Acceptable format: `&lt;region&gt;.ocir.io/&lt;registry&gt;/&lt;image&gt;:&lt;tag&gt;` `&lt;region&gt;.ocir.io/&lt;registry&gt;/&lt;image&gt;:&lt;tag&gt;@digest`
        /// </summary>
        public readonly string Image;
        /// <summary>
        /// The digest of the container image. For example, `sha256:881303a6b2738834d795a32b4a98eb0e5e3d1cad590a712d1e04f9b2fa90a030`
        /// </summary>
        public readonly string ImageDigest;
        /// <summary>
        /// The port on which the web server serving the inference is running. The port can be anything between `1024` and `65535`. The following ports cannot be used `24224`, `8446`, `8447`.
        /// </summary>
        public readonly int ServerPort;

        [OutputConstructor]
        private GetModelDeploymentModelDeploymentConfigurationDetailEnvironmentConfigurationDetailResult(
            ImmutableArray<string> cmds,

            ImmutableArray<string> entrypoints,

            string environmentConfigurationType,

            ImmutableDictionary<string, object> environmentVariables,

            int healthCheckPort,

            string image,

            string imageDigest,

            int serverPort)
        {
            Cmds = cmds;
            Entrypoints = entrypoints;
            EnvironmentConfigurationType = environmentConfigurationType;
            EnvironmentVariables = environmentVariables;
            HealthCheckPort = healthCheckPort;
            Image = image;
            ImageDigest = imageDigest;
            ServerPort = serverPort;
        }
    }
}
