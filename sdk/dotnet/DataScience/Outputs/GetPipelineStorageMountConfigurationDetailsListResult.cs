// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataScience.Outputs
{

    [OutputType]
    public sealed class GetPipelineStorageMountConfigurationDetailsListResult
    {
        /// <summary>
        /// The object storage bucket
        /// </summary>
        public readonly string Bucket;
        /// <summary>
        /// The local directory name to be mounted
        /// </summary>
        public readonly string DestinationDirectoryName;
        /// <summary>
        /// The local path of the mounted directory, excluding directory name.
        /// </summary>
        public readonly string DestinationPath;
        /// <summary>
        /// OCID of the export
        /// </summary>
        public readonly string ExportId;
        /// <summary>
        /// OCID of the mount target
        /// </summary>
        public readonly string MountTargetId;
        /// <summary>
        /// The object storage namespace
        /// </summary>
        public readonly string Namespace;
        /// <summary>
        /// Prefix in the bucket to mount
        /// </summary>
        public readonly string Prefix;
        /// <summary>
        /// The type of storage.
        /// </summary>
        public readonly string StorageType;

        [OutputConstructor]
        private GetPipelineStorageMountConfigurationDetailsListResult(
            string bucket,

            string destinationDirectoryName,

            string destinationPath,

            string exportId,

            string mountTargetId,

            string @namespace,

            string prefix,

            string storageType)
        {
            Bucket = bucket;
            DestinationDirectoryName = destinationDirectoryName;
            DestinationPath = destinationPath;
            ExportId = exportId;
            MountTargetId = mountTargetId;
            Namespace = @namespace;
            Prefix = prefix;
            StorageType = storageType;
        }
    }
}
