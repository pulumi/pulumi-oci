// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataScience.Outputs
{

    [OutputType]
    public sealed class NotebookSessionNotebookSessionConfigDetails
    {
        /// <summary>
        /// A notebook session instance is provided with a block storage volume. This specifies the size of the volume in GBs.
        /// </summary>
        public readonly int? BlockStorageSizeInGbs;
        /// <summary>
        /// Details for the notebook session shape configuration.
        /// </summary>
        public readonly Outputs.NotebookSessionNotebookSessionConfigDetailsNotebookSessionShapeConfigDetails? NotebookSessionShapeConfigDetails;
        /// <summary>
        /// The OCID of a Data Science private endpoint.
        /// </summary>
        public readonly string? PrivateEndpointId;
        /// <summary>
        /// The shape used to launch the notebook session compute instance.  The list of available shapes in a given compartment can be retrieved using the `ListNotebookSessionShapes` endpoint.
        /// </summary>
        public readonly string Shape;
        /// <summary>
        /// A notebook session instance is provided with a VNIC for network access.  This specifies the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet to create a VNIC in.  The subnet should be in a VCN with a NAT gateway for egress to the internet.
        /// </summary>
        public readonly string? SubnetId;

        [OutputConstructor]
        private NotebookSessionNotebookSessionConfigDetails(
            int? blockStorageSizeInGbs,

            Outputs.NotebookSessionNotebookSessionConfigDetailsNotebookSessionShapeConfigDetails? notebookSessionShapeConfigDetails,

            string? privateEndpointId,

            string shape,

            string? subnetId)
        {
            BlockStorageSizeInGbs = blockStorageSizeInGbs;
            NotebookSessionShapeConfigDetails = notebookSessionShapeConfigDetails;
            PrivateEndpointId = privateEndpointId;
            Shape = shape;
            SubnetId = subnetId;
        }
    }
}
