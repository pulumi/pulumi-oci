// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataScience.Outputs
{

    [OutputType]
    public sealed class PipelineStorageMountConfigurationDetailsList
    {
        /// <summary>
        /// (Updatable) The object storage bucket
        /// </summary>
        public readonly string? Bucket;
        /// <summary>
        /// (Updatable) The local directory name to be mounted
        /// </summary>
        public readonly string DestinationDirectoryName;
        /// <summary>
        /// (Updatable) The local path of the mounted directory, excluding directory name.
        /// </summary>
        public readonly string? DestinationPath;
        /// <summary>
        /// (Updatable) OCID of the export
        /// </summary>
        public readonly string? ExportId;
        /// <summary>
        /// (Updatable) OCID of the mount target
        /// </summary>
        public readonly string? MountTargetId;
        /// <summary>
        /// (Updatable) The object storage namespace
        /// </summary>
        public readonly string? Namespace;
        /// <summary>
        /// (Updatable) Prefix in the bucket to mount
        /// </summary>
        public readonly string? Prefix;
        /// <summary>
        /// (Updatable) The type of storage.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        public readonly string StorageType;

        [OutputConstructor]
        private PipelineStorageMountConfigurationDetailsList(
            string? bucket,

            string destinationDirectoryName,

            string? destinationPath,

            string? exportId,

            string? mountTargetId,

            string? @namespace,

            string? prefix,

            string storageType)
        {
            Bucket = bucket;
            DestinationDirectoryName = destinationDirectoryName;
            DestinationPath = destinationPath;
            ExportId = exportId;
            MountTargetId = mountTargetId;
            Namespace = @namespace;
            Prefix = prefix;
            StorageType = storageType;
        }
    }
}
