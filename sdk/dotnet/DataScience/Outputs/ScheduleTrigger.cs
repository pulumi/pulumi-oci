// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DataScience.Outputs
{

    [OutputType]
    public sealed class ScheduleTrigger
    {
        /// <summary>
        /// (Updatable) Schedule cron expression
        /// </summary>
        public readonly string? CronExpression;
        /// <summary>
        /// (Updatable) The type of frequency
        /// </summary>
        public readonly string? Frequency;
        /// <summary>
        /// (Updatable) The interval of frequency.
        /// </summary>
        public readonly int? Interval;
        /// <summary>
        /// (Updatable) when true and timeStart is null, system generate a random start time between now and now + interval;  isRandomStartTime can be true if timeStart is null.
        /// </summary>
        public readonly bool? IsRandomStartTime;
        /// <summary>
        /// (Updatable) This recurrence field conforms to RFC-5545 formatting
        /// </summary>
        public readonly string? Recurrence;
        /// <summary>
        /// (Updatable) The schedule end date time, if null, the schedule will never expire. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        public readonly string? TimeEnd;
        /// <summary>
        /// (Updatable) The schedule starting date time, if null, System set the time when schedule is created. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        public readonly string? TimeStart;
        /// <summary>
        /// (Updatable) The schedule trigger type
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        public readonly string TriggerType;

        [OutputConstructor]
        private ScheduleTrigger(
            string? cronExpression,

            string? frequency,

            int? interval,

            bool? isRandomStartTime,

            string? recurrence,

            string? timeEnd,

            string? timeStart,

            string triggerType)
        {
            CronExpression = cronExpression;
            Frequency = frequency;
            Interval = interval;
            IsRandomStartTime = isRandomStartTime;
            Recurrence = recurrence;
            TimeEnd = timeEnd;
            TimeStart = timeStart;
            TriggerType = triggerType;
        }
    }
}
