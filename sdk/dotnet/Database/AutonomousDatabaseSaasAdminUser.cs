// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Database
{
    /// <summary>
    /// This resource creates and enables the Autonomous Database administrative user account in Oracle Cloud Infrastructure Database service.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testAutonomousDatabaseSaasAdminUser = new Oci.Database.AutonomousDatabaseSaasAdminUser("test_autonomous_database_saas_admin_user", new()
    ///     {
    ///         AutonomousDatabaseId = testAutonomousDatabase.Id,
    ///         Password = autonomousDatabaseSaasAdminUserPassword,
    ///         AccessType = autonomousDatabaseSaasAdminUserAccessType,
    ///         Duration = autonomousDatabaseSaasAdminUserDuration,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Import is not supported for this resource.
    /// </summary>
    [OciResourceType("oci:Database/autonomousDatabaseSaasAdminUser:AutonomousDatabaseSaasAdminUser")]
    public partial class AutonomousDatabaseSaasAdminUser : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The access type for the SaaS administrative user. If no access type is specified, the READ_ONLY access type is used.
        /// </summary>
        [Output("accessType")]
        public Output<string?> AccessType { get; private set; } = null!;

        /// <summary>
        /// The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Output("autonomousDatabaseId")]
        public Output<string> AutonomousDatabaseId { get; private set; } = null!;

        /// <summary>
        /// How long, in hours, the SaaS administrative user will stay enabled. If no duration is specified, the default value 1 will be used.
        /// </summary>
        [Output("duration")]
        public Output<int?> Duration { get; private set; } = null!;

        /// <summary>
        /// A strong password for SaaS administrative user. The password must be a minimum of nine (9) characters and contain a minimum of two (2) uppercase, two (2) lowercase, two (2) numbers, and two (2) special characters from _ (underscore), \# (hashtag), or - (dash). The password is mandatory if "secret_id" is not present.
        /// </summary>
        [Output("password")]
        public Output<string?> Password { get; private set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [secret](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts). The secret is mandatory if "password" is not present.
        /// </summary>
        [Output("secretId")]
        public Output<string?> SecretId { get; private set; } = null!;

        /// <summary>
        /// The version of the vault secret. If no version is specified, the latest version will be used.
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("secretVersionNumber")]
        public Output<int?> SecretVersionNumber { get; private set; } = null!;

        [Output("timeSaasAdminUserEnabled")]
        public Output<string> TimeSaasAdminUserEnabled { get; private set; } = null!;


        /// <summary>
        /// Create a AutonomousDatabaseSaasAdminUser resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AutonomousDatabaseSaasAdminUser(string name, AutonomousDatabaseSaasAdminUserArgs args, CustomResourceOptions? options = null)
            : base("oci:Database/autonomousDatabaseSaasAdminUser:AutonomousDatabaseSaasAdminUser", name, args ?? new AutonomousDatabaseSaasAdminUserArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AutonomousDatabaseSaasAdminUser(string name, Input<string> id, AutonomousDatabaseSaasAdminUserState? state = null, CustomResourceOptions? options = null)
            : base("oci:Database/autonomousDatabaseSaasAdminUser:AutonomousDatabaseSaasAdminUser", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "password",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AutonomousDatabaseSaasAdminUser resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AutonomousDatabaseSaasAdminUser Get(string name, Input<string> id, AutonomousDatabaseSaasAdminUserState? state = null, CustomResourceOptions? options = null)
        {
            return new AutonomousDatabaseSaasAdminUser(name, id, state, options);
        }
    }

    public sealed class AutonomousDatabaseSaasAdminUserArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The access type for the SaaS administrative user. If no access type is specified, the READ_ONLY access type is used.
        /// </summary>
        [Input("accessType")]
        public Input<string>? AccessType { get; set; }

        /// <summary>
        /// The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("autonomousDatabaseId", required: true)]
        public Input<string> AutonomousDatabaseId { get; set; } = null!;

        /// <summary>
        /// How long, in hours, the SaaS administrative user will stay enabled. If no duration is specified, the default value 1 will be used.
        /// </summary>
        [Input("duration")]
        public Input<int>? Duration { get; set; }

        [Input("password")]
        private Input<string>? _password;

        /// <summary>
        /// A strong password for SaaS administrative user. The password must be a minimum of nine (9) characters and contain a minimum of two (2) uppercase, two (2) lowercase, two (2) numbers, and two (2) special characters from _ (underscore), \# (hashtag), or - (dash). The password is mandatory if "secret_id" is not present.
        /// </summary>
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [secret](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts). The secret is mandatory if "password" is not present.
        /// </summary>
        [Input("secretId")]
        public Input<string>? SecretId { get; set; }

        /// <summary>
        /// The version of the vault secret. If no version is specified, the latest version will be used.
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("secretVersionNumber")]
        public Input<int>? SecretVersionNumber { get; set; }

        [Input("timeSaasAdminUserEnabled")]
        public Input<string>? TimeSaasAdminUserEnabled { get; set; }

        public AutonomousDatabaseSaasAdminUserArgs()
        {
        }
        public static new AutonomousDatabaseSaasAdminUserArgs Empty => new AutonomousDatabaseSaasAdminUserArgs();
    }

    public sealed class AutonomousDatabaseSaasAdminUserState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The access type for the SaaS administrative user. If no access type is specified, the READ_ONLY access type is used.
        /// </summary>
        [Input("accessType")]
        public Input<string>? AccessType { get; set; }

        /// <summary>
        /// The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("autonomousDatabaseId")]
        public Input<string>? AutonomousDatabaseId { get; set; }

        /// <summary>
        /// How long, in hours, the SaaS administrative user will stay enabled. If no duration is specified, the default value 1 will be used.
        /// </summary>
        [Input("duration")]
        public Input<int>? Duration { get; set; }

        [Input("password")]
        private Input<string>? _password;

        /// <summary>
        /// A strong password for SaaS administrative user. The password must be a minimum of nine (9) characters and contain a minimum of two (2) uppercase, two (2) lowercase, two (2) numbers, and two (2) special characters from _ (underscore), \# (hashtag), or - (dash). The password is mandatory if "secret_id" is not present.
        /// </summary>
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [secret](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts). The secret is mandatory if "password" is not present.
        /// </summary>
        [Input("secretId")]
        public Input<string>? SecretId { get; set; }

        /// <summary>
        /// The version of the vault secret. If no version is specified, the latest version will be used.
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("secretVersionNumber")]
        public Input<int>? SecretVersionNumber { get; set; }

        [Input("timeSaasAdminUserEnabled")]
        public Input<string>? TimeSaasAdminUserEnabled { get; set; }

        public AutonomousDatabaseSaasAdminUserState()
        {
        }
        public static new AutonomousDatabaseSaasAdminUserState Empty => new AutonomousDatabaseSaasAdminUserState();
    }
}
