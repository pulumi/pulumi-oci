// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Database
{
    /// <summary>
    /// This resource provides the Database Management resource in Oracle Cloud Infrastructure Database service.
    /// 
    /// Enable / Update / Disable database management for the specified Oracle Database instance.
    /// 
    /// Database Management requires `USER_NAME`, `PASSWORD_SECRET_ID` and `PRIVATE_END_POINT_ID`.
    /// `database.0.database_management_config` is updated to appropriate managementType and managementStatus for the specified Oracle Database instance.
    /// 
    /// ## Import
    /// 
    /// Import is not supported for this resource.
    /// </summary>
    [OciResourceType("oci:Database/cloudDatabaseManagement:CloudDatabaseManagement")]
    public partial class CloudDatabaseManagement : Pulumi.CustomResource
    {
        [Output("credentialdetails")]
        public Output<Outputs.CloudDatabaseManagementCredentialdetails> Credentialdetails { get; private set; } = null!;

        /// <summary>
        /// The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Output("databaseId")]
        public Output<string> DatabaseId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Use this flag to enable/disable database management
        /// </summary>
        [Output("enableManagement")]
        public Output<bool> EnableManagement { get; private set; } = null!;

        /// <summary>
        /// The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
        /// </summary>
        [Output("kmsKeyId")]
        public Output<string> KmsKeyId { get; private set; } = null!;

        /// <summary>
        /// The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation.
        /// </summary>
        [Output("kmsKeyVersionId")]
        public Output<string> KmsKeyVersionId { get; private set; } = null!;

        /// <summary>
        /// The date and time when the latest database backup was created.
        /// </summary>
        [Output("lastBackupTimestamp")]
        public Output<string> LastBackupTimestamp { get; private set; } = null!;

        /// <summary>
        /// Additional information about the current lifecycle state.
        /// </summary>
        [Output("lifecycleDetails")]
        public Output<string> LifecycleDetails { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Specifies database management type
        /// enum:
        /// - `BASIC`
        /// - `ADVANCED`
        /// </summary>
        [Output("managementType")]
        public Output<string> ManagementType { get; private set; } = null!;

        /// <summary>
        /// The national character set for the database.
        /// </summary>
        [Output("ncharacterSet")]
        public Output<string> NcharacterSet { get; private set; } = null!;

        /// <summary>
        /// The name of the pluggable database. The name must begin with an alphabetic character and can contain a maximum of thirty alphanumeric characters. Special characters are not permitted. Pluggable database should not be same as database name.
        /// </summary>
        [Output("pdbName")]
        public Output<string> PdbName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The private end point [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Output("privateEndPointId")]
        public Output<string> PrivateEndPointId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Database service name
        /// </summary>
        [Output("serviceName")]
        public Output<string> ServiceName { get; private set; } = null!;

        /// <summary>
        /// Specifies a prefix for the `Oracle SID` of the database to be created.
        /// </summary>
        [Output("sidPrefix")]
        public Output<string> SidPrefix { get; private set; } = null!;

        /// <summary>
        /// Point in time recovery timeStamp of the source database at which cloned database system is cloned from the source database system, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
        /// </summary>
        [Output("sourceDatabasePointInTimeRecoveryTimestamp")]
        public Output<string> SourceDatabasePointInTimeRecoveryTimestamp { get; private set; } = null!;

        /// <summary>
        /// The current state of the database.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The date and time the database was created.
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
        /// </summary>
        [Output("vaultId")]
        public Output<string> VaultId { get; private set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster.
        /// </summary>
        [Output("vmClusterId")]
        public Output<string> VmClusterId { get; private set; } = null!;


        /// <summary>
        /// Create a CloudDatabaseManagement resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CloudDatabaseManagement(string name, CloudDatabaseManagementArgs args, CustomResourceOptions? options = null)
            : base("oci:Database/cloudDatabaseManagement:CloudDatabaseManagement", name, args ?? new CloudDatabaseManagementArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CloudDatabaseManagement(string name, Input<string> id, CloudDatabaseManagementState? state = null, CustomResourceOptions? options = null)
            : base("oci:Database/cloudDatabaseManagement:CloudDatabaseManagement", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CloudDatabaseManagement resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CloudDatabaseManagement Get(string name, Input<string> id, CloudDatabaseManagementState? state = null, CustomResourceOptions? options = null)
        {
            return new CloudDatabaseManagement(name, id, state, options);
        }
    }

    public sealed class CloudDatabaseManagementArgs : Pulumi.ResourceArgs
    {
        [Input("credentialdetails", required: true)]
        public Input<Inputs.CloudDatabaseManagementCredentialdetailsArgs> Credentialdetails { get; set; } = null!;

        /// <summary>
        /// The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("databaseId", required: true)]
        public Input<string> DatabaseId { get; set; } = null!;

        /// <summary>
        /// (Updatable) Specifies database management type
        /// enum:
        /// - `BASIC`
        /// - `ADVANCED`
        /// </summary>
        [Input("managementType", required: true)]
        public Input<string> ManagementType { get; set; } = null!;

        /// <summary>
        /// (Updatable) The private end point [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("privateEndPointId", required: true)]
        public Input<string> PrivateEndPointId { get; set; } = null!;

        /// <summary>
        /// (Updatable) Database service name
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        public CloudDatabaseManagementArgs()
        {
        }
    }

    public sealed class CloudDatabaseManagementState : Pulumi.ResourceArgs
    {
        [Input("credentialdetails")]
        public Input<Inputs.CloudDatabaseManagementCredentialdetailsGetArgs>? Credentialdetails { get; set; }

        /// <summary>
        /// The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("databaseId")]
        public Input<string>? DatabaseId { get; set; }

        /// <summary>
        /// (Updatable) Use this flag to enable/disable database management
        /// </summary>
        [Input("enableManagement")]
        public Input<bool>? EnableManagement { get; set; }

        /// <summary>
        /// The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
        /// </summary>
        [Input("kmsKeyId")]
        public Input<string>? KmsKeyId { get; set; }

        /// <summary>
        /// The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation.
        /// </summary>
        [Input("kmsKeyVersionId")]
        public Input<string>? KmsKeyVersionId { get; set; }

        /// <summary>
        /// The date and time when the latest database backup was created.
        /// </summary>
        [Input("lastBackupTimestamp")]
        public Input<string>? LastBackupTimestamp { get; set; }

        /// <summary>
        /// Additional information about the current lifecycle state.
        /// </summary>
        [Input("lifecycleDetails")]
        public Input<string>? LifecycleDetails { get; set; }

        /// <summary>
        /// (Updatable) Specifies database management type
        /// enum:
        /// - `BASIC`
        /// - `ADVANCED`
        /// </summary>
        [Input("managementType")]
        public Input<string>? ManagementType { get; set; }

        /// <summary>
        /// The national character set for the database.
        /// </summary>
        [Input("ncharacterSet")]
        public Input<string>? NcharacterSet { get; set; }

        /// <summary>
        /// The name of the pluggable database. The name must begin with an alphabetic character and can contain a maximum of thirty alphanumeric characters. Special characters are not permitted. Pluggable database should not be same as database name.
        /// </summary>
        [Input("pdbName")]
        public Input<string>? PdbName { get; set; }

        /// <summary>
        /// (Updatable) The private end point [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("privateEndPointId")]
        public Input<string>? PrivateEndPointId { get; set; }

        /// <summary>
        /// (Updatable) Database service name
        /// </summary>
        [Input("serviceName")]
        public Input<string>? ServiceName { get; set; }

        /// <summary>
        /// Specifies a prefix for the `Oracle SID` of the database to be created.
        /// </summary>
        [Input("sidPrefix")]
        public Input<string>? SidPrefix { get; set; }

        /// <summary>
        /// Point in time recovery timeStamp of the source database at which cloned database system is cloned from the source database system, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
        /// </summary>
        [Input("sourceDatabasePointInTimeRecoveryTimestamp")]
        public Input<string>? SourceDatabasePointInTimeRecoveryTimestamp { get; set; }

        /// <summary>
        /// The current state of the database.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The date and time the database was created.
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
        /// </summary>
        [Input("vaultId")]
        public Input<string>? VaultId { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster.
        /// </summary>
        [Input("vmClusterId")]
        public Input<string>? VmClusterId { get; set; }

        public CloudDatabaseManagementState()
        {
        }
    }
}
