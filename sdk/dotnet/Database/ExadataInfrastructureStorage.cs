// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Database
{
    [OciResourceType("oci:Database/exadataInfrastructureStorage:ExadataInfrastructureStorage")]
    public partial class ExadataInfrastructureStorage : Pulumi.CustomResource
    {
        [Output("activatedStorageCount")]
        public Output<int> ActivatedStorageCount { get; private set; } = null!;

        [Output("activationFile")]
        public Output<string?> ActivationFile { get; private set; } = null!;

        [Output("additionalStorageCount")]
        public Output<int> AdditionalStorageCount { get; private set; } = null!;

        [Output("adminNetworkCidr")]
        public Output<string> AdminNetworkCidr { get; private set; } = null!;

        [Output("cloudControlPlaneServer1")]
        public Output<string> CloudControlPlaneServer1 { get; private set; } = null!;

        [Output("cloudControlPlaneServer2")]
        public Output<string> CloudControlPlaneServer2 { get; private set; } = null!;

        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        [Output("computeCount")]
        public Output<int> ComputeCount { get; private set; } = null!;

        [Output("contacts")]
        public Output<ImmutableArray<Outputs.ExadataInfrastructureStorageContact>> Contacts { get; private set; } = null!;

        [Output("corporateProxy")]
        public Output<string> CorporateProxy { get; private set; } = null!;

        [Output("cpusEnabled")]
        public Output<int> CpusEnabled { get; private set; } = null!;

        [Output("csiNumber")]
        public Output<string> CsiNumber { get; private set; } = null!;

        [Output("dataStorageSizeInTbs")]
        public Output<double> DataStorageSizeInTbs { get; private set; } = null!;

        [Output("dbNodeStorageSizeInGbs")]
        public Output<int> DbNodeStorageSizeInGbs { get; private set; } = null!;

        [Output("definedTags")]
        public Output<ImmutableDictionary<string, object>> DefinedTags { get; private set; } = null!;

        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        [Output("dnsServers")]
        public Output<ImmutableArray<string>> DnsServers { get; private set; } = null!;

        [Output("exadataInfrastructureId")]
        public Output<string?> ExadataInfrastructureId { get; private set; } = null!;

        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, object>> FreeformTags { get; private set; } = null!;

        [Output("gateway")]
        public Output<string> Gateway { get; private set; } = null!;

        [Output("infiniBandNetworkCidr")]
        public Output<string> InfiniBandNetworkCidr { get; private set; } = null!;

        [Output("lifecycleDetails")]
        public Output<string> LifecycleDetails { get; private set; } = null!;

        [Output("maintenanceSloStatus")]
        public Output<string> MaintenanceSloStatus { get; private set; } = null!;

        [Output("maintenanceWindow")]
        public Output<Outputs.ExadataInfrastructureStorageMaintenanceWindow> MaintenanceWindow { get; private set; } = null!;

        [Output("maxCpuCount")]
        public Output<int> MaxCpuCount { get; private set; } = null!;

        [Output("maxDataStorageInTbs")]
        public Output<double> MaxDataStorageInTbs { get; private set; } = null!;

        [Output("maxDbNodeStorageInGbs")]
        public Output<int> MaxDbNodeStorageInGbs { get; private set; } = null!;

        [Output("maxMemoryInGbs")]
        public Output<int> MaxMemoryInGbs { get; private set; } = null!;

        [Output("memorySizeInGbs")]
        public Output<int> MemorySizeInGbs { get; private set; } = null!;

        [Output("netmask")]
        public Output<string> Netmask { get; private set; } = null!;

        [Output("ntpServers")]
        public Output<ImmutableArray<string>> NtpServers { get; private set; } = null!;

        [Output("shape")]
        public Output<string> Shape { get; private set; } = null!;

        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        [Output("storageCount")]
        public Output<int> StorageCount { get; private set; } = null!;

        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        [Output("timeZone")]
        public Output<string> TimeZone { get; private set; } = null!;


        /// <summary>
        /// Create a ExadataInfrastructureStorage resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ExadataInfrastructureStorage(string name, ExadataInfrastructureStorageArgs args, CustomResourceOptions? options = null)
            : base("oci:Database/exadataInfrastructureStorage:ExadataInfrastructureStorage", name, args ?? new ExadataInfrastructureStorageArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ExadataInfrastructureStorage(string name, Input<string> id, ExadataInfrastructureStorageState? state = null, CustomResourceOptions? options = null)
            : base("oci:Database/exadataInfrastructureStorage:ExadataInfrastructureStorage", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ExadataInfrastructureStorage resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ExadataInfrastructureStorage Get(string name, Input<string> id, ExadataInfrastructureStorageState? state = null, CustomResourceOptions? options = null)
        {
            return new ExadataInfrastructureStorage(name, id, state, options);
        }
    }

    public sealed class ExadataInfrastructureStorageArgs : Pulumi.ResourceArgs
    {
        [Input("activationFile")]
        public Input<string>? ActivationFile { get; set; }

        [Input("adminNetworkCidr", required: true)]
        public Input<string> AdminNetworkCidr { get; set; } = null!;

        [Input("cloudControlPlaneServer1", required: true)]
        public Input<string> CloudControlPlaneServer1 { get; set; } = null!;

        [Input("cloudControlPlaneServer2", required: true)]
        public Input<string> CloudControlPlaneServer2 { get; set; } = null!;

        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("computeCount")]
        public Input<int>? ComputeCount { get; set; }

        [Input("contacts")]
        private InputList<Inputs.ExadataInfrastructureStorageContactArgs>? _contacts;
        public InputList<Inputs.ExadataInfrastructureStorageContactArgs> Contacts
        {
            get => _contacts ?? (_contacts = new InputList<Inputs.ExadataInfrastructureStorageContactArgs>());
            set => _contacts = value;
        }

        [Input("corporateProxy")]
        public Input<string>? CorporateProxy { get; set; }

        [Input("definedTags")]
        private InputMap<object>? _definedTags;
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        [Input("dnsServers", required: true)]
        private InputList<string>? _dnsServers;
        public InputList<string> DnsServers
        {
            get => _dnsServers ?? (_dnsServers = new InputList<string>());
            set => _dnsServers = value;
        }

        [Input("exadataInfrastructureId")]
        public Input<string>? ExadataInfrastructureId { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        [Input("gateway", required: true)]
        public Input<string> Gateway { get; set; } = null!;

        [Input("infiniBandNetworkCidr", required: true)]
        public Input<string> InfiniBandNetworkCidr { get; set; } = null!;

        [Input("maintenanceWindow")]
        public Input<Inputs.ExadataInfrastructureStorageMaintenanceWindowArgs>? MaintenanceWindow { get; set; }

        [Input("netmask", required: true)]
        public Input<string> Netmask { get; set; } = null!;

        [Input("ntpServers", required: true)]
        private InputList<string>? _ntpServers;
        public InputList<string> NtpServers
        {
            get => _ntpServers ?? (_ntpServers = new InputList<string>());
            set => _ntpServers = value;
        }

        [Input("shape", required: true)]
        public Input<string> Shape { get; set; } = null!;

        [Input("storageCount")]
        public Input<int>? StorageCount { get; set; }

        [Input("timeZone", required: true)]
        public Input<string> TimeZone { get; set; } = null!;

        public ExadataInfrastructureStorageArgs()
        {
        }
    }

    public sealed class ExadataInfrastructureStorageState : Pulumi.ResourceArgs
    {
        [Input("activatedStorageCount")]
        public Input<int>? ActivatedStorageCount { get; set; }

        [Input("activationFile")]
        public Input<string>? ActivationFile { get; set; }

        [Input("additionalStorageCount")]
        public Input<int>? AdditionalStorageCount { get; set; }

        [Input("adminNetworkCidr")]
        public Input<string>? AdminNetworkCidr { get; set; }

        [Input("cloudControlPlaneServer1")]
        public Input<string>? CloudControlPlaneServer1 { get; set; }

        [Input("cloudControlPlaneServer2")]
        public Input<string>? CloudControlPlaneServer2 { get; set; }

        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("computeCount")]
        public Input<int>? ComputeCount { get; set; }

        [Input("contacts")]
        private InputList<Inputs.ExadataInfrastructureStorageContactGetArgs>? _contacts;
        public InputList<Inputs.ExadataInfrastructureStorageContactGetArgs> Contacts
        {
            get => _contacts ?? (_contacts = new InputList<Inputs.ExadataInfrastructureStorageContactGetArgs>());
            set => _contacts = value;
        }

        [Input("corporateProxy")]
        public Input<string>? CorporateProxy { get; set; }

        [Input("cpusEnabled")]
        public Input<int>? CpusEnabled { get; set; }

        [Input("csiNumber")]
        public Input<string>? CsiNumber { get; set; }

        [Input("dataStorageSizeInTbs")]
        public Input<double>? DataStorageSizeInTbs { get; set; }

        [Input("dbNodeStorageSizeInGbs")]
        public Input<int>? DbNodeStorageSizeInGbs { get; set; }

        [Input("definedTags")]
        private InputMap<object>? _definedTags;
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("dnsServers")]
        private InputList<string>? _dnsServers;
        public InputList<string> DnsServers
        {
            get => _dnsServers ?? (_dnsServers = new InputList<string>());
            set => _dnsServers = value;
        }

        [Input("exadataInfrastructureId")]
        public Input<string>? ExadataInfrastructureId { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        [Input("gateway")]
        public Input<string>? Gateway { get; set; }

        [Input("infiniBandNetworkCidr")]
        public Input<string>? InfiniBandNetworkCidr { get; set; }

        [Input("lifecycleDetails")]
        public Input<string>? LifecycleDetails { get; set; }

        [Input("maintenanceSloStatus")]
        public Input<string>? MaintenanceSloStatus { get; set; }

        [Input("maintenanceWindow")]
        public Input<Inputs.ExadataInfrastructureStorageMaintenanceWindowGetArgs>? MaintenanceWindow { get; set; }

        [Input("maxCpuCount")]
        public Input<int>? MaxCpuCount { get; set; }

        [Input("maxDataStorageInTbs")]
        public Input<double>? MaxDataStorageInTbs { get; set; }

        [Input("maxDbNodeStorageInGbs")]
        public Input<int>? MaxDbNodeStorageInGbs { get; set; }

        [Input("maxMemoryInGbs")]
        public Input<int>? MaxMemoryInGbs { get; set; }

        [Input("memorySizeInGbs")]
        public Input<int>? MemorySizeInGbs { get; set; }

        [Input("netmask")]
        public Input<string>? Netmask { get; set; }

        [Input("ntpServers")]
        private InputList<string>? _ntpServers;
        public InputList<string> NtpServers
        {
            get => _ntpServers ?? (_ntpServers = new InputList<string>());
            set => _ntpServers = value;
        }

        [Input("shape")]
        public Input<string>? Shape { get; set; }

        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("storageCount")]
        public Input<int>? StorageCount { get; set; }

        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        [Input("timeZone")]
        public Input<string>? TimeZone { get; set; }

        public ExadataInfrastructureStorageState()
        {
        }
    }
}
