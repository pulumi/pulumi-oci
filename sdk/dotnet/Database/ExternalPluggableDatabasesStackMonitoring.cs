// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Database
{
    /// <summary>
    /// This resource provides the Externalpluggabledatabases Stack Monitoring resource in Oracle Cloud Infrastructure Database service.
    /// 
    /// Enable Stack Monitoring for the external pluggable database.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testExternalpluggabledatabasesStackMonitoring = new Oci.Database.ExternalPluggableDatabasesStackMonitoring("test_externalpluggabledatabases_stack_monitoring", new()
    ///     {
    ///         ExternalDatabaseConnectorId = testExternalDatabaseConnector.Id,
    ///         ExternalPluggableDatabaseId = testExternalPluggableDatabase.Id,
    ///         EnableStackMonitoring = true,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Import is not supported for this resource.
    /// </summary>
    [OciResourceType("oci:Database/externalPluggableDatabasesStackMonitoring:ExternalPluggableDatabasesStackMonitoring")]
    public partial class ExternalPluggableDatabasesStackMonitoring : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) Enabling Stack Monitoring on External Pluggable Databases . Requires boolean value "true" or "false".
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("enableStackMonitoring")]
        public Output<bool> EnableStackMonitoring { get; private set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
        /// </summary>
        [Output("externalDatabaseConnectorId")]
        public Output<string> ExternalDatabaseConnectorId { get; private set; } = null!;

        /// <summary>
        /// The ExternalPluggableDatabaseId [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Output("externalPluggableDatabaseId")]
        public Output<string> ExternalPluggableDatabaseId { get; private set; } = null!;


        /// <summary>
        /// Create a ExternalPluggableDatabasesStackMonitoring resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ExternalPluggableDatabasesStackMonitoring(string name, ExternalPluggableDatabasesStackMonitoringArgs args, CustomResourceOptions? options = null)
            : base("oci:Database/externalPluggableDatabasesStackMonitoring:ExternalPluggableDatabasesStackMonitoring", name, args ?? new ExternalPluggableDatabasesStackMonitoringArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ExternalPluggableDatabasesStackMonitoring(string name, Input<string> id, ExternalPluggableDatabasesStackMonitoringState? state = null, CustomResourceOptions? options = null)
            : base("oci:Database/externalPluggableDatabasesStackMonitoring:ExternalPluggableDatabasesStackMonitoring", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ExternalPluggableDatabasesStackMonitoring resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ExternalPluggableDatabasesStackMonitoring Get(string name, Input<string> id, ExternalPluggableDatabasesStackMonitoringState? state = null, CustomResourceOptions? options = null)
        {
            return new ExternalPluggableDatabasesStackMonitoring(name, id, state, options);
        }
    }

    public sealed class ExternalPluggableDatabasesStackMonitoringArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) Enabling Stack Monitoring on External Pluggable Databases . Requires boolean value "true" or "false".
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("enableStackMonitoring", required: true)]
        public Input<bool> EnableStackMonitoring { get; set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
        /// </summary>
        [Input("externalDatabaseConnectorId", required: true)]
        public Input<string> ExternalDatabaseConnectorId { get; set; } = null!;

        /// <summary>
        /// The ExternalPluggableDatabaseId [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("externalPluggableDatabaseId", required: true)]
        public Input<string> ExternalPluggableDatabaseId { get; set; } = null!;

        public ExternalPluggableDatabasesStackMonitoringArgs()
        {
        }
        public static new ExternalPluggableDatabasesStackMonitoringArgs Empty => new ExternalPluggableDatabasesStackMonitoringArgs();
    }

    public sealed class ExternalPluggableDatabasesStackMonitoringState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) Enabling Stack Monitoring on External Pluggable Databases . Requires boolean value "true" or "false".
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("enableStackMonitoring")]
        public Input<bool>? EnableStackMonitoring { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
        /// </summary>
        [Input("externalDatabaseConnectorId")]
        public Input<string>? ExternalDatabaseConnectorId { get; set; }

        /// <summary>
        /// The ExternalPluggableDatabaseId [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("externalPluggableDatabaseId")]
        public Input<string>? ExternalPluggableDatabaseId { get; set; }

        public ExternalPluggableDatabasesStackMonitoringState()
        {
        }
        public static new ExternalPluggableDatabasesStackMonitoringState Empty => new ExternalPluggableDatabasesStackMonitoringState();
    }
}
