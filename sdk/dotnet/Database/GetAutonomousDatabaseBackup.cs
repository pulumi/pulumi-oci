// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Database
{
    public static class GetAutonomousDatabaseBackup
    {
        /// <summary>
        /// This data source provides details about a specific Autonomous Database Backup resource in Oracle Cloud Infrastructure Database service.
        /// 
        /// Gets information about the specified Autonomous Database backup.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAutonomousDatabaseBackup = Oci.Database.GetAutonomousDatabaseBackup.Invoke(new()
        ///     {
        ///         AutonomousDatabaseBackupId = testAutonomousDatabaseBackupOciDatabaseAutonomousDatabaseBackup.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetAutonomousDatabaseBackupResult> InvokeAsync(GetAutonomousDatabaseBackupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAutonomousDatabaseBackupResult>("oci:Database/getAutonomousDatabaseBackup:getAutonomousDatabaseBackup", args ?? new GetAutonomousDatabaseBackupArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Autonomous Database Backup resource in Oracle Cloud Infrastructure Database service.
        /// 
        /// Gets information about the specified Autonomous Database backup.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAutonomousDatabaseBackup = Oci.Database.GetAutonomousDatabaseBackup.Invoke(new()
        ///     {
        ///         AutonomousDatabaseBackupId = testAutonomousDatabaseBackupOciDatabaseAutonomousDatabaseBackup.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAutonomousDatabaseBackupResult> Invoke(GetAutonomousDatabaseBackupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAutonomousDatabaseBackupResult>("oci:Database/getAutonomousDatabaseBackup:getAutonomousDatabaseBackup", args ?? new GetAutonomousDatabaseBackupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAutonomousDatabaseBackupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous Database backup.
        /// </summary>
        [Input("autonomousDatabaseBackupId", required: true)]
        public string AutonomousDatabaseBackupId { get; set; } = null!;

        public GetAutonomousDatabaseBackupArgs()
        {
        }
        public static new GetAutonomousDatabaseBackupArgs Empty => new GetAutonomousDatabaseBackupArgs();
    }

    public sealed class GetAutonomousDatabaseBackupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous Database backup.
        /// </summary>
        [Input("autonomousDatabaseBackupId", required: true)]
        public Input<string> AutonomousDatabaseBackupId { get; set; } = null!;

        public GetAutonomousDatabaseBackupInvokeArgs()
        {
        }
        public static new GetAutonomousDatabaseBackupInvokeArgs Empty => new GetAutonomousDatabaseBackupInvokeArgs();
    }


    [OutputType]
    public sealed class GetAutonomousDatabaseBackupResult
    {
        public readonly string AutonomousDatabaseBackupId;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous Database.
        /// </summary>
        public readonly string AutonomousDatabaseId;
        /// <summary>
        /// Backup destination details
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAutonomousDatabaseBackupBackupDestinationDetailResult> BackupDestinationDetails;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The size of the database in terabytes at the time the backup was taken.
        /// </summary>
        public readonly double DatabaseSizeInTbs;
        /// <summary>
        /// A valid Oracle Database version for Autonomous Database.
        /// </summary>
        public readonly string DbVersion;
        /// <summary>
        /// The user-friendly name for the backup. The name does not have to be unique.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous Database backup.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Indicates whether the backup is user-initiated or automatic.
        /// </summary>
        public readonly bool IsAutomatic;
        public readonly bool IsLongTermBackup;
        /// <summary>
        /// Indicates whether the backup can be used to restore the associated Autonomous Database.
        /// </summary>
        public readonly bool IsRestorable;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store of Oracle Vault.
        /// </summary>
        public readonly string KeyStoreId;
        /// <summary>
        /// The wallet name for Oracle Key Vault.
        /// </summary>
        public readonly string KeyStoreWalletName;
        /// <summary>
        /// The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
        /// </summary>
        public readonly string KmsKeyId;
        /// <summary>
        /// The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation. Autonomous Database Serverless does not use key versions, hence is not applicable for Autonomous Database Serverless instances.
        /// </summary>
        public readonly string KmsKeyVersionId;
        /// <summary>
        /// Additional information about the current lifecycle state.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// Retention period, in days, for long-term backups
        /// </summary>
        public readonly int RetentionPeriodInDays;
        /// <summary>
        /// The backup size in terrabytes (TB).
        /// </summary>
        public readonly double SizeInTbs;
        /// <summary>
        /// The current state of the backup.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Timestamp until when the backup will be available
        /// </summary>
        public readonly string TimeAvailableTill;
        /// <summary>
        /// The date and time the backup completed.
        /// </summary>
        public readonly string TimeEnded;
        /// <summary>
        /// The date and time the backup started.
        /// </summary>
        public readonly string TimeStarted;
        /// <summary>
        /// The type of backup.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts). This parameter and `secretId` are required for Customer Managed Keys.
        /// </summary>
        public readonly string VaultId;

        [OutputConstructor]
        private GetAutonomousDatabaseBackupResult(
            string autonomousDatabaseBackupId,

            string autonomousDatabaseId,

            ImmutableArray<Outputs.GetAutonomousDatabaseBackupBackupDestinationDetailResult> backupDestinationDetails,

            string compartmentId,

            double databaseSizeInTbs,

            string dbVersion,

            string displayName,

            string id,

            bool isAutomatic,

            bool isLongTermBackup,

            bool isRestorable,

            string keyStoreId,

            string keyStoreWalletName,

            string kmsKeyId,

            string kmsKeyVersionId,

            string lifecycleDetails,

            int retentionPeriodInDays,

            double sizeInTbs,

            string state,

            string timeAvailableTill,

            string timeEnded,

            string timeStarted,

            string type,

            string vaultId)
        {
            AutonomousDatabaseBackupId = autonomousDatabaseBackupId;
            AutonomousDatabaseId = autonomousDatabaseId;
            BackupDestinationDetails = backupDestinationDetails;
            CompartmentId = compartmentId;
            DatabaseSizeInTbs = databaseSizeInTbs;
            DbVersion = dbVersion;
            DisplayName = displayName;
            Id = id;
            IsAutomatic = isAutomatic;
            IsLongTermBackup = isLongTermBackup;
            IsRestorable = isRestorable;
            KeyStoreId = keyStoreId;
            KeyStoreWalletName = keyStoreWalletName;
            KmsKeyId = kmsKeyId;
            KmsKeyVersionId = kmsKeyVersionId;
            LifecycleDetails = lifecycleDetails;
            RetentionPeriodInDays = retentionPeriodInDays;
            SizeInTbs = sizeInTbs;
            State = state;
            TimeAvailableTill = timeAvailableTill;
            TimeEnded = timeEnded;
            TimeStarted = timeStarted;
            Type = type;
            VaultId = vaultId;
        }
    }
}
