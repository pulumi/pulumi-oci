// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Database
{
    public static class GetAutonomousVmClusterResourceUsage
    {
        /// <summary>
        /// This data source provides details about a specific Autonomous Vm Cluster Resource Usage resource in Oracle Cloud Infrastructure Database service.
        /// 
        /// Get the resource usage details for the specified Autonomous Exadata VM cluster.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAutonomousVmClusterResourceUsage = Oci.Database.GetAutonomousVmClusterResourceUsage.Invoke(new()
        ///     {
        ///         AutonomousVmClusterId = testAutonomousVmCluster.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetAutonomousVmClusterResourceUsageResult> InvokeAsync(GetAutonomousVmClusterResourceUsageArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAutonomousVmClusterResourceUsageResult>("oci:Database/getAutonomousVmClusterResourceUsage:getAutonomousVmClusterResourceUsage", args ?? new GetAutonomousVmClusterResourceUsageArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Autonomous Vm Cluster Resource Usage resource in Oracle Cloud Infrastructure Database service.
        /// 
        /// Get the resource usage details for the specified Autonomous Exadata VM cluster.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAutonomousVmClusterResourceUsage = Oci.Database.GetAutonomousVmClusterResourceUsage.Invoke(new()
        ///     {
        ///         AutonomousVmClusterId = testAutonomousVmCluster.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAutonomousVmClusterResourceUsageResult> Invoke(GetAutonomousVmClusterResourceUsageInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAutonomousVmClusterResourceUsageResult>("oci:Database/getAutonomousVmClusterResourceUsage:getAutonomousVmClusterResourceUsage", args ?? new GetAutonomousVmClusterResourceUsageInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Autonomous Vm Cluster Resource Usage resource in Oracle Cloud Infrastructure Database service.
        /// 
        /// Get the resource usage details for the specified Autonomous Exadata VM cluster.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAutonomousVmClusterResourceUsage = Oci.Database.GetAutonomousVmClusterResourceUsage.Invoke(new()
        ///     {
        ///         AutonomousVmClusterId = testAutonomousVmCluster.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAutonomousVmClusterResourceUsageResult> Invoke(GetAutonomousVmClusterResourceUsageInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAutonomousVmClusterResourceUsageResult>("oci:Database/getAutonomousVmClusterResourceUsage:getAutonomousVmClusterResourceUsage", args ?? new GetAutonomousVmClusterResourceUsageInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAutonomousVmClusterResourceUsageArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The autonomous VM cluster [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("autonomousVmClusterId", required: true)]
        public string AutonomousVmClusterId { get; set; } = null!;

        public GetAutonomousVmClusterResourceUsageArgs()
        {
        }
        public static new GetAutonomousVmClusterResourceUsageArgs Empty => new GetAutonomousVmClusterResourceUsageArgs();
    }

    public sealed class GetAutonomousVmClusterResourceUsageInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The autonomous VM cluster [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("autonomousVmClusterId", required: true)]
        public Input<string> AutonomousVmClusterId { get; set; } = null!;

        public GetAutonomousVmClusterResourceUsageInvokeArgs()
        {
        }
        public static new GetAutonomousVmClusterResourceUsageInvokeArgs Empty => new GetAutonomousVmClusterResourceUsageInvokeArgs();
    }


    [OutputType]
    public sealed class GetAutonomousVmClusterResourceUsageResult
    {
        /// <summary>
        /// The data disk group size allocated for Autonomous Databases, in TBs.
        /// </summary>
        public readonly double AutonomousDataStorageSizeInTbs;
        public readonly string AutonomousVmClusterId;
        /// <summary>
        /// List of autonomous vm cluster resource usages.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAutonomousVmClusterResourceUsageAutonomousVmResourceUsageResult> AutonomousVmResourceUsages;
        /// <summary>
        /// The data disk group size available for Autonomous Databases, in TBs.
        /// </summary>
        public readonly double AvailableAutonomousDataStorageSizeInTbs;
        /// <summary>
        /// The number of CPU cores available.
        /// </summary>
        public readonly double AvailableCpus;
        /// <summary>
        /// The local node storage allocated in GBs.
        /// </summary>
        public readonly int DbNodeStorageSizeInGbs;
        /// <summary>
        /// The user-friendly name for the Autonomous VM cluster. The name does not need to be unique.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Total exadata storage allocated for the Autonomous VM Cluster. DATA + RECOVERY + SPARSE + any overhead in TBs.
        /// </summary>
        public readonly double ExadataStorageInTbs;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// If true, database backup on local Exadata storage is configured for the Autonomous VM cluster. If false, database backup on local Exadata storage is not available in the Autonomous VM cluster.
        /// </summary>
        public readonly bool IsLocalBackupEnabled;
        /// <summary>
        /// The amount of memory (in GBs) to be enabled per each CPU core.
        /// </summary>
        public readonly int MemoryPerOracleComputeUnitInGbs;
        /// <summary>
        /// The memory allocated in GBs.
        /// </summary>
        public readonly int MemorySizeInGbs;
        /// <summary>
        /// The number of non-provisionable Autonomous Container Databases in an Autonomous VM Cluster.
        /// </summary>
        public readonly int NonProvisionableAutonomousContainerDatabases;
        /// <summary>
        /// The number of provisionable Autonomous Container Databases in an Autonomous VM Cluster.
        /// </summary>
        public readonly int ProvisionableAutonomousContainerDatabases;
        /// <summary>
        /// The number of provisioned Autonomous Container Databases in an Autonomous VM Cluster.
        /// </summary>
        public readonly int ProvisionedAutonomousContainerDatabases;
        /// <summary>
        /// The number of CPUs provisioned in an Autonomous VM Cluster.
        /// </summary>
        public readonly double ProvisionedCpus;
        /// <summary>
        /// CPU cores that continue to be included in the count of OCPUs available to the Autonomous Container Database even after one of its Autonomous Database is terminated or scaled down. You can release them to the available OCPUs at its parent AVMC level by restarting the Autonomous Container Database.
        /// </summary>
        public readonly double ReclaimableCpus;
        /// <summary>
        /// The number of CPUs reserved in an Autonomous VM Cluster.
        /// </summary>
        public readonly double ReservedCpus;
        /// <summary>
        /// The total number of Autonomous Container Databases that can be created.
        /// </summary>
        public readonly int TotalContainerDatabases;
        /// <summary>
        /// The number of CPU cores enabled on the Autonomous VM cluster.
        /// </summary>
        public readonly double TotalCpus;
        /// <summary>
        /// The data disk group size used for Autonomous Databases, in TBs.
        /// </summary>
        public readonly double UsedAutonomousDataStorageSizeInTbs;
        /// <summary>
        /// The number of CPU cores alloted to the Autonomous Container Databases in an Autonomous VM cluster.
        /// </summary>
        public readonly double UsedCpus;

        [OutputConstructor]
        private GetAutonomousVmClusterResourceUsageResult(
            double autonomousDataStorageSizeInTbs,

            string autonomousVmClusterId,

            ImmutableArray<Outputs.GetAutonomousVmClusterResourceUsageAutonomousVmResourceUsageResult> autonomousVmResourceUsages,

            double availableAutonomousDataStorageSizeInTbs,

            double availableCpus,

            int dbNodeStorageSizeInGbs,

            string displayName,

            double exadataStorageInTbs,

            string id,

            bool isLocalBackupEnabled,

            int memoryPerOracleComputeUnitInGbs,

            int memorySizeInGbs,

            int nonProvisionableAutonomousContainerDatabases,

            int provisionableAutonomousContainerDatabases,

            int provisionedAutonomousContainerDatabases,

            double provisionedCpus,

            double reclaimableCpus,

            double reservedCpus,

            int totalContainerDatabases,

            double totalCpus,

            double usedAutonomousDataStorageSizeInTbs,

            double usedCpus)
        {
            AutonomousDataStorageSizeInTbs = autonomousDataStorageSizeInTbs;
            AutonomousVmClusterId = autonomousVmClusterId;
            AutonomousVmResourceUsages = autonomousVmResourceUsages;
            AvailableAutonomousDataStorageSizeInTbs = availableAutonomousDataStorageSizeInTbs;
            AvailableCpus = availableCpus;
            DbNodeStorageSizeInGbs = dbNodeStorageSizeInGbs;
            DisplayName = displayName;
            ExadataStorageInTbs = exadataStorageInTbs;
            Id = id;
            IsLocalBackupEnabled = isLocalBackupEnabled;
            MemoryPerOracleComputeUnitInGbs = memoryPerOracleComputeUnitInGbs;
            MemorySizeInGbs = memorySizeInGbs;
            NonProvisionableAutonomousContainerDatabases = nonProvisionableAutonomousContainerDatabases;
            ProvisionableAutonomousContainerDatabases = provisionableAutonomousContainerDatabases;
            ProvisionedAutonomousContainerDatabases = provisionedAutonomousContainerDatabases;
            ProvisionedCpus = provisionedCpus;
            ReclaimableCpus = reclaimableCpus;
            ReservedCpus = reservedCpus;
            TotalContainerDatabases = totalContainerDatabases;
            TotalCpus = totalCpus;
            UsedAutonomousDataStorageSizeInTbs = usedAutonomousDataStorageSizeInTbs;
            UsedCpus = usedCpus;
        }
    }
}
