// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Database
{
    public static class GetDatabaseUpgradeHistoryEntries
    {
        /// <summary>
        /// This data source provides the list of Database Upgrade History Entries in Oracle Cloud Infrastructure Database service.
        /// 
        /// Gets the upgrade history for a specified database in a bare metal or virtual machine DB system.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDatabaseUpgradeHistoryEntries = Oci.Database.GetDatabaseUpgradeHistoryEntries.Invoke(new()
        ///     {
        ///         DatabaseId = testDatabase.Id,
        ///         State = databaseUpgradeHistoryEntryState,
        ///         UpgradeAction = databaseUpgradeHistoryEntryUpgradeAction,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetDatabaseUpgradeHistoryEntriesResult> InvokeAsync(GetDatabaseUpgradeHistoryEntriesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDatabaseUpgradeHistoryEntriesResult>("oci:Database/getDatabaseUpgradeHistoryEntries:getDatabaseUpgradeHistoryEntries", args ?? new GetDatabaseUpgradeHistoryEntriesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Database Upgrade History Entries in Oracle Cloud Infrastructure Database service.
        /// 
        /// Gets the upgrade history for a specified database in a bare metal or virtual machine DB system.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDatabaseUpgradeHistoryEntries = Oci.Database.GetDatabaseUpgradeHistoryEntries.Invoke(new()
        ///     {
        ///         DatabaseId = testDatabase.Id,
        ///         State = databaseUpgradeHistoryEntryState,
        ///         UpgradeAction = databaseUpgradeHistoryEntryUpgradeAction,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDatabaseUpgradeHistoryEntriesResult> Invoke(GetDatabaseUpgradeHistoryEntriesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDatabaseUpgradeHistoryEntriesResult>("oci:Database/getDatabaseUpgradeHistoryEntries:getDatabaseUpgradeHistoryEntries", args ?? new GetDatabaseUpgradeHistoryEntriesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Database Upgrade History Entries in Oracle Cloud Infrastructure Database service.
        /// 
        /// Gets the upgrade history for a specified database in a bare metal or virtual machine DB system.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDatabaseUpgradeHistoryEntries = Oci.Database.GetDatabaseUpgradeHistoryEntries.Invoke(new()
        ///     {
        ///         DatabaseId = testDatabase.Id,
        ///         State = databaseUpgradeHistoryEntryState,
        ///         UpgradeAction = databaseUpgradeHistoryEntryUpgradeAction,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDatabaseUpgradeHistoryEntriesResult> Invoke(GetDatabaseUpgradeHistoryEntriesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDatabaseUpgradeHistoryEntriesResult>("oci:Database/getDatabaseUpgradeHistoryEntries:getDatabaseUpgradeHistoryEntries", args ?? new GetDatabaseUpgradeHistoryEntriesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDatabaseUpgradeHistoryEntriesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("databaseId", required: true)]
        public string DatabaseId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetDatabaseUpgradeHistoryEntriesFilterArgs>? _filters;
        public List<Inputs.GetDatabaseUpgradeHistoryEntriesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetDatabaseUpgradeHistoryEntriesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only upgradeHistoryEntries that match the given lifecycle state exactly.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        /// <summary>
        /// A filter to return only upgradeHistoryEntries that match the specified Upgrade Action.
        /// </summary>
        [Input("upgradeAction")]
        public string? UpgradeAction { get; set; }

        public GetDatabaseUpgradeHistoryEntriesArgs()
        {
        }
        public static new GetDatabaseUpgradeHistoryEntriesArgs Empty => new GetDatabaseUpgradeHistoryEntriesArgs();
    }

    public sealed class GetDatabaseUpgradeHistoryEntriesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("databaseId", required: true)]
        public Input<string> DatabaseId { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetDatabaseUpgradeHistoryEntriesFilterInputArgs>? _filters;
        public InputList<Inputs.GetDatabaseUpgradeHistoryEntriesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetDatabaseUpgradeHistoryEntriesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only upgradeHistoryEntries that match the given lifecycle state exactly.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// A filter to return only upgradeHistoryEntries that match the specified Upgrade Action.
        /// </summary>
        [Input("upgradeAction")]
        public Input<string>? UpgradeAction { get; set; }

        public GetDatabaseUpgradeHistoryEntriesInvokeArgs()
        {
        }
        public static new GetDatabaseUpgradeHistoryEntriesInvokeArgs Empty => new GetDatabaseUpgradeHistoryEntriesInvokeArgs();
    }


    [OutputType]
    public sealed class GetDatabaseUpgradeHistoryEntriesResult
    {
        public readonly string DatabaseId;
        /// <summary>
        /// The list of database_upgrade_history_entries.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDatabaseUpgradeHistoryEntriesDatabaseUpgradeHistoryEntryResult> DatabaseUpgradeHistoryEntries;
        public readonly ImmutableArray<Outputs.GetDatabaseUpgradeHistoryEntriesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Status of database upgrade history SUCCEEDED|IN_PROGRESS|FAILED.
        /// </summary>
        public readonly string? State;
        public readonly string? UpgradeAction;

        [OutputConstructor]
        private GetDatabaseUpgradeHistoryEntriesResult(
            string databaseId,

            ImmutableArray<Outputs.GetDatabaseUpgradeHistoryEntriesDatabaseUpgradeHistoryEntryResult> databaseUpgradeHistoryEntries,

            ImmutableArray<Outputs.GetDatabaseUpgradeHistoryEntriesFilterResult> filters,

            string id,

            string? state,

            string? upgradeAction)
        {
            DatabaseId = databaseId;
            DatabaseUpgradeHistoryEntries = databaseUpgradeHistoryEntries;
            Filters = filters;
            Id = id;
            State = state;
            UpgradeAction = upgradeAction;
        }
    }
}
