// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Database
{
    public static class GetDbNodeConsoleConnections
    {
        /// <summary>
        /// This data source provides the list of Db Node Console Connections in Oracle Cloud Infrastructure Database service.
        /// 
        /// Lists the console connections for the specified database node.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDbNodeConsoleConnections = Oci.Database.GetDbNodeConsoleConnections.Invoke(new()
        ///     {
        ///         DbNodeId = oci_database_db_node.Test_db_node.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetDbNodeConsoleConnectionsResult> InvokeAsync(GetDbNodeConsoleConnectionsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDbNodeConsoleConnectionsResult>("oci:Database/getDbNodeConsoleConnections:getDbNodeConsoleConnections", args ?? new GetDbNodeConsoleConnectionsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Db Node Console Connections in Oracle Cloud Infrastructure Database service.
        /// 
        /// Lists the console connections for the specified database node.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDbNodeConsoleConnections = Oci.Database.GetDbNodeConsoleConnections.Invoke(new()
        ///     {
        ///         DbNodeId = oci_database_db_node.Test_db_node.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDbNodeConsoleConnectionsResult> Invoke(GetDbNodeConsoleConnectionsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDbNodeConsoleConnectionsResult>("oci:Database/getDbNodeConsoleConnections:getDbNodeConsoleConnections", args ?? new GetDbNodeConsoleConnectionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDbNodeConsoleConnectionsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The database node [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("dbNodeId", required: true)]
        public string DbNodeId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetDbNodeConsoleConnectionsFilterArgs>? _filters;
        public List<Inputs.GetDbNodeConsoleConnectionsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetDbNodeConsoleConnectionsFilterArgs>());
            set => _filters = value;
        }

        public GetDbNodeConsoleConnectionsArgs()
        {
        }
        public static new GetDbNodeConsoleConnectionsArgs Empty => new GetDbNodeConsoleConnectionsArgs();
    }

    public sealed class GetDbNodeConsoleConnectionsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The database node [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("dbNodeId", required: true)]
        public Input<string> DbNodeId { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetDbNodeConsoleConnectionsFilterInputArgs>? _filters;
        public InputList<Inputs.GetDbNodeConsoleConnectionsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetDbNodeConsoleConnectionsFilterInputArgs>());
            set => _filters = value;
        }

        public GetDbNodeConsoleConnectionsInvokeArgs()
        {
        }
        public static new GetDbNodeConsoleConnectionsInvokeArgs Empty => new GetDbNodeConsoleConnectionsInvokeArgs();
    }


    [OutputType]
    public sealed class GetDbNodeConsoleConnectionsResult
    {
        /// <summary>
        /// The list of console_connections.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDbNodeConsoleConnectionsConsoleConnectionResult> ConsoleConnections;
        /// <summary>
        /// The OCID of the database node.
        /// </summary>
        public readonly string DbNodeId;
        public readonly ImmutableArray<Outputs.GetDbNodeConsoleConnectionsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetDbNodeConsoleConnectionsResult(
            ImmutableArray<Outputs.GetDbNodeConsoleConnectionsConsoleConnectionResult> consoleConnections,

            string dbNodeId,

            ImmutableArray<Outputs.GetDbNodeConsoleConnectionsFilterResult> filters,

            string id)
        {
            ConsoleConnections = consoleConnections;
            DbNodeId = dbNodeId;
            Filters = filters;
            Id = id;
        }
    }
}
