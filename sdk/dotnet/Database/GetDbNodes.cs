// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Database
{
    public static class GetDbNodes
    {
        /// <summary>
        /// This data source provides the list of Db Nodes in Oracle Cloud Infrastructure Database service.
        /// 
        /// Lists the database nodes in the specified DB system and compartment. A database node is a server running database software.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDbNodes = Oci.Database.GetDbNodes.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         DbServerId = oci_database_db_server.Test_db_server.Id,
        ///         DbSystemId = oci_database_db_system.Test_db_system.Id,
        ///         State = @var.Db_node_state,
        ///         VmClusterId = oci_database_vm_cluster.Test_vm_cluster.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetDbNodesResult> InvokeAsync(GetDbNodesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDbNodesResult>("oci:Database/getDbNodes:getDbNodes", args ?? new GetDbNodesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Db Nodes in Oracle Cloud Infrastructure Database service.
        /// 
        /// Lists the database nodes in the specified DB system and compartment. A database node is a server running database software.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDbNodes = Oci.Database.GetDbNodes.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         DbServerId = oci_database_db_server.Test_db_server.Id,
        ///         DbSystemId = oci_database_db_system.Test_db_system.Id,
        ///         State = @var.Db_node_state,
        ///         VmClusterId = oci_database_vm_cluster.Test_vm_cluster.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDbNodesResult> Invoke(GetDbNodesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDbNodesResult>("oci:Database/getDbNodes:getDbNodes", args ?? new GetDbNodesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDbNodesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exacc Db server.
        /// </summary>
        [Input("dbServerId")]
        public string? DbServerId { get; set; }

        /// <summary>
        /// The DB system [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). If provided, filters the results to the set of database versions which are supported for the DB system.
        /// </summary>
        [Input("dbSystemId")]
        public string? DbSystemId { get; set; }

        [Input("filters")]
        private List<Inputs.GetDbNodesFilterArgs>? _filters;
        public List<Inputs.GetDbNodesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetDbNodesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only resources that match the given lifecycle state exactly.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster.
        /// </summary>
        [Input("vmClusterId")]
        public string? VmClusterId { get; set; }

        public GetDbNodesArgs()
        {
        }
        public static new GetDbNodesArgs Empty => new GetDbNodesArgs();
    }

    public sealed class GetDbNodesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exacc Db server.
        /// </summary>
        [Input("dbServerId")]
        public Input<string>? DbServerId { get; set; }

        /// <summary>
        /// The DB system [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). If provided, filters the results to the set of database versions which are supported for the DB system.
        /// </summary>
        [Input("dbSystemId")]
        public Input<string>? DbSystemId { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetDbNodesFilterInputArgs>? _filters;
        public InputList<Inputs.GetDbNodesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetDbNodesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only resources that match the given lifecycle state exactly.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster.
        /// </summary>
        [Input("vmClusterId")]
        public Input<string>? VmClusterId { get; set; }

        public GetDbNodesInvokeArgs()
        {
        }
        public static new GetDbNodesInvokeArgs Empty => new GetDbNodesInvokeArgs();
    }


    [OutputType]
    public sealed class GetDbNodesResult
    {
        public readonly string CompartmentId;
        /// <summary>
        /// The list of db_nodes.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDbNodesDbNodeResult> DbNodes;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exacc Db server associated with the database node.
        /// </summary>
        public readonly string? DbServerId;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system.
        /// </summary>
        public readonly string? DbSystemId;
        public readonly ImmutableArray<Outputs.GetDbNodesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The current state of the database node.
        /// </summary>
        public readonly string? State;
        public readonly string? VmClusterId;

        [OutputConstructor]
        private GetDbNodesResult(
            string compartmentId,

            ImmutableArray<Outputs.GetDbNodesDbNodeResult> dbNodes,

            string? dbServerId,

            string? dbSystemId,

            ImmutableArray<Outputs.GetDbNodesFilterResult> filters,

            string id,

            string? state,

            string? vmClusterId)
        {
            CompartmentId = compartmentId;
            DbNodes = dbNodes;
            DbServerId = dbServerId;
            DbSystemId = dbSystemId;
            Filters = filters;
            Id = id;
            State = state;
            VmClusterId = vmClusterId;
        }
    }
}
