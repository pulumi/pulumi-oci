// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Database
{
    public static class GetDbServers
    {
        /// <summary>
        /// This data source provides the list of Db Servers in Oracle Cloud Infrastructure Database service.
        /// 
        /// Lists the Exadata DB servers in the ExadataInfrastructureId and specified compartment.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDbServers = Oci.Database.GetDbServers.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         ExadataInfrastructureId = oci_database_exadata_infrastructure.Test_exadata_infrastructure.Id,
        ///         DisplayName = @var.Db_server_display_name,
        ///         State = @var.Db_server_state,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetDbServersResult> InvokeAsync(GetDbServersArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDbServersResult>("oci:Database/getDbServers:getDbServers", args ?? new GetDbServersArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Db Servers in Oracle Cloud Infrastructure Database service.
        /// 
        /// Lists the Exadata DB servers in the ExadataInfrastructureId and specified compartment.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDbServers = Oci.Database.GetDbServers.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         ExadataInfrastructureId = oci_database_exadata_infrastructure.Test_exadata_infrastructure.Id,
        ///         DisplayName = @var.Db_server_display_name,
        ///         State = @var.Db_server_state,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetDbServersResult> Invoke(GetDbServersInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDbServersResult>("oci:Database/getDbServers:getDbServers", args ?? new GetDbServersInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDbServersArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire display name given. The match is not case sensitive.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the ExadataInfrastructure.
        /// </summary>
        [Input("exadataInfrastructureId", required: true)]
        public string ExadataInfrastructureId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetDbServersFilterArgs>? _filters;
        public List<Inputs.GetDbServersFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetDbServersFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only resources that match the given lifecycle state exactly.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetDbServersArgs()
        {
        }
        public static new GetDbServersArgs Empty => new GetDbServersArgs();
    }

    public sealed class GetDbServersInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire display name given. The match is not case sensitive.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the ExadataInfrastructure.
        /// </summary>
        [Input("exadataInfrastructureId", required: true)]
        public Input<string> ExadataInfrastructureId { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetDbServersFilterInputArgs>? _filters;
        public InputList<Inputs.GetDbServersFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetDbServersFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only resources that match the given lifecycle state exactly.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetDbServersInvokeArgs()
        {
        }
        public static new GetDbServersInvokeArgs Empty => new GetDbServersInvokeArgs();
    }


    [OutputType]
    public sealed class GetDbServersResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The list of db_servers.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDbServersDbServerResult> DbServers;
        /// <summary>
        /// The user-friendly name for the Db server. The name does not need to be unique.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
        /// </summary>
        public readonly string ExadataInfrastructureId;
        public readonly ImmutableArray<Outputs.GetDbServersFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The current state of the Db server.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetDbServersResult(
            string compartmentId,

            ImmutableArray<Outputs.GetDbServersDbServerResult> dbServers,

            string? displayName,

            string exadataInfrastructureId,

            ImmutableArray<Outputs.GetDbServersFilterResult> filters,

            string id,

            string? state)
        {
            CompartmentId = compartmentId;
            DbServers = dbServers;
            DisplayName = displayName;
            ExadataInfrastructureId = exadataInfrastructureId;
            Filters = filters;
            Id = id;
            State = state;
        }
    }
}
