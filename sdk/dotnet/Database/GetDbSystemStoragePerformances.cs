// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Database
{
    public static class GetDbSystemStoragePerformances
    {
        /// <summary>
        /// This data source provides the list of Db System Storage Performances in Oracle Cloud Infrastructure Database service.
        /// 
        /// Gets a list of possible expected storage performance parameters of a VMDB System based on Configuration.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDbSystemStoragePerformances = Oci.Database.GetDbSystemStoragePerformances.Invoke(new()
        ///     {
        ///         StorageManagement = dbSystemStoragePerformanceStorageManagement,
        ///         ShapeType = dbSystemStoragePerformanceShapeType,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetDbSystemStoragePerformancesResult> InvokeAsync(GetDbSystemStoragePerformancesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDbSystemStoragePerformancesResult>("oci:Database/getDbSystemStoragePerformances:getDbSystemStoragePerformances", args ?? new GetDbSystemStoragePerformancesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Db System Storage Performances in Oracle Cloud Infrastructure Database service.
        /// 
        /// Gets a list of possible expected storage performance parameters of a VMDB System based on Configuration.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDbSystemStoragePerformances = Oci.Database.GetDbSystemStoragePerformances.Invoke(new()
        ///     {
        ///         StorageManagement = dbSystemStoragePerformanceStorageManagement,
        ///         ShapeType = dbSystemStoragePerformanceShapeType,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDbSystemStoragePerformancesResult> Invoke(GetDbSystemStoragePerformancesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDbSystemStoragePerformancesResult>("oci:Database/getDbSystemStoragePerformances:getDbSystemStoragePerformances", args ?? new GetDbSystemStoragePerformancesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Db System Storage Performances in Oracle Cloud Infrastructure Database service.
        /// 
        /// Gets a list of possible expected storage performance parameters of a VMDB System based on Configuration.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDbSystemStoragePerformances = Oci.Database.GetDbSystemStoragePerformances.Invoke(new()
        ///     {
        ///         StorageManagement = dbSystemStoragePerformanceStorageManagement,
        ///         ShapeType = dbSystemStoragePerformanceShapeType,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDbSystemStoragePerformancesResult> Invoke(GetDbSystemStoragePerformancesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDbSystemStoragePerformancesResult>("oci:Database/getDbSystemStoragePerformances:getDbSystemStoragePerformances", args ?? new GetDbSystemStoragePerformancesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDbSystemStoragePerformancesArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetDbSystemStoragePerformancesFilterArgs>? _filters;
        public List<Inputs.GetDbSystemStoragePerformancesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetDbSystemStoragePerformancesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Optional. Filters the performance results by shape type.
        /// </summary>
        [Input("shapeType")]
        public string? ShapeType { get; set; }

        /// <summary>
        /// The DB system storage management option. Used to list database versions available for that storage manager. Valid values are `ASM` and `LVM`.
        /// * ASM specifies Oracle Automatic Storage Management
        /// * LVM specifies logical volume manager, sometimes called logical disk manager.
        /// </summary>
        [Input("storageManagement", required: true)]
        public string StorageManagement { get; set; } = null!;

        public GetDbSystemStoragePerformancesArgs()
        {
        }
        public static new GetDbSystemStoragePerformancesArgs Empty => new GetDbSystemStoragePerformancesArgs();
    }

    public sealed class GetDbSystemStoragePerformancesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetDbSystemStoragePerformancesFilterInputArgs>? _filters;
        public InputList<Inputs.GetDbSystemStoragePerformancesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetDbSystemStoragePerformancesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Optional. Filters the performance results by shape type.
        /// </summary>
        [Input("shapeType")]
        public Input<string>? ShapeType { get; set; }

        /// <summary>
        /// The DB system storage management option. Used to list database versions available for that storage manager. Valid values are `ASM` and `LVM`.
        /// * ASM specifies Oracle Automatic Storage Management
        /// * LVM specifies logical volume manager, sometimes called logical disk manager.
        /// </summary>
        [Input("storageManagement", required: true)]
        public Input<string> StorageManagement { get; set; } = null!;

        public GetDbSystemStoragePerformancesInvokeArgs()
        {
        }
        public static new GetDbSystemStoragePerformancesInvokeArgs Empty => new GetDbSystemStoragePerformancesInvokeArgs();
    }


    [OutputType]
    public sealed class GetDbSystemStoragePerformancesResult
    {
        /// <summary>
        /// The list of db_system_storage_performances.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDbSystemStoragePerformancesDbSystemStoragePerformanceResult> DbSystemStoragePerformances;
        public readonly ImmutableArray<Outputs.GetDbSystemStoragePerformancesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// ShapeType of the DbSystems,INTEL or AMD
        /// </summary>
        public readonly string? ShapeType;
        public readonly string StorageManagement;

        [OutputConstructor]
        private GetDbSystemStoragePerformancesResult(
            ImmutableArray<Outputs.GetDbSystemStoragePerformancesDbSystemStoragePerformanceResult> dbSystemStoragePerformances,

            ImmutableArray<Outputs.GetDbSystemStoragePerformancesFilterResult> filters,

            string id,

            string? shapeType,

            string storageManagement)
        {
            DbSystemStoragePerformances = dbSystemStoragePerformances;
            Filters = filters;
            Id = id;
            ShapeType = shapeType;
            StorageManagement = storageManagement;
        }
    }
}
