// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Database
{
    public static class GetDbSystemsUpgradeHistoryEntries
    {
        /// <summary>
        /// This data source provides the list of Db Systems Upgrade History Entries in Oracle Cloud Infrastructure Database service.
        /// 
        /// Gets the history of the upgrade actions performed on the specified DB system.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDbSystemsUpgradeHistoryEntries = Oci.Database.GetDbSystemsUpgradeHistoryEntries.Invoke(new()
        ///     {
        ///         DbSystemId = oci_database_db_system.Test_db_system.Id,
        ///         State = @var.Db_systems_upgrade_history_entry_state,
        ///         UpgradeAction = @var.Db_systems_upgrade_history_entry_upgrade_action,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetDbSystemsUpgradeHistoryEntriesResult> InvokeAsync(GetDbSystemsUpgradeHistoryEntriesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDbSystemsUpgradeHistoryEntriesResult>("oci:Database/getDbSystemsUpgradeHistoryEntries:getDbSystemsUpgradeHistoryEntries", args ?? new GetDbSystemsUpgradeHistoryEntriesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Db Systems Upgrade History Entries in Oracle Cloud Infrastructure Database service.
        /// 
        /// Gets the history of the upgrade actions performed on the specified DB system.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDbSystemsUpgradeHistoryEntries = Oci.Database.GetDbSystemsUpgradeHistoryEntries.Invoke(new()
        ///     {
        ///         DbSystemId = oci_database_db_system.Test_db_system.Id,
        ///         State = @var.Db_systems_upgrade_history_entry_state,
        ///         UpgradeAction = @var.Db_systems_upgrade_history_entry_upgrade_action,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDbSystemsUpgradeHistoryEntriesResult> Invoke(GetDbSystemsUpgradeHistoryEntriesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDbSystemsUpgradeHistoryEntriesResult>("oci:Database/getDbSystemsUpgradeHistoryEntries:getDbSystemsUpgradeHistoryEntries", args ?? new GetDbSystemsUpgradeHistoryEntriesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDbSystemsUpgradeHistoryEntriesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The DB system [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("dbSystemId", required: true)]
        public string DbSystemId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetDbSystemsUpgradeHistoryEntriesFilterArgs>? _filters;
        public List<Inputs.GetDbSystemsUpgradeHistoryEntriesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetDbSystemsUpgradeHistoryEntriesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only upgrade history entries that match the given lifecycle state exactly.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        /// <summary>
        /// A filter to return only upgradeHistoryEntries that match the specified Upgrade Action.
        /// </summary>
        [Input("upgradeAction")]
        public string? UpgradeAction { get; set; }

        public GetDbSystemsUpgradeHistoryEntriesArgs()
        {
        }
        public static new GetDbSystemsUpgradeHistoryEntriesArgs Empty => new GetDbSystemsUpgradeHistoryEntriesArgs();
    }

    public sealed class GetDbSystemsUpgradeHistoryEntriesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The DB system [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("dbSystemId", required: true)]
        public Input<string> DbSystemId { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetDbSystemsUpgradeHistoryEntriesFilterInputArgs>? _filters;
        public InputList<Inputs.GetDbSystemsUpgradeHistoryEntriesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetDbSystemsUpgradeHistoryEntriesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only upgrade history entries that match the given lifecycle state exactly.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// A filter to return only upgradeHistoryEntries that match the specified Upgrade Action.
        /// </summary>
        [Input("upgradeAction")]
        public Input<string>? UpgradeAction { get; set; }

        public GetDbSystemsUpgradeHistoryEntriesInvokeArgs()
        {
        }
        public static new GetDbSystemsUpgradeHistoryEntriesInvokeArgs Empty => new GetDbSystemsUpgradeHistoryEntriesInvokeArgs();
    }


    [OutputType]
    public sealed class GetDbSystemsUpgradeHistoryEntriesResult
    {
        public readonly string DbSystemId;
        /// <summary>
        /// The list of db_system_upgrade_history_entries.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDbSystemsUpgradeHistoryEntriesDbSystemUpgradeHistoryEntryResult> DbSystemUpgradeHistoryEntries;
        public readonly ImmutableArray<Outputs.GetDbSystemsUpgradeHistoryEntriesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The current state of the action.
        /// </summary>
        public readonly string? State;
        public readonly string? UpgradeAction;

        [OutputConstructor]
        private GetDbSystemsUpgradeHistoryEntriesResult(
            string dbSystemId,

            ImmutableArray<Outputs.GetDbSystemsUpgradeHistoryEntriesDbSystemUpgradeHistoryEntryResult> dbSystemUpgradeHistoryEntries,

            ImmutableArray<Outputs.GetDbSystemsUpgradeHistoryEntriesFilterResult> filters,

            string id,

            string? state,

            string? upgradeAction)
        {
            DbSystemId = dbSystemId;
            DbSystemUpgradeHistoryEntries = dbSystemUpgradeHistoryEntries;
            Filters = filters;
            Id = id;
            State = state;
            UpgradeAction = upgradeAction;
        }
    }
}
