// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Database
{
    public static class GetExadataIormConfig
    {
        /// <summary>
        /// This data source provides details about a specific Exadata Iorm Config resource in Oracle Cloud Infrastructure Database service.
        /// 
        /// Gets the IORM configuration settings for the specified cloud Exadata DB system.
        /// All Exadata service instances have default IORM settings.
        /// 
        /// **Note:** Deprecated for Exadata Cloud Service systems. Use the [new resource model APIs](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/exaflexsystem.htm#exaflexsystem_topic-resource_model) instead.
        /// 
        /// For Exadata Cloud Service instances, support for this API will end on May 15th, 2021. See [Switching an Exadata DB System to the New Resource Model and APIs](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/exaflexsystem_topic-resource_model_conversion.htm) for details on converting existing Exadata DB systems to the new resource model.
        /// 
        /// The [GetCloudVmClusterIormConfig](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/CloudVmCluster/GetCloudVmClusterIormConfig/) API is used for this operation with Exadata systems using the
        /// new resource model.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testExadataIormConfig = Oci.Database.GetExadataIormConfig.Invoke(new()
        ///     {
        ///         DbSystemId = testDbSystem.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetExadataIormConfigResult> InvokeAsync(GetExadataIormConfigArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetExadataIormConfigResult>("oci:Database/getExadataIormConfig:getExadataIormConfig", args ?? new GetExadataIormConfigArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Exadata Iorm Config resource in Oracle Cloud Infrastructure Database service.
        /// 
        /// Gets the IORM configuration settings for the specified cloud Exadata DB system.
        /// All Exadata service instances have default IORM settings.
        /// 
        /// **Note:** Deprecated for Exadata Cloud Service systems. Use the [new resource model APIs](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/exaflexsystem.htm#exaflexsystem_topic-resource_model) instead.
        /// 
        /// For Exadata Cloud Service instances, support for this API will end on May 15th, 2021. See [Switching an Exadata DB System to the New Resource Model and APIs](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/exaflexsystem_topic-resource_model_conversion.htm) for details on converting existing Exadata DB systems to the new resource model.
        /// 
        /// The [GetCloudVmClusterIormConfig](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/CloudVmCluster/GetCloudVmClusterIormConfig/) API is used for this operation with Exadata systems using the
        /// new resource model.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testExadataIormConfig = Oci.Database.GetExadataIormConfig.Invoke(new()
        ///     {
        ///         DbSystemId = testDbSystem.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetExadataIormConfigResult> Invoke(GetExadataIormConfigInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetExadataIormConfigResult>("oci:Database/getExadataIormConfig:getExadataIormConfig", args ?? new GetExadataIormConfigInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetExadataIormConfigArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The DB system [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("dbSystemId", required: true)]
        public string DbSystemId { get; set; } = null!;

        public GetExadataIormConfigArgs()
        {
        }
        public static new GetExadataIormConfigArgs Empty => new GetExadataIormConfigArgs();
    }

    public sealed class GetExadataIormConfigInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The DB system [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("dbSystemId", required: true)]
        public Input<string> DbSystemId { get; set; } = null!;

        public GetExadataIormConfigInvokeArgs()
        {
        }
        public static new GetExadataIormConfigInvokeArgs Empty => new GetExadataIormConfigInvokeArgs();
    }


    [OutputType]
    public sealed class GetExadataIormConfigResult
    {
        /// <summary>
        /// An array of IORM settings for all the database in the Exadata DB system.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetExadataIormConfigDbPlanResult> DbPlans;
        public readonly string DbSystemId;
        public readonly string Id;
        /// <summary>
        /// Additional information about the current `lifecycleState`.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// The current value for the IORM objective. The default is `AUTO`.
        /// </summary>
        public readonly string Objective;
        /// <summary>
        /// The current state of IORM configuration for the Exadata DB system.
        /// </summary>
        public readonly string State;

        [OutputConstructor]
        private GetExadataIormConfigResult(
            ImmutableArray<Outputs.GetExadataIormConfigDbPlanResult> dbPlans,

            string dbSystemId,

            string id,

            string lifecycleDetails,

            string objective,

            string state)
        {
            DbPlans = dbPlans;
            DbSystemId = dbSystemId;
            Id = id;
            LifecycleDetails = lifecycleDetails;
            Objective = objective;
            State = state;
        }
    }
}
