// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Database
{
    public static class GetExecutionActions
    {
        /// <summary>
        /// This data source provides the list of Execution Actions in Oracle Cloud Infrastructure Database service.
        /// 
        /// Lists the execution action resources in the specified compartment.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testExecutionActions = Oci.Database.GetExecutionActions.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = executionActionDisplayName,
        ///         ExecutionWindowId = testExecutionWindow.Id,
        ///         State = executionActionState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetExecutionActionsResult> InvokeAsync(GetExecutionActionsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetExecutionActionsResult>("oci:Database/getExecutionActions:getExecutionActions", args ?? new GetExecutionActionsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Execution Actions in Oracle Cloud Infrastructure Database service.
        /// 
        /// Lists the execution action resources in the specified compartment.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testExecutionActions = Oci.Database.GetExecutionActions.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = executionActionDisplayName,
        ///         ExecutionWindowId = testExecutionWindow.Id,
        ///         State = executionActionState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetExecutionActionsResult> Invoke(GetExecutionActionsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetExecutionActionsResult>("oci:Database/getExecutionActions:getExecutionActions", args ?? new GetExecutionActionsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Execution Actions in Oracle Cloud Infrastructure Database service.
        /// 
        /// Lists the execution action resources in the specified compartment.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testExecutionActions = Oci.Database.GetExecutionActions.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = executionActionDisplayName,
        ///         ExecutionWindowId = testExecutionWindow.Id,
        ///         State = executionActionState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetExecutionActionsResult> Invoke(GetExecutionActionsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetExecutionActionsResult>("oci:Database/getExecutionActions:getExecutionActions", args ?? new GetExecutionActionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetExecutionActionsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire display name given. The match is not case sensitive.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given execution wondow id.
        /// </summary>
        [Input("executionWindowId")]
        public string? ExecutionWindowId { get; set; }

        [Input("filters")]
        private List<Inputs.GetExecutionActionsFilterArgs>? _filters;
        public List<Inputs.GetExecutionActionsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetExecutionActionsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only resources that match the given lifecycle state exactly.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetExecutionActionsArgs()
        {
        }
        public static new GetExecutionActionsArgs Empty => new GetExecutionActionsArgs();
    }

    public sealed class GetExecutionActionsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire display name given. The match is not case sensitive.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given execution wondow id.
        /// </summary>
        [Input("executionWindowId")]
        public Input<string>? ExecutionWindowId { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetExecutionActionsFilterInputArgs>? _filters;
        public InputList<Inputs.GetExecutionActionsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetExecutionActionsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only resources that match the given lifecycle state exactly.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetExecutionActionsInvokeArgs()
        {
        }
        public static new GetExecutionActionsInvokeArgs Empty => new GetExecutionActionsInvokeArgs();
    }


    [OutputType]
    public sealed class GetExecutionActionsResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The user-friendly name for the execution action. The name does not need to be unique.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// The list of execution_actions.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetExecutionActionsExecutionActionResult> ExecutionActions;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the execution window resource the execution action belongs to.
        /// </summary>
        public readonly string? ExecutionWindowId;
        public readonly ImmutableArray<Outputs.GetExecutionActionsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The current state of the execution action. Valid states are SCHEDULED, IN_PROGRESS, FAILED, CANCELED, UPDATING, DELETED, SUCCEEDED and PARTIAL_SUCCESS.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetExecutionActionsResult(
            string compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetExecutionActionsExecutionActionResult> executionActions,

            string? executionWindowId,

            ImmutableArray<Outputs.GetExecutionActionsFilterResult> filters,

            string id,

            string? state)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            ExecutionActions = executionActions;
            ExecutionWindowId = executionWindowId;
            Filters = filters;
            Id = id;
            State = state;
        }
    }
}
