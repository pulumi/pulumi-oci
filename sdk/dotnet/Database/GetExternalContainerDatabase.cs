// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Database
{
    public static class GetExternalContainerDatabase
    {
        /// <summary>
        /// This data source provides details about a specific External Container Database resource in Oracle Cloud Infrastructure Database service.
        /// 
        /// Gets information about the specified external container database.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testExternalContainerDatabase = Output.Create(Oci.Database.GetExternalContainerDatabase.InvokeAsync(new Oci.Database.GetExternalContainerDatabaseArgs
        ///         {
        ///             ExternalContainerDatabaseId = oci_database_external_container_database.Test_external_container_database.Id,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetExternalContainerDatabaseResult> InvokeAsync(GetExternalContainerDatabaseArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetExternalContainerDatabaseResult>("oci:Database/getExternalContainerDatabase:getExternalContainerDatabase", args ?? new GetExternalContainerDatabaseArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific External Container Database resource in Oracle Cloud Infrastructure Database service.
        /// 
        /// Gets information about the specified external container database.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testExternalContainerDatabase = Output.Create(Oci.Database.GetExternalContainerDatabase.InvokeAsync(new Oci.Database.GetExternalContainerDatabaseArgs
        ///         {
        ///             ExternalContainerDatabaseId = oci_database_external_container_database.Test_external_container_database.Id,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetExternalContainerDatabaseResult> Invoke(GetExternalContainerDatabaseInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetExternalContainerDatabaseResult>("oci:Database/getExternalContainerDatabase:getExternalContainerDatabase", args ?? new GetExternalContainerDatabaseInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetExternalContainerDatabaseArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ExternalContainerDatabase [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("externalContainerDatabaseId", required: true)]
        public string ExternalContainerDatabaseId { get; set; } = null!;

        public GetExternalContainerDatabaseArgs()
        {
        }
    }

    public sealed class GetExternalContainerDatabaseInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ExternalContainerDatabase [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("externalContainerDatabaseId", required: true)]
        public Input<string> ExternalContainerDatabaseId { get; set; } = null!;

        public GetExternalContainerDatabaseInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetExternalContainerDatabaseResult
    {
        /// <summary>
        /// The character set of the external database.
        /// </summary>
        public readonly string CharacterSet;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The Oracle Database configuration
        /// </summary>
        public readonly string DatabaseConfiguration;
        /// <summary>
        /// The Oracle Database edition.
        /// </summary>
        public readonly string DatabaseEdition;
        /// <summary>
        /// The configuration of the Database Management service.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetExternalContainerDatabaseDatabaseManagementConfigResult> DatabaseManagementConfigs;
        /// <summary>
        /// The Oracle Database version.
        /// </summary>
        public readonly string DatabaseVersion;
        /// <summary>
        /// The Oracle Database ID, which identifies an Oracle Database located outside of Oracle Cloud.
        /// </summary>
        public readonly string DbId;
        /// <summary>
        /// The database packs licensed for the external Oracle Database.
        /// </summary>
        public readonly string DbPacks;
        /// <summary>
        /// The `DB_UNIQUE_NAME` of the external database.
        /// </summary>
        public readonly string DbUniqueName;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// The user-friendly name for the external database. The name does not have to be unique.
        /// </summary>
        public readonly string DisplayName;
        public readonly string ExternalContainerDatabaseId;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure external database resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Additional information about the current lifecycle state.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// The national character of the external database.
        /// </summary>
        public readonly string NcharacterSet;
        /// <summary>
        /// The current state of the Oracle Cloud Infrastructure external database resource.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The date and time the database was created.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time zone of the external database. It is a time zone offset (a character type in the format '[+|-]TZH:TZM') or a time zone region name, depending on how the time zone value was specified when the database was created / last altered.
        /// </summary>
        public readonly string TimeZone;

        [OutputConstructor]
        private GetExternalContainerDatabaseResult(
            string characterSet,

            string compartmentId,

            string databaseConfiguration,

            string databaseEdition,

            ImmutableArray<Outputs.GetExternalContainerDatabaseDatabaseManagementConfigResult> databaseManagementConfigs,

            string databaseVersion,

            string dbId,

            string dbPacks,

            string dbUniqueName,

            ImmutableDictionary<string, object> definedTags,

            string displayName,

            string externalContainerDatabaseId,

            ImmutableDictionary<string, object> freeformTags,

            string id,

            string lifecycleDetails,

            string ncharacterSet,

            string state,

            string timeCreated,

            string timeZone)
        {
            CharacterSet = characterSet;
            CompartmentId = compartmentId;
            DatabaseConfiguration = databaseConfiguration;
            DatabaseEdition = databaseEdition;
            DatabaseManagementConfigs = databaseManagementConfigs;
            DatabaseVersion = databaseVersion;
            DbId = dbId;
            DbPacks = dbPacks;
            DbUniqueName = dbUniqueName;
            DefinedTags = definedTags;
            DisplayName = displayName;
            ExternalContainerDatabaseId = externalContainerDatabaseId;
            FreeformTags = freeformTags;
            Id = id;
            LifecycleDetails = lifecycleDetails;
            NcharacterSet = ncharacterSet;
            State = state;
            TimeCreated = timeCreated;
            TimeZone = timeZone;
        }
    }
}
