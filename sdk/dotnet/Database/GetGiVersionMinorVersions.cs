// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Database
{
    public static class GetGiVersionMinorVersions
    {
        /// <summary>
        /// This data source provides the list of Gi Version Minor Versions in Oracle Cloud Infrastructure Database service.
        /// 
        /// Gets a list of supported Oracle Grid Infrastructure minor versions for the given major version and shape family.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testGiVersionMinorVersions = Oci.Database.GetGiVersionMinorVersions.Invoke(new()
        ///     {
        ///         Version = giVersionMinorVersionVersion,
        ///         AvailabilityDomain = giVersionMinorVersionAvailabilityDomain,
        ///         CompartmentId = compartmentId,
        ///         IsGiVersionForProvisioning = giVersionMinorVersionIsGiVersionForProvisioning,
        ///         Shape = giVersionMinorVersionShape,
        ///         ShapeFamily = giVersionMinorVersionShapeFamily,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetGiVersionMinorVersionsResult> InvokeAsync(GetGiVersionMinorVersionsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGiVersionMinorVersionsResult>("oci:Database/getGiVersionMinorVersions:getGiVersionMinorVersions", args ?? new GetGiVersionMinorVersionsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Gi Version Minor Versions in Oracle Cloud Infrastructure Database service.
        /// 
        /// Gets a list of supported Oracle Grid Infrastructure minor versions for the given major version and shape family.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testGiVersionMinorVersions = Oci.Database.GetGiVersionMinorVersions.Invoke(new()
        ///     {
        ///         Version = giVersionMinorVersionVersion,
        ///         AvailabilityDomain = giVersionMinorVersionAvailabilityDomain,
        ///         CompartmentId = compartmentId,
        ///         IsGiVersionForProvisioning = giVersionMinorVersionIsGiVersionForProvisioning,
        ///         Shape = giVersionMinorVersionShape,
        ///         ShapeFamily = giVersionMinorVersionShapeFamily,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetGiVersionMinorVersionsResult> Invoke(GetGiVersionMinorVersionsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGiVersionMinorVersionsResult>("oci:Database/getGiVersionMinorVersions:getGiVersionMinorVersions", args ?? new GetGiVersionMinorVersionsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Gi Version Minor Versions in Oracle Cloud Infrastructure Database service.
        /// 
        /// Gets a list of supported Oracle Grid Infrastructure minor versions for the given major version and shape family.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testGiVersionMinorVersions = Oci.Database.GetGiVersionMinorVersions.Invoke(new()
        ///     {
        ///         Version = giVersionMinorVersionVersion,
        ///         AvailabilityDomain = giVersionMinorVersionAvailabilityDomain,
        ///         CompartmentId = compartmentId,
        ///         IsGiVersionForProvisioning = giVersionMinorVersionIsGiVersionForProvisioning,
        ///         Shape = giVersionMinorVersionShape,
        ///         ShapeFamily = giVersionMinorVersionShapeFamily,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetGiVersionMinorVersionsResult> Invoke(GetGiVersionMinorVersionsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetGiVersionMinorVersionsResult>("oci:Database/getGiVersionMinorVersions:getGiVersionMinorVersions", args ?? new GetGiVersionMinorVersionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGiVersionMinorVersionsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The target availability domain. Only passed if the limit is AD-specific.
        /// </summary>
        [Input("availabilityDomain")]
        public string? AvailabilityDomain { get; set; }

        /// <summary>
        /// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        [Input("filters")]
        private List<Inputs.GetGiVersionMinorVersionsFilterArgs>? _filters;
        public List<Inputs.GetGiVersionMinorVersionsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetGiVersionMinorVersionsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// If true, returns the Grid Infrastructure versions that can be used for provisioning a cluster
        /// </summary>
        [Input("isGiVersionForProvisioning")]
        public bool? IsGiVersionForProvisioning { get; set; }

        /// <summary>
        /// If provided, filters the results for the given shape.
        /// </summary>
        [Input("shape")]
        public string? Shape { get; set; }

        /// <summary>
        /// If provided, filters the results to the set of database versions which are supported for the given shape family.
        /// </summary>
        [Input("shapeFamily")]
        public string? ShapeFamily { get; set; }

        /// <summary>
        /// The Oracle Grid Infrastructure major version.
        /// </summary>
        [Input("version", required: true)]
        public string Version { get; set; } = null!;

        public GetGiVersionMinorVersionsArgs()
        {
        }
        public static new GetGiVersionMinorVersionsArgs Empty => new GetGiVersionMinorVersionsArgs();
    }

    public sealed class GetGiVersionMinorVersionsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The target availability domain. Only passed if the limit is AD-specific.
        /// </summary>
        [Input("availabilityDomain")]
        public Input<string>? AvailabilityDomain { get; set; }

        /// <summary>
        /// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetGiVersionMinorVersionsFilterInputArgs>? _filters;
        public InputList<Inputs.GetGiVersionMinorVersionsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetGiVersionMinorVersionsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// If true, returns the Grid Infrastructure versions that can be used for provisioning a cluster
        /// </summary>
        [Input("isGiVersionForProvisioning")]
        public Input<bool>? IsGiVersionForProvisioning { get; set; }

        /// <summary>
        /// If provided, filters the results for the given shape.
        /// </summary>
        [Input("shape")]
        public Input<string>? Shape { get; set; }

        /// <summary>
        /// If provided, filters the results to the set of database versions which are supported for the given shape family.
        /// </summary>
        [Input("shapeFamily")]
        public Input<string>? ShapeFamily { get; set; }

        /// <summary>
        /// The Oracle Grid Infrastructure major version.
        /// </summary>
        [Input("version", required: true)]
        public Input<string> Version { get; set; } = null!;

        public GetGiVersionMinorVersionsInvokeArgs()
        {
        }
        public static new GetGiVersionMinorVersionsInvokeArgs Empty => new GetGiVersionMinorVersionsInvokeArgs();
    }


    [OutputType]
    public sealed class GetGiVersionMinorVersionsResult
    {
        public readonly string? AvailabilityDomain;
        public readonly string? CompartmentId;
        public readonly ImmutableArray<Outputs.GetGiVersionMinorVersionsFilterResult> Filters;
        /// <summary>
        /// The list of gi_minor_versions.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetGiVersionMinorVersionsGiMinorVersionResult> GiMinorVersions;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool? IsGiVersionForProvisioning;
        public readonly string? Shape;
        public readonly string? ShapeFamily;
        /// <summary>
        /// A valid Oracle Grid Infrastructure (GI) software version.
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private GetGiVersionMinorVersionsResult(
            string? availabilityDomain,

            string? compartmentId,

            ImmutableArray<Outputs.GetGiVersionMinorVersionsFilterResult> filters,

            ImmutableArray<Outputs.GetGiVersionMinorVersionsGiMinorVersionResult> giMinorVersions,

            string id,

            bool? isGiVersionForProvisioning,

            string? shape,

            string? shapeFamily,

            string version)
        {
            AvailabilityDomain = availabilityDomain;
            CompartmentId = compartmentId;
            Filters = filters;
            GiMinorVersions = giMinorVersions;
            Id = id;
            IsGiVersionForProvisioning = isGiVersionForProvisioning;
            Shape = shape;
            ShapeFamily = shapeFamily;
            Version = version;
        }
    }
}
