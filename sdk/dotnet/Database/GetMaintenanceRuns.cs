// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Database
{
    public static class GetMaintenanceRuns
    {
        /// <summary>
        /// This data source provides the list of Maintenance Runs in Oracle Cloud Infrastructure Database service.
        /// 
        /// Gets a list of the maintenance runs in the specified compartment.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testMaintenanceRuns = Output.Create(Oci.Database.GetMaintenanceRuns.InvokeAsync(new Oci.Database.GetMaintenanceRunsArgs
        ///         {
        ///             CompartmentId = @var.Compartment_id,
        ///             AvailabilityDomain = @var.Maintenance_run_availability_domain,
        ///             MaintenanceSubtype = @var.Maintenance_run_maintenance_subtype,
        ///             MaintenanceType = @var.Maintenance_run_maintenance_type,
        ///             State = @var.Maintenance_run_state,
        ///             TargetResourceId = oci_database_target_resource.Test_target_resource.Id,
        ///             TargetResourceType = @var.Maintenance_run_target_resource_type,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetMaintenanceRunsResult> InvokeAsync(GetMaintenanceRunsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetMaintenanceRunsResult>("oci:Database/getMaintenanceRuns:getMaintenanceRuns", args ?? new GetMaintenanceRunsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Maintenance Runs in Oracle Cloud Infrastructure Database service.
        /// 
        /// Gets a list of the maintenance runs in the specified compartment.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testMaintenanceRuns = Output.Create(Oci.Database.GetMaintenanceRuns.InvokeAsync(new Oci.Database.GetMaintenanceRunsArgs
        ///         {
        ///             CompartmentId = @var.Compartment_id,
        ///             AvailabilityDomain = @var.Maintenance_run_availability_domain,
        ///             MaintenanceSubtype = @var.Maintenance_run_maintenance_subtype,
        ///             MaintenanceType = @var.Maintenance_run_maintenance_type,
        ///             State = @var.Maintenance_run_state,
        ///             TargetResourceId = oci_database_target_resource.Test_target_resource.Id,
        ///             TargetResourceType = @var.Maintenance_run_target_resource_type,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetMaintenanceRunsResult> Invoke(GetMaintenanceRunsInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetMaintenanceRunsResult>("oci:Database/getMaintenanceRuns:getMaintenanceRuns", args ?? new GetMaintenanceRunsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMaintenanceRunsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// A filter to return only resources that match the given availability domain exactly.
        /// </summary>
        [Input("availabilityDomain")]
        public string? AvailabilityDomain { get; set; }

        /// <summary>
        /// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetMaintenanceRunsFilterArgs>? _filters;
        public List<Inputs.GetMaintenanceRunsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetMaintenanceRunsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The sub-type of the maintenance run.
        /// </summary>
        [Input("maintenanceSubtype")]
        public string? MaintenanceSubtype { get; set; }

        /// <summary>
        /// The maintenance type.
        /// </summary>
        [Input("maintenanceType")]
        public string? MaintenanceType { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given lifecycle state exactly.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        /// <summary>
        /// The target resource ID.
        /// </summary>
        [Input("targetResourceId")]
        public string? TargetResourceId { get; set; }

        /// <summary>
        /// The type of the target resource. Accepted values are: AUTONOMOUS_CONTAINER_DATABASE, AUTONOMOUS_EXADATA_INFRASTRUCTURE, EXADATA_DB_SYSTEM
        /// </summary>
        [Input("targetResourceType")]
        public string? TargetResourceType { get; set; }

        public GetMaintenanceRunsArgs()
        {
        }
    }

    public sealed class GetMaintenanceRunsInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// A filter to return only resources that match the given availability domain exactly.
        /// </summary>
        [Input("availabilityDomain")]
        public Input<string>? AvailabilityDomain { get; set; }

        /// <summary>
        /// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetMaintenanceRunsFilterInputArgs>? _filters;
        public InputList<Inputs.GetMaintenanceRunsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetMaintenanceRunsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The sub-type of the maintenance run.
        /// </summary>
        [Input("maintenanceSubtype")]
        public Input<string>? MaintenanceSubtype { get; set; }

        /// <summary>
        /// The maintenance type.
        /// </summary>
        [Input("maintenanceType")]
        public Input<string>? MaintenanceType { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given lifecycle state exactly.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The target resource ID.
        /// </summary>
        [Input("targetResourceId")]
        public Input<string>? TargetResourceId { get; set; }

        /// <summary>
        /// The type of the target resource. Accepted values are: AUTONOMOUS_CONTAINER_DATABASE, AUTONOMOUS_EXADATA_INFRASTRUCTURE, EXADATA_DB_SYSTEM
        /// </summary>
        [Input("targetResourceType")]
        public Input<string>? TargetResourceType { get; set; }

        public GetMaintenanceRunsInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetMaintenanceRunsResult
    {
        public readonly string? AvailabilityDomain;
        /// <summary>
        /// The OCID of the compartment.
        /// </summary>
        public readonly string CompartmentId;
        public readonly ImmutableArray<Outputs.GetMaintenanceRunsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of maintenance_runs.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMaintenanceRunsMaintenanceRunResult> MaintenanceRuns;
        /// <summary>
        /// Maintenance sub-type.
        /// </summary>
        public readonly string? MaintenanceSubtype;
        /// <summary>
        /// Maintenance type.
        /// </summary>
        public readonly string? MaintenanceType;
        /// <summary>
        /// The current state of the maintenance run. For Autonomous Database on shared Exadata infrastructure, valid states are IN_PROGRESS, SUCCEEDED and FAILED.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// The ID of the target resource on which the maintenance run occurs.
        /// </summary>
        public readonly string? TargetResourceId;
        /// <summary>
        /// The type of the target resource on which the maintenance run occurs.
        /// </summary>
        public readonly string? TargetResourceType;

        [OutputConstructor]
        private GetMaintenanceRunsResult(
            string? availabilityDomain,

            string compartmentId,

            ImmutableArray<Outputs.GetMaintenanceRunsFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetMaintenanceRunsMaintenanceRunResult> maintenanceRuns,

            string? maintenanceSubtype,

            string? maintenanceType,

            string? state,

            string? targetResourceId,

            string? targetResourceType)
        {
            AvailabilityDomain = availabilityDomain;
            CompartmentId = compartmentId;
            Filters = filters;
            Id = id;
            MaintenanceRuns = maintenanceRuns;
            MaintenanceSubtype = maintenanceSubtype;
            MaintenanceType = maintenanceType;
            State = state;
            TargetResourceId = targetResourceId;
            TargetResourceType = targetResourceType;
        }
    }
}
