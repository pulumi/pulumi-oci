// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Database
{
    public static class GetManagedPreferredCredentials
    {
        /// <summary>
        /// This data source provides the list of Managed Database Preferred Credentials in Oracle Cloud Infrastructure Database Management service.
        /// 
        /// Gets the list of preferred credentials for a given Managed Database.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedDatabasePreferredCredentials = Oci.Database.GetManagedPreferredCredentials.Invoke(new()
        ///     {
        ///         ManagedDatabaseId = oci_database_management_managed_database.Test_managed_database.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetManagedPreferredCredentialsResult> InvokeAsync(GetManagedPreferredCredentialsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetManagedPreferredCredentialsResult>("oci:Database/getManagedPreferredCredentials:getManagedPreferredCredentials", args ?? new GetManagedPreferredCredentialsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Managed Database Preferred Credentials in Oracle Cloud Infrastructure Database Management service.
        /// 
        /// Gets the list of preferred credentials for a given Managed Database.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedDatabasePreferredCredentials = Oci.Database.GetManagedPreferredCredentials.Invoke(new()
        ///     {
        ///         ManagedDatabaseId = oci_database_management_managed_database.Test_managed_database.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetManagedPreferredCredentialsResult> Invoke(GetManagedPreferredCredentialsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedPreferredCredentialsResult>("oci:Database/getManagedPreferredCredentials:getManagedPreferredCredentials", args ?? new GetManagedPreferredCredentialsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagedPreferredCredentialsArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetManagedPreferredCredentialsFilterArgs>? _filters;
        public List<Inputs.GetManagedPreferredCredentialsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetManagedPreferredCredentialsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
        /// </summary>
        [Input("managedDatabaseId", required: true)]
        public string ManagedDatabaseId { get; set; } = null!;

        public GetManagedPreferredCredentialsArgs()
        {
        }
        public static new GetManagedPreferredCredentialsArgs Empty => new GetManagedPreferredCredentialsArgs();
    }

    public sealed class GetManagedPreferredCredentialsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetManagedPreferredCredentialsFilterInputArgs>? _filters;
        public InputList<Inputs.GetManagedPreferredCredentialsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetManagedPreferredCredentialsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
        /// </summary>
        [Input("managedDatabaseId", required: true)]
        public Input<string> ManagedDatabaseId { get; set; } = null!;

        public GetManagedPreferredCredentialsInvokeArgs()
        {
        }
        public static new GetManagedPreferredCredentialsInvokeArgs Empty => new GetManagedPreferredCredentialsInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagedPreferredCredentialsResult
    {
        public readonly ImmutableArray<Outputs.GetManagedPreferredCredentialsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string ManagedDatabaseId;
        /// <summary>
        /// The list of preferred_credential_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetManagedPreferredCredentialsPreferredCredentialCollectionResult> PreferredCredentialCollections;

        [OutputConstructor]
        private GetManagedPreferredCredentialsResult(
            ImmutableArray<Outputs.GetManagedPreferredCredentialsFilterResult> filters,

            string id,

            string managedDatabaseId,

            ImmutableArray<Outputs.GetManagedPreferredCredentialsPreferredCredentialCollectionResult> preferredCredentialCollections)
        {
            Filters = filters;
            Id = id;
            ManagedDatabaseId = managedDatabaseId;
            PreferredCredentialCollections = preferredCredentialCollections;
        }
    }
}
