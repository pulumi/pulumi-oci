// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Database
{
    public static class GetPluggableDatabaseSnapshot
    {
        /// <summary>
        /// This data source provides details about a specific Pluggable Database Snapshot resource in Oracle Cloud Infrastructure Database service.
        /// 
        /// Gets information about the specified Exadata Pluggable Database Snapshot in the specified compartment.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testPluggableDatabaseSnapshot = Oci.Database.GetPluggableDatabaseSnapshot.Invoke(new()
        ///     {
        ///         PluggableDatabaseSnapshotId = testPluggableDatabaseSnapshotOciDatabasePluggableDatabaseSnapshot.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetPluggableDatabaseSnapshotResult> InvokeAsync(GetPluggableDatabaseSnapshotArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPluggableDatabaseSnapshotResult>("oci:Database/getPluggableDatabaseSnapshot:getPluggableDatabaseSnapshot", args ?? new GetPluggableDatabaseSnapshotArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Pluggable Database Snapshot resource in Oracle Cloud Infrastructure Database service.
        /// 
        /// Gets information about the specified Exadata Pluggable Database Snapshot in the specified compartment.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testPluggableDatabaseSnapshot = Oci.Database.GetPluggableDatabaseSnapshot.Invoke(new()
        ///     {
        ///         PluggableDatabaseSnapshotId = testPluggableDatabaseSnapshotOciDatabasePluggableDatabaseSnapshot.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetPluggableDatabaseSnapshotResult> Invoke(GetPluggableDatabaseSnapshotInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPluggableDatabaseSnapshotResult>("oci:Database/getPluggableDatabaseSnapshot:getPluggableDatabaseSnapshot", args ?? new GetPluggableDatabaseSnapshotInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Pluggable Database Snapshot resource in Oracle Cloud Infrastructure Database service.
        /// 
        /// Gets information about the specified Exadata Pluggable Database Snapshot in the specified compartment.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testPluggableDatabaseSnapshot = Oci.Database.GetPluggableDatabaseSnapshot.Invoke(new()
        ///     {
        ///         PluggableDatabaseSnapshotId = testPluggableDatabaseSnapshotOciDatabasePluggableDatabaseSnapshot.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetPluggableDatabaseSnapshotResult> Invoke(GetPluggableDatabaseSnapshotInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetPluggableDatabaseSnapshotResult>("oci:Database/getPluggableDatabaseSnapshot:getPluggableDatabaseSnapshot", args ?? new GetPluggableDatabaseSnapshotInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPluggableDatabaseSnapshotArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Exadata Pluggable Database Snapshot [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("pluggableDatabaseSnapshotId", required: true)]
        public string PluggableDatabaseSnapshotId { get; set; } = null!;

        public GetPluggableDatabaseSnapshotArgs()
        {
        }
        public static new GetPluggableDatabaseSnapshotArgs Empty => new GetPluggableDatabaseSnapshotArgs();
    }

    public sealed class GetPluggableDatabaseSnapshotInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Exadata Pluggable Database Snapshot [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("pluggableDatabaseSnapshotId", required: true)]
        public Input<string> PluggableDatabaseSnapshotId { get; set; } = null!;

        public GetPluggableDatabaseSnapshotInvokeArgs()
        {
        }
        public static new GetPluggableDatabaseSnapshotInvokeArgs Empty => new GetPluggableDatabaseSnapshotInvokeArgs();
    }


    [OutputType]
    public sealed class GetPluggableDatabaseSnapshotResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster.
        /// </summary>
        public readonly string ClusterId;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata Pluggable Database Snapshot.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Additional information about the current lifecycle state of the Exadata Pluggable Database Snapshot.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// The user-friendly name for the Database Snapshot. The name should be unique.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata Pluggable Database.
        /// </summary>
        public readonly string PluggableDatabaseId;
        public readonly string PluggableDatabaseSnapshotId;
        /// <summary>
        /// The current state of the Exadata Pluggable Database Snapshot.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// The date and time that the Exadata Pluggable Database Snapshot was created, as expressed in RFC 3339 format. For example: 2023-06-27T21:10:29Z
        /// </summary>
        public readonly string TimeCreated;

        [OutputConstructor]
        private GetPluggableDatabaseSnapshotResult(
            string clusterId,

            string compartmentId,

            ImmutableDictionary<string, string> definedTags,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            string lifecycleDetails,

            string name,

            string pluggableDatabaseId,

            string pluggableDatabaseSnapshotId,

            string state,

            ImmutableDictionary<string, string> systemTags,

            string timeCreated)
        {
            ClusterId = clusterId;
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            FreeformTags = freeformTags;
            Id = id;
            LifecycleDetails = lifecycleDetails;
            Name = name;
            PluggableDatabaseId = pluggableDatabaseId;
            PluggableDatabaseSnapshotId = pluggableDatabaseSnapshotId;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
        }
    }
}
