// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Database
{
    public static class GetSchedulingPlans
    {
        /// <summary>
        /// This data source provides the list of Scheduling Plans in Oracle Cloud Infrastructure Database service.
        /// 
        /// Lists the Scheduling Plan resources in the specified compartment.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSchedulingPlans = Oci.Database.GetSchedulingPlans.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = schedulingPlanDisplayName,
        ///         Id = schedulingPlanId,
        ///         ResourceId = testResource.Id,
        ///         SchedulingPolicyId = testSchedulingPolicy.Id,
        ///         State = schedulingPlanState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSchedulingPlansResult> InvokeAsync(GetSchedulingPlansArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSchedulingPlansResult>("oci:Database/getSchedulingPlans:getSchedulingPlans", args ?? new GetSchedulingPlansArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Scheduling Plans in Oracle Cloud Infrastructure Database service.
        /// 
        /// Lists the Scheduling Plan resources in the specified compartment.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSchedulingPlans = Oci.Database.GetSchedulingPlans.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = schedulingPlanDisplayName,
        ///         Id = schedulingPlanId,
        ///         ResourceId = testResource.Id,
        ///         SchedulingPolicyId = testSchedulingPolicy.Id,
        ///         State = schedulingPlanState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSchedulingPlansResult> Invoke(GetSchedulingPlansInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSchedulingPlansResult>("oci:Database/getSchedulingPlans:getSchedulingPlans", args ?? new GetSchedulingPlansInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Scheduling Plans in Oracle Cloud Infrastructure Database service.
        /// 
        /// Lists the Scheduling Plan resources in the specified compartment.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSchedulingPlans = Oci.Database.GetSchedulingPlans.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = schedulingPlanDisplayName,
        ///         Id = schedulingPlanId,
        ///         ResourceId = testResource.Id,
        ///         SchedulingPolicyId = testSchedulingPolicy.Id,
        ///         State = schedulingPlanState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSchedulingPlansResult> Invoke(GetSchedulingPlansInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSchedulingPlansResult>("oci:Database/getSchedulingPlans:getSchedulingPlans", args ?? new GetSchedulingPlansInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSchedulingPlansArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire display name given. The match is not case sensitive.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetSchedulingPlansFilterArgs>? _filters;
        public List<Inputs.GetSchedulingPlansFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetSchedulingPlansFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only resources that match the given Schedule Plan id exactly.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given resource id exactly.
        /// </summary>
        [Input("resourceId")]
        public string? ResourceId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given scheduling policy id exactly.
        /// </summary>
        [Input("schedulingPolicyId")]
        public string? SchedulingPolicyId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given lifecycle state exactly.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetSchedulingPlansArgs()
        {
        }
        public static new GetSchedulingPlansArgs Empty => new GetSchedulingPlansArgs();
    }

    public sealed class GetSchedulingPlansInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire display name given. The match is not case sensitive.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetSchedulingPlansFilterInputArgs>? _filters;
        public InputList<Inputs.GetSchedulingPlansFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetSchedulingPlansFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only resources that match the given Schedule Plan id exactly.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given resource id exactly.
        /// </summary>
        [Input("resourceId")]
        public Input<string>? ResourceId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given scheduling policy id exactly.
        /// </summary>
        [Input("schedulingPolicyId")]
        public Input<string>? SchedulingPolicyId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given lifecycle state exactly.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetSchedulingPlansInvokeArgs()
        {
        }
        public static new GetSchedulingPlansInvokeArgs Empty => new GetSchedulingPlansInvokeArgs();
    }


    [OutputType]
    public sealed class GetSchedulingPlansResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The display name of the Scheduling Plan.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetSchedulingPlansFilterResult> Filters;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Scheduling Plan.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource.
        /// </summary>
        public readonly string? ResourceId;
        /// <summary>
        /// The list of scheduling_plan_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSchedulingPlansSchedulingPlanCollectionResult> SchedulingPlanCollections;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Scheduling Policy.
        /// </summary>
        public readonly string? SchedulingPolicyId;
        /// <summary>
        /// The current state of the Scheduling Plan. Valid states are CREATING, NEEDS_ATTENTION, AVAILABLE, UPDATING, FAILED, DELETING and DELETED.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetSchedulingPlansResult(
            string compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetSchedulingPlansFilterResult> filters,

            string? id,

            string? resourceId,

            ImmutableArray<Outputs.GetSchedulingPlansSchedulingPlanCollectionResult> schedulingPlanCollections,

            string? schedulingPolicyId,

            string? state)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            ResourceId = resourceId;
            SchedulingPlanCollections = schedulingPlanCollections;
            SchedulingPolicyId = schedulingPolicyId;
            State = state;
        }
    }
}
