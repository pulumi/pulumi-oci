// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Database
{
    public static class GetSchedulingPolicies
    {
        /// <summary>
        /// This data source provides the list of Scheduling Policies in Oracle Cloud Infrastructure Database service.
        /// 
        /// Lists the Scheduling Policy resources in the specified compartment.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSchedulingPolicies = Oci.Database.GetSchedulingPolicies.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = schedulingPolicyDisplayName,
        ///         State = schedulingPolicyState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSchedulingPoliciesResult> InvokeAsync(GetSchedulingPoliciesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSchedulingPoliciesResult>("oci:Database/getSchedulingPolicies:getSchedulingPolicies", args ?? new GetSchedulingPoliciesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Scheduling Policies in Oracle Cloud Infrastructure Database service.
        /// 
        /// Lists the Scheduling Policy resources in the specified compartment.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSchedulingPolicies = Oci.Database.GetSchedulingPolicies.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = schedulingPolicyDisplayName,
        ///         State = schedulingPolicyState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSchedulingPoliciesResult> Invoke(GetSchedulingPoliciesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSchedulingPoliciesResult>("oci:Database/getSchedulingPolicies:getSchedulingPolicies", args ?? new GetSchedulingPoliciesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Scheduling Policies in Oracle Cloud Infrastructure Database service.
        /// 
        /// Lists the Scheduling Policy resources in the specified compartment.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSchedulingPolicies = Oci.Database.GetSchedulingPolicies.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = schedulingPolicyDisplayName,
        ///         State = schedulingPolicyState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSchedulingPoliciesResult> Invoke(GetSchedulingPoliciesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSchedulingPoliciesResult>("oci:Database/getSchedulingPolicies:getSchedulingPolicies", args ?? new GetSchedulingPoliciesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSchedulingPoliciesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire display name given. The match is not case sensitive.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetSchedulingPoliciesFilterArgs>? _filters;
        public List<Inputs.GetSchedulingPoliciesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetSchedulingPoliciesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only resources that match the given lifecycle state exactly.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetSchedulingPoliciesArgs()
        {
        }
        public static new GetSchedulingPoliciesArgs Empty => new GetSchedulingPoliciesArgs();
    }

    public sealed class GetSchedulingPoliciesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire display name given. The match is not case sensitive.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetSchedulingPoliciesFilterInputArgs>? _filters;
        public InputList<Inputs.GetSchedulingPoliciesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetSchedulingPoliciesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only resources that match the given lifecycle state exactly.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetSchedulingPoliciesInvokeArgs()
        {
        }
        public static new GetSchedulingPoliciesInvokeArgs Empty => new GetSchedulingPoliciesInvokeArgs();
    }


    [OutputType]
    public sealed class GetSchedulingPoliciesResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The user-friendly name for the Scheduling Policy. The name does not need to be unique.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetSchedulingPoliciesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of scheduling_policies.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSchedulingPoliciesSchedulingPolicyResult> SchedulingPolicies;
        /// <summary>
        /// The current state of the Scheduling Policy. Valid states are CREATING, NEEDS_ATTENTION, ACTIVE, UPDATING, FAILED, DELETING and DELETED.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetSchedulingPoliciesResult(
            string compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetSchedulingPoliciesFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetSchedulingPoliciesSchedulingPolicyResult> schedulingPolicies,

            string? state)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            SchedulingPolicies = schedulingPolicies;
            State = state;
        }
    }
}
