// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Database
{
    public static class GetSystemVersionMinorVersions
    {
        /// <summary>
        /// This data source provides the list of System Version Minor Versions in Oracle Cloud Infrastructure Database service.
        /// 
        /// Retrieves a list of supported minor versions for the specified Exadata System Software major version. You must provide either a `Shape` or `resourceId` value.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSystemVersionMinorVersions = Oci.Database.GetSystemVersionMinorVersions.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         GiVersion = systemVersionMinorVersionGiVersion,
        ///         MajorVersion = systemVersionMinorVersionMajorVersion,
        ///         IsLatest = systemVersionMinorVersionIsLatest,
        ///         ResourceId = testResource.Id,
        ///         Shape = systemVersionMinorVersionShape,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSystemVersionMinorVersionsResult> InvokeAsync(GetSystemVersionMinorVersionsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSystemVersionMinorVersionsResult>("oci:Database/getSystemVersionMinorVersions:getSystemVersionMinorVersions", args ?? new GetSystemVersionMinorVersionsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of System Version Minor Versions in Oracle Cloud Infrastructure Database service.
        /// 
        /// Retrieves a list of supported minor versions for the specified Exadata System Software major version. You must provide either a `Shape` or `resourceId` value.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSystemVersionMinorVersions = Oci.Database.GetSystemVersionMinorVersions.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         GiVersion = systemVersionMinorVersionGiVersion,
        ///         MajorVersion = systemVersionMinorVersionMajorVersion,
        ///         IsLatest = systemVersionMinorVersionIsLatest,
        ///         ResourceId = testResource.Id,
        ///         Shape = systemVersionMinorVersionShape,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSystemVersionMinorVersionsResult> Invoke(GetSystemVersionMinorVersionsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSystemVersionMinorVersionsResult>("oci:Database/getSystemVersionMinorVersions:getSystemVersionMinorVersions", args ?? new GetSystemVersionMinorVersionsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of System Version Minor Versions in Oracle Cloud Infrastructure Database service.
        /// 
        /// Retrieves a list of supported minor versions for the specified Exadata System Software major version. You must provide either a `Shape` or `resourceId` value.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSystemVersionMinorVersions = Oci.Database.GetSystemVersionMinorVersions.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         GiVersion = systemVersionMinorVersionGiVersion,
        ///         MajorVersion = systemVersionMinorVersionMajorVersion,
        ///         IsLatest = systemVersionMinorVersionIsLatest,
        ///         ResourceId = testResource.Id,
        ///         Shape = systemVersionMinorVersionShape,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSystemVersionMinorVersionsResult> Invoke(GetSystemVersionMinorVersionsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSystemVersionMinorVersionsResult>("oci:Database/getSystemVersionMinorVersions:getSystemVersionMinorVersions", args ?? new GetSystemVersionMinorVersionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSystemVersionMinorVersionsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetSystemVersionMinorVersionsFilterArgs>? _filters;
        public List<Inputs.GetSystemVersionMinorVersionsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetSystemVersionMinorVersionsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Specifies gi version query parameter.
        /// </summary>
        [Input("giVersion", required: true)]
        public string GiVersion { get; set; } = null!;

        /// <summary>
        /// If provided, return highest versions from each major version family.
        /// </summary>
        [Input("isLatest")]
        public bool? IsLatest { get; set; }

        /// <summary>
        /// The System major version.
        /// </summary>
        [Input("majorVersion", required: true)]
        public string MajorVersion { get; set; } = null!;

        /// <summary>
        /// If provided, filters the results for the specified resource Id.
        /// </summary>
        [Input("resourceId")]
        public string? ResourceId { get; set; }

        /// <summary>
        /// If provided, filters the results for the given shape.
        /// </summary>
        [Input("shape")]
        public string? Shape { get; set; }

        public GetSystemVersionMinorVersionsArgs()
        {
        }
        public static new GetSystemVersionMinorVersionsArgs Empty => new GetSystemVersionMinorVersionsArgs();
    }

    public sealed class GetSystemVersionMinorVersionsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetSystemVersionMinorVersionsFilterInputArgs>? _filters;
        public InputList<Inputs.GetSystemVersionMinorVersionsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetSystemVersionMinorVersionsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Specifies gi version query parameter.
        /// </summary>
        [Input("giVersion", required: true)]
        public Input<string> GiVersion { get; set; } = null!;

        /// <summary>
        /// If provided, return highest versions from each major version family.
        /// </summary>
        [Input("isLatest")]
        public Input<bool>? IsLatest { get; set; }

        /// <summary>
        /// The System major version.
        /// </summary>
        [Input("majorVersion", required: true)]
        public Input<string> MajorVersion { get; set; } = null!;

        /// <summary>
        /// If provided, filters the results for the specified resource Id.
        /// </summary>
        [Input("resourceId")]
        public Input<string>? ResourceId { get; set; }

        /// <summary>
        /// If provided, filters the results for the given shape.
        /// </summary>
        [Input("shape")]
        public Input<string>? Shape { get; set; }

        public GetSystemVersionMinorVersionsInvokeArgs()
        {
        }
        public static new GetSystemVersionMinorVersionsInvokeArgs Empty => new GetSystemVersionMinorVersionsInvokeArgs();
    }


    [OutputType]
    public sealed class GetSystemVersionMinorVersionsResult
    {
        public readonly string CompartmentId;
        public readonly ImmutableArray<Outputs.GetSystemVersionMinorVersionsFilterResult> Filters;
        public readonly string GiVersion;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool? IsLatest;
        public readonly string MajorVersion;
        public readonly string? ResourceId;
        public readonly string? Shape;
        /// <summary>
        /// The list of system_version_minor_version_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSystemVersionMinorVersionsSystemVersionMinorVersionCollectionResult> SystemVersionMinorVersionCollections;

        [OutputConstructor]
        private GetSystemVersionMinorVersionsResult(
            string compartmentId,

            ImmutableArray<Outputs.GetSystemVersionMinorVersionsFilterResult> filters,

            string giVersion,

            string id,

            bool? isLatest,

            string majorVersion,

            string? resourceId,

            string? shape,

            ImmutableArray<Outputs.GetSystemVersionMinorVersionsSystemVersionMinorVersionCollectionResult> systemVersionMinorVersionCollections)
        {
            CompartmentId = compartmentId;
            Filters = filters;
            GiVersion = giVersion;
            Id = id;
            IsLatest = isLatest;
            MajorVersion = majorVersion;
            ResourceId = resourceId;
            Shape = shape;
            SystemVersionMinorVersionCollections = systemVersionMinorVersionCollections;
        }
    }
}
