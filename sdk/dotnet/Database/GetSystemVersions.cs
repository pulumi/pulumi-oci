// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Database
{
    public static class GetSystemVersions
    {
        /// <summary>
        /// This data source provides the list of System Versions in Oracle Cloud Infrastructure Database service.
        /// 
        /// Gets a list of supported Exadata system versions for a given shape and GI version.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSystemVersions = Oci.Database.GetSystemVersions.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         GiVersion = systemVersionGiVersion,
        ///         Shape = systemVersionShape,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetSystemVersionsResult> InvokeAsync(GetSystemVersionsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSystemVersionsResult>("oci:Database/getSystemVersions:getSystemVersions", args ?? new GetSystemVersionsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of System Versions in Oracle Cloud Infrastructure Database service.
        /// 
        /// Gets a list of supported Exadata system versions for a given shape and GI version.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSystemVersions = Oci.Database.GetSystemVersions.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         GiVersion = systemVersionGiVersion,
        ///         Shape = systemVersionShape,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetSystemVersionsResult> Invoke(GetSystemVersionsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSystemVersionsResult>("oci:Database/getSystemVersions:getSystemVersions", args ?? new GetSystemVersionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSystemVersionsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetSystemVersionsFilterArgs>? _filters;
        public List<Inputs.GetSystemVersionsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetSystemVersionsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Specifies gi version query parameter.
        /// </summary>
        [Input("giVersion", required: true)]
        public string GiVersion { get; set; } = null!;

        /// <summary>
        /// Specifies shape query parameter.
        /// </summary>
        [Input("shape", required: true)]
        public string Shape { get; set; } = null!;

        public GetSystemVersionsArgs()
        {
        }
        public static new GetSystemVersionsArgs Empty => new GetSystemVersionsArgs();
    }

    public sealed class GetSystemVersionsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetSystemVersionsFilterInputArgs>? _filters;
        public InputList<Inputs.GetSystemVersionsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetSystemVersionsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Specifies gi version query parameter.
        /// </summary>
        [Input("giVersion", required: true)]
        public Input<string> GiVersion { get; set; } = null!;

        /// <summary>
        /// Specifies shape query parameter.
        /// </summary>
        [Input("shape", required: true)]
        public Input<string> Shape { get; set; } = null!;

        public GetSystemVersionsInvokeArgs()
        {
        }
        public static new GetSystemVersionsInvokeArgs Empty => new GetSystemVersionsInvokeArgs();
    }


    [OutputType]
    public sealed class GetSystemVersionsResult
    {
        public readonly string CompartmentId;
        public readonly ImmutableArray<Outputs.GetSystemVersionsFilterResult> Filters;
        /// <summary>
        /// Grid Infrastructure version.
        /// </summary>
        public readonly string GiVersion;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Exadata shape.
        /// </summary>
        public readonly string Shape;
        /// <summary>
        /// The list of system_version_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSystemVersionsSystemVersionCollectionResult> SystemVersionCollections;

        [OutputConstructor]
        private GetSystemVersionsResult(
            string compartmentId,

            ImmutableArray<Outputs.GetSystemVersionsFilterResult> filters,

            string giVersion,

            string id,

            string shape,

            ImmutableArray<Outputs.GetSystemVersionsSystemVersionCollectionResult> systemVersionCollections)
        {
            CompartmentId = compartmentId;
            Filters = filters;
            GiVersion = giVersion;
            Id = id;
            Shape = shape;
            SystemVersionCollections = systemVersionCollections;
        }
    }
}
