// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Database.Inputs
{

    public sealed class DbSystemDbHomeDatabaseDbBackupConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) If set to true, configures automatic backups. If you previously used RMAN or dbcli to configure backups and then you switch to using the Console or the API for backups, a new backup configuration is created and associated with your database. This means that you can no longer rely on your previously configured unmanaged backups to work.
        /// </summary>
        [Input("autoBackupEnabled")]
        public Input<bool>? AutoBackupEnabled { get; set; }

        /// <summary>
        /// (Updatable) Time window selected for initiating automatic backup for the database system. There are twelve available two-hour time windows. If no option is selected, a start time between 12:00 AM to 7:00 AM in the region of the database is automatically chosen. For example, if the user selects SLOT_TWO from the enum list, the automatic backup job will start in between 2:00 AM (inclusive) to 4:00 AM (exclusive).  Example: `SLOT_TWO`
        /// </summary>
        [Input("autoBackupWindow")]
        public Input<string>? AutoBackupWindow { get; set; }

        /// <summary>
        /// Day of the week the full backup should be applied on the database system. If no option is selected, the value is null and we will default to Sunday.
        /// </summary>
        [Input("autoFullBackupDay")]
        public Input<string>? AutoFullBackupDay { get; set; }

        /// <summary>
        /// Time window selected for initiating full backup for the database system. There are twelve available two-hour time windows. If no option is selected, the value is null and a start time between 12:00 AM to 7:00 AM in the region of the database is automatically chosen. For example, if the user selects SLOT_TWO from the enum list, the automatic backup job will start in between 2:00 AM (inclusive) to 4:00 AM (exclusive).  Example: `SLOT_TWO`
        /// </summary>
        [Input("autoFullBackupWindow")]
        public Input<string>? AutoFullBackupWindow { get; set; }

        /// <summary>
        /// This defines when the backups will be deleted. - IMMEDIATE option keep the backup for predefined time i.e 72 hours and then delete permanently... - RETAIN will keep the backups as per the policy defined for database backups.
        /// </summary>
        [Input("backupDeletionPolicy")]
        public Input<string>? BackupDeletionPolicy { get; set; }

        [Input("backupDestinationDetails")]
        private InputList<Inputs.DbSystemDbHomeDatabaseDbBackupConfigBackupDestinationDetailArgs>? _backupDestinationDetails;

        /// <summary>
        /// (Updatable) Backup destination details.
        /// </summary>
        public InputList<Inputs.DbSystemDbHomeDatabaseDbBackupConfigBackupDestinationDetailArgs> BackupDestinationDetails
        {
            get => _backupDestinationDetails ?? (_backupDestinationDetails = new InputList<Inputs.DbSystemDbHomeDatabaseDbBackupConfigBackupDestinationDetailArgs>());
            set => _backupDestinationDetails = value;
        }

        /// <summary>
        /// (Updatable) Number of days between the current and the earliest point of recoverability covered by automatic backups. This value applies to automatic backups only. After a new automatic backup has been created, Oracle removes old automatic backups that are created before the window. When the value is updated, it is applied to all existing automatic backups.
        /// </summary>
        [Input("recoveryWindowInDays")]
        public Input<int>? RecoveryWindowInDays { get; set; }

        /// <summary>
        /// If set to true, configures automatic full backups in the local region (the region of the DB system) for the first backup run immediately.
        /// </summary>
        [Input("runImmediateFullBackup")]
        public Input<bool>? RunImmediateFullBackup { get; set; }

        public DbSystemDbHomeDatabaseDbBackupConfigArgs()
        {
        }
        public static new DbSystemDbHomeDatabaseDbBackupConfigArgs Empty => new DbSystemDbHomeDatabaseDbBackupConfigArgs();
    }
}
