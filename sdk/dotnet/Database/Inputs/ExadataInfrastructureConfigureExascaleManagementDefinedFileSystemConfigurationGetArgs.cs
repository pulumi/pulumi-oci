// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Database.Inputs
{

    public sealed class ExadataInfrastructureConfigureExascaleManagementDefinedFileSystemConfigurationGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// If true, the file system is used to create a backup prior to Exadata VM OS update.
        /// </summary>
        [Input("isBackupPartition")]
        public Input<bool>? IsBackupPartition { get; set; }

        /// <summary>
        /// If true, the file system resize is allowed for the Exadata Infrastructure cluster. If false, the file system resize is not allowed.
        /// </summary>
        [Input("isResizable")]
        public Input<bool>? IsResizable { get; set; }

        /// <summary>
        /// The minimum size of file system.
        /// </summary>
        [Input("minSizeGb")]
        public Input<int>? MinSizeGb { get; set; }

        /// <summary>
        /// The mount point of file system.
        /// </summary>
        [Input("mountPoint")]
        public Input<string>? MountPoint { get; set; }

        public ExadataInfrastructureConfigureExascaleManagementDefinedFileSystemConfigurationGetArgs()
        {
        }
        public static new ExadataInfrastructureConfigureExascaleManagementDefinedFileSystemConfigurationGetArgs Empty => new ExadataInfrastructureConfigureExascaleManagementDefinedFileSystemConfigurationGetArgs();
    }
}
