// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Database.Outputs
{

    [OutputType]
    public sealed class AutonomousContainerDatabaseAddStandbyKeyHistoryEntry
    {
        /// <summary>
        /// The id of the Autonomous Database [Vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts) service key management history entry.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation. Autonomous Database Serverless does not use key versions, hence is not applicable for Autonomous Database Serverless instances.
        /// </summary>
        public readonly string? KmsKeyVersionId;
        /// <summary>
        /// The date and time the kms key activated.
        /// </summary>
        public readonly string? TimeActivated;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts). This parameter and `secretId` are required for Customer Managed Keys.
        /// </summary>
        public readonly string? VaultId;

        [OutputConstructor]
        private AutonomousContainerDatabaseAddStandbyKeyHistoryEntry(
            string? id,

            string? kmsKeyVersionId,

            string? timeActivated,

            string? vaultId)
        {
            Id = id;
            KmsKeyVersionId = kmsKeyVersionId;
            TimeActivated = timeActivated;
            VaultId = vaultId;
        }
    }
}
