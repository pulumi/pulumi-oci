// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Database.Outputs
{

    [OutputType]
    public sealed class GetAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfigBackupDestinationDetailResult
    {
        /// <summary>
        /// The id of the Autonomous Database [Vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts) service key management history entry.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Proxy URL to connect to object store.
        /// </summary>
        public readonly string InternetProxy;
        /// <summary>
        /// Indicates whether the backup destination is cross-region or local region.
        /// </summary>
        public readonly bool IsRemote;
        /// <summary>
        /// The name of the remote region where the remote automatic incremental backups will be stored.
        /// </summary>
        public readonly string RemoteRegion;
        /// <summary>
        /// Type of the database backup destination.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// For a RECOVERY_APPLIANCE backup destination, the password for the VPC user that is used to access the Recovery Appliance.
        /// </summary>
        public readonly string VpcPassword;
        /// <summary>
        /// For a RECOVERY_APPLIANCE backup destination, the Virtual Private Catalog (VPC) user that is used to access the Recovery Appliance.
        /// </summary>
        public readonly string VpcUser;

        [OutputConstructor]
        private GetAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfigBackupDestinationDetailResult(
            string id,

            string internetProxy,

            bool isRemote,

            string remoteRegion,

            string type,

            string vpcPassword,

            string vpcUser)
        {
            Id = id;
            InternetProxy = internetProxy;
            IsRemote = isRemote;
            RemoteRegion = remoteRegion;
            Type = type;
            VpcPassword = vpcPassword;
            VpcUser = vpcUser;
        }
    }
}
