// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Database.Outputs
{

    [OutputType]
    public sealed class GetAutonomousContainerDatabasesAutonomousContainerDatabaseResult
    {
        /// <summary>
        /// The Autonomous Exadata Infrastructure [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        public readonly string AutonomousExadataInfrastructureId;
        /// <summary>
        /// The Autonomous VM Cluster [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        public readonly string AutonomousVmClusterId;
        /// <summary>
        /// A filter to return only resources that match the given availability domain exactly.
        /// </summary>
        public readonly string AvailabilityDomain;
        /// <summary>
        /// Sum of CPUs available on the Autonomous VM Cluster + Sum of reclaimable CPUs available in the Autonomous Container Database.&lt;br&gt; For Autonomous Databases on Dedicated Exadata Infrastructure, the CPU type (OCPUs or ECPUs) is determined by the parent Autonomous Exadata VM Cluster's compute model. See [Compute Models in Autonomous Database on Dedicated Exadata Infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/dedicated/adbak) for more details.
        /// </summary>
        public readonly double AvailableCpus;
        /// <summary>
        /// Backup options for the Autonomous Container Database.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAutonomousContainerDatabasesAutonomousContainerDatabaseBackupConfigResult> BackupConfigs;
        /// <summary>
        /// The cloud Autonomous VM Cluster [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        public readonly string CloudAutonomousVmClusterId;
        /// <summary>
        /// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The compute model of the Autonomous Container Database. For Autonomous Database on Dedicated Exadata Infrastructure, the CPU type (ECPUs or OCPUs) is determined by the parent Autonomous Exadata VM Cluster's compute model. ECPU compute model is the recommended model and OCPU compute model is legacy. See [Compute Models in Autonomous Database on Dedicated Exadata Infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/dedicated/adbak) for more details.
        /// </summary>
        public readonly string ComputeModel;
        public readonly string DatabaseSoftwareImageId;
        /// <summary>
        /// The Database name for the Autonomous Container Database. The name must be unique within the Cloud Autonomous VM Cluster, starting with an alphabetic character, followed by 1 to 7 alphanumeric characters.
        /// </summary>
        public readonly string DbName;
        /// <summary>
        /// The CPU value beyond which an Autonomous Database will be opened across multiple nodes. The default value of this attribute is 16 for OCPUs and 64 for ECPUs.
        /// </summary>
        public readonly int DbSplitThreshold;
        public readonly string DbUniqueName;
        /// <summary>
        /// Oracle Database version of the Autonomous Container Database.
        /// </summary>
        public readonly string DbVersion;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// A filter to return only resources that match the entire display name given. The match is not case sensitive.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Determines whether an Autonomous Database must be opened across the maximum number of nodes or the least number of nodes. By default, Minimum nodes is selected.
        /// </summary>
        public readonly string DistributionAffinity;
        /// <summary>
        /// DST Time-zone File version of the Autonomous Container Database.
        /// </summary>
        public readonly string DstFileVersion;
        public readonly int FastStartFailOverLagLimitInSeconds;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The id of the Autonomous Database [Vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts) service key management history entry.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A filter to return only resources that match the given Infrastructure Type.
        /// </summary>
        public readonly string InfrastructureType;
        public readonly bool IsAutomaticFailoverEnabled;
        /// <summary>
        /// Indicates if an automatic DST Time Zone file update is enabled for the Autonomous Container Database. If enabled along with Release Update, patching will be done in a Non-Rolling manner.
        /// </summary>
        public readonly bool IsDstFileUpdateEnabled;
        /// <summary>
        /// Key History Entry.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAutonomousContainerDatabasesAutonomousContainerDatabaseKeyHistoryEntryResult> KeyHistoryEntries;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store of Oracle Vault.
        /// </summary>
        public readonly string KeyStoreId;
        /// <summary>
        /// The wallet name for Oracle Key Vault.
        /// </summary>
        public readonly string KeyStoreWalletName;
        public readonly string KeyVersionId;
        /// <summary>
        /// The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
        /// </summary>
        public readonly string KmsKeyId;
        /// <summary>
        /// The largest Autonomous Database (CPU) that can be created in a new Autonomous Container Database.
        /// </summary>
        public readonly double LargestProvisionableAutonomousDatabaseInCpus;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance run.
        /// </summary>
        public readonly string LastMaintenanceRunId;
        /// <summary>
        /// Additional information about the current lifecycle state.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// List of One-Off patches that has been successfully applied to Autonomous Container Database
        /// </summary>
        public readonly ImmutableArray<string> ListOneOffPatches;
        public readonly ImmutableArray<Outputs.GetAutonomousContainerDatabasesAutonomousContainerDatabaseMaintenanceWindowDetailResult> MaintenanceWindowDetails;
        /// <summary>
        /// The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAutonomousContainerDatabasesAutonomousContainerDatabaseMaintenanceWindowResult> MaintenanceWindows;
        /// <summary>
        /// The amount of memory (in GBs) enabled per ECPU or OCPU in the Autonomous VM Cluster.
        /// </summary>
        public readonly int MemoryPerOracleComputeUnitInGbs;
        /// <summary>
        /// Enabling SHARED server architecture enables a database server to allow many client processes to share very few server processes, thereby increasing the number of supported users.
        /// </summary>
        public readonly string NetServicesArchitecture;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the next maintenance run.
        /// </summary>
        public readonly string NextMaintenanceRunId;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch applied on the system.
        /// </summary>
        public readonly string PatchId;
        /// <summary>
        /// Database patch model preference.
        /// </summary>
        public readonly string PatchModel;
        public readonly ImmutableArray<Outputs.GetAutonomousContainerDatabasesAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfigResult> PeerAutonomousContainerDatabaseBackupConfigs;
        public readonly string PeerAutonomousContainerDatabaseCompartmentId;
        public readonly string PeerAutonomousContainerDatabaseDisplayName;
        public readonly string PeerAutonomousExadataInfrastructureId;
        public readonly string PeerAutonomousVmClusterId;
        public readonly string PeerCloudAutonomousVmClusterId;
        public readonly string PeerDbUniqueName;
        public readonly string ProtectionMode;
        /// <summary>
        /// An array of CPU values that can be used to successfully provision a single Autonomous Database.
        /// </summary>
        public readonly ImmutableArray<double> ProvisionableCpuses;
        /// <summary>
        /// The number of CPUs provisioned in an Autonomous Container Database.
        /// </summary>
        public readonly double ProvisionedCpus;
        /// <summary>
        /// CPUs that continue to be included in the count of CPUs available to the Autonomous Container Database even after one of its Autonomous Database is terminated or scaled down. You can release them to the available CPUs at its parent Autonomous VM Cluster level by restarting the Autonomous Container Database.
        /// </summary>
        public readonly double ReclaimableCpus;
        /// <summary>
        /// The number of CPUs reserved in an Autonomous Container Database.
        /// </summary>
        public readonly double ReservedCpus;
        /// <summary>
        /// The Data Guard role of the Autonomous Container Database or Autonomous Database, if Autonomous Data Guard is enabled.
        /// </summary>
        public readonly string Role;
        public readonly bool RotateKeyTrigger;
        /// <summary>
        /// A filter to return only resources that match the given service level agreement type exactly.
        /// </summary>
        public readonly string ServiceLevelAgreementType;
        /// <summary>
        /// The scheduling detail for the quarterly maintenance window of the standby Autonomous Container Database. This value represents the number of days before scheduled maintenance of the primary database.
        /// </summary>
        public readonly int StandbyMaintenanceBufferInDays;
        /// <summary>
        /// A filter to return only resources that match the given lifecycle state exactly.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The date and time the Autonomous Container Database was created.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The timestamp of last successful backup. Here NULL value represents either there are no successful backups or backups are not configured for this Autonomous Container Database.
        /// </summary>
        public readonly string TimeOfLastBackup;
        /// <summary>
        /// The date and time the Autonomous Container Database will be reverted to Standby from Snapshot Standby.
        /// </summary>
        public readonly string TimeSnapshotStandbyRevert;
        /// <summary>
        /// The number of CPUs allocated to the Autonomous VM cluster.&lt;br&gt; For Autonomous Databases on Dedicated Exadata Infrastructure, the CPU type (OCPUs or ECPUs) is determined by the parent Autonomous Exadata VM Cluster's compute model.
        /// </summary>
        public readonly int TotalCpus;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
        /// </summary>
        public readonly string VaultId;
        /// <summary>
        /// The next maintenance version preference.
        /// </summary>
        public readonly string VersionPreference;
        /// <summary>
        /// The percentage of CPUs reserved across nodes to support node failover. Allowed values are 0%, 25%, and 50%, with 50% being the default option.
        /// </summary>
        public readonly int VmFailoverReservation;

        [OutputConstructor]
        private GetAutonomousContainerDatabasesAutonomousContainerDatabaseResult(
            string autonomousExadataInfrastructureId,

            string autonomousVmClusterId,

            string availabilityDomain,

            double availableCpus,

            ImmutableArray<Outputs.GetAutonomousContainerDatabasesAutonomousContainerDatabaseBackupConfigResult> backupConfigs,

            string cloudAutonomousVmClusterId,

            string compartmentId,

            string computeModel,

            string databaseSoftwareImageId,

            string dbName,

            int dbSplitThreshold,

            string dbUniqueName,

            string dbVersion,

            ImmutableDictionary<string, string> definedTags,

            string displayName,

            string distributionAffinity,

            string dstFileVersion,

            int fastStartFailOverLagLimitInSeconds,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            string infrastructureType,

            bool isAutomaticFailoverEnabled,

            bool isDstFileUpdateEnabled,

            ImmutableArray<Outputs.GetAutonomousContainerDatabasesAutonomousContainerDatabaseKeyHistoryEntryResult> keyHistoryEntries,

            string keyStoreId,

            string keyStoreWalletName,

            string keyVersionId,

            string kmsKeyId,

            double largestProvisionableAutonomousDatabaseInCpus,

            string lastMaintenanceRunId,

            string lifecycleDetails,

            ImmutableArray<string> listOneOffPatches,

            ImmutableArray<Outputs.GetAutonomousContainerDatabasesAutonomousContainerDatabaseMaintenanceWindowDetailResult> maintenanceWindowDetails,

            ImmutableArray<Outputs.GetAutonomousContainerDatabasesAutonomousContainerDatabaseMaintenanceWindowResult> maintenanceWindows,

            int memoryPerOracleComputeUnitInGbs,

            string netServicesArchitecture,

            string nextMaintenanceRunId,

            string patchId,

            string patchModel,

            ImmutableArray<Outputs.GetAutonomousContainerDatabasesAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfigResult> peerAutonomousContainerDatabaseBackupConfigs,

            string peerAutonomousContainerDatabaseCompartmentId,

            string peerAutonomousContainerDatabaseDisplayName,

            string peerAutonomousExadataInfrastructureId,

            string peerAutonomousVmClusterId,

            string peerCloudAutonomousVmClusterId,

            string peerDbUniqueName,

            string protectionMode,

            ImmutableArray<double> provisionableCpuses,

            double provisionedCpus,

            double reclaimableCpus,

            double reservedCpus,

            string role,

            bool rotateKeyTrigger,

            string serviceLevelAgreementType,

            int standbyMaintenanceBufferInDays,

            string state,

            string timeCreated,

            string timeOfLastBackup,

            string timeSnapshotStandbyRevert,

            int totalCpus,

            string vaultId,

            string versionPreference,

            int vmFailoverReservation)
        {
            AutonomousExadataInfrastructureId = autonomousExadataInfrastructureId;
            AutonomousVmClusterId = autonomousVmClusterId;
            AvailabilityDomain = availabilityDomain;
            AvailableCpus = availableCpus;
            BackupConfigs = backupConfigs;
            CloudAutonomousVmClusterId = cloudAutonomousVmClusterId;
            CompartmentId = compartmentId;
            ComputeModel = computeModel;
            DatabaseSoftwareImageId = databaseSoftwareImageId;
            DbName = dbName;
            DbSplitThreshold = dbSplitThreshold;
            DbUniqueName = dbUniqueName;
            DbVersion = dbVersion;
            DefinedTags = definedTags;
            DisplayName = displayName;
            DistributionAffinity = distributionAffinity;
            DstFileVersion = dstFileVersion;
            FastStartFailOverLagLimitInSeconds = fastStartFailOverLagLimitInSeconds;
            FreeformTags = freeformTags;
            Id = id;
            InfrastructureType = infrastructureType;
            IsAutomaticFailoverEnabled = isAutomaticFailoverEnabled;
            IsDstFileUpdateEnabled = isDstFileUpdateEnabled;
            KeyHistoryEntries = keyHistoryEntries;
            KeyStoreId = keyStoreId;
            KeyStoreWalletName = keyStoreWalletName;
            KeyVersionId = keyVersionId;
            KmsKeyId = kmsKeyId;
            LargestProvisionableAutonomousDatabaseInCpus = largestProvisionableAutonomousDatabaseInCpus;
            LastMaintenanceRunId = lastMaintenanceRunId;
            LifecycleDetails = lifecycleDetails;
            ListOneOffPatches = listOneOffPatches;
            MaintenanceWindowDetails = maintenanceWindowDetails;
            MaintenanceWindows = maintenanceWindows;
            MemoryPerOracleComputeUnitInGbs = memoryPerOracleComputeUnitInGbs;
            NetServicesArchitecture = netServicesArchitecture;
            NextMaintenanceRunId = nextMaintenanceRunId;
            PatchId = patchId;
            PatchModel = patchModel;
            PeerAutonomousContainerDatabaseBackupConfigs = peerAutonomousContainerDatabaseBackupConfigs;
            PeerAutonomousContainerDatabaseCompartmentId = peerAutonomousContainerDatabaseCompartmentId;
            PeerAutonomousContainerDatabaseDisplayName = peerAutonomousContainerDatabaseDisplayName;
            PeerAutonomousExadataInfrastructureId = peerAutonomousExadataInfrastructureId;
            PeerAutonomousVmClusterId = peerAutonomousVmClusterId;
            PeerCloudAutonomousVmClusterId = peerCloudAutonomousVmClusterId;
            PeerDbUniqueName = peerDbUniqueName;
            ProtectionMode = protectionMode;
            ProvisionableCpuses = provisionableCpuses;
            ProvisionedCpus = provisionedCpus;
            ReclaimableCpus = reclaimableCpus;
            ReservedCpus = reservedCpus;
            Role = role;
            RotateKeyTrigger = rotateKeyTrigger;
            ServiceLevelAgreementType = serviceLevelAgreementType;
            StandbyMaintenanceBufferInDays = standbyMaintenanceBufferInDays;
            State = state;
            TimeCreated = timeCreated;
            TimeOfLastBackup = timeOfLastBackup;
            TimeSnapshotStandbyRevert = timeSnapshotStandbyRevert;
            TotalCpus = totalCpus;
            VaultId = vaultId;
            VersionPreference = versionPreference;
            VmFailoverReservation = vmFailoverReservation;
        }
    }
}
