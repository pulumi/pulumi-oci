// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Database.Outputs
{

    [OutputType]
    public sealed class GetAutonomousExadataInfrastructureShapesAutonomousExadataInfrastructureShapeResult
    {
        /// <summary>
        /// The maximum number of CPU cores that can be enabled on the Autonomous Exadata Infrastructure.
        /// </summary>
        public readonly int AvailableCoreCount;
        /// <summary>
        /// The increment in which core count can be increased or decreased.
        /// </summary>
        public readonly int CoreCountIncrement;
        /// <summary>
        /// The maximum number of nodes available for the shape.
        /// </summary>
        public readonly int MaximumNodeCount;
        /// <summary>
        /// The minimum number of CPU cores that can be enabled on the Autonomous Exadata Infrastructure.
        /// </summary>
        public readonly int MinimumCoreCount;
        /// <summary>
        /// The minimum number of nodes available for the shape.
        /// </summary>
        public readonly int MinimumNodeCount;
        /// <summary>
        /// The name of the shape used for the Autonomous Exadata Infrastructure.
        /// </summary>
        public readonly string Name;

        [OutputConstructor]
        private GetAutonomousExadataInfrastructureShapesAutonomousExadataInfrastructureShapeResult(
            int availableCoreCount,

            int coreCountIncrement,

            int maximumNodeCount,

            int minimumCoreCount,

            int minimumNodeCount,

            string name)
        {
            AvailableCoreCount = availableCoreCount;
            CoreCountIncrement = coreCountIncrement;
            MaximumNodeCount = maximumNodeCount;
            MinimumCoreCount = minimumCoreCount;
            MinimumNodeCount = minimumNodeCount;
            Name = name;
        }
    }
}
