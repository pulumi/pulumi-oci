// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Database.Outputs
{

    [OutputType]
    public sealed class GetBackupsBackupResult
    {
        /// <summary>
        /// The name of the availability domain where the database backup is stored.
        /// </summary>
        public readonly string AvailabilityDomain;
        /// <summary>
        /// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The Oracle Database edition of the DB system from which the database backup was taken.
        /// </summary>
        public readonly string DatabaseEdition;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
        /// </summary>
        public readonly string DatabaseId;
        /// <summary>
        /// The size of the database in gigabytes at the time the backup was taken.
        /// </summary>
        public readonly double DatabaseSizeInGbs;
        /// <summary>
        /// The user-friendly name for the backup. The name does not have to be unique.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
        /// </summary>
        public readonly string KmsKeyId;
        /// <summary>
        /// The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation.
        /// </summary>
        public readonly string KmsKeyVersionId;
        /// <summary>
        /// Additional information about the current lifecycle state.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// Shape of the backup's source database.
        /// </summary>
        public readonly string Shape;
        /// <summary>
        /// The current state of the backup.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The date and time the backup was completed.
        /// </summary>
        public readonly string TimeEnded;
        /// <summary>
        /// The date and time the backup started.
        /// </summary>
        public readonly string TimeStarted;
        /// <summary>
        /// The type of backup.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
        /// </summary>
        public readonly string VaultId;
        /// <summary>
        /// Version of the backup's source database
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private GetBackupsBackupResult(
            string availabilityDomain,

            string compartmentId,

            string databaseEdition,

            string databaseId,

            double databaseSizeInGbs,

            string displayName,

            string id,

            string kmsKeyId,

            string kmsKeyVersionId,

            string lifecycleDetails,

            string shape,

            string state,

            string timeEnded,

            string timeStarted,

            string type,

            string vaultId,

            string version)
        {
            AvailabilityDomain = availabilityDomain;
            CompartmentId = compartmentId;
            DatabaseEdition = databaseEdition;
            DatabaseId = databaseId;
            DatabaseSizeInGbs = databaseSizeInGbs;
            DisplayName = displayName;
            Id = id;
            KmsKeyId = kmsKeyId;
            KmsKeyVersionId = kmsKeyVersionId;
            LifecycleDetails = lifecycleDetails;
            Shape = shape;
            State = state;
            TimeEnded = timeEnded;
            TimeStarted = timeStarted;
            Type = type;
            VaultId = vaultId;
            Version = version;
        }
    }
}
