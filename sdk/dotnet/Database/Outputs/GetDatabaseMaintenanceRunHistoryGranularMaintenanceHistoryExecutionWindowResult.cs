// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Database.Outputs
{

    [OutputType]
    public sealed class GetDatabaseMaintenanceRunHistoryGranularMaintenanceHistoryExecutionWindowResult
    {
        /// <summary>
        /// The OCID of the compartment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// Description of the maintenance run.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The user-friendly name for the maintenance run.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// The estimated time of the execution window in minutes.
        /// </summary>
        public readonly int EstimatedTimeInMins;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the execution resource the execution window belongs to.
        /// </summary>
        public readonly string ExecutionResourceId;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The OCID of the maintenance run.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Indicates if duration the user plans to allocate for scheduling window is strictly enforced. The default value is `FALSE`.
        /// </summary>
        public readonly bool IsEnforcedDuration;
        /// <summary>
        /// Additional information about the current lifecycle state.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// The current sub-state of the execution window. Valid states are DURATION_EXCEEDED, MAINTENANCE_IN_PROGRESS and WAITING.
        /// </summary>
        public readonly string LifecycleSubstate;
        /// <summary>
        /// The current state of the maintenance run. For Autonomous Database Serverless instances, valid states are IN_PROGRESS, SUCCEEDED, and FAILED.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The date and time the execution window was created.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The date and time the maintenance run was completed.
        /// </summary>
        public readonly string TimeEnded;
        /// <summary>
        /// The date and time the maintenance run is scheduled to occur.
        /// </summary>
        public readonly string TimeScheduled;
        /// <summary>
        /// The date and time the maintenance run starts.
        /// </summary>
        public readonly string TimeStarted;
        /// <summary>
        /// The last date and time that the execution window was updated.
        /// </summary>
        public readonly string TimeUpdated;
        /// <summary>
        /// The total time taken by corresponding resource activity in minutes.
        /// </summary>
        public readonly int TotalTimeTakenInMins;
        /// <summary>
        /// Duration window allows user to set a duration they plan to allocate for Scheduling window. The duration is in minutes.
        /// </summary>
        public readonly int WindowDurationInMins;
        /// <summary>
        /// The execution window is of PLANNED or UNPLANNED type.
        /// </summary>
        public readonly string WindowType;

        [OutputConstructor]
        private GetDatabaseMaintenanceRunHistoryGranularMaintenanceHistoryExecutionWindowResult(
            string compartmentId,

            ImmutableDictionary<string, string> definedTags,

            string description,

            string displayName,

            int estimatedTimeInMins,

            string executionResourceId,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            bool isEnforcedDuration,

            string lifecycleDetails,

            string lifecycleSubstate,

            string state,

            string timeCreated,

            string timeEnded,

            string timeScheduled,

            string timeStarted,

            string timeUpdated,

            int totalTimeTakenInMins,

            int windowDurationInMins,

            string windowType)
        {
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            EstimatedTimeInMins = estimatedTimeInMins;
            ExecutionResourceId = executionResourceId;
            FreeformTags = freeformTags;
            Id = id;
            IsEnforcedDuration = isEnforcedDuration;
            LifecycleDetails = lifecycleDetails;
            LifecycleSubstate = lifecycleSubstate;
            State = state;
            TimeCreated = timeCreated;
            TimeEnded = timeEnded;
            TimeScheduled = timeScheduled;
            TimeStarted = timeStarted;
            TimeUpdated = timeUpdated;
            TotalTimeTakenInMins = totalTimeTakenInMins;
            WindowDurationInMins = windowDurationInMins;
            WindowType = windowType;
        }
    }
}
