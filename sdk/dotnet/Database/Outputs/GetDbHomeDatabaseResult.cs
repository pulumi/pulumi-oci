// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Database.Outputs
{

    [OutputType]
    public sealed class GetDbHomeDatabaseResult
    {
        public readonly string AdminPassword;
        public readonly string BackupId;
        public readonly string BackupTdePassword;
        public readonly string CharacterSet;
        public readonly ImmutableArray<Outputs.GetDbHomeDatabaseConnectionStringResult> ConnectionStrings;
        public readonly string DatabaseId;
        /// <summary>
        /// The database software image [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
        /// </summary>
        public readonly string DatabaseSoftwareImageId;
        public readonly ImmutableArray<Outputs.GetDbHomeDatabaseDbBackupConfigResult> DbBackupConfigs;
        public readonly string DbName;
        public readonly string DbUniqueName;
        public readonly string DbWorkload;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        public readonly ImmutableArray<Outputs.GetDbHomeDatabaseEncryptionKeyLocationDetailResult> EncryptionKeyLocationDetails;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Home.
        /// </summary>
        public readonly string Id;
        public readonly string KeyStoreId;
        /// <summary>
        /// The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
        /// </summary>
        public readonly string KmsKeyId;
        public readonly string KmsKeyVersionId;
        /// <summary>
        /// Additional information about the current lifecycle state.
        /// </summary>
        public readonly string LifecycleDetails;
        public readonly string NcharacterSet;
        /// <summary>
        /// List of one-off patches for Database Homes.
        /// </summary>
        public readonly ImmutableArray<string> OneOffPatches;
        public readonly string PdbName;
        public readonly ImmutableArray<string> PluggableDatabases;
        public readonly string SidPrefix;
        /// <summary>
        /// The current state of the Database Home.
        /// </summary>
        public readonly string State;
        public readonly string TdeWalletPassword;
        /// <summary>
        /// The date and time the Database Home was created.
        /// </summary>
        public readonly string TimeCreated;
        public readonly string TimeStampForPointInTimeRecovery;
        public readonly string VaultId;

        [OutputConstructor]
        private GetDbHomeDatabaseResult(
            string adminPassword,

            string backupId,

            string backupTdePassword,

            string characterSet,

            ImmutableArray<Outputs.GetDbHomeDatabaseConnectionStringResult> connectionStrings,

            string databaseId,

            string databaseSoftwareImageId,

            ImmutableArray<Outputs.GetDbHomeDatabaseDbBackupConfigResult> dbBackupConfigs,

            string dbName,

            string dbUniqueName,

            string dbWorkload,

            ImmutableDictionary<string, string> definedTags,

            ImmutableArray<Outputs.GetDbHomeDatabaseEncryptionKeyLocationDetailResult> encryptionKeyLocationDetails,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            string keyStoreId,

            string kmsKeyId,

            string kmsKeyVersionId,

            string lifecycleDetails,

            string ncharacterSet,

            ImmutableArray<string> oneOffPatches,

            string pdbName,

            ImmutableArray<string> pluggableDatabases,

            string sidPrefix,

            string state,

            string tdeWalletPassword,

            string timeCreated,

            string timeStampForPointInTimeRecovery,

            string vaultId)
        {
            AdminPassword = adminPassword;
            BackupId = backupId;
            BackupTdePassword = backupTdePassword;
            CharacterSet = characterSet;
            ConnectionStrings = connectionStrings;
            DatabaseId = databaseId;
            DatabaseSoftwareImageId = databaseSoftwareImageId;
            DbBackupConfigs = dbBackupConfigs;
            DbName = dbName;
            DbUniqueName = dbUniqueName;
            DbWorkload = dbWorkload;
            DefinedTags = definedTags;
            EncryptionKeyLocationDetails = encryptionKeyLocationDetails;
            FreeformTags = freeformTags;
            Id = id;
            KeyStoreId = keyStoreId;
            KmsKeyId = kmsKeyId;
            KmsKeyVersionId = kmsKeyVersionId;
            LifecycleDetails = lifecycleDetails;
            NcharacterSet = ncharacterSet;
            OneOffPatches = oneOffPatches;
            PdbName = pdbName;
            PluggableDatabases = pluggableDatabases;
            SidPrefix = sidPrefix;
            State = state;
            TdeWalletPassword = tdeWalletPassword;
            TimeCreated = timeCreated;
            TimeStampForPointInTimeRecovery = timeStampForPointInTimeRecovery;
            VaultId = vaultId;
        }
    }
}
