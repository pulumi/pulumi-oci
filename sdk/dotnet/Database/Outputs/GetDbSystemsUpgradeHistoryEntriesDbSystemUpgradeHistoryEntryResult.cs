// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Database.Outputs
{

    [OutputType]
    public sealed class GetDbSystemsUpgradeHistoryEntriesDbSystemUpgradeHistoryEntryResult
    {
        /// <summary>
        /// The operating system upgrade action.
        /// </summary>
        public readonly string Action;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the upgrade history entry.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A descriptive text associated with the lifecycleState. Typically contains additional displayable text.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// A valid Oracle Grid Infrastructure (GI) software version.
        /// </summary>
        public readonly string NewGiVersion;
        /// <summary>
        /// A valid Oracle Software (OS) version eg. Oracle Linux Server release 8
        /// </summary>
        public readonly string NewOsVersion;
        /// <summary>
        /// A valid Oracle Grid Infrastructure (GI) software version.
        /// </summary>
        public readonly string OldGiVersion;
        /// <summary>
        /// A valid Oracle Software (OS) version eg. Oracle Linux Server release 8
        /// </summary>
        public readonly string OldOsVersion;
        /// <summary>
        /// The retention period, in days, for the snapshot that allows you to perform a rollback of the upgrade operation. After this number of days passes, you cannot roll back the upgrade.
        /// </summary>
        public readonly int SnapshotRetentionPeriodInDays;
        /// <summary>
        /// A filter to return only upgrade history entries that match the given lifecycle state exactly.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The date and time when the upgrade action completed
        /// </summary>
        public readonly string TimeEnded;
        /// <summary>
        /// The date and time when the upgrade action started.
        /// </summary>
        public readonly string TimeStarted;

        [OutputConstructor]
        private GetDbSystemsUpgradeHistoryEntriesDbSystemUpgradeHistoryEntryResult(
            string action,

            string id,

            string lifecycleDetails,

            string newGiVersion,

            string newOsVersion,

            string oldGiVersion,

            string oldOsVersion,

            int snapshotRetentionPeriodInDays,

            string state,

            string timeEnded,

            string timeStarted)
        {
            Action = action;
            Id = id;
            LifecycleDetails = lifecycleDetails;
            NewGiVersion = newGiVersion;
            NewOsVersion = newOsVersion;
            OldGiVersion = oldGiVersion;
            OldOsVersion = oldOsVersion;
            SnapshotRetentionPeriodInDays = snapshotRetentionPeriodInDays;
            State = state;
            TimeEnded = timeEnded;
            TimeStarted = timeStarted;
        }
    }
}
