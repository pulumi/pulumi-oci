// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Database.Outputs
{

    [OutputType]
    public sealed class GetExternalNonContainerDatabasesExternalNonContainerDatabaseResult
    {
        /// <summary>
        /// The character set of the external database.
        /// </summary>
        public readonly string CharacterSet;
        /// <summary>
        /// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The Oracle Database configuration
        /// </summary>
        public readonly string DatabaseConfiguration;
        /// <summary>
        /// The Oracle Database edition.
        /// </summary>
        public readonly string DatabaseEdition;
        /// <summary>
        /// The configuration of the Database Management service.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetExternalNonContainerDatabasesExternalNonContainerDatabaseDatabaseManagementConfigResult> DatabaseManagementConfigs;
        /// <summary>
        /// The Oracle Database version.
        /// </summary>
        public readonly string DatabaseVersion;
        /// <summary>
        /// The Oracle Database ID, which identifies an Oracle Database located outside of Oracle Cloud.
        /// </summary>
        public readonly string DbId;
        /// <summary>
        /// The database packs licensed for the external Oracle Database.
        /// </summary>
        public readonly string DbPacks;
        /// <summary>
        /// The `DB_UNIQUE_NAME` of the external database.
        /// </summary>
        public readonly string DbUniqueName;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// A filter to return only resources that match the entire display name given. The match is not case sensitive.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure external database resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Additional information about the current lifecycle state.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// The national character of the external database.
        /// </summary>
        public readonly string NcharacterSet;
        /// <summary>
        /// The configuration of Operations Insights for the external database
        /// </summary>
        public readonly ImmutableArray<Outputs.GetExternalNonContainerDatabasesExternalNonContainerDatabaseOperationsInsightsConfigResult> OperationsInsightsConfigs;
        /// <summary>
        /// A filter to return only resources that match the specified lifecycle state.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The date and time the database was created.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time zone of the external database. It is a time zone offset (a character type in the format '[+|-]TZH:TZM') or a time zone region name, depending on how the time zone value was specified when the database was created / last altered.
        /// </summary>
        public readonly string TimeZone;

        [OutputConstructor]
        private GetExternalNonContainerDatabasesExternalNonContainerDatabaseResult(
            string characterSet,

            string compartmentId,

            string databaseConfiguration,

            string databaseEdition,

            ImmutableArray<Outputs.GetExternalNonContainerDatabasesExternalNonContainerDatabaseDatabaseManagementConfigResult> databaseManagementConfigs,

            string databaseVersion,

            string dbId,

            string dbPacks,

            string dbUniqueName,

            ImmutableDictionary<string, object> definedTags,

            string displayName,

            ImmutableDictionary<string, object> freeformTags,

            string id,

            string lifecycleDetails,

            string ncharacterSet,

            ImmutableArray<Outputs.GetExternalNonContainerDatabasesExternalNonContainerDatabaseOperationsInsightsConfigResult> operationsInsightsConfigs,

            string state,

            string timeCreated,

            string timeZone)
        {
            CharacterSet = characterSet;
            CompartmentId = compartmentId;
            DatabaseConfiguration = databaseConfiguration;
            DatabaseEdition = databaseEdition;
            DatabaseManagementConfigs = databaseManagementConfigs;
            DatabaseVersion = databaseVersion;
            DbId = dbId;
            DbPacks = dbPacks;
            DbUniqueName = dbUniqueName;
            DefinedTags = definedTags;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            LifecycleDetails = lifecycleDetails;
            NcharacterSet = ncharacterSet;
            OperationsInsightsConfigs = operationsInsightsConfigs;
            State = state;
            TimeCreated = timeCreated;
            TimeZone = timeZone;
        }
    }
}
