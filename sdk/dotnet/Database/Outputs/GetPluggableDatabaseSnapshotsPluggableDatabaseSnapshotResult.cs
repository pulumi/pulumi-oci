// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Database.Outputs
{

    [OutputType]
    public sealed class GetPluggableDatabaseSnapshotsPluggableDatabaseSnapshotResult
    {
        /// <summary>
        /// A filter to return only Exadata Database Node Snapshots that match the given VM cluster.
        /// </summary>
        public readonly string ClusterId;
        /// <summary>
        /// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata Pluggable Database Snapshot.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Additional information about the current lifecycle state of the Exadata Pluggable Database Snapshot.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// A filter to return only resources that match the entire name given. The match is not case sensitive.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// A filter to return only Exadata Pluggable Database Snapshots that match the given database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        public readonly string PluggableDatabaseId;
        /// <summary>
        /// A filter to return only Exadata Pluggable Database Snapshots that match the given lifecycle state exactly.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// The date and time that the Exadata Pluggable Database Snapshot was created, as expressed in RFC 3339 format. For example: 2023-06-27T21:10:29Z
        /// </summary>
        public readonly string TimeCreated;

        [OutputConstructor]
        private GetPluggableDatabaseSnapshotsPluggableDatabaseSnapshotResult(
            string clusterId,

            string compartmentId,

            ImmutableDictionary<string, string> definedTags,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            string lifecycleDetails,

            string name,

            string pluggableDatabaseId,

            string state,

            ImmutableDictionary<string, string> systemTags,

            string timeCreated)
        {
            ClusterId = clusterId;
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            FreeformTags = freeformTags;
            Id = id;
            LifecycleDetails = lifecycleDetails;
            Name = name;
            PluggableDatabaseId = pluggableDatabaseId;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
        }
    }
}
