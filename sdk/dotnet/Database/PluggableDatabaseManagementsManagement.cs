// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Database
{
    /// <summary>
    /// This resource provides the Pluggable Database Pluggabledatabasemanagements Management resource in Oracle Cloud Infrastructure Database service.
    /// 
    /// Enables the Database Management service for an Oracle Pluggable Database located in Oracle Cloud Infrastructure. This service allows the pluggable database to access tools including Metrics and Performance hub. Database Management is enabled at the pluggable database (PDB) level.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testPluggableDatabasePluggabledatabasemanagementsManagement = new Oci.Database.PluggableDatabaseManagementsManagement("test_pluggable_database_pluggabledatabasemanagements_management", new()
    ///     {
    ///         PluggableDatabaseId = testPluggableDatabase.Id,
    ///         EnablePluggabledatabasemanagement = enablePluggabledatabasemanagement,
    ///         CredentialDetails = new Oci.Database.Inputs.PluggableDatabaseManagementsManagementCredentialDetailsArgs
    ///         {
    ///             PasswordSecretId = testSecret.Id,
    ///             UserName = testUser.Name,
    ///         },
    ///         PrivateEndPointId = testPrivateEndPoint.Id,
    ///         ServiceName = testService.Name,
    ///         Port = pluggableDatabasePluggabledatabasemanagementsManagementPort,
    ///         Protocol = pluggableDatabasePluggabledatabasemanagementsManagementProtocol,
    ///         Role = pluggableDatabasePluggabledatabasemanagementsManagementRole,
    ///         SslSecretId = testSecret.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [OciResourceType("oci:Database/pluggableDatabaseManagementsManagement:PluggableDatabaseManagementsManagement")]
    public partial class PluggableDatabaseManagementsManagement : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// Connection strings to connect to an Oracle Pluggable Database.
        /// </summary>
        [Output("connectionStrings")]
        public Output<ImmutableArray<Outputs.PluggableDatabaseManagementsManagementConnectionString>> ConnectionStrings { get; private set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the CDB.
        /// </summary>
        [Output("containerDatabaseId")]
        public Output<string> ContainerDatabaseId { get; private set; } = null!;

        /// <summary>
        /// Data for the credential used to connect to the database.
        /// </summary>
        [Output("credentialDetails")]
        public Output<Outputs.PluggableDatabaseManagementsManagementCredentialDetails> CredentialDetails { get; private set; } = null!;

        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, object>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("enablePluggabledatabasemanagement")]
        public Output<bool> EnablePluggabledatabasemanagement { get; private set; } = null!;

        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, object>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// The restricted mode of the pluggable database. If a pluggable database is opened in restricted mode, the user needs both create a session and have restricted session privileges to connect to it.
        /// </summary>
        [Output("isRestricted")]
        public Output<bool> IsRestricted { get; private set; } = null!;

        /// <summary>
        /// Detailed message for the lifecycle state.
        /// </summary>
        [Output("lifecycleDetails")]
        public Output<string> LifecycleDetails { get; private set; } = null!;

        /// <summary>
        /// The mode that pluggable database is in. Open mode can only be changed to READ_ONLY or MIGRATE directly from the backend (within the Oracle Database software).
        /// </summary>
        [Output("openMode")]
        public Output<string> OpenMode { get; private set; } = null!;

        /// <summary>
        /// The name for the pluggable database (PDB). The name is unique in the context of a [container database](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/Database/). The name must begin with an alphabetic character and can contain a maximum of thirty alphanumeric characters. Special characters are not permitted. The pluggable database name should not be same as the container database name.
        /// </summary>
        [Output("pdbName")]
        public Output<string> PdbName { get; private set; } = null!;

        /// <summary>
        /// The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Output("pluggableDatabaseId")]
        public Output<string> PluggableDatabaseId { get; private set; } = null!;

        /// <summary>
        /// The configuration of the Pluggable Database Management service.
        /// </summary>
        [Output("pluggableDatabaseManagementConfigs")]
        public Output<ImmutableArray<Outputs.PluggableDatabaseManagementsManagementPluggableDatabaseManagementConfig>> PluggableDatabaseManagementConfigs { get; private set; } = null!;

        /// <summary>
        /// The port used to connect to the pluggable database.
        /// </summary>
        [Output("port")]
        public Output<int> Port { get; private set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the private endpoint.
        /// </summary>
        [Output("privateEndPointId")]
        public Output<string> PrivateEndPointId { get; private set; } = null!;

        /// <summary>
        /// Protocol used by the database connection.
        /// </summary>
        [Output("protocol")]
        public Output<string> Protocol { get; private set; } = null!;

        /// <summary>
        /// The role of the user that will be connecting to the pluggable database.
        /// </summary>
        [Output("role")]
        public Output<string> Role { get; private set; } = null!;

        /// <summary>
        /// The name of the Oracle Database service that will be used to connect to the database.
        /// </summary>
        [Output("serviceName")]
        public Output<string> ServiceName { get; private set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [secret](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
        /// </summary>
        [Output("sslSecretId")]
        public Output<string> SslSecretId { get; private set; } = null!;

        /// <summary>
        /// The current state of the pluggable database.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The date and time the pluggable database was created.
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;


        /// <summary>
        /// Create a PluggableDatabaseManagementsManagement resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PluggableDatabaseManagementsManagement(string name, PluggableDatabaseManagementsManagementArgs args, CustomResourceOptions? options = null)
            : base("oci:Database/pluggableDatabaseManagementsManagement:PluggableDatabaseManagementsManagement", name, args ?? new PluggableDatabaseManagementsManagementArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PluggableDatabaseManagementsManagement(string name, Input<string> id, PluggableDatabaseManagementsManagementState? state = null, CustomResourceOptions? options = null)
            : base("oci:Database/pluggableDatabaseManagementsManagement:PluggableDatabaseManagementsManagement", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PluggableDatabaseManagementsManagement resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PluggableDatabaseManagementsManagement Get(string name, Input<string> id, PluggableDatabaseManagementsManagementState? state = null, CustomResourceOptions? options = null)
        {
            return new PluggableDatabaseManagementsManagement(name, id, state, options);
        }
    }

    public sealed class PluggableDatabaseManagementsManagementArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Data for the credential used to connect to the database.
        /// </summary>
        [Input("credentialDetails", required: true)]
        public Input<Inputs.PluggableDatabaseManagementsManagementCredentialDetailsArgs> CredentialDetails { get; set; } = null!;

        /// <summary>
        /// (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("enablePluggabledatabasemanagement", required: true)]
        public Input<bool> EnablePluggabledatabasemanagement { get; set; } = null!;

        /// <summary>
        /// The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("pluggableDatabaseId", required: true)]
        public Input<string> PluggableDatabaseId { get; set; } = null!;

        /// <summary>
        /// The port used to connect to the pluggable database.
        /// </summary>
        [Input("port")]
        public Input<int>? Port { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the private endpoint.
        /// </summary>
        [Input("privateEndPointId", required: true)]
        public Input<string> PrivateEndPointId { get; set; } = null!;

        /// <summary>
        /// Protocol used by the database connection.
        /// </summary>
        [Input("protocol")]
        public Input<string>? Protocol { get; set; }

        /// <summary>
        /// The role of the user that will be connecting to the pluggable database.
        /// </summary>
        [Input("role")]
        public Input<string>? Role { get; set; }

        /// <summary>
        /// The name of the Oracle Database service that will be used to connect to the database.
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [secret](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
        /// </summary>
        [Input("sslSecretId")]
        public Input<string>? SslSecretId { get; set; }

        public PluggableDatabaseManagementsManagementArgs()
        {
        }
        public static new PluggableDatabaseManagementsManagementArgs Empty => new PluggableDatabaseManagementsManagementArgs();
    }

    public sealed class PluggableDatabaseManagementsManagementState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("connectionStrings")]
        private InputList<Inputs.PluggableDatabaseManagementsManagementConnectionStringGetArgs>? _connectionStrings;

        /// <summary>
        /// Connection strings to connect to an Oracle Pluggable Database.
        /// </summary>
        public InputList<Inputs.PluggableDatabaseManagementsManagementConnectionStringGetArgs> ConnectionStrings
        {
            get => _connectionStrings ?? (_connectionStrings = new InputList<Inputs.PluggableDatabaseManagementsManagementConnectionStringGetArgs>());
            set => _connectionStrings = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the CDB.
        /// </summary>
        [Input("containerDatabaseId")]
        public Input<string>? ContainerDatabaseId { get; set; }

        /// <summary>
        /// Data for the credential used to connect to the database.
        /// </summary>
        [Input("credentialDetails")]
        public Input<Inputs.PluggableDatabaseManagementsManagementCredentialDetailsGetArgs>? CredentialDetails { get; set; }

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("enablePluggabledatabasemanagement")]
        public Input<bool>? EnablePluggabledatabasemanagement { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// The restricted mode of the pluggable database. If a pluggable database is opened in restricted mode, the user needs both create a session and have restricted session privileges to connect to it.
        /// </summary>
        [Input("isRestricted")]
        public Input<bool>? IsRestricted { get; set; }

        /// <summary>
        /// Detailed message for the lifecycle state.
        /// </summary>
        [Input("lifecycleDetails")]
        public Input<string>? LifecycleDetails { get; set; }

        /// <summary>
        /// The mode that pluggable database is in. Open mode can only be changed to READ_ONLY or MIGRATE directly from the backend (within the Oracle Database software).
        /// </summary>
        [Input("openMode")]
        public Input<string>? OpenMode { get; set; }

        /// <summary>
        /// The name for the pluggable database (PDB). The name is unique in the context of a [container database](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/Database/). The name must begin with an alphabetic character and can contain a maximum of thirty alphanumeric characters. Special characters are not permitted. The pluggable database name should not be same as the container database name.
        /// </summary>
        [Input("pdbName")]
        public Input<string>? PdbName { get; set; }

        /// <summary>
        /// The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("pluggableDatabaseId")]
        public Input<string>? PluggableDatabaseId { get; set; }

        [Input("pluggableDatabaseManagementConfigs")]
        private InputList<Inputs.PluggableDatabaseManagementsManagementPluggableDatabaseManagementConfigGetArgs>? _pluggableDatabaseManagementConfigs;

        /// <summary>
        /// The configuration of the Pluggable Database Management service.
        /// </summary>
        public InputList<Inputs.PluggableDatabaseManagementsManagementPluggableDatabaseManagementConfigGetArgs> PluggableDatabaseManagementConfigs
        {
            get => _pluggableDatabaseManagementConfigs ?? (_pluggableDatabaseManagementConfigs = new InputList<Inputs.PluggableDatabaseManagementsManagementPluggableDatabaseManagementConfigGetArgs>());
            set => _pluggableDatabaseManagementConfigs = value;
        }

        /// <summary>
        /// The port used to connect to the pluggable database.
        /// </summary>
        [Input("port")]
        public Input<int>? Port { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the private endpoint.
        /// </summary>
        [Input("privateEndPointId")]
        public Input<string>? PrivateEndPointId { get; set; }

        /// <summary>
        /// Protocol used by the database connection.
        /// </summary>
        [Input("protocol")]
        public Input<string>? Protocol { get; set; }

        /// <summary>
        /// The role of the user that will be connecting to the pluggable database.
        /// </summary>
        [Input("role")]
        public Input<string>? Role { get; set; }

        /// <summary>
        /// The name of the Oracle Database service that will be used to connect to the database.
        /// </summary>
        [Input("serviceName")]
        public Input<string>? ServiceName { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [secret](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
        /// </summary>
        [Input("sslSecretId")]
        public Input<string>? SslSecretId { get; set; }

        /// <summary>
        /// The current state of the pluggable database.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The date and time the pluggable database was created.
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        public PluggableDatabaseManagementsManagementState()
        {
        }
        public static new PluggableDatabaseManagementsManagementState Empty => new PluggableDatabaseManagementsManagementState();
    }
}
