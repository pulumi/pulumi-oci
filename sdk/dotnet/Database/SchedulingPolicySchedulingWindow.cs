// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Database
{
    /// <summary>
    /// This resource provides the Scheduling Policy Scheduling Window resource in Oracle Cloud Infrastructure Database service.
    /// 
    /// Creates a Scheduling Window resource.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testSchedulingPolicySchedulingWindow = new Oci.Database.SchedulingPolicySchedulingWindow("test_scheduling_policy_scheduling_window", new()
    ///     {
    ///         SchedulingPolicyId = testSchedulingPolicy.Id,
    ///         WindowPreference = new Oci.Database.Inputs.SchedulingPolicySchedulingWindowWindowPreferenceArgs
    ///         {
    ///             DaysOfWeeks = new[]
    ///             {
    ///                 new Oci.Database.Inputs.SchedulingPolicySchedulingWindowWindowPreferenceDaysOfWeekArgs
    ///                 {
    ///                     Name = schedulingPolicySchedulingWindowWindowPreferenceDaysOfWeekName,
    ///                 },
    ///             },
    ///             Duration = schedulingPolicySchedulingWindowWindowPreferenceDuration,
    ///             IsEnforcedDuration = schedulingPolicySchedulingWindowWindowPreferenceIsEnforcedDuration,
    ///             StartTime = schedulingPolicySchedulingWindowWindowPreferenceStartTime,
    ///             WeeksOfMonths = schedulingPolicySchedulingWindowWindowPreferenceWeeksOfMonth,
    ///             Months = new[]
    ///             {
    ///                 new Oci.Database.Inputs.SchedulingPolicySchedulingWindowWindowPreferenceMonthArgs
    ///                 {
    ///                     Name = schedulingPolicySchedulingWindowWindowPreferenceMonthsName,
    ///                 },
    ///             },
    ///         },
    ///         CompartmentId = compartmentId,
    ///         DefinedTags = schedulingPolicySchedulingWindowDefinedTags,
    ///         FreeformTags = 
    ///         {
    ///             { "Department", "Finance" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// SchedulingPolicySchedulingWindows can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:Database/schedulingPolicySchedulingWindow:SchedulingPolicySchedulingWindow test_scheduling_policy_scheduling_window "schedulingPolicies/{schedulingPolicyId}/schedulingWindows/{schedulingWindowId}"
    /// ```
    /// </summary>
    [OciResourceType("oci:Database/schedulingPolicySchedulingWindow:SchedulingPolicySchedulingWindow")]
    public partial class SchedulingPolicySchedulingWindow : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, string>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// The user-friendly name for the Scheduling Window. The name does not need to be unique.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, string>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// Additional information about the current lifecycle state.
        /// </summary>
        [Output("lifecycleDetails")]
        public Output<string> LifecycleDetails { get; private set; } = null!;

        /// <summary>
        /// The Scheduling Policy [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Output("schedulingPolicyId")]
        public Output<string> SchedulingPolicyId { get; private set; } = null!;

        /// <summary>
        /// The current state of the Scheduling Window. Valid states are CREATING, ACTIVE, UPDATING, FAILED, DELETING and DELETED.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The date and time the Scheduling Window was created.
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The date and time of the next upcoming window associated within the schedulingWindow is planned to start.
        /// </summary>
        [Output("timeNextSchedulingWindowStarts")]
        public Output<string> TimeNextSchedulingWindowStarts { get; private set; } = null!;

        /// <summary>
        /// The last date and time that the Scheduling Window was updated.
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The Single Scheduling Window details.
        /// </summary>
        [Output("windowPreference")]
        public Output<Outputs.SchedulingPolicySchedulingWindowWindowPreference> WindowPreference { get; private set; } = null!;


        /// <summary>
        /// Create a SchedulingPolicySchedulingWindow resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SchedulingPolicySchedulingWindow(string name, SchedulingPolicySchedulingWindowArgs args, CustomResourceOptions? options = null)
            : base("oci:Database/schedulingPolicySchedulingWindow:SchedulingPolicySchedulingWindow", name, args ?? new SchedulingPolicySchedulingWindowArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SchedulingPolicySchedulingWindow(string name, Input<string> id, SchedulingPolicySchedulingWindowState? state = null, CustomResourceOptions? options = null)
            : base("oci:Database/schedulingPolicySchedulingWindow:SchedulingPolicySchedulingWindow", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SchedulingPolicySchedulingWindow resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SchedulingPolicySchedulingWindow Get(string name, Input<string> id, SchedulingPolicySchedulingWindowState? state = null, CustomResourceOptions? options = null)
        {
            return new SchedulingPolicySchedulingWindow(name, id, state, options);
        }
    }

    public sealed class SchedulingPolicySchedulingWindowArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// The Scheduling Policy [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("schedulingPolicyId", required: true)]
        public Input<string> SchedulingPolicyId { get; set; } = null!;

        /// <summary>
        /// (Updatable) The Single Scheduling Window details.
        /// </summary>
        [Input("windowPreference", required: true)]
        public Input<Inputs.SchedulingPolicySchedulingWindowWindowPreferenceArgs> WindowPreference { get; set; } = null!;

        public SchedulingPolicySchedulingWindowArgs()
        {
        }
        public static new SchedulingPolicySchedulingWindowArgs Empty => new SchedulingPolicySchedulingWindowArgs();
    }

    public sealed class SchedulingPolicySchedulingWindowState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// The user-friendly name for the Scheduling Window. The name does not need to be unique.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// Additional information about the current lifecycle state.
        /// </summary>
        [Input("lifecycleDetails")]
        public Input<string>? LifecycleDetails { get; set; }

        /// <summary>
        /// The Scheduling Policy [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("schedulingPolicyId")]
        public Input<string>? SchedulingPolicyId { get; set; }

        /// <summary>
        /// The current state of the Scheduling Window. Valid states are CREATING, ACTIVE, UPDATING, FAILED, DELETING and DELETED.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The date and time the Scheduling Window was created.
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The date and time of the next upcoming window associated within the schedulingWindow is planned to start.
        /// </summary>
        [Input("timeNextSchedulingWindowStarts")]
        public Input<string>? TimeNextSchedulingWindowStarts { get; set; }

        /// <summary>
        /// The last date and time that the Scheduling Window was updated.
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        /// <summary>
        /// (Updatable) The Single Scheduling Window details.
        /// </summary>
        [Input("windowPreference")]
        public Input<Inputs.SchedulingPolicySchedulingWindowWindowPreferenceGetArgs>? WindowPreference { get; set; }

        public SchedulingPolicySchedulingWindowState()
        {
        }
        public static new SchedulingPolicySchedulingWindowState Empty => new SchedulingPolicySchedulingWindowState();
    }
}
