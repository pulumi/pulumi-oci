// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DatabaseManagement
{
    /// <summary>
    /// This resource provides the External Db System resource in Oracle Cloud Infrastructure Database Management service.
    /// 
    /// Creates an external DB system and its related resources.
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testExternalDbSystem = new Oci.DatabaseManagement.ExternalDbSystem("test_external_db_system", new()
    ///     {
    ///         CompartmentId = compartmentId,
    ///         DbSystemDiscoveryId = testDbSystemDiscovery.Id,
    ///         DatabaseManagementConfig = new Oci.DatabaseManagement.Inputs.ExternalDbSystemDatabaseManagementConfigArgs
    ///         {
    ///             LicenseModel = externalDbSystemDatabaseManagementConfigLicenseModel,
    ///         },
    ///         DefinedTags = 
    ///         {
    ///             { "Operations.CostCenter", "42" },
    ///         },
    ///         DisplayName = externalDbSystemDisplayName,
    ///         FreeformTags = 
    ///         {
    ///             { "Department", "Finance" },
    ///         },
    ///         StackMonitoringConfig = new Oci.DatabaseManagement.Inputs.ExternalDbSystemStackMonitoringConfigArgs
    ///         {
    ///             IsEnabled = externalDbSystemStackMonitoringConfigIsEnabled,
    ///             Metadata = externalDbSystemStackMonitoringConfigMetadata,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// ExternalDbSystems can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:DatabaseManagement/externalDbSystem:ExternalDbSystem test_external_db_system "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:DatabaseManagement/externalDbSystem:ExternalDbSystem")]
    public partial class ExternalDbSystem : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the external DB system resides.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// The details required to enable Database Management for an external DB system.
        /// </summary>
        [Output("databaseManagementConfig")]
        public Output<Outputs.ExternalDbSystemDatabaseManagementConfig> DatabaseManagementConfig { get; private set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system discovery.
        /// </summary>
        [Output("dbSystemDiscoveryId")]
        public Output<string> DbSystemDiscoveryId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, object>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management agent used during the discovery of the DB system.
        /// </summary>
        [Output("discoveryAgentId")]
        public Output<string> DiscoveryAgentId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The user-friendly name for the DB system. The name does not have to be unique.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, object>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// The Oracle Grid home directory in case of cluster-based DB system and Oracle home directory in case of single instance-based DB system.
        /// </summary>
        [Output("homeDirectory")]
        public Output<string> HomeDirectory { get; private set; } = null!;

        /// <summary>
        /// Indicates whether the DB system is a cluster DB system or not.
        /// </summary>
        [Output("isCluster")]
        public Output<bool> IsCluster { get; private set; } = null!;

        /// <summary>
        /// Additional information about the current lifecycle state.
        /// </summary>
        [Output("lifecycleDetails")]
        public Output<string> LifecycleDetails { get; private set; } = null!;

        /// <summary>
        /// The details of the associated service that will be enabled or disabled for an external DB System.
        /// </summary>
        [Output("stackMonitoringConfig")]
        public Output<Outputs.ExternalDbSystemStackMonitoringConfig> StackMonitoringConfig { get; private set; } = null!;

        /// <summary>
        /// The current lifecycle state of the external DB system resource.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The date and time the external DB system was created.
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The date and time the external DB system was last updated.
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;


        /// <summary>
        /// Create a ExternalDbSystem resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ExternalDbSystem(string name, ExternalDbSystemArgs args, CustomResourceOptions? options = null)
            : base("oci:DatabaseManagement/externalDbSystem:ExternalDbSystem", name, args ?? new ExternalDbSystemArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ExternalDbSystem(string name, Input<string> id, ExternalDbSystemState? state = null, CustomResourceOptions? options = null)
            : base("oci:DatabaseManagement/externalDbSystem:ExternalDbSystem", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ExternalDbSystem resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ExternalDbSystem Get(string name, Input<string> id, ExternalDbSystemState? state = null, CustomResourceOptions? options = null)
        {
            return new ExternalDbSystem(name, id, state, options);
        }
    }

    public sealed class ExternalDbSystemArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the external DB system resides.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// The details required to enable Database Management for an external DB system.
        /// </summary>
        [Input("databaseManagementConfig")]
        public Input<Inputs.ExternalDbSystemDatabaseManagementConfigArgs>? DatabaseManagementConfig { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system discovery.
        /// </summary>
        [Input("dbSystemDiscoveryId", required: true)]
        public Input<string> DbSystemDiscoveryId { get; set; } = null!;

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) The user-friendly name for the DB system. The name does not have to be unique.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// The details of the associated service that will be enabled or disabled for an external DB System.
        /// </summary>
        [Input("stackMonitoringConfig")]
        public Input<Inputs.ExternalDbSystemStackMonitoringConfigArgs>? StackMonitoringConfig { get; set; }

        public ExternalDbSystemArgs()
        {
        }
        public static new ExternalDbSystemArgs Empty => new ExternalDbSystemArgs();
    }

    public sealed class ExternalDbSystemState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the external DB system resides.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// The details required to enable Database Management for an external DB system.
        /// </summary>
        [Input("databaseManagementConfig")]
        public Input<Inputs.ExternalDbSystemDatabaseManagementConfigGetArgs>? DatabaseManagementConfig { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system discovery.
        /// </summary>
        [Input("dbSystemDiscoveryId")]
        public Input<string>? DbSystemDiscoveryId { get; set; }

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management agent used during the discovery of the DB system.
        /// </summary>
        [Input("discoveryAgentId")]
        public Input<string>? DiscoveryAgentId { get; set; }

        /// <summary>
        /// (Updatable) The user-friendly name for the DB system. The name does not have to be unique.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// The Oracle Grid home directory in case of cluster-based DB system and Oracle home directory in case of single instance-based DB system.
        /// </summary>
        [Input("homeDirectory")]
        public Input<string>? HomeDirectory { get; set; }

        /// <summary>
        /// Indicates whether the DB system is a cluster DB system or not.
        /// </summary>
        [Input("isCluster")]
        public Input<bool>? IsCluster { get; set; }

        /// <summary>
        /// Additional information about the current lifecycle state.
        /// </summary>
        [Input("lifecycleDetails")]
        public Input<string>? LifecycleDetails { get; set; }

        /// <summary>
        /// The details of the associated service that will be enabled or disabled for an external DB System.
        /// </summary>
        [Input("stackMonitoringConfig")]
        public Input<Inputs.ExternalDbSystemStackMonitoringConfigGetArgs>? StackMonitoringConfig { get; set; }

        /// <summary>
        /// The current lifecycle state of the external DB system resource.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The date and time the external DB system was created.
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The date and time the external DB system was last updated.
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        public ExternalDbSystemState()
        {
        }
        public static new ExternalDbSystemState Empty => new ExternalDbSystemState();
    }
}
