// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DatabaseManagement
{
    /// <summary>
    /// This resource provides the External Exadata Infrastructure resource in Oracle Cloud Infrastructure Database Management service.
    /// 
    /// Creates an Oracle Cloud Infrastructure resource for the Exadata infrastructure and enables the Monitoring service for the Exadata infrastructure.
    /// The following resource/subresources are created:
    ///   Infrastructure
    ///   Storage server connectors
    ///   Storage servers
    ///   Storage grids
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testExternalExadataInfrastructure = new Oci.DatabaseManagement.ExternalExadataInfrastructure("testExternalExadataInfrastructure", new()
    ///     {
    ///         CompartmentId = @var.Compartment_id,
    ///         DbSystemIds = @var.External_exadata_infrastructure_db_system_ids,
    ///         DisplayName = @var.External_exadata_infrastructure_display_name,
    ///         DefinedTags = 
    ///         {
    ///             { "Operations.CostCenter", "42" },
    ///         },
    ///         DiscoveryKey = @var.External_exadata_infrastructure_discovery_key,
    ///         FreeformTags = 
    ///         {
    ///             { "Department", "Finance" },
    ///         },
    ///         LicenseModel = @var.External_exadata_infrastructure_license_model,
    ///         StorageServerNames = @var.External_exadata_infrastructure_storage_server_names,
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// ExternalExadataInfrastructures can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:DatabaseManagement/externalExadataInfrastructure:ExternalExadataInfrastructure test_external_exadata_infrastructure "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:DatabaseManagement/externalExadataInfrastructure:ExternalExadataInfrastructure")]
    public partial class ExternalExadataInfrastructure : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The additional details of the resource defined in `{"key": "value"}` format. Example: `{"bar-key": "value"}`
        /// </summary>
        [Output("additionalDetails")]
        public Output<ImmutableDictionary<string, object>> AdditionalDetails { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// The list of [OCIDs] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartments.
        /// </summary>
        [Output("databaseCompartments")]
        public Output<ImmutableArray<string>> DatabaseCompartments { get; private set; } = null!;

        /// <summary>
        /// A list of DB systems.
        /// </summary>
        [Output("databaseSystems")]
        public Output<ImmutableArray<Outputs.ExternalExadataInfrastructureDatabaseSystem>> DatabaseSystems { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The list of DB systems in the Exadata infrastructure.
        /// </summary>
        [Output("dbSystemIds")]
        public Output<ImmutableArray<string>> DbSystemIds { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, object>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The unique key of the discovery request.
        /// </summary>
        [Output("discoveryKey")]
        public Output<string> DiscoveryKey { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The name of the Exadata infrastructure.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, object>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// The internal ID of the Exadata resource.
        /// </summary>
        [Output("internalId")]
        public Output<string> InternalId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The Oracle license model that applies to the database management resources.
        /// </summary>
        [Output("licenseModel")]
        public Output<string> LicenseModel { get; private set; } = null!;

        /// <summary>
        /// The details of the lifecycle state of the Exadata resource.
        /// </summary>
        [Output("lifecycleDetails")]
        public Output<string> LifecycleDetails { get; private set; } = null!;

        /// <summary>
        /// The rack size of the Exadata infrastructure.
        /// </summary>
        [Output("rackSize")]
        public Output<string> RackSize { get; private set; } = null!;

        /// <summary>
        /// The current lifecycle state of the database resource.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The status of the Exadata resource.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The Exadata storage server grid of the Exadata infrastructure.
        /// </summary>
        [Output("storageGrids")]
        public Output<ImmutableArray<Outputs.ExternalExadataInfrastructureStorageGrid>> StorageGrids { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The list of all the Exadata storage server names to be included for monitoring purposes. If not specified, all the Exadata storage servers associated with the DB systems are included.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("storageServerNames")]
        public Output<ImmutableArray<string>> StorageServerNames { get; private set; } = null!;

        /// <summary>
        /// The timestamp of the creation of the Exadata resource.
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The timestamp of the last update of the Exadata resource.
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;

        /// <summary>
        /// The version of the Exadata resource.
        /// </summary>
        [Output("version")]
        public Output<string> Version { get; private set; } = null!;


        /// <summary>
        /// Create a ExternalExadataInfrastructure resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ExternalExadataInfrastructure(string name, ExternalExadataInfrastructureArgs args, CustomResourceOptions? options = null)
            : base("oci:DatabaseManagement/externalExadataInfrastructure:ExternalExadataInfrastructure", name, args ?? new ExternalExadataInfrastructureArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ExternalExadataInfrastructure(string name, Input<string> id, ExternalExadataInfrastructureState? state = null, CustomResourceOptions? options = null)
            : base("oci:DatabaseManagement/externalExadataInfrastructure:ExternalExadataInfrastructure", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ExternalExadataInfrastructure resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ExternalExadataInfrastructure Get(string name, Input<string> id, ExternalExadataInfrastructureState? state = null, CustomResourceOptions? options = null)
        {
            return new ExternalExadataInfrastructure(name, id, state, options);
        }
    }

    public sealed class ExternalExadataInfrastructureArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("dbSystemIds", required: true)]
        private InputList<string>? _dbSystemIds;

        /// <summary>
        /// (Updatable) The list of DB systems in the Exadata infrastructure.
        /// </summary>
        public InputList<string> DbSystemIds
        {
            get => _dbSystemIds ?? (_dbSystemIds = new InputList<string>());
            set => _dbSystemIds = value;
        }

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) The unique key of the discovery request.
        /// </summary>
        [Input("discoveryKey")]
        public Input<string>? DiscoveryKey { get; set; }

        /// <summary>
        /// (Updatable) The name of the Exadata infrastructure.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) The Oracle license model that applies to the database management resources.
        /// </summary>
        [Input("licenseModel")]
        public Input<string>? LicenseModel { get; set; }

        [Input("storageServerNames")]
        private InputList<string>? _storageServerNames;

        /// <summary>
        /// (Updatable) The list of all the Exadata storage server names to be included for monitoring purposes. If not specified, all the Exadata storage servers associated with the DB systems are included.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        public InputList<string> StorageServerNames
        {
            get => _storageServerNames ?? (_storageServerNames = new InputList<string>());
            set => _storageServerNames = value;
        }

        public ExternalExadataInfrastructureArgs()
        {
        }
        public static new ExternalExadataInfrastructureArgs Empty => new ExternalExadataInfrastructureArgs();
    }

    public sealed class ExternalExadataInfrastructureState : global::Pulumi.ResourceArgs
    {
        [Input("additionalDetails")]
        private InputMap<object>? _additionalDetails;

        /// <summary>
        /// The additional details of the resource defined in `{"key": "value"}` format. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<object> AdditionalDetails
        {
            get => _additionalDetails ?? (_additionalDetails = new InputMap<object>());
            set => _additionalDetails = value;
        }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("databaseCompartments")]
        private InputList<string>? _databaseCompartments;

        /// <summary>
        /// The list of [OCIDs] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartments.
        /// </summary>
        public InputList<string> DatabaseCompartments
        {
            get => _databaseCompartments ?? (_databaseCompartments = new InputList<string>());
            set => _databaseCompartments = value;
        }

        [Input("databaseSystems")]
        private InputList<Inputs.ExternalExadataInfrastructureDatabaseSystemGetArgs>? _databaseSystems;

        /// <summary>
        /// A list of DB systems.
        /// </summary>
        public InputList<Inputs.ExternalExadataInfrastructureDatabaseSystemGetArgs> DatabaseSystems
        {
            get => _databaseSystems ?? (_databaseSystems = new InputList<Inputs.ExternalExadataInfrastructureDatabaseSystemGetArgs>());
            set => _databaseSystems = value;
        }

        [Input("dbSystemIds")]
        private InputList<string>? _dbSystemIds;

        /// <summary>
        /// (Updatable) The list of DB systems in the Exadata infrastructure.
        /// </summary>
        public InputList<string> DbSystemIds
        {
            get => _dbSystemIds ?? (_dbSystemIds = new InputList<string>());
            set => _dbSystemIds = value;
        }

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) The unique key of the discovery request.
        /// </summary>
        [Input("discoveryKey")]
        public Input<string>? DiscoveryKey { get; set; }

        /// <summary>
        /// (Updatable) The name of the Exadata infrastructure.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// The internal ID of the Exadata resource.
        /// </summary>
        [Input("internalId")]
        public Input<string>? InternalId { get; set; }

        /// <summary>
        /// (Updatable) The Oracle license model that applies to the database management resources.
        /// </summary>
        [Input("licenseModel")]
        public Input<string>? LicenseModel { get; set; }

        /// <summary>
        /// The details of the lifecycle state of the Exadata resource.
        /// </summary>
        [Input("lifecycleDetails")]
        public Input<string>? LifecycleDetails { get; set; }

        /// <summary>
        /// The rack size of the Exadata infrastructure.
        /// </summary>
        [Input("rackSize")]
        public Input<string>? RackSize { get; set; }

        /// <summary>
        /// The current lifecycle state of the database resource.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The status of the Exadata resource.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("storageGrids")]
        private InputList<Inputs.ExternalExadataInfrastructureStorageGridGetArgs>? _storageGrids;

        /// <summary>
        /// The Exadata storage server grid of the Exadata infrastructure.
        /// </summary>
        public InputList<Inputs.ExternalExadataInfrastructureStorageGridGetArgs> StorageGrids
        {
            get => _storageGrids ?? (_storageGrids = new InputList<Inputs.ExternalExadataInfrastructureStorageGridGetArgs>());
            set => _storageGrids = value;
        }

        [Input("storageServerNames")]
        private InputList<string>? _storageServerNames;

        /// <summary>
        /// (Updatable) The list of all the Exadata storage server names to be included for monitoring purposes. If not specified, all the Exadata storage servers associated with the DB systems are included.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        public InputList<string> StorageServerNames
        {
            get => _storageServerNames ?? (_storageServerNames = new InputList<string>());
            set => _storageServerNames = value;
        }

        /// <summary>
        /// The timestamp of the creation of the Exadata resource.
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The timestamp of the last update of the Exadata resource.
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        /// <summary>
        /// The version of the Exadata resource.
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        public ExternalExadataInfrastructureState()
        {
        }
        public static new ExternalExadataInfrastructureState Empty => new ExternalExadataInfrastructureState();
    }
}
