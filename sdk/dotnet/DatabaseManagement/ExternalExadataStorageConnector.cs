// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DatabaseManagement
{
    /// <summary>
    /// This resource provides the External Exadata Storage Connector resource in Oracle Cloud Infrastructure Database Management service.
    /// 
    /// Creates the Exadata storage server connector after validating the connection information.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testExternalExadataStorageConnector = new Oci.DatabaseManagement.ExternalExadataStorageConnector("testExternalExadataStorageConnector", new()
    ///     {
    ///         AgentId = oci_cloud_bridge_agent.Test_agent.Id,
    ///         ConnectionUri = @var.External_exadata_storage_connector_connection_uri,
    ///         ConnectorName = @var.External_exadata_storage_connector_connector_name,
    ///         CredentialInfo = new Oci.DatabaseManagement.Inputs.ExternalExadataStorageConnectorCredentialInfoArgs
    ///         {
    ///             Password = @var.External_exadata_storage_connector_credential_info_password,
    ///             Username = @var.External_exadata_storage_connector_credential_info_username,
    ///             SslTrustStoreLocation = @var.External_exadata_storage_connector_credential_info_ssl_trust_store_location,
    ///             SslTrustStorePassword = @var.External_exadata_storage_connector_credential_info_ssl_trust_store_password,
    ///             SslTrustStoreType = @var.External_exadata_storage_connector_credential_info_ssl_trust_store_type,
    ///         },
    ///         StorageServerId = oci_database_management_storage_server.Test_storage_server.Id,
    ///         DefinedTags = 
    ///         {
    ///             { "Operations.CostCenter", "42" },
    ///         },
    ///         FreeformTags = 
    ///         {
    ///             { "Department", "Finance" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ExternalExadataStorageConnectors can be imported using the `id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import oci:DatabaseManagement/externalExadataStorageConnector:ExternalExadataStorageConnector test_external_exadata_storage_connector "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:DatabaseManagement/externalExadataStorageConnector:ExternalExadataStorageConnector")]
    public partial class ExternalExadataStorageConnector : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The additional details of the resource defined in `{"key": "value"}` format. Example: `{"bar-key": "value"}`
        /// </summary>
        [Output("additionalDetails")]
        public Output<ImmutableDictionary<string, object>> AdditionalDetails { get; private set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the agent for the Exadata storage server.
        /// </summary>
        [Output("agentId")]
        public Output<string> AgentId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The unique string of the connection. For example, "https://&lt;storage-server-name&gt;/MS/RESTService/".
        /// </summary>
        [Output("connectionUri")]
        public Output<string> ConnectionUri { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The name of the Exadata storage server connector.
        /// </summary>
        [Output("connectorName")]
        public Output<string> ConnectorName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The user credential information.
        /// </summary>
        [Output("credentialInfo")]
        public Output<Outputs.ExternalExadataStorageConnectorCredentialInfo> CredentialInfo { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, object>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// The name of the Exadata resource. English letters, numbers, "-", "_" and "." only.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
        /// </summary>
        [Output("exadataInfrastructureId")]
        public Output<string> ExadataInfrastructureId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, object>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// The internal ID of the Exadata resource.
        /// </summary>
        [Output("internalId")]
        public Output<string> InternalId { get; private set; } = null!;

        /// <summary>
        /// The details of the lifecycle state of the Exadata resource.
        /// </summary>
        [Output("lifecycleDetails")]
        public Output<string> LifecycleDetails { get; private set; } = null!;

        /// <summary>
        /// The current lifecycle state of the database resource.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The status of the Exadata resource.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata storage server.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("storageServerId")]
        public Output<string> StorageServerId { get; private set; } = null!;

        /// <summary>
        /// The timestamp of the creation of the Exadata resource.
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The timestamp of the last update of the Exadata resource.
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;

        /// <summary>
        /// The version of the Exadata resource.
        /// </summary>
        [Output("version")]
        public Output<string> Version { get; private set; } = null!;


        /// <summary>
        /// Create a ExternalExadataStorageConnector resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ExternalExadataStorageConnector(string name, ExternalExadataStorageConnectorArgs args, CustomResourceOptions? options = null)
            : base("oci:DatabaseManagement/externalExadataStorageConnector:ExternalExadataStorageConnector", name, args ?? new ExternalExadataStorageConnectorArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ExternalExadataStorageConnector(string name, Input<string> id, ExternalExadataStorageConnectorState? state = null, CustomResourceOptions? options = null)
            : base("oci:DatabaseManagement/externalExadataStorageConnector:ExternalExadataStorageConnector", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ExternalExadataStorageConnector resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ExternalExadataStorageConnector Get(string name, Input<string> id, ExternalExadataStorageConnectorState? state = null, CustomResourceOptions? options = null)
        {
            return new ExternalExadataStorageConnector(name, id, state, options);
        }
    }

    public sealed class ExternalExadataStorageConnectorArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the agent for the Exadata storage server.
        /// </summary>
        [Input("agentId", required: true)]
        public Input<string> AgentId { get; set; } = null!;

        /// <summary>
        /// (Updatable) The unique string of the connection. For example, "https://&lt;storage-server-name&gt;/MS/RESTService/".
        /// </summary>
        [Input("connectionUri", required: true)]
        public Input<string> ConnectionUri { get; set; } = null!;

        /// <summary>
        /// (Updatable) The name of the Exadata storage server connector.
        /// </summary>
        [Input("connectorName", required: true)]
        public Input<string> ConnectorName { get; set; } = null!;

        /// <summary>
        /// (Updatable) The user credential information.
        /// </summary>
        [Input("credentialInfo", required: true)]
        public Input<Inputs.ExternalExadataStorageConnectorCredentialInfoArgs> CredentialInfo { get; set; } = null!;

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata storage server.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("storageServerId", required: true)]
        public Input<string> StorageServerId { get; set; } = null!;

        public ExternalExadataStorageConnectorArgs()
        {
        }
        public static new ExternalExadataStorageConnectorArgs Empty => new ExternalExadataStorageConnectorArgs();
    }

    public sealed class ExternalExadataStorageConnectorState : global::Pulumi.ResourceArgs
    {
        [Input("additionalDetails")]
        private InputMap<object>? _additionalDetails;

        /// <summary>
        /// The additional details of the resource defined in `{"key": "value"}` format. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<object> AdditionalDetails
        {
            get => _additionalDetails ?? (_additionalDetails = new InputMap<object>());
            set => _additionalDetails = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the agent for the Exadata storage server.
        /// </summary>
        [Input("agentId")]
        public Input<string>? AgentId { get; set; }

        /// <summary>
        /// (Updatable) The unique string of the connection. For example, "https://&lt;storage-server-name&gt;/MS/RESTService/".
        /// </summary>
        [Input("connectionUri")]
        public Input<string>? ConnectionUri { get; set; }

        /// <summary>
        /// (Updatable) The name of the Exadata storage server connector.
        /// </summary>
        [Input("connectorName")]
        public Input<string>? ConnectorName { get; set; }

        /// <summary>
        /// (Updatable) The user credential information.
        /// </summary>
        [Input("credentialInfo")]
        public Input<Inputs.ExternalExadataStorageConnectorCredentialInfoGetArgs>? CredentialInfo { get; set; }

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// The name of the Exadata resource. English letters, numbers, "-", "_" and "." only.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
        /// </summary>
        [Input("exadataInfrastructureId")]
        public Input<string>? ExadataInfrastructureId { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// The internal ID of the Exadata resource.
        /// </summary>
        [Input("internalId")]
        public Input<string>? InternalId { get; set; }

        /// <summary>
        /// The details of the lifecycle state of the Exadata resource.
        /// </summary>
        [Input("lifecycleDetails")]
        public Input<string>? LifecycleDetails { get; set; }

        /// <summary>
        /// The current lifecycle state of the database resource.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The status of the Exadata resource.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata storage server.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("storageServerId")]
        public Input<string>? StorageServerId { get; set; }

        /// <summary>
        /// The timestamp of the creation of the Exadata resource.
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The timestamp of the last update of the Exadata resource.
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        /// <summary>
        /// The version of the Exadata resource.
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        public ExternalExadataStorageConnectorState()
        {
        }
        public static new ExternalExadataStorageConnectorState Empty => new ExternalExadataStorageConnectorState();
    }
}
