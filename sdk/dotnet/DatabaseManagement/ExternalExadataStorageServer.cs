// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DatabaseManagement
{
    /// <summary>
    /// This resource provides the External Exadata Storage Server resource in Oracle Cloud Infrastructure Database Management service.
    /// 
    /// Updates the Exadata storage server specified by exadataStorageServerId.
    /// 
    /// ## Import
    /// 
    /// ExternalExadataStorageServers can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:DatabaseManagement/externalExadataStorageServer:ExternalExadataStorageServer test_external_exadata_storage_server "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:DatabaseManagement/externalExadataStorageServer:ExternalExadataStorageServer")]
    public partial class ExternalExadataStorageServer : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The additional details of the resource defined in `{"key": "value"}` format. Example: `{"bar-key": "value"}`
        /// </summary>
        [Output("additionalDetails")]
        public Output<ImmutableDictionary<string, string>> AdditionalDetails { get; private set; } = null!;

        /// <summary>
        /// The connector of the Exadata storage server.
        /// </summary>
        [Output("connectors")]
        public Output<ImmutableArray<Outputs.ExternalExadataStorageServerConnector>> Connectors { get; private set; } = null!;

        /// <summary>
        /// The CPU count of the Exadata storage server.
        /// </summary>
        [Output("cpuCount")]
        public Output<double> CpuCount { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, string>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// The name of the Exadata resource. English letters, numbers, "-", "_" and "." only.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
        /// </summary>
        [Output("exadataInfrastructureId")]
        public Output<string> ExadataInfrastructureId { get; private set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata storage server.
        /// </summary>
        [Output("externalExadataStorageServerId")]
        public Output<string> ExternalExadataStorageServerId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, string>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// The internal ID of the Exadata resource.
        /// </summary>
        [Output("internalId")]
        public Output<string> InternalId { get; private set; } = null!;

        /// <summary>
        /// The IP address of the Exadata storage server.
        /// </summary>
        [Output("ipAddress")]
        public Output<string> IpAddress { get; private set; } = null!;

        /// <summary>
        /// The details of the lifecycle state of the Exadata resource.
        /// </summary>
        [Output("lifecycleDetails")]
        public Output<string> LifecycleDetails { get; private set; } = null!;

        /// <summary>
        /// The make model of the Exadata storage server.
        /// </summary>
        [Output("makeModel")]
        public Output<string> MakeModel { get; private set; } = null!;

        /// <summary>
        /// The maximum flash disk IO operations per second of the Exadata storage server.
        /// </summary>
        [Output("maxFlashDiskIops")]
        public Output<int> MaxFlashDiskIops { get; private set; } = null!;

        /// <summary>
        /// The maximum flash disk IO throughput in MB/s of the Exadata storage server.
        /// </summary>
        [Output("maxFlashDiskThroughput")]
        public Output<int> MaxFlashDiskThroughput { get; private set; } = null!;

        /// <summary>
        /// The maximum hard disk IO operations per second of the Exadata storage server.
        /// </summary>
        [Output("maxHardDiskIops")]
        public Output<int> MaxHardDiskIops { get; private set; } = null!;

        /// <summary>
        /// The maximum hard disk IO throughput in MB/s of the Exadata storage server.
        /// </summary>
        [Output("maxHardDiskThroughput")]
        public Output<int> MaxHardDiskThroughput { get; private set; } = null!;

        /// <summary>
        /// The Exadata storage server memory size in GB.
        /// </summary>
        [Output("memoryGb")]
        public Output<double> MemoryGb { get; private set; } = null!;

        /// <summary>
        /// The type of Exadata resource.
        /// </summary>
        [Output("resourceType")]
        public Output<string> ResourceType { get; private set; } = null!;

        /// <summary>
        /// The current lifecycle state of the database resource.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The status of the Exadata resource.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata storage server grid.
        /// </summary>
        [Output("storageGridId")]
        public Output<string> StorageGridId { get; private set; } = null!;

        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        [Output("systemTags")]
        public Output<ImmutableDictionary<string, string>> SystemTags { get; private set; } = null!;

        /// <summary>
        /// The timestamp of the creation of the Exadata resource.
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The timestamp of the last update of the Exadata resource.
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;

        /// <summary>
        /// The version of the Exadata resource.
        /// </summary>
        [Output("version")]
        public Output<string> Version { get; private set; } = null!;


        /// <summary>
        /// Create a ExternalExadataStorageServer resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ExternalExadataStorageServer(string name, ExternalExadataStorageServerArgs args, CustomResourceOptions? options = null)
            : base("oci:DatabaseManagement/externalExadataStorageServer:ExternalExadataStorageServer", name, args ?? new ExternalExadataStorageServerArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ExternalExadataStorageServer(string name, Input<string> id, ExternalExadataStorageServerState? state = null, CustomResourceOptions? options = null)
            : base("oci:DatabaseManagement/externalExadataStorageServer:ExternalExadataStorageServer", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ExternalExadataStorageServer resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ExternalExadataStorageServer Get(string name, Input<string> id, ExternalExadataStorageServerState? state = null, CustomResourceOptions? options = null)
        {
            return new ExternalExadataStorageServer(name, id, state, options);
        }
    }

    public sealed class ExternalExadataStorageServerArgs : global::Pulumi.ResourceArgs
    {
        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata storage server.
        /// </summary>
        [Input("externalExadataStorageServerId", required: true)]
        public Input<string> ExternalExadataStorageServerId { get; set; } = null!;

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        public ExternalExadataStorageServerArgs()
        {
        }
        public static new ExternalExadataStorageServerArgs Empty => new ExternalExadataStorageServerArgs();
    }

    public sealed class ExternalExadataStorageServerState : global::Pulumi.ResourceArgs
    {
        [Input("additionalDetails")]
        private InputMap<string>? _additionalDetails;

        /// <summary>
        /// The additional details of the resource defined in `{"key": "value"}` format. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<string> AdditionalDetails
        {
            get => _additionalDetails ?? (_additionalDetails = new InputMap<string>());
            set => _additionalDetails = value;
        }

        [Input("connectors")]
        private InputList<Inputs.ExternalExadataStorageServerConnectorGetArgs>? _connectors;

        /// <summary>
        /// The connector of the Exadata storage server.
        /// </summary>
        public InputList<Inputs.ExternalExadataStorageServerConnectorGetArgs> Connectors
        {
            get => _connectors ?? (_connectors = new InputList<Inputs.ExternalExadataStorageServerConnectorGetArgs>());
            set => _connectors = value;
        }

        /// <summary>
        /// The CPU count of the Exadata storage server.
        /// </summary>
        [Input("cpuCount")]
        public Input<double>? CpuCount { get; set; }

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// The name of the Exadata resource. English letters, numbers, "-", "_" and "." only.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
        /// </summary>
        [Input("exadataInfrastructureId")]
        public Input<string>? ExadataInfrastructureId { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata storage server.
        /// </summary>
        [Input("externalExadataStorageServerId")]
        public Input<string>? ExternalExadataStorageServerId { get; set; }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// The internal ID of the Exadata resource.
        /// </summary>
        [Input("internalId")]
        public Input<string>? InternalId { get; set; }

        /// <summary>
        /// The IP address of the Exadata storage server.
        /// </summary>
        [Input("ipAddress")]
        public Input<string>? IpAddress { get; set; }

        /// <summary>
        /// The details of the lifecycle state of the Exadata resource.
        /// </summary>
        [Input("lifecycleDetails")]
        public Input<string>? LifecycleDetails { get; set; }

        /// <summary>
        /// The make model of the Exadata storage server.
        /// </summary>
        [Input("makeModel")]
        public Input<string>? MakeModel { get; set; }

        /// <summary>
        /// The maximum flash disk IO operations per second of the Exadata storage server.
        /// </summary>
        [Input("maxFlashDiskIops")]
        public Input<int>? MaxFlashDiskIops { get; set; }

        /// <summary>
        /// The maximum flash disk IO throughput in MB/s of the Exadata storage server.
        /// </summary>
        [Input("maxFlashDiskThroughput")]
        public Input<int>? MaxFlashDiskThroughput { get; set; }

        /// <summary>
        /// The maximum hard disk IO operations per second of the Exadata storage server.
        /// </summary>
        [Input("maxHardDiskIops")]
        public Input<int>? MaxHardDiskIops { get; set; }

        /// <summary>
        /// The maximum hard disk IO throughput in MB/s of the Exadata storage server.
        /// </summary>
        [Input("maxHardDiskThroughput")]
        public Input<int>? MaxHardDiskThroughput { get; set; }

        /// <summary>
        /// The Exadata storage server memory size in GB.
        /// </summary>
        [Input("memoryGb")]
        public Input<double>? MemoryGb { get; set; }

        /// <summary>
        /// The type of Exadata resource.
        /// </summary>
        [Input("resourceType")]
        public Input<string>? ResourceType { get; set; }

        /// <summary>
        /// The current lifecycle state of the database resource.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The status of the Exadata resource.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata storage server grid.
        /// </summary>
        [Input("storageGridId")]
        public Input<string>? StorageGridId { get; set; }

        [Input("systemTags")]
        private InputMap<string>? _systemTags;

        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public InputMap<string> SystemTags
        {
            get => _systemTags ?? (_systemTags = new InputMap<string>());
            set => _systemTags = value;
        }

        /// <summary>
        /// The timestamp of the creation of the Exadata resource.
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The timestamp of the last update of the Exadata resource.
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        /// <summary>
        /// The version of the Exadata resource.
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        public ExternalExadataStorageServerState()
        {
        }
        public static new ExternalExadataStorageServerState Empty => new ExternalExadataStorageServerState();
    }
}
