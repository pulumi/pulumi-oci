// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DatabaseManagement
{
    /// <summary>
    /// This resource provides the External My Sql Database External Mysql Databases Management resource in Oracle Cloud Infrastructure Database Management service.
    /// 
    /// Enables Database Management for an external MySQL Database.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testExternalMySqlDatabaseExternalMysqlDatabasesManagement = new Oci.DatabaseManagement.ExternalMySqlDatabaseExternalMysqlDatabasesManagement("test_external_my_sql_database_external_mysql_databases_management", new()
    ///     {
    ///         ExternalMySqlDatabaseId = testExternalMySqlDatabase.Id,
    ///         EnableExternalMysqlDatabase = enableExternalMysqlDatabase,
    ///         ConnectorId = testConnector.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [OciResourceType("oci:DatabaseManagement/externalMySqlDatabaseExternalMysqlDatabasesManagement:ExternalMySqlDatabaseExternalMysqlDatabasesManagement")]
    public partial class ExternalMySqlDatabaseExternalMysqlDatabasesManagement : global::Pulumi.CustomResource
    {
        /// <summary>
        /// OCID of External MySQL Database connector.
        /// </summary>
        [Output("connectorId")]
        public Output<string> ConnectorId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("enableExternalMysqlDatabase")]
        public Output<bool> EnableExternalMysqlDatabase { get; private set; } = null!;

        /// <summary>
        /// The OCID of the External MySQL Database.
        /// </summary>
        [Output("externalMySqlDatabaseId")]
        public Output<string> ExternalMySqlDatabaseId { get; private set; } = null!;


        /// <summary>
        /// Create a ExternalMySqlDatabaseExternalMysqlDatabasesManagement resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ExternalMySqlDatabaseExternalMysqlDatabasesManagement(string name, ExternalMySqlDatabaseExternalMysqlDatabasesManagementArgs args, CustomResourceOptions? options = null)
            : base("oci:DatabaseManagement/externalMySqlDatabaseExternalMysqlDatabasesManagement:ExternalMySqlDatabaseExternalMysqlDatabasesManagement", name, args ?? new ExternalMySqlDatabaseExternalMysqlDatabasesManagementArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ExternalMySqlDatabaseExternalMysqlDatabasesManagement(string name, Input<string> id, ExternalMySqlDatabaseExternalMysqlDatabasesManagementState? state = null, CustomResourceOptions? options = null)
            : base("oci:DatabaseManagement/externalMySqlDatabaseExternalMysqlDatabasesManagement:ExternalMySqlDatabaseExternalMysqlDatabasesManagement", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ExternalMySqlDatabaseExternalMysqlDatabasesManagement resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ExternalMySqlDatabaseExternalMysqlDatabasesManagement Get(string name, Input<string> id, ExternalMySqlDatabaseExternalMysqlDatabasesManagementState? state = null, CustomResourceOptions? options = null)
        {
            return new ExternalMySqlDatabaseExternalMysqlDatabasesManagement(name, id, state, options);
        }
    }

    public sealed class ExternalMySqlDatabaseExternalMysqlDatabasesManagementArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// OCID of External MySQL Database connector.
        /// </summary>
        [Input("connectorId")]
        public Input<string>? ConnectorId { get; set; }

        /// <summary>
        /// (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("enableExternalMysqlDatabase", required: true)]
        public Input<bool> EnableExternalMysqlDatabase { get; set; } = null!;

        /// <summary>
        /// The OCID of the External MySQL Database.
        /// </summary>
        [Input("externalMySqlDatabaseId", required: true)]
        public Input<string> ExternalMySqlDatabaseId { get; set; } = null!;

        public ExternalMySqlDatabaseExternalMysqlDatabasesManagementArgs()
        {
        }
        public static new ExternalMySqlDatabaseExternalMysqlDatabasesManagementArgs Empty => new ExternalMySqlDatabaseExternalMysqlDatabasesManagementArgs();
    }

    public sealed class ExternalMySqlDatabaseExternalMysqlDatabasesManagementState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// OCID of External MySQL Database connector.
        /// </summary>
        [Input("connectorId")]
        public Input<string>? ConnectorId { get; set; }

        /// <summary>
        /// (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("enableExternalMysqlDatabase")]
        public Input<bool>? EnableExternalMysqlDatabase { get; set; }

        /// <summary>
        /// The OCID of the External MySQL Database.
        /// </summary>
        [Input("externalMySqlDatabaseId")]
        public Input<string>? ExternalMySqlDatabaseId { get; set; }

        public ExternalMySqlDatabaseExternalMysqlDatabasesManagementState()
        {
        }
        public static new ExternalMySqlDatabaseExternalMysqlDatabasesManagementState Empty => new ExternalMySqlDatabaseExternalMysqlDatabasesManagementState();
    }
}
