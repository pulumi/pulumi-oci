// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DatabaseManagement
{
    public static class GetCloudClusters
    {
        /// <summary>
        /// This data source provides the list of Cloud Clusters in Oracle Cloud Infrastructure Database Management service.
        /// 
        /// Lists the clusters in the specified cloud DB system.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testCloudClusters = Oci.DatabaseManagement.GetCloudClusters.Invoke(new()
        ///     {
        ///         CloudDbSystemId = testCloudDbSystem.Id,
        ///         CompartmentId = compartmentId,
        ///         DisplayName = cloudClusterDisplayName,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetCloudClustersResult> InvokeAsync(GetCloudClustersArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCloudClustersResult>("oci:DatabaseManagement/getCloudClusters:getCloudClusters", args ?? new GetCloudClustersArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Cloud Clusters in Oracle Cloud Infrastructure Database Management service.
        /// 
        /// Lists the clusters in the specified cloud DB system.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testCloudClusters = Oci.DatabaseManagement.GetCloudClusters.Invoke(new()
        ///     {
        ///         CloudDbSystemId = testCloudDbSystem.Id,
        ///         CompartmentId = compartmentId,
        ///         DisplayName = cloudClusterDisplayName,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCloudClustersResult> Invoke(GetCloudClustersInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCloudClustersResult>("oci:DatabaseManagement/getCloudClusters:getCloudClusters", args ?? new GetCloudClustersInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Cloud Clusters in Oracle Cloud Infrastructure Database Management service.
        /// 
        /// Lists the clusters in the specified cloud DB system.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testCloudClusters = Oci.DatabaseManagement.GetCloudClusters.Invoke(new()
        ///     {
        ///         CloudDbSystemId = testCloudDbSystem.Id,
        ///         CompartmentId = compartmentId,
        ///         DisplayName = cloudClusterDisplayName,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCloudClustersResult> Invoke(GetCloudClustersInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCloudClustersResult>("oci:DatabaseManagement/getCloudClusters:getCloudClusters", args ?? new GetCloudClustersInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCloudClustersArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud DB system.
        /// </summary>
        [Input("cloudDbSystemId")]
        public string? CloudDbSystemId { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        /// <summary>
        /// A filter to only return the resources that match the entire display name.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetCloudClustersFilterArgs>? _filters;
        public List<Inputs.GetCloudClustersFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetCloudClustersFilterArgs>());
            set => _filters = value;
        }

        public GetCloudClustersArgs()
        {
        }
        public static new GetCloudClustersArgs Empty => new GetCloudClustersArgs();
    }

    public sealed class GetCloudClustersInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud DB system.
        /// </summary>
        [Input("cloudDbSystemId")]
        public Input<string>? CloudDbSystemId { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// A filter to only return the resources that match the entire display name.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetCloudClustersFilterInputArgs>? _filters;
        public InputList<Inputs.GetCloudClustersFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetCloudClustersFilterInputArgs>());
            set => _filters = value;
        }

        public GetCloudClustersInvokeArgs()
        {
        }
        public static new GetCloudClustersInvokeArgs Empty => new GetCloudClustersInvokeArgs();
    }


    [OutputType]
    public sealed class GetCloudClustersResult
    {
        /// <summary>
        /// The list of cloud_cluster_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCloudClustersCloudClusterCollectionResult> CloudClusterCollections;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud DB system that the cluster is a part of.
        /// </summary>
        public readonly string? CloudDbSystemId;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// The user-friendly name for the cloud cluster. The name does not have to be unique.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetCloudClustersFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetCloudClustersResult(
            ImmutableArray<Outputs.GetCloudClustersCloudClusterCollectionResult> cloudClusterCollections,

            string? cloudDbSystemId,

            string? compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetCloudClustersFilterResult> filters,

            string id)
        {
            CloudClusterCollections = cloudClusterCollections;
            CloudDbSystemId = cloudDbSystemId;
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
        }
    }
}
