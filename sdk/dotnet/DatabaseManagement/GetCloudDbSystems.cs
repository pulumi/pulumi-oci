// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DatabaseManagement
{
    public static class GetCloudDbSystems
    {
        /// <summary>
        /// This data source provides the list of Cloud Db Systems in Oracle Cloud Infrastructure Database Management service.
        /// 
        /// Lists the cloud DB systems in the specified compartment.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testCloudDbSystems = Oci.DatabaseManagement.GetCloudDbSystems.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DbaasParentInfrastructureId = testDbaasParentInfrastructure.Id,
        ///         DeploymentType = cloudDbSystemDeploymentType,
        ///         DisplayName = cloudDbSystemDisplayName,
        ///         State = cloudDbSystemState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetCloudDbSystemsResult> InvokeAsync(GetCloudDbSystemsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCloudDbSystemsResult>("oci:DatabaseManagement/getCloudDbSystems:getCloudDbSystems", args ?? new GetCloudDbSystemsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Cloud Db Systems in Oracle Cloud Infrastructure Database Management service.
        /// 
        /// Lists the cloud DB systems in the specified compartment.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testCloudDbSystems = Oci.DatabaseManagement.GetCloudDbSystems.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DbaasParentInfrastructureId = testDbaasParentInfrastructure.Id,
        ///         DeploymentType = cloudDbSystemDeploymentType,
        ///         DisplayName = cloudDbSystemDisplayName,
        ///         State = cloudDbSystemState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCloudDbSystemsResult> Invoke(GetCloudDbSystemsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCloudDbSystemsResult>("oci:DatabaseManagement/getCloudDbSystems:getCloudDbSystems", args ?? new GetCloudDbSystemsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Cloud Db Systems in Oracle Cloud Infrastructure Database Management service.
        /// 
        /// Lists the cloud DB systems in the specified compartment.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testCloudDbSystems = Oci.DatabaseManagement.GetCloudDbSystems.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DbaasParentInfrastructureId = testDbaasParentInfrastructure.Id,
        ///         DeploymentType = cloudDbSystemDeploymentType,
        ///         DisplayName = cloudDbSystemDisplayName,
        ///         State = cloudDbSystemState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCloudDbSystemsResult> Invoke(GetCloudDbSystemsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCloudDbSystemsResult>("oci:DatabaseManagement/getCloudDbSystems:getCloudDbSystems", args ?? new GetCloudDbSystemsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCloudDbSystemsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the dbaas parent infrastructure of the cloud DB system.
        /// </summary>
        [Input("dbaasParentInfrastructureId")]
        public string? DbaasParentInfrastructureId { get; set; }

        /// <summary>
        /// A filter to return cloud DB systems of the specified deployment type.
        /// </summary>
        [Input("deploymentType")]
        public string? DeploymentType { get; set; }

        /// <summary>
        /// A filter to only return the resources that match the entire display name.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetCloudDbSystemsFilterArgs>? _filters;
        public List<Inputs.GetCloudDbSystemsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetCloudDbSystemsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The lifecycle state of a resource.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetCloudDbSystemsArgs()
        {
        }
        public static new GetCloudDbSystemsArgs Empty => new GetCloudDbSystemsArgs();
    }

    public sealed class GetCloudDbSystemsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the dbaas parent infrastructure of the cloud DB system.
        /// </summary>
        [Input("dbaasParentInfrastructureId")]
        public Input<string>? DbaasParentInfrastructureId { get; set; }

        /// <summary>
        /// A filter to return cloud DB systems of the specified deployment type.
        /// </summary>
        [Input("deploymentType")]
        public Input<string>? DeploymentType { get; set; }

        /// <summary>
        /// A filter to only return the resources that match the entire display name.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetCloudDbSystemsFilterInputArgs>? _filters;
        public InputList<Inputs.GetCloudDbSystemsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetCloudDbSystemsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The lifecycle state of a resource.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetCloudDbSystemsInvokeArgs()
        {
        }
        public static new GetCloudDbSystemsInvokeArgs Empty => new GetCloudDbSystemsInvokeArgs();
    }


    [OutputType]
    public sealed class GetCloudDbSystemsResult
    {
        /// <summary>
        /// The list of cloud_db_system_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCloudDbSystemsCloudDbSystemCollectionResult> CloudDbSystemCollections;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the parent cloud DB Infrastructure. For VM Dbsystems , it will be the DBSystem Id. For ExaCS and ExaCC,  it will be the cloudVmClusterId and vmClusterId respectively.
        /// </summary>
        public readonly string? DbaasParentInfrastructureId;
        /// <summary>
        /// The deployment type of cloud dbsystem.
        /// </summary>
        public readonly string? DeploymentType;
        /// <summary>
        /// The user-friendly name for the DB system. The name does not have to be unique.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetCloudDbSystemsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The current lifecycle state of the cloud DB system resource.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetCloudDbSystemsResult(
            ImmutableArray<Outputs.GetCloudDbSystemsCloudDbSystemCollectionResult> cloudDbSystemCollections,

            string compartmentId,

            string? dbaasParentInfrastructureId,

            string? deploymentType,

            string? displayName,

            ImmutableArray<Outputs.GetCloudDbSystemsFilterResult> filters,

            string id,

            string? state)
        {
            CloudDbSystemCollections = cloudDbSystemCollections;
            CompartmentId = compartmentId;
            DbaasParentInfrastructureId = dbaasParentInfrastructureId;
            DeploymentType = deploymentType;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            State = state;
        }
    }
}
