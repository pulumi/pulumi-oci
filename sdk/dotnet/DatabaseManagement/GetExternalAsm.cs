// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DatabaseManagement
{
    public static class GetExternalAsm
    {
        /// <summary>
        /// This data source provides details about a specific External Asm resource in Oracle Cloud Infrastructure Database Management service.
        /// 
        /// Gets the details for the external ASM specified by `externalAsmId`.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testExternalAsm = Oci.DatabaseManagement.GetExternalAsm.Invoke(new()
        ///     {
        ///         ExternalAsmId = oci_database_management_external_asm.Test_external_asm.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetExternalAsmResult> InvokeAsync(GetExternalAsmArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetExternalAsmResult>("oci:DatabaseManagement/getExternalAsm:getExternalAsm", args ?? new GetExternalAsmArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific External Asm resource in Oracle Cloud Infrastructure Database Management service.
        /// 
        /// Gets the details for the external ASM specified by `externalAsmId`.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testExternalAsm = Oci.DatabaseManagement.GetExternalAsm.Invoke(new()
        ///     {
        ///         ExternalAsmId = oci_database_management_external_asm.Test_external_asm.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetExternalAsmResult> Invoke(GetExternalAsmInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetExternalAsmResult>("oci:DatabaseManagement/getExternalAsm:getExternalAsm", args ?? new GetExternalAsmInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetExternalAsmArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external ASM.
        /// </summary>
        [Input("externalAsmId", required: true)]
        public string ExternalAsmId { get; set; } = null!;

        public GetExternalAsmArgs()
        {
        }
        public static new GetExternalAsmArgs Empty => new GetExternalAsmArgs();
    }

    public sealed class GetExternalAsmInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external ASM.
        /// </summary>
        [Input("externalAsmId", required: true)]
        public Input<string> ExternalAsmId { get; set; } = null!;

        public GetExternalAsmInvokeArgs()
        {
        }
        public static new GetExternalAsmInvokeArgs Empty => new GetExternalAsmInvokeArgs();
    }


    [OutputType]
    public sealed class GetExternalAsmResult
    {
        /// <summary>
        /// The additional details of the external ASM defined in `{"key": "value"}` format. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? AdditionalDetails;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the external database resides.
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// The name of the external ASM.
        /// </summary>
        public readonly string? ComponentName;
        /// <summary>
        /// The user-friendly name for the database. The name does not have to be unique.
        /// </summary>
        public readonly string? DisplayName;
        public readonly string ExternalAsmId;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external connector.
        /// </summary>
        public readonly string? ExternalConnectorId;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external DB system that the ASM is a part of.
        /// </summary>
        public readonly string? ExternalDbSystemId;
        /// <summary>
        /// The directory in which ASM is installed. This is the same directory in which Oracle Grid Infrastructure is installed.
        /// </summary>
        public readonly string? GridHome;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external database.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Indicates whether the ASM is a cluster ASM or not.
        /// </summary>
        public readonly bool? IsCluster;
        /// <summary>
        /// Indicates whether Oracle Flex ASM is enabled or not.
        /// </summary>
        public readonly bool? IsFlexEnabled;
        /// <summary>
        /// Additional information about the current lifecycle state.
        /// </summary>
        public readonly string? LifecycleDetails;
        /// <summary>
        /// The list of databases that are serviced by the ASM.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetExternalAsmServicedDatabaseResult> ServicedDatabases;
        /// <summary>
        /// The current lifecycle state of the external ASM.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// The date and time the external ASM was created.
        /// </summary>
        public readonly string? TimeCreated;
        /// <summary>
        /// The date and time the external ASM was last updated.
        /// </summary>
        public readonly string? TimeUpdated;
        /// <summary>
        /// The ASM version.
        /// </summary>
        public readonly string? Version;

        [OutputConstructor]
        private GetExternalAsmResult(
            ImmutableDictionary<string, object>? additionalDetails,

            string? compartmentId,

            string? componentName,

            string? displayName,

            string externalAsmId,

            string? externalConnectorId,

            string? externalDbSystemId,

            string? gridHome,

            string? id,

            bool? isCluster,

            bool? isFlexEnabled,

            string? lifecycleDetails,

            ImmutableArray<Outputs.GetExternalAsmServicedDatabaseResult> servicedDatabases,

            string? state,

            string? timeCreated,

            string? timeUpdated,

            string? version)
        {
            AdditionalDetails = additionalDetails;
            CompartmentId = compartmentId;
            ComponentName = componentName;
            DisplayName = displayName;
            ExternalAsmId = externalAsmId;
            ExternalConnectorId = externalConnectorId;
            ExternalDbSystemId = externalDbSystemId;
            GridHome = gridHome;
            Id = id;
            IsCluster = isCluster;
            IsFlexEnabled = isFlexEnabled;
            LifecycleDetails = lifecycleDetails;
            ServicedDatabases = servicedDatabases;
            State = state;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            Version = version;
        }
    }
}
