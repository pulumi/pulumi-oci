// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DatabaseManagement
{
    public static class GetExternalAsmConfiguration
    {
        /// <summary>
        /// This data source provides details about a specific External Asm Configuration resource in Oracle Cloud Infrastructure Database Management service.
        /// 
        /// Gets configuration details including disk groups for the external ASM specified by `externalAsmId`.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testExternalAsmConfiguration = Oci.DatabaseManagement.GetExternalAsmConfiguration.Invoke(new()
        ///     {
        ///         ExternalAsmId = testExternalAsm.Id,
        ///         OpcNamedCredentialId = externalAsmConfigurationOpcNamedCredentialId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetExternalAsmConfigurationResult> InvokeAsync(GetExternalAsmConfigurationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetExternalAsmConfigurationResult>("oci:DatabaseManagement/getExternalAsmConfiguration:getExternalAsmConfiguration", args ?? new GetExternalAsmConfigurationArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific External Asm Configuration resource in Oracle Cloud Infrastructure Database Management service.
        /// 
        /// Gets configuration details including disk groups for the external ASM specified by `externalAsmId`.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testExternalAsmConfiguration = Oci.DatabaseManagement.GetExternalAsmConfiguration.Invoke(new()
        ///     {
        ///         ExternalAsmId = testExternalAsm.Id,
        ///         OpcNamedCredentialId = externalAsmConfigurationOpcNamedCredentialId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetExternalAsmConfigurationResult> Invoke(GetExternalAsmConfigurationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetExternalAsmConfigurationResult>("oci:DatabaseManagement/getExternalAsmConfiguration:getExternalAsmConfiguration", args ?? new GetExternalAsmConfigurationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetExternalAsmConfigurationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external ASM.
        /// </summary>
        [Input("externalAsmId", required: true)]
        public string ExternalAsmId { get; set; } = null!;

        /// <summary>
        /// The OCID of the Named Credential.
        /// </summary>
        [Input("opcNamedCredentialId")]
        public string? OpcNamedCredentialId { get; set; }

        public GetExternalAsmConfigurationArgs()
        {
        }
        public static new GetExternalAsmConfigurationArgs Empty => new GetExternalAsmConfigurationArgs();
    }

    public sealed class GetExternalAsmConfigurationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external ASM.
        /// </summary>
        [Input("externalAsmId", required: true)]
        public Input<string> ExternalAsmId { get; set; } = null!;

        /// <summary>
        /// The OCID of the Named Credential.
        /// </summary>
        [Input("opcNamedCredentialId")]
        public Input<string>? OpcNamedCredentialId { get; set; }

        public GetExternalAsmConfigurationInvokeArgs()
        {
        }
        public static new GetExternalAsmConfigurationInvokeArgs Empty => new GetExternalAsmConfigurationInvokeArgs();
    }


    [OutputType]
    public sealed class GetExternalAsmConfigurationResult
    {
        public readonly string ExternalAsmId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// An array of initialization parameters for the external ASM instances.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetExternalAsmConfigurationInitParameterResult> InitParameters;
        public readonly string? OpcNamedCredentialId;

        [OutputConstructor]
        private GetExternalAsmConfigurationResult(
            string externalAsmId,

            string id,

            ImmutableArray<Outputs.GetExternalAsmConfigurationInitParameterResult> initParameters,

            string? opcNamedCredentialId)
        {
            ExternalAsmId = externalAsmId;
            Id = id;
            InitParameters = initParameters;
            OpcNamedCredentialId = opcNamedCredentialId;
        }
    }
}
