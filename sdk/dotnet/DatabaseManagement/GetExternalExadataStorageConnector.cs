// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DatabaseManagement
{
    public static class GetExternalExadataStorageConnector
    {
        /// <summary>
        /// This data source provides details about a specific External Exadata Storage Connector resource in Oracle Cloud Infrastructure Database Management service.
        /// 
        /// Gets the details for the Exadata storage server connector specified by exadataStorageConnectorId.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testExternalExadataStorageConnector = Oci.DatabaseManagement.GetExternalExadataStorageConnector.Invoke(new()
        ///     {
        ///         ExternalExadataStorageConnectorId = oci_database_management_external_exadata_storage_connector.Test_external_exadata_storage_connector.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetExternalExadataStorageConnectorResult> InvokeAsync(GetExternalExadataStorageConnectorArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetExternalExadataStorageConnectorResult>("oci:DatabaseManagement/getExternalExadataStorageConnector:getExternalExadataStorageConnector", args ?? new GetExternalExadataStorageConnectorArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific External Exadata Storage Connector resource in Oracle Cloud Infrastructure Database Management service.
        /// 
        /// Gets the details for the Exadata storage server connector specified by exadataStorageConnectorId.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testExternalExadataStorageConnector = Oci.DatabaseManagement.GetExternalExadataStorageConnector.Invoke(new()
        ///     {
        ///         ExternalExadataStorageConnectorId = oci_database_management_external_exadata_storage_connector.Test_external_exadata_storage_connector.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetExternalExadataStorageConnectorResult> Invoke(GetExternalExadataStorageConnectorInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetExternalExadataStorageConnectorResult>("oci:DatabaseManagement/getExternalExadataStorageConnector:getExternalExadataStorageConnector", args ?? new GetExternalExadataStorageConnectorInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetExternalExadataStorageConnectorArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the connector to the Exadata storage server.
        /// </summary>
        [Input("externalExadataStorageConnectorId", required: true)]
        public string ExternalExadataStorageConnectorId { get; set; } = null!;

        public GetExternalExadataStorageConnectorArgs()
        {
        }
        public static new GetExternalExadataStorageConnectorArgs Empty => new GetExternalExadataStorageConnectorArgs();
    }

    public sealed class GetExternalExadataStorageConnectorInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the connector to the Exadata storage server.
        /// </summary>
        [Input("externalExadataStorageConnectorId", required: true)]
        public Input<string> ExternalExadataStorageConnectorId { get; set; } = null!;

        public GetExternalExadataStorageConnectorInvokeArgs()
        {
        }
        public static new GetExternalExadataStorageConnectorInvokeArgs Empty => new GetExternalExadataStorageConnectorInvokeArgs();
    }


    [OutputType]
    public sealed class GetExternalExadataStorageConnectorResult
    {
        /// <summary>
        /// The additional details of the resource defined in `{"key": "value"}` format. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? AdditionalDetails;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the agent for the Exadata storage server.
        /// </summary>
        public readonly string? AgentId;
        /// <summary>
        /// The unique string of the connection. For example, "https://&lt;storage-server-name&gt;/MS/RESTService/".
        /// </summary>
        public readonly string? ConnectionUri;
        public readonly string? ConnectorName;
        public readonly ImmutableArray<Outputs.GetExternalExadataStorageConnectorCredentialInfoResult> CredentialInfos;
        /// <summary>
        /// The name of the Exadata resource. English letters, numbers, "-", "_" and "." only.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
        /// </summary>
        public readonly string? ExadataInfrastructureId;
        public readonly string ExternalExadataStorageConnectorId;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata resource.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The internal ID of the Exadata resource.
        /// </summary>
        public readonly string? InternalId;
        /// <summary>
        /// The details of the lifecycle state of the Exadata resource.
        /// </summary>
        public readonly string? LifecycleDetails;
        /// <summary>
        /// The current lifecycle state of the database resource.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// The status of the Exadata resource.
        /// </summary>
        public readonly string? Status;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata storage server.
        /// </summary>
        public readonly string? StorageServerId;
        /// <summary>
        /// The timestamp of the creation of the Exadata resource.
        /// </summary>
        public readonly string? TimeCreated;
        /// <summary>
        /// The timestamp of the last update of the Exadata resource.
        /// </summary>
        public readonly string? TimeUpdated;
        /// <summary>
        /// The version of the Exadata resource.
        /// </summary>
        public readonly string? Version;

        [OutputConstructor]
        private GetExternalExadataStorageConnectorResult(
            ImmutableDictionary<string, object>? additionalDetails,

            string? agentId,

            string? connectionUri,

            string? connectorName,

            ImmutableArray<Outputs.GetExternalExadataStorageConnectorCredentialInfoResult> credentialInfos,

            string? displayName,

            string? exadataInfrastructureId,

            string externalExadataStorageConnectorId,

            string? id,

            string? internalId,

            string? lifecycleDetails,

            string? state,

            string? status,

            string? storageServerId,

            string? timeCreated,

            string? timeUpdated,

            string? version)
        {
            AdditionalDetails = additionalDetails;
            AgentId = agentId;
            ConnectionUri = connectionUri;
            ConnectorName = connectorName;
            CredentialInfos = credentialInfos;
            DisplayName = displayName;
            ExadataInfrastructureId = exadataInfrastructureId;
            ExternalExadataStorageConnectorId = externalExadataStorageConnectorId;
            Id = id;
            InternalId = internalId;
            LifecycleDetails = lifecycleDetails;
            State = state;
            Status = status;
            StorageServerId = storageServerId;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            Version = version;
        }
    }
}
