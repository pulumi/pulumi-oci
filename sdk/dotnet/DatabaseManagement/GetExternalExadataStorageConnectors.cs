// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DatabaseManagement
{
    public static class GetExternalExadataStorageConnectors
    {
        /// <summary>
        /// This data source provides the list of External Exadata Storage Connectors in Oracle Cloud Infrastructure Database Management service.
        /// 
        /// Lists the Exadata storage server connectors for the specified Exadata infrastructure.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testExternalExadataStorageConnectors = Oci.DatabaseManagement.GetExternalExadataStorageConnectors.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         ExternalExadataInfrastructureId = oci_database_management_external_exadata_infrastructure.Test_external_exadata_infrastructure.Id,
        ///         DisplayName = @var.External_exadata_storage_connector_display_name,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetExternalExadataStorageConnectorsResult> InvokeAsync(GetExternalExadataStorageConnectorsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetExternalExadataStorageConnectorsResult>("oci:DatabaseManagement/getExternalExadataStorageConnectors:getExternalExadataStorageConnectors", args ?? new GetExternalExadataStorageConnectorsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of External Exadata Storage Connectors in Oracle Cloud Infrastructure Database Management service.
        /// 
        /// Lists the Exadata storage server connectors for the specified Exadata infrastructure.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testExternalExadataStorageConnectors = Oci.DatabaseManagement.GetExternalExadataStorageConnectors.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         ExternalExadataInfrastructureId = oci_database_management_external_exadata_infrastructure.Test_external_exadata_infrastructure.Id,
        ///         DisplayName = @var.External_exadata_storage_connector_display_name,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetExternalExadataStorageConnectorsResult> Invoke(GetExternalExadataStorageConnectorsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetExternalExadataStorageConnectorsResult>("oci:DatabaseManagement/getExternalExadataStorageConnectors:getExternalExadataStorageConnectors", args ?? new GetExternalExadataStorageConnectorsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetExternalExadataStorageConnectorsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// The optional single value query filter parameter on the entity display name.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
        /// </summary>
        [Input("externalExadataInfrastructureId", required: true)]
        public string ExternalExadataInfrastructureId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetExternalExadataStorageConnectorsFilterArgs>? _filters;
        public List<Inputs.GetExternalExadataStorageConnectorsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetExternalExadataStorageConnectorsFilterArgs>());
            set => _filters = value;
        }

        public GetExternalExadataStorageConnectorsArgs()
        {
        }
        public static new GetExternalExadataStorageConnectorsArgs Empty => new GetExternalExadataStorageConnectorsArgs();
    }

    public sealed class GetExternalExadataStorageConnectorsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// The optional single value query filter parameter on the entity display name.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
        /// </summary>
        [Input("externalExadataInfrastructureId", required: true)]
        public Input<string> ExternalExadataInfrastructureId { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetExternalExadataStorageConnectorsFilterInputArgs>? _filters;
        public InputList<Inputs.GetExternalExadataStorageConnectorsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetExternalExadataStorageConnectorsFilterInputArgs>());
            set => _filters = value;
        }

        public GetExternalExadataStorageConnectorsInvokeArgs()
        {
        }
        public static new GetExternalExadataStorageConnectorsInvokeArgs Empty => new GetExternalExadataStorageConnectorsInvokeArgs();
    }


    [OutputType]
    public sealed class GetExternalExadataStorageConnectorsResult
    {
        public readonly string CompartmentId;
        /// <summary>
        /// The name of the Exadata resource. English letters, numbers, "-", "_" and "." only.
        /// </summary>
        public readonly string? DisplayName;
        public readonly string ExternalExadataInfrastructureId;
        /// <summary>
        /// The list of external_exadata_storage_connector_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetExternalExadataStorageConnectorsExternalExadataStorageConnectorCollectionResult> ExternalExadataStorageConnectorCollections;
        public readonly ImmutableArray<Outputs.GetExternalExadataStorageConnectorsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string? Id;

        [OutputConstructor]
        private GetExternalExadataStorageConnectorsResult(
            string compartmentId,

            string? displayName,

            string externalExadataInfrastructureId,

            ImmutableArray<Outputs.GetExternalExadataStorageConnectorsExternalExadataStorageConnectorCollectionResult> externalExadataStorageConnectorCollections,

            ImmutableArray<Outputs.GetExternalExadataStorageConnectorsFilterResult> filters,

            string? id)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            ExternalExadataInfrastructureId = externalExadataInfrastructureId;
            ExternalExadataStorageConnectorCollections = externalExadataStorageConnectorCollections;
            Filters = filters;
            Id = id;
        }
    }
}
