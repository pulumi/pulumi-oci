// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DatabaseManagement
{
    public static class GetManagedDatabase
    {
        /// <summary>
        /// This data source provides details about a specific Managed Database resource in Oracle Cloud Infrastructure Database Management service.
        /// 
        /// Gets the details for the Managed Database specified by managedDatabaseId.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedDatabase = Oci.DatabaseManagement.GetManagedDatabase.Invoke(new()
        ///     {
        ///         ManagedDatabaseId = oci_database_management_managed_database.Test_managed_database.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetManagedDatabaseResult> InvokeAsync(GetManagedDatabaseArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetManagedDatabaseResult>("oci:DatabaseManagement/getManagedDatabase:getManagedDatabase", args ?? new GetManagedDatabaseArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Managed Database resource in Oracle Cloud Infrastructure Database Management service.
        /// 
        /// Gets the details for the Managed Database specified by managedDatabaseId.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedDatabase = Oci.DatabaseManagement.GetManagedDatabase.Invoke(new()
        ///     {
        ///         ManagedDatabaseId = oci_database_management_managed_database.Test_managed_database.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetManagedDatabaseResult> Invoke(GetManagedDatabaseInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedDatabaseResult>("oci:DatabaseManagement/getManagedDatabase:getManagedDatabase", args ?? new GetManagedDatabaseInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagedDatabaseArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
        /// </summary>
        [Input("managedDatabaseId", required: true)]
        public string ManagedDatabaseId { get; set; } = null!;

        public GetManagedDatabaseArgs()
        {
        }
        public static new GetManagedDatabaseArgs Empty => new GetManagedDatabaseArgs();
    }

    public sealed class GetManagedDatabaseInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
        /// </summary>
        [Input("managedDatabaseId", required: true)]
        public Input<string> ManagedDatabaseId { get; set; } = null!;

        public GetManagedDatabaseInvokeArgs()
        {
        }
        public static new GetManagedDatabaseInvokeArgs Empty => new GetManagedDatabaseInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagedDatabaseResult
    {
        /// <summary>
        /// The additional details specific to a type of database defined in `{"key": "value"}` format. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? AdditionalDetails;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the Managed Database Group resides.
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// The status of the Oracle Database. Indicates whether the status of the database is UP, DOWN, or UNKNOWN at the current time.
        /// </summary>
        public readonly string? DatabaseStatus;
        /// <summary>
        /// The subtype of the Oracle Database. Indicates whether the database is a Container Database, Pluggable Database, Non-container Database, Autonomous Database, or Autonomous Container Database.
        /// </summary>
        public readonly string? DatabaseSubType;
        /// <summary>
        /// The type of Oracle Database installation.
        /// </summary>
        public readonly string? DatabaseType;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external DB system that this Managed Database is part of.
        /// </summary>
        public readonly string? DbSystemId;
        /// <summary>
        /// The infrastructure used to deploy the Oracle Database.
        /// </summary>
        public readonly string? DeploymentType;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Indicates whether the Oracle Database is part of a cluster.
        /// </summary>
        public readonly bool? IsCluster;
        /// <summary>
        /// A list of Managed Database Groups that the Managed Database belongs to.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetManagedDatabaseManagedDatabaseGroupResult> ManagedDatabaseGroups;
        public readonly string ManagedDatabaseId;
        /// <summary>
        /// The management option used when enabling Database Management.
        /// </summary>
        public readonly string? ManagementOption;
        /// <summary>
        /// The name of the Managed Database.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the parent Container Database if Managed Database is a Pluggable Database.
        /// </summary>
        public readonly string? ParentContainerId;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the storage DB system.
        /// </summary>
        public readonly string? StorageSystemId;
        /// <summary>
        /// The date and time the Managed Database was created.
        /// </summary>
        public readonly string? TimeCreated;
        /// <summary>
        /// The workload type of the Autonomous Database.
        /// </summary>
        public readonly string? WorkloadType;

        [OutputConstructor]
        private GetManagedDatabaseResult(
            ImmutableDictionary<string, object>? additionalDetails,

            string? compartmentId,

            string? databaseStatus,

            string? databaseSubType,

            string? databaseType,

            string? dbSystemId,

            string? deploymentType,

            string? id,

            bool? isCluster,

            ImmutableArray<Outputs.GetManagedDatabaseManagedDatabaseGroupResult> managedDatabaseGroups,

            string managedDatabaseId,

            string? managementOption,

            string? name,

            string? parentContainerId,

            string? storageSystemId,

            string? timeCreated,

            string? workloadType)
        {
            AdditionalDetails = additionalDetails;
            CompartmentId = compartmentId;
            DatabaseStatus = databaseStatus;
            DatabaseSubType = databaseSubType;
            DatabaseType = databaseType;
            DbSystemId = dbSystemId;
            DeploymentType = deploymentType;
            Id = id;
            IsCluster = isCluster;
            ManagedDatabaseGroups = managedDatabaseGroups;
            ManagedDatabaseId = managedDatabaseId;
            ManagementOption = managementOption;
            Name = name;
            ParentContainerId = parentContainerId;
            StorageSystemId = storageSystemId;
            TimeCreated = timeCreated;
            WorkloadType = workloadType;
        }
    }
}
