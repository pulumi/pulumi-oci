// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DatabaseManagement
{
    public static class GetManagedDatabaseCursorCacheStatements
    {
        /// <summary>
        /// This data source provides the list of Managed Database Cursor Cache Statements in Oracle Cloud Infrastructure Database Management service.
        /// 
        /// Lists the SQL statements from shared SQL area, also called the cursor cache.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedDatabaseCursorCacheStatements = Oci.DatabaseManagement.GetManagedDatabaseCursorCacheStatements.Invoke(new()
        ///     {
        ///         ManagedDatabaseId = testManagedDatabase.Id,
        ///         OpcNamedCredentialId = managedDatabaseCursorCacheStatementOpcNamedCredentialId,
        ///         SqlText = managedDatabaseCursorCacheStatementSqlText,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetManagedDatabaseCursorCacheStatementsResult> InvokeAsync(GetManagedDatabaseCursorCacheStatementsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetManagedDatabaseCursorCacheStatementsResult>("oci:DatabaseManagement/getManagedDatabaseCursorCacheStatements:getManagedDatabaseCursorCacheStatements", args ?? new GetManagedDatabaseCursorCacheStatementsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Managed Database Cursor Cache Statements in Oracle Cloud Infrastructure Database Management service.
        /// 
        /// Lists the SQL statements from shared SQL area, also called the cursor cache.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedDatabaseCursorCacheStatements = Oci.DatabaseManagement.GetManagedDatabaseCursorCacheStatements.Invoke(new()
        ///     {
        ///         ManagedDatabaseId = testManagedDatabase.Id,
        ///         OpcNamedCredentialId = managedDatabaseCursorCacheStatementOpcNamedCredentialId,
        ///         SqlText = managedDatabaseCursorCacheStatementSqlText,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetManagedDatabaseCursorCacheStatementsResult> Invoke(GetManagedDatabaseCursorCacheStatementsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedDatabaseCursorCacheStatementsResult>("oci:DatabaseManagement/getManagedDatabaseCursorCacheStatements:getManagedDatabaseCursorCacheStatements", args ?? new GetManagedDatabaseCursorCacheStatementsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagedDatabaseCursorCacheStatementsArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetManagedDatabaseCursorCacheStatementsFilterArgs>? _filters;
        public List<Inputs.GetManagedDatabaseCursorCacheStatementsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetManagedDatabaseCursorCacheStatementsFilterArgs>());
            set => _filters = value;
        }

        [Input("limit")]
        public int? Limit { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
        /// </summary>
        [Input("managedDatabaseId", required: true)]
        public string ManagedDatabaseId { get; set; } = null!;

        /// <summary>
        /// The OCID of the Named Credential.
        /// </summary>
        [Input("opcNamedCredentialId")]
        public string? OpcNamedCredentialId { get; set; }

        /// <summary>
        /// A filter to return all the SQL plan baselines that match the SQL text. By default, the search is case insensitive. To run an exact or case-sensitive search, double-quote the search string. You may also use the '%' symbol as a wildcard.
        /// </summary>
        [Input("sqlText")]
        public string? SqlText { get; set; }

        public GetManagedDatabaseCursorCacheStatementsArgs()
        {
        }
        public static new GetManagedDatabaseCursorCacheStatementsArgs Empty => new GetManagedDatabaseCursorCacheStatementsArgs();
    }

    public sealed class GetManagedDatabaseCursorCacheStatementsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetManagedDatabaseCursorCacheStatementsFilterInputArgs>? _filters;
        public InputList<Inputs.GetManagedDatabaseCursorCacheStatementsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetManagedDatabaseCursorCacheStatementsFilterInputArgs>());
            set => _filters = value;
        }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
        /// </summary>
        [Input("managedDatabaseId", required: true)]
        public Input<string> ManagedDatabaseId { get; set; } = null!;

        /// <summary>
        /// The OCID of the Named Credential.
        /// </summary>
        [Input("opcNamedCredentialId")]
        public Input<string>? OpcNamedCredentialId { get; set; }

        /// <summary>
        /// A filter to return all the SQL plan baselines that match the SQL text. By default, the search is case insensitive. To run an exact or case-sensitive search, double-quote the search string. You may also use the '%' symbol as a wildcard.
        /// </summary>
        [Input("sqlText")]
        public Input<string>? SqlText { get; set; }

        public GetManagedDatabaseCursorCacheStatementsInvokeArgs()
        {
        }
        public static new GetManagedDatabaseCursorCacheStatementsInvokeArgs Empty => new GetManagedDatabaseCursorCacheStatementsInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagedDatabaseCursorCacheStatementsResult
    {
        /// <summary>
        /// The list of cursor_cache_statement_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetManagedDatabaseCursorCacheStatementsCursorCacheStatementCollectionResult> CursorCacheStatementCollections;
        public readonly ImmutableArray<Outputs.GetManagedDatabaseCursorCacheStatementsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly int? Limit;
        public readonly string ManagedDatabaseId;
        public readonly string? OpcNamedCredentialId;
        /// <summary>
        /// The first thousand characters of the SQL text.
        /// </summary>
        public readonly string? SqlText;

        [OutputConstructor]
        private GetManagedDatabaseCursorCacheStatementsResult(
            ImmutableArray<Outputs.GetManagedDatabaseCursorCacheStatementsCursorCacheStatementCollectionResult> cursorCacheStatementCollections,

            ImmutableArray<Outputs.GetManagedDatabaseCursorCacheStatementsFilterResult> filters,

            string id,

            int? limit,

            string managedDatabaseId,

            string? opcNamedCredentialId,

            string? sqlText)
        {
            CursorCacheStatementCollections = cursorCacheStatementCollections;
            Filters = filters;
            Id = id;
            Limit = limit;
            ManagedDatabaseId = managedDatabaseId;
            OpcNamedCredentialId = opcNamedCredentialId;
            SqlText = sqlText;
        }
    }
}
