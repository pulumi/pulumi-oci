// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DatabaseManagement
{
    public static class GetManagedDatabaseOptimizerStatisticsCollectionOperation
    {
        /// <summary>
        /// This data source provides details about a specific Managed Database Optimizer Statistics Collection Operation resource in Oracle Cloud Infrastructure Database Management service.
        /// 
        /// Gets a detailed report of the Optimizer Statistics Collection operation for the specified Managed Database.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedDatabaseOptimizerStatisticsCollectionOperation = Oci.DatabaseManagement.GetManagedDatabaseOptimizerStatisticsCollectionOperation.Invoke(new()
        ///     {
        ///         ManagedDatabaseId = testManagedDatabase.Id,
        ///         OptimizerStatisticsCollectionOperationId = testOptimizerStatisticsCollectionOperation.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetManagedDatabaseOptimizerStatisticsCollectionOperationResult> InvokeAsync(GetManagedDatabaseOptimizerStatisticsCollectionOperationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetManagedDatabaseOptimizerStatisticsCollectionOperationResult>("oci:DatabaseManagement/getManagedDatabaseOptimizerStatisticsCollectionOperation:getManagedDatabaseOptimizerStatisticsCollectionOperation", args ?? new GetManagedDatabaseOptimizerStatisticsCollectionOperationArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Managed Database Optimizer Statistics Collection Operation resource in Oracle Cloud Infrastructure Database Management service.
        /// 
        /// Gets a detailed report of the Optimizer Statistics Collection operation for the specified Managed Database.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedDatabaseOptimizerStatisticsCollectionOperation = Oci.DatabaseManagement.GetManagedDatabaseOptimizerStatisticsCollectionOperation.Invoke(new()
        ///     {
        ///         ManagedDatabaseId = testManagedDatabase.Id,
        ///         OptimizerStatisticsCollectionOperationId = testOptimizerStatisticsCollectionOperation.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetManagedDatabaseOptimizerStatisticsCollectionOperationResult> Invoke(GetManagedDatabaseOptimizerStatisticsCollectionOperationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedDatabaseOptimizerStatisticsCollectionOperationResult>("oci:DatabaseManagement/getManagedDatabaseOptimizerStatisticsCollectionOperation:getManagedDatabaseOptimizerStatisticsCollectionOperation", args ?? new GetManagedDatabaseOptimizerStatisticsCollectionOperationInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Managed Database Optimizer Statistics Collection Operation resource in Oracle Cloud Infrastructure Database Management service.
        /// 
        /// Gets a detailed report of the Optimizer Statistics Collection operation for the specified Managed Database.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedDatabaseOptimizerStatisticsCollectionOperation = Oci.DatabaseManagement.GetManagedDatabaseOptimizerStatisticsCollectionOperation.Invoke(new()
        ///     {
        ///         ManagedDatabaseId = testManagedDatabase.Id,
        ///         OptimizerStatisticsCollectionOperationId = testOptimizerStatisticsCollectionOperation.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetManagedDatabaseOptimizerStatisticsCollectionOperationResult> Invoke(GetManagedDatabaseOptimizerStatisticsCollectionOperationInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedDatabaseOptimizerStatisticsCollectionOperationResult>("oci:DatabaseManagement/getManagedDatabaseOptimizerStatisticsCollectionOperation:getManagedDatabaseOptimizerStatisticsCollectionOperation", args ?? new GetManagedDatabaseOptimizerStatisticsCollectionOperationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagedDatabaseOptimizerStatisticsCollectionOperationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
        /// </summary>
        [Input("managedDatabaseId", required: true)]
        public string ManagedDatabaseId { get; set; } = null!;

        /// <summary>
        /// The ID of the Optimizer Statistics Collection operation.
        /// </summary>
        [Input("optimizerStatisticsCollectionOperationId", required: true)]
        public double OptimizerStatisticsCollectionOperationId { get; set; }

        public GetManagedDatabaseOptimizerStatisticsCollectionOperationArgs()
        {
        }
        public static new GetManagedDatabaseOptimizerStatisticsCollectionOperationArgs Empty => new GetManagedDatabaseOptimizerStatisticsCollectionOperationArgs();
    }

    public sealed class GetManagedDatabaseOptimizerStatisticsCollectionOperationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
        /// </summary>
        [Input("managedDatabaseId", required: true)]
        public Input<string> ManagedDatabaseId { get; set; } = null!;

        /// <summary>
        /// The ID of the Optimizer Statistics Collection operation.
        /// </summary>
        [Input("optimizerStatisticsCollectionOperationId", required: true)]
        public Input<double> OptimizerStatisticsCollectionOperationId { get; set; } = null!;

        public GetManagedDatabaseOptimizerStatisticsCollectionOperationInvokeArgs()
        {
        }
        public static new GetManagedDatabaseOptimizerStatisticsCollectionOperationInvokeArgs Empty => new GetManagedDatabaseOptimizerStatisticsCollectionOperationInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagedDatabaseOptimizerStatisticsCollectionOperationResult
    {
        /// <summary>
        /// The number of objects for which statistics collection is completed.
        /// </summary>
        public readonly int CompletedCount;
        /// <summary>
        /// The summary of the Managed Database resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetManagedDatabaseOptimizerStatisticsCollectionOperationDatabaseResult> Databases;
        /// <summary>
        /// The time it takes to complete the operation (in seconds).
        /// </summary>
        public readonly double DurationInSeconds;
        /// <summary>
        /// The end time of the operation.
        /// </summary>
        public readonly string EndTime;
        /// <summary>
        /// The number of objects for which statistics collection failed.
        /// </summary>
        public readonly int FailedCount;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The number of objects for which statistics collection is in progress.
        /// </summary>
        public readonly int InProgressCount;
        /// <summary>
        /// The name of the job.
        /// </summary>
        public readonly string JobName;
        public readonly string ManagedDatabaseId;
        /// <summary>
        /// The name of the operation.
        /// </summary>
        public readonly string OperationName;
        public readonly double OptimizerStatisticsCollectionOperationId;
        /// <summary>
        /// The start time of the operation.
        /// </summary>
        public readonly string StartTime;
        /// <summary>
        /// The status of the Optimizer Statistics Collection task.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The name of the target object for which statistics are gathered.
        /// </summary>
        public readonly string Target;
        /// <summary>
        /// An array of Optimizer Statistics Collection task details.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetManagedDatabaseOptimizerStatisticsCollectionOperationTaskResult> Tasks;
        /// <summary>
        /// The number of objects for which statistics collection timed out.
        /// </summary>
        public readonly int TimedOutCount;
        /// <summary>
        /// The total number of objects for which statistics is collected. This number is the sum of all the objects with various statuses: completed, inProgress, failed, and timedOut.
        /// </summary>
        public readonly int TotalObjectsCount;

        [OutputConstructor]
        private GetManagedDatabaseOptimizerStatisticsCollectionOperationResult(
            int completedCount,

            ImmutableArray<Outputs.GetManagedDatabaseOptimizerStatisticsCollectionOperationDatabaseResult> databases,

            double durationInSeconds,

            string endTime,

            int failedCount,

            string id,

            int inProgressCount,

            string jobName,

            string managedDatabaseId,

            string operationName,

            double optimizerStatisticsCollectionOperationId,

            string startTime,

            string status,

            string target,

            ImmutableArray<Outputs.GetManagedDatabaseOptimizerStatisticsCollectionOperationTaskResult> tasks,

            int timedOutCount,

            int totalObjectsCount)
        {
            CompletedCount = completedCount;
            Databases = databases;
            DurationInSeconds = durationInSeconds;
            EndTime = endTime;
            FailedCount = failedCount;
            Id = id;
            InProgressCount = inProgressCount;
            JobName = jobName;
            ManagedDatabaseId = managedDatabaseId;
            OperationName = operationName;
            OptimizerStatisticsCollectionOperationId = optimizerStatisticsCollectionOperationId;
            StartTime = startTime;
            Status = status;
            Target = target;
            Tasks = tasks;
            TimedOutCount = timedOutCount;
            TotalObjectsCount = totalObjectsCount;
        }
    }
}
