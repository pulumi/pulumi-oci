// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DatabaseManagement
{
    public static class GetManagedDatabaseUser
    {
        /// <summary>
        /// This data source provides details about a specific Managed Database User resource in Oracle Cloud Infrastructure Database Management service.
        /// 
        /// Gets the details of the user specified by managedDatabaseId and userName.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedDatabaseUser = Oci.DatabaseManagement.GetManagedDatabaseUser.Invoke(new()
        ///     {
        ///         ManagedDatabaseId = testManagedDatabase.Id,
        ///         UserName = testUser.Name,
        ///         OpcNamedCredentialId = managedDatabaseUserOpcNamedCredentialId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetManagedDatabaseUserResult> InvokeAsync(GetManagedDatabaseUserArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetManagedDatabaseUserResult>("oci:DatabaseManagement/getManagedDatabaseUser:getManagedDatabaseUser", args ?? new GetManagedDatabaseUserArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Managed Database User resource in Oracle Cloud Infrastructure Database Management service.
        /// 
        /// Gets the details of the user specified by managedDatabaseId and userName.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedDatabaseUser = Oci.DatabaseManagement.GetManagedDatabaseUser.Invoke(new()
        ///     {
        ///         ManagedDatabaseId = testManagedDatabase.Id,
        ///         UserName = testUser.Name,
        ///         OpcNamedCredentialId = managedDatabaseUserOpcNamedCredentialId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetManagedDatabaseUserResult> Invoke(GetManagedDatabaseUserInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedDatabaseUserResult>("oci:DatabaseManagement/getManagedDatabaseUser:getManagedDatabaseUser", args ?? new GetManagedDatabaseUserInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagedDatabaseUserArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
        /// </summary>
        [Input("managedDatabaseId", required: true)]
        public string ManagedDatabaseId { get; set; } = null!;

        /// <summary>
        /// The OCID of the Named Credential.
        /// </summary>
        [Input("opcNamedCredentialId")]
        public string? OpcNamedCredentialId { get; set; }

        /// <summary>
        /// The name of the user whose details are to be viewed.
        /// </summary>
        [Input("userName", required: true)]
        public string UserName { get; set; } = null!;

        public GetManagedDatabaseUserArgs()
        {
        }
        public static new GetManagedDatabaseUserArgs Empty => new GetManagedDatabaseUserArgs();
    }

    public sealed class GetManagedDatabaseUserInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
        /// </summary>
        [Input("managedDatabaseId", required: true)]
        public Input<string> ManagedDatabaseId { get; set; } = null!;

        /// <summary>
        /// The OCID of the Named Credential.
        /// </summary>
        [Input("opcNamedCredentialId")]
        public Input<string>? OpcNamedCredentialId { get; set; }

        /// <summary>
        /// The name of the user whose details are to be viewed.
        /// </summary>
        [Input("userName", required: true)]
        public Input<string> UserName { get; set; } = null!;

        public GetManagedDatabaseUserInvokeArgs()
        {
        }
        public static new GetManagedDatabaseUserInvokeArgs Empty => new GetManagedDatabaseUserInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagedDatabaseUserResult
    {
        /// <summary>
        /// In a sharded database, indicates whether the user is created with shard DDL enabled (YES) or not (NO).
        /// </summary>
        public readonly string AllShared;
        /// <summary>
        /// The authentication mechanism for the user.
        /// </summary>
        public readonly string Authentication;
        /// <summary>
        /// Indicates whether a given user is common(Y) or local(N).
        /// </summary>
        public readonly string Common;
        /// <summary>
        /// The initial resource consumer group for the User.
        /// </summary>
        public readonly string ConsumerGroup;
        /// <summary>
        /// The default collation for the user schema.
        /// </summary>
        public readonly string DefaultCollation;
        /// <summary>
        /// The default tablespace for data.
        /// </summary>
        public readonly string DefaultTablespace;
        /// <summary>
        /// Indicates whether editions have been enabled for the corresponding user (Y) or not (N).
        /// </summary>
        public readonly string EditionsEnabled;
        /// <summary>
        /// The external name of the user.
        /// </summary>
        public readonly string ExternalName;
        /// <summary>
        /// In a federated sharded database, indicates whether the user is an external shard user (YES) or not (NO).
        /// </summary>
        public readonly string ExternalShared;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Indicates whether the user is a common user created by an implicit application (YES) or not (NO).
        /// </summary>
        public readonly string Implicit;
        /// <summary>
        /// Indicates whether the user definition is inherited from another container (YES) or not (NO).
        /// </summary>
        public readonly string Inherited;
        /// <summary>
        /// The default local temporary tablespace for the user.
        /// </summary>
        public readonly string LocalTempTablespace;
        public readonly string ManagedDatabaseId;
        /// <summary>
        /// The name of the User.
        /// </summary>
        public readonly string Name;
        public readonly string? OpcNamedCredentialId;
        /// <summary>
        /// Indicates whether the user was created and is maintained by Oracle-supplied scripts (such as catalog.sql or catproc.sql).
        /// </summary>
        public readonly string OracleMaintained;
        /// <summary>
        /// The list of existing versions of the password hashes (also known as "verifiers") for the account.
        /// </summary>
        public readonly string PasswordVersions;
        /// <summary>
        /// The profile name of the user.
        /// </summary>
        public readonly string Profile;
        /// <summary>
        /// Indicates whether a user can connect directly (N) or whether the account can only be proxied (Y) by users who have proxy privileges for this account (that is, by users who have been granted the "connect through" privilege for this account).
        /// </summary>
        public readonly string ProxyConnect;
        /// <summary>
        /// The status of the user account.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The name of the default tablespace for temporary tables or the name of a tablespace group.
        /// </summary>
        public readonly string TempTablespace;
        /// <summary>
        /// The date and time the user was created.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The date and time of the expiration of the user account.
        /// </summary>
        public readonly string TimeExpiring;
        /// <summary>
        /// The date and time of the last user login. This column is not populated when a user connects to the database with administrative privileges, that is, AS { SYSASM | SYSBACKUP | SYSDBA | SYSDG | SYSOPER | SYSRAC | SYSKM }.
        /// </summary>
        public readonly string TimeLastLogin;
        /// <summary>
        /// The date the account was locked, if the status of the account is LOCKED.
        /// </summary>
        public readonly string TimeLocked;
        /// <summary>
        /// The date and time when the user password was last set. This column is populated only when the value of the AUTHENTICATION_TYPE column is PASSWORD. Otherwise, this column is null.
        /// </summary>
        public readonly string TimePasswordChanged;
        public readonly string UserName;

        [OutputConstructor]
        private GetManagedDatabaseUserResult(
            string allShared,

            string authentication,

            string common,

            string consumerGroup,

            string defaultCollation,

            string defaultTablespace,

            string editionsEnabled,

            string externalName,

            string externalShared,

            string id,

            string @implicit,

            string inherited,

            string localTempTablespace,

            string managedDatabaseId,

            string name,

            string? opcNamedCredentialId,

            string oracleMaintained,

            string passwordVersions,

            string profile,

            string proxyConnect,

            string status,

            string tempTablespace,

            string timeCreated,

            string timeExpiring,

            string timeLastLogin,

            string timeLocked,

            string timePasswordChanged,

            string userName)
        {
            AllShared = allShared;
            Authentication = authentication;
            Common = common;
            ConsumerGroup = consumerGroup;
            DefaultCollation = defaultCollation;
            DefaultTablespace = defaultTablespace;
            EditionsEnabled = editionsEnabled;
            ExternalName = externalName;
            ExternalShared = externalShared;
            Id = id;
            Implicit = @implicit;
            Inherited = inherited;
            LocalTempTablespace = localTempTablespace;
            ManagedDatabaseId = managedDatabaseId;
            Name = name;
            OpcNamedCredentialId = opcNamedCredentialId;
            OracleMaintained = oracleMaintained;
            PasswordVersions = passwordVersions;
            Profile = profile;
            ProxyConnect = proxyConnect;
            Status = status;
            TempTablespace = tempTablespace;
            TimeCreated = timeCreated;
            TimeExpiring = timeExpiring;
            TimeLastLogin = timeLastLogin;
            TimeLocked = timeLocked;
            TimePasswordChanged = timePasswordChanged;
            UserName = userName;
        }
    }
}
