// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DatabaseManagement
{
    public static class GetManagedDatabaseUserDataAccessContainer
    {
        /// <summary>
        /// This data source provides details about a specific Managed Database User Data Access Container resource in Oracle Cloud Infrastructure Database Management service.
        /// 
        /// Gets the list of containers for a specific user. This is only applicable if ALL_CONTAINERS !='Y'.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedDatabaseUserDataAccessContainer = Oci.DatabaseManagement.GetManagedDatabaseUserDataAccessContainer.Invoke(new()
        ///     {
        ///         ManagedDatabaseId = testManagedDatabase.Id,
        ///         UserName = testUser.Name,
        ///         Name = managedDatabaseUserDataAccessContainerName,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetManagedDatabaseUserDataAccessContainerResult> InvokeAsync(GetManagedDatabaseUserDataAccessContainerArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetManagedDatabaseUserDataAccessContainerResult>("oci:DatabaseManagement/getManagedDatabaseUserDataAccessContainer:getManagedDatabaseUserDataAccessContainer", args ?? new GetManagedDatabaseUserDataAccessContainerArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Managed Database User Data Access Container resource in Oracle Cloud Infrastructure Database Management service.
        /// 
        /// Gets the list of containers for a specific user. This is only applicable if ALL_CONTAINERS !='Y'.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedDatabaseUserDataAccessContainer = Oci.DatabaseManagement.GetManagedDatabaseUserDataAccessContainer.Invoke(new()
        ///     {
        ///         ManagedDatabaseId = testManagedDatabase.Id,
        ///         UserName = testUser.Name,
        ///         Name = managedDatabaseUserDataAccessContainerName,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetManagedDatabaseUserDataAccessContainerResult> Invoke(GetManagedDatabaseUserDataAccessContainerInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedDatabaseUserDataAccessContainerResult>("oci:DatabaseManagement/getManagedDatabaseUserDataAccessContainer:getManagedDatabaseUserDataAccessContainer", args ?? new GetManagedDatabaseUserDataAccessContainerInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagedDatabaseUserDataAccessContainerArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
        /// </summary>
        [Input("managedDatabaseId", required: true)]
        public string ManagedDatabaseId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire name.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// The name of the user whose details are to be viewed.
        /// </summary>
        [Input("userName", required: true)]
        public string UserName { get; set; } = null!;

        public GetManagedDatabaseUserDataAccessContainerArgs()
        {
        }
        public static new GetManagedDatabaseUserDataAccessContainerArgs Empty => new GetManagedDatabaseUserDataAccessContainerArgs();
    }

    public sealed class GetManagedDatabaseUserDataAccessContainerInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
        /// </summary>
        [Input("managedDatabaseId", required: true)]
        public Input<string> ManagedDatabaseId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the user whose details are to be viewed.
        /// </summary>
        [Input("userName", required: true)]
        public Input<string> UserName { get; set; } = null!;

        public GetManagedDatabaseUserDataAccessContainerInvokeArgs()
        {
        }
        public static new GetManagedDatabaseUserDataAccessContainerInvokeArgs Empty => new GetManagedDatabaseUserDataAccessContainerInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagedDatabaseUserDataAccessContainerResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// An array of container resources.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetManagedDatabaseUserDataAccessContainerItemResult> Items;
        public readonly string ManagedDatabaseId;
        /// <summary>
        /// The name of the container included in the attribute.
        /// </summary>
        public readonly string? Name;
        public readonly string UserName;

        [OutputConstructor]
        private GetManagedDatabaseUserDataAccessContainerResult(
            string id,

            ImmutableArray<Outputs.GetManagedDatabaseUserDataAccessContainerItemResult> items,

            string managedDatabaseId,

            string? name,

            string userName)
        {
            Id = id;
            Items = items;
            ManagedDatabaseId = managedDatabaseId;
            Name = name;
            UserName = userName;
        }
    }
}
