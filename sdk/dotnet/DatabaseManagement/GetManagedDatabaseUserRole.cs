// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DatabaseManagement
{
    public static class GetManagedDatabaseUserRole
    {
        /// <summary>
        /// This data source provides details about a specific Managed Database User Role resource in Oracle Cloud Infrastructure Database Management service.
        /// 
        /// Gets the list of roles granted to a specific user.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testManagedDatabaseUserRole = Output.Create(Oci.DatabaseManagement.GetManagedDatabaseUserRole.InvokeAsync(new Oci.DatabaseManagement.GetManagedDatabaseUserRoleArgs
        ///         {
        ///             ManagedDatabaseId = oci_database_management_managed_database.Test_managed_database.Id,
        ///             UserName = oci_identity_user.Test_user.Name,
        ///             Name = @var.Managed_database_user_role_name,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetManagedDatabaseUserRoleResult> InvokeAsync(GetManagedDatabaseUserRoleArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetManagedDatabaseUserRoleResult>("oci:DatabaseManagement/getManagedDatabaseUserRole:getManagedDatabaseUserRole", args ?? new GetManagedDatabaseUserRoleArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Managed Database User Role resource in Oracle Cloud Infrastructure Database Management service.
        /// 
        /// Gets the list of roles granted to a specific user.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testManagedDatabaseUserRole = Output.Create(Oci.DatabaseManagement.GetManagedDatabaseUserRole.InvokeAsync(new Oci.DatabaseManagement.GetManagedDatabaseUserRoleArgs
        ///         {
        ///             ManagedDatabaseId = oci_database_management_managed_database.Test_managed_database.Id,
        ///             UserName = oci_identity_user.Test_user.Name,
        ///             Name = @var.Managed_database_user_role_name,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetManagedDatabaseUserRoleResult> Invoke(GetManagedDatabaseUserRoleInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetManagedDatabaseUserRoleResult>("oci:DatabaseManagement/getManagedDatabaseUserRole:getManagedDatabaseUserRole", args ?? new GetManagedDatabaseUserRoleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagedDatabaseUserRoleArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
        /// </summary>
        [Input("managedDatabaseId", required: true)]
        public string ManagedDatabaseId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire name.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// The name of the user whose details are to be viewed.
        /// </summary>
        [Input("userName", required: true)]
        public string UserName { get; set; } = null!;

        public GetManagedDatabaseUserRoleArgs()
        {
        }
    }

    public sealed class GetManagedDatabaseUserRoleInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
        /// </summary>
        [Input("managedDatabaseId", required: true)]
        public Input<string> ManagedDatabaseId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the user whose details are to be viewed.
        /// </summary>
        [Input("userName", required: true)]
        public Input<string> UserName { get; set; } = null!;

        public GetManagedDatabaseUserRoleInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetManagedDatabaseUserRoleResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// An array of roles.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetManagedDatabaseUserRoleItemResult> Items;
        public readonly string ManagedDatabaseId;
        /// <summary>
        /// The name of the role granted to the user.
        /// </summary>
        public readonly string? Name;
        public readonly string UserName;

        [OutputConstructor]
        private GetManagedDatabaseUserRoleResult(
            string id,

            ImmutableArray<Outputs.GetManagedDatabaseUserRoleItemResult> items,

            string managedDatabaseId,

            string? name,

            string userName)
        {
            Id = id;
            Items = items;
            ManagedDatabaseId = managedDatabaseId;
            Name = name;
            UserName = userName;
        }
    }
}
