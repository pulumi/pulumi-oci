// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DatabaseManagement
{
    public static class GetManagedDatabases
    {
        /// <summary>
        /// This data source provides the list of Managed Databases in Oracle Cloud Infrastructure Database Management service.
        /// 
        /// Gets the Managed Database for a specific ID or the list of Managed Databases in a specific compartment.
        /// Managed Databases can be filtered based on the name parameter. Only one of the parameters, ID or name
        /// should be provided. If neither of these parameters is provided, all the Managed Databases in the compartment
        /// are listed. Managed Databases can also be filtered based on the deployment type and management option.
        /// If the deployment type is not specified or if it is `ONPREMISE`, then the management option is not
        /// considered and Managed Databases with `ADVANCED` management option are listed.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedDatabases = Oci.DatabaseManagement.GetManagedDatabases.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DeploymentType = managedDatabaseDeploymentType,
        ///         ExternalExadataInfrastructureId = testExternalExadataInfrastructure.Id,
        ///         Id = managedDatabaseId,
        ///         ManagementOption = managedDatabaseManagementOption,
        ///         Name = managedDatabaseName,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetManagedDatabasesResult> InvokeAsync(GetManagedDatabasesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetManagedDatabasesResult>("oci:DatabaseManagement/getManagedDatabases:getManagedDatabases", args ?? new GetManagedDatabasesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Managed Databases in Oracle Cloud Infrastructure Database Management service.
        /// 
        /// Gets the Managed Database for a specific ID or the list of Managed Databases in a specific compartment.
        /// Managed Databases can be filtered based on the name parameter. Only one of the parameters, ID or name
        /// should be provided. If neither of these parameters is provided, all the Managed Databases in the compartment
        /// are listed. Managed Databases can also be filtered based on the deployment type and management option.
        /// If the deployment type is not specified or if it is `ONPREMISE`, then the management option is not
        /// considered and Managed Databases with `ADVANCED` management option are listed.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedDatabases = Oci.DatabaseManagement.GetManagedDatabases.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DeploymentType = managedDatabaseDeploymentType,
        ///         ExternalExadataInfrastructureId = testExternalExadataInfrastructure.Id,
        ///         Id = managedDatabaseId,
        ///         ManagementOption = managedDatabaseManagementOption,
        ///         Name = managedDatabaseName,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetManagedDatabasesResult> Invoke(GetManagedDatabasesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedDatabasesResult>("oci:DatabaseManagement/getManagedDatabases:getManagedDatabases", args ?? new GetManagedDatabasesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Managed Databases in Oracle Cloud Infrastructure Database Management service.
        /// 
        /// Gets the Managed Database for a specific ID or the list of Managed Databases in a specific compartment.
        /// Managed Databases can be filtered based on the name parameter. Only one of the parameters, ID or name
        /// should be provided. If neither of these parameters is provided, all the Managed Databases in the compartment
        /// are listed. Managed Databases can also be filtered based on the deployment type and management option.
        /// If the deployment type is not specified or if it is `ONPREMISE`, then the management option is not
        /// considered and Managed Databases with `ADVANCED` management option are listed.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedDatabases = Oci.DatabaseManagement.GetManagedDatabases.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DeploymentType = managedDatabaseDeploymentType,
        ///         ExternalExadataInfrastructureId = testExternalExadataInfrastructure.Id,
        ///         Id = managedDatabaseId,
        ///         ManagementOption = managedDatabaseManagementOption,
        ///         Name = managedDatabaseName,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetManagedDatabasesResult> Invoke(GetManagedDatabasesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedDatabasesResult>("oci:DatabaseManagement/getManagedDatabases:getManagedDatabases", args ?? new GetManagedDatabasesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagedDatabasesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return Managed Databases of the specified deployment type.
        /// </summary>
        [Input("deploymentType")]
        public string? DeploymentType { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
        /// </summary>
        [Input("externalExadataInfrastructureId")]
        public string? ExternalExadataInfrastructureId { get; set; }

        [Input("filters")]
        private List<Inputs.GetManagedDatabasesFilterArgs>? _filters;
        public List<Inputs.GetManagedDatabasesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetManagedDatabasesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The identifier of the resource.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// A filter to return Managed Databases with the specified management option.
        /// </summary>
        [Input("managementOption")]
        public string? ManagementOption { get; set; }

        /// <summary>
        /// A filter to return only resources that match the entire name.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        public GetManagedDatabasesArgs()
        {
        }
        public static new GetManagedDatabasesArgs Empty => new GetManagedDatabasesArgs();
    }

    public sealed class GetManagedDatabasesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return Managed Databases of the specified deployment type.
        /// </summary>
        [Input("deploymentType")]
        public Input<string>? DeploymentType { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
        /// </summary>
        [Input("externalExadataInfrastructureId")]
        public Input<string>? ExternalExadataInfrastructureId { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetManagedDatabasesFilterInputArgs>? _filters;
        public InputList<Inputs.GetManagedDatabasesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetManagedDatabasesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The identifier of the resource.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// A filter to return Managed Databases with the specified management option.
        /// </summary>
        [Input("managementOption")]
        public Input<string>? ManagementOption { get; set; }

        /// <summary>
        /// A filter to return only resources that match the entire name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetManagedDatabasesInvokeArgs()
        {
        }
        public static new GetManagedDatabasesInvokeArgs Empty => new GetManagedDatabasesInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagedDatabasesResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the Managed Database Group resides.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The infrastructure used to deploy the Oracle Database.
        /// </summary>
        public readonly string? DeploymentType;
        public readonly string? ExternalExadataInfrastructureId;
        public readonly ImmutableArray<Outputs.GetManagedDatabasesFilterResult> Filters;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database Group.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The list of managed_database_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetManagedDatabasesManagedDatabaseCollectionResult> ManagedDatabaseCollections;
        /// <summary>
        /// The management option used when enabling Database Management.
        /// </summary>
        public readonly string? ManagementOption;
        /// <summary>
        /// The name of the Managed Database.
        /// </summary>
        public readonly string? Name;

        [OutputConstructor]
        private GetManagedDatabasesResult(
            string compartmentId,

            string? deploymentType,

            string? externalExadataInfrastructureId,

            ImmutableArray<Outputs.GetManagedDatabasesFilterResult> filters,

            string? id,

            ImmutableArray<Outputs.GetManagedDatabasesManagedDatabaseCollectionResult> managedDatabaseCollections,

            string? managementOption,

            string? name)
        {
            CompartmentId = compartmentId;
            DeploymentType = deploymentType;
            ExternalExadataInfrastructureId = externalExadataInfrastructureId;
            Filters = filters;
            Id = id;
            ManagedDatabaseCollections = managedDatabaseCollections;
            ManagementOption = managementOption;
            Name = name;
        }
    }
}
