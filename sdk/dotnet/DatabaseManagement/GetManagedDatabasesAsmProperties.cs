// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DatabaseManagement
{
    public static class GetManagedDatabasesAsmProperties
    {
        /// <summary>
        /// This data source provides the list of Managed Databases Asm Properties in Oracle Cloud Infrastructure Database Management service.
        /// 
        /// Gets the list of ASM properties for the specified managedDatabaseId.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedDatabasesAsmProperties = Oci.DatabaseManagement.GetManagedDatabasesAsmProperties.Invoke(new()
        ///     {
        ///         ManagedDatabaseId = testManagedDatabase.Id,
        ///         Name = managedDatabasesAsmPropertyName,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetManagedDatabasesAsmPropertiesResult> InvokeAsync(GetManagedDatabasesAsmPropertiesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetManagedDatabasesAsmPropertiesResult>("oci:DatabaseManagement/getManagedDatabasesAsmProperties:getManagedDatabasesAsmProperties", args ?? new GetManagedDatabasesAsmPropertiesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Managed Databases Asm Properties in Oracle Cloud Infrastructure Database Management service.
        /// 
        /// Gets the list of ASM properties for the specified managedDatabaseId.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedDatabasesAsmProperties = Oci.DatabaseManagement.GetManagedDatabasesAsmProperties.Invoke(new()
        ///     {
        ///         ManagedDatabaseId = testManagedDatabase.Id,
        ///         Name = managedDatabasesAsmPropertyName,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetManagedDatabasesAsmPropertiesResult> Invoke(GetManagedDatabasesAsmPropertiesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedDatabasesAsmPropertiesResult>("oci:DatabaseManagement/getManagedDatabasesAsmProperties:getManagedDatabasesAsmProperties", args ?? new GetManagedDatabasesAsmPropertiesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagedDatabasesAsmPropertiesArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetManagedDatabasesAsmPropertiesFilterArgs>? _filters;
        public List<Inputs.GetManagedDatabasesAsmPropertiesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetManagedDatabasesAsmPropertiesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
        /// </summary>
        [Input("managedDatabaseId", required: true)]
        public string ManagedDatabaseId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire name.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        public GetManagedDatabasesAsmPropertiesArgs()
        {
        }
        public static new GetManagedDatabasesAsmPropertiesArgs Empty => new GetManagedDatabasesAsmPropertiesArgs();
    }

    public sealed class GetManagedDatabasesAsmPropertiesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetManagedDatabasesAsmPropertiesFilterInputArgs>? _filters;
        public InputList<Inputs.GetManagedDatabasesAsmPropertiesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetManagedDatabasesAsmPropertiesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
        /// </summary>
        [Input("managedDatabaseId", required: true)]
        public Input<string> ManagedDatabaseId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetManagedDatabasesAsmPropertiesInvokeArgs()
        {
        }
        public static new GetManagedDatabasesAsmPropertiesInvokeArgs Empty => new GetManagedDatabasesAsmPropertiesInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagedDatabasesAsmPropertiesResult
    {
        /// <summary>
        /// The list of asm_property_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetManagedDatabasesAsmPropertiesAsmPropertyCollectionResult> AsmPropertyCollections;
        public readonly ImmutableArray<Outputs.GetManagedDatabasesAsmPropertiesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string ManagedDatabaseId;
        public readonly string? Name;

        [OutputConstructor]
        private GetManagedDatabasesAsmPropertiesResult(
            ImmutableArray<Outputs.GetManagedDatabasesAsmPropertiesAsmPropertyCollectionResult> asmPropertyCollections,

            ImmutableArray<Outputs.GetManagedDatabasesAsmPropertiesFilterResult> filters,

            string id,

            string managedDatabaseId,

            string? name)
        {
            AsmPropertyCollections = asmPropertyCollections;
            Filters = filters;
            Id = id;
            ManagedDatabaseId = managedDatabaseId;
            Name = name;
        }
    }
}
