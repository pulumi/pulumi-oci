// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DatabaseManagement
{
    public static class GetManagedDatabasesUserSystemPrivileges
    {
        /// <summary>
        /// This data source provides the list of Managed Databases User System Privileges in Oracle Cloud Infrastructure Database Management service.
        /// 
        /// Gets the list of system privileges granted to a specific user.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedDatabasesUserSystemPrivileges = Oci.DatabaseManagement.GetManagedDatabasesUserSystemPrivileges.Invoke(new()
        ///     {
        ///         ManagedDatabaseId = oci_database_management_managed_database.Test_managed_database.Id,
        ///         UserName = oci_identity_user.Test_user.Name,
        ///         Name = @var.Managed_databases_user_system_privilege_name,
        ///         OpcNamedCredentialId = @var.Managed_databases_user_system_privilege_opc_named_credential_id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetManagedDatabasesUserSystemPrivilegesResult> InvokeAsync(GetManagedDatabasesUserSystemPrivilegesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetManagedDatabasesUserSystemPrivilegesResult>("oci:DatabaseManagement/getManagedDatabasesUserSystemPrivileges:getManagedDatabasesUserSystemPrivileges", args ?? new GetManagedDatabasesUserSystemPrivilegesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Managed Databases User System Privileges in Oracle Cloud Infrastructure Database Management service.
        /// 
        /// Gets the list of system privileges granted to a specific user.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedDatabasesUserSystemPrivileges = Oci.DatabaseManagement.GetManagedDatabasesUserSystemPrivileges.Invoke(new()
        ///     {
        ///         ManagedDatabaseId = oci_database_management_managed_database.Test_managed_database.Id,
        ///         UserName = oci_identity_user.Test_user.Name,
        ///         Name = @var.Managed_databases_user_system_privilege_name,
        ///         OpcNamedCredentialId = @var.Managed_databases_user_system_privilege_opc_named_credential_id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetManagedDatabasesUserSystemPrivilegesResult> Invoke(GetManagedDatabasesUserSystemPrivilegesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedDatabasesUserSystemPrivilegesResult>("oci:DatabaseManagement/getManagedDatabasesUserSystemPrivileges:getManagedDatabasesUserSystemPrivileges", args ?? new GetManagedDatabasesUserSystemPrivilegesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagedDatabasesUserSystemPrivilegesArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetManagedDatabasesUserSystemPrivilegesFilterArgs>? _filters;
        public List<Inputs.GetManagedDatabasesUserSystemPrivilegesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetManagedDatabasesUserSystemPrivilegesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
        /// </summary>
        [Input("managedDatabaseId", required: true)]
        public string ManagedDatabaseId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire name.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// The OCID of the Named Credential.
        /// </summary>
        [Input("opcNamedCredentialId")]
        public string? OpcNamedCredentialId { get; set; }

        /// <summary>
        /// The name of the user whose details are to be viewed.
        /// </summary>
        [Input("userName", required: true)]
        public string UserName { get; set; } = null!;

        public GetManagedDatabasesUserSystemPrivilegesArgs()
        {
        }
        public static new GetManagedDatabasesUserSystemPrivilegesArgs Empty => new GetManagedDatabasesUserSystemPrivilegesArgs();
    }

    public sealed class GetManagedDatabasesUserSystemPrivilegesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetManagedDatabasesUserSystemPrivilegesFilterInputArgs>? _filters;
        public InputList<Inputs.GetManagedDatabasesUserSystemPrivilegesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetManagedDatabasesUserSystemPrivilegesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
        /// </summary>
        [Input("managedDatabaseId", required: true)]
        public Input<string> ManagedDatabaseId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The OCID of the Named Credential.
        /// </summary>
        [Input("opcNamedCredentialId")]
        public Input<string>? OpcNamedCredentialId { get; set; }

        /// <summary>
        /// The name of the user whose details are to be viewed.
        /// </summary>
        [Input("userName", required: true)]
        public Input<string> UserName { get; set; } = null!;

        public GetManagedDatabasesUserSystemPrivilegesInvokeArgs()
        {
        }
        public static new GetManagedDatabasesUserSystemPrivilegesInvokeArgs Empty => new GetManagedDatabasesUserSystemPrivilegesInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagedDatabasesUserSystemPrivilegesResult
    {
        public readonly ImmutableArray<Outputs.GetManagedDatabasesUserSystemPrivilegesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string ManagedDatabaseId;
        /// <summary>
        /// The name of a system privilege.
        /// </summary>
        public readonly string? Name;
        public readonly string? OpcNamedCredentialId;
        /// <summary>
        /// The list of system_privilege_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetManagedDatabasesUserSystemPrivilegesSystemPrivilegeCollectionResult> SystemPrivilegeCollections;
        public readonly string UserName;

        [OutputConstructor]
        private GetManagedDatabasesUserSystemPrivilegesResult(
            ImmutableArray<Outputs.GetManagedDatabasesUserSystemPrivilegesFilterResult> filters,

            string id,

            string managedDatabaseId,

            string? name,

            string? opcNamedCredentialId,

            ImmutableArray<Outputs.GetManagedDatabasesUserSystemPrivilegesSystemPrivilegeCollectionResult> systemPrivilegeCollections,

            string userName)
        {
            Filters = filters;
            Id = id;
            ManagedDatabaseId = managedDatabaseId;
            Name = name;
            OpcNamedCredentialId = opcNamedCredentialId;
            SystemPrivilegeCollections = systemPrivilegeCollections;
            UserName = userName;
        }
    }
}
