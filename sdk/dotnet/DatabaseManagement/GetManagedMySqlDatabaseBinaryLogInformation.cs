// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DatabaseManagement
{
    public static class GetManagedMySqlDatabaseBinaryLogInformation
    {
        /// <summary>
        /// This data source provides details about a specific Managed My Sql Database Binary Log Information resource in Oracle Cloud Infrastructure Database Management service.
        /// 
        /// Retrieves information pertaining to binary log of a specific MySQL server.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedMySqlDatabaseBinaryLogInformation = Oci.DatabaseManagement.GetManagedMySqlDatabaseBinaryLogInformation.Invoke(new()
        ///     {
        ///         ManagedMySqlDatabaseId = testManagedMySqlDatabase.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetManagedMySqlDatabaseBinaryLogInformationResult> InvokeAsync(GetManagedMySqlDatabaseBinaryLogInformationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetManagedMySqlDatabaseBinaryLogInformationResult>("oci:DatabaseManagement/getManagedMySqlDatabaseBinaryLogInformation:getManagedMySqlDatabaseBinaryLogInformation", args ?? new GetManagedMySqlDatabaseBinaryLogInformationArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Managed My Sql Database Binary Log Information resource in Oracle Cloud Infrastructure Database Management service.
        /// 
        /// Retrieves information pertaining to binary log of a specific MySQL server.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedMySqlDatabaseBinaryLogInformation = Oci.DatabaseManagement.GetManagedMySqlDatabaseBinaryLogInformation.Invoke(new()
        ///     {
        ///         ManagedMySqlDatabaseId = testManagedMySqlDatabase.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetManagedMySqlDatabaseBinaryLogInformationResult> Invoke(GetManagedMySqlDatabaseBinaryLogInformationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedMySqlDatabaseBinaryLogInformationResult>("oci:DatabaseManagement/getManagedMySqlDatabaseBinaryLogInformation:getManagedMySqlDatabaseBinaryLogInformation", args ?? new GetManagedMySqlDatabaseBinaryLogInformationInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Managed My Sql Database Binary Log Information resource in Oracle Cloud Infrastructure Database Management service.
        /// 
        /// Retrieves information pertaining to binary log of a specific MySQL server.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedMySqlDatabaseBinaryLogInformation = Oci.DatabaseManagement.GetManagedMySqlDatabaseBinaryLogInformation.Invoke(new()
        ///     {
        ///         ManagedMySqlDatabaseId = testManagedMySqlDatabase.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetManagedMySqlDatabaseBinaryLogInformationResult> Invoke(GetManagedMySqlDatabaseBinaryLogInformationInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedMySqlDatabaseBinaryLogInformationResult>("oci:DatabaseManagement/getManagedMySqlDatabaseBinaryLogInformation:getManagedMySqlDatabaseBinaryLogInformation", args ?? new GetManagedMySqlDatabaseBinaryLogInformationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagedMySqlDatabaseBinaryLogInformationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the Managed MySQL Database.
        /// </summary>
        [Input("managedMySqlDatabaseId", required: true)]
        public string ManagedMySqlDatabaseId { get; set; } = null!;

        public GetManagedMySqlDatabaseBinaryLogInformationArgs()
        {
        }
        public static new GetManagedMySqlDatabaseBinaryLogInformationArgs Empty => new GetManagedMySqlDatabaseBinaryLogInformationArgs();
    }

    public sealed class GetManagedMySqlDatabaseBinaryLogInformationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the Managed MySQL Database.
        /// </summary>
        [Input("managedMySqlDatabaseId", required: true)]
        public Input<string> ManagedMySqlDatabaseId { get; set; } = null!;

        public GetManagedMySqlDatabaseBinaryLogInformationInvokeArgs()
        {
        }
        public static new GetManagedMySqlDatabaseBinaryLogInformationInvokeArgs Empty => new GetManagedMySqlDatabaseBinaryLogInformationInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagedMySqlDatabaseBinaryLogInformationResult
    {
        /// <summary>
        /// Indicates whether compression is enabled for transactions written to binary log files on this server.
        /// </summary>
        public readonly string BinaryLogCompression;
        /// <summary>
        /// The compression ratio for binary log expressed as a percentage.
        /// </summary>
        public readonly int BinaryLogCompressionPercent;
        /// <summary>
        /// The binary logging format used by this server.
        /// </summary>
        public readonly string BinaryLogFormat;
        /// <summary>
        /// The name of the binary log file.
        /// </summary>
        public readonly string BinaryLogName;
        /// <summary>
        /// The position within the binary log file.
        /// </summary>
        public readonly string BinaryLogPosition;
        /// <summary>
        /// Status of binary logging on this server.
        /// </summary>
        public readonly string BinaryLogging;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string ManagedMySqlDatabaseId;

        [OutputConstructor]
        private GetManagedMySqlDatabaseBinaryLogInformationResult(
            string binaryLogCompression,

            int binaryLogCompressionPercent,

            string binaryLogFormat,

            string binaryLogName,

            string binaryLogPosition,

            string binaryLogging,

            string id,

            string managedMySqlDatabaseId)
        {
            BinaryLogCompression = binaryLogCompression;
            BinaryLogCompressionPercent = binaryLogCompressionPercent;
            BinaryLogFormat = binaryLogFormat;
            BinaryLogName = binaryLogName;
            BinaryLogPosition = binaryLogPosition;
            BinaryLogging = binaryLogging;
            Id = id;
            ManagedMySqlDatabaseId = managedMySqlDatabaseId;
        }
    }
}
