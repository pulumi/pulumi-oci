// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DatabaseManagement
{
    public static class GetManagedMySqlDatabaseConfigurationData
    {
        /// <summary>
        /// This data source provides the list of Managed My Sql Database Configuration Data in Oracle Cloud Infrastructure Database Management service.
        /// 
        /// Retrieves Configuration Data for given MySQL Instance.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedMySqlDatabaseConfigurationData = Oci.DatabaseManagement.GetManagedMySqlDatabaseConfigurationData.Invoke(new()
        ///     {
        ///         ManagedMySqlDatabaseId = testManagedMySqlDatabase.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetManagedMySqlDatabaseConfigurationDataResult> InvokeAsync(GetManagedMySqlDatabaseConfigurationDataArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetManagedMySqlDatabaseConfigurationDataResult>("oci:DatabaseManagement/getManagedMySqlDatabaseConfigurationData:getManagedMySqlDatabaseConfigurationData", args ?? new GetManagedMySqlDatabaseConfigurationDataArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Managed My Sql Database Configuration Data in Oracle Cloud Infrastructure Database Management service.
        /// 
        /// Retrieves Configuration Data for given MySQL Instance.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedMySqlDatabaseConfigurationData = Oci.DatabaseManagement.GetManagedMySqlDatabaseConfigurationData.Invoke(new()
        ///     {
        ///         ManagedMySqlDatabaseId = testManagedMySqlDatabase.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetManagedMySqlDatabaseConfigurationDataResult> Invoke(GetManagedMySqlDatabaseConfigurationDataInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedMySqlDatabaseConfigurationDataResult>("oci:DatabaseManagement/getManagedMySqlDatabaseConfigurationData:getManagedMySqlDatabaseConfigurationData", args ?? new GetManagedMySqlDatabaseConfigurationDataInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagedMySqlDatabaseConfigurationDataArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetManagedMySqlDatabaseConfigurationDataFilterArgs>? _filters;
        public List<Inputs.GetManagedMySqlDatabaseConfigurationDataFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetManagedMySqlDatabaseConfigurationDataFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The OCID of ManagedMySqlDatabase.
        /// </summary>
        [Input("managedMySqlDatabaseId", required: true)]
        public string ManagedMySqlDatabaseId { get; set; } = null!;

        public GetManagedMySqlDatabaseConfigurationDataArgs()
        {
        }
        public static new GetManagedMySqlDatabaseConfigurationDataArgs Empty => new GetManagedMySqlDatabaseConfigurationDataArgs();
    }

    public sealed class GetManagedMySqlDatabaseConfigurationDataInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetManagedMySqlDatabaseConfigurationDataFilterInputArgs>? _filters;
        public InputList<Inputs.GetManagedMySqlDatabaseConfigurationDataFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetManagedMySqlDatabaseConfigurationDataFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The OCID of ManagedMySqlDatabase.
        /// </summary>
        [Input("managedMySqlDatabaseId", required: true)]
        public Input<string> ManagedMySqlDatabaseId { get; set; } = null!;

        public GetManagedMySqlDatabaseConfigurationDataInvokeArgs()
        {
        }
        public static new GetManagedMySqlDatabaseConfigurationDataInvokeArgs Empty => new GetManagedMySqlDatabaseConfigurationDataInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagedMySqlDatabaseConfigurationDataResult
    {
        public readonly ImmutableArray<Outputs.GetManagedMySqlDatabaseConfigurationDataFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string ManagedMySqlDatabaseId;
        /// <summary>
        /// The list of my_sql_configuration_data_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetManagedMySqlDatabaseConfigurationDataMySqlConfigurationDataCollectionResult> MySqlConfigurationDataCollections;

        [OutputConstructor]
        private GetManagedMySqlDatabaseConfigurationDataResult(
            ImmutableArray<Outputs.GetManagedMySqlDatabaseConfigurationDataFilterResult> filters,

            string id,

            string managedMySqlDatabaseId,

            ImmutableArray<Outputs.GetManagedMySqlDatabaseConfigurationDataMySqlConfigurationDataCollectionResult> mySqlConfigurationDataCollections)
        {
            Filters = filters;
            Id = id;
            ManagedMySqlDatabaseId = managedMySqlDatabaseId;
            MySqlConfigurationDataCollections = mySqlConfigurationDataCollections;
        }
    }
}
