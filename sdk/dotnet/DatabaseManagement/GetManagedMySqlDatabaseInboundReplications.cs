// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DatabaseManagement
{
    public static class GetManagedMySqlDatabaseInboundReplications
    {
        /// <summary>
        /// This data source provides the list of Managed My Sql Database Inbound Replications in Oracle Cloud Infrastructure Database Management service.
        /// 
        /// Retrieves information about the inbound replications of a specific MySQL server.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedMySqlDatabaseInboundReplications = Oci.DatabaseManagement.GetManagedMySqlDatabaseInboundReplications.Invoke(new()
        ///     {
        ///         ManagedMySqlDatabaseId = testManagedMySqlDatabase.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetManagedMySqlDatabaseInboundReplicationsResult> InvokeAsync(GetManagedMySqlDatabaseInboundReplicationsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetManagedMySqlDatabaseInboundReplicationsResult>("oci:DatabaseManagement/getManagedMySqlDatabaseInboundReplications:getManagedMySqlDatabaseInboundReplications", args ?? new GetManagedMySqlDatabaseInboundReplicationsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Managed My Sql Database Inbound Replications in Oracle Cloud Infrastructure Database Management service.
        /// 
        /// Retrieves information about the inbound replications of a specific MySQL server.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedMySqlDatabaseInboundReplications = Oci.DatabaseManagement.GetManagedMySqlDatabaseInboundReplications.Invoke(new()
        ///     {
        ///         ManagedMySqlDatabaseId = testManagedMySqlDatabase.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetManagedMySqlDatabaseInboundReplicationsResult> Invoke(GetManagedMySqlDatabaseInboundReplicationsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedMySqlDatabaseInboundReplicationsResult>("oci:DatabaseManagement/getManagedMySqlDatabaseInboundReplications:getManagedMySqlDatabaseInboundReplications", args ?? new GetManagedMySqlDatabaseInboundReplicationsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Managed My Sql Database Inbound Replications in Oracle Cloud Infrastructure Database Management service.
        /// 
        /// Retrieves information about the inbound replications of a specific MySQL server.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedMySqlDatabaseInboundReplications = Oci.DatabaseManagement.GetManagedMySqlDatabaseInboundReplications.Invoke(new()
        ///     {
        ///         ManagedMySqlDatabaseId = testManagedMySqlDatabase.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetManagedMySqlDatabaseInboundReplicationsResult> Invoke(GetManagedMySqlDatabaseInboundReplicationsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedMySqlDatabaseInboundReplicationsResult>("oci:DatabaseManagement/getManagedMySqlDatabaseInboundReplications:getManagedMySqlDatabaseInboundReplications", args ?? new GetManagedMySqlDatabaseInboundReplicationsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagedMySqlDatabaseInboundReplicationsArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetManagedMySqlDatabaseInboundReplicationsFilterArgs>? _filters;
        public List<Inputs.GetManagedMySqlDatabaseInboundReplicationsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetManagedMySqlDatabaseInboundReplicationsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The OCID of the Managed MySQL Database.
        /// </summary>
        [Input("managedMySqlDatabaseId", required: true)]
        public string ManagedMySqlDatabaseId { get; set; } = null!;

        public GetManagedMySqlDatabaseInboundReplicationsArgs()
        {
        }
        public static new GetManagedMySqlDatabaseInboundReplicationsArgs Empty => new GetManagedMySqlDatabaseInboundReplicationsArgs();
    }

    public sealed class GetManagedMySqlDatabaseInboundReplicationsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetManagedMySqlDatabaseInboundReplicationsFilterInputArgs>? _filters;
        public InputList<Inputs.GetManagedMySqlDatabaseInboundReplicationsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetManagedMySqlDatabaseInboundReplicationsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The OCID of the Managed MySQL Database.
        /// </summary>
        [Input("managedMySqlDatabaseId", required: true)]
        public Input<string> ManagedMySqlDatabaseId { get; set; } = null!;

        public GetManagedMySqlDatabaseInboundReplicationsInvokeArgs()
        {
        }
        public static new GetManagedMySqlDatabaseInboundReplicationsInvokeArgs Empty => new GetManagedMySqlDatabaseInboundReplicationsInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagedMySqlDatabaseInboundReplicationsResult
    {
        public readonly ImmutableArray<Outputs.GetManagedMySqlDatabaseInboundReplicationsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string ManagedMySqlDatabaseId;
        /// <summary>
        /// The list of managed_my_sql_database_inbound_replication_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetManagedMySqlDatabaseInboundReplicationsManagedMySqlDatabaseInboundReplicationCollectionResult> ManagedMySqlDatabaseInboundReplicationCollections;

        [OutputConstructor]
        private GetManagedMySqlDatabaseInboundReplicationsResult(
            ImmutableArray<Outputs.GetManagedMySqlDatabaseInboundReplicationsFilterResult> filters,

            string id,

            string managedMySqlDatabaseId,

            ImmutableArray<Outputs.GetManagedMySqlDatabaseInboundReplicationsManagedMySqlDatabaseInboundReplicationCollectionResult> managedMySqlDatabaseInboundReplicationCollections)
        {
            Filters = filters;
            Id = id;
            ManagedMySqlDatabaseId = managedMySqlDatabaseId;
            ManagedMySqlDatabaseInboundReplicationCollections = managedMySqlDatabaseInboundReplicationCollections;
        }
    }
}
