// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DatabaseManagement
{
    public static class GetManagedMySqlDatabaseSqlData
    {
        /// <summary>
        /// This data source provides the list of Managed My Sql Database Sql Data in Oracle Cloud Infrastructure Database Management service.
        /// 
        /// Retrieves SQL performance data for given MySQL Instance.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedMySqlDatabaseSqlData = Oci.DatabaseManagement.GetManagedMySqlDatabaseSqlData.Invoke(new()
        ///     {
        ///         EndTime = managedMySqlDatabaseSqlDataEndTime,
        ///         ManagedMySqlDatabaseId = testManagedMySqlDatabase.Id,
        ///         StartTime = managedMySqlDatabaseSqlDataStartTime,
        ///         FilterColumn = managedMySqlDatabaseSqlDataFilterColumn,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetManagedMySqlDatabaseSqlDataResult> InvokeAsync(GetManagedMySqlDatabaseSqlDataArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetManagedMySqlDatabaseSqlDataResult>("oci:DatabaseManagement/getManagedMySqlDatabaseSqlData:getManagedMySqlDatabaseSqlData", args ?? new GetManagedMySqlDatabaseSqlDataArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Managed My Sql Database Sql Data in Oracle Cloud Infrastructure Database Management service.
        /// 
        /// Retrieves SQL performance data for given MySQL Instance.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedMySqlDatabaseSqlData = Oci.DatabaseManagement.GetManagedMySqlDatabaseSqlData.Invoke(new()
        ///     {
        ///         EndTime = managedMySqlDatabaseSqlDataEndTime,
        ///         ManagedMySqlDatabaseId = testManagedMySqlDatabase.Id,
        ///         StartTime = managedMySqlDatabaseSqlDataStartTime,
        ///         FilterColumn = managedMySqlDatabaseSqlDataFilterColumn,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetManagedMySqlDatabaseSqlDataResult> Invoke(GetManagedMySqlDatabaseSqlDataInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedMySqlDatabaseSqlDataResult>("oci:DatabaseManagement/getManagedMySqlDatabaseSqlData:getManagedMySqlDatabaseSqlData", args ?? new GetManagedMySqlDatabaseSqlDataInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Managed My Sql Database Sql Data in Oracle Cloud Infrastructure Database Management service.
        /// 
        /// Retrieves SQL performance data for given MySQL Instance.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedMySqlDatabaseSqlData = Oci.DatabaseManagement.GetManagedMySqlDatabaseSqlData.Invoke(new()
        ///     {
        ///         EndTime = managedMySqlDatabaseSqlDataEndTime,
        ///         ManagedMySqlDatabaseId = testManagedMySqlDatabase.Id,
        ///         StartTime = managedMySqlDatabaseSqlDataStartTime,
        ///         FilterColumn = managedMySqlDatabaseSqlDataFilterColumn,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetManagedMySqlDatabaseSqlDataResult> Invoke(GetManagedMySqlDatabaseSqlDataInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedMySqlDatabaseSqlDataResult>("oci:DatabaseManagement/getManagedMySqlDatabaseSqlData:getManagedMySqlDatabaseSqlData", args ?? new GetManagedMySqlDatabaseSqlDataInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagedMySqlDatabaseSqlDataArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The end time of the time range to retrieve the health metrics of a Managed Database in UTC in ISO-8601 format, which is "yyyy-MM-dd'T'hh:mm:ss.sss'Z'".
        /// </summary>
        [Input("endTime", required: true)]
        public string EndTime { get; set; } = null!;

        /// <summary>
        /// The parameter to filter results by key criteria which include :
        /// * AVG_TIMER_WAIT
        /// * SUM_TIMER_WAIT
        /// * COUNT_STAR
        /// * SUM_ERRORS
        /// * SUM_ROWS_AFFECTED
        /// * SUM_ROWS_SENT
        /// * SUM_ROWS_EXAMINED
        /// * SUM_CREATED_TMP_TABLES
        /// * SUM_NO_INDEX_USED
        /// * SUM_NO_GOOD_INDEX_USED
        /// * FIRST_SEEN
        /// * LAST_SEEN
        /// * HEATWAVE_OFFLOADED
        /// * HEATWAVE_OUT_OF_MEMORY
        /// </summary>
        [Input("filterColumn")]
        public string? FilterColumn { get; set; }

        [Input("filters")]
        private List<Inputs.GetManagedMySqlDatabaseSqlDataFilterArgs>? _filters;
        public List<Inputs.GetManagedMySqlDatabaseSqlDataFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetManagedMySqlDatabaseSqlDataFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The OCID of the Managed MySQL Database.
        /// </summary>
        [Input("managedMySqlDatabaseId", required: true)]
        public string ManagedMySqlDatabaseId { get; set; } = null!;

        /// <summary>
        /// The start time of the time range to retrieve the health metrics of a Managed Database in UTC in ISO-8601 format, which is "yyyy-MM-dd'T'hh:mm:ss.sss'Z'".
        /// </summary>
        [Input("startTime", required: true)]
        public string StartTime { get; set; } = null!;

        public GetManagedMySqlDatabaseSqlDataArgs()
        {
        }
        public static new GetManagedMySqlDatabaseSqlDataArgs Empty => new GetManagedMySqlDatabaseSqlDataArgs();
    }

    public sealed class GetManagedMySqlDatabaseSqlDataInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The end time of the time range to retrieve the health metrics of a Managed Database in UTC in ISO-8601 format, which is "yyyy-MM-dd'T'hh:mm:ss.sss'Z'".
        /// </summary>
        [Input("endTime", required: true)]
        public Input<string> EndTime { get; set; } = null!;

        /// <summary>
        /// The parameter to filter results by key criteria which include :
        /// * AVG_TIMER_WAIT
        /// * SUM_TIMER_WAIT
        /// * COUNT_STAR
        /// * SUM_ERRORS
        /// * SUM_ROWS_AFFECTED
        /// * SUM_ROWS_SENT
        /// * SUM_ROWS_EXAMINED
        /// * SUM_CREATED_TMP_TABLES
        /// * SUM_NO_INDEX_USED
        /// * SUM_NO_GOOD_INDEX_USED
        /// * FIRST_SEEN
        /// * LAST_SEEN
        /// * HEATWAVE_OFFLOADED
        /// * HEATWAVE_OUT_OF_MEMORY
        /// </summary>
        [Input("filterColumn")]
        public Input<string>? FilterColumn { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetManagedMySqlDatabaseSqlDataFilterInputArgs>? _filters;
        public InputList<Inputs.GetManagedMySqlDatabaseSqlDataFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetManagedMySqlDatabaseSqlDataFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The OCID of the Managed MySQL Database.
        /// </summary>
        [Input("managedMySqlDatabaseId", required: true)]
        public Input<string> ManagedMySqlDatabaseId { get; set; } = null!;

        /// <summary>
        /// The start time of the time range to retrieve the health metrics of a Managed Database in UTC in ISO-8601 format, which is "yyyy-MM-dd'T'hh:mm:ss.sss'Z'".
        /// </summary>
        [Input("startTime", required: true)]
        public Input<string> StartTime { get; set; } = null!;

        public GetManagedMySqlDatabaseSqlDataInvokeArgs()
        {
        }
        public static new GetManagedMySqlDatabaseSqlDataInvokeArgs Empty => new GetManagedMySqlDatabaseSqlDataInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagedMySqlDatabaseSqlDataResult
    {
        public readonly string EndTime;
        public readonly string? FilterColumn;
        public readonly ImmutableArray<Outputs.GetManagedMySqlDatabaseSqlDataFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string ManagedMySqlDatabaseId;
        /// <summary>
        /// The list of my_sql_data_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetManagedMySqlDatabaseSqlDataMySqlDataCollectionResult> MySqlDataCollections;
        public readonly string StartTime;

        [OutputConstructor]
        private GetManagedMySqlDatabaseSqlDataResult(
            string endTime,

            string? filterColumn,

            ImmutableArray<Outputs.GetManagedMySqlDatabaseSqlDataFilterResult> filters,

            string id,

            string managedMySqlDatabaseId,

            ImmutableArray<Outputs.GetManagedMySqlDatabaseSqlDataMySqlDataCollectionResult> mySqlDataCollections,

            string startTime)
        {
            EndTime = endTime;
            FilterColumn = filterColumn;
            Filters = filters;
            Id = id;
            ManagedMySqlDatabaseId = managedMySqlDatabaseId;
            MySqlDataCollections = mySqlDataCollections;
            StartTime = startTime;
        }
    }
}
