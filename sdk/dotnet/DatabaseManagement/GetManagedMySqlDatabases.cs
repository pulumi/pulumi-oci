// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DatabaseManagement
{
    public static class GetManagedMySqlDatabases
    {
        /// <summary>
        /// This data source provides the list of Managed My Sql Databases in Oracle Cloud Infrastructure Database Management service.
        /// 
        /// Gets the list of Managed MySQL Databases in a specific compartment.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedMySqlDatabases = Oci.DatabaseManagement.GetManagedMySqlDatabases.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetManagedMySqlDatabasesResult> InvokeAsync(GetManagedMySqlDatabasesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetManagedMySqlDatabasesResult>("oci:DatabaseManagement/getManagedMySqlDatabases:getManagedMySqlDatabases", args ?? new GetManagedMySqlDatabasesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Managed My Sql Databases in Oracle Cloud Infrastructure Database Management service.
        /// 
        /// Gets the list of Managed MySQL Databases in a specific compartment.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedMySqlDatabases = Oci.DatabaseManagement.GetManagedMySqlDatabases.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetManagedMySqlDatabasesResult> Invoke(GetManagedMySqlDatabasesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedMySqlDatabasesResult>("oci:DatabaseManagement/getManagedMySqlDatabases:getManagedMySqlDatabases", args ?? new GetManagedMySqlDatabasesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagedMySqlDatabasesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetManagedMySqlDatabasesFilterArgs>? _filters;
        public List<Inputs.GetManagedMySqlDatabasesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetManagedMySqlDatabasesFilterArgs>());
            set => _filters = value;
        }

        public GetManagedMySqlDatabasesArgs()
        {
        }
        public static new GetManagedMySqlDatabasesArgs Empty => new GetManagedMySqlDatabasesArgs();
    }

    public sealed class GetManagedMySqlDatabasesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetManagedMySqlDatabasesFilterInputArgs>? _filters;
        public InputList<Inputs.GetManagedMySqlDatabasesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetManagedMySqlDatabasesFilterInputArgs>());
            set => _filters = value;
        }

        public GetManagedMySqlDatabasesInvokeArgs()
        {
        }
        public static new GetManagedMySqlDatabasesInvokeArgs Empty => new GetManagedMySqlDatabasesInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagedMySqlDatabasesResult
    {
        /// <summary>
        /// The OCID of the compartment.
        /// </summary>
        public readonly string CompartmentId;
        public readonly ImmutableArray<Outputs.GetManagedMySqlDatabasesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The list of managed_my_sql_database_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetManagedMySqlDatabasesManagedMySqlDatabaseCollectionResult> ManagedMySqlDatabaseCollections;

        [OutputConstructor]
        private GetManagedMySqlDatabasesResult(
            string compartmentId,

            ImmutableArray<Outputs.GetManagedMySqlDatabasesFilterResult> filters,

            string? id,

            ImmutableArray<Outputs.GetManagedMySqlDatabasesManagedMySqlDatabaseCollectionResult> managedMySqlDatabaseCollections)
        {
            CompartmentId = compartmentId;
            Filters = filters;
            Id = id;
            ManagedMySqlDatabaseCollections = managedMySqlDatabaseCollections;
        }
    }
}
