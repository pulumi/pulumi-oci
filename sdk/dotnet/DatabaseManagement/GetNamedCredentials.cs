// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DatabaseManagement
{
    public static class GetNamedCredentials
    {
        /// <summary>
        /// This data source provides the list of Named Credentials in Oracle Cloud Infrastructure Database Management service.
        /// 
        /// Gets a single named credential specified by the name or all the named credentials in a specific compartment.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testNamedCredentials = Oci.DatabaseManagement.GetNamedCredentials.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         AssociatedResource = @var.Named_credential_associated_resource,
        ///         Name = @var.Named_credential_name,
        ///         Scope = @var.Named_credential_scope,
        ///         Type = @var.Named_credential_type,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetNamedCredentialsResult> InvokeAsync(GetNamedCredentialsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNamedCredentialsResult>("oci:DatabaseManagement/getNamedCredentials:getNamedCredentials", args ?? new GetNamedCredentialsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Named Credentials in Oracle Cloud Infrastructure Database Management service.
        /// 
        /// Gets a single named credential specified by the name or all the named credentials in a specific compartment.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testNamedCredentials = Oci.DatabaseManagement.GetNamedCredentials.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         AssociatedResource = @var.Named_credential_associated_resource,
        ///         Name = @var.Named_credential_name,
        ///         Scope = @var.Named_credential_scope,
        ///         Type = @var.Named_credential_type,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNamedCredentialsResult> Invoke(GetNamedCredentialsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNamedCredentialsResult>("oci:DatabaseManagement/getNamedCredentials:getNamedCredentials", args ?? new GetNamedCredentialsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNamedCredentialsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The resource associated to the named credential.
        /// </summary>
        [Input("associatedResource")]
        public string? AssociatedResource { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetNamedCredentialsFilterArgs>? _filters;
        public List<Inputs.GetNamedCredentialsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetNamedCredentialsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The name of the named credential.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// The scope of named credential.
        /// </summary>
        [Input("scope")]
        public string? Scope { get; set; }

        /// <summary>
        /// The type of database that is associated to the named credential.
        /// </summary>
        [Input("type")]
        public string? Type { get; set; }

        public GetNamedCredentialsArgs()
        {
        }
        public static new GetNamedCredentialsArgs Empty => new GetNamedCredentialsArgs();
    }

    public sealed class GetNamedCredentialsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The resource associated to the named credential.
        /// </summary>
        [Input("associatedResource")]
        public Input<string>? AssociatedResource { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetNamedCredentialsFilterInputArgs>? _filters;
        public InputList<Inputs.GetNamedCredentialsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetNamedCredentialsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The name of the named credential.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The scope of named credential.
        /// </summary>
        [Input("scope")]
        public Input<string>? Scope { get; set; }

        /// <summary>
        /// The type of database that is associated to the named credential.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public GetNamedCredentialsInvokeArgs()
        {
        }
        public static new GetNamedCredentialsInvokeArgs Empty => new GetNamedCredentialsInvokeArgs();
    }


    [OutputType]
    public sealed class GetNamedCredentialsResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource that  is associated to the named credential.
        /// </summary>
        public readonly string? AssociatedResource;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        public readonly string CompartmentId;
        public readonly ImmutableArray<Outputs.GetNamedCredentialsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the named credential.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The list of named_credential_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNamedCredentialsNamedCredentialCollectionResult> NamedCredentialCollections;
        /// <summary>
        /// The scope of the named credential.
        /// </summary>
        public readonly string? Scope;
        /// <summary>
        /// The type of resource associated with the named credential.
        /// </summary>
        public readonly string? Type;

        [OutputConstructor]
        private GetNamedCredentialsResult(
            string? associatedResource,

            string compartmentId,

            ImmutableArray<Outputs.GetNamedCredentialsFilterResult> filters,

            string id,

            string? name,

            ImmutableArray<Outputs.GetNamedCredentialsNamedCredentialCollectionResult> namedCredentialCollections,

            string? scope,

            string? type)
        {
            AssociatedResource = associatedResource;
            CompartmentId = compartmentId;
            Filters = filters;
            Id = id;
            Name = name;
            NamedCredentialCollections = namedCredentialCollections;
            Scope = scope;
            Type = type;
        }
    }
}
