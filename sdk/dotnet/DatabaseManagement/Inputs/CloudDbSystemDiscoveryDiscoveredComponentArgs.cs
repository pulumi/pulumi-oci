// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DatabaseManagement.Inputs
{

    public sealed class CloudDbSystemDiscoveryDiscoveredComponentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Automatic Diagnostic Repository (ADR) home directory for the DB instance.
        /// </summary>
        [Input("adrHomeDirectory")]
        public Input<string>? AdrHomeDirectory { get; set; }

        [Input("asmInstances")]
        private InputList<Inputs.CloudDbSystemDiscoveryDiscoveredComponentAsmInstanceArgs>? _asmInstances;

        /// <summary>
        /// The list of asm instances for the cloud Asm.
        /// </summary>
        public InputList<Inputs.CloudDbSystemDiscoveryDiscoveredComponentAsmInstanceArgs> AsmInstances
        {
            get => _asmInstances ?? (_asmInstances = new InputList<Inputs.CloudDbSystemDiscoveryDiscoveredComponentAsmInstanceArgs>());
            set => _asmInstances = value;
        }

        [Input("associatedComponents")]
        private InputList<Inputs.CloudDbSystemDiscoveryDiscoveredComponentAssociatedComponentArgs>? _associatedComponents;

        /// <summary>
        /// The list of associated components.
        /// </summary>
        public InputList<Inputs.CloudDbSystemDiscoveryDiscoveredComponentAssociatedComponentArgs> AssociatedComponents
        {
            get => _associatedComponents ?? (_associatedComponents = new InputList<Inputs.CloudDbSystemDiscoveryDiscoveredComponentAssociatedComponentArgs>());
            set => _associatedComponents = value;
        }

        /// <summary>
        /// Indicates whether Diagnostics &amp; Management should be enabled for all the current pluggable databases in the container database.
        /// </summary>
        [Input("canEnableAllCurrentPdbs")]
        public Input<bool>? CanEnableAllCurrentPdbs { get; set; }

        /// <summary>
        /// The unique identifier of the Oracle cluster.
        /// </summary>
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        [Input("clusterInstances")]
        private InputList<Inputs.CloudDbSystemDiscoveryDiscoveredComponentClusterInstanceArgs>? _clusterInstances;

        /// <summary>
        /// The list of cluster instances for the cloud cluster.
        /// </summary>
        public InputList<Inputs.CloudDbSystemDiscoveryDiscoveredComponentClusterInstanceArgs> ClusterInstances
        {
            get => _clusterInstances ?? (_clusterInstances = new InputList<Inputs.CloudDbSystemDiscoveryDiscoveredComponentClusterInstanceArgs>());
            set => _clusterInstances = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the cloud DB system resides.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// The identifier of the discovered DB system component.
        /// </summary>
        [Input("componentId")]
        public Input<string>? ComponentId { get; set; }

        /// <summary>
        /// The name of the discovered DB system component.
        /// </summary>
        [Input("componentName")]
        public Input<string>? ComponentName { get; set; }

        /// <summary>
        /// The component type.
        /// </summary>
        [Input("componentType")]
        public Input<string>? ComponentType { get; set; }

        [Input("connectors")]
        private InputList<Inputs.CloudDbSystemDiscoveryDiscoveredComponentConnectorArgs>? _connectors;

        /// <summary>
        /// The connector details used to connect to the cloud DB system component.
        /// </summary>
        public InputList<Inputs.CloudDbSystemDiscoveryDiscoveredComponentConnectorArgs> Connectors
        {
            get => _connectors ?? (_connectors = new InputList<Inputs.CloudDbSystemDiscoveryDiscoveredComponentConnectorArgs>());
            set => _connectors = value;
        }

        /// <summary>
        /// The unique identifier of the parent Container Database (CDB).
        /// </summary>
        [Input("containerDatabaseId")]
        public Input<string>? ContainerDatabaseId { get; set; }

        /// <summary>
        /// The number of CPU cores available on the DB node.
        /// </summary>
        [Input("cpuCoreCount")]
        public Input<double>? CpuCoreCount { get; set; }

        /// <summary>
        /// The Oracle base location of Cluster Ready Services (CRS).
        /// </summary>
        [Input("crsBaseDirectory")]
        public Input<string>? CrsBaseDirectory { get; set; }

        /// <summary>
        /// The Oracle Database edition.
        /// </summary>
        [Input("dbEdition")]
        public Input<string>? DbEdition { get; set; }

        /// <summary>
        /// The Oracle Database ID.
        /// </summary>
        [Input("dbId")]
        public Input<string>? DbId { get; set; }

        [Input("dbInstances")]
        private InputList<Inputs.CloudDbSystemDiscoveryDiscoveredComponentDbInstanceArgs>? _dbInstances;

        /// <summary>
        /// The list of database instances.
        /// </summary>
        public InputList<Inputs.CloudDbSystemDiscoveryDiscoveredComponentDbInstanceArgs> DbInstances
        {
            get => _dbInstances ?? (_dbInstances = new InputList<Inputs.CloudDbSystemDiscoveryDiscoveredComponentDbInstanceArgs>());
            set => _dbInstances = value;
        }

        /// <summary>
        /// The name of the DB node.
        /// </summary>
        [Input("dbNodeName")]
        public Input<string>? DbNodeName { get; set; }

        /// <summary>
        /// The database packs licensed for the cloud Oracle Database.
        /// </summary>
        [Input("dbPacks")]
        public Input<string>? DbPacks { get; set; }

        /// <summary>
        /// The role of the Oracle Database in Oracle Data Guard configuration.
        /// </summary>
        [Input("dbRole")]
        public Input<string>? DbRole { get; set; }

        /// <summary>
        /// The type of Oracle Database. Indicates whether the database is a Container Database, Pluggable Database, or a Non-container Database.
        /// </summary>
        [Input("dbType")]
        public Input<string>? DbType { get; set; }

        /// <summary>
        /// The `DB_UNIQUE_NAME` of the cloud database.
        /// </summary>
        [Input("dbUniqueName")]
        public Input<string>? DbUniqueName { get; set; }

        /// <summary>
        /// The Oracle Database version.
        /// </summary>
        [Input("dbVersion")]
        public Input<string>? DbVersion { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the existing Dbaas Oracle Cloud Infrastructure resource matching the discovered DB system component.
        /// </summary>
        [Input("dbaasId")]
        public Input<string>? DbaasId { get; set; }

        /// <summary>
        /// (Updatable) The user-friendly name for the DB system. The name does not have to be unique.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("endpoints")]
        private InputList<Inputs.CloudDbSystemDiscoveryDiscoveredComponentEndpointArgs>? _endpoints;

        /// <summary>
        /// The list of protocol addresses the listener is configured to listen on.
        /// </summary>
        public InputList<Inputs.CloudDbSystemDiscoveryDiscoveredComponentEndpointArgs> Endpoints
        {
            get => _endpoints ?? (_endpoints = new InputList<Inputs.CloudDbSystemDiscoveryDiscoveredComponentEndpointArgs>());
            set => _endpoints = value;
        }

        /// <summary>
        /// The directory in which Oracle Grid Infrastructure is installed.
        /// </summary>
        [Input("gridHome")]
        public Input<string>? GridHome { get; set; }

        /// <summary>
        /// The unique identifier of the PDB.
        /// </summary>
        [Input("guid")]
        public Input<string>? Guid { get; set; }

        /// <summary>
        /// The location of the DB home.
        /// </summary>
        [Input("homeDirectory")]
        public Input<string>? HomeDirectory { get; set; }

        /// <summary>
        /// The host name of the database or the SCAN name in case of a RAC database.
        /// </summary>
        [Input("hostName")]
        public Input<string>? HostName { get; set; }

        /// <summary>
        /// The name of the ASM instance.
        /// </summary>
        [Input("instanceName")]
        public Input<string>? InstanceName { get; set; }

        /// <summary>
        /// Indicates whether Diagnostics &amp; Management should be enabled automatically for all the pluggable databases in the container database.
        /// </summary>
        [Input("isAutoEnablePluggableDatabase")]
        public Input<bool>? IsAutoEnablePluggableDatabase { get; set; }

        /// <summary>
        /// Indicates whether the Oracle Database is part of a cluster.
        /// </summary>
        [Input("isCluster")]
        public Input<bool>? IsCluster { get; set; }

        /// <summary>
        /// Indicates whether the cluster is an Oracle Flex Cluster or not.
        /// </summary>
        [Input("isFlexCluster")]
        public Input<bool>? IsFlexCluster { get; set; }

        /// <summary>
        /// Indicates whether Oracle Flex ASM is enabled or not.
        /// </summary>
        [Input("isFlexEnabled")]
        public Input<bool>? IsFlexEnabled { get; set; }

        /// <summary>
        /// Indicates whether the DB system component should be provisioned as an Oracle Cloud Infrastructure resource or not.
        /// </summary>
        [Input("isSelectedForMonitoring")]
        public Input<bool>? IsSelectedForMonitoring { get; set; }

        /// <summary>
        /// The listener alias.
        /// </summary>
        [Input("listenerAlias")]
        public Input<string>? ListenerAlias { get; set; }

        /// <summary>
        /// The type of listener.
        /// </summary>
        [Input("listenerType")]
        public Input<string>? ListenerType { get; set; }

        /// <summary>
        /// The destination directory of the listener log file.
        /// </summary>
        [Input("logDirectory")]
        public Input<string>? LogDirectory { get; set; }

        /// <summary>
        /// The total memory in gigabytes (GB) on the DB node.
        /// </summary>
        [Input("memorySizeInGbs")]
        public Input<double>? MemorySizeInGbs { get; set; }

        [Input("networkConfigurations")]
        private InputList<Inputs.CloudDbSystemDiscoveryDiscoveredComponentNetworkConfigurationArgs>? _networkConfigurations;

        /// <summary>
        /// The list of network address configurations of the cloud cluster.
        /// </summary>
        public InputList<Inputs.CloudDbSystemDiscoveryDiscoveredComponentNetworkConfigurationArgs> NetworkConfigurations
        {
            get => _networkConfigurations ?? (_networkConfigurations = new InputList<Inputs.CloudDbSystemDiscoveryDiscoveredComponentNetworkConfigurationArgs>());
            set => _networkConfigurations = value;
        }

        /// <summary>
        /// The name of the node with the VIP.
        /// </summary>
        [Input("nodeName")]
        public Input<string>? NodeName { get; set; }

        /// <summary>
        /// The role of the cluster node.
        /// </summary>
        [Input("nodeRole")]
        public Input<string>? NodeRole { get; set; }

        /// <summary>
        /// The location of the Oracle Cluster Registry (OCR) file.
        /// </summary>
        [Input("ocrFileLocation")]
        public Input<string>? OcrFileLocation { get; set; }

        /// <summary>
        /// The Oracle home location of the DB instance.
        /// </summary>
        [Input("oracleHome")]
        public Input<string>? OracleHome { get; set; }

        [Input("pluggableDatabases")]
        private InputList<Inputs.CloudDbSystemDiscoveryDiscoveredComponentPluggableDatabaseArgs>? _pluggableDatabases;

        /// <summary>
        /// The list of Pluggable Databases.
        /// </summary>
        public InputList<Inputs.CloudDbSystemDiscoveryDiscoveredComponentPluggableDatabaseArgs> PluggableDatabases
        {
            get => _pluggableDatabases ?? (_pluggableDatabases = new InputList<Inputs.CloudDbSystemDiscoveryDiscoveredComponentPluggableDatabaseArgs>());
            set => _pluggableDatabases = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the existing Oracle Cloud Infrastructure resource matching the discovered DB system.
        /// </summary>
        [Input("resourceId")]
        public Input<string>? ResourceId { get; set; }

        [Input("scanConfigurations")]
        private InputList<Inputs.CloudDbSystemDiscoveryDiscoveredComponentScanConfigurationArgs>? _scanConfigurations;

        /// <summary>
        /// The list of Single Client Access Name (SCAN) configurations of the cloud cluster.
        /// </summary>
        public InputList<Inputs.CloudDbSystemDiscoveryDiscoveredComponentScanConfigurationArgs> ScanConfigurations
        {
            get => _scanConfigurations ?? (_scanConfigurations = new InputList<Inputs.CloudDbSystemDiscoveryDiscoveredComponentScanConfigurationArgs>());
            set => _scanConfigurations = value;
        }

        /// <summary>
        /// The state of the discovered DB system component.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The destination directory of the listener trace file.
        /// </summary>
        [Input("traceDirectory")]
        public Input<string>? TraceDirectory { get; set; }

        /// <summary>
        /// The version of Oracle Clusterware running in the cluster.
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        [Input("vipConfigurations")]
        private InputList<Inputs.CloudDbSystemDiscoveryDiscoveredComponentVipConfigurationArgs>? _vipConfigurations;

        /// <summary>
        /// The list of Virtual IP (VIP) configurations of the cloud cluster.
        /// </summary>
        public InputList<Inputs.CloudDbSystemDiscoveryDiscoveredComponentVipConfigurationArgs> VipConfigurations
        {
            get => _vipConfigurations ?? (_vipConfigurations = new InputList<Inputs.CloudDbSystemDiscoveryDiscoveredComponentVipConfigurationArgs>());
            set => _vipConfigurations = value;
        }

        public CloudDbSystemDiscoveryDiscoveredComponentArgs()
        {
        }
        public static new CloudDbSystemDiscoveryDiscoveredComponentArgs Empty => new CloudDbSystemDiscoveryDiscoveredComponentArgs();
    }
}
