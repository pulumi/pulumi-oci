// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DatabaseManagement.Inputs
{

    public sealed class ExternalExadataStorageGridStorageServerGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("additionalDetails")]
        private InputMap<object>? _additionalDetails;

        /// <summary>
        /// The additional details of the resource defined in `{"key": "value"}` format. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<object> AdditionalDetails
        {
            get => _additionalDetails ?? (_additionalDetails = new InputMap<object>());
            set => _additionalDetails = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the connector.
        /// </summary>
        [Input("connectorId")]
        public Input<string>? ConnectorId { get; set; }

        /// <summary>
        /// The CPU count of the Exadata storage server.
        /// </summary>
        [Input("cpuCount")]
        public Input<double>? CpuCount { get; set; }

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// The name of the Exadata resource. English letters, numbers, "-", "_" and "." only.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}` 
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata resource.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The internal ID of the Exadata resource.
        /// </summary>
        [Input("internalId")]
        public Input<string>? InternalId { get; set; }

        /// <summary>
        /// The IP address of the Exadata storage server.
        /// </summary>
        [Input("ipAddress")]
        public Input<string>? IpAddress { get; set; }

        /// <summary>
        /// The details of the lifecycle state of the Exadata resource.
        /// </summary>
        [Input("lifecycleDetails")]
        public Input<string>? LifecycleDetails { get; set; }

        /// <summary>
        /// The make model of the Exadata storage server.
        /// </summary>
        [Input("makeModel")]
        public Input<string>? MakeModel { get; set; }

        /// <summary>
        /// The maximum flash disk IO operations per second of the Exadata storage server.
        /// </summary>
        [Input("maxFlashDiskIops")]
        public Input<int>? MaxFlashDiskIops { get; set; }

        /// <summary>
        /// The maximum flash disk IO throughput in MB/s of the Exadata storage server.
        /// </summary>
        [Input("maxFlashDiskThroughput")]
        public Input<int>? MaxFlashDiskThroughput { get; set; }

        /// <summary>
        /// The maximum hard disk IO operations per second of the Exadata storage server.
        /// </summary>
        [Input("maxHardDiskIops")]
        public Input<int>? MaxHardDiskIops { get; set; }

        /// <summary>
        /// The maximum hard disk IO throughput in MB/s of the Exadata storage server.
        /// </summary>
        [Input("maxHardDiskThroughput")]
        public Input<int>? MaxHardDiskThroughput { get; set; }

        /// <summary>
        /// The Exadata storage server memory size in GB.
        /// </summary>
        [Input("memoryGb")]
        public Input<double>? MemoryGb { get; set; }

        /// <summary>
        /// The type of Exadata resource.
        /// </summary>
        [Input("resourceType")]
        public Input<string>? ResourceType { get; set; }

        /// <summary>
        /// The current lifecycle state of the database resource.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The status of the Exadata resource.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The timestamp of the creation of the Exadata resource.
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The timestamp of the last update of the Exadata resource.
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        /// <summary>
        /// The version of the Exadata resource.
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        public ExternalExadataStorageGridStorageServerGetArgs()
        {
        }
        public static new ExternalExadataStorageGridStorageServerGetArgs Empty => new ExternalExadataStorageGridStorageServerGetArgs();
    }
}
