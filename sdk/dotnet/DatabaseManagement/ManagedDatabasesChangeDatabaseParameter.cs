// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DatabaseManagement
{
    /// <summary>
    /// This resource provides the Managed Databases Change Database Parameter resource in Oracle Cloud Infrastructure Database Management service.
    /// 
    /// Changes database parameter values. There are two kinds of database
    /// parameters:
    /// 
    /// - Dynamic parameters: They can be changed for the current Oracle
    ///   Database instance. The changes take effect immediately.
    /// - Static parameters: They cannot be changed for the current instance.
    ///   You must change these parameters and then restart the database before
    ///   changes take effect.
    /// 
    /// **Note:** If the instance is started using a text initialization
    /// parameter file, the parameter changes are applicable only for the
    /// current instance. You must update them manually to be passed to
    /// a future instance.
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testManagedDatabasesChangeDatabaseParameter = new Oci.DatabaseManagement.ManagedDatabasesChangeDatabaseParameter("test_managed_databases_change_database_parameter", new()
    ///     {
    ///         ManagedDatabaseId = testManagedDatabase.Id,
    ///         Parameters = new[]
    ///         {
    ///             new Oci.DatabaseManagement.Inputs.ManagedDatabasesChangeDatabaseParameterParameterArgs
    ///             {
    ///                 Name = managedDatabasesChangeDatabaseParameterParametersName,
    ///                 Value = managedDatabasesChangeDatabaseParameterParametersValue,
    ///                 UpdateComment = managedDatabasesChangeDatabaseParameterParametersUpdateComment,
    ///             },
    ///         },
    ///         Scope = managedDatabasesChangeDatabaseParameterScope,
    ///         Credentials = new Oci.DatabaseManagement.Inputs.ManagedDatabasesChangeDatabaseParameterCredentialsArgs
    ///         {
    ///             Password = managedDatabasesChangeDatabaseParameterCredentialsPassword,
    ///             Role = managedDatabasesChangeDatabaseParameterCredentialsRole,
    ///             SecretId = testSecret.Id,
    ///             UserName = testUser.Name,
    ///         },
    ///         DatabaseCredential = new Oci.DatabaseManagement.Inputs.ManagedDatabasesChangeDatabaseParameterDatabaseCredentialArgs
    ///         {
    ///             CredentialType = managedDatabasesChangeDatabaseParameterDatabaseCredentialCredentialType,
    ///             NamedCredentialId = testNamedCredential.Id,
    ///             Password = managedDatabasesChangeDatabaseParameterDatabaseCredentialPassword,
    ///             PasswordSecretId = testSecret.Id,
    ///             Role = managedDatabasesChangeDatabaseParameterDatabaseCredentialRole,
    ///             Username = managedDatabasesChangeDatabaseParameterDatabaseCredentialUsername,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// Import is not supported for this resource.
    /// </summary>
    [OciResourceType("oci:DatabaseManagement/managedDatabasesChangeDatabaseParameter:ManagedDatabasesChangeDatabaseParameter")]
    public partial class ManagedDatabasesChangeDatabaseParameter : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The database credentials used to perform management activity. Provide one of the following attribute set. (userName, password, role) OR (userName, secretId, role) OR (namedCredentialId)
        /// </summary>
        [Output("credentials")]
        public Output<Outputs.ManagedDatabasesChangeDatabaseParameterCredentials> Credentials { get; private set; } = null!;

        /// <summary>
        /// The credential to connect to the database to perform tablespace administration tasks.
        /// </summary>
        [Output("databaseCredential")]
        public Output<Outputs.ManagedDatabasesChangeDatabaseParameterDatabaseCredential> DatabaseCredential { get; private set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
        /// </summary>
        [Output("managedDatabaseId")]
        public Output<string> ManagedDatabaseId { get; private set; } = null!;

        /// <summary>
        /// A list of database parameters and their values.
        /// </summary>
        [Output("parameters")]
        public Output<ImmutableArray<Outputs.ManagedDatabasesChangeDatabaseParameterParameter>> Parameters { get; private set; } = null!;

        /// <summary>
        /// The clause used to specify when the parameter change takes effect.
        /// 
        /// Use `MEMORY` to make the change in memory and affect it immediately. Use `SPFILE` to make the change in the server parameter file. The change takes effect when the database is next shut down and started up again. Use `BOTH` to make the change in memory and in the server parameter file. The change takes effect immediately and persists after the database is shut down and started up again.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("scope")]
        public Output<string> Scope { get; private set; } = null!;


        /// <summary>
        /// Create a ManagedDatabasesChangeDatabaseParameter resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ManagedDatabasesChangeDatabaseParameter(string name, ManagedDatabasesChangeDatabaseParameterArgs args, CustomResourceOptions? options = null)
            : base("oci:DatabaseManagement/managedDatabasesChangeDatabaseParameter:ManagedDatabasesChangeDatabaseParameter", name, args ?? new ManagedDatabasesChangeDatabaseParameterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ManagedDatabasesChangeDatabaseParameter(string name, Input<string> id, ManagedDatabasesChangeDatabaseParameterState? state = null, CustomResourceOptions? options = null)
            : base("oci:DatabaseManagement/managedDatabasesChangeDatabaseParameter:ManagedDatabasesChangeDatabaseParameter", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ManagedDatabasesChangeDatabaseParameter resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ManagedDatabasesChangeDatabaseParameter Get(string name, Input<string> id, ManagedDatabasesChangeDatabaseParameterState? state = null, CustomResourceOptions? options = null)
        {
            return new ManagedDatabasesChangeDatabaseParameter(name, id, state, options);
        }
    }

    public sealed class ManagedDatabasesChangeDatabaseParameterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The database credentials used to perform management activity. Provide one of the following attribute set. (userName, password, role) OR (userName, secretId, role) OR (namedCredentialId)
        /// </summary>
        [Input("credentials")]
        public Input<Inputs.ManagedDatabasesChangeDatabaseParameterCredentialsArgs>? Credentials { get; set; }

        /// <summary>
        /// The credential to connect to the database to perform tablespace administration tasks.
        /// </summary>
        [Input("databaseCredential")]
        public Input<Inputs.ManagedDatabasesChangeDatabaseParameterDatabaseCredentialArgs>? DatabaseCredential { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
        /// </summary>
        [Input("managedDatabaseId", required: true)]
        public Input<string> ManagedDatabaseId { get; set; } = null!;

        [Input("parameters", required: true)]
        private InputList<Inputs.ManagedDatabasesChangeDatabaseParameterParameterArgs>? _parameters;

        /// <summary>
        /// A list of database parameters and their values.
        /// </summary>
        public InputList<Inputs.ManagedDatabasesChangeDatabaseParameterParameterArgs> Parameters
        {
            get => _parameters ?? (_parameters = new InputList<Inputs.ManagedDatabasesChangeDatabaseParameterParameterArgs>());
            set => _parameters = value;
        }

        /// <summary>
        /// The clause used to specify when the parameter change takes effect.
        /// 
        /// Use `MEMORY` to make the change in memory and affect it immediately. Use `SPFILE` to make the change in the server parameter file. The change takes effect when the database is next shut down and started up again. Use `BOTH` to make the change in memory and in the server parameter file. The change takes effect immediately and persists after the database is shut down and started up again.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("scope", required: true)]
        public Input<string> Scope { get; set; } = null!;

        public ManagedDatabasesChangeDatabaseParameterArgs()
        {
        }
        public static new ManagedDatabasesChangeDatabaseParameterArgs Empty => new ManagedDatabasesChangeDatabaseParameterArgs();
    }

    public sealed class ManagedDatabasesChangeDatabaseParameterState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The database credentials used to perform management activity. Provide one of the following attribute set. (userName, password, role) OR (userName, secretId, role) OR (namedCredentialId)
        /// </summary>
        [Input("credentials")]
        public Input<Inputs.ManagedDatabasesChangeDatabaseParameterCredentialsGetArgs>? Credentials { get; set; }

        /// <summary>
        /// The credential to connect to the database to perform tablespace administration tasks.
        /// </summary>
        [Input("databaseCredential")]
        public Input<Inputs.ManagedDatabasesChangeDatabaseParameterDatabaseCredentialGetArgs>? DatabaseCredential { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
        /// </summary>
        [Input("managedDatabaseId")]
        public Input<string>? ManagedDatabaseId { get; set; }

        [Input("parameters")]
        private InputList<Inputs.ManagedDatabasesChangeDatabaseParameterParameterGetArgs>? _parameters;

        /// <summary>
        /// A list of database parameters and their values.
        /// </summary>
        public InputList<Inputs.ManagedDatabasesChangeDatabaseParameterParameterGetArgs> Parameters
        {
            get => _parameters ?? (_parameters = new InputList<Inputs.ManagedDatabasesChangeDatabaseParameterParameterGetArgs>());
            set => _parameters = value;
        }

        /// <summary>
        /// The clause used to specify when the parameter change takes effect.
        /// 
        /// Use `MEMORY` to make the change in memory and affect it immediately. Use `SPFILE` to make the change in the server parameter file. The change takes effect when the database is next shut down and started up again. Use `BOTH` to make the change in memory and in the server parameter file. The change takes effect immediately and persists after the database is shut down and started up again.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("scope")]
        public Input<string>? Scope { get; set; }

        public ManagedDatabasesChangeDatabaseParameterState()
        {
        }
        public static new ManagedDatabasesChangeDatabaseParameterState Empty => new ManagedDatabasesChangeDatabaseParameterState();
    }
}
