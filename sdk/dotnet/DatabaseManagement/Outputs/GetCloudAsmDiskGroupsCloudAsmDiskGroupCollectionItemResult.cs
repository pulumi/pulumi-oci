// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DatabaseManagement.Outputs
{

    [OutputType]
    public sealed class GetCloudAsmDiskGroupsCloudAsmDiskGroupCollectionItemResult
    {
        /// <summary>
        /// The unique names of the databases using the disk group.
        /// </summary>
        public readonly ImmutableArray<string> Databases;
        /// <summary>
        /// The number of ASM instances that have the disk group in dismounted state.
        /// </summary>
        public readonly int DismountingInstanceCount;
        /// <summary>
        /// Indicates whether the disk group is a sparse disk group or not.
        /// </summary>
        public readonly bool IsSparse;
        /// <summary>
        /// The number of ASM instances that have the disk group in mounted state.
        /// </summary>
        public readonly int MountingInstanceCount;
        /// <summary>
        /// The name of the ASM disk group.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The redundancy type of the disk group.
        /// </summary>
        public readonly string RedundancyType;
        /// <summary>
        /// The total capacity of the disk group (in megabytes).
        /// </summary>
        public readonly string TotalSizeInMbs;
        /// <summary>
        /// The percentage of used space in the disk group.
        /// </summary>
        public readonly double UsedPercent;
        /// <summary>
        /// The used capacity of the disk group (in megabytes).
        /// </summary>
        public readonly string UsedSizeInMbs;

        [OutputConstructor]
        private GetCloudAsmDiskGroupsCloudAsmDiskGroupCollectionItemResult(
            ImmutableArray<string> databases,

            int dismountingInstanceCount,

            bool isSparse,

            int mountingInstanceCount,

            string name,

            string redundancyType,

            string totalSizeInMbs,

            double usedPercent,

            string usedSizeInMbs)
        {
            Databases = databases;
            DismountingInstanceCount = dismountingInstanceCount;
            IsSparse = isSparse;
            MountingInstanceCount = mountingInstanceCount;
            Name = name;
            RedundancyType = redundancyType;
            TotalSizeInMbs = totalSizeInMbs;
            UsedPercent = usedPercent;
            UsedSizeInMbs = usedSizeInMbs;
        }
    }
}
