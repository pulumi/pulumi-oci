// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DatabaseManagement.Outputs
{

    [OutputType]
    public sealed class GetExternalExadataInfrastructuresExternalExadataInfrastructureCollectionItemResult
    {
        /// <summary>
        /// The additional details of the resource defined in `{"key": "value"}` format. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> AdditionalDetails;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The list of [OCIDs] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartments.
        /// </summary>
        public readonly ImmutableArray<string> DatabaseCompartments;
        /// <summary>
        /// A list of DB systems.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetExternalExadataInfrastructuresExternalExadataInfrastructureCollectionItemDatabaseSystemResult> DatabaseSystems;
        public readonly ImmutableArray<string> DbSystemIds;
        public readonly string DiscoveryKey;
        /// <summary>
        /// The optional single value query filter parameter on the entity display name.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The internal ID of the Exadata resource.
        /// </summary>
        public readonly string InternalId;
        /// <summary>
        /// The Oracle license model that applies to the database management resources.
        /// </summary>
        public readonly string LicenseModel;
        /// <summary>
        /// The details of the lifecycle state of the Exadata resource.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// The rack size of the Exadata infrastructure.
        /// </summary>
        public readonly string RackSize;
        /// <summary>
        /// The current lifecycle state of the database resource.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The status of the Exadata resource.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The Exadata storage server grid of the Exadata infrastructure.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetExternalExadataInfrastructuresExternalExadataInfrastructureCollectionItemStorageGridResult> StorageGrids;
        public readonly ImmutableArray<string> StorageServerNames;
        /// <summary>
        /// The timestamp of the creation of the Exadata resource.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The timestamp of the last update of the Exadata resource.
        /// </summary>
        public readonly string TimeUpdated;
        /// <summary>
        /// The version of the Exadata resource.
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private GetExternalExadataInfrastructuresExternalExadataInfrastructureCollectionItemResult(
            ImmutableDictionary<string, object> additionalDetails,

            string compartmentId,

            ImmutableArray<string> databaseCompartments,

            ImmutableArray<Outputs.GetExternalExadataInfrastructuresExternalExadataInfrastructureCollectionItemDatabaseSystemResult> databaseSystems,

            ImmutableArray<string> dbSystemIds,

            string discoveryKey,

            string displayName,

            string id,

            string internalId,

            string licenseModel,

            string lifecycleDetails,

            string rackSize,

            string state,

            string status,

            ImmutableArray<Outputs.GetExternalExadataInfrastructuresExternalExadataInfrastructureCollectionItemStorageGridResult> storageGrids,

            ImmutableArray<string> storageServerNames,

            string timeCreated,

            string timeUpdated,

            string version)
        {
            AdditionalDetails = additionalDetails;
            CompartmentId = compartmentId;
            DatabaseCompartments = databaseCompartments;
            DatabaseSystems = databaseSystems;
            DbSystemIds = dbSystemIds;
            DiscoveryKey = discoveryKey;
            DisplayName = displayName;
            Id = id;
            InternalId = internalId;
            LicenseModel = licenseModel;
            LifecycleDetails = lifecycleDetails;
            RackSize = rackSize;
            State = state;
            Status = status;
            StorageGrids = storageGrids;
            StorageServerNames = storageServerNames;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            Version = version;
        }
    }
}
