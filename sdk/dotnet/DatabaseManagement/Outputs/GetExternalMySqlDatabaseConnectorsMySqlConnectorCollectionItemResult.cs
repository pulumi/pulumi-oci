// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DatabaseManagement.Outputs
{

    [OutputType]
    public sealed class GetExternalMySqlDatabaseConnectorsMySqlConnectorCollectionItemResult
    {
        /// <summary>
        /// Oracle Cloud Infrastructure Services associated with this connector.
        /// </summary>
        public readonly string AssociatedServices;
        public readonly int CheckConnectionStatusTrigger;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Connection Status
        /// </summary>
        public readonly string ConnectionStatus;
        public readonly ImmutableArray<Outputs.GetExternalMySqlDatabaseConnectorsMySqlConnectorCollectionItemConnectorDetailResult> ConnectorDetails;
        /// <summary>
        /// Connector Type.
        /// </summary>
        public readonly string ConnectorType;
        /// <summary>
        /// Credential type used to connect to database.
        /// </summary>
        public readonly string CredentialType;
        /// <summary>
        /// OCID of MySQL Database resource
        /// </summary>
        public readonly string ExternalDatabaseId;
        /// <summary>
        /// Host name for Connector.
        /// </summary>
        public readonly string HostName;
        /// <summary>
        /// OCID of MySQL Database Connector.
        /// </summary>
        public readonly string Id;
        public readonly bool IsTestConnectionParam;
        /// <summary>
        /// Agent Id of the MACS agent.
        /// </summary>
        public readonly string MacsAgentId;
        /// <summary>
        /// The parameter to filter by MySQL Database System type.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Network Protocol.
        /// </summary>
        public readonly string NetworkProtocol;
        /// <summary>
        /// Connector port.
        /// </summary>
        public readonly int Port;
        /// <summary>
        /// Name of MySQL Database.
        /// </summary>
        public readonly string SourceDatabase;
        /// <summary>
        /// Type of MySQL Database.
        /// </summary>
        public readonly string SourceDatabaseType;
        /// <summary>
        /// OCID of the SSL secret, if TCPS with SSL is used to connect to database.
        /// </summary>
        public readonly string SslSecretId;
        /// <summary>
        /// Name of the SSL secret, if TCPS with SSL is used to connect to database.
        /// </summary>
        public readonly string SslSecretName;
        /// <summary>
        /// Indicates lifecycle  state of the resource.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Time when connection status was last updated.
        /// </summary>
        public readonly string TimeConnectionStatusUpdated;
        /// <summary>
        /// Connector creation time.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// Connector update time.
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetExternalMySqlDatabaseConnectorsMySqlConnectorCollectionItemResult(
            string associatedServices,

            int checkConnectionStatusTrigger,

            string compartmentId,

            string connectionStatus,

            ImmutableArray<Outputs.GetExternalMySqlDatabaseConnectorsMySqlConnectorCollectionItemConnectorDetailResult> connectorDetails,

            string connectorType,

            string credentialType,

            string externalDatabaseId,

            string hostName,

            string id,

            bool isTestConnectionParam,

            string macsAgentId,

            string name,

            string networkProtocol,

            int port,

            string sourceDatabase,

            string sourceDatabaseType,

            string sslSecretId,

            string sslSecretName,

            string state,

            string timeConnectionStatusUpdated,

            string timeCreated,

            string timeUpdated)
        {
            AssociatedServices = associatedServices;
            CheckConnectionStatusTrigger = checkConnectionStatusTrigger;
            CompartmentId = compartmentId;
            ConnectionStatus = connectionStatus;
            ConnectorDetails = connectorDetails;
            ConnectorType = connectorType;
            CredentialType = credentialType;
            ExternalDatabaseId = externalDatabaseId;
            HostName = hostName;
            Id = id;
            IsTestConnectionParam = isTestConnectionParam;
            MacsAgentId = macsAgentId;
            Name = name;
            NetworkProtocol = networkProtocol;
            Port = port;
            SourceDatabase = sourceDatabase;
            SourceDatabaseType = sourceDatabaseType;
            SslSecretId = sslSecretId;
            SslSecretName = sslSecretName;
            State = state;
            TimeConnectionStatusUpdated = timeConnectionStatusUpdated;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
