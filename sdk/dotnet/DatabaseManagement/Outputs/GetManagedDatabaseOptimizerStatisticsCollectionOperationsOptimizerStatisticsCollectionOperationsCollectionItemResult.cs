// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DatabaseManagement.Outputs
{

    [OutputType]
    public sealed class GetManagedDatabaseOptimizerStatisticsCollectionOperationsOptimizerStatisticsCollectionOperationsCollectionItemResult
    {
        /// <summary>
        /// The number of objects for which statistics collection is completed.
        /// </summary>
        public readonly int CompletedCount;
        /// <summary>
        /// The summary of the Managed Database resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetManagedDatabaseOptimizerStatisticsCollectionOperationsOptimizerStatisticsCollectionOperationsCollectionItemDatabaseResult> Databases;
        /// <summary>
        /// The time it takes to complete the operation (in seconds).
        /// </summary>
        public readonly double DurationInSeconds;
        /// <summary>
        /// The end time of the operation.
        /// </summary>
        public readonly string EndTime;
        /// <summary>
        /// The number of objects for which statistics collection failed.
        /// </summary>
        public readonly int FailedCount;
        /// <summary>
        /// The ID of the operation.
        /// </summary>
        public readonly int Id;
        /// <summary>
        /// The number of objects for which statistics collection is in progress.
        /// </summary>
        public readonly int InProgressCount;
        /// <summary>
        /// The name of the job.
        /// </summary>
        public readonly string JobName;
        /// <summary>
        /// The name of the operation.
        /// </summary>
        public readonly string OperationName;
        /// <summary>
        /// The start time of the operation.
        /// </summary>
        public readonly string StartTime;
        /// <summary>
        /// The status of the Optimizer Statistics Collection task.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The name of the target object for which statistics are gathered.
        /// </summary>
        public readonly string Target;
        /// <summary>
        /// An array of Optimizer Statistics Collection task details.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetManagedDatabaseOptimizerStatisticsCollectionOperationsOptimizerStatisticsCollectionOperationsCollectionItemTaskResult> Tasks;
        /// <summary>
        /// The number of objects for which statistics collection timed out.
        /// </summary>
        public readonly int TimedOutCount;
        /// <summary>
        /// The total number of objects for which statistics is collected. This number is the sum of all the objects with various statuses: completed, inProgress, failed, and timedOut.
        /// </summary>
        public readonly int TotalObjectsCount;

        [OutputConstructor]
        private GetManagedDatabaseOptimizerStatisticsCollectionOperationsOptimizerStatisticsCollectionOperationsCollectionItemResult(
            int completedCount,

            ImmutableArray<Outputs.GetManagedDatabaseOptimizerStatisticsCollectionOperationsOptimizerStatisticsCollectionOperationsCollectionItemDatabaseResult> databases,

            double durationInSeconds,

            string endTime,

            int failedCount,

            int id,

            int inProgressCount,

            string jobName,

            string operationName,

            string startTime,

            string status,

            string target,

            ImmutableArray<Outputs.GetManagedDatabaseOptimizerStatisticsCollectionOperationsOptimizerStatisticsCollectionOperationsCollectionItemTaskResult> tasks,

            int timedOutCount,

            int totalObjectsCount)
        {
            CompletedCount = completedCount;
            Databases = databases;
            DurationInSeconds = durationInSeconds;
            EndTime = endTime;
            FailedCount = failedCount;
            Id = id;
            InProgressCount = inProgressCount;
            JobName = jobName;
            OperationName = operationName;
            StartTime = startTime;
            Status = status;
            Target = target;
            Tasks = tasks;
            TimedOutCount = timedOutCount;
            TotalObjectsCount = totalObjectsCount;
        }
    }
}
