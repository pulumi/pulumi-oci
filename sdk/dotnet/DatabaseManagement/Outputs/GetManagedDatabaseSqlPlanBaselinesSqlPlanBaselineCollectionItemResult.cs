// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DatabaseManagement.Outputs
{

    [OutputType]
    public sealed class GetManagedDatabaseSqlPlanBaselinesSqlPlanBaselineCollectionItemResult
    {
        /// <summary>
        /// Indicates whether the plan baseline is accepted (`YES`) or not (`NO`).
        /// </summary>
        public readonly string Accepted;
        /// <summary>
        /// The application action.
        /// </summary>
        public readonly string Action;
        /// <summary>
        /// Indicates whether a plan that is automatically captured by SQL plan management is marked adaptive or not.
        /// </summary>
        public readonly string Adaptive;
        /// <summary>
        /// Indicates whether the plan baseline is auto-purged (`YES`) or not (`NO`).
        /// </summary>
        public readonly string AutoPurge;
        /// <summary>
        /// Indicates whether the plan baseline is enabled (`YES`) or disabled (`NO`).
        /// </summary>
        public readonly string Enabled;
        /// <summary>
        /// The execution plan for the SQL statement.
        /// </summary>
        public readonly string ExecutionPlan;
        /// <summary>
        /// Indicates whether the plan baseline is fixed (`YES`) or not (`NO`).
        /// </summary>
        public readonly string Fixed;
        /// <summary>
        /// The application module name.
        /// </summary>
        public readonly string Module;
        /// <summary>
        /// A filter to return all the SQL plan baselines that match the origin.
        /// </summary>
        public readonly string Origin;
        /// <summary>
        /// A filter to return only SQL plan baselines that match the plan name.
        /// </summary>
        public readonly string PlanName;
        /// <summary>
        /// Indicates whether the optimizer was able to reproduce the plan (`YES`) or not (`NO`). The value is set to `YES` when a plan is initially added to the plan baseline.
        /// </summary>
        public readonly string Reproduced;
        /// <summary>
        /// A filter to return all the SQL plan baselines for the specified SQL handle.
        /// </summary>
        public readonly string SqlHandle;
        /// <summary>
        /// A filter to return all the SQL plan baselines that match the SQL text. By default, the search is case insensitive. To run an exact or case-sensitive search, double-quote the search string. You may also use the '%!'(MISSING) symbol as a wildcard.
        /// </summary>
        public readonly string SqlText;
        /// <summary>
        /// The date and time when the plan baseline was created.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The date and time when the plan baseline was last executed.
        /// </summary>
        public readonly string TimeLastExecuted;
        /// <summary>
        /// The date and time when the plan baseline was last modified.
        /// </summary>
        public readonly string TimeLastModified;

        [OutputConstructor]
        private GetManagedDatabaseSqlPlanBaselinesSqlPlanBaselineCollectionItemResult(
            string accepted,

            string action,

            string adaptive,

            string autoPurge,

            string enabled,

            string executionPlan,

            string @fixed,

            string module,

            string origin,

            string planName,

            string reproduced,

            string sqlHandle,

            string sqlText,

            string timeCreated,

            string timeLastExecuted,

            string timeLastModified)
        {
            Accepted = accepted;
            Action = action;
            Adaptive = adaptive;
            AutoPurge = autoPurge;
            Enabled = enabled;
            ExecutionPlan = executionPlan;
            Fixed = @fixed;
            Module = module;
            Origin = origin;
            PlanName = planName;
            Reproduced = reproduced;
            SqlHandle = sqlHandle;
            SqlText = sqlText;
            TimeCreated = timeCreated;
            TimeLastExecuted = timeLastExecuted;
            TimeLastModified = timeLastModified;
        }
    }
}
