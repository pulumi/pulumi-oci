// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DatabaseManagement.Outputs
{

    [OutputType]
    public sealed class GetManagedMySqlDatabaseInboundReplicationsManagedMySqlDatabaseInboundReplicationCollectionItemResult
    {
        /// <summary>
        /// A list of MySqlReplicationApplierFilter records.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetManagedMySqlDatabaseInboundReplicationsManagedMySqlDatabaseInboundReplicationCollectionItemApplierFilterResult> ApplierFilters;
        /// <summary>
        /// The time in seconds that the current transaction took between being committed on the source and being applied on the replica.
        /// </summary>
        public readonly double ApplyDelay;
        /// <summary>
        /// Error from the apply operation of a MySQL server replication channel.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetManagedMySqlDatabaseInboundReplicationsManagedMySqlDatabaseInboundReplicationCollectionItemApplyErrorResult> ApplyErrors;
        /// <summary>
        /// The current status of apply operations.
        /// </summary>
        public readonly string ApplyStatus;
        /// <summary>
        /// The number of workers currently busy applying transactions from the source server.
        /// </summary>
        public readonly int BusyWorkers;
        /// <summary>
        /// The name of the replication channel.
        /// </summary>
        public readonly string ChannelName;
        /// <summary>
        /// The desired number of seconds that the replica must lag the source.
        /// </summary>
        public readonly string DesiredDelaySeconds;
        /// <summary>
        /// Error from the fetch operation of a MySQL server replication channel.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetManagedMySqlDatabaseInboundReplicationsManagedMySqlDatabaseInboundReplicationCollectionItemFetchErrorResult> FetchErrors;
        /// <summary>
        /// The current status of fetch operations.
        /// </summary>
        public readonly string FetchStatus;
        /// <summary>
        /// Indicates whether the channel assigns global transaction identifiers (GTIDs) to anonymous replicated transactions. OFF means no GTIDs are assigned. LOCAL means a GTID is assigned that includes this replica's own universally unique identifier (UUID). A UUID as value indicates that a GTID is assigned, which includes that manually set UUID value.
        /// </summary>
        public readonly string GtidAssignment;
        /// <summary>
        /// The total size in bytes of all the existing relay log files pertaining to this channel.
        /// </summary>
        public readonly string RelayLogStorageSpaceUsed;
        /// <summary>
        /// If the replica is waiting for the desired delay seconds to pass since the source applied an event, this field contains the number of delay seconds remaining.
        /// </summary>
        public readonly string RemainingDelaySeconds;
        /// <summary>
        /// The set of global transaction IDs corresponding to all transactions received by this replica from the source server. Empty if GTIDs are not in use.
        /// </summary>
        public readonly string RetrievedGtidSet;
        /// <summary>
        /// The number of seconds the replica is behind the source server.
        /// </summary>
        public readonly string SecondsBehindSource;
        /// <summary>
        /// The host name or IP address of the source this replica is connected to.
        /// </summary>
        public readonly string SourceHost;
        /// <summary>
        /// The port used to connect to the source.
        /// </summary>
        public readonly int SourcePort;
        /// <summary>
        /// The server ID value from the source server.
        /// </summary>
        public readonly string SourceServerId;
        /// <summary>
        /// The Universally Unique Identifier (UUID) value from the source server.
        /// </summary>
        public readonly string SourceUuid;
        /// <summary>
        /// The number of transactions received by this replica from the source server.
        /// </summary>
        public readonly string TransactionsReceived;

        [OutputConstructor]
        private GetManagedMySqlDatabaseInboundReplicationsManagedMySqlDatabaseInboundReplicationCollectionItemResult(
            ImmutableArray<Outputs.GetManagedMySqlDatabaseInboundReplicationsManagedMySqlDatabaseInboundReplicationCollectionItemApplierFilterResult> applierFilters,

            double applyDelay,

            ImmutableArray<Outputs.GetManagedMySqlDatabaseInboundReplicationsManagedMySqlDatabaseInboundReplicationCollectionItemApplyErrorResult> applyErrors,

            string applyStatus,

            int busyWorkers,

            string channelName,

            string desiredDelaySeconds,

            ImmutableArray<Outputs.GetManagedMySqlDatabaseInboundReplicationsManagedMySqlDatabaseInboundReplicationCollectionItemFetchErrorResult> fetchErrors,

            string fetchStatus,

            string gtidAssignment,

            string relayLogStorageSpaceUsed,

            string remainingDelaySeconds,

            string retrievedGtidSet,

            string secondsBehindSource,

            string sourceHost,

            int sourcePort,

            string sourceServerId,

            string sourceUuid,

            string transactionsReceived)
        {
            ApplierFilters = applierFilters;
            ApplyDelay = applyDelay;
            ApplyErrors = applyErrors;
            ApplyStatus = applyStatus;
            BusyWorkers = busyWorkers;
            ChannelName = channelName;
            DesiredDelaySeconds = desiredDelaySeconds;
            FetchErrors = fetchErrors;
            FetchStatus = fetchStatus;
            GtidAssignment = gtidAssignment;
            RelayLogStorageSpaceUsed = relayLogStorageSpaceUsed;
            RemainingDelaySeconds = remainingDelaySeconds;
            RetrievedGtidSet = retrievedGtidSet;
            SecondsBehindSource = secondsBehindSource;
            SourceHost = sourceHost;
            SourcePort = sourcePort;
            SourceServerId = sourceServerId;
            SourceUuid = sourceUuid;
            TransactionsReceived = transactionsReceived;
        }
    }
}
