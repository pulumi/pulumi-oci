// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DatabaseManagement.Outputs
{

    [OutputType]
    public sealed class GetManagedMySqlDatabaseInboundReplicationsManagedMySqlDatabaseInboundReplicationCollectionResult
    {
        /// <summary>
        /// The number of sources this server is replicating from.
        /// </summary>
        public readonly int InboundReplicationsCount;
        /// <summary>
        /// A list of ManagedMySqlDatabaseInboundReplicationSummary records.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetManagedMySqlDatabaseInboundReplicationsManagedMySqlDatabaseInboundReplicationCollectionItemResult> Items;
        /// <summary>
        /// The number of applier threads for executing replication transactions in parallel.
        /// </summary>
        public readonly int ParallelWorkers;
        /// <summary>
        /// For multi-threaded replicas, indicates if transactions are executed and committed on the replica in the same order as they appear in the relay log.
        /// </summary>
        public readonly string PreserveCommitOrder;
        /// <summary>
        /// The server ID value of this replica.
        /// </summary>
        public readonly string ReplicaServerId;
        /// <summary>
        /// The Universally Unique Identifier (UUID) value of this replica server.
        /// </summary>
        public readonly string ReplicaUuid;

        [OutputConstructor]
        private GetManagedMySqlDatabaseInboundReplicationsManagedMySqlDatabaseInboundReplicationCollectionResult(
            int inboundReplicationsCount,

            ImmutableArray<Outputs.GetManagedMySqlDatabaseInboundReplicationsManagedMySqlDatabaseInboundReplicationCollectionItemResult> items,

            int parallelWorkers,

            string preserveCommitOrder,

            string replicaServerId,

            string replicaUuid)
        {
            InboundReplicationsCount = inboundReplicationsCount;
            Items = items;
            ParallelWorkers = parallelWorkers;
            PreserveCommitOrder = preserveCommitOrder;
            ReplicaServerId = replicaServerId;
            ReplicaUuid = replicaUuid;
        }
    }
}
