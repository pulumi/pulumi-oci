// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DatabaseManagement.Outputs
{

    [OutputType]
    public sealed class PluggabledatabasePluggableDatabaseDbmFeaturesManagementFeatureDetails
    {
        /// <summary>
        /// Indicates whether Diagnostics &amp; Management should be enabled for all the current pluggable databases in the container database.
        /// </summary>
        public readonly bool? CanEnableAllCurrentPdbs;
        /// <summary>
        /// The connector details required to connect to an Oracle cloud database.
        /// </summary>
        public readonly Outputs.PluggabledatabasePluggableDatabaseDbmFeaturesManagementFeatureDetailsConnectorDetails? ConnectorDetails;
        /// <summary>
        /// The connection details required to connect to the database.
        /// </summary>
        public readonly Outputs.PluggabledatabasePluggableDatabaseDbmFeaturesManagementFeatureDetailsDatabaseConnectionDetails? DatabaseConnectionDetails;
        /// <summary>
        /// The name of the Database Management feature.
        /// </summary>
        public readonly string Feature;
        /// <summary>
        /// Indicates whether Diagnostics &amp; Management should be enabled automatically for all the pluggable databases in the container database.
        /// </summary>
        public readonly bool? IsAutoEnablePluggableDatabase;
        /// <summary>
        /// The management type for the database. Use "BASIC" for basic management. Use "ADVANCED" for full management.
        /// </summary>
        public readonly string? ManagementType;

        [OutputConstructor]
        private PluggabledatabasePluggableDatabaseDbmFeaturesManagementFeatureDetails(
            bool? canEnableAllCurrentPdbs,

            Outputs.PluggabledatabasePluggableDatabaseDbmFeaturesManagementFeatureDetailsConnectorDetails? connectorDetails,

            Outputs.PluggabledatabasePluggableDatabaseDbmFeaturesManagementFeatureDetailsDatabaseConnectionDetails? databaseConnectionDetails,

            string feature,

            bool? isAutoEnablePluggableDatabase,

            string? managementType)
        {
            CanEnableAllCurrentPdbs = canEnableAllCurrentPdbs;
            ConnectorDetails = connectorDetails;
            DatabaseConnectionDetails = databaseConnectionDetails;
            Feature = feature;
            IsAutoEnablePluggableDatabase = isAutoEnablePluggableDatabase;
            ManagementType = managementType;
        }
    }
}
