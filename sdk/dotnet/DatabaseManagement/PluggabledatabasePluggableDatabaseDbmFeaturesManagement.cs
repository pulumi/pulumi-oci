// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DatabaseManagement
{
    /// <summary>
    /// This resource provides the Pluggabledatabase Pluggable Database Dbm Features Management resource in Oracle Cloud Infrastructure Database Management service.
    /// 
    /// Enables a Database Management feature for the specified Oracle cloud pluggable database.
    /// </summary>
    [OciResourceType("oci:DatabaseManagement/pluggabledatabasePluggableDatabaseDbmFeaturesManagement:PluggabledatabasePluggableDatabaseDbmFeaturesManagement")]
    public partial class PluggabledatabasePluggableDatabaseDbmFeaturesManagement : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("enablePluggableDatabaseDbmFeature")]
        public Output<bool> EnablePluggableDatabaseDbmFeature { get; private set; } = null!;

        [Output("feature")]
        public Output<string?> Feature { get; private set; } = null!;

        /// <summary>
        /// The details required to enable the specified Database Management feature.
        /// </summary>
        [Output("featureDetails")]
        public Output<Outputs.PluggabledatabasePluggableDatabaseDbmFeaturesManagementFeatureDetails?> FeatureDetails { get; private set; } = null!;

        [Output("modifyPluggableDatabaseDbmFeature")]
        public Output<bool?> ModifyPluggableDatabaseDbmFeature { get; private set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle cloud pluggable database.
        /// </summary>
        [Output("pluggableDatabaseId")]
        public Output<string> PluggableDatabaseId { get; private set; } = null!;


        /// <summary>
        /// Create a PluggabledatabasePluggableDatabaseDbmFeaturesManagement resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PluggabledatabasePluggableDatabaseDbmFeaturesManagement(string name, PluggabledatabasePluggableDatabaseDbmFeaturesManagementArgs args, CustomResourceOptions? options = null)
            : base("oci:DatabaseManagement/pluggabledatabasePluggableDatabaseDbmFeaturesManagement:PluggabledatabasePluggableDatabaseDbmFeaturesManagement", name, args ?? new PluggabledatabasePluggableDatabaseDbmFeaturesManagementArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PluggabledatabasePluggableDatabaseDbmFeaturesManagement(string name, Input<string> id, PluggabledatabasePluggableDatabaseDbmFeaturesManagementState? state = null, CustomResourceOptions? options = null)
            : base("oci:DatabaseManagement/pluggabledatabasePluggableDatabaseDbmFeaturesManagement:PluggabledatabasePluggableDatabaseDbmFeaturesManagement", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PluggabledatabasePluggableDatabaseDbmFeaturesManagement resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PluggabledatabasePluggableDatabaseDbmFeaturesManagement Get(string name, Input<string> id, PluggabledatabasePluggableDatabaseDbmFeaturesManagementState? state = null, CustomResourceOptions? options = null)
        {
            return new PluggabledatabasePluggableDatabaseDbmFeaturesManagement(name, id, state, options);
        }
    }

    public sealed class PluggabledatabasePluggableDatabaseDbmFeaturesManagementArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("enablePluggableDatabaseDbmFeature", required: true)]
        public Input<bool> EnablePluggableDatabaseDbmFeature { get; set; } = null!;

        [Input("feature")]
        public Input<string>? Feature { get; set; }

        /// <summary>
        /// The details required to enable the specified Database Management feature.
        /// </summary>
        [Input("featureDetails")]
        public Input<Inputs.PluggabledatabasePluggableDatabaseDbmFeaturesManagementFeatureDetailsArgs>? FeatureDetails { get; set; }

        [Input("modifyPluggableDatabaseDbmFeature")]
        public Input<bool>? ModifyPluggableDatabaseDbmFeature { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle cloud pluggable database.
        /// </summary>
        [Input("pluggableDatabaseId", required: true)]
        public Input<string> PluggableDatabaseId { get; set; } = null!;

        public PluggabledatabasePluggableDatabaseDbmFeaturesManagementArgs()
        {
        }
        public static new PluggabledatabasePluggableDatabaseDbmFeaturesManagementArgs Empty => new PluggabledatabasePluggableDatabaseDbmFeaturesManagementArgs();
    }

    public sealed class PluggabledatabasePluggableDatabaseDbmFeaturesManagementState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("enablePluggableDatabaseDbmFeature")]
        public Input<bool>? EnablePluggableDatabaseDbmFeature { get; set; }

        [Input("feature")]
        public Input<string>? Feature { get; set; }

        /// <summary>
        /// The details required to enable the specified Database Management feature.
        /// </summary>
        [Input("featureDetails")]
        public Input<Inputs.PluggabledatabasePluggableDatabaseDbmFeaturesManagementFeatureDetailsGetArgs>? FeatureDetails { get; set; }

        [Input("modifyPluggableDatabaseDbmFeature")]
        public Input<bool>? ModifyPluggableDatabaseDbmFeature { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle cloud pluggable database.
        /// </summary>
        [Input("pluggableDatabaseId")]
        public Input<string>? PluggableDatabaseId { get; set; }

        public PluggabledatabasePluggableDatabaseDbmFeaturesManagementState()
        {
        }
        public static new PluggabledatabasePluggableDatabaseDbmFeaturesManagementState Empty => new PluggabledatabasePluggableDatabaseDbmFeaturesManagementState();
    }
}
