// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DatabaseMigration
{
    public static class GetAgent
    {
        /// <summary>
        /// This data source provides details about a specific Agent resource in Oracle Cloud Infrastructure Database Migration service.
        /// 
        /// Display the ODMS Agent configuration.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAgent = Oci.DatabaseMigration.GetAgent.Invoke(new()
        ///     {
        ///         AgentId = oci_database_migration_agent.Test_agent.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetAgentResult> InvokeAsync(GetAgentArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAgentResult>("oci:DatabaseMigration/getAgent:getAgent", args ?? new GetAgentArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Agent resource in Oracle Cloud Infrastructure Database Migration service.
        /// 
        /// Display the ODMS Agent configuration.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAgent = Oci.DatabaseMigration.GetAgent.Invoke(new()
        ///     {
        ///         AgentId = oci_database_migration_agent.Test_agent.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetAgentResult> Invoke(GetAgentInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAgentResult>("oci:DatabaseMigration/getAgent:getAgent", args ?? new GetAgentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAgentArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the agent
        /// </summary>
        [Input("agentId", required: true)]
        public string AgentId { get; set; } = null!;

        public GetAgentArgs()
        {
        }
        public static new GetAgentArgs Empty => new GetAgentArgs();
    }

    public sealed class GetAgentInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the agent
        /// </summary>
        [Input("agentId", required: true)]
        public Input<string> AgentId { get; set; } = null!;

        public GetAgentInvokeArgs()
        {
        }
        public static new GetAgentInvokeArgs Empty => new GetAgentInvokeArgs();
    }


    [OutputType]
    public sealed class GetAgentResult
    {
        public readonly string AgentId;
        /// <summary>
        /// OCID of the compartment
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? DefinedTags;
        /// <summary>
        /// ODMS Agent name
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? FreeformTags;
        /// <summary>
        /// The OCID of the resource
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        public readonly string? LifecycleDetails;
        /// <summary>
        /// ODMS Agent public key.
        /// </summary>
        public readonly string? PublicKey;
        /// <summary>
        /// The current state of the ODMS on-premises Agent.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// The OCID of the Stream
        /// </summary>
        public readonly string? StreamId;
        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? SystemTags;
        /// <summary>
        /// The time the Agent was created. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string? TimeCreated;
        /// <summary>
        /// The time of the last Agent details update. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string? TimeUpdated;
        /// <summary>
        /// ODMS Agent version
        /// </summary>
        public readonly string? Version;

        [OutputConstructor]
        private GetAgentResult(
            string agentId,

            string? compartmentId,

            ImmutableDictionary<string, object>? definedTags,

            string? displayName,

            ImmutableDictionary<string, object>? freeformTags,

            string? id,

            string? lifecycleDetails,

            string? publicKey,

            string? state,

            string? streamId,

            ImmutableDictionary<string, object>? systemTags,

            string? timeCreated,

            string? timeUpdated,

            string? version)
        {
            AgentId = agentId;
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            LifecycleDetails = lifecycleDetails;
            PublicKey = publicKey;
            State = state;
            StreamId = streamId;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            Version = version;
        }
    }
}
