// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DatabaseMigration
{
    public static class GetMigration
    {
        /// <summary>
        /// This data source provides details about a specific Migration resource in Oracle Cloud Infrastructure Database Migration service.
        /// 
        /// Display Migration details.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMigration = Oci.DatabaseMigration.GetMigration.Invoke(new()
        ///     {
        ///         MigrationId = testMigrationOciDatabaseMigrationMigration.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetMigrationResult> InvokeAsync(GetMigrationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMigrationResult>("oci:DatabaseMigration/getMigration:getMigration", args ?? new GetMigrationArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Migration resource in Oracle Cloud Infrastructure Database Migration service.
        /// 
        /// Display Migration details.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMigration = Oci.DatabaseMigration.GetMigration.Invoke(new()
        ///     {
        ///         MigrationId = testMigrationOciDatabaseMigrationMigration.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetMigrationResult> Invoke(GetMigrationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMigrationResult>("oci:DatabaseMigration/getMigration:getMigration", args ?? new GetMigrationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMigrationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the migration
        /// </summary>
        [Input("migrationId", required: true)]
        public string MigrationId { get; set; } = null!;

        public GetMigrationArgs()
        {
        }
        public static new GetMigrationArgs Empty => new GetMigrationArgs();
    }

    public sealed class GetMigrationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the migration
        /// </summary>
        [Input("migrationId", required: true)]
        public Input<string> MigrationId { get; set; } = null!;

        public GetMigrationInvokeArgs()
        {
        }
        public static new GetMigrationInvokeArgs Empty => new GetMigrationInvokeArgs();
    }


    [OutputType]
    public sealed class GetMigrationResult
    {
        /// <summary>
        /// Optional Pre-Migration advisor settings.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMigrationAdvisorSettingResult> AdvisorSettings;
        /// <summary>
        /// The OCID of the registered on-premises ODMS Agent. Only valid for Offline Migrations.
        /// </summary>
        public readonly string AgentId;
        /// <summary>
        /// OCID of the compartment where the secret containing the credentials will be created.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// OCID of the Secret in the Oracle Cloud Infrastructure vault containing the Migration credentials. Used to store GoldenGate administrator user credentials.
        /// </summary>
        public readonly string CredentialsSecretId;
        public readonly string CsvText;
        /// <summary>
        /// Data Transfer Medium details for the Migration.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMigrationDataTransferMediumDetailResult> DataTransferMediumDetails;
        public readonly ImmutableArray<Outputs.GetMigrationDataTransferMediumDetailsV2Result> DataTransferMediumDetailsV2s;
        /// <summary>
        /// Optional settings for Data Pump Export and Import jobs
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMigrationDatapumpSettingResult> DatapumpSettings;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// Migration Display Name
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Optional additional properties for dump transfer.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMigrationDumpTransferDetailResult> DumpTransferDetails;
        /// <summary>
        /// Database objects to exclude from migration. If 'includeObjects' are specified, only exclude object types can be specified with general wildcards (.*) for owner and objectName.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMigrationExcludeObjectResult> ExcludeObjects;
        /// <summary>
        /// OCID of the current ODMS Job in execution for the Migration, if any.
        /// </summary>
        public readonly string ExecutingJobId;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// Details about Oracle GoldenGate Microservices.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMigrationGoldenGateDetailResult> GoldenGateDetails;
        /// <summary>
        /// Details about Oracle GoldenGate GGS Deployment.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMigrationGoldenGateServiceDetailResult> GoldenGateServiceDetails;
        /// <summary>
        /// The OCID of the resource
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Database objects to include from migration.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMigrationIncludeObjectResult> IncludeObjects;
        /// <summary>
        /// Additional status related to the execution and current state of the Migration.
        /// </summary>
        public readonly string LifecycleDetails;
        public readonly string MigrationId;
        /// <summary>
        /// The OCID of the Source Container Database Connection.
        /// </summary>
        public readonly string SourceContainerDatabaseConnectionId;
        /// <summary>
        /// The OCID of the Source Database Connection.
        /// </summary>
        public readonly string SourceDatabaseConnectionId;
        /// <summary>
        /// The current state of the Migration resource.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> SystemTags;
        /// <summary>
        /// The OCID of the Target Database Connection.
        /// </summary>
        public readonly string TargetDatabaseConnectionId;
        /// <summary>
        /// The time the Migration was created. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time of last Migration. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeLastMigration;
        /// <summary>
        /// The time of the last Migration details update. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeUpdated;
        /// <summary>
        /// Migration type.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Oracle Cloud Infrastructure Vault details to store migration and connection credentials secrets
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMigrationVaultDetailResult> VaultDetails;
        /// <summary>
        /// Name of a migration phase. The Job will wait after executing this phase until the Resume Job endpoint is called.
        /// </summary>
        public readonly string WaitAfter;

        [OutputConstructor]
        private GetMigrationResult(
            ImmutableArray<Outputs.GetMigrationAdvisorSettingResult> advisorSettings,

            string agentId,

            string compartmentId,

            string credentialsSecretId,

            string csvText,

            ImmutableArray<Outputs.GetMigrationDataTransferMediumDetailResult> dataTransferMediumDetails,

            ImmutableArray<Outputs.GetMigrationDataTransferMediumDetailsV2Result> dataTransferMediumDetailsV2s,

            ImmutableArray<Outputs.GetMigrationDatapumpSettingResult> datapumpSettings,

            ImmutableDictionary<string, object> definedTags,

            string displayName,

            ImmutableArray<Outputs.GetMigrationDumpTransferDetailResult> dumpTransferDetails,

            ImmutableArray<Outputs.GetMigrationExcludeObjectResult> excludeObjects,

            string executingJobId,

            ImmutableDictionary<string, object> freeformTags,

            ImmutableArray<Outputs.GetMigrationGoldenGateDetailResult> goldenGateDetails,

            ImmutableArray<Outputs.GetMigrationGoldenGateServiceDetailResult> goldenGateServiceDetails,

            string id,

            ImmutableArray<Outputs.GetMigrationIncludeObjectResult> includeObjects,

            string lifecycleDetails,

            string migrationId,

            string sourceContainerDatabaseConnectionId,

            string sourceDatabaseConnectionId,

            string state,

            ImmutableDictionary<string, object> systemTags,

            string targetDatabaseConnectionId,

            string timeCreated,

            string timeLastMigration,

            string timeUpdated,

            string type,

            ImmutableArray<Outputs.GetMigrationVaultDetailResult> vaultDetails,

            string waitAfter)
        {
            AdvisorSettings = advisorSettings;
            AgentId = agentId;
            CompartmentId = compartmentId;
            CredentialsSecretId = credentialsSecretId;
            CsvText = csvText;
            DataTransferMediumDetails = dataTransferMediumDetails;
            DataTransferMediumDetailsV2s = dataTransferMediumDetailsV2s;
            DatapumpSettings = datapumpSettings;
            DefinedTags = definedTags;
            DisplayName = displayName;
            DumpTransferDetails = dumpTransferDetails;
            ExcludeObjects = excludeObjects;
            ExecutingJobId = executingJobId;
            FreeformTags = freeformTags;
            GoldenGateDetails = goldenGateDetails;
            GoldenGateServiceDetails = goldenGateServiceDetails;
            Id = id;
            IncludeObjects = includeObjects;
            LifecycleDetails = lifecycleDetails;
            MigrationId = migrationId;
            SourceContainerDatabaseConnectionId = sourceContainerDatabaseConnectionId;
            SourceDatabaseConnectionId = sourceDatabaseConnectionId;
            State = state;
            SystemTags = systemTags;
            TargetDatabaseConnectionId = targetDatabaseConnectionId;
            TimeCreated = timeCreated;
            TimeLastMigration = timeLastMigration;
            TimeUpdated = timeUpdated;
            Type = type;
            VaultDetails = vaultDetails;
            WaitAfter = waitAfter;
        }
    }
}
