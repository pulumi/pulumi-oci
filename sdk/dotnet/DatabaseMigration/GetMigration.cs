// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DatabaseMigration
{
    public static class GetMigration
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMigration = Oci.DatabaseMigration.GetMigration.Invoke(new()
        ///     {
        ///         MigrationId = testMigrationOciDatabaseMigrationMigration.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetMigrationResult> InvokeAsync(GetMigrationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMigrationResult>("oci:DatabaseMigration/getMigration:getMigration", args ?? new GetMigrationArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMigration = Oci.DatabaseMigration.GetMigration.Invoke(new()
        ///     {
        ///         MigrationId = testMigrationOciDatabaseMigrationMigration.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetMigrationResult> Invoke(GetMigrationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMigrationResult>("oci:DatabaseMigration/getMigration:getMigration", args ?? new GetMigrationInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMigration = Oci.DatabaseMigration.GetMigration.Invoke(new()
        ///     {
        ///         MigrationId = testMigrationOciDatabaseMigrationMigration.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetMigrationResult> Invoke(GetMigrationInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetMigrationResult>("oci:DatabaseMigration/getMigration:getMigration", args ?? new GetMigrationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMigrationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the migration
        /// </summary>
        [Input("migrationId", required: true)]
        public string MigrationId { get; set; } = null!;

        public GetMigrationArgs()
        {
        }
        public static new GetMigrationArgs Empty => new GetMigrationArgs();
    }

    public sealed class GetMigrationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the migration
        /// </summary>
        [Input("migrationId", required: true)]
        public Input<string> MigrationId { get; set; } = null!;

        public GetMigrationInvokeArgs()
        {
        }
        public static new GetMigrationInvokeArgs Empty => new GetMigrationInvokeArgs();
    }


    [OutputType]
    public sealed class GetMigrationResult
    {
        /// <summary>
        /// List of Migration Parameter objects.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMigrationAdvancedParameterResult> AdvancedParameters;
        /// <summary>
        /// Details about Oracle Advisor Settings.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMigrationAdvisorSettingResult> AdvisorSettings;
        public readonly string BulkIncludeExcludeData;
        /// <summary>
        /// The OCID of the resource being referenced.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Optional additional properties for data transfer.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMigrationDataTransferMediumDetailResult> DataTransferMediumDetails;
        /// <summary>
        /// The combination of source and target databases participating in a migration. Example: ORACLE means the migration is meant for migrating Oracle source and target databases.
        /// </summary>
        public readonly string DatabaseCombination;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// A user-friendly description. Does not have to be unique, and it's changeable.  Avoid entering confidential information.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable.  Avoid entering confidential information.
        /// </summary>
        public readonly string DisplayName;
        public readonly ImmutableArray<Outputs.GetMigrationExcludeObjectResult> ExcludeObjects;
        /// <summary>
        /// The OCID of the resource being referenced.
        /// </summary>
        public readonly string ExecutingJobId;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.  For more information, see Resource Tags. Example: {"Department": "Finance"}
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// Details for Oracle GoldenGate Deployment (Internally managed by the service, not required and will be ignored if provided).
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMigrationGgsDetailResult> GgsDetails;
        /// <summary>
        /// Details for Oracle GoldenGate Marketplace  Instance / Deployment (Currently not supported for MySQL migrations).
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMigrationHubDetailResult> HubDetails;
        /// <summary>
        /// The OCID of the resource being referenced.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetMigrationIncludeObjectResult> IncludeObjects;
        /// <summary>
        /// Optional settings for Data Pump Export and Import jobs
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMigrationInitialLoadSettingResult> InitialLoadSettings;
        /// <summary>
        /// Additional status related to the execution and current state of the Migration.
        /// </summary>
        public readonly string LifecycleDetails;
        public readonly string MigrationId;
        /// <summary>
        /// The OCID of the resource being referenced.
        /// </summary>
        public readonly string SourceContainerDatabaseConnectionId;
        /// <summary>
        /// The OCID of the resource being referenced.
        /// </summary>
        public readonly string SourceDatabaseConnectionId;
        /// <summary>
        /// The current state of the Migration resource.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// The OCID of the resource being referenced.
        /// </summary>
        public readonly string TargetDatabaseConnectionId;
        /// <summary>
        /// An RFC3339 formatted datetime string such as `2016-08-25T21:10:29.600Z`.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// An RFC3339 formatted datetime string such as `2016-08-25T21:10:29.600Z`.
        /// </summary>
        public readonly string TimeLastMigration;
        /// <summary>
        /// An RFC3339 formatted datetime string such as `2016-08-25T21:10:29.600Z`.
        /// </summary>
        public readonly string TimeUpdated;
        /// <summary>
        /// The type of the migration to be performed. Example: ONLINE if no downtime is preferred for a migration. This method uses Oracle GoldenGate for replication.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// You can optionally pause a migration after a job phase. This property allows you to optionally specify the phase after which you can pause the migration.
        /// </summary>
        public readonly string WaitAfter;

        [OutputConstructor]
        private GetMigrationResult(
            ImmutableArray<Outputs.GetMigrationAdvancedParameterResult> advancedParameters,

            ImmutableArray<Outputs.GetMigrationAdvisorSettingResult> advisorSettings,

            string bulkIncludeExcludeData,

            string compartmentId,

            ImmutableArray<Outputs.GetMigrationDataTransferMediumDetailResult> dataTransferMediumDetails,

            string databaseCombination,

            ImmutableDictionary<string, string> definedTags,

            string description,

            string displayName,

            ImmutableArray<Outputs.GetMigrationExcludeObjectResult> excludeObjects,

            string executingJobId,

            ImmutableDictionary<string, string> freeformTags,

            ImmutableArray<Outputs.GetMigrationGgsDetailResult> ggsDetails,

            ImmutableArray<Outputs.GetMigrationHubDetailResult> hubDetails,

            string id,

            ImmutableArray<Outputs.GetMigrationIncludeObjectResult> includeObjects,

            ImmutableArray<Outputs.GetMigrationInitialLoadSettingResult> initialLoadSettings,

            string lifecycleDetails,

            string migrationId,

            string sourceContainerDatabaseConnectionId,

            string sourceDatabaseConnectionId,

            string state,

            ImmutableDictionary<string, string> systemTags,

            string targetDatabaseConnectionId,

            string timeCreated,

            string timeLastMigration,

            string timeUpdated,

            string type,

            string waitAfter)
        {
            AdvancedParameters = advancedParameters;
            AdvisorSettings = advisorSettings;
            BulkIncludeExcludeData = bulkIncludeExcludeData;
            CompartmentId = compartmentId;
            DataTransferMediumDetails = dataTransferMediumDetails;
            DatabaseCombination = databaseCombination;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            ExcludeObjects = excludeObjects;
            ExecutingJobId = executingJobId;
            FreeformTags = freeformTags;
            GgsDetails = ggsDetails;
            HubDetails = hubDetails;
            Id = id;
            IncludeObjects = includeObjects;
            InitialLoadSettings = initialLoadSettings;
            LifecycleDetails = lifecycleDetails;
            MigrationId = migrationId;
            SourceContainerDatabaseConnectionId = sourceContainerDatabaseConnectionId;
            SourceDatabaseConnectionId = sourceDatabaseConnectionId;
            State = state;
            SystemTags = systemTags;
            TargetDatabaseConnectionId = targetDatabaseConnectionId;
            TimeCreated = timeCreated;
            TimeLastMigration = timeLastMigration;
            TimeUpdated = timeUpdated;
            Type = type;
            WaitAfter = waitAfter;
        }
    }
}
