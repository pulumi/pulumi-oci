// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DatabaseMigration
{
    public static class GetMigrations
    {
        /// <summary>
        /// This data source provides the list of Migrations in Oracle Cloud Infrastructure Database Migration service.
        /// 
        /// List all Migrations.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMigrations = Oci.DatabaseMigration.GetMigrations.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         DisplayName = @var.Migration_display_name,
        ///         LifecycleDetails = @var.Migration_lifecycle_details,
        ///         State = @var.Migration_state,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetMigrationsResult> InvokeAsync(GetMigrationsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMigrationsResult>("oci:DatabaseMigration/getMigrations:getMigrations", args ?? new GetMigrationsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Migrations in Oracle Cloud Infrastructure Database Migration service.
        /// 
        /// List all Migrations.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMigrations = Oci.DatabaseMigration.GetMigrations.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         DisplayName = @var.Migration_display_name,
        ///         LifecycleDetails = @var.Migration_lifecycle_details,
        ///         State = @var.Migration_state,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetMigrationsResult> Invoke(GetMigrationsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMigrationsResult>("oci:DatabaseMigration/getMigrations:getMigrations", args ?? new GetMigrationsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMigrationsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetMigrationsFilterArgs>? _filters;
        public List<Inputs.GetMigrationsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetMigrationsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The lifecycle detailed status of the Migration.
        /// </summary>
        [Input("lifecycleDetails")]
        public string? LifecycleDetails { get; set; }

        /// <summary>
        /// The lifecycle state of the Migration.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetMigrationsArgs()
        {
        }
        public static new GetMigrationsArgs Empty => new GetMigrationsArgs();
    }

    public sealed class GetMigrationsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetMigrationsFilterInputArgs>? _filters;
        public InputList<Inputs.GetMigrationsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetMigrationsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The lifecycle detailed status of the Migration.
        /// </summary>
        [Input("lifecycleDetails")]
        public Input<string>? LifecycleDetails { get; set; }

        /// <summary>
        /// The lifecycle state of the Migration.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetMigrationsInvokeArgs()
        {
        }
        public static new GetMigrationsInvokeArgs Empty => new GetMigrationsInvokeArgs();
    }


    [OutputType]
    public sealed class GetMigrationsResult
    {
        /// <summary>
        /// OCID of the compartment where the secret containing the credentials will be created.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Migration Display Name
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetMigrationsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Additional status related to the execution and current state of the Migration.
        /// </summary>
        public readonly string? LifecycleDetails;
        /// <summary>
        /// The list of migration_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMigrationsMigrationCollectionResult> MigrationCollections;
        /// <summary>
        /// The current state of the Migration resource.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetMigrationsResult(
            string compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetMigrationsFilterResult> filters,

            string id,

            string? lifecycleDetails,

            ImmutableArray<Outputs.GetMigrationsMigrationCollectionResult> migrationCollections,

            string? state)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            LifecycleDetails = lifecycleDetails;
            MigrationCollections = migrationCollections;
            State = state;
        }
    }
}
