// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DatabaseMigration
{
    /// <summary>
    /// This resource provides the Migration resource in Oracle Cloud Infrastructure Database Migration service.
    /// 
    /// Create a Migration resource that contains all the details to perform the
    /// database migration operation, such as source and destination database
    /// details, credentials, etc.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testMigration = new Oci.DatabaseMigration.Migration("test_migration", new()
    ///     {
    ///         CompartmentId = compartmentId,
    ///         SourceDatabaseConnectionId = testConnection.Id,
    ///         TargetDatabaseConnectionId = testConnection.Id,
    ///         Type = migrationType,
    ///         AdvisorSettings = new Oci.DatabaseMigration.Inputs.MigrationAdvisorSettingsArgs
    ///         {
    ///             IsIgnoreErrors = migrationAdvisorSettingsIsIgnoreErrors,
    ///             IsSkipAdvisor = migrationAdvisorSettingsIsSkipAdvisor,
    ///         },
    ///         AgentId = testAgent.Id,
    ///         CsvText = migrationCsvText,
    ///         DataTransferMediumDetails = new Oci.DatabaseMigration.Inputs.MigrationDataTransferMediumDetailsArgs
    ///         {
    ///             DatabaseLinkDetails = new Oci.DatabaseMigration.Inputs.MigrationDataTransferMediumDetailsDatabaseLinkDetailsArgs
    ///             {
    ///                 Name = migrationDataTransferMediumDetailsDatabaseLinkDetailsName,
    ///                 WalletBucket = new Oci.DatabaseMigration.Inputs.MigrationDataTransferMediumDetailsDatabaseLinkDetailsWalletBucketArgs
    ///                 {
    ///                     Bucket = migrationDataTransferMediumDetailsDatabaseLinkDetailsWalletBucketBucket,
    ///                     Namespace = migrationDataTransferMediumDetailsDatabaseLinkDetailsWalletBucketNamespace,
    ///                 },
    ///             },
    ///             ObjectStorageDetails = new Oci.DatabaseMigration.Inputs.MigrationDataTransferMediumDetailsObjectStorageDetailsArgs
    ///             {
    ///                 Bucket = migrationDataTransferMediumDetailsObjectStorageDetailsBucket,
    ///                 Namespace = migrationDataTransferMediumDetailsObjectStorageDetailsNamespace,
    ///             },
    ///         },
    ///         DatapumpSettings = new Oci.DatabaseMigration.Inputs.MigrationDatapumpSettingsArgs
    ///         {
    ///             DataPumpParameters = new Oci.DatabaseMigration.Inputs.MigrationDatapumpSettingsDataPumpParametersArgs
    ///             {
    ///                 Estimate = migrationDatapumpSettingsDataPumpParametersEstimate,
    ///                 ExcludeParameters = migrationDatapumpSettingsDataPumpParametersExcludeParameters,
    ///                 ExportParallelismDegree = migrationDatapumpSettingsDataPumpParametersExportParallelismDegree,
    ///                 ImportParallelismDegree = migrationDatapumpSettingsDataPumpParametersImportParallelismDegree,
    ///                 IsCluster = migrationDatapumpSettingsDataPumpParametersIsCluster,
    ///                 TableExistsAction = migrationDatapumpSettingsDataPumpParametersTableExistsAction,
    ///             },
    ///             ExportDirectoryObject = new Oci.DatabaseMigration.Inputs.MigrationDatapumpSettingsExportDirectoryObjectArgs
    ///             {
    ///                 Name = migrationDatapumpSettingsExportDirectoryObjectName,
    ///                 Path = migrationDatapumpSettingsExportDirectoryObjectPath,
    ///             },
    ///             ImportDirectoryObject = new Oci.DatabaseMigration.Inputs.MigrationDatapumpSettingsImportDirectoryObjectArgs
    ///             {
    ///                 Name = migrationDatapumpSettingsImportDirectoryObjectName,
    ///                 Path = migrationDatapumpSettingsImportDirectoryObjectPath,
    ///             },
    ///             JobMode = migrationDatapumpSettingsJobMode,
    ///             MetadataRemaps = new[]
    ///             {
    ///                 new Oci.DatabaseMigration.Inputs.MigrationDatapumpSettingsMetadataRemapArgs
    ///                 {
    ///                     NewValue = migrationDatapumpSettingsMetadataRemapsNewValue,
    ///                     OldValue = migrationDatapumpSettingsMetadataRemapsOldValue,
    ///                     Type = migrationDatapumpSettingsMetadataRemapsType,
    ///                 },
    ///             },
    ///         },
    ///         DefinedTags = 
    ///         {
    ///             { "foo-namespace.bar-key", "value" },
    ///         },
    ///         DisplayName = migrationDisplayName,
    ///         DumpTransferDetails = new Oci.DatabaseMigration.Inputs.MigrationDumpTransferDetailsArgs
    ///         {
    ///             Source = new Oci.DatabaseMigration.Inputs.MigrationDumpTransferDetailsSourceArgs
    ///             {
    ///                 Kind = migrationDumpTransferDetailsSourceKind,
    ///                 OciHome = migrationDumpTransferDetailsSourceOciHome,
    ///                 WalletLocation = migrationDumpTransferDetailsSourceWalletLocation,
    ///             },
    ///             Target = new Oci.DatabaseMigration.Inputs.MigrationDumpTransferDetailsTargetArgs
    ///             {
    ///                 Kind = migrationDumpTransferDetailsTargetKind,
    ///                 OciHome = migrationDumpTransferDetailsTargetOciHome,
    ///                 WalletLocation = migrationDumpTransferDetailsTargetWalletLocation,
    ///             },
    ///         },
    ///         ExcludeObjects = new[]
    ///         {
    ///             new Oci.DatabaseMigration.Inputs.MigrationExcludeObjectArgs
    ///             {
    ///                 Object = migrationExcludeObjectsObject,
    ///                 Owner = migrationExcludeObjectsOwner,
    ///                 IsOmitExcludedTableFromReplication = migrationExcludeObjectsIsOmitExcludedTableFromReplication,
    ///                 Type = migrationExcludeObjectsType,
    ///             },
    ///         },
    ///         FreeformTags = 
    ///         {
    ///             { "bar-key", "value" },
    ///         },
    ///         GoldenGateDetails = new Oci.DatabaseMigration.Inputs.MigrationGoldenGateDetailsArgs
    ///         {
    ///             Hub = new Oci.DatabaseMigration.Inputs.MigrationGoldenGateDetailsHubArgs
    ///             {
    ///                 RestAdminCredentials = new Oci.DatabaseMigration.Inputs.MigrationGoldenGateDetailsHubRestAdminCredentialsArgs
    ///                 {
    ///                     Password = migrationGoldenGateDetailsHubRestAdminCredentialsPassword,
    ///                     Username = migrationGoldenGateDetailsHubRestAdminCredentialsUsername,
    ///                 },
    ///                 Url = migrationGoldenGateDetailsHubUrl,
    ///                 ComputeId = testCompute.Id,
    ///                 SourceContainerDbAdminCredentials = new Oci.DatabaseMigration.Inputs.MigrationGoldenGateDetailsHubSourceContainerDbAdminCredentialsArgs
    ///                 {
    ///                     Password = migrationGoldenGateDetailsHubSourceContainerDbAdminCredentialsPassword,
    ///                     Username = migrationGoldenGateDetailsHubSourceContainerDbAdminCredentialsUsername,
    ///                 },
    ///                 SourceDbAdminCredentials = new Oci.DatabaseMigration.Inputs.MigrationGoldenGateDetailsHubSourceDbAdminCredentialsArgs
    ///                 {
    ///                     Password = migrationGoldenGateDetailsHubSourceDbAdminCredentialsPassword,
    ///                     Username = migrationGoldenGateDetailsHubSourceDbAdminCredentialsUsername,
    ///                 },
    ///                 SourceMicroservicesDeploymentName = testDeployment.Name,
    ///                 TargetDbAdminCredentials = new Oci.DatabaseMigration.Inputs.MigrationGoldenGateDetailsHubTargetDbAdminCredentialsArgs
    ///                 {
    ///                     Password = migrationGoldenGateDetailsHubTargetDbAdminCredentialsPassword,
    ///                     Username = migrationGoldenGateDetailsHubTargetDbAdminCredentialsUsername,
    ///                 },
    ///                 TargetMicroservicesDeploymentName = testDeployment.Name,
    ///             },
    ///             Settings = new Oci.DatabaseMigration.Inputs.MigrationGoldenGateDetailsSettingsArgs
    ///             {
    ///                 AcceptableLag = migrationGoldenGateDetailsSettingsAcceptableLag,
    ///                 Extract = new Oci.DatabaseMigration.Inputs.MigrationGoldenGateDetailsSettingsExtractArgs
    ///                 {
    ///                     LongTransDuration = migrationGoldenGateDetailsSettingsExtractLongTransDuration,
    ///                     PerformanceProfile = migrationGoldenGateDetailsSettingsExtractPerformanceProfile,
    ///                 },
    ///                 Replicat = new Oci.DatabaseMigration.Inputs.MigrationGoldenGateDetailsSettingsReplicatArgs
    ///                 {
    ///                     MapParallelism = migrationGoldenGateDetailsSettingsReplicatMapParallelism,
    ///                     MaxApplyParallelism = migrationGoldenGateDetailsSettingsReplicatMaxApplyParallelism,
    ///                     MinApplyParallelism = migrationGoldenGateDetailsSettingsReplicatMinApplyParallelism,
    ///                 },
    ///             },
    ///         },
    ///         GoldenGateServiceDetails = new Oci.DatabaseMigration.Inputs.MigrationGoldenGateServiceDetailsArgs
    ///         {
    ///             Settings = new Oci.DatabaseMigration.Inputs.MigrationGoldenGateServiceDetailsSettingsArgs
    ///             {
    ///                 AcceptableLag = migrationGoldenGateServiceDetailsSettingsAcceptableLag,
    ///                 Extract = new Oci.DatabaseMigration.Inputs.MigrationGoldenGateServiceDetailsSettingsExtractArgs
    ///                 {
    ///                     LongTransDuration = migrationGoldenGateServiceDetailsSettingsExtractLongTransDuration,
    ///                     PerformanceProfile = migrationGoldenGateServiceDetailsSettingsExtractPerformanceProfile,
    ///                 },
    ///                 Replicat = new Oci.DatabaseMigration.Inputs.MigrationGoldenGateServiceDetailsSettingsReplicatArgs
    ///                 {
    ///                     MapParallelism = migrationGoldenGateServiceDetailsSettingsReplicatMapParallelism,
    ///                     MaxApplyParallelism = migrationGoldenGateServiceDetailsSettingsReplicatMaxApplyParallelism,
    ///                     MinApplyParallelism = migrationGoldenGateServiceDetailsSettingsReplicatMinApplyParallelism,
    ///                 },
    ///             },
    ///             SourceContainerDbCredentials = new Oci.DatabaseMigration.Inputs.MigrationGoldenGateServiceDetailsSourceContainerDbCredentialsArgs
    ///             {
    ///                 Password = migrationGoldenGateServiceDetailsSourceContainerDbCredentialsPassword,
    ///                 Username = migrationGoldenGateServiceDetailsSourceContainerDbCredentialsUsername,
    ///             },
    ///             SourceDbCredentials = new Oci.DatabaseMigration.Inputs.MigrationGoldenGateServiceDetailsSourceDbCredentialsArgs
    ///             {
    ///                 Password = migrationGoldenGateServiceDetailsSourceDbCredentialsPassword,
    ///                 Username = migrationGoldenGateServiceDetailsSourceDbCredentialsUsername,
    ///             },
    ///             TargetDbCredentials = new Oci.DatabaseMigration.Inputs.MigrationGoldenGateServiceDetailsTargetDbCredentialsArgs
    ///             {
    ///                 Password = migrationGoldenGateServiceDetailsTargetDbCredentialsPassword,
    ///                 Username = migrationGoldenGateServiceDetailsTargetDbCredentialsUsername,
    ///             },
    ///         },
    ///         IncludeObjects = new[]
    ///         {
    ///             new Oci.DatabaseMigration.Inputs.MigrationIncludeObjectArgs
    ///             {
    ///                 Object = migrationIncludeObjectsObject,
    ///                 Owner = migrationIncludeObjectsOwner,
    ///                 IsOmitExcludedTableFromReplication = migrationIncludeObjectsIsOmitExcludedTableFromReplication,
    ///                 Type = migrationIncludeObjectsType,
    ///             },
    ///         },
    ///         SourceContainerDatabaseConnectionId = testConnection.Id,
    ///         VaultDetails = new Oci.DatabaseMigration.Inputs.MigrationVaultDetailsArgs
    ///         {
    ///             CompartmentId = compartmentId,
    ///             KeyId = testKey.Id,
    ///             VaultId = testVault.Id,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Migrations can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:DatabaseMigration/migration:Migration test_migration "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:DatabaseMigration/migration:Migration")]
    public partial class Migration : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) Optional Pre-Migration advisor settings.
        /// </summary>
        [Output("advisorSettings")]
        public Output<Outputs.MigrationAdvisorSettings> AdvisorSettings { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The OCID of the registered ODMS Agent. Only valid for Offline Logical Migrations.
        /// </summary>
        [Output("agentId")]
        public Output<string> AgentId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) OCID of the compartment where the secret containing the credentials will be created.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// OCID of the Secret in the Oracle Cloud Infrastructure vault containing the Migration credentials. Used to store GoldenGate administrator user credentials.
        /// </summary>
        [Output("credentialsSecretId")]
        public Output<string> CredentialsSecretId { get; private set; } = null!;

        /// <summary>
        /// Database objects to exclude/include from migration in CSV format. The excludeObjects and includeObjects fields will be ignored if this field is not null.
        /// </summary>
        [Output("csvText")]
        public Output<string> CsvText { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Data Transfer Medium details for the Migration. If not specified, it will default to Database Link. Only one type of data transfer medium can be specified.
        /// </summary>
        [Output("dataTransferMediumDetails")]
        public Output<Outputs.MigrationDataTransferMediumDetails> DataTransferMediumDetails { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Optional additional properties for dump transfer in source or target host.
        /// </summary>
        [Output("dataTransferMediumDetailsV2")]
        public Output<Outputs.MigrationDataTransferMediumDetailsV2> DataTransferMediumDetailsV2 { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Optional settings for Data Pump Export and Import jobs
        /// </summary>
        [Output("datapumpSettings")]
        public Output<Outputs.MigrationDatapumpSettings> DatapumpSettings { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, object>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Migration Display Name
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Optional additional properties for dump transfer.
        /// </summary>
        [Output("dumpTransferDetails")]
        public Output<Outputs.MigrationDumpTransferDetails> DumpTransferDetails { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Database objects to exclude from migration, cannot be specified alongside 'includeObjects'
        /// </summary>
        [Output("excludeObjects")]
        public Output<ImmutableArray<Outputs.MigrationExcludeObject>> ExcludeObjects { get; private set; } = null!;

        /// <summary>
        /// OCID of the current ODMS Job in execution for the Migration, if any.
        /// </summary>
        [Output("executingJobId")]
        public Output<string> ExecutingJobId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, object>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Details about Oracle GoldenGate Microservices. Required for online logical migration.
        /// </summary>
        [Output("goldenGateDetails")]
        public Output<Outputs.MigrationGoldenGateDetails> GoldenGateDetails { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Details about Oracle GoldenGate GGS Deployment.
        /// </summary>
        [Output("goldenGateServiceDetails")]
        public Output<Outputs.MigrationGoldenGateServiceDetails> GoldenGateServiceDetails { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Database objects to include from migration, cannot be specified alongside 'excludeObjects'
        /// </summary>
        [Output("includeObjects")]
        public Output<ImmutableArray<Outputs.MigrationIncludeObject>> IncludeObjects { get; private set; } = null!;

        /// <summary>
        /// Additional status related to the execution and current state of the Migration.
        /// </summary>
        [Output("lifecycleDetails")]
        public Output<string> LifecycleDetails { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The OCID of the Source Container Database Connection. Only used for Online migrations. Only Connections of type Non-Autonomous can be used as source container databases.
        /// </summary>
        [Output("sourceContainerDatabaseConnectionId")]
        public Output<string> SourceContainerDatabaseConnectionId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The OCID of the Source Database Connection.
        /// </summary>
        [Output("sourceDatabaseConnectionId")]
        public Output<string> SourceDatabaseConnectionId { get; private set; } = null!;

        /// <summary>
        /// The current state of the Migration resource.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        [Output("systemTags")]
        public Output<ImmutableDictionary<string, object>> SystemTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The OCID of the Target Database Connection.
        /// </summary>
        [Output("targetDatabaseConnectionId")]
        public Output<string> TargetDatabaseConnectionId { get; private set; } = null!;

        /// <summary>
        /// The time the Migration was created. An RFC3339 formatted datetime string.
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The time of last Migration. An RFC3339 formatted datetime string.
        /// </summary>
        [Output("timeLastMigration")]
        public Output<string> TimeLastMigration { get; private set; } = null!;

        /// <summary>
        /// The time of the last Migration details update. An RFC3339 formatted datetime string.
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Migration type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure Vault details to store migration and connection credentials secrets
        /// </summary>
        [Output("vaultDetails")]
        public Output<Outputs.MigrationVaultDetails> VaultDetails { get; private set; } = null!;

        /// <summary>
        /// Name of a migration phase. The Job will wait after executing this phase until the Resume Job endpoint is called.
        /// </summary>
        [Output("waitAfter")]
        public Output<string> WaitAfter { get; private set; } = null!;


        /// <summary>
        /// Create a Migration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Migration(string name, MigrationArgs args, CustomResourceOptions? options = null)
            : base("oci:DatabaseMigration/migration:Migration", name, args ?? new MigrationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Migration(string name, Input<string> id, MigrationState? state = null, CustomResourceOptions? options = null)
            : base("oci:DatabaseMigration/migration:Migration", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Migration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Migration Get(string name, Input<string> id, MigrationState? state = null, CustomResourceOptions? options = null)
        {
            return new Migration(name, id, state, options);
        }
    }

    public sealed class MigrationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) Optional Pre-Migration advisor settings.
        /// </summary>
        [Input("advisorSettings")]
        public Input<Inputs.MigrationAdvisorSettingsArgs>? AdvisorSettings { get; set; }

        /// <summary>
        /// (Updatable) The OCID of the registered ODMS Agent. Only valid for Offline Logical Migrations.
        /// </summary>
        [Input("agentId")]
        public Input<string>? AgentId { get; set; }

        /// <summary>
        /// (Updatable) OCID of the compartment where the secret containing the credentials will be created.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// Database objects to exclude/include from migration in CSV format. The excludeObjects and includeObjects fields will be ignored if this field is not null.
        /// </summary>
        [Input("csvText")]
        public Input<string>? CsvText { get; set; }

        /// <summary>
        /// (Updatable) Data Transfer Medium details for the Migration. If not specified, it will default to Database Link. Only one type of data transfer medium can be specified.
        /// </summary>
        [Input("dataTransferMediumDetails")]
        public Input<Inputs.MigrationDataTransferMediumDetailsArgs>? DataTransferMediumDetails { get; set; }

        /// <summary>
        /// (Updatable) Optional additional properties for dump transfer in source or target host.
        /// </summary>
        [Input("dataTransferMediumDetailsV2")]
        public Input<Inputs.MigrationDataTransferMediumDetailsV2Args>? DataTransferMediumDetailsV2 { get; set; }

        /// <summary>
        /// (Updatable) Optional settings for Data Pump Export and Import jobs
        /// </summary>
        [Input("datapumpSettings")]
        public Input<Inputs.MigrationDatapumpSettingsArgs>? DatapumpSettings { get; set; }

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) Migration Display Name
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// (Updatable) Optional additional properties for dump transfer.
        /// </summary>
        [Input("dumpTransferDetails")]
        public Input<Inputs.MigrationDumpTransferDetailsArgs>? DumpTransferDetails { get; set; }

        [Input("excludeObjects")]
        private InputList<Inputs.MigrationExcludeObjectArgs>? _excludeObjects;

        /// <summary>
        /// (Updatable) Database objects to exclude from migration, cannot be specified alongside 'includeObjects'
        /// </summary>
        public InputList<Inputs.MigrationExcludeObjectArgs> ExcludeObjects
        {
            get => _excludeObjects ?? (_excludeObjects = new InputList<Inputs.MigrationExcludeObjectArgs>());
            set => _excludeObjects = value;
        }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) Details about Oracle GoldenGate Microservices. Required for online logical migration.
        /// </summary>
        [Input("goldenGateDetails")]
        public Input<Inputs.MigrationGoldenGateDetailsArgs>? GoldenGateDetails { get; set; }

        /// <summary>
        /// (Updatable) Details about Oracle GoldenGate GGS Deployment.
        /// </summary>
        [Input("goldenGateServiceDetails")]
        public Input<Inputs.MigrationGoldenGateServiceDetailsArgs>? GoldenGateServiceDetails { get; set; }

        [Input("includeObjects")]
        private InputList<Inputs.MigrationIncludeObjectArgs>? _includeObjects;

        /// <summary>
        /// (Updatable) Database objects to include from migration, cannot be specified alongside 'excludeObjects'
        /// </summary>
        public InputList<Inputs.MigrationIncludeObjectArgs> IncludeObjects
        {
            get => _includeObjects ?? (_includeObjects = new InputList<Inputs.MigrationIncludeObjectArgs>());
            set => _includeObjects = value;
        }

        /// <summary>
        /// (Updatable) The OCID of the Source Container Database Connection. Only used for Online migrations. Only Connections of type Non-Autonomous can be used as source container databases.
        /// </summary>
        [Input("sourceContainerDatabaseConnectionId")]
        public Input<string>? SourceContainerDatabaseConnectionId { get; set; }

        /// <summary>
        /// (Updatable) The OCID of the Source Database Connection.
        /// </summary>
        [Input("sourceDatabaseConnectionId", required: true)]
        public Input<string> SourceDatabaseConnectionId { get; set; } = null!;

        /// <summary>
        /// (Updatable) The OCID of the Target Database Connection.
        /// </summary>
        [Input("targetDatabaseConnectionId", required: true)]
        public Input<string> TargetDatabaseConnectionId { get; set; } = null!;

        /// <summary>
        /// (Updatable) Migration type.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure Vault details to store migration and connection credentials secrets
        /// </summary>
        [Input("vaultDetails")]
        public Input<Inputs.MigrationVaultDetailsArgs>? VaultDetails { get; set; }

        public MigrationArgs()
        {
        }
        public static new MigrationArgs Empty => new MigrationArgs();
    }

    public sealed class MigrationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) Optional Pre-Migration advisor settings.
        /// </summary>
        [Input("advisorSettings")]
        public Input<Inputs.MigrationAdvisorSettingsGetArgs>? AdvisorSettings { get; set; }

        /// <summary>
        /// (Updatable) The OCID of the registered ODMS Agent. Only valid for Offline Logical Migrations.
        /// </summary>
        [Input("agentId")]
        public Input<string>? AgentId { get; set; }

        /// <summary>
        /// (Updatable) OCID of the compartment where the secret containing the credentials will be created.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// OCID of the Secret in the Oracle Cloud Infrastructure vault containing the Migration credentials. Used to store GoldenGate administrator user credentials.
        /// </summary>
        [Input("credentialsSecretId")]
        public Input<string>? CredentialsSecretId { get; set; }

        /// <summary>
        /// Database objects to exclude/include from migration in CSV format. The excludeObjects and includeObjects fields will be ignored if this field is not null.
        /// </summary>
        [Input("csvText")]
        public Input<string>? CsvText { get; set; }

        /// <summary>
        /// (Updatable) Data Transfer Medium details for the Migration. If not specified, it will default to Database Link. Only one type of data transfer medium can be specified.
        /// </summary>
        [Input("dataTransferMediumDetails")]
        public Input<Inputs.MigrationDataTransferMediumDetailsGetArgs>? DataTransferMediumDetails { get; set; }

        /// <summary>
        /// (Updatable) Optional additional properties for dump transfer in source or target host.
        /// </summary>
        [Input("dataTransferMediumDetailsV2")]
        public Input<Inputs.MigrationDataTransferMediumDetailsV2GetArgs>? DataTransferMediumDetailsV2 { get; set; }

        /// <summary>
        /// (Updatable) Optional settings for Data Pump Export and Import jobs
        /// </summary>
        [Input("datapumpSettings")]
        public Input<Inputs.MigrationDatapumpSettingsGetArgs>? DatapumpSettings { get; set; }

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) Migration Display Name
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// (Updatable) Optional additional properties for dump transfer.
        /// </summary>
        [Input("dumpTransferDetails")]
        public Input<Inputs.MigrationDumpTransferDetailsGetArgs>? DumpTransferDetails { get; set; }

        [Input("excludeObjects")]
        private InputList<Inputs.MigrationExcludeObjectGetArgs>? _excludeObjects;

        /// <summary>
        /// (Updatable) Database objects to exclude from migration, cannot be specified alongside 'includeObjects'
        /// </summary>
        public InputList<Inputs.MigrationExcludeObjectGetArgs> ExcludeObjects
        {
            get => _excludeObjects ?? (_excludeObjects = new InputList<Inputs.MigrationExcludeObjectGetArgs>());
            set => _excludeObjects = value;
        }

        /// <summary>
        /// OCID of the current ODMS Job in execution for the Migration, if any.
        /// </summary>
        [Input("executingJobId")]
        public Input<string>? ExecutingJobId { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) Details about Oracle GoldenGate Microservices. Required for online logical migration.
        /// </summary>
        [Input("goldenGateDetails")]
        public Input<Inputs.MigrationGoldenGateDetailsGetArgs>? GoldenGateDetails { get; set; }

        /// <summary>
        /// (Updatable) Details about Oracle GoldenGate GGS Deployment.
        /// </summary>
        [Input("goldenGateServiceDetails")]
        public Input<Inputs.MigrationGoldenGateServiceDetailsGetArgs>? GoldenGateServiceDetails { get; set; }

        [Input("includeObjects")]
        private InputList<Inputs.MigrationIncludeObjectGetArgs>? _includeObjects;

        /// <summary>
        /// (Updatable) Database objects to include from migration, cannot be specified alongside 'excludeObjects'
        /// </summary>
        public InputList<Inputs.MigrationIncludeObjectGetArgs> IncludeObjects
        {
            get => _includeObjects ?? (_includeObjects = new InputList<Inputs.MigrationIncludeObjectGetArgs>());
            set => _includeObjects = value;
        }

        /// <summary>
        /// Additional status related to the execution and current state of the Migration.
        /// </summary>
        [Input("lifecycleDetails")]
        public Input<string>? LifecycleDetails { get; set; }

        /// <summary>
        /// (Updatable) The OCID of the Source Container Database Connection. Only used for Online migrations. Only Connections of type Non-Autonomous can be used as source container databases.
        /// </summary>
        [Input("sourceContainerDatabaseConnectionId")]
        public Input<string>? SourceContainerDatabaseConnectionId { get; set; }

        /// <summary>
        /// (Updatable) The OCID of the Source Database Connection.
        /// </summary>
        [Input("sourceDatabaseConnectionId")]
        public Input<string>? SourceDatabaseConnectionId { get; set; }

        /// <summary>
        /// The current state of the Migration resource.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("systemTags")]
        private InputMap<object>? _systemTags;

        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public InputMap<object> SystemTags
        {
            get => _systemTags ?? (_systemTags = new InputMap<object>());
            set => _systemTags = value;
        }

        /// <summary>
        /// (Updatable) The OCID of the Target Database Connection.
        /// </summary>
        [Input("targetDatabaseConnectionId")]
        public Input<string>? TargetDatabaseConnectionId { get; set; }

        /// <summary>
        /// The time the Migration was created. An RFC3339 formatted datetime string.
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The time of last Migration. An RFC3339 formatted datetime string.
        /// </summary>
        [Input("timeLastMigration")]
        public Input<string>? TimeLastMigration { get; set; }

        /// <summary>
        /// The time of the last Migration details update. An RFC3339 formatted datetime string.
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        /// <summary>
        /// (Updatable) Migration type.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure Vault details to store migration and connection credentials secrets
        /// </summary>
        [Input("vaultDetails")]
        public Input<Inputs.MigrationVaultDetailsGetArgs>? VaultDetails { get; set; }

        /// <summary>
        /// Name of a migration phase. The Job will wait after executing this phase until the Resume Job endpoint is called.
        /// </summary>
        [Input("waitAfter")]
        public Input<string>? WaitAfter { get; set; }

        public MigrationState()
        {
        }
        public static new MigrationState Empty => new MigrationState();
    }
}
