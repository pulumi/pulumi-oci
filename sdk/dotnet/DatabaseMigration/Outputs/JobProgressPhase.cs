// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DatabaseMigration.Outputs
{

    [OutputType]
    public sealed class JobProgressPhase
    {
        /// <summary>
        /// The text describing the action required to fix the issue
        /// </summary>
        public readonly string? Action;
        /// <summary>
        /// Duration of the phase in milliseconds
        /// </summary>
        public readonly int? DurationInMs;
        /// <summary>
        /// Attribute that returns an array of names and types of GoldenGate configuration files that are available for read or update.
        /// </summary>
        public readonly ImmutableArray<string> EditableParameterFiles;
        /// <summary>
        /// Summary of phase status results.
        /// </summary>
        public readonly ImmutableArray<Outputs.JobProgressPhaseExtract> Extracts;
        /// <summary>
        /// True if a Pre-Migration Advisor report is available for this phase. False or null if no report is available.
        /// </summary>
        public readonly bool? IsAdvisorReportAvailable;
        /// <summary>
        /// This is returned as true if the current phase can be suspended.
        /// </summary>
        public readonly bool? IsSuspendAvailable;
        /// <summary>
        /// The text describing the root cause of the reported issue
        /// </summary>
        public readonly string? Issue;
        /// <summary>
        /// Details to access log file in the specified Object Storage bucket, if any.
        /// </summary>
        public readonly ImmutableArray<Outputs.JobProgressPhaseLogLocation> LogLocations;
        /// <summary>
        /// Phase name
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Percent progress of job phase.
        /// </summary>
        public readonly int? Progress;
        /// <summary>
        /// Phase status
        /// </summary>
        public readonly string? Status;

        [OutputConstructor]
        private JobProgressPhase(
            string? action,

            int? durationInMs,

            ImmutableArray<string> editableParameterFiles,

            ImmutableArray<Outputs.JobProgressPhaseExtract> extracts,

            bool? isAdvisorReportAvailable,

            bool? isSuspendAvailable,

            string? issue,

            ImmutableArray<Outputs.JobProgressPhaseLogLocation> logLocations,

            string? name,

            int? progress,

            string? status)
        {
            Action = action;
            DurationInMs = durationInMs;
            EditableParameterFiles = editableParameterFiles;
            Extracts = extracts;
            IsAdvisorReportAvailable = isAdvisorReportAvailable;
            IsSuspendAvailable = isSuspendAvailable;
            Issue = issue;
            LogLocations = logLocations;
            Name = name;
            Progress = progress;
            Status = status;
        }
    }
}
