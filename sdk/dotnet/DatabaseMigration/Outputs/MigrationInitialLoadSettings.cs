// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DatabaseMigration.Outputs
{

    [OutputType]
    public sealed class MigrationInitialLoadSettings
    {
        /// <summary>
        /// (Updatable) Apply the specified requirements for compatibility with MySQL Database Service for all tables in the dump  output, altering the dump files as necessary.
        /// </summary>
        public readonly ImmutableArray<string> Compatibilities;
        /// <summary>
        /// (Updatable) Optional parameters for Data Pump Export and Import.
        /// </summary>
        public readonly Outputs.MigrationInitialLoadSettingsDataPumpParameters? DataPumpParameters;
        /// <summary>
        /// (Updatable) Directory object details, used to define either import or export directory objects in Data Pump Settings. Import directory is required for Non-Autonomous target connections. If specified for an autonomous target, it will show an error. Export directory will error if there are database link details specified.
        /// </summary>
        public readonly Outputs.MigrationInitialLoadSettingsExportDirectoryObject? ExportDirectoryObject;
        /// <summary>
        /// (Updatable) The action taken in the event of errors related to GRANT or REVOKE errors.
        /// </summary>
        public readonly string? HandleGrantErrors;
        /// <summary>
        /// (Updatable) Directory object details, used to define either import or export directory objects in Data Pump Settings. Import directory is required for Non-Autonomous target connections. If specified for an autonomous target, it will show an error. Export directory will error if there are database link details specified.
        /// </summary>
        public readonly Outputs.MigrationInitialLoadSettingsImportDirectoryObject? ImportDirectoryObject;
        /// <summary>
        /// (Updatable) Enable (true) or disable (false) consistent data dumps by locking the instance for backup during the dump.
        /// </summary>
        public readonly bool? IsConsistent;
        /// <summary>
        /// (Updatable) Import the dump even if it contains objects that already exist in the target schema in the MySQL instance.
        /// </summary>
        public readonly bool? IsIgnoreExistingObjects;
        /// <summary>
        /// (Updatable) Include a statement at the start of the dump to set the time zone to UTC.
        /// </summary>
        public readonly bool? IsTzUtc;
        /// <summary>
        /// (Updatable) Oracle Job Mode
        /// </summary>
        public readonly string JobMode;
        /// <summary>
        /// (Updatable) Defines remapping to be applied to objects as they are processed.
        /// </summary>
        public readonly ImmutableArray<Outputs.MigrationInitialLoadSettingsMetadataRemap> MetadataRemaps;
        /// <summary>
        /// (Updatable) Primary key compatibility option
        /// </summary>
        public readonly string? PrimaryKeyCompatibility;
        /// <summary>
        /// (Updatable) Migration tablespace settings.
        /// </summary>
        public readonly Outputs.MigrationInitialLoadSettingsTablespaceDetails? TablespaceDetails;

        [OutputConstructor]
        private MigrationInitialLoadSettings(
            ImmutableArray<string> compatibilities,

            Outputs.MigrationInitialLoadSettingsDataPumpParameters? dataPumpParameters,

            Outputs.MigrationInitialLoadSettingsExportDirectoryObject? exportDirectoryObject,

            string? handleGrantErrors,

            Outputs.MigrationInitialLoadSettingsImportDirectoryObject? importDirectoryObject,

            bool? isConsistent,

            bool? isIgnoreExistingObjects,

            bool? isTzUtc,

            string jobMode,

            ImmutableArray<Outputs.MigrationInitialLoadSettingsMetadataRemap> metadataRemaps,

            string? primaryKeyCompatibility,

            Outputs.MigrationInitialLoadSettingsTablespaceDetails? tablespaceDetails)
        {
            Compatibilities = compatibilities;
            DataPumpParameters = dataPumpParameters;
            ExportDirectoryObject = exportDirectoryObject;
            HandleGrantErrors = handleGrantErrors;
            ImportDirectoryObject = importDirectoryObject;
            IsConsistent = isConsistent;
            IsIgnoreExistingObjects = isIgnoreExistingObjects;
            IsTzUtc = isTzUtc;
            JobMode = jobMode;
            MetadataRemaps = metadataRemaps;
            PrimaryKeyCompatibility = primaryKeyCompatibility;
            TablespaceDetails = tablespaceDetails;
        }
    }
}
