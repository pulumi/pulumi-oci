// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DatabaseTools
{
    public static class GetDatabaseToolsEndpointServices
    {
        /// <summary>
        /// This data source provides the list of Database Tools Endpoint Services in Oracle Cloud Infrastructure Database Tools service.
        /// 
        /// Returns a list of Database Tools endpoint services.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDatabaseToolsEndpointServices = Oci.DatabaseTools.GetDatabaseToolsEndpointServices.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         DisplayName = @var.Database_tools_endpoint_service_display_name,
        ///         Name = @var.Database_tools_endpoint_service_name,
        ///         State = @var.Database_tools_endpoint_service_state,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetDatabaseToolsEndpointServicesResult> InvokeAsync(GetDatabaseToolsEndpointServicesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDatabaseToolsEndpointServicesResult>("oci:DatabaseTools/getDatabaseToolsEndpointServices:getDatabaseToolsEndpointServices", args ?? new GetDatabaseToolsEndpointServicesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Database Tools Endpoint Services in Oracle Cloud Infrastructure Database Tools service.
        /// 
        /// Returns a list of Database Tools endpoint services.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDatabaseToolsEndpointServices = Oci.DatabaseTools.GetDatabaseToolsEndpointServices.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         DisplayName = @var.Database_tools_endpoint_service_display_name,
        ///         Name = @var.Database_tools_endpoint_service_name,
        ///         State = @var.Database_tools_endpoint_service_state,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetDatabaseToolsEndpointServicesResult> Invoke(GetDatabaseToolsEndpointServicesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDatabaseToolsEndpointServicesResult>("oci:DatabaseTools/getDatabaseToolsEndpointServices:getDatabaseToolsEndpointServices", args ?? new GetDatabaseToolsEndpointServicesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDatabaseToolsEndpointServicesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire specified display name.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetDatabaseToolsEndpointServicesFilterArgs>? _filters;
        public List<Inputs.GetDatabaseToolsEndpointServicesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetDatabaseToolsEndpointServicesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only resources that match the entire specified name.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// A filter to return only resources their `lifecycleState` matches the specified `lifecycleState`.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetDatabaseToolsEndpointServicesArgs()
        {
        }
        public static new GetDatabaseToolsEndpointServicesArgs Empty => new GetDatabaseToolsEndpointServicesArgs();
    }

    public sealed class GetDatabaseToolsEndpointServicesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire specified display name.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetDatabaseToolsEndpointServicesFilterInputArgs>? _filters;
        public InputList<Inputs.GetDatabaseToolsEndpointServicesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetDatabaseToolsEndpointServicesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only resources that match the entire specified name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A filter to return only resources their `lifecycleState` matches the specified `lifecycleState`.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetDatabaseToolsEndpointServicesInvokeArgs()
        {
        }
        public static new GetDatabaseToolsEndpointServicesInvokeArgs Empty => new GetDatabaseToolsEndpointServicesInvokeArgs();
    }


    [OutputType]
    public sealed class GetDatabaseToolsEndpointServicesResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the Database Tools Endpoint Service.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The list of database_tools_endpoint_service_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDatabaseToolsEndpointServicesDatabaseToolsEndpointServiceCollectionResult> DatabaseToolsEndpointServiceCollections;
        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetDatabaseToolsEndpointServicesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A unique, non-changeable resource name.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The current state of the Database Tools Endpoint Service.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetDatabaseToolsEndpointServicesResult(
            string compartmentId,

            ImmutableArray<Outputs.GetDatabaseToolsEndpointServicesDatabaseToolsEndpointServiceCollectionResult> databaseToolsEndpointServiceCollections,

            string? displayName,

            ImmutableArray<Outputs.GetDatabaseToolsEndpointServicesFilterResult> filters,

            string id,

            string? name,

            string? state)
        {
            CompartmentId = compartmentId;
            DatabaseToolsEndpointServiceCollections = databaseToolsEndpointServiceCollections;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            Name = name;
            State = state;
        }
    }
}
