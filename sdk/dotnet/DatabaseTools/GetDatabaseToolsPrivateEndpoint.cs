// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DatabaseTools
{
    public static class GetDatabaseToolsPrivateEndpoint
    {
        /// <summary>
        /// This data source provides details about a specific Database Tools Private Endpoint resource in Oracle Cloud Infrastructure Database Tools service.
        /// 
        /// Gets details of a specified Database Tools private endpoint.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDatabaseToolsPrivateEndpoint = Oci.DatabaseTools.GetDatabaseToolsPrivateEndpoint.Invoke(new()
        ///     {
        ///         DatabaseToolsPrivateEndpointId = oci_database_tools_database_tools_private_endpoint.Test_database_tools_private_endpoint.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetDatabaseToolsPrivateEndpointResult> InvokeAsync(GetDatabaseToolsPrivateEndpointArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDatabaseToolsPrivateEndpointResult>("oci:DatabaseTools/getDatabaseToolsPrivateEndpoint:getDatabaseToolsPrivateEndpoint", args ?? new GetDatabaseToolsPrivateEndpointArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Database Tools Private Endpoint resource in Oracle Cloud Infrastructure Database Tools service.
        /// 
        /// Gets details of a specified Database Tools private endpoint.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDatabaseToolsPrivateEndpoint = Oci.DatabaseTools.GetDatabaseToolsPrivateEndpoint.Invoke(new()
        ///     {
        ///         DatabaseToolsPrivateEndpointId = oci_database_tools_database_tools_private_endpoint.Test_database_tools_private_endpoint.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDatabaseToolsPrivateEndpointResult> Invoke(GetDatabaseToolsPrivateEndpointInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDatabaseToolsPrivateEndpointResult>("oci:DatabaseTools/getDatabaseToolsPrivateEndpoint:getDatabaseToolsPrivateEndpoint", args ?? new GetDatabaseToolsPrivateEndpointInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDatabaseToolsPrivateEndpointArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a Database Tools private endpoint.
        /// </summary>
        [Input("databaseToolsPrivateEndpointId", required: true)]
        public string DatabaseToolsPrivateEndpointId { get; set; } = null!;

        public GetDatabaseToolsPrivateEndpointArgs()
        {
        }
        public static new GetDatabaseToolsPrivateEndpointArgs Empty => new GetDatabaseToolsPrivateEndpointArgs();
    }

    public sealed class GetDatabaseToolsPrivateEndpointInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a Database Tools private endpoint.
        /// </summary>
        [Input("databaseToolsPrivateEndpointId", required: true)]
        public Input<string> DatabaseToolsPrivateEndpointId { get; set; } = null!;

        public GetDatabaseToolsPrivateEndpointInvokeArgs()
        {
        }
        public static new GetDatabaseToolsPrivateEndpointInvokeArgs Empty => new GetDatabaseToolsPrivateEndpointInvokeArgs();
    }


    [OutputType]
    public sealed class GetDatabaseToolsPrivateEndpointResult
    {
        /// <summary>
        /// A list of additional FQDNs that can be also be used for the private endpoint.
        /// </summary>
        public readonly ImmutableArray<string> AdditionalFqdns;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the Database Tools private endpoint.
        /// </summary>
        public readonly string CompartmentId;
        public readonly string DatabaseToolsPrivateEndpointId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// A description of the Database Tools private endpoint.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Then FQDN to use for the private endpoint.
        /// </summary>
        public readonly string EndpointFqdn;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Tools Endpoint Service.
        /// </summary>
        public readonly string EndpointServiceId;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Tools private endpoint.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// Locks associated with this resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDatabaseToolsPrivateEndpointLockResult> Locks;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network security groups that the private endpoint's VNIC belongs to.  For more information about NSGs, see [NetworkSecurityGroup](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/NetworkSecurityGroup/).
        /// </summary>
        public readonly ImmutableArray<string> NsgIds;
        /// <summary>
        /// The private IP address that represents the access point for the associated endpoint service.
        /// </summary>
        public readonly string PrivateEndpointIp;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the private endpoint's VNIC.
        /// </summary>
        public readonly string PrivateEndpointVnicId;
        /// <summary>
        /// Reverse connection configuration details of the private endpoint.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDatabaseToolsPrivateEndpointReverseConnectionConfigurationResult> ReverseConnectionConfigurations;
        /// <summary>
        /// The current state of the Database Tools private endpoint.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet that the private endpoint belongs to.
        /// </summary>
        public readonly string SubnetId;
        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> SystemTags;
        /// <summary>
        /// The time the Database Tools private endpoint was created. An RFC3339 formatted datetime string
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time the Database Tools private endpoint was updated. An RFC3339 formatted datetime string
        /// </summary>
        public readonly string TimeUpdated;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN that the private endpoint belongs to.
        /// </summary>
        public readonly string VcnId;

        [OutputConstructor]
        private GetDatabaseToolsPrivateEndpointResult(
            ImmutableArray<string> additionalFqdns,

            string compartmentId,

            string databaseToolsPrivateEndpointId,

            ImmutableDictionary<string, object> definedTags,

            string description,

            string displayName,

            string endpointFqdn,

            string endpointServiceId,

            ImmutableDictionary<string, object> freeformTags,

            string id,

            string lifecycleDetails,

            ImmutableArray<Outputs.GetDatabaseToolsPrivateEndpointLockResult> locks,

            ImmutableArray<string> nsgIds,

            string privateEndpointIp,

            string privateEndpointVnicId,

            ImmutableArray<Outputs.GetDatabaseToolsPrivateEndpointReverseConnectionConfigurationResult> reverseConnectionConfigurations,

            string state,

            string subnetId,

            ImmutableDictionary<string, object> systemTags,

            string timeCreated,

            string timeUpdated,

            string vcnId)
        {
            AdditionalFqdns = additionalFqdns;
            CompartmentId = compartmentId;
            DatabaseToolsPrivateEndpointId = databaseToolsPrivateEndpointId;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            EndpointFqdn = endpointFqdn;
            EndpointServiceId = endpointServiceId;
            FreeformTags = freeformTags;
            Id = id;
            LifecycleDetails = lifecycleDetails;
            Locks = locks;
            NsgIds = nsgIds;
            PrivateEndpointIp = privateEndpointIp;
            PrivateEndpointVnicId = privateEndpointVnicId;
            ReverseConnectionConfigurations = reverseConnectionConfigurations;
            State = state;
            SubnetId = subnetId;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            VcnId = vcnId;
        }
    }
}
