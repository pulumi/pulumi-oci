// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DatabaseTools
{
    public static class GetDatabaseToolsPrivateEndpoints
    {
        /// <summary>
        /// This data source provides the list of Database Tools Private Endpoints in Oracle Cloud Infrastructure Database Tools service.
        /// 
        /// Returns a list of Database Tools private endpoints.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDatabaseToolsPrivateEndpoints = Oci.DatabaseTools.GetDatabaseToolsPrivateEndpoints.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         DisplayName = @var.Database_tools_private_endpoint_display_name,
        ///         EndpointServiceId = oci_core_service.Test_service.Id,
        ///         State = @var.Database_tools_private_endpoint_state,
        ///         SubnetId = oci_core_subnet.Test_subnet.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetDatabaseToolsPrivateEndpointsResult> InvokeAsync(GetDatabaseToolsPrivateEndpointsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDatabaseToolsPrivateEndpointsResult>("oci:DatabaseTools/getDatabaseToolsPrivateEndpoints:getDatabaseToolsPrivateEndpoints", args ?? new GetDatabaseToolsPrivateEndpointsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Database Tools Private Endpoints in Oracle Cloud Infrastructure Database Tools service.
        /// 
        /// Returns a list of Database Tools private endpoints.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDatabaseToolsPrivateEndpoints = Oci.DatabaseTools.GetDatabaseToolsPrivateEndpoints.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         DisplayName = @var.Database_tools_private_endpoint_display_name,
        ///         EndpointServiceId = oci_core_service.Test_service.Id,
        ///         State = @var.Database_tools_private_endpoint_state,
        ///         SubnetId = oci_core_subnet.Test_subnet.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetDatabaseToolsPrivateEndpointsResult> Invoke(GetDatabaseToolsPrivateEndpointsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDatabaseToolsPrivateEndpointsResult>("oci:DatabaseTools/getDatabaseToolsPrivateEndpoints:getDatabaseToolsPrivateEndpoints", args ?? new GetDatabaseToolsPrivateEndpointsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDatabaseToolsPrivateEndpointsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire specified display name.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        /// <summary>
        /// A filter to return only resources their `endpointServiceId` matches the specified `endpointServiceId`.
        /// </summary>
        [Input("endpointServiceId")]
        public string? EndpointServiceId { get; set; }

        [Input("filters")]
        private List<Inputs.GetDatabaseToolsPrivateEndpointsFilterArgs>? _filters;
        public List<Inputs.GetDatabaseToolsPrivateEndpointsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetDatabaseToolsPrivateEndpointsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only resources their `lifecycleState` matches the specified `lifecycleState`.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        /// <summary>
        /// A filter to return only resources their `subnetId` matches the specified `subnetId`.
        /// </summary>
        [Input("subnetId")]
        public string? SubnetId { get; set; }

        public GetDatabaseToolsPrivateEndpointsArgs()
        {
        }
        public static new GetDatabaseToolsPrivateEndpointsArgs Empty => new GetDatabaseToolsPrivateEndpointsArgs();
    }

    public sealed class GetDatabaseToolsPrivateEndpointsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire specified display name.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// A filter to return only resources their `endpointServiceId` matches the specified `endpointServiceId`.
        /// </summary>
        [Input("endpointServiceId")]
        public Input<string>? EndpointServiceId { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetDatabaseToolsPrivateEndpointsFilterInputArgs>? _filters;
        public InputList<Inputs.GetDatabaseToolsPrivateEndpointsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetDatabaseToolsPrivateEndpointsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only resources their `lifecycleState` matches the specified `lifecycleState`.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// A filter to return only resources their `subnetId` matches the specified `subnetId`.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        public GetDatabaseToolsPrivateEndpointsInvokeArgs()
        {
        }
        public static new GetDatabaseToolsPrivateEndpointsInvokeArgs Empty => new GetDatabaseToolsPrivateEndpointsInvokeArgs();
    }


    [OutputType]
    public sealed class GetDatabaseToolsPrivateEndpointsResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the Database Tools private endpoint.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The list of database_tools_private_endpoint_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDatabaseToolsPrivateEndpointsDatabaseToolsPrivateEndpointCollectionResult> DatabaseToolsPrivateEndpointCollections;
        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Tools Endpoint Service.
        /// </summary>
        public readonly string? EndpointServiceId;
        public readonly ImmutableArray<Outputs.GetDatabaseToolsPrivateEndpointsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The current state of the Database Tools private endpoint.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet that the private endpoint belongs to.
        /// </summary>
        public readonly string? SubnetId;

        [OutputConstructor]
        private GetDatabaseToolsPrivateEndpointsResult(
            string compartmentId,

            ImmutableArray<Outputs.GetDatabaseToolsPrivateEndpointsDatabaseToolsPrivateEndpointCollectionResult> databaseToolsPrivateEndpointCollections,

            string? displayName,

            string? endpointServiceId,

            ImmutableArray<Outputs.GetDatabaseToolsPrivateEndpointsFilterResult> filters,

            string id,

            string? state,

            string? subnetId)
        {
            CompartmentId = compartmentId;
            DatabaseToolsPrivateEndpointCollections = databaseToolsPrivateEndpointCollections;
            DisplayName = displayName;
            EndpointServiceId = endpointServiceId;
            Filters = filters;
            Id = id;
            State = state;
            SubnetId = subnetId;
        }
    }
}
