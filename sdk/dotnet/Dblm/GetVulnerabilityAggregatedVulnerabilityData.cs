// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Dblm
{
    public static class GetVulnerabilityAggregatedVulnerabilityData
    {
        /// <summary>
        /// This data source provides the list of Vulnerability Aggregated Vulnerability Data in Oracle Cloud Infrastructure Dblm service.
        /// 
        /// Gets an AggregatedVulnerabilityData
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testVulnerabilityAggregatedVulnerabilityData = Oci.Dblm.GetVulnerabilityAggregatedVulnerabilityData.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DatabaseRelease = vulnerabilityAggregatedVulnerabilityDataDatabaseRelease,
        ///         State = vulnerabilityAggregatedVulnerabilityDataState,
        ///         TimeCreatedGreaterThan = vulnerabilityAggregatedVulnerabilityDataTimeCreatedGreaterThan,
        ///         TimeEndedLessThan = vulnerabilityAggregatedVulnerabilityDataTimeEndedLessThan,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetVulnerabilityAggregatedVulnerabilityDataResult> InvokeAsync(GetVulnerabilityAggregatedVulnerabilityDataArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVulnerabilityAggregatedVulnerabilityDataResult>("oci:Dblm/getVulnerabilityAggregatedVulnerabilityData:getVulnerabilityAggregatedVulnerabilityData", args ?? new GetVulnerabilityAggregatedVulnerabilityDataArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Vulnerability Aggregated Vulnerability Data in Oracle Cloud Infrastructure Dblm service.
        /// 
        /// Gets an AggregatedVulnerabilityData
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testVulnerabilityAggregatedVulnerabilityData = Oci.Dblm.GetVulnerabilityAggregatedVulnerabilityData.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DatabaseRelease = vulnerabilityAggregatedVulnerabilityDataDatabaseRelease,
        ///         State = vulnerabilityAggregatedVulnerabilityDataState,
        ///         TimeCreatedGreaterThan = vulnerabilityAggregatedVulnerabilityDataTimeCreatedGreaterThan,
        ///         TimeEndedLessThan = vulnerabilityAggregatedVulnerabilityDataTimeEndedLessThan,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetVulnerabilityAggregatedVulnerabilityDataResult> Invoke(GetVulnerabilityAggregatedVulnerabilityDataInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVulnerabilityAggregatedVulnerabilityDataResult>("oci:Dblm/getVulnerabilityAggregatedVulnerabilityData:getVulnerabilityAggregatedVulnerabilityData", args ?? new GetVulnerabilityAggregatedVulnerabilityDataInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Vulnerability Aggregated Vulnerability Data in Oracle Cloud Infrastructure Dblm service.
        /// 
        /// Gets an AggregatedVulnerabilityData
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testVulnerabilityAggregatedVulnerabilityData = Oci.Dblm.GetVulnerabilityAggregatedVulnerabilityData.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DatabaseRelease = vulnerabilityAggregatedVulnerabilityDataDatabaseRelease,
        ///         State = vulnerabilityAggregatedVulnerabilityDataState,
        ///         TimeCreatedGreaterThan = vulnerabilityAggregatedVulnerabilityDataTimeCreatedGreaterThan,
        ///         TimeEndedLessThan = vulnerabilityAggregatedVulnerabilityDataTimeEndedLessThan,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetVulnerabilityAggregatedVulnerabilityDataResult> Invoke(GetVulnerabilityAggregatedVulnerabilityDataInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetVulnerabilityAggregatedVulnerabilityDataResult>("oci:Dblm/getVulnerabilityAggregatedVulnerabilityData:getVulnerabilityAggregatedVulnerabilityData", args ?? new GetVulnerabilityAggregatedVulnerabilityDataInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVulnerabilityAggregatedVulnerabilityDataArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only database that match the given release version.
        /// </summary>
        [Input("databaseRelease")]
        public string? DatabaseRelease { get; set; }

        [Input("filters")]
        private List<Inputs.GetVulnerabilityAggregatedVulnerabilityDataFilterArgs>? _filters;
        public List<Inputs.GetVulnerabilityAggregatedVulnerabilityDataFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetVulnerabilityAggregatedVulnerabilityDataFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only resources their lifecycleState matches the given lifecycleState.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        /// <summary>
        /// The created greater than.
        /// </summary>
        [Input("timeCreatedGreaterThan")]
        public string? TimeCreatedGreaterThan { get; set; }

        /// <summary>
        /// The time ended less than.
        /// </summary>
        [Input("timeEndedLessThan")]
        public string? TimeEndedLessThan { get; set; }

        public GetVulnerabilityAggregatedVulnerabilityDataArgs()
        {
        }
        public static new GetVulnerabilityAggregatedVulnerabilityDataArgs Empty => new GetVulnerabilityAggregatedVulnerabilityDataArgs();
    }

    public sealed class GetVulnerabilityAggregatedVulnerabilityDataInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only database that match the given release version.
        /// </summary>
        [Input("databaseRelease")]
        public Input<string>? DatabaseRelease { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetVulnerabilityAggregatedVulnerabilityDataFilterInputArgs>? _filters;
        public InputList<Inputs.GetVulnerabilityAggregatedVulnerabilityDataFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetVulnerabilityAggregatedVulnerabilityDataFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only resources their lifecycleState matches the given lifecycleState.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The created greater than.
        /// </summary>
        [Input("timeCreatedGreaterThan")]
        public Input<string>? TimeCreatedGreaterThan { get; set; }

        /// <summary>
        /// The time ended less than.
        /// </summary>
        [Input("timeEndedLessThan")]
        public Input<string>? TimeEndedLessThan { get; set; }

        public GetVulnerabilityAggregatedVulnerabilityDataInvokeArgs()
        {
        }
        public static new GetVulnerabilityAggregatedVulnerabilityDataInvokeArgs Empty => new GetVulnerabilityAggregatedVulnerabilityDataInvokeArgs();
    }


    [OutputType]
    public sealed class GetVulnerabilityAggregatedVulnerabilityDataResult
    {
        /// <summary>
        /// The list of aggregated_vulnerability_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetVulnerabilityAggregatedVulnerabilityDataAggregatedVulnerabilityCollectionResult> AggregatedVulnerabilityCollections;
        public readonly string CompartmentId;
        public readonly string? DatabaseRelease;
        public readonly ImmutableArray<Outputs.GetVulnerabilityAggregatedVulnerabilityDataFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? State;
        public readonly string? TimeCreatedGreaterThan;
        public readonly string? TimeEndedLessThan;

        [OutputConstructor]
        private GetVulnerabilityAggregatedVulnerabilityDataResult(
            ImmutableArray<Outputs.GetVulnerabilityAggregatedVulnerabilityDataAggregatedVulnerabilityCollectionResult> aggregatedVulnerabilityCollections,

            string compartmentId,

            string? databaseRelease,

            ImmutableArray<Outputs.GetVulnerabilityAggregatedVulnerabilityDataFilterResult> filters,

            string id,

            string? state,

            string? timeCreatedGreaterThan,

            string? timeEndedLessThan)
        {
            AggregatedVulnerabilityCollections = aggregatedVulnerabilityCollections;
            CompartmentId = compartmentId;
            DatabaseRelease = databaseRelease;
            Filters = filters;
            Id = id;
            State = state;
            TimeCreatedGreaterThan = timeCreatedGreaterThan;
            TimeEndedLessThan = timeEndedLessThan;
        }
    }
}
