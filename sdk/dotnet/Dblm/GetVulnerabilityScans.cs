// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Dblm
{
    public static class GetVulnerabilityScans
    {
        /// <summary>
        /// This data source provides the list of Vulnerability Scans in Oracle Cloud Infrastructure Dblm service.
        /// 
        /// Gets a list of VulnerabilityScans.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testVulnerabilityScans = Oci.Dblm.GetVulnerabilityScans.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = vulnerabilityScanDisplayName,
        ///         TimeCreatedGreaterThan = vulnerabilityScanTimeCreatedGreaterThan,
        ///         TimeEndedLessThan = vulnerabilityScanTimeEndedLessThan,
        ///         VulnerabilityScanId = testVulnerabilityScan.Id,
        ///         VulnerabilityScanStatuses = vulnerabilityScanVulnerabilityScanStatus,
        ///         VulnerabilityScanType = vulnerabilityScanVulnerabilityScanType,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetVulnerabilityScansResult> InvokeAsync(GetVulnerabilityScansArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVulnerabilityScansResult>("oci:Dblm/getVulnerabilityScans:getVulnerabilityScans", args ?? new GetVulnerabilityScansArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Vulnerability Scans in Oracle Cloud Infrastructure Dblm service.
        /// 
        /// Gets a list of VulnerabilityScans.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testVulnerabilityScans = Oci.Dblm.GetVulnerabilityScans.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = vulnerabilityScanDisplayName,
        ///         TimeCreatedGreaterThan = vulnerabilityScanTimeCreatedGreaterThan,
        ///         TimeEndedLessThan = vulnerabilityScanTimeEndedLessThan,
        ///         VulnerabilityScanId = testVulnerabilityScan.Id,
        ///         VulnerabilityScanStatuses = vulnerabilityScanVulnerabilityScanStatus,
        ///         VulnerabilityScanType = vulnerabilityScanVulnerabilityScanType,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetVulnerabilityScansResult> Invoke(GetVulnerabilityScansInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVulnerabilityScansResult>("oci:Dblm/getVulnerabilityScans:getVulnerabilityScans", args ?? new GetVulnerabilityScansInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Vulnerability Scans in Oracle Cloud Infrastructure Dblm service.
        /// 
        /// Gets a list of VulnerabilityScans.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testVulnerabilityScans = Oci.Dblm.GetVulnerabilityScans.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = vulnerabilityScanDisplayName,
        ///         TimeCreatedGreaterThan = vulnerabilityScanTimeCreatedGreaterThan,
        ///         TimeEndedLessThan = vulnerabilityScanTimeEndedLessThan,
        ///         VulnerabilityScanId = testVulnerabilityScan.Id,
        ///         VulnerabilityScanStatuses = vulnerabilityScanVulnerabilityScanStatus,
        ///         VulnerabilityScanType = vulnerabilityScanVulnerabilityScanType,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetVulnerabilityScansResult> Invoke(GetVulnerabilityScansInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetVulnerabilityScansResult>("oci:Dblm/getVulnerabilityScans:getVulnerabilityScans", args ?? new GetVulnerabilityScansInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVulnerabilityScansArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetVulnerabilityScansFilterArgs>? _filters;
        public List<Inputs.GetVulnerabilityScansFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetVulnerabilityScansFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The created greater than.
        /// </summary>
        [Input("timeCreatedGreaterThan")]
        public string? TimeCreatedGreaterThan { get; set; }

        /// <summary>
        /// The time ended less than.
        /// </summary>
        [Input("timeEndedLessThan")]
        public string? TimeEndedLessThan { get; set; }

        /// <summary>
        /// The ID of the vulnerability scan.
        /// </summary>
        [Input("vulnerabilityScanId")]
        public string? VulnerabilityScanId { get; set; }

        [Input("vulnerabilityScanStatuses")]
        private List<string>? _vulnerabilityScanStatuses;

        /// <summary>
        /// Filter by one or more vulnerability scan status. Possible values are completed, running, completed with error, aborted.
        /// </summary>
        public List<string> VulnerabilityScanStatuses
        {
            get => _vulnerabilityScanStatuses ?? (_vulnerabilityScanStatuses = new List<string>());
            set => _vulnerabilityScanStatuses = value;
        }

        /// <summary>
        /// The scan type to use is 'CVE', 'PATCH' or 'IMAGE_PATCH'.
        /// </summary>
        [Input("vulnerabilityScanType")]
        public string? VulnerabilityScanType { get; set; }

        public GetVulnerabilityScansArgs()
        {
        }
        public static new GetVulnerabilityScansArgs Empty => new GetVulnerabilityScansArgs();
    }

    public sealed class GetVulnerabilityScansInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetVulnerabilityScansFilterInputArgs>? _filters;
        public InputList<Inputs.GetVulnerabilityScansFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetVulnerabilityScansFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The created greater than.
        /// </summary>
        [Input("timeCreatedGreaterThan")]
        public Input<string>? TimeCreatedGreaterThan { get; set; }

        /// <summary>
        /// The time ended less than.
        /// </summary>
        [Input("timeEndedLessThan")]
        public Input<string>? TimeEndedLessThan { get; set; }

        /// <summary>
        /// The ID of the vulnerability scan.
        /// </summary>
        [Input("vulnerabilityScanId")]
        public Input<string>? VulnerabilityScanId { get; set; }

        [Input("vulnerabilityScanStatuses")]
        private InputList<string>? _vulnerabilityScanStatuses;

        /// <summary>
        /// Filter by one or more vulnerability scan status. Possible values are completed, running, completed with error, aborted.
        /// </summary>
        public InputList<string> VulnerabilityScanStatuses
        {
            get => _vulnerabilityScanStatuses ?? (_vulnerabilityScanStatuses = new InputList<string>());
            set => _vulnerabilityScanStatuses = value;
        }

        /// <summary>
        /// The scan type to use is 'CVE', 'PATCH' or 'IMAGE_PATCH'.
        /// </summary>
        [Input("vulnerabilityScanType")]
        public Input<string>? VulnerabilityScanType { get; set; }

        public GetVulnerabilityScansInvokeArgs()
        {
        }
        public static new GetVulnerabilityScansInvokeArgs Empty => new GetVulnerabilityScansInvokeArgs();
    }


    [OutputType]
    public sealed class GetVulnerabilityScansResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// A user-friendly name. It does not have to be unique, and it is changeable.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetVulnerabilityScansFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? TimeCreatedGreaterThan;
        public readonly string? TimeEndedLessThan;
        /// <summary>
        /// The list of vulnerability_scan_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetVulnerabilityScansVulnerabilityScanCollectionResult> VulnerabilityScanCollections;
        public readonly string? VulnerabilityScanId;
        /// <summary>
        /// The status of the vulnerability scan.
        /// </summary>
        public readonly ImmutableArray<string> VulnerabilityScanStatuses;
        /// <summary>
        /// Scan type is CVE, PATCH or IMAGE_PATCH
        /// </summary>
        public readonly string? VulnerabilityScanType;

        [OutputConstructor]
        private GetVulnerabilityScansResult(
            string? compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetVulnerabilityScansFilterResult> filters,

            string id,

            string? timeCreatedGreaterThan,

            string? timeEndedLessThan,

            ImmutableArray<Outputs.GetVulnerabilityScansVulnerabilityScanCollectionResult> vulnerabilityScanCollections,

            string? vulnerabilityScanId,

            ImmutableArray<string> vulnerabilityScanStatuses,

            string? vulnerabilityScanType)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            TimeCreatedGreaterThan = timeCreatedGreaterThan;
            TimeEndedLessThan = timeEndedLessThan;
            VulnerabilityScanCollections = vulnerabilityScanCollections;
            VulnerabilityScanId = vulnerabilityScanId;
            VulnerabilityScanStatuses = vulnerabilityScanStatuses;
            VulnerabilityScanType = vulnerabilityScanType;
        }
    }
}
