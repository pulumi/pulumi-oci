// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DelegateAccessControl
{
    public static class GetDelegatedResourceAccessRequest
    {
        /// <summary>
        /// This data source provides details about a specific Delegated Resource Access Request resource in Oracle Cloud Infrastructure Delegate Access Control service.
        /// 
        /// Gets details of a Delegated Resource Access Request.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDelegatedResourceAccessRequest = Oci.DelegateAccessControl.GetDelegatedResourceAccessRequest.Invoke(new()
        ///     {
        ///         DelegatedResourceAccessRequestId = testDelegatedResourceAccessRequestOciDelegateAccessControlDelegatedResourceAccessRequest.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetDelegatedResourceAccessRequestResult> InvokeAsync(GetDelegatedResourceAccessRequestArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDelegatedResourceAccessRequestResult>("oci:DelegateAccessControl/getDelegatedResourceAccessRequest:getDelegatedResourceAccessRequest", args ?? new GetDelegatedResourceAccessRequestArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Delegated Resource Access Request resource in Oracle Cloud Infrastructure Delegate Access Control service.
        /// 
        /// Gets details of a Delegated Resource Access Request.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDelegatedResourceAccessRequest = Oci.DelegateAccessControl.GetDelegatedResourceAccessRequest.Invoke(new()
        ///     {
        ///         DelegatedResourceAccessRequestId = testDelegatedResourceAccessRequestOciDelegateAccessControlDelegatedResourceAccessRequest.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDelegatedResourceAccessRequestResult> Invoke(GetDelegatedResourceAccessRequestInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDelegatedResourceAccessRequestResult>("oci:DelegateAccessControl/getDelegatedResourceAccessRequest:getDelegatedResourceAccessRequest", args ?? new GetDelegatedResourceAccessRequestInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Delegated Resource Access Request resource in Oracle Cloud Infrastructure Delegate Access Control service.
        /// 
        /// Gets details of a Delegated Resource Access Request.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDelegatedResourceAccessRequest = Oci.DelegateAccessControl.GetDelegatedResourceAccessRequest.Invoke(new()
        ///     {
        ///         DelegatedResourceAccessRequestId = testDelegatedResourceAccessRequestOciDelegateAccessControlDelegatedResourceAccessRequest.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDelegatedResourceAccessRequestResult> Invoke(GetDelegatedResourceAccessRequestInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDelegatedResourceAccessRequestResult>("oci:DelegateAccessControl/getDelegatedResourceAccessRequest:getDelegatedResourceAccessRequest", args ?? new GetDelegatedResourceAccessRequestInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDelegatedResourceAccessRequestArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique Delegated Resource Access Request identifier
        /// </summary>
        [Input("delegatedResourceAccessRequestId", required: true)]
        public string DelegatedResourceAccessRequestId { get; set; } = null!;

        public GetDelegatedResourceAccessRequestArgs()
        {
        }
        public static new GetDelegatedResourceAccessRequestArgs Empty => new GetDelegatedResourceAccessRequestArgs();
    }

    public sealed class GetDelegatedResourceAccessRequestInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique Delegated Resource Access Request identifier
        /// </summary>
        [Input("delegatedResourceAccessRequestId", required: true)]
        public Input<string> DelegatedResourceAccessRequestId { get; set; } = null!;

        public GetDelegatedResourceAccessRequestInvokeArgs()
        {
        }
        public static new GetDelegatedResourceAccessRequestInvokeArgs Empty => new GetDelegatedResourceAccessRequestInvokeArgs();
    }


    [OutputType]
    public sealed class GetDelegatedResourceAccessRequestResult
    {
        /// <summary>
        /// In case of single approval, this will have only one item. Else, a list of approvals.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDelegatedResourceAccessRequestApprovalInfoResult> ApprovalInfos;
        /// <summary>
        /// Specifies the type of auditing to be enabled. There are two levels of auditing: command-level and keystroke-level.  By default, both command-level and keystroke-level auditing are enabled, i.e. commands and key strokes issued by the support operator are logged.
        /// </summary>
        public readonly ImmutableArray<string> AuditTypes;
        /// <summary>
        /// The comment entered by the support operator while closing the request.
        /// </summary>
        public readonly string ClosureComment;
        /// <summary>
        /// The OCID of the compartment that contains the Delegated Resource Access Request.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// List of Database unique names for which access is requested. This parameter is required for DLGT_MGMT_SYS_MAINT_ACCESS cage when database access in needed.
        /// </summary>
        public readonly ImmutableArray<string> DatabaseNameLists;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        public readonly string DelegatedResourceAccessRequestId;
        /// <summary>
        /// The OCID of the Delegation Control governing the target resource.
        /// </summary>
        public readonly string DelegationControlId;
        /// <summary>
        /// List of Delegation Subscription OCID that are associated with this Delegated Resource Access Request based on the service types being requested.
        /// </summary>
        public readonly ImmutableArray<string> DelegationSubscriptionIds;
        /// <summary>
        /// Detailed description of this Delegated Resource Access Request.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Display name. This is generated by the system automatically.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Duration in hours for which access is sought on the target resource.
        /// </summary>
        public readonly int DurationInHours;
        /// <summary>
        /// Duration in hours for which extension access is sought on the target resource.
        /// </summary>
        public readonly int ExtendDurationInHours;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Set to true if the request is approved automatically based on preApprovedServiceProviderActionNames or isAutoApproveDuringMaintenance in the associated Delegation Control.
        /// </summary>
        public readonly bool IsAutoApproved;
        /// <summary>
        /// Indicates if the delegated resource access request is waiting on more information from the operator
        /// </summary>
        public readonly bool IsPendingMoreInfo;
        /// <summary>
        /// Description of the current lifecycle state in more detail.
        /// </summary>
        public readonly string LifecycleStateDetails;
        /// <summary>
        /// Number of extension approvals that have been obtained so far.
        /// </summary>
        public readonly int NumExtensionApprovals;
        /// <summary>
        /// Number of initial approvals that have been obtained so far.
        /// </summary>
        public readonly int NumInitialApprovals;
        /// <summary>
        /// List of Service Provider Service Types being provided by the support operator user.
        /// </summary>
        public readonly ImmutableArray<string> ProvidedServiceTypes;
        /// <summary>
        /// A short description explaining why this Delegated Resource Access Request is needed by the support operator.
        /// </summary>
        public readonly string ReasonForRequest;
        /// <summary>
        /// The current status of the Delegated Resource Access Request.
        /// </summary>
        public readonly string RequestStatus;
        /// <summary>
        /// List of Service Provider Action names for which approval is sought by the support operator user. The list of pre-defined Service Provider Actions can be obtained from the ListServiceProviderActions API.
        /// </summary>
        public readonly ImmutableArray<string> RequestedActionNames;
        /// <summary>
        /// Requester type
        /// </summary>
        public readonly string RequesterType;
        /// <summary>
        /// The OCID of the target resource associated with the Delegated Resource Access Request. The support operator raises a Delegated Resource Access Request to get approval to  access the target resource.
        /// </summary>
        public readonly string ResourceId;
        /// <summary>
        /// The name of the target resource associated with the Delegated Resource Access Request. The support operator raises a Delegated Resource Access Request to get approval to  access the target resource.
        /// </summary>
        public readonly string ResourceName;
        /// <summary>
        /// Resource type for which the associated Delegation Control is applicable to.
        /// </summary>
        public readonly string ResourceType;
        /// <summary>
        /// Priority assigned to the Delegated Resource Access Request by the support operator
        /// </summary>
        public readonly string Severity;
        /// <summary>
        /// The current lifecycle state of the Delegated Resource Access Request.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// A list of ticket numbers related to this Delegated Resource Access Request, e.g. Service Request (SR) number and JIRA ticket number.
        /// </summary>
        public readonly ImmutableArray<string> TicketNumbers;
        /// <summary>
        /// Requested access start time in UTC.
        /// </summary>
        public readonly string TimeAccessRequested;
        /// <summary>
        /// Time when the Delegated Resource Access Request was created in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format, e.g. '2020-05-22T21:10:29.600Z'.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// Time when the Delegated Resource Access Request was last modified in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format, e.g. '2020-05-22T21:10:29.600Z'.
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetDelegatedResourceAccessRequestResult(
            ImmutableArray<Outputs.GetDelegatedResourceAccessRequestApprovalInfoResult> approvalInfos,

            ImmutableArray<string> auditTypes,

            string closureComment,

            string compartmentId,

            ImmutableArray<string> databaseNameLists,

            ImmutableDictionary<string, string> definedTags,

            string delegatedResourceAccessRequestId,

            string delegationControlId,

            ImmutableArray<string> delegationSubscriptionIds,

            string description,

            string displayName,

            int durationInHours,

            int extendDurationInHours,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            bool isAutoApproved,

            bool isPendingMoreInfo,

            string lifecycleStateDetails,

            int numExtensionApprovals,

            int numInitialApprovals,

            ImmutableArray<string> providedServiceTypes,

            string reasonForRequest,

            string requestStatus,

            ImmutableArray<string> requestedActionNames,

            string requesterType,

            string resourceId,

            string resourceName,

            string resourceType,

            string severity,

            string state,

            ImmutableDictionary<string, string> systemTags,

            ImmutableArray<string> ticketNumbers,

            string timeAccessRequested,

            string timeCreated,

            string timeUpdated)
        {
            ApprovalInfos = approvalInfos;
            AuditTypes = auditTypes;
            ClosureComment = closureComment;
            CompartmentId = compartmentId;
            DatabaseNameLists = databaseNameLists;
            DefinedTags = definedTags;
            DelegatedResourceAccessRequestId = delegatedResourceAccessRequestId;
            DelegationControlId = delegationControlId;
            DelegationSubscriptionIds = delegationSubscriptionIds;
            Description = description;
            DisplayName = displayName;
            DurationInHours = durationInHours;
            ExtendDurationInHours = extendDurationInHours;
            FreeformTags = freeformTags;
            Id = id;
            IsAutoApproved = isAutoApproved;
            IsPendingMoreInfo = isPendingMoreInfo;
            LifecycleStateDetails = lifecycleStateDetails;
            NumExtensionApprovals = numExtensionApprovals;
            NumInitialApprovals = numInitialApprovals;
            ProvidedServiceTypes = providedServiceTypes;
            ReasonForRequest = reasonForRequest;
            RequestStatus = requestStatus;
            RequestedActionNames = requestedActionNames;
            RequesterType = requesterType;
            ResourceId = resourceId;
            ResourceName = resourceName;
            ResourceType = resourceType;
            Severity = severity;
            State = state;
            SystemTags = systemTags;
            TicketNumbers = ticketNumbers;
            TimeAccessRequested = timeAccessRequested;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
