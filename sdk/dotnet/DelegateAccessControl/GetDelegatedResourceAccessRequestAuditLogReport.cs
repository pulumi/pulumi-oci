// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DelegateAccessControl
{
    public static class GetDelegatedResourceAccessRequestAuditLogReport
    {
        /// <summary>
        /// This data source provides details about a specific Delegated Resource Access Request Audit Log Report resource in Oracle Cloud Infrastructure Delegate Access Control service.
        /// 
        /// Gets the audit log report for the given Delegated Resource Access Request.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDelegatedResourceAccessRequestAuditLogReport = Oci.DelegateAccessControl.GetDelegatedResourceAccessRequestAuditLogReport.Invoke(new()
        ///     {
        ///         DelegatedResourceAccessRequestId = testDelegatedResourceAccessRequest.Id,
        ///         IsProcessTreeEnabled = delegatedResourceAccessRequestAuditLogReportIsProcessTreeEnabled,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetDelegatedResourceAccessRequestAuditLogReportResult> InvokeAsync(GetDelegatedResourceAccessRequestAuditLogReportArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDelegatedResourceAccessRequestAuditLogReportResult>("oci:DelegateAccessControl/getDelegatedResourceAccessRequestAuditLogReport:getDelegatedResourceAccessRequestAuditLogReport", args ?? new GetDelegatedResourceAccessRequestAuditLogReportArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Delegated Resource Access Request Audit Log Report resource in Oracle Cloud Infrastructure Delegate Access Control service.
        /// 
        /// Gets the audit log report for the given Delegated Resource Access Request.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDelegatedResourceAccessRequestAuditLogReport = Oci.DelegateAccessControl.GetDelegatedResourceAccessRequestAuditLogReport.Invoke(new()
        ///     {
        ///         DelegatedResourceAccessRequestId = testDelegatedResourceAccessRequest.Id,
        ///         IsProcessTreeEnabled = delegatedResourceAccessRequestAuditLogReportIsProcessTreeEnabled,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDelegatedResourceAccessRequestAuditLogReportResult> Invoke(GetDelegatedResourceAccessRequestAuditLogReportInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDelegatedResourceAccessRequestAuditLogReportResult>("oci:DelegateAccessControl/getDelegatedResourceAccessRequestAuditLogReport:getDelegatedResourceAccessRequestAuditLogReport", args ?? new GetDelegatedResourceAccessRequestAuditLogReportInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Delegated Resource Access Request Audit Log Report resource in Oracle Cloud Infrastructure Delegate Access Control service.
        /// 
        /// Gets the audit log report for the given Delegated Resource Access Request.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDelegatedResourceAccessRequestAuditLogReport = Oci.DelegateAccessControl.GetDelegatedResourceAccessRequestAuditLogReport.Invoke(new()
        ///     {
        ///         DelegatedResourceAccessRequestId = testDelegatedResourceAccessRequest.Id,
        ///         IsProcessTreeEnabled = delegatedResourceAccessRequestAuditLogReportIsProcessTreeEnabled,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDelegatedResourceAccessRequestAuditLogReportResult> Invoke(GetDelegatedResourceAccessRequestAuditLogReportInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDelegatedResourceAccessRequestAuditLogReportResult>("oci:DelegateAccessControl/getDelegatedResourceAccessRequestAuditLogReport:getDelegatedResourceAccessRequestAuditLogReport", args ?? new GetDelegatedResourceAccessRequestAuditLogReportInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDelegatedResourceAccessRequestAuditLogReportArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique Delegated Resource Access Request identifier
        /// </summary>
        [Input("delegatedResourceAccessRequestId", required: true)]
        public string DelegatedResourceAccessRequestId { get; set; } = null!;

        /// <summary>
        /// Set to true to enable process tree computation in audit report
        /// </summary>
        [Input("isProcessTreeEnabled")]
        public bool? IsProcessTreeEnabled { get; set; }

        public GetDelegatedResourceAccessRequestAuditLogReportArgs()
        {
        }
        public static new GetDelegatedResourceAccessRequestAuditLogReportArgs Empty => new GetDelegatedResourceAccessRequestAuditLogReportArgs();
    }

    public sealed class GetDelegatedResourceAccessRequestAuditLogReportInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique Delegated Resource Access Request identifier
        /// </summary>
        [Input("delegatedResourceAccessRequestId", required: true)]
        public Input<string> DelegatedResourceAccessRequestId { get; set; } = null!;

        /// <summary>
        /// Set to true to enable process tree computation in audit report
        /// </summary>
        [Input("isProcessTreeEnabled")]
        public Input<bool>? IsProcessTreeEnabled { get; set; }

        public GetDelegatedResourceAccessRequestAuditLogReportInvokeArgs()
        {
        }
        public static new GetDelegatedResourceAccessRequestAuditLogReportInvokeArgs Empty => new GetDelegatedResourceAccessRequestAuditLogReportInvokeArgs();
    }


    [OutputType]
    public sealed class GetDelegatedResourceAccessRequestAuditLogReportResult
    {
        /// <summary>
        /// Status of the audit report
        /// </summary>
        public readonly string AuditReportStatus;
        public readonly string DelegatedResourceAccessRequestId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool? IsProcessTreeEnabled;
        /// <summary>
        /// The process tree data
        /// </summary>
        public readonly string ProcessTree;
        /// <summary>
        /// Audit log report.
        /// </summary>
        public readonly string Report;
        /// <summary>
        /// Time when the audit report was generated [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, e.g. '2020-05-22T21:10:29.600Z'
        /// </summary>
        public readonly string TimeReportGenerated;

        [OutputConstructor]
        private GetDelegatedResourceAccessRequestAuditLogReportResult(
            string auditReportStatus,

            string delegatedResourceAccessRequestId,

            string id,

            bool? isProcessTreeEnabled,

            string processTree,

            string report,

            string timeReportGenerated)
        {
            AuditReportStatus = auditReportStatus;
            DelegatedResourceAccessRequestId = delegatedResourceAccessRequestId;
            Id = id;
            IsProcessTreeEnabled = isProcessTreeEnabled;
            ProcessTree = processTree;
            Report = report;
            TimeReportGenerated = timeReportGenerated;
        }
    }
}
