// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DelegateAccessControl
{
    public static class GetDelegatedResourceAccessRequests
    {
        /// <summary>
        /// This data source provides the list of Delegated Resource Access Requests in Oracle Cloud Infrastructure Delegate Access Control service.
        /// 
        /// Lists all Delegated Resource Access Requests in the compartment. Note that only one of lifecycleState or requestStatus query parameter can be used.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDelegatedResourceAccessRequests = Oci.DelegateAccessControl.GetDelegatedResourceAccessRequests.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DelegationControlId = testDelegationControl.Id,
        ///         RequestStatus = delegatedResourceAccessRequestRequestStatus,
        ///         ResourceId = testResource.Id,
        ///         State = delegatedResourceAccessRequestState,
        ///         TimeEnd = delegatedResourceAccessRequestTimeEnd,
        ///         TimeStart = delegatedResourceAccessRequestTimeStart,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetDelegatedResourceAccessRequestsResult> InvokeAsync(GetDelegatedResourceAccessRequestsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDelegatedResourceAccessRequestsResult>("oci:DelegateAccessControl/getDelegatedResourceAccessRequests:getDelegatedResourceAccessRequests", args ?? new GetDelegatedResourceAccessRequestsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Delegated Resource Access Requests in Oracle Cloud Infrastructure Delegate Access Control service.
        /// 
        /// Lists all Delegated Resource Access Requests in the compartment. Note that only one of lifecycleState or requestStatus query parameter can be used.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDelegatedResourceAccessRequests = Oci.DelegateAccessControl.GetDelegatedResourceAccessRequests.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DelegationControlId = testDelegationControl.Id,
        ///         RequestStatus = delegatedResourceAccessRequestRequestStatus,
        ///         ResourceId = testResource.Id,
        ///         State = delegatedResourceAccessRequestState,
        ///         TimeEnd = delegatedResourceAccessRequestTimeEnd,
        ///         TimeStart = delegatedResourceAccessRequestTimeStart,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDelegatedResourceAccessRequestsResult> Invoke(GetDelegatedResourceAccessRequestsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDelegatedResourceAccessRequestsResult>("oci:DelegateAccessControl/getDelegatedResourceAccessRequests:getDelegatedResourceAccessRequests", args ?? new GetDelegatedResourceAccessRequestsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Delegated Resource Access Requests in Oracle Cloud Infrastructure Delegate Access Control service.
        /// 
        /// Lists all Delegated Resource Access Requests in the compartment. Note that only one of lifecycleState or requestStatus query parameter can be used.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDelegatedResourceAccessRequests = Oci.DelegateAccessControl.GetDelegatedResourceAccessRequests.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DelegationControlId = testDelegationControl.Id,
        ///         RequestStatus = delegatedResourceAccessRequestRequestStatus,
        ///         ResourceId = testResource.Id,
        ///         State = delegatedResourceAccessRequestState,
        ///         TimeEnd = delegatedResourceAccessRequestTimeEnd,
        ///         TimeStart = delegatedResourceAccessRequestTimeStart,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDelegatedResourceAccessRequestsResult> Invoke(GetDelegatedResourceAccessRequestsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDelegatedResourceAccessRequestsResult>("oci:DelegateAccessControl/getDelegatedResourceAccessRequests:getDelegatedResourceAccessRequests", args ?? new GetDelegatedResourceAccessRequestsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDelegatedResourceAccessRequestsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// unique Delegation Control identifier
        /// </summary>
        [Input("delegationControlId")]
        public string? DelegationControlId { get; set; }

        [Input("filters")]
        private List<Inputs.GetDelegatedResourceAccessRequestsFilterArgs>? _filters;
        public List<Inputs.GetDelegatedResourceAccessRequestsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetDelegatedResourceAccessRequestsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only Delegated Resource Access Requests whose status matches the given Delegated Resource Access Request status.
        /// </summary>
        [Input("requestStatus")]
        public string? RequestStatus { get; set; }

        /// <summary>
        /// A filter to return only Delegated Resource Access Requests for the given resource identifier.
        /// </summary>
        [Input("resourceId")]
        public string? ResourceId { get; set; }

        /// <summary>
        /// A filter to return only Delegated Resource Access Requests whose lifecycleState matches the given Delegated Resource Access Request lifecycleState.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        /// <summary>
        /// Query end time in UTC in ISO 8601 format(inclusive). Example 2019-10-30T00:00:00Z (yyyy-MM-ddThh:mm:ssZ). timeIntervalStart and timeIntervalEnd parameters cannot be used together.
        /// </summary>
        [Input("timeEnd")]
        public string? TimeEnd { get; set; }

        /// <summary>
        /// Query start time in UTC in ISO 8601 format(inclusive). Example 2019-10-30T00:00:00Z (yyyy-MM-ddThh:mm:ssZ). timeIntervalStart and timeIntervalEnd parameters cannot be used together.
        /// </summary>
        [Input("timeStart")]
        public string? TimeStart { get; set; }

        public GetDelegatedResourceAccessRequestsArgs()
        {
        }
        public static new GetDelegatedResourceAccessRequestsArgs Empty => new GetDelegatedResourceAccessRequestsArgs();
    }

    public sealed class GetDelegatedResourceAccessRequestsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// unique Delegation Control identifier
        /// </summary>
        [Input("delegationControlId")]
        public Input<string>? DelegationControlId { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetDelegatedResourceAccessRequestsFilterInputArgs>? _filters;
        public InputList<Inputs.GetDelegatedResourceAccessRequestsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetDelegatedResourceAccessRequestsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only Delegated Resource Access Requests whose status matches the given Delegated Resource Access Request status.
        /// </summary>
        [Input("requestStatus")]
        public Input<string>? RequestStatus { get; set; }

        /// <summary>
        /// A filter to return only Delegated Resource Access Requests for the given resource identifier.
        /// </summary>
        [Input("resourceId")]
        public Input<string>? ResourceId { get; set; }

        /// <summary>
        /// A filter to return only Delegated Resource Access Requests whose lifecycleState matches the given Delegated Resource Access Request lifecycleState.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// Query end time in UTC in ISO 8601 format(inclusive). Example 2019-10-30T00:00:00Z (yyyy-MM-ddThh:mm:ssZ). timeIntervalStart and timeIntervalEnd parameters cannot be used together.
        /// </summary>
        [Input("timeEnd")]
        public Input<string>? TimeEnd { get; set; }

        /// <summary>
        /// Query start time in UTC in ISO 8601 format(inclusive). Example 2019-10-30T00:00:00Z (yyyy-MM-ddThh:mm:ssZ). timeIntervalStart and timeIntervalEnd parameters cannot be used together.
        /// </summary>
        [Input("timeStart")]
        public Input<string>? TimeStart { get; set; }

        public GetDelegatedResourceAccessRequestsInvokeArgs()
        {
        }
        public static new GetDelegatedResourceAccessRequestsInvokeArgs Empty => new GetDelegatedResourceAccessRequestsInvokeArgs();
    }


    [OutputType]
    public sealed class GetDelegatedResourceAccessRequestsResult
    {
        /// <summary>
        /// The OCID of the compartment that contains the Delegated Resource Access Request.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The list of delegated_resource_access_request_summary_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollectionResult> DelegatedResourceAccessRequestSummaryCollections;
        /// <summary>
        /// The OCID of the Delegation Control governing the target resource.
        /// </summary>
        public readonly string? DelegationControlId;
        public readonly ImmutableArray<Outputs.GetDelegatedResourceAccessRequestsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The current status of the Delegated Resource Access Request.
        /// </summary>
        public readonly string? RequestStatus;
        /// <summary>
        /// The OCID of the target resource associated with the Delegated Resource Access Request. The support operator raises a Delegated Resource Access Request to get approval to  access the target resource.
        /// </summary>
        public readonly string? ResourceId;
        /// <summary>
        /// The current lifecycle state of the Delegated Resource Access Request.
        /// </summary>
        public readonly string? State;
        public readonly string? TimeEnd;
        public readonly string? TimeStart;

        [OutputConstructor]
        private GetDelegatedResourceAccessRequestsResult(
            string compartmentId,

            ImmutableArray<Outputs.GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollectionResult> delegatedResourceAccessRequestSummaryCollections,

            string? delegationControlId,

            ImmutableArray<Outputs.GetDelegatedResourceAccessRequestsFilterResult> filters,

            string id,

            string? requestStatus,

            string? resourceId,

            string? state,

            string? timeEnd,

            string? timeStart)
        {
            CompartmentId = compartmentId;
            DelegatedResourceAccessRequestSummaryCollections = delegatedResourceAccessRequestSummaryCollections;
            DelegationControlId = delegationControlId;
            Filters = filters;
            Id = id;
            RequestStatus = requestStatus;
            ResourceId = resourceId;
            State = state;
            TimeEnd = timeEnd;
            TimeStart = timeStart;
        }
    }
}
