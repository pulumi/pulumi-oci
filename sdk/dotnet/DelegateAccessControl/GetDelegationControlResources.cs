// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DelegateAccessControl
{
    public static class GetDelegationControlResources
    {
        /// <summary>
        /// This data source provides the list of Delegation Control Resources in Oracle Cloud Infrastructure Delegate Access Control service.
        /// 
        /// Returns a list of resources associated with the Delegation Control.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDelegationControlResources = Oci.DelegateAccessControl.GetDelegationControlResources.Invoke(new()
        ///     {
        ///         DelegationControlId = testDelegationControl.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetDelegationControlResourcesResult> InvokeAsync(GetDelegationControlResourcesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDelegationControlResourcesResult>("oci:DelegateAccessControl/getDelegationControlResources:getDelegationControlResources", args ?? new GetDelegationControlResourcesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Delegation Control Resources in Oracle Cloud Infrastructure Delegate Access Control service.
        /// 
        /// Returns a list of resources associated with the Delegation Control.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDelegationControlResources = Oci.DelegateAccessControl.GetDelegationControlResources.Invoke(new()
        ///     {
        ///         DelegationControlId = testDelegationControl.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDelegationControlResourcesResult> Invoke(GetDelegationControlResourcesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDelegationControlResourcesResult>("oci:DelegateAccessControl/getDelegationControlResources:getDelegationControlResources", args ?? new GetDelegationControlResourcesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDelegationControlResourcesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// unique Delegation Control identifier
        /// </summary>
        [Input("delegationControlId", required: true)]
        public string DelegationControlId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetDelegationControlResourcesFilterArgs>? _filters;
        public List<Inputs.GetDelegationControlResourcesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetDelegationControlResourcesFilterArgs>());
            set => _filters = value;
        }

        public GetDelegationControlResourcesArgs()
        {
        }
        public static new GetDelegationControlResourcesArgs Empty => new GetDelegationControlResourcesArgs();
    }

    public sealed class GetDelegationControlResourcesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// unique Delegation Control identifier
        /// </summary>
        [Input("delegationControlId", required: true)]
        public Input<string> DelegationControlId { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetDelegationControlResourcesFilterInputArgs>? _filters;
        public InputList<Inputs.GetDelegationControlResourcesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetDelegationControlResourcesFilterInputArgs>());
            set => _filters = value;
        }

        public GetDelegationControlResourcesInvokeArgs()
        {
        }
        public static new GetDelegationControlResourcesInvokeArgs Empty => new GetDelegationControlResourcesInvokeArgs();
    }


    [OutputType]
    public sealed class GetDelegationControlResourcesResult
    {
        public readonly string DelegationControlId;
        /// <summary>
        /// The list of delegation_control_resource_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDelegationControlResourcesDelegationControlResourceCollectionResult> DelegationControlResourceCollections;
        public readonly ImmutableArray<Outputs.GetDelegationControlResourcesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetDelegationControlResourcesResult(
            string delegationControlId,

            ImmutableArray<Outputs.GetDelegationControlResourcesDelegationControlResourceCollectionResult> delegationControlResourceCollections,

            ImmutableArray<Outputs.GetDelegationControlResourcesFilterResult> filters,

            string id)
        {
            DelegationControlId = delegationControlId;
            DelegationControlResourceCollections = delegationControlResourceCollections;
            Filters = filters;
            Id = id;
        }
    }
}
