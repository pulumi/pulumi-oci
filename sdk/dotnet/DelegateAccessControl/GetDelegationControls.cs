// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DelegateAccessControl
{
    public static class GetDelegationControls
    {
        /// <summary>
        /// This data source provides the list of Delegation Controls in Oracle Cloud Infrastructure Delegate Access Control service.
        /// 
        /// Lists the Delegation Controls in the compartment.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDelegationControls = Oci.DelegateAccessControl.GetDelegationControls.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = delegationControlDisplayName,
        ///         ResourceId = testResource.Id,
        ///         ResourceType = delegationControlResourceType,
        ///         State = delegationControlState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetDelegationControlsResult> InvokeAsync(GetDelegationControlsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDelegationControlsResult>("oci:DelegateAccessControl/getDelegationControls:getDelegationControls", args ?? new GetDelegationControlsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Delegation Controls in Oracle Cloud Infrastructure Delegate Access Control service.
        /// 
        /// Lists the Delegation Controls in the compartment.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDelegationControls = Oci.DelegateAccessControl.GetDelegationControls.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = delegationControlDisplayName,
        ///         ResourceId = testResource.Id,
        ///         ResourceType = delegationControlResourceType,
        ///         State = delegationControlState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDelegationControlsResult> Invoke(GetDelegationControlsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDelegationControlsResult>("oci:DelegateAccessControl/getDelegationControls:getDelegationControls", args ?? new GetDelegationControlsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Delegation Controls in Oracle Cloud Infrastructure Delegate Access Control service.
        /// 
        /// Lists the Delegation Controls in the compartment.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDelegationControls = Oci.DelegateAccessControl.GetDelegationControls.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = delegationControlDisplayName,
        ///         ResourceId = testResource.Id,
        ///         ResourceType = delegationControlResourceType,
        ///         State = delegationControlState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDelegationControlsResult> Invoke(GetDelegationControlsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDelegationControlsResult>("oci:DelegateAccessControl/getDelegationControls:getDelegationControls", args ?? new GetDelegationControlsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDelegationControlsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return Delegation Control resources that match the given display name.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetDelegationControlsFilterArgs>? _filters;
        public List<Inputs.GetDelegationControlsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetDelegationControlsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return Delegation Control resources that match the given resource ID.
        /// </summary>
        [Input("resourceId")]
        public string? ResourceId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given resource type.
        /// </summary>
        [Input("resourceType")]
        public string? ResourceType { get; set; }

        /// <summary>
        /// A filter to return only Delegation Control resources whose lifecycleState matches the given Delegation Control lifecycle state.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetDelegationControlsArgs()
        {
        }
        public static new GetDelegationControlsArgs Empty => new GetDelegationControlsArgs();
    }

    public sealed class GetDelegationControlsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return Delegation Control resources that match the given display name.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetDelegationControlsFilterInputArgs>? _filters;
        public InputList<Inputs.GetDelegationControlsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetDelegationControlsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return Delegation Control resources that match the given resource ID.
        /// </summary>
        [Input("resourceId")]
        public Input<string>? ResourceId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given resource type.
        /// </summary>
        [Input("resourceType")]
        public Input<string>? ResourceType { get; set; }

        /// <summary>
        /// A filter to return only Delegation Control resources whose lifecycleState matches the given Delegation Control lifecycle state.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetDelegationControlsInvokeArgs()
        {
        }
        public static new GetDelegationControlsInvokeArgs Empty => new GetDelegationControlsInvokeArgs();
    }


    [OutputType]
    public sealed class GetDelegationControlsResult
    {
        /// <summary>
        /// The OCID of the compartment that contains the Delegation Control.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The list of delegation_control_summary_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDelegationControlsDelegationControlSummaryCollectionResult> DelegationControlSummaryCollections;
        /// <summary>
        /// Name of the Delegation Control. The name does not need to be unique.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetDelegationControlsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? ResourceId;
        /// <summary>
        /// Resource type for which the Delegation Control is applicable to.
        /// </summary>
        public readonly string? ResourceType;
        /// <summary>
        /// The current lifecycle state of the Delegation Control.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetDelegationControlsResult(
            string compartmentId,

            ImmutableArray<Outputs.GetDelegationControlsDelegationControlSummaryCollectionResult> delegationControlSummaryCollections,

            string? displayName,

            ImmutableArray<Outputs.GetDelegationControlsFilterResult> filters,

            string id,

            string? resourceId,

            string? resourceType,

            string? state)
        {
            CompartmentId = compartmentId;
            DelegationControlSummaryCollections = delegationControlSummaryCollections;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            ResourceId = resourceId;
            ResourceType = resourceType;
            State = state;
        }
    }
}
