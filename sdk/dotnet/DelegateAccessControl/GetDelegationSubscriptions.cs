// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DelegateAccessControl
{
    public static class GetDelegationSubscriptions
    {
        /// <summary>
        /// This data source provides the list of Delegation Subscriptions in Oracle Cloud Infrastructure Delegate Access Control service.
        /// 
        /// Lists the Delegation Subscriptions in Delegation Control.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDelegationSubscriptions = Oci.DelegateAccessControl.GetDelegationSubscriptions.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = delegationSubscriptionDisplayName,
        ///         State = delegationSubscriptionState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetDelegationSubscriptionsResult> InvokeAsync(GetDelegationSubscriptionsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDelegationSubscriptionsResult>("oci:DelegateAccessControl/getDelegationSubscriptions:getDelegationSubscriptions", args ?? new GetDelegationSubscriptionsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Delegation Subscriptions in Oracle Cloud Infrastructure Delegate Access Control service.
        /// 
        /// Lists the Delegation Subscriptions in Delegation Control.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDelegationSubscriptions = Oci.DelegateAccessControl.GetDelegationSubscriptions.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = delegationSubscriptionDisplayName,
        ///         State = delegationSubscriptionState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDelegationSubscriptionsResult> Invoke(GetDelegationSubscriptionsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDelegationSubscriptionsResult>("oci:DelegateAccessControl/getDelegationSubscriptions:getDelegationSubscriptions", args ?? new GetDelegationSubscriptionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDelegationSubscriptionsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return Delegation Subscription resources that match the given display name.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetDelegationSubscriptionsFilterArgs>? _filters;
        public List<Inputs.GetDelegationSubscriptionsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetDelegationSubscriptionsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only Delegation Subscription resources whose lifecycleState matches the given Delegation Subscription lifecycle state.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetDelegationSubscriptionsArgs()
        {
        }
        public static new GetDelegationSubscriptionsArgs Empty => new GetDelegationSubscriptionsArgs();
    }

    public sealed class GetDelegationSubscriptionsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return Delegation Subscription resources that match the given display name.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetDelegationSubscriptionsFilterInputArgs>? _filters;
        public InputList<Inputs.GetDelegationSubscriptionsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetDelegationSubscriptionsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only Delegation Subscription resources whose lifecycleState matches the given Delegation Subscription lifecycle state.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetDelegationSubscriptionsInvokeArgs()
        {
        }
        public static new GetDelegationSubscriptionsInvokeArgs Empty => new GetDelegationSubscriptionsInvokeArgs();
    }


    [OutputType]
    public sealed class GetDelegationSubscriptionsResult
    {
        /// <summary>
        /// The OCID of the compartment that contains the Delegation Subscription.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The list of delegation_subscription_summary_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDelegationSubscriptionsDelegationSubscriptionSummaryCollectionResult> DelegationSubscriptionSummaryCollections;
        /// <summary>
        /// Display name
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetDelegationSubscriptionsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The current lifecycle state of the Service Provider.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetDelegationSubscriptionsResult(
            string compartmentId,

            ImmutableArray<Outputs.GetDelegationSubscriptionsDelegationSubscriptionSummaryCollectionResult> delegationSubscriptionSummaryCollections,

            string? displayName,

            ImmutableArray<Outputs.GetDelegationSubscriptionsFilterResult> filters,

            string id,

            string? state)
        {
            CompartmentId = compartmentId;
            DelegationSubscriptionSummaryCollections = delegationSubscriptionSummaryCollections;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            State = state;
        }
    }
}
