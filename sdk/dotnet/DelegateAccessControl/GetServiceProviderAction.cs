// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DelegateAccessControl
{
    public static class GetServiceProviderAction
    {
        /// <summary>
        /// This data source provides details about a specific Service Provider Action resource in Oracle Cloud Infrastructure Delegate Access Control service.
        /// 
        /// Gets the Service Provider Action associated with the specified Service Provider Action ID.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testServiceProviderAction = Oci.DelegateAccessControl.GetServiceProviderAction.Invoke(new()
        ///     {
        ///         ServiceProviderActionId = testServiceProviderActionOciDelegateAccessControlServiceProviderAction.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetServiceProviderActionResult> InvokeAsync(GetServiceProviderActionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetServiceProviderActionResult>("oci:DelegateAccessControl/getServiceProviderAction:getServiceProviderAction", args ?? new GetServiceProviderActionArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Service Provider Action resource in Oracle Cloud Infrastructure Delegate Access Control service.
        /// 
        /// Gets the Service Provider Action associated with the specified Service Provider Action ID.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testServiceProviderAction = Oci.DelegateAccessControl.GetServiceProviderAction.Invoke(new()
        ///     {
        ///         ServiceProviderActionId = testServiceProviderActionOciDelegateAccessControlServiceProviderAction.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetServiceProviderActionResult> Invoke(GetServiceProviderActionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetServiceProviderActionResult>("oci:DelegateAccessControl/getServiceProviderAction:getServiceProviderAction", args ?? new GetServiceProviderActionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetServiceProviderActionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique Oracle supplied identifier associated with the Service Provider Action.
        /// </summary>
        [Input("serviceProviderActionId", required: true)]
        public string ServiceProviderActionId { get; set; } = null!;

        public GetServiceProviderActionArgs()
        {
        }
        public static new GetServiceProviderActionArgs Empty => new GetServiceProviderActionArgs();
    }

    public sealed class GetServiceProviderActionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique Oracle supplied identifier associated with the Service Provider Action.
        /// </summary>
        [Input("serviceProviderActionId", required: true)]
        public Input<string> ServiceProviderActionId { get; set; } = null!;

        public GetServiceProviderActionInvokeArgs()
        {
        }
        public static new GetServiceProviderActionInvokeArgs Empty => new GetServiceProviderActionInvokeArgs();
    }


    [OutputType]
    public sealed class GetServiceProviderActionResult
    {
        /// <summary>
        /// Name of the infrastructure layer associated with the Service Provider Action.
        /// </summary>
        public readonly string Component;
        /// <summary>
        /// Display Name of the Service Provider Action.
        /// </summary>
        public readonly string CustomerDisplayName;
        /// <summary>
        /// Description of the Service Provider Action in terms of associated risk profile, and characteristics of the operating system commands made available to the support operator under this Service Provider Action.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Name of the property
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Fine grained properties associated with the Delegation Control.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetServiceProviderActionPropertyResult> Properties;
        /// <summary>
        /// resourceType for which the ServiceProviderAction is applicable
        /// </summary>
        public readonly string ResourceType;
        public readonly string ServiceProviderActionId;
        /// <summary>
        /// List of Service Provider Service Types that this Service Provider Action is applicable to.
        /// </summary>
        public readonly ImmutableArray<string> ServiceProviderServiceTypes;
        /// <summary>
        /// The current lifecycle state of the Service Provider Action.
        /// </summary>
        public readonly string State;

        [OutputConstructor]
        private GetServiceProviderActionResult(
            string component,

            string customerDisplayName,

            string description,

            string id,

            string name,

            ImmutableArray<Outputs.GetServiceProviderActionPropertyResult> properties,

            string resourceType,

            string serviceProviderActionId,

            ImmutableArray<string> serviceProviderServiceTypes,

            string state)
        {
            Component = component;
            CustomerDisplayName = customerDisplayName;
            Description = description;
            Id = id;
            Name = name;
            Properties = properties;
            ResourceType = resourceType;
            ServiceProviderActionId = serviceProviderActionId;
            ServiceProviderServiceTypes = serviceProviderServiceTypes;
            State = state;
        }
    }
}
