// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Desktops
{
    public static class GetDesktop
    {
        /// <summary>
        /// This data source provides details about a specific Desktop resource in Oracle Cloud Infrastructure Desktops service.
        /// 
        /// Provides information about the desktop with the specified OCID.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDesktop = Oci.Desktops.GetDesktop.Invoke(new()
        ///     {
        ///         DesktopId = testDesktopOciDesktopsDesktop.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetDesktopResult> InvokeAsync(GetDesktopArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDesktopResult>("oci:Desktops/getDesktop:getDesktop", args ?? new GetDesktopArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Desktop resource in Oracle Cloud Infrastructure Desktops service.
        /// 
        /// Provides information about the desktop with the specified OCID.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDesktop = Oci.Desktops.GetDesktop.Invoke(new()
        ///     {
        ///         DesktopId = testDesktopOciDesktopsDesktop.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDesktopResult> Invoke(GetDesktopInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDesktopResult>("oci:Desktops/getDesktop:getDesktop", args ?? new GetDesktopInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Desktop resource in Oracle Cloud Infrastructure Desktops service.
        /// 
        /// Provides information about the desktop with the specified OCID.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDesktop = Oci.Desktops.GetDesktop.Invoke(new()
        ///     {
        ///         DesktopId = testDesktopOciDesktopsDesktop.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDesktopResult> Invoke(GetDesktopInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDesktopResult>("oci:Desktops/getDesktop:getDesktop", args ?? new GetDesktopInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDesktopArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the desktop.
        /// </summary>
        [Input("desktopId", required: true)]
        public string DesktopId { get; set; } = null!;

        public GetDesktopArgs()
        {
        }
        public static new GetDesktopArgs Empty => new GetDesktopArgs();
    }

    public sealed class GetDesktopInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the desktop.
        /// </summary>
        [Input("desktopId", required: true)]
        public Input<string> DesktopId { get; set; } = null!;

        public GetDesktopInvokeArgs()
        {
        }
        public static new GetDesktopInvokeArgs Empty => new GetDesktopInvokeArgs();
    }


    [OutputType]
    public sealed class GetDesktopResult
    {
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        public readonly string DesktopId;
        /// <summary>
        /// Provides the settings for desktop and client device options, such as audio in and out, client drive mapping, and clipboard access.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDesktopDevicePolicyResult> DevicePolicies;
        /// <summary>
        /// A user friendly display name. Avoid entering confidential information.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// Provides information about where a desktop is hosted.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDesktopHostingOptionResult> HostingOptions;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The OCID of the desktop pool the desktop is a member of.
        /// </summary>
        public readonly string PoolId;
        /// <summary>
        /// The state of the desktop.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The date and time the resource was created.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The owner of the desktop.
        /// </summary>
        public readonly string UserName;

        [OutputConstructor]
        private GetDesktopResult(
            ImmutableDictionary<string, string> definedTags,

            string desktopId,

            ImmutableArray<Outputs.GetDesktopDevicePolicyResult> devicePolicies,

            string displayName,

            ImmutableDictionary<string, string> freeformTags,

            ImmutableArray<Outputs.GetDesktopHostingOptionResult> hostingOptions,

            string id,

            string poolId,

            string state,

            string timeCreated,

            string userName)
        {
            DefinedTags = definedTags;
            DesktopId = desktopId;
            DevicePolicies = devicePolicies;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            HostingOptions = hostingOptions;
            Id = id;
            PoolId = poolId;
            State = state;
            TimeCreated = timeCreated;
            UserName = userName;
        }
    }
}
