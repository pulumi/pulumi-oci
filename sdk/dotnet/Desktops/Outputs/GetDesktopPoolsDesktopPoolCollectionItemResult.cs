// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Desktops.Outputs
{

    [OutputType]
    public sealed class GetDesktopPoolsDesktopPoolCollectionItemResult
    {
        /// <summary>
        /// The number of active desktops in the desktop pool.
        /// </summary>
        public readonly int ActiveDesktops;
        /// <summary>
        /// Indicates whether desktop pool users have administrative privileges on their desktop.
        /// </summary>
        public readonly bool ArePrivilegedUsers;
        public readonly bool AreVolumesPreserved;
        /// <summary>
        /// The name of the availability domain.
        /// </summary>
        public readonly string AvailabilityDomain;
        /// <summary>
        /// Provides the start and stop schedule information for desktop availability of the desktop pool.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyResult> AvailabilityPolicies;
        /// <summary>
        /// The OCID of the compartment of the desktop pool.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Contact information of the desktop pool administrator. Avoid entering confidential information.
        /// </summary>
        public readonly string ContactDetails;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// A user friendly description providing additional information about the resource. Avoid entering confidential information.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Provides the settings for desktop and client device options, such as audio in and out, client drive mapping, and clipboard access.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyResult> DevicePolicies;
        /// <summary>
        /// A filter to return only results with the given displayName.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// A filter to return only results with the given OCID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Provides information about the desktop image.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDesktopPoolsDesktopPoolCollectionItemImageResult> Images;
        /// <summary>
        /// Indicates whether storage is enabled for the desktop pool.
        /// </summary>
        public readonly bool IsStorageEnabled;
        /// <summary>
        /// The maximum number of desktops permitted in the desktop pool.
        /// </summary>
        public readonly int MaximumSize;
        /// <summary>
        /// Provides information about the network configuration of the desktop pool.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationResult> NetworkConfigurations;
        /// <summary>
        /// A list of network security groups for the private access.
        /// </summary>
        public readonly ImmutableArray<string> NsgIds;
        /// <summary>
        /// The details of the desktop's private access network connectivity that were used to create the pool.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailResult> PrivateAccessDetails;
        /// <summary>
        /// Action to be triggered on inactivity or disconnect
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionResult> SessionLifecycleActions;
        /// <summary>
        /// The shape configuration used for each desktop compute instance in the desktop pool.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDesktopPoolsDesktopPoolCollectionItemShapeConfigResult> ShapeConfigs;
        /// <summary>
        /// The shape of the desktop pool.
        /// </summary>
        public readonly string ShapeName;
        /// <summary>
        /// The maximum number of standby desktops available in the desktop pool.
        /// </summary>
        public readonly int StandbySize;
        /// <summary>
        /// A filter to return only results with the given lifecycleState.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The backup policy OCID of the storage.
        /// </summary>
        public readonly string StorageBackupPolicyId;
        /// <summary>
        /// The size in GBs of the storage for the desktop pool.
        /// </summary>
        public readonly int StorageSizeInGbs;
        /// <summary>
        /// The date and time the resource was created.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The start time of the desktop pool.
        /// </summary>
        public readonly string TimeStartScheduled;
        /// <summary>
        /// The stop time of the desktop pool.
        /// </summary>
        public readonly string TimeStopScheduled;
        /// <summary>
        /// Indicates whether the desktop pool uses dedicated virtual machine hosts.
        /// </summary>
        public readonly string UseDedicatedVmHost;

        [OutputConstructor]
        private GetDesktopPoolsDesktopPoolCollectionItemResult(
            int activeDesktops,

            bool arePrivilegedUsers,

            bool areVolumesPreserved,

            string availabilityDomain,

            ImmutableArray<Outputs.GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyResult> availabilityPolicies,

            string compartmentId,

            string contactDetails,

            ImmutableDictionary<string, string> definedTags,

            string description,

            ImmutableArray<Outputs.GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyResult> devicePolicies,

            string displayName,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            ImmutableArray<Outputs.GetDesktopPoolsDesktopPoolCollectionItemImageResult> images,

            bool isStorageEnabled,

            int maximumSize,

            ImmutableArray<Outputs.GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationResult> networkConfigurations,

            ImmutableArray<string> nsgIds,

            ImmutableArray<Outputs.GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailResult> privateAccessDetails,

            ImmutableArray<Outputs.GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionResult> sessionLifecycleActions,

            ImmutableArray<Outputs.GetDesktopPoolsDesktopPoolCollectionItemShapeConfigResult> shapeConfigs,

            string shapeName,

            int standbySize,

            string state,

            string storageBackupPolicyId,

            int storageSizeInGbs,

            string timeCreated,

            string timeStartScheduled,

            string timeStopScheduled,

            string useDedicatedVmHost)
        {
            ActiveDesktops = activeDesktops;
            ArePrivilegedUsers = arePrivilegedUsers;
            AreVolumesPreserved = areVolumesPreserved;
            AvailabilityDomain = availabilityDomain;
            AvailabilityPolicies = availabilityPolicies;
            CompartmentId = compartmentId;
            ContactDetails = contactDetails;
            DefinedTags = definedTags;
            Description = description;
            DevicePolicies = devicePolicies;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            Images = images;
            IsStorageEnabled = isStorageEnabled;
            MaximumSize = maximumSize;
            NetworkConfigurations = networkConfigurations;
            NsgIds = nsgIds;
            PrivateAccessDetails = privateAccessDetails;
            SessionLifecycleActions = sessionLifecycleActions;
            ShapeConfigs = shapeConfigs;
            ShapeName = shapeName;
            StandbySize = standbySize;
            State = state;
            StorageBackupPolicyId = storageBackupPolicyId;
            StorageSizeInGbs = storageSizeInGbs;
            TimeCreated = timeCreated;
            TimeStartScheduled = timeStartScheduled;
            TimeStopScheduled = timeStopScheduled;
            UseDedicatedVmHost = useDedicatedVmHost;
        }
    }
}
