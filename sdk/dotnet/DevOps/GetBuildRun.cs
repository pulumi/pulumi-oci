// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DevOps
{
    public static class GetBuildRun
    {
        /// <summary>
        /// This data source provides details about a specific Build Run resource in Oracle Cloud Infrastructure Devops service.
        /// 
        /// Returns the details of a build run for a given build run ID.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testBuildRun = Oci.DevOps.GetBuildRun.Invoke(new()
        ///     {
        ///         BuildRunId = testBuildRunOciDevopsBuildRun.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetBuildRunResult> InvokeAsync(GetBuildRunArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBuildRunResult>("oci:DevOps/getBuildRun:getBuildRun", args ?? new GetBuildRunArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Build Run resource in Oracle Cloud Infrastructure Devops service.
        /// 
        /// Returns the details of a build run for a given build run ID.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testBuildRun = Oci.DevOps.GetBuildRun.Invoke(new()
        ///     {
        ///         BuildRunId = testBuildRunOciDevopsBuildRun.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetBuildRunResult> Invoke(GetBuildRunInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBuildRunResult>("oci:DevOps/getBuildRun:getBuildRun", args ?? new GetBuildRunInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBuildRunArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique build run identifier.
        /// </summary>
        [Input("buildRunId", required: true)]
        public string BuildRunId { get; set; } = null!;

        public GetBuildRunArgs()
        {
        }
        public static new GetBuildRunArgs Empty => new GetBuildRunArgs();
    }

    public sealed class GetBuildRunInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique build run identifier.
        /// </summary>
        [Input("buildRunId", required: true)]
        public Input<string> BuildRunId { get; set; } = null!;

        public GetBuildRunInvokeArgs()
        {
        }
        public static new GetBuildRunInvokeArgs Empty => new GetBuildRunInvokeArgs();
    }


    [OutputType]
    public sealed class GetBuildRunResult
    {
        /// <summary>
        /// Outputs from the build.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBuildRunBuildOutputResult> BuildOutputs;
        /// <summary>
        /// The OCID of the build pipeline to be triggered.
        /// </summary>
        public readonly string BuildPipelineId;
        /// <summary>
        /// Specifies list of arguments passed along with the build run.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBuildRunBuildRunArgumentResult> BuildRunArguments;
        public readonly string BuildRunId;
        /// <summary>
        /// The run progress details of a build run.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBuildRunBuildRunProgressResult> BuildRunProgresses;
        /// <summary>
        /// The source from which the build run is triggered.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBuildRunBuildRunSourceResult> BuildRunSources;
        /// <summary>
        /// Commit details that need to be used for the build run.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBuildRunCommitInfoResult> CommitInfos;
        /// <summary>
        /// The OCID of the compartment where the build is running.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// Build run display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// Unique identifier that is immutable on creation.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// The OCID of the DevOps project.
        /// </summary>
        public readonly string ProjectId;
        /// <summary>
        /// The current state of the build run.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// The time the build run was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time the build run was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetBuildRunResult(
            ImmutableArray<Outputs.GetBuildRunBuildOutputResult> buildOutputs,

            string buildPipelineId,

            ImmutableArray<Outputs.GetBuildRunBuildRunArgumentResult> buildRunArguments,

            string buildRunId,

            ImmutableArray<Outputs.GetBuildRunBuildRunProgressResult> buildRunProgresses,

            ImmutableArray<Outputs.GetBuildRunBuildRunSourceResult> buildRunSources,

            ImmutableArray<Outputs.GetBuildRunCommitInfoResult> commitInfos,

            string compartmentId,

            ImmutableDictionary<string, string> definedTags,

            string displayName,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            string lifecycleDetails,

            string projectId,

            string state,

            ImmutableDictionary<string, string> systemTags,

            string timeCreated,

            string timeUpdated)
        {
            BuildOutputs = buildOutputs;
            BuildPipelineId = buildPipelineId;
            BuildRunArguments = buildRunArguments;
            BuildRunId = buildRunId;
            BuildRunProgresses = buildRunProgresses;
            BuildRunSources = buildRunSources;
            CommitInfos = commitInfos;
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            LifecycleDetails = lifecycleDetails;
            ProjectId = projectId;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
