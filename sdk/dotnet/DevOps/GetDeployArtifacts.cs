// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DevOps
{
    public static class GetDeployArtifacts
    {
        /// <summary>
        /// This data source provides the list of Deploy Artifacts in Oracle Cloud Infrastructure Devops service.
        /// 
        /// Returns a list of deployment artifacts.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDeployArtifacts = Oci.DevOps.GetDeployArtifacts.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         DisplayName = @var.Deploy_artifact_display_name,
        ///         Id = @var.Deploy_artifact_id,
        ///         ProjectId = oci_devops_project.Test_project.Id,
        ///         State = @var.Deploy_artifact_state,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetDeployArtifactsResult> InvokeAsync(GetDeployArtifactsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDeployArtifactsResult>("oci:DevOps/getDeployArtifacts:getDeployArtifacts", args ?? new GetDeployArtifactsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Deploy Artifacts in Oracle Cloud Infrastructure Devops service.
        /// 
        /// Returns a list of deployment artifacts.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDeployArtifacts = Oci.DevOps.GetDeployArtifacts.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         DisplayName = @var.Deploy_artifact_display_name,
        ///         Id = @var.Deploy_artifact_id,
        ///         ProjectId = oci_devops_project.Test_project.Id,
        ///         State = @var.Deploy_artifact_state,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetDeployArtifactsResult> Invoke(GetDeployArtifactsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDeployArtifactsResult>("oci:DevOps/getDeployArtifacts:getDeployArtifacts", args ?? new GetDeployArtifactsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDeployArtifactsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetDeployArtifactsFilterArgs>? _filters;
        public List<Inputs.GetDeployArtifactsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetDeployArtifactsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Unique identifier or OCID for listing a single resource by ID.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// unique project identifier
        /// </summary>
        [Input("projectId")]
        public string? ProjectId { get; set; }

        /// <summary>
        /// A filter to return only DeployArtifacts that matches the given lifecycleState.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetDeployArtifactsArgs()
        {
        }
        public static new GetDeployArtifactsArgs Empty => new GetDeployArtifactsArgs();
    }

    public sealed class GetDeployArtifactsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetDeployArtifactsFilterInputArgs>? _filters;
        public InputList<Inputs.GetDeployArtifactsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetDeployArtifactsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Unique identifier or OCID for listing a single resource by ID.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// unique project identifier
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// A filter to return only DeployArtifacts that matches the given lifecycleState.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetDeployArtifactsInvokeArgs()
        {
        }
        public static new GetDeployArtifactsInvokeArgs Empty => new GetDeployArtifactsInvokeArgs();
    }


    [OutputType]
    public sealed class GetDeployArtifactsResult
    {
        /// <summary>
        /// The OCID of a compartment.
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// The list of deploy_artifact_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDeployArtifactsDeployArtifactCollectionResult> DeployArtifactCollections;
        /// <summary>
        /// Deployment artifact identifier, which can be renamed and is not necessarily unique. Avoid entering confidential information.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetDeployArtifactsFilterResult> Filters;
        /// <summary>
        /// Unique identifier that is immutable on creation.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The OCID of a project.
        /// </summary>
        public readonly string? ProjectId;
        /// <summary>
        /// Current state of the deployment artifact.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetDeployArtifactsResult(
            string? compartmentId,

            ImmutableArray<Outputs.GetDeployArtifactsDeployArtifactCollectionResult> deployArtifactCollections,

            string? displayName,

            ImmutableArray<Outputs.GetDeployArtifactsFilterResult> filters,

            string? id,

            string? projectId,

            string? state)
        {
            CompartmentId = compartmentId;
            DeployArtifactCollections = deployArtifactCollections;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            ProjectId = projectId;
            State = state;
        }
    }
}
