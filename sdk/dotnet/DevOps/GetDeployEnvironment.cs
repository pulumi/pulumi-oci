// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DevOps
{
    public static class GetDeployEnvironment
    {
        /// <summary>
        /// This data source provides details about a specific Deploy Environment resource in Oracle Cloud Infrastructure Devops service.
        /// 
        /// Retrieves a deployment environment by identifier.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDeployEnvironment = Oci.DevOps.GetDeployEnvironment.Invoke(new()
        ///     {
        ///         DeployEnvironmentId = testDeployEnvironmentOciDevopsDeployEnvironment.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetDeployEnvironmentResult> InvokeAsync(GetDeployEnvironmentArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDeployEnvironmentResult>("oci:DevOps/getDeployEnvironment:getDeployEnvironment", args ?? new GetDeployEnvironmentArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Deploy Environment resource in Oracle Cloud Infrastructure Devops service.
        /// 
        /// Retrieves a deployment environment by identifier.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDeployEnvironment = Oci.DevOps.GetDeployEnvironment.Invoke(new()
        ///     {
        ///         DeployEnvironmentId = testDeployEnvironmentOciDevopsDeployEnvironment.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetDeployEnvironmentResult> Invoke(GetDeployEnvironmentInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDeployEnvironmentResult>("oci:DevOps/getDeployEnvironment:getDeployEnvironment", args ?? new GetDeployEnvironmentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDeployEnvironmentArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique environment identifier.
        /// </summary>
        [Input("deployEnvironmentId", required: true)]
        public string DeployEnvironmentId { get; set; } = null!;

        public GetDeployEnvironmentArgs()
        {
        }
        public static new GetDeployEnvironmentArgs Empty => new GetDeployEnvironmentArgs();
    }

    public sealed class GetDeployEnvironmentInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique environment identifier.
        /// </summary>
        [Input("deployEnvironmentId", required: true)]
        public Input<string> DeployEnvironmentId { get; set; } = null!;

        public GetDeployEnvironmentInvokeArgs()
        {
        }
        public static new GetDeployEnvironmentInvokeArgs Empty => new GetDeployEnvironmentInvokeArgs();
    }


    [OutputType]
    public sealed class GetDeployEnvironmentResult
    {
        /// <summary>
        /// The OCID of the Kubernetes cluster.
        /// </summary>
        public readonly string ClusterId;
        /// <summary>
        /// The OCID of a compartment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// A collection of selectors. The combination of instances matching the selectors are included in the instance group.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDeployEnvironmentComputeInstanceGroupSelectorResult> ComputeInstanceGroupSelectors;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        public readonly string DeployEnvironmentId;
        /// <summary>
        /// Deployment environment type.
        /// </summary>
        public readonly string DeployEnvironmentType;
        /// <summary>
        /// Optional description about the deployment environment.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Deployment environment display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// The OCID of the Function.
        /// </summary>
        public readonly string FunctionId;
        /// <summary>
        /// Unique identifier that is immutable on creation.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// Specifies the configuration needed when the target Oracle Cloud Infrastructure resource, i.e., OKE cluster, resides in customer's private network.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDeployEnvironmentNetworkChannelResult> NetworkChannels;
        /// <summary>
        /// The OCID of a project.
        /// </summary>
        public readonly string ProjectId;
        /// <summary>
        /// The current state of the deployment environment.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> SystemTags;
        /// <summary>
        /// Time the deployment environment was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// Time the deployment environment was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetDeployEnvironmentResult(
            string clusterId,

            string compartmentId,

            ImmutableArray<Outputs.GetDeployEnvironmentComputeInstanceGroupSelectorResult> computeInstanceGroupSelectors,

            ImmutableDictionary<string, object> definedTags,

            string deployEnvironmentId,

            string deployEnvironmentType,

            string description,

            string displayName,

            ImmutableDictionary<string, object> freeformTags,

            string functionId,

            string id,

            string lifecycleDetails,

            ImmutableArray<Outputs.GetDeployEnvironmentNetworkChannelResult> networkChannels,

            string projectId,

            string state,

            ImmutableDictionary<string, object> systemTags,

            string timeCreated,

            string timeUpdated)
        {
            ClusterId = clusterId;
            CompartmentId = compartmentId;
            ComputeInstanceGroupSelectors = computeInstanceGroupSelectors;
            DefinedTags = definedTags;
            DeployEnvironmentId = deployEnvironmentId;
            DeployEnvironmentType = deployEnvironmentType;
            Description = description;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            FunctionId = functionId;
            Id = id;
            LifecycleDetails = lifecycleDetails;
            NetworkChannels = networkChannels;
            ProjectId = projectId;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
