// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DevOps
{
    public static class GetProjectRepositorySetting
    {
        /// <summary>
        /// This data source provides details about a specific Project Repository Setting resource in Oracle Cloud Infrastructure Devops service.
        /// 
        /// Retrieves a project's repository settings details.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testProjectRepositorySetting = Oci.DevOps.GetProjectRepositorySetting.Invoke(new()
        ///     {
        ///         ProjectId = testProject.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetProjectRepositorySettingResult> InvokeAsync(GetProjectRepositorySettingArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetProjectRepositorySettingResult>("oci:DevOps/getProjectRepositorySetting:getProjectRepositorySetting", args ?? new GetProjectRepositorySettingArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Project Repository Setting resource in Oracle Cloud Infrastructure Devops service.
        /// 
        /// Retrieves a project's repository settings details.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testProjectRepositorySetting = Oci.DevOps.GetProjectRepositorySetting.Invoke(new()
        ///     {
        ///         ProjectId = testProject.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetProjectRepositorySettingResult> Invoke(GetProjectRepositorySettingInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetProjectRepositorySettingResult>("oci:DevOps/getProjectRepositorySetting:getProjectRepositorySetting", args ?? new GetProjectRepositorySettingInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Project Repository Setting resource in Oracle Cloud Infrastructure Devops service.
        /// 
        /// Retrieves a project's repository settings details.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testProjectRepositorySetting = Oci.DevOps.GetProjectRepositorySetting.Invoke(new()
        ///     {
        ///         ProjectId = testProject.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetProjectRepositorySettingResult> Invoke(GetProjectRepositorySettingInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetProjectRepositorySettingResult>("oci:DevOps/getProjectRepositorySetting:getProjectRepositorySetting", args ?? new GetProjectRepositorySettingInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetProjectRepositorySettingArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique project identifier.
        /// </summary>
        [Input("projectId", required: true)]
        public string ProjectId { get; set; } = null!;

        public GetProjectRepositorySettingArgs()
        {
        }
        public static new GetProjectRepositorySettingArgs Empty => new GetProjectRepositorySettingArgs();
    }

    public sealed class GetProjectRepositorySettingInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique project identifier.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        public GetProjectRepositorySettingInvokeArgs()
        {
        }
        public static new GetProjectRepositorySettingInvokeArgs Empty => new GetProjectRepositorySettingInvokeArgs();
    }


    [OutputType]
    public sealed class GetProjectRepositorySettingResult
    {
        /// <summary>
        /// List of approval rules which must be statisfied before pull requests which match the rules can be merged
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProjectRepositorySettingApprovalRuleResult> ApprovalRules;
        public readonly string Id;
        /// <summary>
        /// Enabled and disabled merge strategies for a project or repository, also contains a default strategy.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProjectRepositorySettingMergeSettingResult> MergeSettings;
        public readonly string ProjectId;

        [OutputConstructor]
        private GetProjectRepositorySettingResult(
            ImmutableArray<Outputs.GetProjectRepositorySettingApprovalRuleResult> approvalRules,

            string id,

            ImmutableArray<Outputs.GetProjectRepositorySettingMergeSettingResult> mergeSettings,

            string projectId)
        {
            ApprovalRules = approvalRules;
            Id = id;
            MergeSettings = mergeSettings;
            ProjectId = projectId;
        }
    }
}
