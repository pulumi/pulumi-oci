// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DevOps
{
    public static class GetRepositoryArchiveContent
    {
        /// <summary>
        /// This data source provides details about a specific Repository Archive Content resource in Oracle Cloud Infrastructure Devops service.
        /// 
        /// Returns the archived repository information.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testRepositoryArchiveContent = Oci.DevOps.GetRepositoryArchiveContent.Invoke(new()
        ///     {
        ///         RepositoryId = testRepository.Id,
        ///         Format = repositoryArchiveContentFormat,
        ///         RefName = repositoryArchiveContentRefName,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetRepositoryArchiveContentResult> InvokeAsync(GetRepositoryArchiveContentArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRepositoryArchiveContentResult>("oci:DevOps/getRepositoryArchiveContent:getRepositoryArchiveContent", args ?? new GetRepositoryArchiveContentArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Repository Archive Content resource in Oracle Cloud Infrastructure Devops service.
        /// 
        /// Returns the archived repository information.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testRepositoryArchiveContent = Oci.DevOps.GetRepositoryArchiveContent.Invoke(new()
        ///     {
        ///         RepositoryId = testRepository.Id,
        ///         Format = repositoryArchiveContentFormat,
        ///         RefName = repositoryArchiveContentRefName,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetRepositoryArchiveContentResult> Invoke(GetRepositoryArchiveContentInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRepositoryArchiveContentResult>("oci:DevOps/getRepositoryArchiveContent:getRepositoryArchiveContent", args ?? new GetRepositoryArchiveContentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRepositoryArchiveContentArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The archive format query parameter for downloading repository endpoint.
        /// </summary>
        [Input("format")]
        public string? Format { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given reference name.
        /// </summary>
        [Input("refName")]
        public string? RefName { get; set; }

        /// <summary>
        /// Unique repository identifier.
        /// </summary>
        [Input("repositoryId", required: true)]
        public string RepositoryId { get; set; } = null!;

        public GetRepositoryArchiveContentArgs()
        {
        }
        public static new GetRepositoryArchiveContentArgs Empty => new GetRepositoryArchiveContentArgs();
    }

    public sealed class GetRepositoryArchiveContentInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The archive format query parameter for downloading repository endpoint.
        /// </summary>
        [Input("format")]
        public Input<string>? Format { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given reference name.
        /// </summary>
        [Input("refName")]
        public Input<string>? RefName { get; set; }

        /// <summary>
        /// Unique repository identifier.
        /// </summary>
        [Input("repositoryId", required: true)]
        public Input<string> RepositoryId { get; set; } = null!;

        public GetRepositoryArchiveContentInvokeArgs()
        {
        }
        public static new GetRepositoryArchiveContentInvokeArgs Empty => new GetRepositoryArchiveContentInvokeArgs();
    }


    [OutputType]
    public sealed class GetRepositoryArchiveContentResult
    {
        public readonly string? Format;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? RefName;
        public readonly string RepositoryId;

        [OutputConstructor]
        private GetRepositoryArchiveContentResult(
            string? format,

            string id,

            string? refName,

            string repositoryId)
        {
            Format = format;
            Id = id;
            RefName = refName;
            RepositoryId = repositoryId;
        }
    }
}
