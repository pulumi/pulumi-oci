// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DevOps
{
    public static class GetRepositoryFileLine
    {
        /// <summary>
        /// This data source provides details about a specific Repository File Line resource in Oracle Cloud Infrastructure Devops service.
        /// 
        /// Retrieve lines of a specified file. Supports starting line number and limit. This API will be deprecated on Wed, 29 Mar 2023 01:00:00 GMT as it does not get recognized when filePath has '/'. This will be replaced by "/repositories/{repositoryId}/file/lines"
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testRepositoryFileLine = Oci.DevOps.GetRepositoryFileLine.Invoke(new()
        ///     {
        ///         RepositoryId = testRepository.Id,
        ///         Revision = repositoryFileLineRevision,
        ///         FilePath = repositoryFileLineFilePath,
        ///         StartLineNumber = repositoryFileLineStartLineNumber,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetRepositoryFileLineResult> InvokeAsync(GetRepositoryFileLineArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRepositoryFileLineResult>("oci:DevOps/getRepositoryFileLine:getRepositoryFileLine", args ?? new GetRepositoryFileLineArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Repository File Line resource in Oracle Cloud Infrastructure Devops service.
        /// 
        /// Retrieve lines of a specified file. Supports starting line number and limit. This API will be deprecated on Wed, 29 Mar 2023 01:00:00 GMT as it does not get recognized when filePath has '/'. This will be replaced by "/repositories/{repositoryId}/file/lines"
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testRepositoryFileLine = Oci.DevOps.GetRepositoryFileLine.Invoke(new()
        ///     {
        ///         RepositoryId = testRepository.Id,
        ///         Revision = repositoryFileLineRevision,
        ///         FilePath = repositoryFileLineFilePath,
        ///         StartLineNumber = repositoryFileLineStartLineNumber,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetRepositoryFileLineResult> Invoke(GetRepositoryFileLineInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRepositoryFileLineResult>("oci:DevOps/getRepositoryFileLine:getRepositoryFileLine", args ?? new GetRepositoryFileLineInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Repository File Line resource in Oracle Cloud Infrastructure Devops service.
        /// 
        /// Retrieve lines of a specified file. Supports starting line number and limit. This API will be deprecated on Wed, 29 Mar 2023 01:00:00 GMT as it does not get recognized when filePath has '/'. This will be replaced by "/repositories/{repositoryId}/file/lines"
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testRepositoryFileLine = Oci.DevOps.GetRepositoryFileLine.Invoke(new()
        ///     {
        ///         RepositoryId = testRepository.Id,
        ///         Revision = repositoryFileLineRevision,
        ///         FilePath = repositoryFileLineFilePath,
        ///         StartLineNumber = repositoryFileLineStartLineNumber,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetRepositoryFileLineResult> Invoke(GetRepositoryFileLineInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRepositoryFileLineResult>("oci:DevOps/getRepositoryFileLine:getRepositoryFileLine", args ?? new GetRepositoryFileLineInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRepositoryFileLineArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A filter to return file contents of the specified paths.
        /// </summary>
        [Input("filePath", required: true)]
        public string FilePath { get; set; } = null!;

        /// <summary>
        /// Unique repository identifier.
        /// </summary>
        [Input("repositoryId", required: true)]
        public string RepositoryId { get; set; } = null!;

        /// <summary>
        /// Retrieve file lines from specific revision.
        /// </summary>
        [Input("revision", required: true)]
        public string Revision { get; set; } = null!;

        /// <summary>
        /// Line number from where to start returning file lines.
        /// </summary>
        [Input("startLineNumber")]
        public int? StartLineNumber { get; set; }

        public GetRepositoryFileLineArgs()
        {
        }
        public static new GetRepositoryFileLineArgs Empty => new GetRepositoryFileLineArgs();
    }

    public sealed class GetRepositoryFileLineInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A filter to return file contents of the specified paths.
        /// </summary>
        [Input("filePath", required: true)]
        public Input<string> FilePath { get; set; } = null!;

        /// <summary>
        /// Unique repository identifier.
        /// </summary>
        [Input("repositoryId", required: true)]
        public Input<string> RepositoryId { get; set; } = null!;

        /// <summary>
        /// Retrieve file lines from specific revision.
        /// </summary>
        [Input("revision", required: true)]
        public Input<string> Revision { get; set; } = null!;

        /// <summary>
        /// Line number from where to start returning file lines.
        /// </summary>
        [Input("startLineNumber")]
        public Input<int>? StartLineNumber { get; set; }

        public GetRepositoryFileLineInvokeArgs()
        {
        }
        public static new GetRepositoryFileLineInvokeArgs Empty => new GetRepositoryFileLineInvokeArgs();
    }


    [OutputType]
    public sealed class GetRepositoryFileLineResult
    {
        public readonly string FilePath;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of lines in the file.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRepositoryFileLineLineResult> Lines;
        public readonly string RepositoryId;
        public readonly string Revision;
        public readonly int? StartLineNumber;

        [OutputConstructor]
        private GetRepositoryFileLineResult(
            string filePath,

            string id,

            ImmutableArray<Outputs.GetRepositoryFileLineLineResult> lines,

            string repositoryId,

            string revision,

            int? startLineNumber)
        {
            FilePath = filePath;
            Id = id;
            Lines = lines;
            RepositoryId = repositoryId;
            Revision = revision;
            StartLineNumber = startLineNumber;
        }
    }
}
