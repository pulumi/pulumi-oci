// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DevOps
{
    public static class GetRepositoryMirrorRecords
    {
        /// <summary>
        /// This data source provides the list of Repository Mirror Records in Oracle Cloud Infrastructure Devops service.
        /// 
        /// Returns a list of mirror entry in history within 30 days.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testRepositoryMirrorRecords = Oci.DevOps.GetRepositoryMirrorRecords.Invoke(new()
        ///     {
        ///         RepositoryId = testRepository.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetRepositoryMirrorRecordsResult> InvokeAsync(GetRepositoryMirrorRecordsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRepositoryMirrorRecordsResult>("oci:DevOps/getRepositoryMirrorRecords:getRepositoryMirrorRecords", args ?? new GetRepositoryMirrorRecordsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Repository Mirror Records in Oracle Cloud Infrastructure Devops service.
        /// 
        /// Returns a list of mirror entry in history within 30 days.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testRepositoryMirrorRecords = Oci.DevOps.GetRepositoryMirrorRecords.Invoke(new()
        ///     {
        ///         RepositoryId = testRepository.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetRepositoryMirrorRecordsResult> Invoke(GetRepositoryMirrorRecordsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRepositoryMirrorRecordsResult>("oci:DevOps/getRepositoryMirrorRecords:getRepositoryMirrorRecords", args ?? new GetRepositoryMirrorRecordsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Repository Mirror Records in Oracle Cloud Infrastructure Devops service.
        /// 
        /// Returns a list of mirror entry in history within 30 days.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testRepositoryMirrorRecords = Oci.DevOps.GetRepositoryMirrorRecords.Invoke(new()
        ///     {
        ///         RepositoryId = testRepository.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetRepositoryMirrorRecordsResult> Invoke(GetRepositoryMirrorRecordsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRepositoryMirrorRecordsResult>("oci:DevOps/getRepositoryMirrorRecords:getRepositoryMirrorRecords", args ?? new GetRepositoryMirrorRecordsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRepositoryMirrorRecordsArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetRepositoryMirrorRecordsFilterArgs>? _filters;
        public List<Inputs.GetRepositoryMirrorRecordsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetRepositoryMirrorRecordsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Unique repository identifier.
        /// </summary>
        [Input("repositoryId", required: true)]
        public string RepositoryId { get; set; } = null!;

        public GetRepositoryMirrorRecordsArgs()
        {
        }
        public static new GetRepositoryMirrorRecordsArgs Empty => new GetRepositoryMirrorRecordsArgs();
    }

    public sealed class GetRepositoryMirrorRecordsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetRepositoryMirrorRecordsFilterInputArgs>? _filters;
        public InputList<Inputs.GetRepositoryMirrorRecordsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetRepositoryMirrorRecordsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Unique repository identifier.
        /// </summary>
        [Input("repositoryId", required: true)]
        public Input<string> RepositoryId { get; set; } = null!;

        public GetRepositoryMirrorRecordsInvokeArgs()
        {
        }
        public static new GetRepositoryMirrorRecordsInvokeArgs Empty => new GetRepositoryMirrorRecordsInvokeArgs();
    }


    [OutputType]
    public sealed class GetRepositoryMirrorRecordsResult
    {
        public readonly ImmutableArray<Outputs.GetRepositoryMirrorRecordsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string RepositoryId;
        /// <summary>
        /// The list of repository_mirror_record_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRepositoryMirrorRecordsRepositoryMirrorRecordCollectionResult> RepositoryMirrorRecordCollections;

        [OutputConstructor]
        private GetRepositoryMirrorRecordsResult(
            ImmutableArray<Outputs.GetRepositoryMirrorRecordsFilterResult> filters,

            string id,

            string repositoryId,

            ImmutableArray<Outputs.GetRepositoryMirrorRecordsRepositoryMirrorRecordCollectionResult> repositoryMirrorRecordCollections)
        {
            Filters = filters;
            Id = id;
            RepositoryId = repositoryId;
            RepositoryMirrorRecordCollections = repositoryMirrorRecordCollections;
        }
    }
}
