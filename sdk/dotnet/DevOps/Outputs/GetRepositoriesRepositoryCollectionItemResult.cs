// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DevOps.Outputs
{

    [OutputType]
    public sealed class GetRepositoriesRepositoryCollectionItemResult
    {
        /// <summary>
        /// The count of the branches present in the repository.
        /// </summary>
        public readonly int BranchCount;
        /// <summary>
        /// The count of the commits present in the repository.
        /// </summary>
        public readonly int CommitCount;
        /// <summary>
        /// The OCID of the compartment in which to list resources.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The default branch of the repository.
        /// </summary>
        public readonly string DefaultBranch;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// Details of the repository. Avoid entering confidential information.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// HTTP URL that you use to git clone, pull and push.
        /// </summary>
        public readonly string HttpUrl;
        /// <summary>
        /// The OCID of the repository. This value is unique and immutable.
        /// </summary>
        public readonly string Id;
        public readonly string LifecycleDetails;
        /// <summary>
        /// Configuration information for mirroring the repository.
        /// </summary>
        public readonly Outputs.GetRepositoriesRepositoryCollectionItemMirrorRepositoryConfigResult MirrorRepositoryConfig;
        /// <summary>
        /// A filter to return only resources that match the entire name given.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Tenancy unique namespace.
        /// </summary>
        public readonly string Namespace;
        /// <summary>
        /// The OCID of the parent repository.
        /// </summary>
        public readonly string ParentRepositoryId;
        /// <summary>
        /// unique project identifier
        /// </summary>
        public readonly string ProjectId;
        /// <summary>
        /// Unique project name in a namespace.
        /// </summary>
        public readonly string ProjectName;
        /// <summary>
        /// Type of repository: MIRRORED - Repository created by mirroring an existing repository. HOSTED - Repository created and hosted using Oracle Cloud Infrastructure DevOps code repository. FORKED - Repository created by forking an existing repository.
        /// </summary>
        public readonly string RepositoryType;
        /// <summary>
        /// The size of the repository in bytes.
        /// </summary>
        public readonly string SizeInBytes;
        /// <summary>
        /// SSH URL that you use to git clone, pull and push.
        /// </summary>
        public readonly string SshUrl;
        /// <summary>
        /// A filter to return only resources whose lifecycle state matches the given lifecycle state.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// The time the repository was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time the repository was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
        /// </summary>
        public readonly string TimeUpdated;
        /// <summary>
        /// Trigger build events supported for this repository: PUSH - Build is triggered when a push event occurs. PULL_REQUEST_CREATED - Build is triggered when a pull request is created in the repository. PULL_REQUEST_UPDATED - Build is triggered when a push is made to a branch with an open pull request. COMMIT_UPDATES - Build is triggered when new commits are mirrored into a repository.
        /// </summary>
        public readonly ImmutableArray<string> TriggerBuildEvents;

        [OutputConstructor]
        private GetRepositoriesRepositoryCollectionItemResult(
            int branchCount,

            int commitCount,

            string compartmentId,

            string defaultBranch,

            ImmutableDictionary<string, string> definedTags,

            string description,

            ImmutableDictionary<string, string> freeformTags,

            string httpUrl,

            string id,

            string lifecycleDetails,

            Outputs.GetRepositoriesRepositoryCollectionItemMirrorRepositoryConfigResult mirrorRepositoryConfig,

            string name,

            string @namespace,

            string parentRepositoryId,

            string projectId,

            string projectName,

            string repositoryType,

            string sizeInBytes,

            string sshUrl,

            string state,

            ImmutableDictionary<string, string> systemTags,

            string timeCreated,

            string timeUpdated,

            ImmutableArray<string> triggerBuildEvents)
        {
            BranchCount = branchCount;
            CommitCount = commitCount;
            CompartmentId = compartmentId;
            DefaultBranch = defaultBranch;
            DefinedTags = definedTags;
            Description = description;
            FreeformTags = freeformTags;
            HttpUrl = httpUrl;
            Id = id;
            LifecycleDetails = lifecycleDetails;
            MirrorRepositoryConfig = mirrorRepositoryConfig;
            Name = name;
            Namespace = @namespace;
            ParentRepositoryId = parentRepositoryId;
            ProjectId = projectId;
            ProjectName = projectName;
            RepositoryType = repositoryType;
            SizeInBytes = sizeInBytes;
            SshUrl = sshUrl;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            TriggerBuildEvents = triggerBuildEvents;
        }
    }
}
