// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DevOps.Outputs
{

    [OutputType]
    public sealed class GetRepositoryDiffsDiffCollectionItemResult
    {
        /// <summary>
        /// Indicates whether the changed file contains conflicts.
        /// </summary>
        public readonly bool AreConflictsInFile;
        /// <summary>
        /// List of changed section in the file.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRepositoryDiffsDiffCollectionItemChangeResult> Changes;
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// Indicates whether the file is binary.
        /// </summary>
        public readonly bool IsBinary;
        /// <summary>
        /// Indicates whether the file is large.
        /// </summary>
        public readonly bool IsLarge;
        /// <summary>
        /// The ID of the changed object on the target version.
        /// </summary>
        public readonly string NewId;
        /// <summary>
        /// The path on the target version to the changed object.
        /// </summary>
        public readonly string NewPath;
        /// <summary>
        /// The ID of the changed object on the base version.
        /// </summary>
        public readonly string OldId;
        /// <summary>
        /// The path on the base version to the changed object.
        /// </summary>
        public readonly string OldPath;

        [OutputConstructor]
        private GetRepositoryDiffsDiffCollectionItemResult(
            bool areConflictsInFile,

            ImmutableArray<Outputs.GetRepositoryDiffsDiffCollectionItemChangeResult> changes,

            ImmutableDictionary<string, string> freeformTags,

            bool isBinary,

            bool isLarge,

            string newId,

            string newPath,

            string oldId,

            string oldPath)
        {
            AreConflictsInFile = areConflictsInFile;
            Changes = changes;
            FreeformTags = freeformTags;
            IsBinary = isBinary;
            IsLarge = isLarge;
            NewId = newId;
            NewPath = newPath;
            OldId = oldId;
            OldPath = oldPath;
        }
    }
}
