// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DevOps.Outputs
{

    [OutputType]
    public sealed class GetRepositoryMirrorRecordsRepositoryMirrorRecordCollectionItemResult
    {
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// Mirror status of current mirror entry. QUEUED - Mirroring Queued RUNNING - Mirroring is Running PASSED - Mirroring Passed FAILED - Mirroring Failed
        /// </summary>
        public readonly string MirrorStatus;
        public readonly string TimeCompleted;
        /// <summary>
        /// The time to enqueue a mirror operation.
        /// </summary>
        public readonly string TimeEnqueued;
        /// <summary>
        /// The time to start a mirror operation.
        /// </summary>
        public readonly string TimeStarted;
        /// <summary>
        /// Workrequest ID to track current mirror operation.
        /// </summary>
        public readonly string WorkRequestId;

        [OutputConstructor]
        private GetRepositoryMirrorRecordsRepositoryMirrorRecordCollectionItemResult(
            ImmutableDictionary<string, string> freeformTags,

            string mirrorStatus,

            string timeCompleted,

            string timeEnqueued,

            string timeStarted,

            string workRequestId)
        {
            FreeformTags = freeformTags;
            MirrorStatus = mirrorStatus;
            TimeCompleted = timeCompleted;
            TimeEnqueued = timeEnqueued;
            TimeStarted = timeStarted;
            WorkRequestId = workRequestId;
        }
    }
}
