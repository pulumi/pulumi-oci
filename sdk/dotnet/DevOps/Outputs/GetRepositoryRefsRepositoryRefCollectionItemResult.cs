// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DevOps.Outputs
{

    [OutputType]
    public sealed class GetRepositoryRefsRepositoryRefCollectionItemResult
    {
        /// <summary>
        /// Commit ID in a repository.
        /// </summary>
        public readonly string CommitId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// Unique full reference name inside a repository.
        /// </summary>
        public readonly string FullRefName;
        public readonly string Id;
        /// <summary>
        /// SHA-1 hash value of the object pointed to by the tag.
        /// </summary>
        public readonly string ObjectId;
        /// <summary>
        /// A filter to return only resources that match the given reference name.
        /// </summary>
        public readonly string RefName;
        /// <summary>
        /// Reference type to distinguish between branch and tag. If it is not specified, all references are returned.
        /// </summary>
        public readonly string RefType;
        /// <summary>
        /// Unique repository identifier.
        /// </summary>
        public readonly string RepositoryId;

        [OutputConstructor]
        private GetRepositoryRefsRepositoryRefCollectionItemResult(
            string commitId,

            ImmutableDictionary<string, object> definedTags,

            ImmutableDictionary<string, object> freeformTags,

            string fullRefName,

            string id,

            string objectId,

            string refName,

            string refType,

            string repositoryId)
        {
            CommitId = commitId;
            DefinedTags = definedTags;
            FreeformTags = freeformTags;
            FullRefName = fullRefName;
            Id = id;
            ObjectId = objectId;
            RefName = refName;
            RefType = refType;
            RepositoryId = repositoryId;
        }
    }
}
