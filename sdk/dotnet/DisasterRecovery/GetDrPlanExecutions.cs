// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DisasterRecovery
{
    public static class GetDrPlanExecutions
    {
        /// <summary>
        /// This data source provides the list of Dr Plan Executions in Oracle Cloud Infrastructure Disaster Recovery service.
        /// 
        /// Get a summary list of all DR Plan Executions for a DR Protection Group.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDrPlanExecutions = Oci.DisasterRecovery.GetDrPlanExecutions.Invoke(new()
        ///     {
        ///         DrProtectionGroupId = oci_disaster_recovery_dr_protection_group.Test_dr_protection_group.Id,
        ///         DisplayName = @var.Dr_plan_execution_display_name,
        ///         DrPlanExecutionId = oci_disaster_recovery_dr_plan_execution.Test_dr_plan_execution.Id,
        ///         DrPlanExecutionType = @var.Dr_plan_execution_dr_plan_execution_type,
        ///         State = @var.Dr_plan_execution_state,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetDrPlanExecutionsResult> InvokeAsync(GetDrPlanExecutionsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDrPlanExecutionsResult>("oci:DisasterRecovery/getDrPlanExecutions:getDrPlanExecutions", args ?? new GetDrPlanExecutionsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Dr Plan Executions in Oracle Cloud Infrastructure Disaster Recovery service.
        /// 
        /// Get a summary list of all DR Plan Executions for a DR Protection Group.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDrPlanExecutions = Oci.DisasterRecovery.GetDrPlanExecutions.Invoke(new()
        ///     {
        ///         DrProtectionGroupId = oci_disaster_recovery_dr_protection_group.Test_dr_protection_group.Id,
        ///         DisplayName = @var.Dr_plan_execution_display_name,
        ///         DrPlanExecutionId = oci_disaster_recovery_dr_plan_execution.Test_dr_plan_execution.Id,
        ///         DrPlanExecutionType = @var.Dr_plan_execution_dr_plan_execution_type,
        ///         State = @var.Dr_plan_execution_state,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetDrPlanExecutionsResult> Invoke(GetDrPlanExecutionsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDrPlanExecutionsResult>("oci:DisasterRecovery/getDrPlanExecutions:getDrPlanExecutions", args ?? new GetDrPlanExecutionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDrPlanExecutionsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A filter to return only resources that match the entire display name given.  Example: `MY UNIQUE DISPLAY NAME`
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        /// <summary>
        /// The OCID of the DR Plan Execution.  Example: `ocid1.drplanexecution.oc1.iad.exampleocid`
        /// </summary>
        [Input("drPlanExecutionId")]
        public string? DrPlanExecutionId { get; set; }

        /// <summary>
        /// The DR Plan Execution type.
        /// </summary>
        [Input("drPlanExecutionType")]
        public string? DrPlanExecutionType { get; set; }

        /// <summary>
        /// The OCID of the DR Protection Group. Mandatory query param.  Example: `ocid1.drprotectiongroup.oc1.phx.exampleocid`
        /// </summary>
        [Input("drProtectionGroupId", required: true)]
        public string DrProtectionGroupId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetDrPlanExecutionsFilterArgs>? _filters;
        public List<Inputs.GetDrPlanExecutionsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetDrPlanExecutionsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only DR Plan Executions that match the given lifecycleState.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetDrPlanExecutionsArgs()
        {
        }
        public static new GetDrPlanExecutionsArgs Empty => new GetDrPlanExecutionsArgs();
    }

    public sealed class GetDrPlanExecutionsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A filter to return only resources that match the entire display name given.  Example: `MY UNIQUE DISPLAY NAME`
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// The OCID of the DR Plan Execution.  Example: `ocid1.drplanexecution.oc1.iad.exampleocid`
        /// </summary>
        [Input("drPlanExecutionId")]
        public Input<string>? DrPlanExecutionId { get; set; }

        /// <summary>
        /// The DR Plan Execution type.
        /// </summary>
        [Input("drPlanExecutionType")]
        public Input<string>? DrPlanExecutionType { get; set; }

        /// <summary>
        /// The OCID of the DR Protection Group. Mandatory query param.  Example: `ocid1.drprotectiongroup.oc1.phx.exampleocid`
        /// </summary>
        [Input("drProtectionGroupId", required: true)]
        public Input<string> DrProtectionGroupId { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetDrPlanExecutionsFilterInputArgs>? _filters;
        public InputList<Inputs.GetDrPlanExecutionsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetDrPlanExecutionsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only DR Plan Executions that match the given lifecycleState.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetDrPlanExecutionsInvokeArgs()
        {
        }
        public static new GetDrPlanExecutionsInvokeArgs Empty => new GetDrPlanExecutionsInvokeArgs();
    }


    [OutputType]
    public sealed class GetDrPlanExecutionsResult
    {
        /// <summary>
        /// The display name of the step.  Example: `DATABASE_SWITCHOVER`
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// The list of dr_plan_execution_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDrPlanExecutionsDrPlanExecutionCollectionResult> DrPlanExecutionCollections;
        public readonly string? DrPlanExecutionId;
        public readonly string? DrPlanExecutionType;
        /// <summary>
        /// The OCID of the DR Protection Group to which this DR Plan Execution belongs.  Example: `ocid1.drprotectiongroup.oc1.iad.exampleocid2`
        /// </summary>
        public readonly string DrProtectionGroupId;
        public readonly ImmutableArray<Outputs.GetDrPlanExecutionsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The current state of the DR Plan Execution.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetDrPlanExecutionsResult(
            string? displayName,

            ImmutableArray<Outputs.GetDrPlanExecutionsDrPlanExecutionCollectionResult> drPlanExecutionCollections,

            string? drPlanExecutionId,

            string? drPlanExecutionType,

            string drProtectionGroupId,

            ImmutableArray<Outputs.GetDrPlanExecutionsFilterResult> filters,

            string id,

            string? state)
        {
            DisplayName = displayName;
            DrPlanExecutionCollections = drPlanExecutionCollections;
            DrPlanExecutionId = drPlanExecutionId;
            DrPlanExecutionType = drPlanExecutionType;
            DrProtectionGroupId = drProtectionGroupId;
            Filters = filters;
            Id = id;
            State = state;
        }
    }
}
