// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DisasterRecovery
{
    public static class GetDrProtectionGroups
    {
        /// <summary>
        /// This data source provides the list of Dr Protection Groups in Oracle Cloud Infrastructure Disaster Recovery service.
        /// 
        /// Get a summary list of all DR protection groups in a compartment.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDrProtectionGroups = Oci.DisasterRecovery.GetDrProtectionGroups.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         DisplayName = @var.Dr_protection_group_display_name,
        ///         DrProtectionGroupId = oci_disaster_recovery_dr_protection_group.Test_dr_protection_group.Id,
        ///         LifecycleSubState = @var.Dr_protection_group_lifecycle_sub_state,
        ///         Role = @var.Dr_protection_group_role,
        ///         State = @var.Dr_protection_group_state,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetDrProtectionGroupsResult> InvokeAsync(GetDrProtectionGroupsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDrProtectionGroupsResult>("oci:DisasterRecovery/getDrProtectionGroups:getDrProtectionGroups", args ?? new GetDrProtectionGroupsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Dr Protection Groups in Oracle Cloud Infrastructure Disaster Recovery service.
        /// 
        /// Get a summary list of all DR protection groups in a compartment.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDrProtectionGroups = Oci.DisasterRecovery.GetDrProtectionGroups.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         DisplayName = @var.Dr_protection_group_display_name,
        ///         DrProtectionGroupId = oci_disaster_recovery_dr_protection_group.Test_dr_protection_group.Id,
        ///         LifecycleSubState = @var.Dr_protection_group_lifecycle_sub_state,
        ///         Role = @var.Dr_protection_group_role,
        ///         State = @var.Dr_protection_group_state,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetDrProtectionGroupsResult> Invoke(GetDrProtectionGroupsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDrProtectionGroupsResult>("oci:DisasterRecovery/getDrProtectionGroups:getDrProtectionGroups", args ?? new GetDrProtectionGroupsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDrProtectionGroupsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID (OCID) of the compartment in which to list resources.  Example: `ocid1.compartment.oc1..uniqueID`
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the given display name.  Example: `MyResourceDisplayName`
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        /// <summary>
        /// The OCID of the DR protection group. Optional query param.  Example: `ocid1.drprotectiongroup.oc1..uniqueID`
        /// </summary>
        [Input("drProtectionGroupId")]
        public string? DrProtectionGroupId { get; set; }

        [Input("filters")]
        private List<Inputs.GetDrProtectionGroupsFilterArgs>? _filters;
        public List<Inputs.GetDrProtectionGroupsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetDrProtectionGroupsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only DR protection groups that match the given lifecycle sub-state.
        /// </summary>
        [Input("lifecycleSubState")]
        public string? LifecycleSubState { get; set; }

        /// <summary>
        /// The DR protection group Role.
        /// </summary>
        [Input("role")]
        public string? Role { get; set; }

        /// <summary>
        /// A filter to return only DR protection groups that match the given lifecycle state.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetDrProtectionGroupsArgs()
        {
        }
        public static new GetDrProtectionGroupsArgs Empty => new GetDrProtectionGroupsArgs();
    }

    public sealed class GetDrProtectionGroupsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID (OCID) of the compartment in which to list resources.  Example: `ocid1.compartment.oc1..uniqueID`
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the given display name.  Example: `MyResourceDisplayName`
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// The OCID of the DR protection group. Optional query param.  Example: `ocid1.drprotectiongroup.oc1..uniqueID`
        /// </summary>
        [Input("drProtectionGroupId")]
        public Input<string>? DrProtectionGroupId { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetDrProtectionGroupsFilterInputArgs>? _filters;
        public InputList<Inputs.GetDrProtectionGroupsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetDrProtectionGroupsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only DR protection groups that match the given lifecycle sub-state.
        /// </summary>
        [Input("lifecycleSubState")]
        public Input<string>? LifecycleSubState { get; set; }

        /// <summary>
        /// The DR protection group Role.
        /// </summary>
        [Input("role")]
        public Input<string>? Role { get; set; }

        /// <summary>
        /// A filter to return only DR protection groups that match the given lifecycle state.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetDrProtectionGroupsInvokeArgs()
        {
        }
        public static new GetDrProtectionGroupsInvokeArgs Empty => new GetDrProtectionGroupsInvokeArgs();
    }


    [OutputType]
    public sealed class GetDrProtectionGroupsResult
    {
        /// <summary>
        /// The OCID of the compartment containing the DR protection group.  Example: `ocid1.compartment.oc1..uniqueID`
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The display name of the DR protection group.  Example: `EBS PHX Group`
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// The list of dr_protection_group_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDrProtectionGroupsDrProtectionGroupCollectionResult> DrProtectionGroupCollections;
        public readonly string? DrProtectionGroupId;
        public readonly ImmutableArray<Outputs.GetDrProtectionGroupsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The current sub-state of the DR protection group.
        /// </summary>
        public readonly string? LifecycleSubState;
        /// <summary>
        /// The role of the DR protection group.
        /// </summary>
        public readonly string? Role;
        /// <summary>
        /// The current state of the DR protection group.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetDrProtectionGroupsResult(
            string compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetDrProtectionGroupsDrProtectionGroupCollectionResult> drProtectionGroupCollections,

            string? drProtectionGroupId,

            ImmutableArray<Outputs.GetDrProtectionGroupsFilterResult> filters,

            string? id,

            string? lifecycleSubState,

            string? role,

            string? state)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            DrProtectionGroupCollections = drProtectionGroupCollections;
            DrProtectionGroupId = drProtectionGroupId;
            Filters = filters;
            Id = id;
            LifecycleSubState = lifecycleSubState;
            Role = role;
            State = state;
        }
    }
}
