// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DisasterRecovery.Inputs
{

    public sealed class DrProtectionGroupMemberBackupConfigGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The schedule for backing up namespaces to the destination region. If a backup schedule is not specified, only a single backup will be created.  This format of the string specifying the backup schedule must conform with RFC-5545 (see examples below). This schedule will use the UTC timezone. This property applies to the OKE cluster member in primary region.
        /// 
        /// The backup frequency can be HOURLY, DAILY, WEEKLY or MONTHLY, and the upper and lower interval bounds are as follows HOURLY
        /// * Minimum = 1
        /// * Maximum = 24 DAILY
        /// * Minimum = 1
        /// * Maximum = 30 WEEKLY
        /// * Minimum = 1
        /// * Maximum = 1 MONTHLY
        /// * Minimum = 1
        /// * Maximum = 12
        /// 
        /// Examples:  FREQ=WEEKLY;BYDAY=MO,WE;BYHOUR=10;INTERVAL=1 &gt; Run a backup every Monday and Wednesday at 10:00 AM. FREQ=WEEKLY;BYDAY=MO,WE;BYHOUR=10;INTERVAL=2 &gt; Invalid configuration (Cannot specify an interval of 2).
        /// 
        /// FREQ=HOURLY;INTERVAL=25 &gt; Invalid configuration (Cannot specify an interval of 25). FREQ=HOURLY;INTERVAL=0 &gt; Invalid configuration (Cannot specify an interval of 0). FREQ=HOURLY;INTERVAL=24 &gt; Run a backup every 24 hours. FREQ=HOURLY;INTERVAL=1 &gt; Run a backup every hour. FREQ=HOURLY;BYMINUTE=30;INTERVAL=15 &gt; Run a backup every 15 hours at the 30th minute. FREQ=DAILY;INTERVAL=31 &gt; Invalid configuration (Cannot specify an interval of 31). FREQ=DAILY;INTERVAL=0 &gt; Invalid configuration (Cannot specify an interval of 0). FREQ=DAILY;INTERVAL=30 &gt; Run a backup every 30 days at 12:00 midnight.  FREQ=DAILY;BYHOUR=17;BYMINUTE=10;INTERVAL=1 &gt; Run a backup daily at 05:10 PM.
        /// </summary>
        [Input("backupSchedule")]
        public Input<string>? BackupSchedule { get; set; }

        /// <summary>
        /// (Updatable) The OCID of the vault secret that stores the image credential. This property applies to the OKE cluster member in both the primary and standby region.
        /// </summary>
        [Input("imageReplicationVaultSecretId")]
        public Input<string>? ImageReplicationVaultSecretId { get; set; }

        /// <summary>
        /// (Updatable) The maximum number of backups that should be retained. This property applies to the OKE cluster member in primary region.
        /// </summary>
        [Input("maxNumberOfBackupsRetained")]
        public Input<int>? MaxNumberOfBackupsRetained { get; set; }

        [Input("namespaces")]
        private InputList<string>? _namespaces;

        /// <summary>
        /// (Updatable) A list of namespaces that need to be backed up.  The default value is null. If a list of namespaces is not provided, all namespaces will be backed up. This property applies to the OKE cluster member in primary region.  Example: ["default", "pv-nginx"]
        /// </summary>
        public InputList<string> Namespaces
        {
            get => _namespaces ?? (_namespaces = new InputList<string>());
            set => _namespaces = value;
        }

        /// <summary>
        /// (Updatable) Controls the behaviour of image replication across regions. Image replication is enabled by default for DR Protection Groups with a primary role. This property applies to the OKE cluster member in primary region.
        /// </summary>
        [Input("replicateImages")]
        public Input<string>? ReplicateImages { get; set; }

        public DrProtectionGroupMemberBackupConfigGetArgs()
        {
        }
        public static new DrProtectionGroupMemberBackupConfigGetArgs Empty => new DrProtectionGroupMemberBackupConfigGetArgs();
    }
}
