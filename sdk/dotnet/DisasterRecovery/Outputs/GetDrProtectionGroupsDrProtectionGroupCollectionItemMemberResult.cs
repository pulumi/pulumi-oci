// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.DisasterRecovery.Outputs
{

    [OutputType]
    public sealed class GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberResult
    {
        /// <summary>
        /// A list of backend set mappings that are used to transfer or update backends during DR.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberBackendSetMappingResult> BackendSetMappings;
        /// <summary>
        /// Operations performed on a list of block volumes used on the non-movable compute instance.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberBlockVolumeOperationResult> BlockVolumeOperations;
        /// <summary>
        /// The availability domain of the destination mount target. Example: `BBTh:region-AD`
        /// </summary>
        public readonly string DestinationAvailabilityDomain;
        /// <summary>
        /// The OCID of a capacity reservation in the destination region which will be used to launch the compute instance.  Example: `ocid1.capacityreservation.oc1..uniqueID`
        /// </summary>
        public readonly string DestinationCapacityReservationId;
        /// <summary>
        /// The OCID of a compartment in the destination region in which the compute instance should be launched.  Example: `ocid1.compartment.oc1..uniqueID`
        /// </summary>
        public readonly string DestinationCompartmentId;
        /// <summary>
        /// The OCID of a dedicated VM host in the destination region where the compute instance should be launched.  Example: `ocid1.dedicatedvmhost.oc1..uniqueID`
        /// </summary>
        public readonly string DestinationDedicatedVmHostId;
        /// <summary>
        /// The OCID of the destination load balancer. The backend sets in this destination load balancer are updated during DR.  Example: `ocid1.loadbalancer.oc1..uniqueID`
        /// </summary>
        public readonly string DestinationLoadBalancerId;
        /// <summary>
        /// The OCID of the destination network load balancer. The backend sets in this destination network load balancer are updated during DR.                Example: `ocid1.networkloadbalancer.oc1..uniqueID`
        /// </summary>
        public readonly string DestinationNetworkLoadBalancerId;
        /// <summary>
        /// A list of mappings between the primary region file system export and destination region mount target.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberExportMappingResult> ExportMappings;
        /// <summary>
        /// Operations performed on a list of file systems used on the non-movable compute instance.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberFileSystemOperationResult> FileSystemOperations;
        /// <summary>
        /// A flag indicating if the compute instance should be moved during DR operations.  Example: `false`
        /// </summary>
        public readonly bool IsMovable;
        /// <summary>
        /// A flag indicating if the compute instance should be moved to the same fault domain in the destination region.  The compute instance launch will fail if this flag is set to true and capacity is not available in the  specified fault domain in the destination region.  Example: `false`
        /// </summary>
        public readonly bool IsRetainFaultDomain;
        /// <summary>
        /// A flag indicating whether the non-movable compute instance needs to be started and stopped during DR operations.
        /// </summary>
        public readonly bool IsStartStopEnabled;
        /// <summary>
        /// The OCID of the member.  Example: `ocid1.instance.oc1..uniqueID`
        /// </summary>
        public readonly string MemberId;
        /// <summary>
        /// The type of the member.
        /// </summary>
        public readonly string MemberType;
        /// <summary>
        /// The OCID of the vault secret where the database SYSDBA password is stored. This password is used for performing database DR operations.  Example: `ocid1.vaultsecret.oc1..uniqueID`
        /// </summary>
        public readonly string PasswordVaultSecretId;
        /// <summary>
        /// A list of compute instance VNIC mappings.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberVnicMappingResult> VnicMapping;
        /// <summary>
        /// A list of compute instance VNIC mappings.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberVnicMappingResult> VnicMappings;

        [OutputConstructor]
        private GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberResult(
            ImmutableArray<Outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberBackendSetMappingResult> backendSetMappings,

            ImmutableArray<Outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberBlockVolumeOperationResult> blockVolumeOperations,

            string destinationAvailabilityDomain,

            string destinationCapacityReservationId,

            string destinationCompartmentId,

            string destinationDedicatedVmHostId,

            string destinationLoadBalancerId,

            string destinationNetworkLoadBalancerId,

            ImmutableArray<Outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberExportMappingResult> exportMappings,

            ImmutableArray<Outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberFileSystemOperationResult> fileSystemOperations,

            bool isMovable,

            bool isRetainFaultDomain,

            bool isStartStopEnabled,

            string memberId,

            string memberType,

            string passwordVaultSecretId,

            ImmutableArray<Outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberVnicMappingResult> vnicMapping,

            ImmutableArray<Outputs.GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberVnicMappingResult> vnicMappings)
        {
            BackendSetMappings = backendSetMappings;
            BlockVolumeOperations = blockVolumeOperations;
            DestinationAvailabilityDomain = destinationAvailabilityDomain;
            DestinationCapacityReservationId = destinationCapacityReservationId;
            DestinationCompartmentId = destinationCompartmentId;
            DestinationDedicatedVmHostId = destinationDedicatedVmHostId;
            DestinationLoadBalancerId = destinationLoadBalancerId;
            DestinationNetworkLoadBalancerId = destinationNetworkLoadBalancerId;
            ExportMappings = exportMappings;
            FileSystemOperations = fileSystemOperations;
            IsMovable = isMovable;
            IsRetainFaultDomain = isRetainFaultDomain;
            IsStartStopEnabled = isStartStopEnabled;
            MemberId = memberId;
            MemberType = memberType;
            PasswordVaultSecretId = passwordVaultSecretId;
            VnicMapping = vnicMapping;
            VnicMappings = vnicMappings;
        }
    }
}
