// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Dns
{
    public static class GetResolver
    {
        /// <summary>
        /// This data source provides details about a specific Resolver resource in Oracle Cloud Infrastructure DNS service.
        /// 
        /// Gets information about a specific resolver.
        /// 
        /// Note that attempting to get a resolver in the DELETED lifecycleState will result in a `404`
        /// response to be consistent with other operations of the API.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testResolver = Oci.Dns.GetResolver.Invoke(new()
        ///     {
        ///         ResolverId = testResolverOciDnsResolver.Id,
        ///         Scope = "PRIVATE",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetResolverResult> InvokeAsync(GetResolverArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetResolverResult>("oci:Dns/getResolver:getResolver", args ?? new GetResolverArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Resolver resource in Oracle Cloud Infrastructure DNS service.
        /// 
        /// Gets information about a specific resolver.
        /// 
        /// Note that attempting to get a resolver in the DELETED lifecycleState will result in a `404`
        /// response to be consistent with other operations of the API.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testResolver = Oci.Dns.GetResolver.Invoke(new()
        ///     {
        ///         ResolverId = testResolverOciDnsResolver.Id,
        ///         Scope = "PRIVATE",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetResolverResult> Invoke(GetResolverInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetResolverResult>("oci:Dns/getResolver:getResolver", args ?? new GetResolverInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Resolver resource in Oracle Cloud Infrastructure DNS service.
        /// 
        /// Gets information about a specific resolver.
        /// 
        /// Note that attempting to get a resolver in the DELETED lifecycleState will result in a `404`
        /// response to be consistent with other operations of the API.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testResolver = Oci.Dns.GetResolver.Invoke(new()
        ///     {
        ///         ResolverId = testResolverOciDnsResolver.Id,
        ///         Scope = "PRIVATE",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetResolverResult> Invoke(GetResolverInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetResolverResult>("oci:Dns/getResolver:getResolver", args ?? new GetResolverInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetResolverArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the target resolver.
        /// </summary>
        [Input("resolverId", required: true)]
        public string ResolverId { get; set; } = null!;

        /// <summary>
        /// Value must be `PRIVATE` when listing private name resolvers.
        /// </summary>
        [Input("scope")]
        public string? Scope { get; set; }

        public GetResolverArgs()
        {
        }
        public static new GetResolverArgs Empty => new GetResolverArgs();
    }

    public sealed class GetResolverInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the target resolver.
        /// </summary>
        [Input("resolverId", required: true)]
        public Input<string> ResolverId { get; set; } = null!;

        /// <summary>
        /// Value must be `PRIVATE` when listing private name resolvers.
        /// </summary>
        [Input("scope")]
        public Input<string>? Scope { get; set; }

        public GetResolverInvokeArgs()
        {
        }
        public static new GetResolverInvokeArgs Empty => new GetResolverInvokeArgs();
    }


    [OutputType]
    public sealed class GetResolverResult
    {
        /// <summary>
        /// The OCID of the attached VCN.
        /// </summary>
        public readonly string AttachedVcnId;
        /// <summary>
        /// The attached views. Views are evaluated in order.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetResolverAttachedViewResult> AttachedViews;
        /// <summary>
        /// The OCID of the owning compartment. This will match the resolver that the resolver endpoint is under and will be updated if the resolver's compartment is changed.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The OCID of the default view.
        /// </summary>
        public readonly string DefaultViewId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// The display name of the resolver.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Read-only array of endpoints for the resolver.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetResolverEndpointResult> Endpoints;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The OCID of the resolver.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
        /// </summary>
        public readonly bool IsProtected;
        public readonly string ResolverId;
        /// <summary>
        /// Rules for the resolver. Rules are evaluated in order.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetResolverRuleResult> Rules;
        public readonly string? Scope;
        /// <summary>
        /// The canonical absolute URL of the resource.
        /// </summary>
        public readonly string Self;
        /// <summary>
        /// The current state of the resource.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The date and time the resource was last updated in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetResolverResult(
            string attachedVcnId,

            ImmutableArray<Outputs.GetResolverAttachedViewResult> attachedViews,

            string compartmentId,

            string defaultViewId,

            ImmutableDictionary<string, string> definedTags,

            string displayName,

            ImmutableArray<Outputs.GetResolverEndpointResult> endpoints,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            bool isProtected,

            string resolverId,

            ImmutableArray<Outputs.GetResolverRuleResult> rules,

            string? scope,

            string self,

            string state,

            string timeCreated,

            string timeUpdated)
        {
            AttachedVcnId = attachedVcnId;
            AttachedViews = attachedViews;
            CompartmentId = compartmentId;
            DefaultViewId = defaultViewId;
            DefinedTags = definedTags;
            DisplayName = displayName;
            Endpoints = endpoints;
            FreeformTags = freeformTags;
            Id = id;
            IsProtected = isProtected;
            ResolverId = resolverId;
            Rules = rules;
            Scope = scope;
            Self = self;
            State = state;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
