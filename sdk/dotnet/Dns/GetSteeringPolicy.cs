// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Dns
{
    public static class GetSteeringPolicy
    {
        /// <summary>
        /// This data source provides details about a specific Steering Policy resource in Oracle Cloud Infrastructure DNS service.
        /// 
        /// Gets information about the specified steering policy.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSteeringPolicy = Oci.Dns.GetSteeringPolicy.Invoke(new()
        ///     {
        ///         SteeringPolicyId = oci_dns_steering_policy.Test_steering_policy.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSteeringPolicyResult> InvokeAsync(GetSteeringPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSteeringPolicyResult>("oci:Dns/getSteeringPolicy:getSteeringPolicy", args ?? new GetSteeringPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Steering Policy resource in Oracle Cloud Infrastructure DNS service.
        /// 
        /// Gets information about the specified steering policy.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSteeringPolicy = Oci.Dns.GetSteeringPolicy.Invoke(new()
        ///     {
        ///         SteeringPolicyId = oci_dns_steering_policy.Test_steering_policy.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSteeringPolicyResult> Invoke(GetSteeringPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSteeringPolicyResult>("oci:Dns/getSteeringPolicy:getSteeringPolicy", args ?? new GetSteeringPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSteeringPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the target steering policy.
        /// </summary>
        [Input("steeringPolicyId", required: true)]
        public string SteeringPolicyId { get; set; } = null!;

        public GetSteeringPolicyArgs()
        {
        }
        public static new GetSteeringPolicyArgs Empty => new GetSteeringPolicyArgs();
    }

    public sealed class GetSteeringPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the target steering policy.
        /// </summary>
        [Input("steeringPolicyId", required: true)]
        public Input<string> SteeringPolicyId { get; set; } = null!;

        public GetSteeringPolicyInvokeArgs()
        {
        }
        public static new GetSteeringPolicyInvokeArgs Empty => new GetSteeringPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetSteeringPolicyResult
    {
        /// <summary>
        /// The set of all answers that can potentially issue from the steering policy.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSteeringPolicyAnswerResult> Answers;
        /// <summary>
        /// The OCID of the compartment containing the steering policy.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// A user-friendly name for the steering policy. Does not have to be unique and can be changed. Avoid entering confidential information.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// The OCID of the health check monitor providing health data about the answers of the steering policy. A steering policy answer with `rdata` matching a monitored endpoint will use the health data of that endpoint. A steering policy answer with `rdata` not matching any monitored endpoint will be assumed healthy.
        /// </summary>
        public readonly string HealthCheckMonitorId;
        /// <summary>
        /// The OCID of the resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The series of rules that will be processed in sequence to reduce the pool of answers to a response for any given request.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSteeringPolicyRuleResult> Rules;
        /// <summary>
        /// The canonical absolute URL of the resource.
        /// </summary>
        public readonly string Self;
        /// <summary>
        /// The current state of the resource.
        /// </summary>
        public readonly string State;
        public readonly string SteeringPolicyId;
        /// <summary>
        /// A set of predefined rules based on the desired purpose of the steering policy. Each template utilizes Traffic Management's rules in a different order to produce the desired results when answering DNS queries.
        /// </summary>
        public readonly string Template;
        /// <summary>
        /// The date and time the resource was created, expressed in RFC 3339 timestamp format.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The Time To Live (TTL) for responses from the steering policy, in seconds. If not specified during creation, a value of 30 seconds will be used.
        /// </summary>
        public readonly int Ttl;

        [OutputConstructor]
        private GetSteeringPolicyResult(
            ImmutableArray<Outputs.GetSteeringPolicyAnswerResult> answers,

            string compartmentId,

            ImmutableDictionary<string, object> definedTags,

            string displayName,

            ImmutableDictionary<string, object> freeformTags,

            string healthCheckMonitorId,

            string id,

            ImmutableArray<Outputs.GetSteeringPolicyRuleResult> rules,

            string self,

            string state,

            string steeringPolicyId,

            string template,

            string timeCreated,

            int ttl)
        {
            Answers = answers;
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            HealthCheckMonitorId = healthCheckMonitorId;
            Id = id;
            Rules = rules;
            Self = self;
            State = state;
            SteeringPolicyId = steeringPolicyId;
            Template = template;
            TimeCreated = timeCreated;
            Ttl = ttl;
        }
    }
}
