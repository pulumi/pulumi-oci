// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Dns
{
    public static class GetView
    {
        /// <summary>
        /// This data source provides details about a specific View resource in Oracle Cloud Infrastructure DNS service.
        /// 
        /// Gets information about a specific view. Note that attempting to get a
        /// view in the DELETED lifecycleState will result in a `404` response to be
        /// consistent with other operations of the API. Requires a `PRIVATE` scope query parameter.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testView = Oci.Dns.GetView.Invoke(new()
        ///     {
        ///         ViewId = oci_dns_view.Test_view.Id,
        ///         Scope = "PRIVATE",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetViewResult> InvokeAsync(GetViewArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetViewResult>("oci:Dns/getView:getView", args ?? new GetViewArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific View resource in Oracle Cloud Infrastructure DNS service.
        /// 
        /// Gets information about a specific view. Note that attempting to get a
        /// view in the DELETED lifecycleState will result in a `404` response to be
        /// consistent with other operations of the API. Requires a `PRIVATE` scope query parameter.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testView = Oci.Dns.GetView.Invoke(new()
        ///     {
        ///         ViewId = oci_dns_view.Test_view.Id,
        ///         Scope = "PRIVATE",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetViewResult> Invoke(GetViewInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetViewResult>("oci:Dns/getView:getView", args ?? new GetViewInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetViewArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Value must be `PRIVATE` when listing views for private zones.
        /// </summary>
        [Input("scope")]
        public string? Scope { get; set; }

        /// <summary>
        /// The OCID of the target view.
        /// </summary>
        [Input("viewId")]
        public string? ViewId { get; set; }

        public GetViewArgs()
        {
        }
        public static new GetViewArgs Empty => new GetViewArgs();
    }

    public sealed class GetViewInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Value must be `PRIVATE` when listing views for private zones.
        /// </summary>
        [Input("scope")]
        public Input<string>? Scope { get; set; }

        /// <summary>
        /// The OCID of the target view.
        /// </summary>
        [Input("viewId")]
        public Input<string>? ViewId { get; set; }

        public GetViewInvokeArgs()
        {
        }
        public static new GetViewInvokeArgs Empty => new GetViewInvokeArgs();
    }


    [OutputType]
    public sealed class GetViewResult
    {
        /// <summary>
        /// The OCID of the owning compartment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// The display name of the view.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// The OCID of the view.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
        /// </summary>
        public readonly bool IsProtected;
        public readonly string? Scope;
        /// <summary>
        /// The canonical absolute URL of the resource.
        /// </summary>
        public readonly string Self;
        /// <summary>
        /// The current state of the resource.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The date and time the resource was last updated in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
        /// </summary>
        public readonly string TimeUpdated;
        public readonly string? ViewId;

        [OutputConstructor]
        private GetViewResult(
            string compartmentId,

            ImmutableDictionary<string, object> definedTags,

            string displayName,

            ImmutableDictionary<string, object> freeformTags,

            string id,

            bool isProtected,

            string? scope,

            string self,

            string state,

            string timeCreated,

            string timeUpdated,

            string? viewId)
        {
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            IsProtected = isProtected;
            Scope = scope;
            Self = self;
            State = state;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            ViewId = viewId;
        }
    }
}
