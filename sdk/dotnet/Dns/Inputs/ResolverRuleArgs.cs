// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Dns.Inputs
{

    public sealed class ResolverRuleArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The action determines the behavior of the rule. If a query matches a supplied condition, the action will apply. If there are no conditions on the rule, all queries are subject to the specified action.
        /// </summary>
        [Input("action", required: true)]
        public Input<string> Action { get; set; } = null!;

        [Input("clientAddressConditions")]
        private InputList<string>? _clientAddressConditions;

        /// <summary>
        /// (Updatable) A list of CIDR blocks. The query must come from a client within one of the blocks in order for the rule action to apply.
        /// </summary>
        public InputList<string> ClientAddressConditions
        {
            get => _clientAddressConditions ?? (_clientAddressConditions = new InputList<string>());
            set => _clientAddressConditions = value;
        }

        [Input("destinationAddresses", required: true)]
        private InputList<string>? _destinationAddresses;

        /// <summary>
        /// (Updatable) IP addresses to which queries should be forwarded. Currently limited to a single address.
        /// </summary>
        public InputList<string> DestinationAddresses
        {
            get => _destinationAddresses ?? (_destinationAddresses = new InputList<string>());
            set => _destinationAddresses = value;
        }

        [Input("qnameCoverConditions")]
        private InputList<string>? _qnameCoverConditions;

        /// <summary>
        /// (Updatable) A list of domain names. The query must be covered by one of the domains in order for the rule action to apply.
        /// </summary>
        public InputList<string> QnameCoverConditions
        {
            get => _qnameCoverConditions ?? (_qnameCoverConditions = new InputList<string>());
            set => _qnameCoverConditions = value;
        }

        /// <summary>
        /// (Updatable) Name of an endpoint, that is a sub-resource of the resolver, to use as the forwarding interface. The endpoint must have isForwarding set to true.
        /// </summary>
        [Input("sourceEndpointName", required: true)]
        public Input<string> SourceEndpointName { get; set; } = null!;

        public ResolverRuleArgs()
        {
        }
    }
}
