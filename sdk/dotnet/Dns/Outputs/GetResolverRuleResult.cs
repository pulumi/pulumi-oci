// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Dns.Outputs
{

    [OutputType]
    public sealed class GetResolverRuleResult
    {
        /// <summary>
        /// The action determines the behavior of the rule. If a query matches a supplied condition, the action will apply. If there are no conditions on the rule, all queries are subject to the specified action.
        /// </summary>
        public readonly string Action;
        /// <summary>
        /// A list of CIDR blocks. The query must come from a client within one of the blocks in order for the rule action to apply.
        /// </summary>
        public readonly ImmutableArray<string> ClientAddressConditions;
        /// <summary>
        /// IP addresses to which queries should be forwarded. Currently limited to a single address.
        /// </summary>
        public readonly ImmutableArray<string> DestinationAddresses;
        /// <summary>
        /// A list of domain names. The query must be covered by one of the domains in order for the rule action to apply.
        /// </summary>
        public readonly ImmutableArray<string> QnameCoverConditions;
        /// <summary>
        /// Case-insensitive name of an endpoint, that is a sub-resource of the resolver, to use as the forwarding interface. The endpoint must have isForwarding set to true.
        /// </summary>
        public readonly string SourceEndpointName;

        [OutputConstructor]
        private GetResolverRuleResult(
            string action,

            ImmutableArray<string> clientAddressConditions,

            ImmutableArray<string> destinationAddresses,

            ImmutableArray<string> qnameCoverConditions,

            string sourceEndpointName)
        {
            Action = action;
            ClientAddressConditions = clientAddressConditions;
            DestinationAddresses = destinationAddresses;
            QnameCoverConditions = qnameCoverConditions;
            SourceEndpointName = sourceEndpointName;
        }
    }
}
