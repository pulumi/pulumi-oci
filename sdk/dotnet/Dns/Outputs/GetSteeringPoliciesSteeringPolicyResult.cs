// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Dns.Outputs
{

    [OutputType]
    public sealed class GetSteeringPoliciesSteeringPolicyResult
    {
        /// <summary>
        /// The set of all answers that can potentially issue from the steering policy.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSteeringPoliciesSteeringPolicyAnswerResult> Answers;
        /// <summary>
        /// The OCID of the compartment the resource belongs to.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// The displayName of a resource.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// Search by health check monitor OCID. Will match any resource whose health check monitor ID matches the provided value.
        /// </summary>
        public readonly string HealthCheckMonitorId;
        /// <summary>
        /// The OCID of a resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The series of rules that will be processed in sequence to reduce the pool of answers to a response for any given request.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSteeringPoliciesSteeringPolicyRuleResult> Rules;
        /// <summary>
        /// The canonical absolute URL of the resource.
        /// </summary>
        public readonly string Self;
        /// <summary>
        /// The state of a resource.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Search by steering template type. Will match any resource whose template type matches the provided value.
        /// </summary>
        public readonly string Template;
        /// <summary>
        /// The date and time the resource was created, expressed in RFC 3339 timestamp format.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The Time To Live (TTL) for responses from the steering policy, in seconds. If not specified during creation, a value of 30 seconds will be used.
        /// </summary>
        public readonly int Ttl;

        [OutputConstructor]
        private GetSteeringPoliciesSteeringPolicyResult(
            ImmutableArray<Outputs.GetSteeringPoliciesSteeringPolicyAnswerResult> answers,

            string compartmentId,

            ImmutableDictionary<string, object> definedTags,

            string displayName,

            ImmutableDictionary<string, object> freeformTags,

            string healthCheckMonitorId,

            string id,

            ImmutableArray<Outputs.GetSteeringPoliciesSteeringPolicyRuleResult> rules,

            string self,

            string state,

            string template,

            string timeCreated,

            int ttl)
        {
            Answers = answers;
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            HealthCheckMonitorId = healthCheckMonitorId;
            Id = id;
            Rules = rules;
            Self = self;
            State = state;
            Template = template;
            TimeCreated = timeCreated;
            Ttl = ttl;
        }
    }
}
