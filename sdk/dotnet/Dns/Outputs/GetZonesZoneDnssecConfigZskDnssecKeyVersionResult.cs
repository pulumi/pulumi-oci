// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Dns.Outputs
{

    [OutputType]
    public sealed class GetZonesZoneDnssecConfigZskDnssecKeyVersionResult
    {
        /// <summary>
        /// The signing algorithm used for the key.
        /// </summary>
        public readonly string Algorithm;
        /// <summary>
        /// The key tag associated with the `DnssecKeyVersion`. This key tag will be present in the RRSIG and DS records associated with the key material for this `DnssecKeyVersion`. For more information about key tags, see [RFC 4034](https://tools.ietf.org/html/rfc4034).
        /// </summary>
        public readonly int KeyTag;
        /// <summary>
        /// The length of the corresponding private key in bytes, expressed as an integer.
        /// </summary>
        public readonly int LengthInBytes;
        /// <summary>
        /// When populated, this is the UUID of the `DnssecKeyVersion` that this `DnssecKeyVersion` will replace or has replaced.
        /// </summary>
        public readonly string PredecessorDnssecKeyVersionUuid;
        /// <summary>
        /// When populated, this is the UUID of the `DnssecKeyVersion` that will replace, or has replaced, this `DnssecKeyVersion`.
        /// </summary>
        public readonly string SuccessorDnssecKeyVersionUuid;
        /// <summary>
        /// The date and time the key version went, or will go, active, expressed in RFC 3339 timestamp format. This is when the key material will be used to generate RRSIGs.
        /// </summary>
        public readonly string TimeActivated;
        /// <summary>
        /// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The date and time at which the recommended key version publication/activation lifetime ends, expressed in RFC 3339 timestamp format. This is when the corresponding DNSKEY should no longer exist in zone contents and no longer be used to generate RRSIGs. For a key sigining key (KSK), if `PromoteZoneDnssecKeyVersion` has not been called on this `DnssecKeyVersion`'s successor then it will remain active for arbitrarily long past its recommended lifetime. This prevents service disruption at the potential increased risk of key compromise.
        /// </summary>
        public readonly string TimeExpired;
        /// <summary>
        /// The date and time the key version went, or will go, inactive, expressed in RFC 3339 timestamp format. This is when the key material will no longer be used to generate RRSIGs. For a key signing key (KSK) `DnssecKeyVersion`, this is populated after `PromoteZoneDnssecKeyVersion` has been called on its successor `DnssecKeyVersion`.
        /// </summary>
        public readonly string TimeInactivated;
        /// <summary>
        /// The date and time the key version was promoted expressed in RFC 3339 timestamp format.
        /// </summary>
        public readonly string TimePromoted;
        /// <summary>
        /// The date and time the key version was, or will be, published, expressed in RFC 3339 timestamp format. This is when the zone contents will include a DNSKEY record corresponding to the key material.
        /// </summary>
        public readonly string TimePublished;
        /// <summary>
        /// The date and time the key version was, or will be, unpublished, expressed in RFC 3339 timestamp format. This is when the corresponding DNSKEY will be removed from zone contents. For a key signing key (KSK) `DnssecKeyVersion`, this is populated after `PromoteZoneDnssecKeyVersion` has been called on its successor `DnssecKeyVersion`.
        /// </summary>
        public readonly string TimeUnpublished;
        /// <summary>
        /// The UUID of the `DnssecKeyVersion`.
        /// </summary>
        public readonly string Uuid;

        [OutputConstructor]
        private GetZonesZoneDnssecConfigZskDnssecKeyVersionResult(
            string algorithm,

            int keyTag,

            int lengthInBytes,

            string predecessorDnssecKeyVersionUuid,

            string successorDnssecKeyVersionUuid,

            string timeActivated,

            string timeCreated,

            string timeExpired,

            string timeInactivated,

            string timePromoted,

            string timePublished,

            string timeUnpublished,

            string uuid)
        {
            Algorithm = algorithm;
            KeyTag = keyTag;
            LengthInBytes = lengthInBytes;
            PredecessorDnssecKeyVersionUuid = predecessorDnssecKeyVersionUuid;
            SuccessorDnssecKeyVersionUuid = successorDnssecKeyVersionUuid;
            TimeActivated = timeActivated;
            TimeCreated = timeCreated;
            TimeExpired = timeExpired;
            TimeInactivated = timeInactivated;
            TimePromoted = timePromoted;
            TimePublished = timePublished;
            TimeUnpublished = timeUnpublished;
            Uuid = uuid;
        }
    }
}
