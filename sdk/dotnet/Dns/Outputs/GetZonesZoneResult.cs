// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Dns.Outputs
{

    [OutputType]
    public sealed class GetZonesZoneResult
    {
        /// <summary>
        /// The OCID of the compartment the resource belongs to.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// External master servers for the zone. `externalMasters` becomes a required parameter when the `zoneType` value is `SECONDARY`.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetZonesZoneExternalMasterResult> ExternalMasters;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// The OCID of the zone.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
        /// </summary>
        public readonly bool IsProtected;
        /// <summary>
        /// A case-sensitive filter for zone names. Will match any zone with a name that equals the provided value.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The authoritative nameservers for the zone.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetZonesZoneNameserverResult> Nameservers;
        /// <summary>
        /// Specifies to operate only on resources that have a matching DNS scope. This value will be null 
        /// for zones in the global DNS and `PRIVATE` when listing private zones.
        /// </summary>
        public readonly string Scope;
        /// <summary>
        /// The canonical absolute URL of the resource.
        /// </summary>
        public readonly string Self;
        /// <summary>
        /// The current serial of the zone. As seen in the zone's SOA record.
        /// </summary>
        public readonly int Serial;
        /// <summary>
        /// The state of a resource.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// Version is the never-repeating, totally-orderable, version of the zone, from which the serial field of the zone's SOA record is derived.
        /// </summary>
        public readonly string Version;
        /// <summary>
        /// The OCID of the view the resource is associated with.
        /// </summary>
        public readonly string ViewId;
        /// <summary>
        /// Search by zone type, `PRIMARY` or `SECONDARY`. Will match any zone whose type equals the provided value.
        /// </summary>
        public readonly string ZoneType;

        [OutputConstructor]
        private GetZonesZoneResult(
            string compartmentId,

            ImmutableDictionary<string, object> definedTags,

            ImmutableArray<Outputs.GetZonesZoneExternalMasterResult> externalMasters,

            ImmutableDictionary<string, object> freeformTags,

            string id,

            bool isProtected,

            string name,

            ImmutableArray<Outputs.GetZonesZoneNameserverResult> nameservers,

            string scope,

            string self,

            int serial,

            string state,

            string timeCreated,

            string version,

            string viewId,

            string zoneType)
        {
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            ExternalMasters = externalMasters;
            FreeformTags = freeformTags;
            Id = id;
            IsProtected = isProtected;
            Name = name;
            Nameservers = nameservers;
            Scope = scope;
            Self = self;
            Serial = serial;
            State = state;
            TimeCreated = timeCreated;
            Version = version;
            ViewId = viewId;
            ZoneType = zoneType;
        }
    }
}
