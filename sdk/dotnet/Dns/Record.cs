// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Dns
{
    /// <summary>
    /// **Deprecated. Use oci.Dns.Rrset instead.**
    /// 
    /// This resource provides the Record resource in Oracle Cloud Infrastructure DNS service.
    /// 
    ///   Updates a collection of records in the specified zone.
    /// 
    /// You can update one record or all records for the specified zone depending on the changes provided in the
    /// request body. You can also add or remove records using this function. When the zone name is provided as
    /// a path parameter and `PRIVATE` is used for the scope query parameter then the viewId query parameter is
    /// required.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testRecord = new Oci.Dns.Record("test_record", new()
    ///     {
    ///         ZoneNameOrId = testZoneNameOr.Id,
    ///         Domain = recordItemsDomain,
    ///         Rtype = recordItemsRtype,
    ///         Rdata = recordItemsRdata,
    ///         Ttl = recordItemsTtl,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Import is not supported for this resource.
    /// </summary>
    [OciResourceType("oci:Dns/record:Record")]
    public partial class Record : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) The OCID of the compartment the resource belongs to. If supplied, it must match the Zone's compartment ocid.
        /// </summary>
        [Output("compartmentId")]
        public Output<string?> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// The fully qualified domain name where the record can be located. Domain value is case insensitive.
        /// </summary>
        [Output("domain")]
        public Output<string> Domain { get; private set; } = null!;

        /// <summary>
        /// A Boolean flag indicating whether or not parts of the record are unable to be explicitly managed.
        /// </summary>
        [Output("isProtected")]
        public Output<bool> IsProtected { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The record's data, as whitespace-delimited tokens in type-specific presentation format. All RDATA is normalized and the returned presentation of your RDATA may differ from its initial input. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm)
        /// </summary>
        [Output("rdata")]
        public Output<string?> Rdata { get; private set; } = null!;

        /// <summary>
        /// A unique identifier for the record within its zone.
        /// </summary>
        [Output("recordHash")]
        public Output<string> RecordHash { get; private set; } = null!;

        /// <summary>
        /// The latest version of the record's zone in which its RRSet differs from the preceding version.
        /// </summary>
        [Output("rrsetVersion")]
        public Output<string> RrsetVersion { get; private set; } = null!;

        /// <summary>
        /// The canonical name for the record's type, such as A or CNAME. For more information, see [Resource Record (RR) TYPEs](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-4).
        /// </summary>
        [Output("rtype")]
        public Output<string> Rtype { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The Time To Live for the record, in seconds.
        /// </summary>
        [Output("ttl")]
        public Output<int?> Ttl { get; private set; } = null!;

        /// <summary>
        /// The name or OCID of the target zone.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("zoneNameOrId")]
        public Output<string> ZoneNameOrId { get; private set; } = null!;


        /// <summary>
        /// Create a Record resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Record(string name, RecordArgs args, CustomResourceOptions? options = null)
            : base("oci:Dns/record:Record", name, args ?? new RecordArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Record(string name, Input<string> id, RecordState? state = null, CustomResourceOptions? options = null)
            : base("oci:Dns/record:Record", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Record resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Record Get(string name, Input<string> id, RecordState? state = null, CustomResourceOptions? options = null)
        {
            return new Record(name, id, state, options);
        }
    }

    public sealed class RecordArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The OCID of the compartment the resource belongs to. If supplied, it must match the Zone's compartment ocid.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// The fully qualified domain name where the record can be located. Domain value is case insensitive.
        /// </summary>
        [Input("domain", required: true)]
        public Input<string> Domain { get; set; } = null!;

        /// <summary>
        /// (Updatable) The record's data, as whitespace-delimited tokens in type-specific presentation format. All RDATA is normalized and the returned presentation of your RDATA may differ from its initial input. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm)
        /// </summary>
        [Input("rdata")]
        public Input<string>? Rdata { get; set; }

        /// <summary>
        /// The canonical name for the record's type, such as A or CNAME. For more information, see [Resource Record (RR) TYPEs](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-4).
        /// </summary>
        [Input("rtype", required: true)]
        public Input<string> Rtype { get; set; } = null!;

        /// <summary>
        /// (Updatable) The Time To Live for the record, in seconds.
        /// </summary>
        [Input("ttl")]
        public Input<int>? Ttl { get; set; }

        /// <summary>
        /// The name or OCID of the target zone.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("zoneNameOrId", required: true)]
        public Input<string> ZoneNameOrId { get; set; } = null!;

        public RecordArgs()
        {
        }
        public static new RecordArgs Empty => new RecordArgs();
    }

    public sealed class RecordState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The OCID of the compartment the resource belongs to. If supplied, it must match the Zone's compartment ocid.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// The fully qualified domain name where the record can be located. Domain value is case insensitive.
        /// </summary>
        [Input("domain")]
        public Input<string>? Domain { get; set; }

        /// <summary>
        /// A Boolean flag indicating whether or not parts of the record are unable to be explicitly managed.
        /// </summary>
        [Input("isProtected")]
        public Input<bool>? IsProtected { get; set; }

        /// <summary>
        /// (Updatable) The record's data, as whitespace-delimited tokens in type-specific presentation format. All RDATA is normalized and the returned presentation of your RDATA may differ from its initial input. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm)
        /// </summary>
        [Input("rdata")]
        public Input<string>? Rdata { get; set; }

        /// <summary>
        /// A unique identifier for the record within its zone.
        /// </summary>
        [Input("recordHash")]
        public Input<string>? RecordHash { get; set; }

        /// <summary>
        /// The latest version of the record's zone in which its RRSet differs from the preceding version.
        /// </summary>
        [Input("rrsetVersion")]
        public Input<string>? RrsetVersion { get; set; }

        /// <summary>
        /// The canonical name for the record's type, such as A or CNAME. For more information, see [Resource Record (RR) TYPEs](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-4).
        /// </summary>
        [Input("rtype")]
        public Input<string>? Rtype { get; set; }

        /// <summary>
        /// (Updatable) The Time To Live for the record, in seconds.
        /// </summary>
        [Input("ttl")]
        public Input<int>? Ttl { get; set; }

        /// <summary>
        /// The name or OCID of the target zone.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("zoneNameOrId")]
        public Input<string>? ZoneNameOrId { get; set; }

        public RecordState()
        {
        }
        public static new RecordState Empty => new RecordState();
    }
}
