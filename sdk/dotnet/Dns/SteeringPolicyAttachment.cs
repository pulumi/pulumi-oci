// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Dns
{
    /// <summary>
    /// This resource provides the Steering Policy Attachment resource in Oracle Cloud Infrastructure DNS service.
    /// 
    /// Creates a new attachment between a steering policy and a domain, giving the
    /// policy permission to answer queries for the specified domain. A steering policy must
    /// be attached to a domain for the policy to answer DNS queries for that domain.
    /// 
    /// For the purposes of access control, the attachment is automatically placed
    /// into the same compartment as the domain's zone.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var testSteeringPolicyAttachment = new Oci.Dns.SteeringPolicyAttachment("testSteeringPolicyAttachment", new Oci.Dns.SteeringPolicyAttachmentArgs
    ///         {
    ///             DomainName = @var.Steering_policy_attachment_domain_name,
    ///             SteeringPolicyId = oci_dns_steering_policy.Test_steering_policy.Id,
    ///             ZoneId = oci_dns_zone.Test_zone.Id,
    ///             DisplayName = @var.Steering_policy_attachment_display_name,
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// SteeringPolicyAttachments can be imported using the `id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import oci:Dns/steeringPolicyAttachment:SteeringPolicyAttachment test_steering_policy_attachment "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:Dns/steeringPolicyAttachment:SteeringPolicyAttachment")]
    public partial class SteeringPolicyAttachment : Pulumi.CustomResource
    {
        /// <summary>
        /// The OCID of the compartment containing the steering policy attachment.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A user-friendly name for the steering policy attachment. Does not have to be unique and can be changed. Avoid entering confidential information.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// The attached domain within the attached zone. `domain_name` is case insensitive.
        /// </summary>
        [Output("domainName")]
        public Output<string> DomainName { get; private set; } = null!;

        /// <summary>
        /// The record types covered by the attachment at the domain. The set of record types is determined by aggregating the record types from the answers defined in the steering policy.
        /// </summary>
        [Output("rtypes")]
        public Output<ImmutableArray<string>> Rtypes { get; private set; } = null!;

        /// <summary>
        /// The canonical absolute URL of the resource.
        /// </summary>
        [Output("self")]
        public Output<string> Self { get; private set; } = null!;

        /// <summary>
        /// The current state of the resource.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The OCID of the attached steering policy.
        /// </summary>
        [Output("steeringPolicyId")]
        public Output<string> SteeringPolicyId { get; private set; } = null!;

        /// <summary>
        /// The date and time the resource was created, expressed in RFC 3339 timestamp format.
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The OCID of the attached zone.
        /// </summary>
        [Output("zoneId")]
        public Output<string> ZoneId { get; private set; } = null!;


        /// <summary>
        /// Create a SteeringPolicyAttachment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SteeringPolicyAttachment(string name, SteeringPolicyAttachmentArgs args, CustomResourceOptions? options = null)
            : base("oci:Dns/steeringPolicyAttachment:SteeringPolicyAttachment", name, args ?? new SteeringPolicyAttachmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SteeringPolicyAttachment(string name, Input<string> id, SteeringPolicyAttachmentState? state = null, CustomResourceOptions? options = null)
            : base("oci:Dns/steeringPolicyAttachment:SteeringPolicyAttachment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SteeringPolicyAttachment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SteeringPolicyAttachment Get(string name, Input<string> id, SteeringPolicyAttachmentState? state = null, CustomResourceOptions? options = null)
        {
            return new SteeringPolicyAttachment(name, id, state, options);
        }
    }

    public sealed class SteeringPolicyAttachmentArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) A user-friendly name for the steering policy attachment. Does not have to be unique and can be changed. Avoid entering confidential information.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// The attached domain within the attached zone. `domain_name` is case insensitive.
        /// </summary>
        [Input("domainName", required: true)]
        public Input<string> DomainName { get; set; } = null!;

        /// <summary>
        /// The OCID of the attached steering policy.
        /// </summary>
        [Input("steeringPolicyId", required: true)]
        public Input<string> SteeringPolicyId { get; set; } = null!;

        /// <summary>
        /// The OCID of the attached zone.
        /// </summary>
        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public SteeringPolicyAttachmentArgs()
        {
        }
    }

    public sealed class SteeringPolicyAttachmentState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The OCID of the compartment containing the steering policy attachment.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// (Updatable) A user-friendly name for the steering policy attachment. Does not have to be unique and can be changed. Avoid entering confidential information.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// The attached domain within the attached zone. `domain_name` is case insensitive.
        /// </summary>
        [Input("domainName")]
        public Input<string>? DomainName { get; set; }

        [Input("rtypes")]
        private InputList<string>? _rtypes;

        /// <summary>
        /// The record types covered by the attachment at the domain. The set of record types is determined by aggregating the record types from the answers defined in the steering policy.
        /// </summary>
        public InputList<string> Rtypes
        {
            get => _rtypes ?? (_rtypes = new InputList<string>());
            set => _rtypes = value;
        }

        /// <summary>
        /// The canonical absolute URL of the resource.
        /// </summary>
        [Input("self")]
        public Input<string>? Self { get; set; }

        /// <summary>
        /// The current state of the resource.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The OCID of the attached steering policy.
        /// </summary>
        [Input("steeringPolicyId")]
        public Input<string>? SteeringPolicyId { get; set; }

        /// <summary>
        /// The date and time the resource was created, expressed in RFC 3339 timestamp format.
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The OCID of the attached zone.
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public SteeringPolicyAttachmentState()
        {
        }
    }
}
