// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Dns
{
    /// <summary>
    /// This resource provides the Zone Promote Dnssec Key Version resource in Oracle Cloud Infrastructure DNS service.
    /// 
    /// Promotes a specified `DnssecKeyVersion` on the zone.
    /// 
    /// If the `DnssecKeyVersion` identified in the request body is a key signing key (KSK) that is replacing
    /// another `DnssecKeyVersion`, then the old `DnssecKeyVersion` is scheduled for removal from the zone.
    /// 
    /// For key signing keys (KSKs), you must create the DS record with the new key information **before** promoting
    /// the new key to establish a chain of trust. To avoid a service disruption, remove the old DS record as soon
    /// as its TTL (time to live) expires.
    /// 
    /// For more information, see [DNSSEC](https://docs.cloud.oracle.com/iaas/Content/DNS/Concepts/dnssec.htm).
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testZonePromoteDnssecKeyVersion = new Oci.Dns.ZonePromoteDnssecKeyVersion("test_zone_promote_dnssec_key_version", new()
    ///     {
    ///         DnssecKeyVersionUuid = zonePromoteDnssecKeyVersionDnssecKeyVersionUuid,
    ///         ZoneId = testZone.Id,
    ///         Scope = zonePromoteDnssecKeyVersionScope,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Import is not supported for this resource.
    /// </summary>
    [OciResourceType("oci:Dns/zonePromoteDnssecKeyVersion:ZonePromoteDnssecKeyVersion")]
    public partial class ZonePromoteDnssecKeyVersion : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The UUID of the `DnssecKeyVersion` that is being promoted.
        /// </summary>
        [Output("dnssecKeyVersionUuid")]
        public Output<string> DnssecKeyVersionUuid { get; private set; } = null!;

        /// <summary>
        /// Specifies to operate only on resources that have a matching DNS scope.
        /// </summary>
        [Output("scope")]
        public Output<string> Scope { get; private set; } = null!;

        /// <summary>
        /// The OCID of the target zone.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("zoneId")]
        public Output<string> ZoneId { get; private set; } = null!;


        /// <summary>
        /// Create a ZonePromoteDnssecKeyVersion resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ZonePromoteDnssecKeyVersion(string name, ZonePromoteDnssecKeyVersionArgs args, CustomResourceOptions? options = null)
            : base("oci:Dns/zonePromoteDnssecKeyVersion:ZonePromoteDnssecKeyVersion", name, args ?? new ZonePromoteDnssecKeyVersionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ZonePromoteDnssecKeyVersion(string name, Input<string> id, ZonePromoteDnssecKeyVersionState? state = null, CustomResourceOptions? options = null)
            : base("oci:Dns/zonePromoteDnssecKeyVersion:ZonePromoteDnssecKeyVersion", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ZonePromoteDnssecKeyVersion resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ZonePromoteDnssecKeyVersion Get(string name, Input<string> id, ZonePromoteDnssecKeyVersionState? state = null, CustomResourceOptions? options = null)
        {
            return new ZonePromoteDnssecKeyVersion(name, id, state, options);
        }
    }

    public sealed class ZonePromoteDnssecKeyVersionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The UUID of the `DnssecKeyVersion` that is being promoted.
        /// </summary>
        [Input("dnssecKeyVersionUuid", required: true)]
        public Input<string> DnssecKeyVersionUuid { get; set; } = null!;

        /// <summary>
        /// Specifies to operate only on resources that have a matching DNS scope.
        /// </summary>
        [Input("scope")]
        public Input<string>? Scope { get; set; }

        /// <summary>
        /// The OCID of the target zone.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public ZonePromoteDnssecKeyVersionArgs()
        {
        }
        public static new ZonePromoteDnssecKeyVersionArgs Empty => new ZonePromoteDnssecKeyVersionArgs();
    }

    public sealed class ZonePromoteDnssecKeyVersionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The UUID of the `DnssecKeyVersion` that is being promoted.
        /// </summary>
        [Input("dnssecKeyVersionUuid")]
        public Input<string>? DnssecKeyVersionUuid { get; set; }

        /// <summary>
        /// Specifies to operate only on resources that have a matching DNS scope.
        /// </summary>
        [Input("scope")]
        public Input<string>? Scope { get; set; }

        /// <summary>
        /// The OCID of the target zone.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public ZonePromoteDnssecKeyVersionState()
        {
        }
        public static new ZonePromoteDnssecKeyVersionState Empty => new ZonePromoteDnssecKeyVersionState();
    }
}
