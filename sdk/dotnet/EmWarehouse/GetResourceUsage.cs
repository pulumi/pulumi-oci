// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.EmWarehouse
{
    public static class GetResourceUsage
    {
        /// <summary>
        /// This data source provides details about a specific Em Warehouse Resource Usage resource in Oracle Cloud Infrastructure Em Warehouse service.
        /// 
        /// Gets a EmWarehouseResourceUsage by identifier
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testEmWarehouseResourceUsage = Oci.EmWarehouse.GetResourceUsage.Invoke(new()
        ///     {
        ///         EmWarehouseId = oci_em_warehouse_em_warehouse.Test_em_warehouse.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetResourceUsageResult> InvokeAsync(GetResourceUsageArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetResourceUsageResult>("oci:EmWarehouse/getResourceUsage:getResourceUsage", args ?? new GetResourceUsageArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Em Warehouse Resource Usage resource in Oracle Cloud Infrastructure Em Warehouse service.
        /// 
        /// Gets a EmWarehouseResourceUsage by identifier
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testEmWarehouseResourceUsage = Oci.EmWarehouse.GetResourceUsage.Invoke(new()
        ///     {
        ///         EmWarehouseId = oci_em_warehouse_em_warehouse.Test_em_warehouse.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetResourceUsageResult> Invoke(GetResourceUsageInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetResourceUsageResult>("oci:EmWarehouse/getResourceUsage:getResourceUsage", args ?? new GetResourceUsageInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetResourceUsageArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// unique EmWarehouse identifier
        /// </summary>
        [Input("emWarehouseId", required: true)]
        public string EmWarehouseId { get; set; } = null!;

        public GetResourceUsageArgs()
        {
        }
        public static new GetResourceUsageArgs Empty => new GetResourceUsageArgs();
    }

    public sealed class GetResourceUsageInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// unique EmWarehouse identifier
        /// </summary>
        [Input("emWarehouseId", required: true)]
        public Input<string> EmWarehouseId { get; set; } = null!;

        public GetResourceUsageInvokeArgs()
        {
        }
        public static new GetResourceUsageInvokeArgs Empty => new GetResourceUsageInvokeArgs();
    }


    [OutputType]
    public sealed class GetResourceUsageResult
    {
        /// <summary>
        /// EmInstanceCount
        /// </summary>
        public readonly int EmInstanceCount;
        /// <summary>
        /// List of emInstances
        /// </summary>
        public readonly ImmutableArray<Outputs.GetResourceUsageEmInstanceResult> EmInstances;
        public readonly string EmWarehouseId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// operations Insights Warehouse Identifier
        /// </summary>
        public readonly string OperationsInsightsWarehouseId;
        /// <summary>
        /// schema name
        /// </summary>
        public readonly string SchemaName;
        /// <summary>
        /// EmInstance Target count
        /// </summary>
        public readonly int TargetsCount;

        [OutputConstructor]
        private GetResourceUsageResult(
            int emInstanceCount,

            ImmutableArray<Outputs.GetResourceUsageEmInstanceResult> emInstances,

            string emWarehouseId,

            string id,

            string operationsInsightsWarehouseId,

            string schemaName,

            int targetsCount)
        {
            EmInstanceCount = emInstanceCount;
            EmInstances = emInstances;
            EmWarehouseId = emWarehouseId;
            Id = id;
            OperationsInsightsWarehouseId = operationsInsightsWarehouseId;
            SchemaName = schemaName;
            TargetsCount = targetsCount;
        }
    }
}
