// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Events
{
    public static class GetRule
    {
        /// <summary>
        /// This data source provides details about a specific Rule resource in Oracle Cloud Infrastructure Events service.
        /// 
        /// Retrieves a rule.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testRule = Oci.Events.GetRule.Invoke(new()
        ///     {
        ///         RuleId = testRuleOciEventsRule.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetRuleResult> InvokeAsync(GetRuleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRuleResult>("oci:Events/getRule:getRule", args ?? new GetRuleArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Rule resource in Oracle Cloud Infrastructure Events service.
        /// 
        /// Retrieves a rule.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testRule = Oci.Events.GetRule.Invoke(new()
        ///     {
        ///         RuleId = testRuleOciEventsRule.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetRuleResult> Invoke(GetRuleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRuleResult>("oci:Events/getRule:getRule", args ?? new GetRuleInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Rule resource in Oracle Cloud Infrastructure Events service.
        /// 
        /// Retrieves a rule.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testRule = Oci.Events.GetRule.Invoke(new()
        ///     {
        ///         RuleId = testRuleOciEventsRule.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetRuleResult> Invoke(GetRuleInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRuleResult>("oci:Events/getRule:getRule", args ?? new GetRuleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRuleArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this rule.
        /// </summary>
        [Input("ruleId", required: true)]
        public string RuleId { get; set; } = null!;

        public GetRuleArgs()
        {
        }
        public static new GetRuleArgs Empty => new GetRuleArgs();
    }

    public sealed class GetRuleInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this rule.
        /// </summary>
        [Input("ruleId", required: true)]
        public Input<string> RuleId { get; set; } = null!;

        public GetRuleInvokeArgs()
        {
        }
        public static new GetRuleInvokeArgs Empty => new GetRuleInvokeArgs();
    }


    [OutputType]
    public sealed class GetRuleResult
    {
        /// <summary>
        /// A list of one or more Action objects.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRuleActionResult> Actions;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to which this rule belongs.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// A filter that specifies the event that will trigger actions associated with this rule. A few  important things to remember about filters:
        /// * Fields not mentioned in the condition are ignored. You can create a valid filter that matches all events with two curly brackets: `{}`
        /// </summary>
        public readonly string Condition;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// A string that describes the details of the rule. It does not have to be unique, and you can change it. Avoid entering confidential information.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// A string that describes the rule. It does not have to be unique, and you can change it. Avoid entering confidential information.  Example: `"This rule sends a notification upon completion of DbaaS backup."`
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. Exists for cross-compatibility only. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this rule.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Whether or not this rule is currently enabled.  Example: `True`
        /// </summary>
        public readonly bool IsEnabled;
        /// <summary>
        /// A message generated by the Events service about the current state of this rule.
        /// </summary>
        public readonly string LifecycleMessage;
        public readonly string RuleId;
        /// <summary>
        /// The current state of the rule.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The time this rule was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-09-12T22:47:12.613Z`
        /// </summary>
        public readonly string TimeCreated;

        [OutputConstructor]
        private GetRuleResult(
            ImmutableArray<Outputs.GetRuleActionResult> actions,

            string compartmentId,

            string condition,

            ImmutableDictionary<string, string> definedTags,

            string description,

            string displayName,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            bool isEnabled,

            string lifecycleMessage,

            string ruleId,

            string state,

            string timeCreated)
        {
            Actions = actions;
            CompartmentId = compartmentId;
            Condition = condition;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            IsEnabled = isEnabled;
            LifecycleMessage = lifecycleMessage;
            RuleId = ruleId;
            State = state;
            TimeCreated = timeCreated;
        }
    }
}
