// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Events.Outputs
{

    [OutputType]
    public sealed class GetRulesRuleResult
    {
        /// <summary>
        /// A list of one or more Action objects.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRulesRuleActionResult> Actions;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to which this rule belongs.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// A filter that specifies the event that will trigger actions associated with this rule. A few  important things to remember about filters:
        /// * Fields not mentioned in the condition are ignored. You can create a valid filter that matches all events with two curly brackets: `{}`
        /// </summary>
        public readonly string Condition;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// A string that describes the details of the rule. It does not have to be unique, and you can change it. Avoid entering confidential information.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// A filter to return only rules with descriptions that match the displayName string in this parameter.  Example: `"This rule sends a notification upon completion of DbaaS backup."`
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. Exists for cross-compatibility only. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this rule.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Whether or not this rule is currently enabled.  Example: `true`
        /// </summary>
        public readonly bool IsEnabled;
        /// <summary>
        /// A message generated by the Events service about the current state of this rule.
        /// </summary>
        public readonly string LifecycleMessage;
        /// <summary>
        /// A filter to return only rules that match the lifecycle state in this parameter.  Example: `Creating`
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The time this rule was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-09-12T22:47:12.613Z`
        /// </summary>
        public readonly string TimeCreated;

        [OutputConstructor]
        private GetRulesRuleResult(
            ImmutableArray<Outputs.GetRulesRuleActionResult> actions,

            string compartmentId,

            string condition,

            ImmutableDictionary<string, object> definedTags,

            string description,

            string displayName,

            ImmutableDictionary<string, object> freeformTags,

            string id,

            bool isEnabled,

            string lifecycleMessage,

            string state,

            string timeCreated)
        {
            Actions = actions;
            CompartmentId = compartmentId;
            Condition = condition;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            IsEnabled = isEnabled;
            LifecycleMessage = lifecycleMessage;
            State = state;
            TimeCreated = timeCreated;
        }
    }
}
