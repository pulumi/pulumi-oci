// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.FileStorage
{
    /// <summary>
    /// This resource provides the File System Quota Rule resource in Oracle Cloud Infrastructure File Storage service.
    /// 
    /// Create an FS level, user or group quota rule given the `fileSystemId`, `principalId`, `principalType` and
    /// `isHardQuota` parameters.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testFileSystemQuotaRule = new Oci.FileStorage.FileSystemQuotaRule("test_file_system_quota_rule", new()
    ///     {
    ///         FileSystemId = testFileSystem.Id,
    ///         IsHardQuota = fileSystemQuotaRuleIsHardQuota,
    ///         PrincipalType = fileSystemQuotaRulePrincipalType,
    ///         QuotaLimitInGigabytes = fileSystemQuotaRuleQuotaLimitInGigabytes,
    ///         DisplayName = fileSystemQuotaRuleDisplayName,
    ///         PrincipalId = testPrincipal.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// FileSystemQuotaRules can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:FileStorage/fileSystemQuotaRule:FileSystemQuotaRule test_file_system_quota_rule "fileSystems/{fileSystemId}/quotaRules/{quotaRuleId}"
    /// ```
    /// </summary>
    [OciResourceType("oci:FileStorage/fileSystemQuotaRule:FileSystemQuotaRule")]
    public partial class FileSystemQuotaRule : global::Pulumi.CustomResource
    {
        [Output("areViolatorsOnly")]
        public Output<bool?> AreViolatorsOnly { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A user-friendly name. It does not have to be unique, and it is changeable. Avoid entering confidential information. Example: `UserXYZ's quota`
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system.
        /// </summary>
        [Output("fileSystemId")]
        public Output<string> FileSystemId { get; private set; } = null!;

        /// <summary>
        /// The flag is an identifier to tell whether the quota rule will be enforced. If `isHardQuota` is true, the quota rule will be enforced so the write will be blocked if usage exceeds the hard quota limit. If `isHardQuota` is false, usage can exceed the soft quota limit. An alarm or notification will be sent to the customer, if the specific usage exceeds.
        /// </summary>
        [Output("isHardQuota")]
        public Output<bool> IsHardQuota { get; private set; } = null!;

        /// <summary>
        /// An identifier for the owner of this usage and quota rule. Unix-like operating systems use this integer value to identify a user or group to manage access control.
        /// </summary>
        [Output("principalId")]
        public Output<int> PrincipalId { get; private set; } = null!;

        /// <summary>
        /// The type of the owner of this quota rule and usage.
        /// </summary>
        [Output("principalType")]
        public Output<string> PrincipalType { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The value of the quota rule. The unit is Gigabyte. 
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("quotaLimitInGigabytes")]
        public Output<int> QuotaLimitInGigabytes { get; private set; } = null!;

        [Output("quotaRuleId")]
        public Output<string> QuotaRuleId { get; private set; } = null!;

        /// <summary>
        /// The date and time the quota rule was started, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The date and time the quota rule was last updated, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;


        /// <summary>
        /// Create a FileSystemQuotaRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FileSystemQuotaRule(string name, FileSystemQuotaRuleArgs args, CustomResourceOptions? options = null)
            : base("oci:FileStorage/fileSystemQuotaRule:FileSystemQuotaRule", name, args ?? new FileSystemQuotaRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FileSystemQuotaRule(string name, Input<string> id, FileSystemQuotaRuleState? state = null, CustomResourceOptions? options = null)
            : base("oci:FileStorage/fileSystemQuotaRule:FileSystemQuotaRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FileSystemQuotaRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FileSystemQuotaRule Get(string name, Input<string> id, FileSystemQuotaRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new FileSystemQuotaRule(name, id, state, options);
        }
    }

    public sealed class FileSystemQuotaRuleArgs : global::Pulumi.ResourceArgs
    {
        [Input("areViolatorsOnly")]
        public Input<bool>? AreViolatorsOnly { get; set; }

        /// <summary>
        /// (Updatable) A user-friendly name. It does not have to be unique, and it is changeable. Avoid entering confidential information. Example: `UserXYZ's quota`
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system.
        /// </summary>
        [Input("fileSystemId", required: true)]
        public Input<string> FileSystemId { get; set; } = null!;

        /// <summary>
        /// The flag is an identifier to tell whether the quota rule will be enforced. If `isHardQuota` is true, the quota rule will be enforced so the write will be blocked if usage exceeds the hard quota limit. If `isHardQuota` is false, usage can exceed the soft quota limit. An alarm or notification will be sent to the customer, if the specific usage exceeds.
        /// </summary>
        [Input("isHardQuota", required: true)]
        public Input<bool> IsHardQuota { get; set; } = null!;

        /// <summary>
        /// An identifier for the owner of this usage and quota rule. Unix-like operating systems use this integer value to identify a user or group to manage access control.
        /// </summary>
        [Input("principalId")]
        public Input<int>? PrincipalId { get; set; }

        /// <summary>
        /// The type of the owner of this quota rule and usage.
        /// </summary>
        [Input("principalType", required: true)]
        public Input<string> PrincipalType { get; set; } = null!;

        /// <summary>
        /// (Updatable) The value of the quota rule. The unit is Gigabyte. 
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("quotaLimitInGigabytes", required: true)]
        public Input<int> QuotaLimitInGigabytes { get; set; } = null!;

        [Input("quotaRuleId")]
        public Input<string>? QuotaRuleId { get; set; }

        public FileSystemQuotaRuleArgs()
        {
        }
        public static new FileSystemQuotaRuleArgs Empty => new FileSystemQuotaRuleArgs();
    }

    public sealed class FileSystemQuotaRuleState : global::Pulumi.ResourceArgs
    {
        [Input("areViolatorsOnly")]
        public Input<bool>? AreViolatorsOnly { get; set; }

        /// <summary>
        /// (Updatable) A user-friendly name. It does not have to be unique, and it is changeable. Avoid entering confidential information. Example: `UserXYZ's quota`
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system.
        /// </summary>
        [Input("fileSystemId")]
        public Input<string>? FileSystemId { get; set; }

        /// <summary>
        /// The flag is an identifier to tell whether the quota rule will be enforced. If `isHardQuota` is true, the quota rule will be enforced so the write will be blocked if usage exceeds the hard quota limit. If `isHardQuota` is false, usage can exceed the soft quota limit. An alarm or notification will be sent to the customer, if the specific usage exceeds.
        /// </summary>
        [Input("isHardQuota")]
        public Input<bool>? IsHardQuota { get; set; }

        /// <summary>
        /// An identifier for the owner of this usage and quota rule. Unix-like operating systems use this integer value to identify a user or group to manage access control.
        /// </summary>
        [Input("principalId")]
        public Input<int>? PrincipalId { get; set; }

        /// <summary>
        /// The type of the owner of this quota rule and usage.
        /// </summary>
        [Input("principalType")]
        public Input<string>? PrincipalType { get; set; }

        /// <summary>
        /// (Updatable) The value of the quota rule. The unit is Gigabyte. 
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("quotaLimitInGigabytes")]
        public Input<int>? QuotaLimitInGigabytes { get; set; }

        [Input("quotaRuleId")]
        public Input<string>? QuotaRuleId { get; set; }

        /// <summary>
        /// The date and time the quota rule was started, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The date and time the quota rule was last updated, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        public FileSystemQuotaRuleState()
        {
        }
        public static new FileSystemQuotaRuleState Empty => new FileSystemQuotaRuleState();
    }
}
