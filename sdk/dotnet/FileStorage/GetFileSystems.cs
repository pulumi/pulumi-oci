// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.FileStorage
{
    public static class GetFileSystems
    {
        /// <summary>
        /// This data source provides the list of File Systems in Oracle Cloud Infrastructure File Storage service.
        /// 
        /// Lists the file system resources in the specified compartment, or by the specified compartment and
        /// file system snapshot policy.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testFileSystems = Oci.FileStorage.GetFileSystems.Invoke(new()
        ///     {
        ///         AvailabilityDomain = @var.File_system_availability_domain,
        ///         CompartmentId = @var.Compartment_id,
        ///         DisplayName = @var.File_system_display_name,
        ///         FilesystemSnapshotPolicyId = oci_file_storage_filesystem_snapshot_policy.Test_filesystem_snapshot_policy.Id,
        ///         Id = @var.File_system_id,
        ///         ParentFileSystemId = oci_file_storage_file_system.Test_file_system.Id,
        ///         SourceSnapshotId = oci_file_storage_snapshot.Test_snapshot.Id,
        ///         State = @var.File_system_state,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetFileSystemsResult> InvokeAsync(GetFileSystemsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFileSystemsResult>("oci:FileStorage/getFileSystems:getFileSystems", args ?? new GetFileSystemsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of File Systems in Oracle Cloud Infrastructure File Storage service.
        /// 
        /// Lists the file system resources in the specified compartment, or by the specified compartment and
        /// file system snapshot policy.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testFileSystems = Oci.FileStorage.GetFileSystems.Invoke(new()
        ///     {
        ///         AvailabilityDomain = @var.File_system_availability_domain,
        ///         CompartmentId = @var.Compartment_id,
        ///         DisplayName = @var.File_system_display_name,
        ///         FilesystemSnapshotPolicyId = oci_file_storage_filesystem_snapshot_policy.Test_filesystem_snapshot_policy.Id,
        ///         Id = @var.File_system_id,
        ///         ParentFileSystemId = oci_file_storage_file_system.Test_file_system.Id,
        ///         SourceSnapshotId = oci_file_storage_snapshot.Test_snapshot.Id,
        ///         State = @var.File_system_state,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetFileSystemsResult> Invoke(GetFileSystemsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFileSystemsResult>("oci:FileStorage/getFileSystems:getFileSystems", args ?? new GetFileSystemsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFileSystemsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the availability domain.  Example: `Uocm:PHX-AD-1`
        /// </summary>
        [Input("availabilityDomain", required: true)]
        public string AvailabilityDomain { get; set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A user-friendly name. It does not have to be unique, and it is changeable.  Example: `My resource`
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system snapshot policy that is associated with the file systems.
        /// </summary>
        [Input("filesystemSnapshotPolicyId")]
        public string? FilesystemSnapshotPolicyId { get; set; }

        [Input("filters")]
        private List<Inputs.GetFileSystemsFilterArgs>? _filters;
        public List<Inputs.GetFileSystemsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetFileSystemsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Filter results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resouce type.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system that contains the source snapshot of a cloned file system. See [Cloning a File System](https://docs.cloud.oracle.com/iaas/Content/File/Tasks/cloningFS.htm).
        /// </summary>
        [Input("parentFileSystemId")]
        public string? ParentFileSystemId { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the snapshot used to create a cloned file system. See [Cloning a File System](https://docs.cloud.oracle.com/iaas/Content/File/Tasks/cloningFS.htm).
        /// </summary>
        [Input("sourceSnapshotId")]
        public string? SourceSnapshotId { get; set; }

        /// <summary>
        /// Filter results by the specified lifecycle state. Must be a valid state for the resource type.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetFileSystemsArgs()
        {
        }
        public static new GetFileSystemsArgs Empty => new GetFileSystemsArgs();
    }

    public sealed class GetFileSystemsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the availability domain.  Example: `Uocm:PHX-AD-1`
        /// </summary>
        [Input("availabilityDomain", required: true)]
        public Input<string> AvailabilityDomain { get; set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A user-friendly name. It does not have to be unique, and it is changeable.  Example: `My resource`
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system snapshot policy that is associated with the file systems.
        /// </summary>
        [Input("filesystemSnapshotPolicyId")]
        public Input<string>? FilesystemSnapshotPolicyId { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetFileSystemsFilterInputArgs>? _filters;
        public InputList<Inputs.GetFileSystemsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetFileSystemsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Filter results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resouce type.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system that contains the source snapshot of a cloned file system. See [Cloning a File System](https://docs.cloud.oracle.com/iaas/Content/File/Tasks/cloningFS.htm).
        /// </summary>
        [Input("parentFileSystemId")]
        public Input<string>? ParentFileSystemId { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the snapshot used to create a cloned file system. See [Cloning a File System](https://docs.cloud.oracle.com/iaas/Content/File/Tasks/cloningFS.htm).
        /// </summary>
        [Input("sourceSnapshotId")]
        public Input<string>? SourceSnapshotId { get; set; }

        /// <summary>
        /// Filter results by the specified lifecycle state. Must be a valid state for the resource type.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetFileSystemsInvokeArgs()
        {
        }
        public static new GetFileSystemsInvokeArgs Empty => new GetFileSystemsInvokeArgs();
    }


    [OutputType]
    public sealed class GetFileSystemsResult
    {
        /// <summary>
        /// The availability domain the file system is in. May be unset as a blank or NULL value.  Example: `Uocm:PHX-AD-1`
        /// </summary>
        public readonly string AvailabilityDomain;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the file system.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// A user-friendly name. It does not have to be unique, and it is changeable. Avoid entering confidential information.  Example: `My file system`
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// The list of file_systems.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFileSystemsFileSystemResult> FileSystems;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the associated file system snapshot policy, which controls the frequency of snapshot creation and retention period of the taken snapshots.
        /// </summary>
        public readonly string? FilesystemSnapshotPolicyId;
        public readonly ImmutableArray<Outputs.GetFileSystemsFilterResult> Filters;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system that contains the source snapshot of a cloned file system. See [Cloning a File System](https://docs.cloud.oracle.com/iaas/Content/File/Tasks/cloningFS.htm).
        /// </summary>
        public readonly string? ParentFileSystemId;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the source snapshot used to create a cloned file system. See [Cloning a File System](https://docs.cloud.oracle.com/iaas/Content/File/Tasks/cloningFS.htm).
        /// </summary>
        public readonly string? SourceSnapshotId;
        /// <summary>
        /// The current state of the file system.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetFileSystemsResult(
            string availabilityDomain,

            string compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetFileSystemsFileSystemResult> fileSystems,

            string? filesystemSnapshotPolicyId,

            ImmutableArray<Outputs.GetFileSystemsFilterResult> filters,

            string? id,

            string? parentFileSystemId,

            string? sourceSnapshotId,

            string? state)
        {
            AvailabilityDomain = availabilityDomain;
            CompartmentId = compartmentId;
            DisplayName = displayName;
            FileSystems = fileSystems;
            FilesystemSnapshotPolicyId = filesystemSnapshotPolicyId;
            Filters = filters;
            Id = id;
            ParentFileSystemId = parentFileSystemId;
            SourceSnapshotId = sourceSnapshotId;
            State = state;
        }
    }
}
