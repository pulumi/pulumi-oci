// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.FileStorage
{
    public static class GetReplications
    {
        /// <summary>
        /// This data source provides the list of Replications in Oracle Cloud Infrastructure File Storage service.
        /// 
        /// Lists the replication resources in the specified compartment.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testReplications = Oci.FileStorage.GetReplications.Invoke(new()
        ///     {
        ///         AvailabilityDomain = @var.Replication_availability_domain,
        ///         CompartmentId = @var.Compartment_id,
        ///         DisplayName = @var.Replication_display_name,
        ///         FileSystemId = oci_file_storage_file_system.Test_file_system.Id,
        ///         Id = @var.Replication_id,
        ///         State = @var.Replication_state,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetReplicationsResult> InvokeAsync(GetReplicationsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetReplicationsResult>("oci:FileStorage/getReplications:getReplications", args ?? new GetReplicationsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Replications in Oracle Cloud Infrastructure File Storage service.
        /// 
        /// Lists the replication resources in the specified compartment.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testReplications = Oci.FileStorage.GetReplications.Invoke(new()
        ///     {
        ///         AvailabilityDomain = @var.Replication_availability_domain,
        ///         CompartmentId = @var.Compartment_id,
        ///         DisplayName = @var.Replication_display_name,
        ///         FileSystemId = oci_file_storage_file_system.Test_file_system.Id,
        ///         Id = @var.Replication_id,
        ///         State = @var.Replication_state,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetReplicationsResult> Invoke(GetReplicationsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetReplicationsResult>("oci:FileStorage/getReplications:getReplications", args ?? new GetReplicationsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetReplicationsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the availability domain.  Example: `Uocm:PHX-AD-1`
        /// </summary>
        [Input("availabilityDomain", required: true)]
        public string AvailabilityDomain { get; set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A user-friendly name. It does not have to be unique, and it is changeable.  Example: `My resource`
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the source file system.
        /// </summary>
        [Input("fileSystemId")]
        public string? FileSystemId { get; set; }

        [Input("filters")]
        private List<Inputs.GetReplicationsFilterArgs>? _filters;
        public List<Inputs.GetReplicationsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetReplicationsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Filter results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resouce type.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// Filter results by the specified lifecycle state. Must be a valid state for the resource type.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetReplicationsArgs()
        {
        }
        public static new GetReplicationsArgs Empty => new GetReplicationsArgs();
    }

    public sealed class GetReplicationsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the availability domain.  Example: `Uocm:PHX-AD-1`
        /// </summary>
        [Input("availabilityDomain", required: true)]
        public Input<string> AvailabilityDomain { get; set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A user-friendly name. It does not have to be unique, and it is changeable.  Example: `My resource`
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the source file system.
        /// </summary>
        [Input("fileSystemId")]
        public Input<string>? FileSystemId { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetReplicationsFilterInputArgs>? _filters;
        public InputList<Inputs.GetReplicationsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetReplicationsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Filter results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resouce type.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Filter results by the specified lifecycle state. Must be a valid state for the resource type.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetReplicationsInvokeArgs()
        {
        }
        public static new GetReplicationsInvokeArgs Empty => new GetReplicationsInvokeArgs();
    }


    [OutputType]
    public sealed class GetReplicationsResult
    {
        /// <summary>
        /// The availability domain the replication is in. The replication must be in the same availability domain as the source file system. Example: `Uocm:PHX-AD-1`
        /// </summary>
        public readonly string AvailabilityDomain;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the replication.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// A user-friendly name. It does not have to be unique, and it is changeable. Avoid entering confidential information.  Example: `My replication`
        /// </summary>
        public readonly string? DisplayName;
        public readonly string? FileSystemId;
        public readonly ImmutableArray<Outputs.GetReplicationsFilterResult> Filters;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the replication.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The list of replications.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetReplicationsReplicationResult> Replications;
        /// <summary>
        /// The current state of this replication. This resource can be in a `FAILED` state if replication target is deleted instead of the replication resource.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetReplicationsResult(
            string availabilityDomain,

            string compartmentId,

            string? displayName,

            string? fileSystemId,

            ImmutableArray<Outputs.GetReplicationsFilterResult> filters,

            string? id,

            ImmutableArray<Outputs.GetReplicationsReplicationResult> replications,

            string? state)
        {
            AvailabilityDomain = availabilityDomain;
            CompartmentId = compartmentId;
            DisplayName = displayName;
            FileSystemId = fileSystemId;
            Filters = filters;
            Id = id;
            Replications = replications;
            State = state;
        }
    }
}
