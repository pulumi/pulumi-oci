// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.FileStorage
{
    public static class GetSnapshots
    {
        /// <summary>
        /// This data source provides the list of Snapshots in Oracle Cloud Infrastructure File Storage service.
        /// 
        /// Lists snapshots of the specified file system, or by file system snapshot policy and compartment,
        /// or by file system snapshot policy and file system.
        /// 
        /// If file system ID is not specified, a file system snapshot policy ID and compartment ID must be specified.
        /// 
        /// Users can only sort by time created when listing snapshots by file system snapshot policy ID and compartment ID
        /// (sort by name is NOT supported for listing snapshots by policy and compartment).
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSnapshots = Oci.FileStorage.GetSnapshots.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         FileSystemId = testFileSystem.Id,
        ///         FilesystemSnapshotPolicyId = testFilesystemSnapshotPolicy.Id,
        ///         Id = snapshotId,
        ///         State = snapshotState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSnapshotsResult> InvokeAsync(GetSnapshotsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSnapshotsResult>("oci:FileStorage/getSnapshots:getSnapshots", args ?? new GetSnapshotsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Snapshots in Oracle Cloud Infrastructure File Storage service.
        /// 
        /// Lists snapshots of the specified file system, or by file system snapshot policy and compartment,
        /// or by file system snapshot policy and file system.
        /// 
        /// If file system ID is not specified, a file system snapshot policy ID and compartment ID must be specified.
        /// 
        /// Users can only sort by time created when listing snapshots by file system snapshot policy ID and compartment ID
        /// (sort by name is NOT supported for listing snapshots by policy and compartment).
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSnapshots = Oci.FileStorage.GetSnapshots.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         FileSystemId = testFileSystem.Id,
        ///         FilesystemSnapshotPolicyId = testFilesystemSnapshotPolicy.Id,
        ///         Id = snapshotId,
        ///         State = snapshotState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSnapshotsResult> Invoke(GetSnapshotsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSnapshotsResult>("oci:FileStorage/getSnapshots:getSnapshots", args ?? new GetSnapshotsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Snapshots in Oracle Cloud Infrastructure File Storage service.
        /// 
        /// Lists snapshots of the specified file system, or by file system snapshot policy and compartment,
        /// or by file system snapshot policy and file system.
        /// 
        /// If file system ID is not specified, a file system snapshot policy ID and compartment ID must be specified.
        /// 
        /// Users can only sort by time created when listing snapshots by file system snapshot policy ID and compartment ID
        /// (sort by name is NOT supported for listing snapshots by policy and compartment).
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSnapshots = Oci.FileStorage.GetSnapshots.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         FileSystemId = testFileSystem.Id,
        ///         FilesystemSnapshotPolicyId = testFilesystemSnapshotPolicy.Id,
        ///         Id = snapshotId,
        ///         State = snapshotState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSnapshotsResult> Invoke(GetSnapshotsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSnapshotsResult>("oci:FileStorage/getSnapshots:getSnapshots", args ?? new GetSnapshotsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSnapshotsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system.
        /// </summary>
        [Input("fileSystemId")]
        public string? FileSystemId { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system snapshot policy that is used to create the snapshots.
        /// </summary>
        [Input("filesystemSnapshotPolicyId")]
        public string? FilesystemSnapshotPolicyId { get; set; }

        [Input("filters")]
        private List<Inputs.GetSnapshotsFilterArgs>? _filters;
        public List<Inputs.GetSnapshotsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetSnapshotsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Filter results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resouce type.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// Filter results by the specified lifecycle state. Must be a valid state for the resource type.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetSnapshotsArgs()
        {
        }
        public static new GetSnapshotsArgs Empty => new GetSnapshotsArgs();
    }

    public sealed class GetSnapshotsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system.
        /// </summary>
        [Input("fileSystemId")]
        public Input<string>? FileSystemId { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system snapshot policy that is used to create the snapshots.
        /// </summary>
        [Input("filesystemSnapshotPolicyId")]
        public Input<string>? FilesystemSnapshotPolicyId { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetSnapshotsFilterInputArgs>? _filters;
        public InputList<Inputs.GetSnapshotsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetSnapshotsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Filter results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resouce type.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Filter results by the specified lifecycle state. Must be a valid state for the resource type.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetSnapshotsInvokeArgs()
        {
        }
        public static new GetSnapshotsInvokeArgs Empty => new GetSnapshotsInvokeArgs();
    }


    [OutputType]
    public sealed class GetSnapshotsResult
    {
        public readonly string? CompartmentId;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system from which the snapshot was created.
        /// </summary>
        public readonly string? FileSystemId;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system snapshot policy that created this snapshot.
        /// </summary>
        public readonly string? FilesystemSnapshotPolicyId;
        public readonly ImmutableArray<Outputs.GetSnapshotsFilterResult> Filters;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the snapshot.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The list of snapshots.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSnapshotsSnapshotResult> Snapshots;
        /// <summary>
        /// The current state of the snapshot.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetSnapshotsResult(
            string? compartmentId,

            string? fileSystemId,

            string? filesystemSnapshotPolicyId,

            ImmutableArray<Outputs.GetSnapshotsFilterResult> filters,

            string? id,

            ImmutableArray<Outputs.GetSnapshotsSnapshotResult> snapshots,

            string? state)
        {
            CompartmentId = compartmentId;
            FileSystemId = fileSystemId;
            FilesystemSnapshotPolicyId = filesystemSnapshotPolicyId;
            Filters = filters;
            Id = id;
            Snapshots = snapshots;
            State = state;
        }
    }
}
