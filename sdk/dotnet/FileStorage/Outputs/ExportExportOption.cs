// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.FileStorage.Outputs
{

    [OutputType]
    public sealed class ExportExportOption
    {
        /// <summary>
        /// (Updatable) Type of access to grant clients using the file system through this export. If unspecified defaults to `READ_WRITE`.
        /// </summary>
        public readonly string? Access;
        /// <summary>
        /// (Updatable) Array of allowed NFS authentication types.
        /// </summary>
        public readonly ImmutableArray<string> AllowedAuths;
        /// <summary>
        /// (Updatable) GID value to remap to when squashing a client GID (see identitySquash for more details.) If unspecified defaults to `65534`.
        /// </summary>
        public readonly string? AnonymousGid;
        /// <summary>
        /// (Updatable) UID value to remap to when squashing a client UID (see identitySquash for more details.) If unspecified, defaults to `65534`.
        /// </summary>
        public readonly string? AnonymousUid;
        /// <summary>
        /// (Updatable) Used when clients accessing the file system through this export have their UID and GID remapped to 'anonymousUid' and 'anonymousGid'. If `ALL`, all users and groups are remapped; if `ROOT`, only the root user and group (UID/GID 0) are remapped; if `NONE`, no remapping is done. If unspecified, defaults to `ROOT`.
        /// </summary>
        public readonly string? IdentitySquash;
        /// <summary>
        /// (Updatable) Whether or not to enable anonymous access to the file system through this export in cases where a user isn't found in the LDAP server used for ID mapping. If true, and the user is not found in the LDAP directory, the operation uses the Squash UID and Squash GID.
        /// </summary>
        public readonly bool? IsAnonymousAccessAllowed;
        /// <summary>
        /// (Updatable) If `true`, clients accessing the file system through this export must connect from a privileged source port. If unspecified, defaults to `true`.
        /// </summary>
        public readonly bool? RequirePrivilegedSourcePort;
        /// <summary>
        /// (Updatable) Clients these options should apply to. Must be a either single IPv4/IPv6 address or single IPv4/IPv6 CIDR block.
        /// 
        /// **Note:** Access will also be limited by any applicable VCN security rules and the ability to route IP packets to the mount target. Mount targets do not have Internet-routable IP addresses.
        /// </summary>
        public readonly string Source;

        [OutputConstructor]
        private ExportExportOption(
            string? access,

            ImmutableArray<string> allowedAuths,

            string? anonymousGid,

            string? anonymousUid,

            string? identitySquash,

            bool? isAnonymousAccessAllowed,

            bool? requirePrivilegedSourcePort,

            string source)
        {
            Access = access;
            AllowedAuths = allowedAuths;
            AnonymousGid = anonymousGid;
            AnonymousUid = anonymousUid;
            IdentitySquash = identitySquash;
            IsAnonymousAccessAllowed = isAnonymousAccessAllowed;
            RequirePrivilegedSourcePort = requirePrivilegedSourcePort;
            Source = source;
        }
    }
}
