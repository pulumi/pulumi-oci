// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.FileStorage.Outputs
{

    [OutputType]
    public sealed class GetFilesystemSnapshotPoliciesFilesystemSnapshotPolicyResult
    {
        /// <summary>
        /// The name of the availability domain.  Example: `Uocm:PHX-AD-1`
        /// </summary>
        public readonly string AvailabilityDomain;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// A user-friendly name. It does not have to be unique, and it is changeable.  Example: `My resource`
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// Filter results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resouce type.
        /// </summary>
        public readonly string Id;
        public readonly bool IsLockOverride;
        /// <summary>
        /// Locks associated with this resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFilesystemSnapshotPoliciesFilesystemSnapshotPolicyLockResult> Locks;
        /// <summary>
        /// The prefix to apply to all snapshots created by this policy.  Example: `acme`
        /// </summary>
        public readonly string PolicyPrefix;
        /// <summary>
        /// The list of associated snapshot schedules. A maximum of 10 schedules can be associated with a policy.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFilesystemSnapshotPoliciesFilesystemSnapshotPolicyScheduleResult> Schedules;
        /// <summary>
        /// Filter results by the specified lifecycle state. Must be a valid state for the resource type.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// System tags for this resource. System tags are applied to resources by internal Oracle Cloud Infrastructure services.
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// The date and time the file system snapshot policy was created, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        public readonly string TimeCreated;

        [OutputConstructor]
        private GetFilesystemSnapshotPoliciesFilesystemSnapshotPolicyResult(
            string availabilityDomain,

            string compartmentId,

            ImmutableDictionary<string, string> definedTags,

            string displayName,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            bool isLockOverride,

            ImmutableArray<Outputs.GetFilesystemSnapshotPoliciesFilesystemSnapshotPolicyLockResult> locks,

            string policyPrefix,

            ImmutableArray<Outputs.GetFilesystemSnapshotPoliciesFilesystemSnapshotPolicyScheduleResult> schedules,

            string state,

            ImmutableDictionary<string, string> systemTags,

            string timeCreated)
        {
            AvailabilityDomain = availabilityDomain;
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            IsLockOverride = isLockOverride;
            Locks = locks;
            PolicyPrefix = policyPrefix;
            Schedules = schedules;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
        }
    }
}
