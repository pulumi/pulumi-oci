// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.FleetAppsManagement
{
    /// <summary>
    /// This resource provides the Catalog Item resource in Oracle Cloud Infrastructure Fleet Apps Management service.
    /// 
    /// Creates a CatalogItem.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testCatalogItem = new Oci.FleetAppsManagement.CatalogItem("test_catalog_item", new()
    ///     {
    ///         CompartmentId = compartmentId,
    ///         ConfigSourceType = catalogItemConfigSourceType,
    ///         Description = catalogItemDescription,
    ///         DisplayName = catalogItemDisplayName,
    ///         PackageType = catalogItemPackageType,
    ///         CatalogSourcePayload = new Oci.FleetAppsManagement.Inputs.CatalogItemCatalogSourcePayloadArgs
    ///         {
    ///             ConfigSourceType = catalogItemCatalogSourcePayloadConfigSourceType,
    ///             AccessUri = catalogItemCatalogSourcePayloadAccessUri,
    ///             BranchName = catalogItemCatalogSourcePayloadBranchName,
    ///             Bucket = catalogItemCatalogSourcePayloadBucket,
    ///             ConfigurationSourceProviderId = testConfigurationSourceProvider.Id,
    ///             Description = catalogItemCatalogSourcePayloadDescription,
    ///             ListingId = testListing.Id,
    ///             LongDescription = catalogItemCatalogSourcePayloadLongDescription,
    ///             Namespace = catalogItemCatalogSourcePayloadNamespace,
    ///             Object = catalogItemCatalogSourcePayloadObject,
    ///             RepositoryUrl = catalogItemCatalogSourcePayloadRepositoryUrl,
    ///             TemplateDisplayName = catalogItemCatalogSourcePayloadTemplateDisplayName,
    ///             TimeExpires = catalogItemCatalogSourcePayloadTimeExpires,
    ///             Version = catalogItemCatalogSourcePayloadVersion,
    ///             WorkingDirectory = catalogItemCatalogSourcePayloadWorkingDirectory,
    ///             ZipFileBase64encoded = catalogItemCatalogSourcePayloadZipFileBase64encoded,
    ///         },
    ///         DefinedTags = 
    ///         {
    ///             { "foo-namespace.bar-key", "value" },
    ///         },
    ///         FreeformTags = 
    ///         {
    ///             { "bar-key", "value" },
    ///         },
    ///         ListingId = testListing.Id,
    ///         ListingVersion = catalogItemListingVersion,
    ///         ShortDescription = catalogItemShortDescription,
    ///         TimeReleased = catalogItemTimeReleased,
    ///         VersionDescription = catalogItemVersionDescription,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// CatalogItems can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:FleetAppsManagement/catalogItem:CatalogItem test_catalog_item "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:FleetAppsManagement/catalogItem:CatalogItem")]
    public partial class CatalogItem : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Catalog result payload.
        /// </summary>
        [Output("catalogResultPayloads")]
        public Output<ImmutableArray<Outputs.CatalogItemCatalogResultPayload>> CatalogResultPayloads { get; private set; } = null!;

        /// <summary>
        /// Catalog source payload.
        /// </summary>
        [Output("catalogSourcePayload")]
        public Output<Outputs.CatalogItemCatalogSourcePayload> CatalogSourcePayload { get; private set; } = null!;

        /// <summary>
        /// (Updatable) An optional property when incremented triggers Clone Catalog Item. Could be set to any integer value.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("cloneCatalogItemTrigger")]
        public Output<int?> CloneCatalogItemTrigger { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// Config source type Eg: STACK_TEMPLATE_CATALOG_SOURCE, PAR_CATALOG_SOURCE, GIT_CATALOG_SOURCE, MARKETPLACE_CATALOG_SOURCE.
        /// </summary>
        [Output("configSourceType")]
        public Output<string> ConfigSourceType { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, string>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The description of the CatalogItem.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The CatalogItem name.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, string>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// The details of lifecycle state CatalogItem.
        /// </summary>
        [Output("lifecycleDetails")]
        public Output<string> LifecycleDetails { get; private set; } = null!;

        /// <summary>
        /// The catalog listing Id.
        /// </summary>
        [Output("listingId")]
        public Output<string> ListingId { get; private set; } = null!;

        /// <summary>
        /// The catalog package version.
        /// </summary>
        [Output("listingVersion")]
        public Output<string> ListingVersion { get; private set; } = null!;

        /// <summary>
        /// Config package type Eg: TF_PACKAGE, NON_TF_PACKAGE, CONFIG_FILE.
        /// </summary>
        [Output("packageType")]
        public Output<string> PackageType { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Short description about the catalog item.
        /// </summary>
        [Output("shortDescription")]
        public Output<string> ShortDescription { get; private set; } = null!;

        /// <summary>
        /// The indicator to append Public Items from the root compartment to any query, when set to TRUE.
        /// </summary>
        [Output("shouldListPublicItems")]
        public Output<bool> ShouldListPublicItems { get; private set; } = null!;

        /// <summary>
        /// The current state of the CatalogItem.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        [Output("systemTags")]
        public Output<ImmutableDictionary<string, string>> SystemTags { get; private set; } = null!;

        /// <summary>
        /// The date and time the CatalogItem was last checked by backfill job, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Output("timeBackfillLastChecked")]
        public Output<string> TimeBackfillLastChecked { get; private set; } = null!;

        /// <summary>
        /// The date and time the CatalogItem was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The date and time the CatalogItem was last checked, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Output("timeLastChecked")]
        public Output<string> TimeLastChecked { get; private set; } = null!;

        /// <summary>
        /// The date and time the CatalogItem was released, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Output("timeReleased")]
        public Output<string> TimeReleased { get; private set; } = null!;

        /// <summary>
        /// The date and time the CatalogItem was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Version description about the catalog item.
        /// </summary>
        [Output("versionDescription")]
        public Output<string> VersionDescription { get; private set; } = null!;


        /// <summary>
        /// Create a CatalogItem resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CatalogItem(string name, CatalogItemArgs args, CustomResourceOptions? options = null)
            : base("oci:FleetAppsManagement/catalogItem:CatalogItem", name, args ?? new CatalogItemArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CatalogItem(string name, Input<string> id, CatalogItemState? state = null, CustomResourceOptions? options = null)
            : base("oci:FleetAppsManagement/catalogItem:CatalogItem", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CatalogItem resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CatalogItem Get(string name, Input<string> id, CatalogItemState? state = null, CustomResourceOptions? options = null)
        {
            return new CatalogItem(name, id, state, options);
        }
    }

    public sealed class CatalogItemArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Catalog source payload.
        /// </summary>
        [Input("catalogSourcePayload")]
        public Input<Inputs.CatalogItemCatalogSourcePayloadArgs>? CatalogSourcePayload { get; set; }

        /// <summary>
        /// (Updatable) An optional property when incremented triggers Clone Catalog Item. Could be set to any integer value.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("cloneCatalogItemTrigger")]
        public Input<int>? CloneCatalogItemTrigger { get; set; }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// Config source type Eg: STACK_TEMPLATE_CATALOG_SOURCE, PAR_CATALOG_SOURCE, GIT_CATALOG_SOURCE, MARKETPLACE_CATALOG_SOURCE.
        /// </summary>
        [Input("configSourceType", required: true)]
        public Input<string> ConfigSourceType { get; set; } = null!;

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) The description of the CatalogItem.
        /// </summary>
        [Input("description", required: true)]
        public Input<string> Description { get; set; } = null!;

        /// <summary>
        /// (Updatable) The CatalogItem name.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// The catalog listing Id.
        /// </summary>
        [Input("listingId")]
        public Input<string>? ListingId { get; set; }

        /// <summary>
        /// The catalog package version.
        /// </summary>
        [Input("listingVersion")]
        public Input<string>? ListingVersion { get; set; }

        /// <summary>
        /// Config package type Eg: TF_PACKAGE, NON_TF_PACKAGE, CONFIG_FILE.
        /// </summary>
        [Input("packageType", required: true)]
        public Input<string> PackageType { get; set; } = null!;

        /// <summary>
        /// (Updatable) Short description about the catalog item.
        /// </summary>
        [Input("shortDescription")]
        public Input<string>? ShortDescription { get; set; }

        /// <summary>
        /// The date and time the CatalogItem was released, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Input("timeReleased")]
        public Input<string>? TimeReleased { get; set; }

        /// <summary>
        /// (Updatable) Version description about the catalog item.
        /// </summary>
        [Input("versionDescription")]
        public Input<string>? VersionDescription { get; set; }

        public CatalogItemArgs()
        {
        }
        public static new CatalogItemArgs Empty => new CatalogItemArgs();
    }

    public sealed class CatalogItemState : global::Pulumi.ResourceArgs
    {
        [Input("catalogResultPayloads")]
        private InputList<Inputs.CatalogItemCatalogResultPayloadGetArgs>? _catalogResultPayloads;

        /// <summary>
        /// Catalog result payload.
        /// </summary>
        public InputList<Inputs.CatalogItemCatalogResultPayloadGetArgs> CatalogResultPayloads
        {
            get => _catalogResultPayloads ?? (_catalogResultPayloads = new InputList<Inputs.CatalogItemCatalogResultPayloadGetArgs>());
            set => _catalogResultPayloads = value;
        }

        /// <summary>
        /// Catalog source payload.
        /// </summary>
        [Input("catalogSourcePayload")]
        public Input<Inputs.CatalogItemCatalogSourcePayloadGetArgs>? CatalogSourcePayload { get; set; }

        /// <summary>
        /// (Updatable) An optional property when incremented triggers Clone Catalog Item. Could be set to any integer value.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("cloneCatalogItemTrigger")]
        public Input<int>? CloneCatalogItemTrigger { get; set; }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// Config source type Eg: STACK_TEMPLATE_CATALOG_SOURCE, PAR_CATALOG_SOURCE, GIT_CATALOG_SOURCE, MARKETPLACE_CATALOG_SOURCE.
        /// </summary>
        [Input("configSourceType")]
        public Input<string>? ConfigSourceType { get; set; }

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) The description of the CatalogItem.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) The CatalogItem name.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// The details of lifecycle state CatalogItem.
        /// </summary>
        [Input("lifecycleDetails")]
        public Input<string>? LifecycleDetails { get; set; }

        /// <summary>
        /// The catalog listing Id.
        /// </summary>
        [Input("listingId")]
        public Input<string>? ListingId { get; set; }

        /// <summary>
        /// The catalog package version.
        /// </summary>
        [Input("listingVersion")]
        public Input<string>? ListingVersion { get; set; }

        /// <summary>
        /// Config package type Eg: TF_PACKAGE, NON_TF_PACKAGE, CONFIG_FILE.
        /// </summary>
        [Input("packageType")]
        public Input<string>? PackageType { get; set; }

        /// <summary>
        /// (Updatable) Short description about the catalog item.
        /// </summary>
        [Input("shortDescription")]
        public Input<string>? ShortDescription { get; set; }

        /// <summary>
        /// The indicator to append Public Items from the root compartment to any query, when set to TRUE.
        /// </summary>
        [Input("shouldListPublicItems")]
        public Input<bool>? ShouldListPublicItems { get; set; }

        /// <summary>
        /// The current state of the CatalogItem.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("systemTags")]
        private InputMap<string>? _systemTags;

        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public InputMap<string> SystemTags
        {
            get => _systemTags ?? (_systemTags = new InputMap<string>());
            set => _systemTags = value;
        }

        /// <summary>
        /// The date and time the CatalogItem was last checked by backfill job, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Input("timeBackfillLastChecked")]
        public Input<string>? TimeBackfillLastChecked { get; set; }

        /// <summary>
        /// The date and time the CatalogItem was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The date and time the CatalogItem was last checked, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Input("timeLastChecked")]
        public Input<string>? TimeLastChecked { get; set; }

        /// <summary>
        /// The date and time the CatalogItem was released, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Input("timeReleased")]
        public Input<string>? TimeReleased { get; set; }

        /// <summary>
        /// The date and time the CatalogItem was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        /// <summary>
        /// (Updatable) Version description about the catalog item.
        /// </summary>
        [Input("versionDescription")]
        public Input<string>? VersionDescription { get; set; }

        public CatalogItemState()
        {
        }
        public static new CatalogItemState Empty => new CatalogItemState();
    }
}
