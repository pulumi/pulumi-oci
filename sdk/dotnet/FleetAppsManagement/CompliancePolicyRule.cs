// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.FleetAppsManagement
{
    /// <summary>
    /// This resource provides the Compliance Policy Rule resource in Oracle Cloud Infrastructure Fleet Apps Management service.
    /// 
    /// Creates a compliance policy rule.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testCompliancePolicyRule = new Oci.FleetAppsManagement.CompliancePolicyRule("test_compliance_policy_rule", new()
    ///     {
    ///         CompliancePolicyId = testCompliancePolicy.Id,
    ///         DisplayName = compliancePolicyRuleDisplayName,
    ///         PatchSelection = new Oci.FleetAppsManagement.Inputs.CompliancePolicyRulePatchSelectionArgs
    ///         {
    ///             SelectionType = compliancePolicyRulePatchSelectionSelectionType,
    ///             DaysSinceRelease = compliancePolicyRulePatchSelectionDaysSinceRelease,
    ///             PatchLevel = compliancePolicyRulePatchSelectionPatchLevel,
    ///             PatchName = testPatch.Name,
    ///         },
    ///         PatchTypeIds = testPatchType.Id,
    ///         ProductVersion = new Oci.FleetAppsManagement.Inputs.CompliancePolicyRuleProductVersionArgs
    ///         {
    ///             Version = compliancePolicyRuleProductVersionVersion,
    ///             IsApplicableForAllHigherVersions = compliancePolicyRuleProductVersionIsApplicableForAllHigherVersions,
    ///         },
    ///         DefinedTags = 
    ///         {
    ///             { "foo-namespace.bar-key", "value" },
    ///         },
    ///         FreeformTags = 
    ///         {
    ///             { "bar-key", "value" },
    ///         },
    ///         GracePeriod = compliancePolicyRuleGracePeriod,
    ///         Severities = compliancePolicyRuleSeverity,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// CompliancePolicyRules can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:FleetAppsManagement/compliancePolicyRule:CompliancePolicyRule test_compliance_policy_rule "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:FleetAppsManagement/compliancePolicyRule:CompliancePolicyRule")]
    public partial class CompliancePolicyRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The OCID of the compartment the CompliancePolicyRule belongs to.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// Unique OCID of the CompliancePolicy this CompliancePolicyRule belongs to.
        /// </summary>
        [Output("compliancePolicyId")]
        public Output<string> CompliancePolicyId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, string>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, string>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Grace period in days,weeks,months or years the exemption is applicable for the rule. This enables a grace period when Fleet Application Management doesn't report the product as noncompliant when patch is not applied.
        /// </summary>
        [Output("gracePeriod")]
        public Output<string> GracePeriod { get; private set; } = null!;

        /// <summary>
        /// A message that describes the current state of the CompliancePolicyRule in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
        /// </summary>
        [Output("lifecycleDetails")]
        public Output<string> LifecycleDetails { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Patch Selection Details
        /// </summary>
        [Output("patchSelection")]
        public Output<Outputs.CompliancePolicyRulePatchSelection> PatchSelection { get; private set; } = null!;

        /// <summary>
        /// (Updatable) PlatformConfiguration OCID for the patch type to which this CompliancePolicyRule applies.
        /// </summary>
        [Output("patchTypeIds")]
        public Output<ImmutableArray<string>> PatchTypeIds { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A specific product version or a specific version and succeeding. Example: 12.1 or 12.1 and above for Oracle WebLogic Application server. The policy applies to the next version only, and not to other versions such as, 12.1.x.
        /// </summary>
        [Output("productVersion")]
        public Output<Outputs.CompliancePolicyRuleProductVersion> ProductVersion { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Severity to which this CompliancePolicyRule applies.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("severities")]
        public Output<ImmutableArray<string>> Severities { get; private set; } = null!;

        /// <summary>
        /// The current state of the CompliancePolicyRule.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        [Output("systemTags")]
        public Output<ImmutableDictionary<string, string>> SystemTags { get; private set; } = null!;

        /// <summary>
        /// The date and time the CompliancePolicyRule was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The date and time the CompliancePolicyRule was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;


        /// <summary>
        /// Create a CompliancePolicyRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CompliancePolicyRule(string name, CompliancePolicyRuleArgs args, CustomResourceOptions? options = null)
            : base("oci:FleetAppsManagement/compliancePolicyRule:CompliancePolicyRule", name, args ?? new CompliancePolicyRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CompliancePolicyRule(string name, Input<string> id, CompliancePolicyRuleState? state = null, CustomResourceOptions? options = null)
            : base("oci:FleetAppsManagement/compliancePolicyRule:CompliancePolicyRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CompliancePolicyRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CompliancePolicyRule Get(string name, Input<string> id, CompliancePolicyRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new CompliancePolicyRule(name, id, state, options);
        }
    }

    public sealed class CompliancePolicyRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Unique OCID of the CompliancePolicy this CompliancePolicyRule belongs to.
        /// </summary>
        [Input("compliancePolicyId", required: true)]
        public Input<string> CompliancePolicyId { get; set; } = null!;

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) Grace period in days,weeks,months or years the exemption is applicable for the rule. This enables a grace period when Fleet Application Management doesn't report the product as noncompliant when patch is not applied.
        /// </summary>
        [Input("gracePeriod")]
        public Input<string>? GracePeriod { get; set; }

        /// <summary>
        /// (Updatable) Patch Selection Details
        /// </summary>
        [Input("patchSelection", required: true)]
        public Input<Inputs.CompliancePolicyRulePatchSelectionArgs> PatchSelection { get; set; } = null!;

        [Input("patchTypeIds", required: true)]
        private InputList<string>? _patchTypeIds;

        /// <summary>
        /// (Updatable) PlatformConfiguration OCID for the patch type to which this CompliancePolicyRule applies.
        /// </summary>
        public InputList<string> PatchTypeIds
        {
            get => _patchTypeIds ?? (_patchTypeIds = new InputList<string>());
            set => _patchTypeIds = value;
        }

        /// <summary>
        /// (Updatable) A specific product version or a specific version and succeeding. Example: 12.1 or 12.1 and above for Oracle WebLogic Application server. The policy applies to the next version only, and not to other versions such as, 12.1.x.
        /// </summary>
        [Input("productVersion", required: true)]
        public Input<Inputs.CompliancePolicyRuleProductVersionArgs> ProductVersion { get; set; } = null!;

        [Input("severities")]
        private InputList<string>? _severities;

        /// <summary>
        /// (Updatable) Severity to which this CompliancePolicyRule applies.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        public InputList<string> Severities
        {
            get => _severities ?? (_severities = new InputList<string>());
            set => _severities = value;
        }

        public CompliancePolicyRuleArgs()
        {
        }
        public static new CompliancePolicyRuleArgs Empty => new CompliancePolicyRuleArgs();
    }

    public sealed class CompliancePolicyRuleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The OCID of the compartment the CompliancePolicyRule belongs to.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// Unique OCID of the CompliancePolicy this CompliancePolicyRule belongs to.
        /// </summary>
        [Input("compliancePolicyId")]
        public Input<string>? CompliancePolicyId { get; set; }

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) Grace period in days,weeks,months or years the exemption is applicable for the rule. This enables a grace period when Fleet Application Management doesn't report the product as noncompliant when patch is not applied.
        /// </summary>
        [Input("gracePeriod")]
        public Input<string>? GracePeriod { get; set; }

        /// <summary>
        /// A message that describes the current state of the CompliancePolicyRule in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
        /// </summary>
        [Input("lifecycleDetails")]
        public Input<string>? LifecycleDetails { get; set; }

        /// <summary>
        /// (Updatable) Patch Selection Details
        /// </summary>
        [Input("patchSelection")]
        public Input<Inputs.CompliancePolicyRulePatchSelectionGetArgs>? PatchSelection { get; set; }

        [Input("patchTypeIds")]
        private InputList<string>? _patchTypeIds;

        /// <summary>
        /// (Updatable) PlatformConfiguration OCID for the patch type to which this CompliancePolicyRule applies.
        /// </summary>
        public InputList<string> PatchTypeIds
        {
            get => _patchTypeIds ?? (_patchTypeIds = new InputList<string>());
            set => _patchTypeIds = value;
        }

        /// <summary>
        /// (Updatable) A specific product version or a specific version and succeeding. Example: 12.1 or 12.1 and above for Oracle WebLogic Application server. The policy applies to the next version only, and not to other versions such as, 12.1.x.
        /// </summary>
        [Input("productVersion")]
        public Input<Inputs.CompliancePolicyRuleProductVersionGetArgs>? ProductVersion { get; set; }

        [Input("severities")]
        private InputList<string>? _severities;

        /// <summary>
        /// (Updatable) Severity to which this CompliancePolicyRule applies.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        public InputList<string> Severities
        {
            get => _severities ?? (_severities = new InputList<string>());
            set => _severities = value;
        }

        /// <summary>
        /// The current state of the CompliancePolicyRule.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("systemTags")]
        private InputMap<string>? _systemTags;

        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public InputMap<string> SystemTags
        {
            get => _systemTags ?? (_systemTags = new InputMap<string>());
            set => _systemTags = value;
        }

        /// <summary>
        /// The date and time the CompliancePolicyRule was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The date and time the CompliancePolicyRule was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        public CompliancePolicyRuleState()
        {
        }
        public static new CompliancePolicyRuleState Empty => new CompliancePolicyRuleState();
    }
}
