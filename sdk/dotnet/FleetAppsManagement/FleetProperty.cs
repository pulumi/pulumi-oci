// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.FleetAppsManagement
{
    /// <summary>
    /// This resource provides the Fleet Property resource in Oracle Cloud Infrastructure Fleet Apps Management service.
    /// 
    /// Add an existing global property to a fleet in Fleet Application Management.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testFleetProperty = new Oci.FleetAppsManagement.FleetProperty("test_fleet_property", new()
    ///     {
    ///         FleetId = testFleet.Id,
    ///         PropertyId = testProperty.Id,
    ///         Value = fleetPropertyValue,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Import is not supported for this resource.
    /// </summary>
    [OciResourceType("oci:FleetAppsManagement/fleetProperty:FleetProperty")]
    public partial class FleetProperty : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Values of the property (must be a single value if selectionType = 'SINGLE_CHOICE').
        /// </summary>
        [Output("allowedValues")]
        public Output<ImmutableArray<string>> AllowedValues { get; private set; } = null!;

        /// <summary>
        /// Compartment OCID
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Unique Fleet identifier.
        /// </summary>
        [Output("fleetId")]
        public Output<string> FleetId { get; private set; } = null!;

        /// <summary>
        /// OCID referring to global level metadata property.
        /// </summary>
        [Output("propertyId")]
        public Output<string> PropertyId { get; private set; } = null!;

        /// <summary>
        /// Text selection of the property.
        /// </summary>
        [Output("selectionType")]
        public Output<string> SelectionType { get; private set; } = null!;

        /// <summary>
        /// The current state of the FleetProperty.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        [Output("systemTags")]
        public Output<ImmutableDictionary<string, string>> SystemTags { get; private set; } = null!;

        /// <summary>
        /// The time this resource was created. An RFC3339 formatted datetime string.
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The time this resource was last updated. An RFC3339 formatted datetime string.
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Value of the Property.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("value")]
        public Output<string> Value { get; private set; } = null!;

        /// <summary>
        /// Format of the value.
        /// </summary>
        [Output("valueType")]
        public Output<string> ValueType { get; private set; } = null!;


        /// <summary>
        /// Create a FleetProperty resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FleetProperty(string name, FleetPropertyArgs args, CustomResourceOptions? options = null)
            : base("oci:FleetAppsManagement/fleetProperty:FleetProperty", name, args ?? new FleetPropertyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FleetProperty(string name, Input<string> id, FleetPropertyState? state = null, CustomResourceOptions? options = null)
            : base("oci:FleetAppsManagement/fleetProperty:FleetProperty", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FleetProperty resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FleetProperty Get(string name, Input<string> id, FleetPropertyState? state = null, CustomResourceOptions? options = null)
        {
            return new FleetProperty(name, id, state, options);
        }
    }

    public sealed class FleetPropertyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Compartment OCID
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// Unique Fleet identifier.
        /// </summary>
        [Input("fleetId", required: true)]
        public Input<string> FleetId { get; set; } = null!;

        /// <summary>
        /// OCID referring to global level metadata property.
        /// </summary>
        [Input("propertyId", required: true)]
        public Input<string> PropertyId { get; set; } = null!;

        /// <summary>
        /// (Updatable) Value of the Property.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("value", required: true)]
        public Input<string> Value { get; set; } = null!;

        public FleetPropertyArgs()
        {
        }
        public static new FleetPropertyArgs Empty => new FleetPropertyArgs();
    }

    public sealed class FleetPropertyState : global::Pulumi.ResourceArgs
    {
        [Input("allowedValues")]
        private InputList<string>? _allowedValues;

        /// <summary>
        /// Values of the property (must be a single value if selectionType = 'SINGLE_CHOICE').
        /// </summary>
        public InputList<string> AllowedValues
        {
            get => _allowedValues ?? (_allowedValues = new InputList<string>());
            set => _allowedValues = value;
        }

        /// <summary>
        /// Compartment OCID
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// Unique Fleet identifier.
        /// </summary>
        [Input("fleetId")]
        public Input<string>? FleetId { get; set; }

        /// <summary>
        /// OCID referring to global level metadata property.
        /// </summary>
        [Input("propertyId")]
        public Input<string>? PropertyId { get; set; }

        /// <summary>
        /// Text selection of the property.
        /// </summary>
        [Input("selectionType")]
        public Input<string>? SelectionType { get; set; }

        /// <summary>
        /// The current state of the FleetProperty.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("systemTags")]
        private InputMap<string>? _systemTags;

        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public InputMap<string> SystemTags
        {
            get => _systemTags ?? (_systemTags = new InputMap<string>());
            set => _systemTags = value;
        }

        /// <summary>
        /// The time this resource was created. An RFC3339 formatted datetime string.
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The time this resource was last updated. An RFC3339 formatted datetime string.
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        /// <summary>
        /// (Updatable) Value of the Property.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("value")]
        public Input<string>? Value { get; set; }

        /// <summary>
        /// Format of the value.
        /// </summary>
        [Input("valueType")]
        public Input<string>? ValueType { get; set; }

        public FleetPropertyState()
        {
        }
        public static new FleetPropertyState Empty => new FleetPropertyState();
    }
}
