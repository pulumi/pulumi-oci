// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.FleetAppsManagement
{
    /// <summary>
    /// This resource provides the Fleet Resource resource in Oracle Cloud Infrastructure Fleet Apps Management service.
    /// 
    /// Creates a new FleetResource.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testFleetResource = new Oci.FleetAppsManagement.FleetResource("test_fleet_resource", new()
    ///     {
    ///         CompartmentId = compartmentId,
    ///         FleetId = testFleet.Id,
    ///         ResourceId = testResource.Id,
    ///         TenancyId = testTenancy.Id,
    ///         ResourceRegion = fleetResourceResourceRegion,
    ///         ResourceType = fleetResourceResourceType,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Import is not supported for this resource.
    /// </summary>
    [OciResourceType("oci:FleetAppsManagement/fleetResource:FleetResource")]
    public partial class FleetResource : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Application Type associated with the resource when resource type is fleet.Will only be returned for ENVIRONMENT fleets that are part of a GROUP Fleet.
        /// </summary>
        [Output("applicationType")]
        public Output<string> ApplicationType { get; private set; } = null!;

        /// <summary>
        /// Resource Compartment
        /// </summary>
        [Output("compartment")]
        public Output<string> Compartment { get; private set; } = null!;

        /// <summary>
        /// (Updatable) OCID of the compartment to which the resource belongs to.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// Compliance State of the Resource
        /// </summary>
        [Output("complianceState")]
        public Output<string> ComplianceState { get; private set; } = null!;

        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Environment Type associated with the Fleet when resource type is fleet.Will only be returned for ENVIRONMENT fleets that are part of a GROUP Fleet.
        /// </summary>
        [Output("environmentType")]
        public Output<string> EnvironmentType { get; private set; } = null!;

        /// <summary>
        /// unique Fleet identifier
        /// </summary>
        [Output("fleetId")]
        public Output<string> FleetId { get; private set; } = null!;

        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        [Output("lifecycleDetails")]
        public Output<string> LifecycleDetails { get; private set; } = null!;

        /// <summary>
        /// Product associated with the resource when resource type is fleet.Will only be returned for PRODUCT fleets that are part of a GROUP Fleet
        /// </summary>
        [Output("product")]
        public Output<string> Product { get; private set; } = null!;

        /// <summary>
        /// Count of products within the resource.
        /// </summary>
        [Output("productCount")]
        public Output<int> ProductCount { get; private set; } = null!;

        /// <summary>
        /// The OCID of the resource.
        /// </summary>
        [Output("resourceId")]
        public Output<string> ResourceId { get; private set; } = null!;

        /// <summary>
        /// Associated region
        /// </summary>
        [Output("resourceRegion")]
        public Output<string> ResourceRegion { get; private set; } = null!;

        /// <summary>
        /// Type of the Resource.
        /// </summary>
        [Output("resourceType")]
        public Output<string> ResourceType { get; private set; } = null!;

        /// <summary>
        /// The current state of the FleetResource.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        [Output("systemTags")]
        public Output<ImmutableDictionary<string, string>> SystemTags { get; private set; } = null!;

        /// <summary>
        /// Count of targets  within the resource.
        /// </summary>
        [Output("targetCount")]
        public Output<int> TargetCount { get; private set; } = null!;

        /// <summary>
        /// (Updatable) OCID of the tenancy to which the resource belongs to.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("tenancyId")]
        public Output<string> TenancyId { get; private set; } = null!;

        /// <summary>
        /// Resource Tenancy Name
        /// </summary>
        [Output("tenancyName")]
        public Output<string> TenancyName { get; private set; } = null!;

        /// <summary>
        /// The time this resource was created. An RFC3339 formatted datetime string.
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The time this resource was last updated. An RFC3339 formatted datetime string.
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;


        /// <summary>
        /// Create a FleetResource resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FleetResource(string name, FleetResourceArgs args, CustomResourceOptions? options = null)
            : base("oci:FleetAppsManagement/fleetResource:FleetResource", name, args ?? new FleetResourceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FleetResource(string name, Input<string> id, FleetResourceState? state = null, CustomResourceOptions? options = null)
            : base("oci:FleetAppsManagement/fleetResource:FleetResource", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FleetResource resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FleetResource Get(string name, Input<string> id, FleetResourceState? state = null, CustomResourceOptions? options = null)
        {
            return new FleetResource(name, id, state, options);
        }
    }

    public sealed class FleetResourceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) OCID of the compartment to which the resource belongs to.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// unique Fleet identifier
        /// </summary>
        [Input("fleetId", required: true)]
        public Input<string> FleetId { get; set; } = null!;

        /// <summary>
        /// The OCID of the resource.
        /// </summary>
        [Input("resourceId", required: true)]
        public Input<string> ResourceId { get; set; } = null!;

        /// <summary>
        /// Associated region
        /// </summary>
        [Input("resourceRegion")]
        public Input<string>? ResourceRegion { get; set; }

        /// <summary>
        /// Type of the Resource.
        /// </summary>
        [Input("resourceType")]
        public Input<string>? ResourceType { get; set; }

        /// <summary>
        /// (Updatable) OCID of the tenancy to which the resource belongs to.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("tenancyId", required: true)]
        public Input<string> TenancyId { get; set; } = null!;

        public FleetResourceArgs()
        {
        }
        public static new FleetResourceArgs Empty => new FleetResourceArgs();
    }

    public sealed class FleetResourceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Application Type associated with the resource when resource type is fleet.Will only be returned for ENVIRONMENT fleets that are part of a GROUP Fleet.
        /// </summary>
        [Input("applicationType")]
        public Input<string>? ApplicationType { get; set; }

        /// <summary>
        /// Resource Compartment
        /// </summary>
        [Input("compartment")]
        public Input<string>? Compartment { get; set; }

        /// <summary>
        /// (Updatable) OCID of the compartment to which the resource belongs to.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// Compliance State of the Resource
        /// </summary>
        [Input("complianceState")]
        public Input<string>? ComplianceState { get; set; }

        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// Environment Type associated with the Fleet when resource type is fleet.Will only be returned for ENVIRONMENT fleets that are part of a GROUP Fleet.
        /// </summary>
        [Input("environmentType")]
        public Input<string>? EnvironmentType { get; set; }

        /// <summary>
        /// unique Fleet identifier
        /// </summary>
        [Input("fleetId")]
        public Input<string>? FleetId { get; set; }

        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        [Input("lifecycleDetails")]
        public Input<string>? LifecycleDetails { get; set; }

        /// <summary>
        /// Product associated with the resource when resource type is fleet.Will only be returned for PRODUCT fleets that are part of a GROUP Fleet
        /// </summary>
        [Input("product")]
        public Input<string>? Product { get; set; }

        /// <summary>
        /// Count of products within the resource.
        /// </summary>
        [Input("productCount")]
        public Input<int>? ProductCount { get; set; }

        /// <summary>
        /// The OCID of the resource.
        /// </summary>
        [Input("resourceId")]
        public Input<string>? ResourceId { get; set; }

        /// <summary>
        /// Associated region
        /// </summary>
        [Input("resourceRegion")]
        public Input<string>? ResourceRegion { get; set; }

        /// <summary>
        /// Type of the Resource.
        /// </summary>
        [Input("resourceType")]
        public Input<string>? ResourceType { get; set; }

        /// <summary>
        /// The current state of the FleetResource.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("systemTags")]
        private InputMap<string>? _systemTags;

        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public InputMap<string> SystemTags
        {
            get => _systemTags ?? (_systemTags = new InputMap<string>());
            set => _systemTags = value;
        }

        /// <summary>
        /// Count of targets  within the resource.
        /// </summary>
        [Input("targetCount")]
        public Input<int>? TargetCount { get; set; }

        /// <summary>
        /// (Updatable) OCID of the tenancy to which the resource belongs to.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("tenancyId")]
        public Input<string>? TenancyId { get; set; }

        /// <summary>
        /// Resource Tenancy Name
        /// </summary>
        [Input("tenancyName")]
        public Input<string>? TenancyName { get; set; }

        /// <summary>
        /// The time this resource was created. An RFC3339 formatted datetime string.
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The time this resource was last updated. An RFC3339 formatted datetime string.
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        public FleetResourceState()
        {
        }
        public static new FleetResourceState Empty => new FleetResourceState();
    }
}
