// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.FleetAppsManagement
{
    public static class GetCatalogItem
    {
        /// <summary>
        /// This data source provides details about a specific Catalog Item resource in Oracle Cloud Infrastructure Fleet Apps Management service.
        /// 
        /// Gets information about a CatalogItem.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testCatalogItem = Oci.FleetAppsManagement.GetCatalogItem.Invoke(new()
        ///     {
        ///         CatalogItemId = testCatalogItemOciFleetAppsManagementCatalogItem.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetCatalogItemResult> InvokeAsync(GetCatalogItemArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCatalogItemResult>("oci:FleetAppsManagement/getCatalogItem:getCatalogItem", args ?? new GetCatalogItemArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Catalog Item resource in Oracle Cloud Infrastructure Fleet Apps Management service.
        /// 
        /// Gets information about a CatalogItem.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testCatalogItem = Oci.FleetAppsManagement.GetCatalogItem.Invoke(new()
        ///     {
        ///         CatalogItemId = testCatalogItemOciFleetAppsManagementCatalogItem.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCatalogItemResult> Invoke(GetCatalogItemInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCatalogItemResult>("oci:FleetAppsManagement/getCatalogItem:getCatalogItem", args ?? new GetCatalogItemInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Catalog Item resource in Oracle Cloud Infrastructure Fleet Apps Management service.
        /// 
        /// Gets information about a CatalogItem.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testCatalogItem = Oci.FleetAppsManagement.GetCatalogItem.Invoke(new()
        ///     {
        ///         CatalogItemId = testCatalogItemOciFleetAppsManagementCatalogItem.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCatalogItemResult> Invoke(GetCatalogItemInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCatalogItemResult>("oci:FleetAppsManagement/getCatalogItem:getCatalogItem", args ?? new GetCatalogItemInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCatalogItemArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the CatalogItem.
        /// </summary>
        [Input("catalogItemId", required: true)]
        public string CatalogItemId { get; set; } = null!;

        public GetCatalogItemArgs()
        {
        }
        public static new GetCatalogItemArgs Empty => new GetCatalogItemArgs();
    }

    public sealed class GetCatalogItemInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the CatalogItem.
        /// </summary>
        [Input("catalogItemId", required: true)]
        public Input<string> CatalogItemId { get; set; } = null!;

        public GetCatalogItemInvokeArgs()
        {
        }
        public static new GetCatalogItemInvokeArgs Empty => new GetCatalogItemInvokeArgs();
    }


    [OutputType]
    public sealed class GetCatalogItemResult
    {
        public readonly string CatalogItemId;
        /// <summary>
        /// Catalog result payload.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCatalogItemCatalogResultPayloadResult> CatalogResultPayloads;
        /// <summary>
        /// Catalog source payload.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCatalogItemCatalogSourcePayloadResult> CatalogSourcePayloads;
        public readonly int CloneCatalogItemTrigger;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Config source type Eg: STACK_TEMPLATE_CATALOG_SOURCE, PAR_CATALOG_SOURCE, GIT_CATALOG_SOURCE, MARKETPLACE_CATALOG_SOURCE.
        /// </summary>
        public readonly string ConfigSourceType;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// Description about the catalog item.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the catalog.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The details of lifecycle state CatalogItem.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// The catalog listing Id.
        /// </summary>
        public readonly string ListingId;
        /// <summary>
        /// The catalog package version.
        /// </summary>
        public readonly string ListingVersion;
        /// <summary>
        /// Config package type Eg: TF_PACKAGE, NON_TF_PACKAGE, CONFIG_FILE.
        /// </summary>
        public readonly string PackageType;
        /// <summary>
        /// Short description about the catalog item.
        /// </summary>
        public readonly string ShortDescription;
        /// <summary>
        /// The indicator to append Public Items from the root compartment to any query, when set to TRUE.
        /// </summary>
        public readonly bool ShouldListPublicItems;
        /// <summary>
        /// The current state of the CatalogItem.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// The date and time the CatalogItem was last checked by backfill job, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        public readonly string TimeBackfillLastChecked;
        /// <summary>
        /// The date and time the CatalogItem was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The date and time the CatalogItem was last checked, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        public readonly string TimeLastChecked;
        /// <summary>
        /// The date and time the CatalogItem was released, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        public readonly string TimeReleased;
        /// <summary>
        /// The date and time the CatalogItem was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        public readonly string TimeUpdated;
        /// <summary>
        /// Version description about the catalog item.
        /// </summary>
        public readonly string VersionDescription;

        [OutputConstructor]
        private GetCatalogItemResult(
            string catalogItemId,

            ImmutableArray<Outputs.GetCatalogItemCatalogResultPayloadResult> catalogResultPayloads,

            ImmutableArray<Outputs.GetCatalogItemCatalogSourcePayloadResult> catalogSourcePayloads,

            int cloneCatalogItemTrigger,

            string compartmentId,

            string configSourceType,

            ImmutableDictionary<string, string> definedTags,

            string description,

            string displayName,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            string lifecycleDetails,

            string listingId,

            string listingVersion,

            string packageType,

            string shortDescription,

            bool shouldListPublicItems,

            string state,

            ImmutableDictionary<string, string> systemTags,

            string timeBackfillLastChecked,

            string timeCreated,

            string timeLastChecked,

            string timeReleased,

            string timeUpdated,

            string versionDescription)
        {
            CatalogItemId = catalogItemId;
            CatalogResultPayloads = catalogResultPayloads;
            CatalogSourcePayloads = catalogSourcePayloads;
            CloneCatalogItemTrigger = cloneCatalogItemTrigger;
            CompartmentId = compartmentId;
            ConfigSourceType = configSourceType;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            LifecycleDetails = lifecycleDetails;
            ListingId = listingId;
            ListingVersion = listingVersion;
            PackageType = packageType;
            ShortDescription = shortDescription;
            ShouldListPublicItems = shouldListPublicItems;
            State = state;
            SystemTags = systemTags;
            TimeBackfillLastChecked = timeBackfillLastChecked;
            TimeCreated = timeCreated;
            TimeLastChecked = timeLastChecked;
            TimeReleased = timeReleased;
            TimeUpdated = timeUpdated;
            VersionDescription = versionDescription;
        }
    }
}
