// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.FleetAppsManagement
{
    public static class GetCompliancePolicies
    {
        /// <summary>
        /// This data source provides the list of Compliance Policies in Oracle Cloud Infrastructure Fleet Apps Management service.
        /// 
        /// Returns a list of all the Compliance Policies in the specified compartment.
        /// The query parameter `compartmentId` is required unless the query parameter `Id` is specified.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testCompliancePolicies = Oci.FleetAppsManagement.GetCompliancePolicies.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = compliancePolicyDisplayName,
        ///         Id = compliancePolicyId,
        ///         State = compliancePolicyState,
        ///         Type = compliancePolicyType,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetCompliancePoliciesResult> InvokeAsync(GetCompliancePoliciesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCompliancePoliciesResult>("oci:FleetAppsManagement/getCompliancePolicies:getCompliancePolicies", args ?? new GetCompliancePoliciesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Compliance Policies in Oracle Cloud Infrastructure Fleet Apps Management service.
        /// 
        /// Returns a list of all the Compliance Policies in the specified compartment.
        /// The query parameter `compartmentId` is required unless the query parameter `Id` is specified.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testCompliancePolicies = Oci.FleetAppsManagement.GetCompliancePolicies.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = compliancePolicyDisplayName,
        ///         Id = compliancePolicyId,
        ///         State = compliancePolicyState,
        ///         Type = compliancePolicyType,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCompliancePoliciesResult> Invoke(GetCompliancePoliciesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCompliancePoliciesResult>("oci:FleetAppsManagement/getCompliancePolicies:getCompliancePolicies", args ?? new GetCompliancePoliciesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Compliance Policies in Oracle Cloud Infrastructure Fleet Apps Management service.
        /// 
        /// Returns a list of all the Compliance Policies in the specified compartment.
        /// The query parameter `compartmentId` is required unless the query parameter `Id` is specified.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testCompliancePolicies = Oci.FleetAppsManagement.GetCompliancePolicies.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = compliancePolicyDisplayName,
        ///         Id = compliancePolicyId,
        ///         State = compliancePolicyState,
        ///         Type = compliancePolicyType,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCompliancePoliciesResult> Invoke(GetCompliancePoliciesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCompliancePoliciesResult>("oci:FleetAppsManagement/getCompliancePolicies:getCompliancePolicies", args ?? new GetCompliancePoliciesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCompliancePoliciesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources. Empty only if the resource OCID query param is not specified.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetCompliancePoliciesFilterArgs>? _filters;
        public List<Inputs.GetCompliancePoliciesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetCompliancePoliciesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Unique identifier or OCID for listing a single Compliance Policy by id. Either compartmentId or id must be provided.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        /// <summary>
        /// A filter to return Platform Configurations whose type matches the given type.
        /// </summary>
        [Input("type")]
        public string? Type { get; set; }

        public GetCompliancePoliciesArgs()
        {
        }
        public static new GetCompliancePoliciesArgs Empty => new GetCompliancePoliciesArgs();
    }

    public sealed class GetCompliancePoliciesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources. Empty only if the resource OCID query param is not specified.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetCompliancePoliciesFilterInputArgs>? _filters;
        public InputList<Inputs.GetCompliancePoliciesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetCompliancePoliciesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Unique identifier or OCID for listing a single Compliance Policy by id. Either compartmentId or id must be provided.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// A filter to return Platform Configurations whose type matches the given type.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public GetCompliancePoliciesInvokeArgs()
        {
        }
        public static new GetCompliancePoliciesInvokeArgs Empty => new GetCompliancePoliciesInvokeArgs();
    }


    [OutputType]
    public sealed class GetCompliancePoliciesResult
    {
        /// <summary>
        /// The OCID of the compartment the CompliancePolicy belongs to.
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// The list of compliance_policy_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCompliancePoliciesCompliancePolicyCollectionResult> CompliancePolicyCollections;
        /// <summary>
        /// Display name for the CompliancePolicy.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetCompliancePoliciesFilterResult> Filters;
        /// <summary>
        /// The OCID of the CompliancePolicy.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The current state of the CompliancePolicy.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// The type of the Compliance Policy.
        /// </summary>
        public readonly string? Type;

        [OutputConstructor]
        private GetCompliancePoliciesResult(
            string? compartmentId,

            ImmutableArray<Outputs.GetCompliancePoliciesCompliancePolicyCollectionResult> compliancePolicyCollections,

            string? displayName,

            ImmutableArray<Outputs.GetCompliancePoliciesFilterResult> filters,

            string? id,

            string? state,

            string? type)
        {
            CompartmentId = compartmentId;
            CompliancePolicyCollections = compliancePolicyCollections;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            State = state;
            Type = type;
        }
    }
}
