// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.FleetAppsManagement
{
    public static class GetCompliancePolicy
    {
        /// <summary>
        /// This data source provides details about a specific Compliance Policy resource in Oracle Cloud Infrastructure Fleet Apps Management service.
        /// 
        /// Gets information about a CompliancePolicy.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testCompliancePolicy = Oci.FleetAppsManagement.GetCompliancePolicy.Invoke(new()
        ///     {
        ///         CompliancePolicyId = testCompliancePolicyOciFleetAppsManagementCompliancePolicy.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetCompliancePolicyResult> InvokeAsync(GetCompliancePolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCompliancePolicyResult>("oci:FleetAppsManagement/getCompliancePolicy:getCompliancePolicy", args ?? new GetCompliancePolicyArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Compliance Policy resource in Oracle Cloud Infrastructure Fleet Apps Management service.
        /// 
        /// Gets information about a CompliancePolicy.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testCompliancePolicy = Oci.FleetAppsManagement.GetCompliancePolicy.Invoke(new()
        ///     {
        ///         CompliancePolicyId = testCompliancePolicyOciFleetAppsManagementCompliancePolicy.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCompliancePolicyResult> Invoke(GetCompliancePolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCompliancePolicyResult>("oci:FleetAppsManagement/getCompliancePolicy:getCompliancePolicy", args ?? new GetCompliancePolicyInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Compliance Policy resource in Oracle Cloud Infrastructure Fleet Apps Management service.
        /// 
        /// Gets information about a CompliancePolicy.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testCompliancePolicy = Oci.FleetAppsManagement.GetCompliancePolicy.Invoke(new()
        ///     {
        ///         CompliancePolicyId = testCompliancePolicyOciFleetAppsManagementCompliancePolicy.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCompliancePolicyResult> Invoke(GetCompliancePolicyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCompliancePolicyResult>("oci:FleetAppsManagement/getCompliancePolicy:getCompliancePolicy", args ?? new GetCompliancePolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCompliancePolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// unique CompliancePolicy identifier.
        /// </summary>
        [Input("compliancePolicyId", required: true)]
        public string CompliancePolicyId { get; set; } = null!;

        public GetCompliancePolicyArgs()
        {
        }
        public static new GetCompliancePolicyArgs Empty => new GetCompliancePolicyArgs();
    }

    public sealed class GetCompliancePolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// unique CompliancePolicy identifier.
        /// </summary>
        [Input("compliancePolicyId", required: true)]
        public Input<string> CompliancePolicyId { get; set; } = null!;

        public GetCompliancePolicyInvokeArgs()
        {
        }
        public static new GetCompliancePolicyInvokeArgs Empty => new GetCompliancePolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetCompliancePolicyResult
    {
        /// <summary>
        /// The OCID of the compartment the CompliancePolicy belongs to.
        /// </summary>
        public readonly string CompartmentId;
        public readonly string CompliancePolicyId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// Display name for the CompliancePolicy.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A message that describes the current state of the CompliancePolicy in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// platformConfiguration OCID corresponding to the Product.
        /// </summary>
        public readonly string ProductId;
        /// <summary>
        /// The current state of the CompliancePolicy.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// The date and time the CompliancePolicy was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The date and time the CompliancePolicy was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetCompliancePolicyResult(
            string compartmentId,

            string compliancePolicyId,

            ImmutableDictionary<string, string> definedTags,

            string displayName,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            string lifecycleDetails,

            string productId,

            string state,

            ImmutableDictionary<string, string> systemTags,

            string timeCreated,

            string timeUpdated)
        {
            CompartmentId = compartmentId;
            CompliancePolicyId = compliancePolicyId;
            DefinedTags = definedTags;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            LifecycleDetails = lifecycleDetails;
            ProductId = productId;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
