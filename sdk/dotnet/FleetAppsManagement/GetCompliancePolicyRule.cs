// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.FleetAppsManagement
{
    public static class GetCompliancePolicyRule
    {
        /// <summary>
        /// This data source provides details about a specific Compliance Policy Rule resource in Oracle Cloud Infrastructure Fleet Apps Management service.
        /// 
        /// Gets information about a CompliancePolicyRule.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testCompliancePolicyRule = Oci.FleetAppsManagement.GetCompliancePolicyRule.Invoke(new()
        ///     {
        ///         CompliancePolicyRuleId = testCompliancePolicyRuleOciFleetAppsManagementCompliancePolicyRule.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetCompliancePolicyRuleResult> InvokeAsync(GetCompliancePolicyRuleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCompliancePolicyRuleResult>("oci:FleetAppsManagement/getCompliancePolicyRule:getCompliancePolicyRule", args ?? new GetCompliancePolicyRuleArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Compliance Policy Rule resource in Oracle Cloud Infrastructure Fleet Apps Management service.
        /// 
        /// Gets information about a CompliancePolicyRule.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testCompliancePolicyRule = Oci.FleetAppsManagement.GetCompliancePolicyRule.Invoke(new()
        ///     {
        ///         CompliancePolicyRuleId = testCompliancePolicyRuleOciFleetAppsManagementCompliancePolicyRule.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCompliancePolicyRuleResult> Invoke(GetCompliancePolicyRuleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCompliancePolicyRuleResult>("oci:FleetAppsManagement/getCompliancePolicyRule:getCompliancePolicyRule", args ?? new GetCompliancePolicyRuleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCompliancePolicyRuleArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// unique CompliancePolicyRule identifier.
        /// </summary>
        [Input("compliancePolicyRuleId", required: true)]
        public string CompliancePolicyRuleId { get; set; } = null!;

        public GetCompliancePolicyRuleArgs()
        {
        }
        public static new GetCompliancePolicyRuleArgs Empty => new GetCompliancePolicyRuleArgs();
    }

    public sealed class GetCompliancePolicyRuleInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// unique CompliancePolicyRule identifier.
        /// </summary>
        [Input("compliancePolicyRuleId", required: true)]
        public Input<string> CompliancePolicyRuleId { get; set; } = null!;

        public GetCompliancePolicyRuleInvokeArgs()
        {
        }
        public static new GetCompliancePolicyRuleInvokeArgs Empty => new GetCompliancePolicyRuleInvokeArgs();
    }


    [OutputType]
    public sealed class GetCompliancePolicyRuleResult
    {
        /// <summary>
        /// The OCID of the compartment the CompliancePolicyRule belongs to.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Unique OCID of the CompliancePolicy.
        /// </summary>
        public readonly string CompliancePolicyId;
        public readonly string CompliancePolicyRuleId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// Grace period in days,weeks,months or years the exemption is applicable for the rule. This enables a grace period when Fleet Application Management doesn't report the product as noncompliant when patch is not applied.
        /// </summary>
        public readonly string GracePeriod;
        /// <summary>
        /// Unique OCID of the CompliancePolicyRule.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A message that describes the current state of the CompliancePolicyRule in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// Patch Selection Details
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCompliancePolicyRulePatchSelectionResult> PatchSelections;
        /// <summary>
        /// PlatformConfiguration OCID for the patch type to which this CompliancePolicyRule applies.
        /// </summary>
        public readonly ImmutableArray<string> PatchTypes;
        /// <summary>
        /// A specific product version or a specific version and succeeding. Example: 12.1 or 12.1 and above for Oracle WebLogic Application server. The policy applies to the next version only, and not to other versions such as, 12.1.x.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCompliancePolicyRuleProductVersionResult> ProductVersions;
        /// <summary>
        /// Severity to which this CompliancePolicyRule applies.
        /// </summary>
        public readonly ImmutableArray<string> Severities;
        /// <summary>
        /// The current state of the CompliancePolicyRule.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// The date and time the CompliancePolicyRule was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The date and time the CompliancePolicyRule was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetCompliancePolicyRuleResult(
            string compartmentId,

            string compliancePolicyId,

            string compliancePolicyRuleId,

            ImmutableDictionary<string, string> definedTags,

            string displayName,

            ImmutableDictionary<string, string> freeformTags,

            string gracePeriod,

            string id,

            string lifecycleDetails,

            ImmutableArray<Outputs.GetCompliancePolicyRulePatchSelectionResult> patchSelections,

            ImmutableArray<string> patchTypes,

            ImmutableArray<Outputs.GetCompliancePolicyRuleProductVersionResult> productVersions,

            ImmutableArray<string> severities,

            string state,

            ImmutableDictionary<string, string> systemTags,

            string timeCreated,

            string timeUpdated)
        {
            CompartmentId = compartmentId;
            CompliancePolicyId = compliancePolicyId;
            CompliancePolicyRuleId = compliancePolicyRuleId;
            DefinedTags = definedTags;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            GracePeriod = gracePeriod;
            Id = id;
            LifecycleDetails = lifecycleDetails;
            PatchSelections = patchSelections;
            PatchTypes = patchTypes;
            ProductVersions = productVersions;
            Severities = severities;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
