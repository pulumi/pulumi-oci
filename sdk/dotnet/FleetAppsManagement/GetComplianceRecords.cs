// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.FleetAppsManagement
{
    public static class GetComplianceRecords
    {
        /// <summary>
        /// This data source provides the list of Compliance Records in Oracle Cloud Infrastructure Fleet Apps Management service.
        /// 
        /// Gets a list of complianceDetails.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testComplianceRecords = Oci.FleetAppsManagement.GetComplianceRecords.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         ComplianceState = complianceRecordComplianceState,
        ///         EntityId = testEntity.Id,
        ///         ProductName = complianceRecordProductName,
        ///         ProductStack = complianceRecordProductStack,
        ///         ResourceId = testResource.Id,
        ///         TargetName = testTarget.Name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetComplianceRecordsResult> InvokeAsync(GetComplianceRecordsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetComplianceRecordsResult>("oci:FleetAppsManagement/getComplianceRecords:getComplianceRecords", args ?? new GetComplianceRecordsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Compliance Records in Oracle Cloud Infrastructure Fleet Apps Management service.
        /// 
        /// Gets a list of complianceDetails.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testComplianceRecords = Oci.FleetAppsManagement.GetComplianceRecords.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         ComplianceState = complianceRecordComplianceState,
        ///         EntityId = testEntity.Id,
        ///         ProductName = complianceRecordProductName,
        ///         ProductStack = complianceRecordProductStack,
        ///         ResourceId = testResource.Id,
        ///         TargetName = testTarget.Name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetComplianceRecordsResult> Invoke(GetComplianceRecordsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetComplianceRecordsResult>("oci:FleetAppsManagement/getComplianceRecords:getComplianceRecords", args ?? new GetComplianceRecordsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetComplianceRecordsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        /// <summary>
        /// Target Compliance State.
        /// </summary>
        [Input("complianceState")]
        public string? ComplianceState { get; set; }

        /// <summary>
        /// Entity identifier.Ex:FleetId
        /// </summary>
        [Input("entityId")]
        public string? EntityId { get; set; }

        [Input("filters")]
        private List<Inputs.GetComplianceRecordsFilterArgs>? _filters;
        public List<Inputs.GetComplianceRecordsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetComplianceRecordsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Product Name.
        /// </summary>
        [Input("productName")]
        public string? ProductName { get; set; }

        /// <summary>
        /// ProductStack name.
        /// </summary>
        [Input("productStack")]
        public string? ProductStack { get; set; }

        /// <summary>
        /// Resource identifier.
        /// </summary>
        [Input("resourceId")]
        public string? ResourceId { get; set; }

        /// <summary>
        /// Unique target name
        /// </summary>
        [Input("targetName")]
        public string? TargetName { get; set; }

        public GetComplianceRecordsArgs()
        {
        }
        public static new GetComplianceRecordsArgs Empty => new GetComplianceRecordsArgs();
    }

    public sealed class GetComplianceRecordsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// Target Compliance State.
        /// </summary>
        [Input("complianceState")]
        public Input<string>? ComplianceState { get; set; }

        /// <summary>
        /// Entity identifier.Ex:FleetId
        /// </summary>
        [Input("entityId")]
        public Input<string>? EntityId { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetComplianceRecordsFilterInputArgs>? _filters;
        public InputList<Inputs.GetComplianceRecordsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetComplianceRecordsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Product Name.
        /// </summary>
        [Input("productName")]
        public Input<string>? ProductName { get; set; }

        /// <summary>
        /// ProductStack name.
        /// </summary>
        [Input("productStack")]
        public Input<string>? ProductStack { get; set; }

        /// <summary>
        /// Resource identifier.
        /// </summary>
        [Input("resourceId")]
        public Input<string>? ResourceId { get; set; }

        /// <summary>
        /// Unique target name
        /// </summary>
        [Input("targetName")]
        public Input<string>? TargetName { get; set; }

        public GetComplianceRecordsInvokeArgs()
        {
        }
        public static new GetComplianceRecordsInvokeArgs Empty => new GetComplianceRecordsInvokeArgs();
    }


    [OutputType]
    public sealed class GetComplianceRecordsResult
    {
        /// <summary>
        /// TenancyId of the resource.
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// The list of compliance_record_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetComplianceRecordsComplianceRecordCollectionResult> ComplianceRecordCollections;
        /// <summary>
        /// Last known compliance state of target.
        /// </summary>
        public readonly string? ComplianceState;
        /// <summary>
        /// The OCID of the entity for which the compliance is calculated.Ex.FleetId
        /// </summary>
        public readonly string? EntityId;
        public readonly ImmutableArray<Outputs.GetComplianceRecordsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Product Name.
        /// </summary>
        public readonly string? ProductName;
        /// <summary>
        /// Product Stack.
        /// </summary>
        public readonly string? ProductStack;
        /// <summary>
        /// The OCID to identify the resource.
        /// </summary>
        public readonly string? ResourceId;
        /// <summary>
        /// Target Name.
        /// </summary>
        public readonly string? TargetName;

        [OutputConstructor]
        private GetComplianceRecordsResult(
            string? compartmentId,

            ImmutableArray<Outputs.GetComplianceRecordsComplianceRecordCollectionResult> complianceRecordCollections,

            string? complianceState,

            string? entityId,

            ImmutableArray<Outputs.GetComplianceRecordsFilterResult> filters,

            string id,

            string? productName,

            string? productStack,

            string? resourceId,

            string? targetName)
        {
            CompartmentId = compartmentId;
            ComplianceRecordCollections = complianceRecordCollections;
            ComplianceState = complianceState;
            EntityId = entityId;
            Filters = filters;
            Id = id;
            ProductName = productName;
            ProductStack = productStack;
            ResourceId = resourceId;
            TargetName = targetName;
        }
    }
}
