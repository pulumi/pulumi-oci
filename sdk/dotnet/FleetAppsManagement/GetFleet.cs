// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.FleetAppsManagement
{
    public static class GetFleet
    {
        /// <summary>
        /// This data source provides details about a specific Fleet resource in Oracle Cloud Infrastructure Fleet Apps Management service.
        /// 
        /// Get the details of a fleet in Fleet Application Management.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testFleet = Oci.FleetAppsManagement.GetFleet.Invoke(new()
        ///     {
        ///         FleetId = testFleetOciFleetAppsManagementFleet.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetFleetResult> InvokeAsync(GetFleetArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFleetResult>("oci:FleetAppsManagement/getFleet:getFleet", args ?? new GetFleetArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Fleet resource in Oracle Cloud Infrastructure Fleet Apps Management service.
        /// 
        /// Get the details of a fleet in Fleet Application Management.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testFleet = Oci.FleetAppsManagement.GetFleet.Invoke(new()
        ///     {
        ///         FleetId = testFleetOciFleetAppsManagementFleet.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetFleetResult> Invoke(GetFleetInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFleetResult>("oci:FleetAppsManagement/getFleet:getFleet", args ?? new GetFleetInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFleetArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique Fleet identifier.
        /// </summary>
        [Input("fleetId", required: true)]
        public string FleetId { get; set; } = null!;

        public GetFleetArgs()
        {
        }
        public static new GetFleetArgs Empty => new GetFleetArgs();
    }

    public sealed class GetFleetInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique Fleet identifier.
        /// </summary>
        [Input("fleetId", required: true)]
        public Input<string> FleetId { get; set; } = null!;

        public GetFleetInvokeArgs()
        {
        }
        public static new GetFleetInvokeArgs Empty => new GetFleetInvokeArgs();
    }


    [OutputType]
    public sealed class GetFleetResult
    {
        /// <summary>
        /// Product stack associated with the Fleet. Applicable for ENVIRONMENT fleet types.
        /// </summary>
        public readonly string ApplicationType;
        /// <summary>
        /// Tenancy Id (Root Compartment Id)for which the rule is created.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Credentials associated with the Fleet.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFleetCredentialResult> Credentials;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Environment Type associated with the Fleet. Applicable for ENVIRONMENT fleet types.
        /// </summary>
        public readonly string EnvironmentType;
        public readonly string FleetId;
        /// <summary>
        /// Type of the Fleet. PRODUCT - A fleet of product-specific resources for a product type. ENVIRONMENT - A fleet of environment-specific resources for a product stack. GROUP - A fleet of a fleet of either environment or product fleets. GENERIC - A fleet of resources selected dynamically or manually for reporting purposes
        /// </summary>
        public readonly string FleetType;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// Group Type associated with Group Fleet. Applicable for GROUP fleet types.
        /// </summary>
        public readonly string GroupType;
        /// <summary>
        /// The OCID of the resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A value that represents if auto-confirming of the targets can be enabled. This will allow targets to be auto-confirmed in the fleet without manual intervention.
        /// </summary>
        public readonly bool IsTargetAutoConfirm;
        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// Notification information to get notified when the fleet status changes.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFleetNotificationPreferenceResult> NotificationPreferences;
        /// <summary>
        /// Products associated with the Fleet.
        /// </summary>
        public readonly ImmutableArray<string> Products;
        /// <summary>
        /// Associated region
        /// </summary>
        public readonly string ResourceRegion;
        /// <summary>
        /// Type of resource selection in a Fleet. Select resources manually or select resources based on rules.
        /// </summary>
        public readonly string ResourceSelectionType;
        /// <summary>
        /// Rule Selection Criteria for DYNAMIC resource selection for a GENERIC fleet. Rules define what resources are members of this fleet. All resources that meet the criteria are added automatically.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFleetRuleSelectionCriteriaResult> RuleSelectionCriterias;
        /// <summary>
        /// The lifecycle state of the Fleet.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// The time this resource was created. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time this resource was last updated. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetFleetResult(
            string applicationType,

            string compartmentId,

            ImmutableArray<Outputs.GetFleetCredentialResult> credentials,

            ImmutableDictionary<string, string> definedTags,

            string description,

            string displayName,

            string environmentType,

            string fleetId,

            string fleetType,

            ImmutableDictionary<string, string> freeformTags,

            string groupType,

            string id,

            bool isTargetAutoConfirm,

            string lifecycleDetails,

            ImmutableArray<Outputs.GetFleetNotificationPreferenceResult> notificationPreferences,

            ImmutableArray<string> products,

            string resourceRegion,

            string resourceSelectionType,

            ImmutableArray<Outputs.GetFleetRuleSelectionCriteriaResult> ruleSelectionCriterias,

            string state,

            ImmutableDictionary<string, string> systemTags,

            string timeCreated,

            string timeUpdated)
        {
            ApplicationType = applicationType;
            CompartmentId = compartmentId;
            Credentials = credentials;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            EnvironmentType = environmentType;
            FleetId = fleetId;
            FleetType = fleetType;
            FreeformTags = freeformTags;
            GroupType = groupType;
            Id = id;
            IsTargetAutoConfirm = isTargetAutoConfirm;
            LifecycleDetails = lifecycleDetails;
            NotificationPreferences = notificationPreferences;
            Products = products;
            ResourceRegion = resourceRegion;
            ResourceSelectionType = resourceSelectionType;
            RuleSelectionCriterias = ruleSelectionCriterias;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
