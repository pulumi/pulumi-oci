// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.FleetAppsManagement
{
    public static class GetFleetProducts
    {
        /// <summary>
        /// This data source provides the list of Fleet Products in Oracle Cloud Infrastructure Fleet Apps Management service.
        /// 
        /// Returns a list of FleetProducts.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testFleetProducts = Oci.FleetAppsManagement.GetFleetProducts.Invoke(new()
        ///     {
        ///         FleetId = testFleet.Id,
        ///         CompartmentId = compartmentId,
        ///         DisplayName = fleetProductDisplayName,
        ///         ResourceDisplayName = fleetProductResourceDisplayName,
        ///         ResourceId = testResource.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetFleetProductsResult> InvokeAsync(GetFleetProductsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFleetProductsResult>("oci:FleetAppsManagement/getFleetProducts:getFleetProducts", args ?? new GetFleetProductsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Fleet Products in Oracle Cloud Infrastructure Fleet Apps Management service.
        /// 
        /// Returns a list of FleetProducts.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testFleetProducts = Oci.FleetAppsManagement.GetFleetProducts.Invoke(new()
        ///     {
        ///         FleetId = testFleet.Id,
        ///         CompartmentId = compartmentId,
        ///         DisplayName = fleetProductDisplayName,
        ///         ResourceDisplayName = fleetProductResourceDisplayName,
        ///         ResourceId = testResource.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetFleetProductsResult> Invoke(GetFleetProductsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFleetProductsResult>("oci:FleetAppsManagement/getFleetProducts:getFleetProducts", args ?? new GetFleetProductsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFleetProductsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetFleetProductsFilterArgs>? _filters;
        public List<Inputs.GetFleetProductsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetFleetProductsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// unique Fleet identifier
        /// </summary>
        [Input("fleetId", required: true)]
        public string FleetId { get; set; } = null!;

        /// <summary>
        /// Resource Display Name
        /// </summary>
        [Input("resourceDisplayName")]
        public string? ResourceDisplayName { get; set; }

        /// <summary>
        /// Resource Identifier
        /// </summary>
        [Input("resourceId")]
        public string? ResourceId { get; set; }

        public GetFleetProductsArgs()
        {
        }
        public static new GetFleetProductsArgs Empty => new GetFleetProductsArgs();
    }

    public sealed class GetFleetProductsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetFleetProductsFilterInputArgs>? _filters;
        public InputList<Inputs.GetFleetProductsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetFleetProductsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// unique Fleet identifier
        /// </summary>
        [Input("fleetId", required: true)]
        public Input<string> FleetId { get; set; } = null!;

        /// <summary>
        /// Resource Display Name
        /// </summary>
        [Input("resourceDisplayName")]
        public Input<string>? ResourceDisplayName { get; set; }

        /// <summary>
        /// Resource Identifier
        /// </summary>
        [Input("resourceId")]
        public Input<string>? ResourceId { get; set; }

        public GetFleetProductsInvokeArgs()
        {
        }
        public static new GetFleetProductsInvokeArgs Empty => new GetFleetProductsInvokeArgs();
    }


    [OutputType]
    public sealed class GetFleetProductsResult
    {
        /// <summary>
        /// Root Compartment Id.
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetFleetProductsFilterResult> Filters;
        public readonly string FleetId;
        /// <summary>
        /// The list of fleet_product_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFleetProductsFleetProductCollectionResult> FleetProductCollections;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
        /// </summary>
        public readonly string? ResourceDisplayName;
        /// <summary>
        /// The OCID of the resource.
        /// </summary>
        public readonly string? ResourceId;

        [OutputConstructor]
        private GetFleetProductsResult(
            string? compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetFleetProductsFilterResult> filters,

            string fleetId,

            ImmutableArray<Outputs.GetFleetProductsFleetProductCollectionResult> fleetProductCollections,

            string id,

            string? resourceDisplayName,

            string? resourceId)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            FleetId = fleetId;
            FleetProductCollections = fleetProductCollections;
            Id = id;
            ResourceDisplayName = resourceDisplayName;
            ResourceId = resourceId;
        }
    }
}
