// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.FleetAppsManagement
{
    public static class GetFleetProperty
    {
        /// <summary>
        /// This data source provides details about a specific Fleet Property resource in Oracle Cloud Infrastructure Fleet Apps Management service.
        /// 
        /// Gets a FleetProperty by identifier
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testFleetProperty = Oci.FleetAppsManagement.GetFleetProperty.Invoke(new()
        ///     {
        ///         FleetId = testFleet.Id,
        ///         FleetPropertyId = testProperty.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetFleetPropertyResult> InvokeAsync(GetFleetPropertyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFleetPropertyResult>("oci:FleetAppsManagement/getFleetProperty:getFleetProperty", args ?? new GetFleetPropertyArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Fleet Property resource in Oracle Cloud Infrastructure Fleet Apps Management service.
        /// 
        /// Gets a FleetProperty by identifier
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testFleetProperty = Oci.FleetAppsManagement.GetFleetProperty.Invoke(new()
        ///     {
        ///         FleetId = testFleet.Id,
        ///         FleetPropertyId = testProperty.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetFleetPropertyResult> Invoke(GetFleetPropertyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFleetPropertyResult>("oci:FleetAppsManagement/getFleetProperty:getFleetProperty", args ?? new GetFleetPropertyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFleetPropertyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// unique Fleet identifier
        /// </summary>
        [Input("fleetId", required: true)]
        public string FleetId { get; set; } = null!;

        /// <summary>
        /// unique FleetProperty identifier
        /// </summary>
        [Input("fleetPropertyId", required: true)]
        public string FleetPropertyId { get; set; } = null!;

        public GetFleetPropertyArgs()
        {
        }
        public static new GetFleetPropertyArgs Empty => new GetFleetPropertyArgs();
    }

    public sealed class GetFleetPropertyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// unique Fleet identifier
        /// </summary>
        [Input("fleetId", required: true)]
        public Input<string> FleetId { get; set; } = null!;

        /// <summary>
        /// unique FleetProperty identifier
        /// </summary>
        [Input("fleetPropertyId", required: true)]
        public Input<string> FleetPropertyId { get; set; } = null!;

        public GetFleetPropertyInvokeArgs()
        {
        }
        public static new GetFleetPropertyInvokeArgs Empty => new GetFleetPropertyInvokeArgs();
    }


    [OutputType]
    public sealed class GetFleetPropertyResult
    {
        /// <summary>
        /// Values of the category (must be a single value if selection = 'single choice')
        /// </summary>
        public readonly ImmutableArray<string> AllowedValues;
        /// <summary>
        /// Tenancy OCID
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
        /// </summary>
        public readonly string DisplayName;
        public readonly string FleetId;
        public readonly string FleetPropertyId;
        /// <summary>
        /// The unique id of the resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Property Id Ocid.
        /// </summary>
        public readonly string PropertyId;
        /// <summary>
        /// Text selection of the category
        /// </summary>
        public readonly string SelectionType;
        /// <summary>
        /// The current state of the FleetProperty.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// The time this resource was created. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time this resource was last updated. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeUpdated;
        /// <summary>
        /// Value of the Property
        /// </summary>
        public readonly string Value;
        /// <summary>
        /// Format of the value
        /// </summary>
        public readonly string ValueType;

        [OutputConstructor]
        private GetFleetPropertyResult(
            ImmutableArray<string> allowedValues,

            string compartmentId,

            string displayName,

            string fleetId,

            string fleetPropertyId,

            string id,

            string propertyId,

            string selectionType,

            string state,

            ImmutableDictionary<string, string> systemTags,

            string timeCreated,

            string timeUpdated,

            string value,

            string valueType)
        {
            AllowedValues = allowedValues;
            CompartmentId = compartmentId;
            DisplayName = displayName;
            FleetId = fleetId;
            FleetPropertyId = fleetPropertyId;
            Id = id;
            PropertyId = propertyId;
            SelectionType = selectionType;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            Value = value;
            ValueType = valueType;
        }
    }
}
