// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.FleetAppsManagement
{
    public static class GetFleetTargets
    {
        /// <summary>
        /// This data source provides the list of Fleet Targets in Oracle Cloud Infrastructure Fleet Apps Management service.
        /// 
        /// Returns the list of all confirmed targets within a fleet.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testFleetTargets = Oci.FleetAppsManagement.GetFleetTargets.Invoke(new()
        ///     {
        ///         FleetId = testFleet.Id,
        ///         DisplayName = fleetTargetDisplayName,
        ///         Product = fleetTargetProduct,
        ///         ResourceDisplayName = fleetTargetResourceDisplayName,
        ///         ResourceId = testResource.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetFleetTargetsResult> InvokeAsync(GetFleetTargetsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFleetTargetsResult>("oci:FleetAppsManagement/getFleetTargets:getFleetTargets", args ?? new GetFleetTargetsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Fleet Targets in Oracle Cloud Infrastructure Fleet Apps Management service.
        /// 
        /// Returns the list of all confirmed targets within a fleet.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testFleetTargets = Oci.FleetAppsManagement.GetFleetTargets.Invoke(new()
        ///     {
        ///         FleetId = testFleet.Id,
        ///         DisplayName = fleetTargetDisplayName,
        ///         Product = fleetTargetProduct,
        ///         ResourceDisplayName = fleetTargetResourceDisplayName,
        ///         ResourceId = testResource.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetFleetTargetsResult> Invoke(GetFleetTargetsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFleetTargetsResult>("oci:FleetAppsManagement/getFleetTargets:getFleetTargets", args ?? new GetFleetTargetsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Fleet Targets in Oracle Cloud Infrastructure Fleet Apps Management service.
        /// 
        /// Returns the list of all confirmed targets within a fleet.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testFleetTargets = Oci.FleetAppsManagement.GetFleetTargets.Invoke(new()
        ///     {
        ///         FleetId = testFleet.Id,
        ///         DisplayName = fleetTargetDisplayName,
        ///         Product = fleetTargetProduct,
        ///         ResourceDisplayName = fleetTargetResourceDisplayName,
        ///         ResourceId = testResource.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetFleetTargetsResult> Invoke(GetFleetTargetsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetFleetTargetsResult>("oci:FleetAppsManagement/getFleetTargets:getFleetTargets", args ?? new GetFleetTargetsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFleetTargetsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetFleetTargetsFilterArgs>? _filters;
        public List<Inputs.GetFleetTargetsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetFleetTargetsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Unique Fleet identifier.
        /// </summary>
        [Input("fleetId", required: true)]
        public string FleetId { get; set; } = null!;

        /// <summary>
        /// Product Name.
        /// </summary>
        [Input("product")]
        public string? Product { get; set; }

        /// <summary>
        /// Resource Display Name.
        /// </summary>
        [Input("resourceDisplayName")]
        public string? ResourceDisplayName { get; set; }

        /// <summary>
        /// Resource Identifier
        /// </summary>
        [Input("resourceId")]
        public string? ResourceId { get; set; }

        public GetFleetTargetsArgs()
        {
        }
        public static new GetFleetTargetsArgs Empty => new GetFleetTargetsArgs();
    }

    public sealed class GetFleetTargetsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetFleetTargetsFilterInputArgs>? _filters;
        public InputList<Inputs.GetFleetTargetsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetFleetTargetsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Unique Fleet identifier.
        /// </summary>
        [Input("fleetId", required: true)]
        public Input<string> FleetId { get; set; } = null!;

        /// <summary>
        /// Product Name.
        /// </summary>
        [Input("product")]
        public Input<string>? Product { get; set; }

        /// <summary>
        /// Resource Display Name.
        /// </summary>
        [Input("resourceDisplayName")]
        public Input<string>? ResourceDisplayName { get; set; }

        /// <summary>
        /// Resource Identifier
        /// </summary>
        [Input("resourceId")]
        public Input<string>? ResourceId { get; set; }

        public GetFleetTargetsInvokeArgs()
        {
        }
        public static new GetFleetTargetsInvokeArgs Empty => new GetFleetTargetsInvokeArgs();
    }


    [OutputType]
    public sealed class GetFleetTargetsResult
    {
        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetFleetTargetsFilterResult> Filters;
        public readonly string FleetId;
        /// <summary>
        /// The list of fleet_target_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFleetTargetsFleetTargetCollectionResult> FleetTargetCollections;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Product to which the target belongs to.
        /// </summary>
        public readonly string? Product;
        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
        /// </summary>
        public readonly string? ResourceDisplayName;
        /// <summary>
        /// The OCID of the resource.
        /// </summary>
        public readonly string? ResourceId;

        [OutputConstructor]
        private GetFleetTargetsResult(
            string? displayName,

            ImmutableArray<Outputs.GetFleetTargetsFilterResult> filters,

            string fleetId,

            ImmutableArray<Outputs.GetFleetTargetsFleetTargetCollectionResult> fleetTargetCollections,

            string id,

            string? product,

            string? resourceDisplayName,

            string? resourceId)
        {
            DisplayName = displayName;
            Filters = filters;
            FleetId = fleetId;
            FleetTargetCollections = fleetTargetCollections;
            Id = id;
            Product = product;
            ResourceDisplayName = resourceDisplayName;
            ResourceId = resourceId;
        }
    }
}
