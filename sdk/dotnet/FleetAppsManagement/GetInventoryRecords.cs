// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.FleetAppsManagement
{
    public static class GetInventoryRecords
    {
        /// <summary>
        /// This data source provides the list of Inventory Records in Oracle Cloud Infrastructure Fleet Apps Management service.
        /// 
        /// Gets a list of inventoryDetails.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testInventoryRecords = Oci.FleetAppsManagement.GetInventoryRecords.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         CompartmentIdInSubtree = inventoryRecordCompartmentIdInSubtree,
        ///         FleetId = testFleet.Id,
        ///         ResourceId = testResource.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetInventoryRecordsResult> InvokeAsync(GetInventoryRecordsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetInventoryRecordsResult>("oci:FleetAppsManagement/getInventoryRecords:getInventoryRecords", args ?? new GetInventoryRecordsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Inventory Records in Oracle Cloud Infrastructure Fleet Apps Management service.
        /// 
        /// Gets a list of inventoryDetails.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testInventoryRecords = Oci.FleetAppsManagement.GetInventoryRecords.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         CompartmentIdInSubtree = inventoryRecordCompartmentIdInSubtree,
        ///         FleetId = testFleet.Id,
        ///         ResourceId = testResource.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetInventoryRecordsResult> Invoke(GetInventoryRecordsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetInventoryRecordsResult>("oci:FleetAppsManagement/getInventoryRecords:getInventoryRecords", args ?? new GetInventoryRecordsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Inventory Records in Oracle Cloud Infrastructure Fleet Apps Management service.
        /// 
        /// Gets a list of inventoryDetails.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testInventoryRecords = Oci.FleetAppsManagement.GetInventoryRecords.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         CompartmentIdInSubtree = inventoryRecordCompartmentIdInSubtree,
        ///         FleetId = testFleet.Id,
        ///         ResourceId = testResource.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetInventoryRecordsResult> Invoke(GetInventoryRecordsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetInventoryRecordsResult>("oci:FleetAppsManagement/getInventoryRecords:getInventoryRecords", args ?? new GetInventoryRecordsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInventoryRecordsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// If set to true, resources will be returned for not only the provided compartment, but all compartments which descend from it. Which resources are returned and their field contents depends on the value of accessLevel.
        /// </summary>
        [Input("compartmentIdInSubtree")]
        public bool? CompartmentIdInSubtree { get; set; }

        [Input("filters")]
        private List<Inputs.GetInventoryRecordsFilterArgs>? _filters;
        public List<Inputs.GetInventoryRecordsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetInventoryRecordsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// unique Fleet identifier
        /// </summary>
        [Input("fleetId")]
        public string? FleetId { get; set; }

        /// <summary>
        /// Resource Identifier
        /// </summary>
        [Input("resourceId")]
        public string? ResourceId { get; set; }

        public GetInventoryRecordsArgs()
        {
        }
        public static new GetInventoryRecordsArgs Empty => new GetInventoryRecordsArgs();
    }

    public sealed class GetInventoryRecordsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// If set to true, resources will be returned for not only the provided compartment, but all compartments which descend from it. Which resources are returned and their field contents depends on the value of accessLevel.
        /// </summary>
        [Input("compartmentIdInSubtree")]
        public Input<bool>? CompartmentIdInSubtree { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetInventoryRecordsFilterInputArgs>? _filters;
        public InputList<Inputs.GetInventoryRecordsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetInventoryRecordsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// unique Fleet identifier
        /// </summary>
        [Input("fleetId")]
        public Input<string>? FleetId { get; set; }

        /// <summary>
        /// Resource Identifier
        /// </summary>
        [Input("resourceId")]
        public Input<string>? ResourceId { get; set; }

        public GetInventoryRecordsInvokeArgs()
        {
        }
        public static new GetInventoryRecordsInvokeArgs Empty => new GetInventoryRecordsInvokeArgs();
    }


    [OutputType]
    public sealed class GetInventoryRecordsResult
    {
        /// <summary>
        /// OCID of the compartment to which the resource belongs to.
        /// </summary>
        public readonly string CompartmentId;
        public readonly bool? CompartmentIdInSubtree;
        public readonly ImmutableArray<Outputs.GetInventoryRecordsFilterResult> Filters;
        public readonly string? FleetId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of inventory_record_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInventoryRecordsInventoryRecordCollectionResult> InventoryRecordCollections;
        public readonly string? ResourceId;

        [OutputConstructor]
        private GetInventoryRecordsResult(
            string compartmentId,

            bool? compartmentIdInSubtree,

            ImmutableArray<Outputs.GetInventoryRecordsFilterResult> filters,

            string? fleetId,

            string id,

            ImmutableArray<Outputs.GetInventoryRecordsInventoryRecordCollectionResult> inventoryRecordCollections,

            string? resourceId)
        {
            CompartmentId = compartmentId;
            CompartmentIdInSubtree = compartmentIdInSubtree;
            Filters = filters;
            FleetId = fleetId;
            Id = id;
            InventoryRecordCollections = inventoryRecordCollections;
            ResourceId = resourceId;
        }
    }
}
