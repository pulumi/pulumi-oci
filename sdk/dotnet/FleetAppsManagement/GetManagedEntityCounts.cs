// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.FleetAppsManagement
{
    public static class GetManagedEntityCounts
    {
        /// <summary>
        /// This data source provides the list of Managed Entity Counts in Oracle Cloud Infrastructure Fleet Apps Management service.
        /// 
        /// Retrieve  aggregated summary information of Managed Entities within a Tenancy.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedEntityCounts = Oci.FleetAppsManagement.GetManagedEntityCounts.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetManagedEntityCountsResult> InvokeAsync(GetManagedEntityCountsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetManagedEntityCountsResult>("oci:FleetAppsManagement/getManagedEntityCounts:getManagedEntityCounts", args ?? new GetManagedEntityCountsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Managed Entity Counts in Oracle Cloud Infrastructure Fleet Apps Management service.
        /// 
        /// Retrieve  aggregated summary information of Managed Entities within a Tenancy.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedEntityCounts = Oci.FleetAppsManagement.GetManagedEntityCounts.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetManagedEntityCountsResult> Invoke(GetManagedEntityCountsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedEntityCountsResult>("oci:FleetAppsManagement/getManagedEntityCounts:getManagedEntityCounts", args ?? new GetManagedEntityCountsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Managed Entity Counts in Oracle Cloud Infrastructure Fleet Apps Management service.
        /// 
        /// Retrieve  aggregated summary information of Managed Entities within a Tenancy.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedEntityCounts = Oci.FleetAppsManagement.GetManagedEntityCounts.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetManagedEntityCountsResult> Invoke(GetManagedEntityCountsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedEntityCountsResult>("oci:FleetAppsManagement/getManagedEntityCounts:getManagedEntityCounts", args ?? new GetManagedEntityCountsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagedEntityCountsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        [Input("filters")]
        private List<Inputs.GetManagedEntityCountsFilterArgs>? _filters;
        public List<Inputs.GetManagedEntityCountsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetManagedEntityCountsFilterArgs>());
            set => _filters = value;
        }

        public GetManagedEntityCountsArgs()
        {
        }
        public static new GetManagedEntityCountsArgs Empty => new GetManagedEntityCountsArgs();
    }

    public sealed class GetManagedEntityCountsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetManagedEntityCountsFilterInputArgs>? _filters;
        public InputList<Inputs.GetManagedEntityCountsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetManagedEntityCountsFilterInputArgs>());
            set => _filters = value;
        }

        public GetManagedEntityCountsInvokeArgs()
        {
        }
        public static new GetManagedEntityCountsInvokeArgs Empty => new GetManagedEntityCountsInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagedEntityCountsResult
    {
        public readonly string? CompartmentId;
        public readonly ImmutableArray<Outputs.GetManagedEntityCountsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of managed_entity_aggregation_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetManagedEntityCountsManagedEntityAggregationCollectionResult> ManagedEntityAggregationCollections;

        [OutputConstructor]
        private GetManagedEntityCountsResult(
            string? compartmentId,

            ImmutableArray<Outputs.GetManagedEntityCountsFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetManagedEntityCountsManagedEntityAggregationCollectionResult> managedEntityAggregationCollections)
        {
            CompartmentId = compartmentId;
            Filters = filters;
            Id = id;
            ManagedEntityAggregationCollections = managedEntityAggregationCollections;
        }
    }
}
