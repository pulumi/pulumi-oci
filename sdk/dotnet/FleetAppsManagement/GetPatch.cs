// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.FleetAppsManagement
{
    public static class GetPatch
    {
        /// <summary>
        /// This data source provides details about a specific Patch resource in Oracle Cloud Infrastructure Fleet Apps Management service.
        /// 
        /// Gets a Patch by identifier
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testPatch = Oci.FleetAppsManagement.GetPatch.Invoke(new()
        ///     {
        ///         PatchId = testPatchOciFleetAppsManagementPatch.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetPatchResult> InvokeAsync(GetPatchArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPatchResult>("oci:FleetAppsManagement/getPatch:getPatch", args ?? new GetPatchArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Patch resource in Oracle Cloud Infrastructure Fleet Apps Management service.
        /// 
        /// Gets a Patch by identifier
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testPatch = Oci.FleetAppsManagement.GetPatch.Invoke(new()
        ///     {
        ///         PatchId = testPatchOciFleetAppsManagementPatch.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetPatchResult> Invoke(GetPatchInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPatchResult>("oci:FleetAppsManagement/getPatch:getPatch", args ?? new GetPatchInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPatchArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// unique Patch identifier
        /// </summary>
        [Input("patchId", required: true)]
        public string PatchId { get; set; } = null!;

        public GetPatchArgs()
        {
        }
        public static new GetPatchArgs Empty => new GetPatchArgs();
    }

    public sealed class GetPatchInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// unique Patch identifier
        /// </summary>
        [Input("patchId", required: true)]
        public Input<string> PatchId { get; set; } = null!;

        public GetPatchInvokeArgs()
        {
        }
        public static new GetPatchInvokeArgs Empty => new GetPatchInvokeArgs();
    }


    [OutputType]
    public sealed class GetPatchResult
    {
        /// <summary>
        /// Patch artifact description and content details.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPatchArtifactDetailResult> ArtifactDetails;
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// Dependent Patches for this patch.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPatchDependentPatchResult> DependentPatches;
        /// <summary>
        /// A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The OCID of the resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// A user-friendly name. Should be unique within the tenancy, and cannot be changed after creation.  Avoid entering confidential information.
        /// </summary>
        public readonly string Name;
        public readonly string PatchId;
        /// <summary>
        /// Patch Type
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPatchPatchTypeResult> PatchTypes;
        /// <summary>
        /// Product
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPatchProductResult> Products;
        /// <summary>
        /// Associated region
        /// </summary>
        public readonly string ResourceRegion;
        /// <summary>
        /// Patch Severity.
        /// </summary>
        public readonly string Severity;
        /// <summary>
        /// The current state of the Patch.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// The time this resource was created. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// Date when the patch was released.
        /// </summary>
        public readonly string TimeReleased;
        /// <summary>
        /// The time this resource was last updated. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeUpdated;
        /// <summary>
        /// Provide information on who defined the patch. Example: For Custom Patches the value will be USER_DEFINED For Oracle Defined Patches the value will be ORACLE_DEFINED
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetPatchResult(
            ImmutableArray<Outputs.GetPatchArtifactDetailResult> artifactDetails,

            string compartmentId,

            ImmutableDictionary<string, string> definedTags,

            ImmutableArray<Outputs.GetPatchDependentPatchResult> dependentPatches,

            string description,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            string lifecycleDetails,

            string name,

            string patchId,

            ImmutableArray<Outputs.GetPatchPatchTypeResult> patchTypes,

            ImmutableArray<Outputs.GetPatchProductResult> products,

            string resourceRegion,

            string severity,

            string state,

            ImmutableDictionary<string, string> systemTags,

            string timeCreated,

            string timeReleased,

            string timeUpdated,

            string type)
        {
            ArtifactDetails = artifactDetails;
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            DependentPatches = dependentPatches;
            Description = description;
            FreeformTags = freeformTags;
            Id = id;
            LifecycleDetails = lifecycleDetails;
            Name = name;
            PatchId = patchId;
            PatchTypes = patchTypes;
            Products = products;
            ResourceRegion = resourceRegion;
            Severity = severity;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeReleased = timeReleased;
            TimeUpdated = timeUpdated;
            Type = type;
        }
    }
}
