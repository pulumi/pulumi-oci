// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.FleetAppsManagement
{
    public static class GetProperty
    {
        /// <summary>
        /// This data source provides details about a specific Property resource in Oracle Cloud Infrastructure Fleet Apps Management service.
        /// 
        /// Gets a Property by identifier
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testProperty = Oci.FleetAppsManagement.GetProperty.Invoke(new()
        ///     {
        ///         PropertyId = testPropertyOciFleetAppsManagementProperty.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetPropertyResult> InvokeAsync(GetPropertyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPropertyResult>("oci:FleetAppsManagement/getProperty:getProperty", args ?? new GetPropertyArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Property resource in Oracle Cloud Infrastructure Fleet Apps Management service.
        /// 
        /// Gets a Property by identifier
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testProperty = Oci.FleetAppsManagement.GetProperty.Invoke(new()
        ///     {
        ///         PropertyId = testPropertyOciFleetAppsManagementProperty.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetPropertyResult> Invoke(GetPropertyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPropertyResult>("oci:FleetAppsManagement/getProperty:getProperty", args ?? new GetPropertyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPropertyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// unique Property identifier
        /// </summary>
        [Input("propertyId", required: true)]
        public string PropertyId { get; set; } = null!;

        public GetPropertyArgs()
        {
        }
        public static new GetPropertyArgs Empty => new GetPropertyArgs();
    }

    public sealed class GetPropertyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// unique Property identifier
        /// </summary>
        [Input("propertyId", required: true)]
        public Input<string> PropertyId { get; set; } = null!;

        public GetPropertyInvokeArgs()
        {
        }
        public static new GetPropertyInvokeArgs Empty => new GetPropertyInvokeArgs();
    }


    [OutputType]
    public sealed class GetPropertyResult
    {
        /// <summary>
        /// Tenancy OCID
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The OCID of the resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        public readonly string LifecycleDetails;
        public readonly string PropertyId;
        /// <summary>
        /// Associated region
        /// </summary>
        public readonly string ResourceRegion;
        /// <summary>
        /// The scope of the property.
        /// </summary>
        public readonly string Scope;
        /// <summary>
        /// Text selection of the property.
        /// </summary>
        public readonly string Selection;
        /// <summary>
        /// The current state of the Property.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// The time this resource was created. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time this resource was last updated. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeUpdated;
        /// <summary>
        /// The type of the property.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Format of the value.
        /// </summary>
        public readonly string ValueType;
        /// <summary>
        /// Values of the property (must be a single value if selection = 'SINGLE_CHOICE').
        /// </summary>
        public readonly ImmutableArray<string> Values;

        [OutputConstructor]
        private GetPropertyResult(
            string compartmentId,

            ImmutableDictionary<string, string> definedTags,

            string displayName,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            string lifecycleDetails,

            string propertyId,

            string resourceRegion,

            string scope,

            string selection,

            string state,

            ImmutableDictionary<string, string> systemTags,

            string timeCreated,

            string timeUpdated,

            string type,

            string valueType,

            ImmutableArray<string> values)
        {
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            LifecycleDetails = lifecycleDetails;
            PropertyId = propertyId;
            ResourceRegion = resourceRegion;
            Scope = scope;
            Selection = selection;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            Type = type;
            ValueType = valueType;
            Values = values;
        }
    }
}
