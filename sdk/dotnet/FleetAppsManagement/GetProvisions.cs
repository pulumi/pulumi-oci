// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.FleetAppsManagement
{
    public static class GetProvisions
    {
        /// <summary>
        /// This data source provides the list of Provisions in Oracle Cloud Infrastructure Fleet Apps Management service.
        /// 
        /// Returns a list of all the Provisions in the specified compartment.
        /// The query parameter `compartmentId` is required unless the query parameter `Id` or `fleetId` is specified.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testProvisions = Oci.FleetAppsManagement.GetProvisions.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = provisionDisplayName,
        ///         FleetId = testFleet.Id,
        ///         Id = provisionId,
        ///         State = provisionState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetProvisionsResult> InvokeAsync(GetProvisionsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetProvisionsResult>("oci:FleetAppsManagement/getProvisions:getProvisions", args ?? new GetProvisionsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Provisions in Oracle Cloud Infrastructure Fleet Apps Management service.
        /// 
        /// Returns a list of all the Provisions in the specified compartment.
        /// The query parameter `compartmentId` is required unless the query parameter `Id` or `fleetId` is specified.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testProvisions = Oci.FleetAppsManagement.GetProvisions.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = provisionDisplayName,
        ///         FleetId = testFleet.Id,
        ///         Id = provisionId,
        ///         State = provisionState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetProvisionsResult> Invoke(GetProvisionsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetProvisionsResult>("oci:FleetAppsManagement/getProvisions:getProvisions", args ?? new GetProvisionsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Provisions in Oracle Cloud Infrastructure Fleet Apps Management service.
        /// 
        /// Returns a list of all the Provisions in the specified compartment.
        /// The query parameter `compartmentId` is required unless the query parameter `Id` or `fleetId` is specified.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testProvisions = Oci.FleetAppsManagement.GetProvisions.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = provisionDisplayName,
        ///         FleetId = testFleet.Id,
        ///         Id = provisionId,
        ///         State = provisionState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetProvisionsResult> Invoke(GetProvisionsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetProvisionsResult>("oci:FleetAppsManagement/getProvisions:getProvisions", args ?? new GetProvisionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetProvisionsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// (Updatable) The ID of the compartment in which to list resources. Empty only if the resource OCID query param is not specified.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetProvisionsFilterArgs>? _filters;
        public List<Inputs.GetProvisionsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetProvisionsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// unique Fleet identifier
        /// </summary>
        [Input("fleetId")]
        public string? FleetId { get; set; }

        /// <summary>
        /// Unique identifier or OCID for listing a single provision by id. Either compartmentId or id must be provided.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetProvisionsArgs()
        {
        }
        public static new GetProvisionsArgs Empty => new GetProvisionsArgs();
    }

    public sealed class GetProvisionsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// (Updatable) The ID of the compartment in which to list resources. Empty only if the resource OCID query param is not specified.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetProvisionsFilterInputArgs>? _filters;
        public InputList<Inputs.GetProvisionsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetProvisionsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// unique Fleet identifier
        /// </summary>
        [Input("fleetId")]
        public Input<string>? FleetId { get; set; }

        /// <summary>
        /// Unique identifier or OCID for listing a single provision by id. Either compartmentId or id must be provided.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetProvisionsInvokeArgs()
        {
        }
        public static new GetProvisionsInvokeArgs Empty => new GetProvisionsInvokeArgs();
    }


    [OutputType]
    public sealed class GetProvisionsResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which instance is deployed.
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetProvisionsFilterResult> Filters;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
        /// </summary>
        public readonly string? FleetId;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the FamProvision.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The list of provision_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProvisionsProvisionCollectionResult> ProvisionCollections;
        /// <summary>
        /// The current state of the FamProvision.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetProvisionsResult(
            string? compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetProvisionsFilterResult> filters,

            string? fleetId,

            string? id,

            ImmutableArray<Outputs.GetProvisionsProvisionCollectionResult> provisionCollections,

            string? state)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            FleetId = fleetId;
            Id = id;
            ProvisionCollections = provisionCollections;
            State = state;
        }
    }
}
