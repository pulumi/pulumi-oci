// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.FleetAppsManagement
{
    public static class GetRunbookVersions
    {
        /// <summary>
        /// This data source provides the list of Runbook Versions in Oracle Cloud Infrastructure Fleet Apps Management service.
        /// 
        /// List versions for a runbook in Fleet Application Management.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testRunbookVersions = Oci.FleetAppsManagement.GetRunbookVersions.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         Id = runbookVersionId,
        ///         Name = runbookVersionName,
        ///         RunbookId = testRunbook.Id,
        ///         State = runbookVersionState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetRunbookVersionsResult> InvokeAsync(GetRunbookVersionsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRunbookVersionsResult>("oci:FleetAppsManagement/getRunbookVersions:getRunbookVersions", args ?? new GetRunbookVersionsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Runbook Versions in Oracle Cloud Infrastructure Fleet Apps Management service.
        /// 
        /// List versions for a runbook in Fleet Application Management.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testRunbookVersions = Oci.FleetAppsManagement.GetRunbookVersions.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         Id = runbookVersionId,
        ///         Name = runbookVersionName,
        ///         RunbookId = testRunbook.Id,
        ///         State = runbookVersionState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetRunbookVersionsResult> Invoke(GetRunbookVersionsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRunbookVersionsResult>("oci:FleetAppsManagement/getRunbookVersions:getRunbookVersions", args ?? new GetRunbookVersionsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Runbook Versions in Oracle Cloud Infrastructure Fleet Apps Management service.
        /// 
        /// List versions for a runbook in Fleet Application Management.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testRunbookVersions = Oci.FleetAppsManagement.GetRunbookVersions.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         Id = runbookVersionId,
        ///         Name = runbookVersionName,
        ///         RunbookId = testRunbook.Id,
        ///         State = runbookVersionState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetRunbookVersionsResult> Invoke(GetRunbookVersionsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRunbookVersionsResult>("oci:FleetAppsManagement/getRunbookVersions:getRunbookVersions", args ?? new GetRunbookVersionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRunbookVersionsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources. Empty only if the resource OCID query param is not specified.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        [Input("filters")]
        private List<Inputs.GetRunbookVersionsFilterArgs>? _filters;
        public List<Inputs.GetRunbookVersionsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetRunbookVersionsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return runbook versions whose identifier matches the given identifier.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// A filter to return only resources that match the entire name given.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// A filter to return only schedule definitions whose associated runbookId matches the given runbookId.
        /// </summary>
        [Input("runbookId")]
        public string? RunbookId { get; set; }

        /// <summary>
        /// A filter to return only resources whose lifecycleState matches the given lifecycleState.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetRunbookVersionsArgs()
        {
        }
        public static new GetRunbookVersionsArgs Empty => new GetRunbookVersionsArgs();
    }

    public sealed class GetRunbookVersionsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources. Empty only if the resource OCID query param is not specified.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetRunbookVersionsFilterInputArgs>? _filters;
        public InputList<Inputs.GetRunbookVersionsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetRunbookVersionsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return runbook versions whose identifier matches the given identifier.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// A filter to return only resources that match the entire name given.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A filter to return only schedule definitions whose associated runbookId matches the given runbookId.
        /// </summary>
        [Input("runbookId")]
        public Input<string>? RunbookId { get; set; }

        /// <summary>
        /// A filter to return only resources whose lifecycleState matches the given lifecycleState.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetRunbookVersionsInvokeArgs()
        {
        }
        public static new GetRunbookVersionsInvokeArgs Empty => new GetRunbookVersionsInvokeArgs();
    }


    [OutputType]
    public sealed class GetRunbookVersionsResult
    {
        public readonly string? CompartmentId;
        public readonly ImmutableArray<Outputs.GetRunbookVersionsFilterResult> Filters;
        /// <summary>
        /// The OCID of the resource.
        /// </summary>
        public readonly string? Id;
        public readonly bool IsLatest;
        /// <summary>
        /// The name of the task
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The OCID of the resource.
        /// </summary>
        public readonly string? RunbookId;
        /// <summary>
        /// The list of runbook_version_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRunbookVersionsRunbookVersionCollectionResult> RunbookVersionCollections;
        /// <summary>
        /// The current state of the FleetResource.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetRunbookVersionsResult(
            string? compartmentId,

            ImmutableArray<Outputs.GetRunbookVersionsFilterResult> filters,

            string? id,

            bool isLatest,

            string? name,

            string? runbookId,

            ImmutableArray<Outputs.GetRunbookVersionsRunbookVersionCollectionResult> runbookVersionCollections,

            string? state)
        {
            CompartmentId = compartmentId;
            Filters = filters;
            Id = id;
            IsLatest = isLatest;
            Name = name;
            RunbookId = runbookId;
            RunbookVersionCollections = runbookVersionCollections;
            State = state;
        }
    }
}
