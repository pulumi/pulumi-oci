// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.FleetAppsManagement
{
    public static class GetSchedulerDefinition
    {
        /// <summary>
        /// This data source provides details about a specific Scheduler Definition resource in Oracle Cloud Infrastructure Fleet Apps Management service.
        /// 
        /// Get the details of a SchedulerDefinition that performs lifecycle management operations.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSchedulerDefinition = Oci.FleetAppsManagement.GetSchedulerDefinition.Invoke(new()
        ///     {
        ///         SchedulerDefinitionId = testSchedulerDefinitionOciFleetAppsManagementSchedulerDefinition.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSchedulerDefinitionResult> InvokeAsync(GetSchedulerDefinitionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSchedulerDefinitionResult>("oci:FleetAppsManagement/getSchedulerDefinition:getSchedulerDefinition", args ?? new GetSchedulerDefinitionArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Scheduler Definition resource in Oracle Cloud Infrastructure Fleet Apps Management service.
        /// 
        /// Get the details of a SchedulerDefinition that performs lifecycle management operations.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSchedulerDefinition = Oci.FleetAppsManagement.GetSchedulerDefinition.Invoke(new()
        ///     {
        ///         SchedulerDefinitionId = testSchedulerDefinitionOciFleetAppsManagementSchedulerDefinition.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSchedulerDefinitionResult> Invoke(GetSchedulerDefinitionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSchedulerDefinitionResult>("oci:FleetAppsManagement/getSchedulerDefinition:getSchedulerDefinition", args ?? new GetSchedulerDefinitionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSchedulerDefinitionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// unique SchedulerDefinition identifier
        /// </summary>
        [Input("schedulerDefinitionId", required: true)]
        public string SchedulerDefinitionId { get; set; } = null!;

        public GetSchedulerDefinitionArgs()
        {
        }
        public static new GetSchedulerDefinitionArgs Empty => new GetSchedulerDefinitionArgs();
    }

    public sealed class GetSchedulerDefinitionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// unique SchedulerDefinition identifier
        /// </summary>
        [Input("schedulerDefinitionId", required: true)]
        public Input<string> SchedulerDefinitionId { get; set; } = null!;

        public GetSchedulerDefinitionInvokeArgs()
        {
        }
        public static new GetSchedulerDefinitionInvokeArgs Empty => new GetSchedulerDefinitionInvokeArgs();
    }


    [OutputType]
    public sealed class GetSchedulerDefinitionResult
    {
        /// <summary>
        /// All ActionGroup Types that are part of the schedule.
        /// </summary>
        public readonly ImmutableArray<string> ActionGroupTypes;
        /// <summary>
        /// Action Groups associated with the Schedule.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSchedulerDefinitionActionGroupResult> ActionGroups;
        /// <summary>
        /// Activity Initiation Cut Off.
        /// </summary>
        public readonly int ActivityInitiationCutOff;
        /// <summary>
        /// All application types that are part of the schedule for ENVIRONMENT ActionGroup Type.
        /// </summary>
        public readonly ImmutableArray<string> ApplicationTypes;
        /// <summary>
        /// Tenancy OCID
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Count of Action Groups affected by the Schedule.
        /// </summary>
        public readonly int CountOfAffectedActionGroups;
        /// <summary>
        /// Count of Resources affected by the Schedule.
        /// </summary>
        public readonly int CountOfAffectedResources;
        /// <summary>
        /// Count of Targets affected by the Schedule.
        /// </summary>
        public readonly int CountOfAffectedTargets;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The ID of the Runbook
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// All LifeCycle Operations that are part of the schedule.
        /// </summary>
        public readonly ImmutableArray<string> LifecycleOperations;
        /// <summary>
        /// All products that are part of the schedule for PRODUCT ActionGroup Type.
        /// </summary>
        public readonly ImmutableArray<string> Products;
        /// <summary>
        /// Associated region
        /// </summary>
        public readonly string ResourceRegion;
        /// <summary>
        /// Runbooks.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSchedulerDefinitionRunBookResult> RunBooks;
        public readonly string SchedulerDefinitionId;
        /// <summary>
        /// Schedule Information.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSchedulerDefinitionScheduleResult> Schedules;
        /// <summary>
        /// The current state of the SchedulerDefinition.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// The time this resource was created. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The scheduled date for the next run of the Job.
        /// </summary>
        public readonly string TimeOfNextRun;
        /// <summary>
        /// The time this resource was last updated. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetSchedulerDefinitionResult(
            ImmutableArray<string> actionGroupTypes,

            ImmutableArray<Outputs.GetSchedulerDefinitionActionGroupResult> actionGroups,

            int activityInitiationCutOff,

            ImmutableArray<string> applicationTypes,

            string compartmentId,

            int countOfAffectedActionGroups,

            int countOfAffectedResources,

            int countOfAffectedTargets,

            ImmutableDictionary<string, string> definedTags,

            string description,

            string displayName,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            string lifecycleDetails,

            ImmutableArray<string> lifecycleOperations,

            ImmutableArray<string> products,

            string resourceRegion,

            ImmutableArray<Outputs.GetSchedulerDefinitionRunBookResult> runBooks,

            string schedulerDefinitionId,

            ImmutableArray<Outputs.GetSchedulerDefinitionScheduleResult> schedules,

            string state,

            ImmutableDictionary<string, string> systemTags,

            string timeCreated,

            string timeOfNextRun,

            string timeUpdated)
        {
            ActionGroupTypes = actionGroupTypes;
            ActionGroups = actionGroups;
            ActivityInitiationCutOff = activityInitiationCutOff;
            ApplicationTypes = applicationTypes;
            CompartmentId = compartmentId;
            CountOfAffectedActionGroups = countOfAffectedActionGroups;
            CountOfAffectedResources = countOfAffectedResources;
            CountOfAffectedTargets = countOfAffectedTargets;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            LifecycleDetails = lifecycleDetails;
            LifecycleOperations = lifecycleOperations;
            Products = products;
            ResourceRegion = resourceRegion;
            RunBooks = runBooks;
            SchedulerDefinitionId = schedulerDefinitionId;
            Schedules = schedules;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeOfNextRun = timeOfNextRun;
            TimeUpdated = timeUpdated;
        }
    }
}
