// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.FleetAppsManagement
{
    public static class GetSchedulerExecutions
    {
        /// <summary>
        /// This data source provides the list of Scheduler Executions in Oracle Cloud Infrastructure Fleet Apps Management service.
        /// 
        /// Returns a list of all Fleets that are scheduled.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSchedulerExecutions = Oci.FleetAppsManagement.GetSchedulerExecutions.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = schedulerExecutionDisplayName,
        ///         ResourceId = testResource.Id,
        ///         RunbookId = testRunbook.Id,
        ///         RunbookVersionName = testRunbookVersion.Name,
        ///         SchedulerDefintionId = testSchedulerDefintion.Id,
        ///         SchedulerJobId = testJob.Id,
        ///         Substate = schedulerExecutionSubstate,
        ///         TimeScheduledGreaterThanOrEqualTo = schedulerExecutionTimeScheduledGreaterThanOrEqualTo,
        ///         TimeScheduledLessThan = schedulerExecutionTimeScheduledLessThan,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSchedulerExecutionsResult> InvokeAsync(GetSchedulerExecutionsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSchedulerExecutionsResult>("oci:FleetAppsManagement/getSchedulerExecutions:getSchedulerExecutions", args ?? new GetSchedulerExecutionsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Scheduler Executions in Oracle Cloud Infrastructure Fleet Apps Management service.
        /// 
        /// Returns a list of all Fleets that are scheduled.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSchedulerExecutions = Oci.FleetAppsManagement.GetSchedulerExecutions.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = schedulerExecutionDisplayName,
        ///         ResourceId = testResource.Id,
        ///         RunbookId = testRunbook.Id,
        ///         RunbookVersionName = testRunbookVersion.Name,
        ///         SchedulerDefintionId = testSchedulerDefintion.Id,
        ///         SchedulerJobId = testJob.Id,
        ///         Substate = schedulerExecutionSubstate,
        ///         TimeScheduledGreaterThanOrEqualTo = schedulerExecutionTimeScheduledGreaterThanOrEqualTo,
        ///         TimeScheduledLessThan = schedulerExecutionTimeScheduledLessThan,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSchedulerExecutionsResult> Invoke(GetSchedulerExecutionsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSchedulerExecutionsResult>("oci:FleetAppsManagement/getSchedulerExecutions:getSchedulerExecutions", args ?? new GetSchedulerExecutionsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Scheduler Executions in Oracle Cloud Infrastructure Fleet Apps Management service.
        /// 
        /// Returns a list of all Fleets that are scheduled.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSchedulerExecutions = Oci.FleetAppsManagement.GetSchedulerExecutions.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = schedulerExecutionDisplayName,
        ///         ResourceId = testResource.Id,
        ///         RunbookId = testRunbook.Id,
        ///         RunbookVersionName = testRunbookVersion.Name,
        ///         SchedulerDefintionId = testSchedulerDefintion.Id,
        ///         SchedulerJobId = testJob.Id,
        ///         Substate = schedulerExecutionSubstate,
        ///         TimeScheduledGreaterThanOrEqualTo = schedulerExecutionTimeScheduledGreaterThanOrEqualTo,
        ///         TimeScheduledLessThan = schedulerExecutionTimeScheduledLessThan,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSchedulerExecutionsResult> Invoke(GetSchedulerExecutionsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSchedulerExecutionsResult>("oci:FleetAppsManagement/getSchedulerExecutions:getSchedulerExecutions", args ?? new GetSchedulerExecutionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSchedulerExecutionsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources. Empty only if the resource OCID query param is not specified.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetSchedulerExecutionsFilterArgs>? _filters;
        public List<Inputs.GetSchedulerExecutionsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetSchedulerExecutionsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// ResourceId filter (Example FleetId)
        /// </summary>
        [Input("resourceId")]
        public string? ResourceId { get; set; }

        /// <summary>
        /// A filter to return only schedule definitions whose associated runbookId matches the given runbookId.
        /// </summary>
        [Input("runbookId")]
        public string? RunbookId { get; set; }

        /// <summary>
        /// RunbookVersion Name filter
        /// </summary>
        [Input("runbookVersionName")]
        public string? RunbookVersionName { get; set; }

        /// <summary>
        /// SchedulerDefinition identifier
        /// </summary>
        [Input("schedulerDefintionId")]
        public string? SchedulerDefintionId { get; set; }

        /// <summary>
        /// SchedulerJob identifier filter
        /// </summary>
        [Input("schedulerJobId")]
        public string? SchedulerJobId { get; set; }

        /// <summary>
        /// A filter to return only resources their subState matches the given subState.
        /// </summary>
        [Input("substate")]
        public string? Substate { get; set; }

        /// <summary>
        /// Scheduled Time
        /// </summary>
        [Input("timeScheduledGreaterThanOrEqualTo")]
        public string? TimeScheduledGreaterThanOrEqualTo { get; set; }

        /// <summary>
        /// Scheduled Time
        /// </summary>
        [Input("timeScheduledLessThan")]
        public string? TimeScheduledLessThan { get; set; }

        public GetSchedulerExecutionsArgs()
        {
        }
        public static new GetSchedulerExecutionsArgs Empty => new GetSchedulerExecutionsArgs();
    }

    public sealed class GetSchedulerExecutionsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources. Empty only if the resource OCID query param is not specified.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetSchedulerExecutionsFilterInputArgs>? _filters;
        public InputList<Inputs.GetSchedulerExecutionsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetSchedulerExecutionsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// ResourceId filter (Example FleetId)
        /// </summary>
        [Input("resourceId")]
        public Input<string>? ResourceId { get; set; }

        /// <summary>
        /// A filter to return only schedule definitions whose associated runbookId matches the given runbookId.
        /// </summary>
        [Input("runbookId")]
        public Input<string>? RunbookId { get; set; }

        /// <summary>
        /// RunbookVersion Name filter
        /// </summary>
        [Input("runbookVersionName")]
        public Input<string>? RunbookVersionName { get; set; }

        /// <summary>
        /// SchedulerDefinition identifier
        /// </summary>
        [Input("schedulerDefintionId")]
        public Input<string>? SchedulerDefintionId { get; set; }

        /// <summary>
        /// SchedulerJob identifier filter
        /// </summary>
        [Input("schedulerJobId")]
        public Input<string>? SchedulerJobId { get; set; }

        /// <summary>
        /// A filter to return only resources their subState matches the given subState.
        /// </summary>
        [Input("substate")]
        public Input<string>? Substate { get; set; }

        /// <summary>
        /// Scheduled Time
        /// </summary>
        [Input("timeScheduledGreaterThanOrEqualTo")]
        public Input<string>? TimeScheduledGreaterThanOrEqualTo { get; set; }

        /// <summary>
        /// Scheduled Time
        /// </summary>
        [Input("timeScheduledLessThan")]
        public Input<string>? TimeScheduledLessThan { get; set; }

        public GetSchedulerExecutionsInvokeArgs()
        {
        }
        public static new GetSchedulerExecutionsInvokeArgs Empty => new GetSchedulerExecutionsInvokeArgs();
    }


    [OutputType]
    public sealed class GetSchedulerExecutionsResult
    {
        /// <summary>
        /// Compartment OCID
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetSchedulerExecutionsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// ResourceId associated with the Schedule.
        /// </summary>
        public readonly string? ResourceId;
        /// <summary>
        /// RunbookId associated with the Schedule.
        /// </summary>
        public readonly string? RunbookId;
        /// <summary>
        /// Name of the Runbook version associated with the Schedule.
        /// </summary>
        public readonly string? RunbookVersionName;
        public readonly string? SchedulerDefintionId;
        /// <summary>
        /// The list of scheduler_execution_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSchedulerExecutionsSchedulerExecutionCollectionResult> SchedulerExecutionCollections;
        /// <summary>
        /// jobId associated with the Schedule.
        /// </summary>
        public readonly string? SchedulerJobId;
        public readonly string? Substate;
        public readonly string? TimeScheduledGreaterThanOrEqualTo;
        public readonly string? TimeScheduledLessThan;

        [OutputConstructor]
        private GetSchedulerExecutionsResult(
            string? compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetSchedulerExecutionsFilterResult> filters,

            string id,

            string? resourceId,

            string? runbookId,

            string? runbookVersionName,

            string? schedulerDefintionId,

            ImmutableArray<Outputs.GetSchedulerExecutionsSchedulerExecutionCollectionResult> schedulerExecutionCollections,

            string? schedulerJobId,

            string? substate,

            string? timeScheduledGreaterThanOrEqualTo,

            string? timeScheduledLessThan)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            ResourceId = resourceId;
            RunbookId = runbookId;
            RunbookVersionName = runbookVersionName;
            SchedulerDefintionId = schedulerDefintionId;
            SchedulerExecutionCollections = schedulerExecutionCollections;
            SchedulerJobId = schedulerJobId;
            Substate = substate;
            TimeScheduledGreaterThanOrEqualTo = timeScheduledGreaterThanOrEqualTo;
            TimeScheduledLessThan = timeScheduledLessThan;
        }
    }
}
