// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.FleetAppsManagement
{
    public static class GetTaskRecord
    {
        /// <summary>
        /// This data source provides details about a specific Task Record resource in Oracle Cloud Infrastructure Fleet Apps Management service.
        /// 
        /// Gets a TaskRecord by identifier
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testTaskRecord = Oci.FleetAppsManagement.GetTaskRecord.Invoke(new()
        ///     {
        ///         TaskRecordId = testTaskRecordOciFleetAppsManagementTaskRecord.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetTaskRecordResult> InvokeAsync(GetTaskRecordArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTaskRecordResult>("oci:FleetAppsManagement/getTaskRecord:getTaskRecord", args ?? new GetTaskRecordArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Task Record resource in Oracle Cloud Infrastructure Fleet Apps Management service.
        /// 
        /// Gets a TaskRecord by identifier
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testTaskRecord = Oci.FleetAppsManagement.GetTaskRecord.Invoke(new()
        ///     {
        ///         TaskRecordId = testTaskRecordOciFleetAppsManagementTaskRecord.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetTaskRecordResult> Invoke(GetTaskRecordInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTaskRecordResult>("oci:FleetAppsManagement/getTaskRecord:getTaskRecord", args ?? new GetTaskRecordInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTaskRecordArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// unique TaskDetail identifier
        /// </summary>
        [Input("taskRecordId", required: true)]
        public string TaskRecordId { get; set; } = null!;

        public GetTaskRecordArgs()
        {
        }
        public static new GetTaskRecordArgs Empty => new GetTaskRecordArgs();
    }

    public sealed class GetTaskRecordInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// unique TaskDetail identifier
        /// </summary>
        [Input("taskRecordId", required: true)]
        public Input<string> TaskRecordId { get; set; } = null!;

        public GetTaskRecordInvokeArgs()
        {
        }
        public static new GetTaskRecordInvokeArgs Empty => new GetTaskRecordInvokeArgs();
    }


    [OutputType]
    public sealed class GetTaskRecordResult
    {
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// The description of the argument.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The details of the task.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTaskRecordDetailResult> Details;
        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// Associated region
        /// </summary>
        public readonly string ResourceRegion;
        /// <summary>
        /// The current state of the TaskRecord.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        public readonly string TaskRecordId;
        /// <summary>
        /// The time this resource was created. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time this resource was last updated. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeUpdated;
        /// <summary>
        /// Task type.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The version of the task
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private GetTaskRecordResult(
            string compartmentId,

            ImmutableDictionary<string, string> definedTags,

            string description,

            ImmutableArray<Outputs.GetTaskRecordDetailResult> details,

            string displayName,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            string lifecycleDetails,

            string resourceRegion,

            string state,

            ImmutableDictionary<string, string> systemTags,

            string taskRecordId,

            string timeCreated,

            string timeUpdated,

            string type,

            string version)
        {
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            Description = description;
            Details = details;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            LifecycleDetails = lifecycleDetails;
            ResourceRegion = resourceRegion;
            State = state;
            SystemTags = systemTags;
            TaskRecordId = taskRecordId;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            Type = type;
            Version = version;
        }
    }
}
