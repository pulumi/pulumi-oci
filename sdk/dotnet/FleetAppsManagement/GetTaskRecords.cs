// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.FleetAppsManagement
{
    public static class GetTaskRecords
    {
        /// <summary>
        /// This data source provides the list of Task Records in Oracle Cloud Infrastructure Fleet Apps Management service.
        /// 
        /// Returns a list of TaskRecords.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testTaskRecords = Oci.FleetAppsManagement.GetTaskRecords.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = taskRecordDisplayName,
        ///         Id = taskRecordId,
        ///         Platform = taskRecordPlatform,
        ///         State = taskRecordState,
        ///         Type = taskRecordType,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetTaskRecordsResult> InvokeAsync(GetTaskRecordsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTaskRecordsResult>("oci:FleetAppsManagement/getTaskRecords:getTaskRecords", args ?? new GetTaskRecordsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Task Records in Oracle Cloud Infrastructure Fleet Apps Management service.
        /// 
        /// Returns a list of TaskRecords.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testTaskRecords = Oci.FleetAppsManagement.GetTaskRecords.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = taskRecordDisplayName,
        ///         Id = taskRecordId,
        ///         Platform = taskRecordPlatform,
        ///         State = taskRecordState,
        ///         Type = taskRecordType,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetTaskRecordsResult> Invoke(GetTaskRecordsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTaskRecordsResult>("oci:FleetAppsManagement/getTaskRecords:getTaskRecords", args ?? new GetTaskRecordsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTaskRecordsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetTaskRecordsFilterArgs>? _filters;
        public List<Inputs.GetTaskRecordsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetTaskRecordsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// unique TaskDetail identifier
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// The platform for the Task.
        /// </summary>
        [Input("platform")]
        public string? Platform { get; set; }

        /// <summary>
        /// The current state of the Task.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        /// <summary>
        /// The type of the Task.
        /// </summary>
        [Input("type")]
        public string? Type { get; set; }

        public GetTaskRecordsArgs()
        {
        }
        public static new GetTaskRecordsArgs Empty => new GetTaskRecordsArgs();
    }

    public sealed class GetTaskRecordsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetTaskRecordsFilterInputArgs>? _filters;
        public InputList<Inputs.GetTaskRecordsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetTaskRecordsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// unique TaskDetail identifier
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The platform for the Task.
        /// </summary>
        [Input("platform")]
        public Input<string>? Platform { get; set; }

        /// <summary>
        /// The current state of the Task.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The type of the Task.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public GetTaskRecordsInvokeArgs()
        {
        }
        public static new GetTaskRecordsInvokeArgs Empty => new GetTaskRecordsInvokeArgs();
    }


    [OutputType]
    public sealed class GetTaskRecordsResult
    {
        public readonly string? CompartmentId;
        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetTaskRecordsFilterResult> Filters;
        /// <summary>
        /// The OCID of the resource.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The platform of the runbook.
        /// </summary>
        public readonly string? Platform;
        /// <summary>
        /// The current state of the TaskRecord.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// The list of task_record_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTaskRecordsTaskRecordCollectionResult> TaskRecordCollections;
        /// <summary>
        /// Task type.
        /// </summary>
        public readonly string? Type;

        [OutputConstructor]
        private GetTaskRecordsResult(
            string? compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetTaskRecordsFilterResult> filters,

            string? id,

            string? platform,

            string? state,

            ImmutableArray<Outputs.GetTaskRecordsTaskRecordCollectionResult> taskRecordCollections,

            string? type)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            Platform = platform;
            State = state;
            TaskRecordCollections = taskRecordCollections;
            Type = type;
        }
    }
}
