// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.FleetAppsManagement.Outputs
{

    [OutputType]
    public sealed class FleetCredentialUser
    {
        /// <summary>
        /// (Updatable) Credential Type.
        /// </summary>
        public readonly string CredentialType;
        /// <summary>
        /// (Updatable) OCID for the Vault Key that will be used to encrypt/decrypt the value given.
        /// </summary>
        public readonly string? KeyId;
        /// <summary>
        /// (Updatable) The Vault Key version.
        /// </summary>
        public readonly string? KeyVersion;
        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the secret.
        /// </summary>
        public readonly string? SecretId;
        /// <summary>
        /// (Updatable) The secret version.
        /// </summary>
        public readonly string? SecretVersion;
        /// <summary>
        /// (Updatable) The value corresponding to the credential.
        /// </summary>
        public readonly string? Value;
        /// <summary>
        /// (Updatable) OCID for the Vault that will be used to fetch the key to encrypt/decrypt the value given.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        public readonly string? VaultId;

        [OutputConstructor]
        private FleetCredentialUser(
            string credentialType,

            string? keyId,

            string? keyVersion,

            string? secretId,

            string? secretVersion,

            string? value,

            string? vaultId)
        {
            CredentialType = credentialType;
            KeyId = keyId;
            KeyVersion = keyVersion;
            SecretId = secretId;
            SecretVersion = secretVersion;
            Value = value;
            VaultId = vaultId;
        }
    }
}
