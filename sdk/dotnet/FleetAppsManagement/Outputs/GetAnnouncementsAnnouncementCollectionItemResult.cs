// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.FleetAppsManagement.Outputs
{

    [OutputType]
    public sealed class GetAnnouncementsAnnouncementCollectionItemResult
    {
        /// <summary>
        /// Date to end displaying annonucement to user
        /// </summary>
        public readonly string AnnouncementEnd;
        /// <summary>
        /// Date to start displaying announcement to user
        /// </summary>
        public readonly string AnnouncementStart;
        /// <summary>
        /// Tenancy OCID
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Details of the announcement
        /// </summary>
        public readonly string Details;
        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The OCID of the resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Associated region
        /// </summary>
        public readonly string ResourceRegion;
        /// <summary>
        /// The lifecycle state of the announcement.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Summary of the announcement
        /// </summary>
        public readonly string Summary;
        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// The time this resource was created. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time this resource was last updated. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeUpdated;
        /// <summary>
        /// Type of announcement
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// URL to the announcement
        /// </summary>
        public readonly string Url;

        [OutputConstructor]
        private GetAnnouncementsAnnouncementCollectionItemResult(
            string announcementEnd,

            string announcementStart,

            string compartmentId,

            ImmutableDictionary<string, string> definedTags,

            string description,

            string details,

            string displayName,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            string resourceRegion,

            string state,

            string summary,

            ImmutableDictionary<string, string> systemTags,

            string timeCreated,

            string timeUpdated,

            string type,

            string url)
        {
            AnnouncementEnd = announcementEnd;
            AnnouncementStart = announcementStart;
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            Description = description;
            Details = details;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            ResourceRegion = resourceRegion;
            State = state;
            Summary = summary;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            Type = type;
            Url = url;
        }
    }
}
