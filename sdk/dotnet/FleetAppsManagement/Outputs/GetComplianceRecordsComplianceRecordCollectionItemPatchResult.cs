// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.FleetAppsManagement.Outputs
{

    [OutputType]
    public sealed class GetComplianceRecordsComplianceRecordCollectionItemPatchResult
    {
        /// <summary>
        /// Patch Description.
        /// </summary>
        public readonly string PatchDescription;
        /// <summary>
        /// patch OCID.
        /// </summary>
        public readonly string PatchId;
        /// <summary>
        /// Patch Name.
        /// </summary>
        public readonly string PatchName;
        /// <summary>
        /// Type of patch.
        /// </summary>
        public readonly string PatchType;
        /// <summary>
        /// Details of the Product
        /// </summary>
        public readonly ImmutableArray<Outputs.GetComplianceRecordsComplianceRecordCollectionItemPatchProductResult> Products;
        /// <summary>
        /// Patch Severity.
        /// </summary>
        public readonly string Severity;
        /// <summary>
        /// Date on which patch was released
        /// </summary>
        public readonly string TimeReleased;

        [OutputConstructor]
        private GetComplianceRecordsComplianceRecordCollectionItemPatchResult(
            string patchDescription,

            string patchId,

            string patchName,

            string patchType,

            ImmutableArray<Outputs.GetComplianceRecordsComplianceRecordCollectionItemPatchProductResult> products,

            string severity,

            string timeReleased)
        {
            PatchDescription = patchDescription;
            PatchId = patchId;
            PatchName = patchName;
            PatchType = patchType;
            Products = products;
            Severity = severity;
            TimeReleased = timeReleased;
        }
    }
}
