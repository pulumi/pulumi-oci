// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.FleetAppsManagement.Outputs
{

    [OutputType]
    public sealed class GetMaintenanceWindowsMaintenanceWindowCollectionItemResult
    {
        /// <summary>
        /// The ID of the compartment in which to list resources. Empty only if the resource OCID query param is not specified.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Duration of the maintenance window. Specify how long the maintenance window remains open.
        /// </summary>
        public readonly string Duration;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// Unique identifier or OCID for listing a single maintenance window by id. Either compartmentId or id must be provided.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Does the maintenenace window cause outage? An outage indicates whether a maintenance window can consider operations that require downtime. It means a period when the application is not accessible.
        /// </summary>
        public readonly bool IsOutage;
        /// <summary>
        /// Is this a recurring maintenance window?
        /// </summary>
        public readonly bool IsRecurring;
        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// Recurrence rule specification if maintenance window recurring. Specify the frequency of running the maintenance window.
        /// </summary>
        public readonly string Recurrences;
        /// <summary>
        /// Associated region
        /// </summary>
        public readonly string ResourceRegion;
        /// <summary>
        /// A filter to return only resources whose lifecycleState matches the given lifecycleState.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// The time this resource was created. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// Specify the date and time of the day that the maintenance window starts.
        /// </summary>
        public readonly string TimeScheduleStart;
        /// <summary>
        /// The time this resource was last updated. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetMaintenanceWindowsMaintenanceWindowCollectionItemResult(
            string compartmentId,

            ImmutableDictionary<string, string> definedTags,

            string description,

            string displayName,

            string duration,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            bool isOutage,

            bool isRecurring,

            string lifecycleDetails,

            string recurrences,

            string resourceRegion,

            string state,

            ImmutableDictionary<string, string> systemTags,

            string timeCreated,

            string timeScheduleStart,

            string timeUpdated)
        {
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            Duration = duration;
            FreeformTags = freeformTags;
            Id = id;
            IsOutage = isOutage;
            IsRecurring = isRecurring;
            LifecycleDetails = lifecycleDetails;
            Recurrences = recurrences;
            ResourceRegion = resourceRegion;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeScheduleStart = timeScheduleStart;
            TimeUpdated = timeUpdated;
        }
    }
}
