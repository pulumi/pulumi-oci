// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.FleetAppsManagement.Outputs
{

    [OutputType]
    public sealed class GetSchedulerDefinitionsSchedulerDefinitionCollectionItemActionGroupResult
    {
        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// unique Fleet identifier
        /// </summary>
        public readonly string FleetId;
        /// <summary>
        /// Task argument kind
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// A filter to return only schedule definitions whose associated runbookId matches the given runbookId.
        /// </summary>
        public readonly string RunbookId;
        /// <summary>
        /// RunbookVersion Name filter
        /// </summary>
        public readonly string RunbookVersionName;
        /// <summary>
        /// Sequence of the Action Group. Action groups will be executed in a seuential order. All Action Groups having the same sequence will be executed parallely. If no value is provided a default value of 1 will be given.
        /// </summary>
        public readonly int Sequence;

        [OutputConstructor]
        private GetSchedulerDefinitionsSchedulerDefinitionCollectionItemActionGroupResult(
            string displayName,

            string fleetId,

            string kind,

            string runbookId,

            string runbookVersionName,

            int sequence)
        {
            DisplayName = displayName;
            FleetId = fleetId;
            Kind = kind;
            RunbookId = runbookId;
            RunbookVersionName = runbookVersionName;
            Sequence = sequence;
        }
    }
}
