// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.FleetAppsManagement.Outputs
{

    [OutputType]
    public sealed class GetSchedulerExecutionsSchedulerExecutionCollectionItemResult
    {
        /// <summary>
        /// Action Group associated with the Schedule.
        /// </summary>
        public readonly string ActivityId;
        /// <summary>
        /// The ID of the compartment in which to list resources. Empty only if the resource OCID query param is not specified.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The OCID of the resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Latest Runbook version available.
        /// </summary>
        public readonly string LatestRunbookVersionName;
        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// Resource DsiplayName associated with the Schedule.
        /// </summary>
        public readonly string ResourceDisplayName;
        /// <summary>
        /// ResourceId filter (Example FleetId)
        /// </summary>
        public readonly string ResourceId;
        /// <summary>
        /// DsiplayName of Runbook associated with the Schedule.
        /// </summary>
        public readonly string RunbookDisplayName;
        /// <summary>
        /// A filter to return only schedule definitions whose associated runbookId matches the given runbookId.
        /// </summary>
        public readonly string RunbookId;
        /// <summary>
        /// RunbookVersion Name filter
        /// </summary>
        public readonly string RunbookVersionName;
        /// <summary>
        /// SchedulerDefinition  associated with the job.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSchedulerExecutionsSchedulerExecutionCollectionItemSchedulerDefinitionResult> SchedulerDefinitions;
        /// <summary>
        /// SchedulerJob identifier filter
        /// </summary>
        public readonly string SchedulerJobId;
        /// <summary>
        /// The current state of the Scheduler Execution.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// The time this resource was created. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// Actual end date and time for the Execution.
        /// </summary>
        public readonly string TimeEnded;
        /// <summary>
        /// The scheduled date and time for the Job.
        /// </summary>
        public readonly string TimeScheduled;
        /// <summary>
        /// Actual start date and time for the Execution.
        /// </summary>
        public readonly string TimeStarted;
        /// <summary>
        /// The time this resource was last updated. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetSchedulerExecutionsSchedulerExecutionCollectionItemResult(
            string activityId,

            string compartmentId,

            ImmutableDictionary<string, string> definedTags,

            string displayName,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            string latestRunbookVersionName,

            string lifecycleDetails,

            string resourceDisplayName,

            string resourceId,

            string runbookDisplayName,

            string runbookId,

            string runbookVersionName,

            ImmutableArray<Outputs.GetSchedulerExecutionsSchedulerExecutionCollectionItemSchedulerDefinitionResult> schedulerDefinitions,

            string schedulerJobId,

            string state,

            ImmutableDictionary<string, string> systemTags,

            string timeCreated,

            string timeEnded,

            string timeScheduled,

            string timeStarted,

            string timeUpdated)
        {
            ActivityId = activityId;
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            LatestRunbookVersionName = latestRunbookVersionName;
            LifecycleDetails = lifecycleDetails;
            ResourceDisplayName = resourceDisplayName;
            ResourceId = resourceId;
            RunbookDisplayName = runbookDisplayName;
            RunbookId = runbookId;
            RunbookVersionName = runbookVersionName;
            SchedulerDefinitions = schedulerDefinitions;
            SchedulerJobId = schedulerJobId;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeEnded = timeEnded;
            TimeScheduled = timeScheduled;
            TimeStarted = timeStarted;
            TimeUpdated = timeUpdated;
        }
    }
}
