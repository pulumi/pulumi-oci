// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.FleetAppsManagement.Outputs
{

    [OutputType]
    public sealed class GetSchedulerJobJobActivityResourcesResourceCollectionItemResult
    {
        /// <summary>
        /// Description of the Execution status. If there are any errors, this can also include a short error message.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Resource Display Name.
        /// </summary>
        public readonly string ResourceDisplayName;
        /// <summary>
        /// Resource Identifier associated with the Work Request.
        /// </summary>
        public readonly string ResourceId;
        /// <summary>
        /// Task Order Sequence
        /// </summary>
        public readonly string Sequence;
        /// <summary>
        /// Status of the Job at target Level.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Targets associated with the resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSchedulerJobJobActivityResourcesResourceCollectionItemTargetResult> Targets;
        /// <summary>
        /// The time the task ended for the resource. An RFC3339 formatted datetime string
        /// </summary>
        public readonly string TimeEnded;
        /// <summary>
        /// The time the task started for the resource. An RFC3339 formatted datetime string
        /// </summary>
        public readonly string TimeStarted;

        [OutputConstructor]
        private GetSchedulerJobJobActivityResourcesResourceCollectionItemResult(
            string description,

            string resourceDisplayName,

            string resourceId,

            string sequence,

            string status,

            ImmutableArray<Outputs.GetSchedulerJobJobActivityResourcesResourceCollectionItemTargetResult> targets,

            string timeEnded,

            string timeStarted)
        {
            Description = description;
            ResourceDisplayName = resourceDisplayName;
            ResourceId = resourceId;
            Sequence = sequence;
            Status = status;
            Targets = targets;
            TimeEnded = timeEnded;
            TimeStarted = timeStarted;
        }
    }
}
