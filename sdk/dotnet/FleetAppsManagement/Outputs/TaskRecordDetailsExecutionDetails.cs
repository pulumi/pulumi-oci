// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.FleetAppsManagement.Outputs
{

    [OutputType]
    public sealed class TaskRecordDetailsExecutionDetails
    {
        /// <summary>
        /// (Updatable) Optional command to execute the content. You can provide any commands/arguments that can't be part of the script.
        /// </summary>
        public readonly string? Command;
        /// <summary>
        /// (Updatable) Content Source details.
        /// </summary>
        public readonly Outputs.TaskRecordDetailsExecutionDetailsContent? Content;
        /// <summary>
        /// (Updatable) Credentials required for executing the task.
        /// </summary>
        public readonly ImmutableArray<Outputs.TaskRecordDetailsExecutionDetailsCredential> Credentials;
        /// <summary>
        /// (Updatable) Endpoint to be invoked.
        /// </summary>
        public readonly string? Endpoint;
        /// <summary>
        /// (Updatable) The action type of the task
        /// </summary>
        public readonly string ExecutionType;
        /// <summary>
        /// (Updatable) The variable of the task. At least one of the dynamicArguments or output needs to be provided.
        /// </summary>
        public readonly Outputs.TaskRecordDetailsExecutionDetailsVariables? Variables;

        [OutputConstructor]
        private TaskRecordDetailsExecutionDetails(
            string? command,

            Outputs.TaskRecordDetailsExecutionDetailsContent? content,

            ImmutableArray<Outputs.TaskRecordDetailsExecutionDetailsCredential> credentials,

            string? endpoint,

            string executionType,

            Outputs.TaskRecordDetailsExecutionDetailsVariables? variables)
        {
            Command = command;
            Content = content;
            Credentials = credentials;
            Endpoint = endpoint;
            ExecutionType = executionType;
            Variables = variables;
        }
    }
}
