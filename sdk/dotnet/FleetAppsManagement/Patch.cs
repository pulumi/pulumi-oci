// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.FleetAppsManagement
{
    /// <summary>
    /// This resource provides the Patch resource in Oracle Cloud Infrastructure Fleet Apps Management service.
    /// 
    /// Creates a new Patch.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testPatch = new Oci.FleetAppsManagement.Patch("test_patch", new()
    ///     {
    ///         ArtifactDetails = new Oci.FleetAppsManagement.Inputs.PatchArtifactDetailsArgs
    ///         {
    ///             Category = patchArtifactDetailsCategory,
    ///             Artifact = new Oci.FleetAppsManagement.Inputs.PatchArtifactDetailsArtifactArgs
    ///             {
    ///                 Content = new Oci.FleetAppsManagement.Inputs.PatchArtifactDetailsArtifactContentArgs
    ///                 {
    ///                     Bucket = patchArtifactDetailsArtifactContentBucket,
    ///                     Checksum = patchArtifactDetailsArtifactContentChecksum,
    ///                     Namespace = patchArtifactDetailsArtifactContentNamespace,
    ///                     Object = patchArtifactDetailsArtifactContentObject,
    ///                     SourceType = patchArtifactDetailsArtifactContentSourceType,
    ///                 },
    ///             },
    ///             Artifacts = new[]
    ///             {
    ///                 new Oci.FleetAppsManagement.Inputs.PatchArtifactDetailsArtifactArgs
    ///                 {
    ///                     Architecture = patchArtifactDetailsArtifactsArchitecture,
    ///                     Content = new Oci.FleetAppsManagement.Inputs.PatchArtifactDetailsArtifactContentArgs
    ///                     {
    ///                         Bucket = patchArtifactDetailsArtifactsContentBucket,
    ///                         Checksum = patchArtifactDetailsArtifactsContentChecksum,
    ///                         Namespace = patchArtifactDetailsArtifactsContentNamespace,
    ///                         Object = patchArtifactDetailsArtifactsContentObject,
    ///                         SourceType = patchArtifactDetailsArtifactsContentSourceType,
    ///                     },
    ///                     OsType = patchArtifactDetailsArtifactsOsType,
    ///                 },
    ///             },
    ///         },
    ///         CompartmentId = compartmentId,
    ///         Name = patchName,
    ///         PatchType = new Oci.FleetAppsManagement.Inputs.PatchPatchTypeArgs
    ///         {
    ///             PlatformConfigurationId = testPlatformConfiguration.Id,
    ///         },
    ///         Product = new Oci.FleetAppsManagement.Inputs.PatchProductArgs
    ///         {
    ///             PlatformConfigurationId = testPlatformConfiguration.Id,
    ///             Version = patchProductVersion,
    ///         },
    ///         Severity = patchSeverity,
    ///         TimeReleased = patchTimeReleased,
    ///         DefinedTags = 
    ///         {
    ///             { "foo-namespace.bar-key", "value" },
    ///         },
    ///         DependentPatches = new[]
    ///         {
    ///             new Oci.FleetAppsManagement.Inputs.PatchDependentPatchArgs
    ///             {
    ///                 Id = patchDependentPatchesId,
    ///             },
    ///         },
    ///         Description = patchDescription,
    ///         FreeformTags = 
    ///         {
    ///             { "bar-key", "value" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Patches can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:FleetAppsManagement/patch:Patch test_patch "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:FleetAppsManagement/patch:Patch")]
    public partial class Patch : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) Patch artifact description and content details.
        /// </summary>
        [Output("artifactDetails")]
        public Output<Outputs.PatchArtifactDetails> ArtifactDetails { get; private set; } = null!;

        /// <summary>
        /// (Updatable)
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, string>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Dependent Patches for this patch.
        /// </summary>
        [Output("dependentPatches")]
        public Output<ImmutableArray<Outputs.PatchDependentPatch>> DependentPatches { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, string>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        [Output("lifecycleDetails")]
        public Output<string> LifecycleDetails { get; private set; } = null!;

        /// <summary>
        /// A user-friendly name. Should be unique within the tenancy, and cannot be changed after creation.  Avoid entering confidential information.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Patch Type
        /// </summary>
        [Output("patchType")]
        public Output<Outputs.PatchPatchType> PatchType { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Product
        /// </summary>
        [Output("product")]
        public Output<Outputs.PatchProduct> Product { get; private set; } = null!;

        /// <summary>
        /// Associated region
        /// </summary>
        [Output("resourceRegion")]
        public Output<string> ResourceRegion { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Patch Severity.
        /// </summary>
        [Output("severity")]
        public Output<string> Severity { get; private set; } = null!;

        /// <summary>
        /// The current state of the Patch.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        [Output("systemTags")]
        public Output<ImmutableDictionary<string, string>> SystemTags { get; private set; } = null!;

        /// <summary>
        /// The time this resource was created. An RFC3339 formatted datetime string.
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Date when the patch was released.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("timeReleased")]
        public Output<string> TimeReleased { get; private set; } = null!;

        /// <summary>
        /// The time this resource was last updated. An RFC3339 formatted datetime string.
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;

        /// <summary>
        /// Provide information on who defined the patch. Example: For Custom Patches the value will be USER_DEFINED For Oracle Defined Patches the value will be ORACLE_DEFINED
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a Patch resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Patch(string name, PatchArgs args, CustomResourceOptions? options = null)
            : base("oci:FleetAppsManagement/patch:Patch", name, args ?? new PatchArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Patch(string name, Input<string> id, PatchState? state = null, CustomResourceOptions? options = null)
            : base("oci:FleetAppsManagement/patch:Patch", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Patch resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Patch Get(string name, Input<string> id, PatchState? state = null, CustomResourceOptions? options = null)
        {
            return new Patch(name, id, state, options);
        }
    }

    public sealed class PatchArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) Patch artifact description and content details.
        /// </summary>
        [Input("artifactDetails", required: true)]
        public Input<Inputs.PatchArtifactDetailsArgs> ArtifactDetails { get; set; } = null!;

        /// <summary>
        /// (Updatable)
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        [Input("dependentPatches")]
        private InputList<Inputs.PatchDependentPatchArgs>? _dependentPatches;

        /// <summary>
        /// (Updatable) Dependent Patches for this patch.
        /// </summary>
        public InputList<Inputs.PatchDependentPatchArgs> DependentPatches
        {
            get => _dependentPatches ?? (_dependentPatches = new InputList<Inputs.PatchDependentPatchArgs>());
            set => _dependentPatches = value;
        }

        /// <summary>
        /// (Updatable) A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// A user-friendly name. Should be unique within the tenancy, and cannot be changed after creation.  Avoid entering confidential information.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// (Updatable) Patch Type
        /// </summary>
        [Input("patchType", required: true)]
        public Input<Inputs.PatchPatchTypeArgs> PatchType { get; set; } = null!;

        /// <summary>
        /// (Updatable) Product
        /// </summary>
        [Input("product", required: true)]
        public Input<Inputs.PatchProductArgs> Product { get; set; } = null!;

        /// <summary>
        /// (Updatable) Patch Severity.
        /// </summary>
        [Input("severity", required: true)]
        public Input<string> Severity { get; set; } = null!;

        /// <summary>
        /// (Updatable) Date when the patch was released.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("timeReleased", required: true)]
        public Input<string> TimeReleased { get; set; } = null!;

        public PatchArgs()
        {
        }
        public static new PatchArgs Empty => new PatchArgs();
    }

    public sealed class PatchState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) Patch artifact description and content details.
        /// </summary>
        [Input("artifactDetails")]
        public Input<Inputs.PatchArtifactDetailsGetArgs>? ArtifactDetails { get; set; }

        /// <summary>
        /// (Updatable)
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        [Input("dependentPatches")]
        private InputList<Inputs.PatchDependentPatchGetArgs>? _dependentPatches;

        /// <summary>
        /// (Updatable) Dependent Patches for this patch.
        /// </summary>
        public InputList<Inputs.PatchDependentPatchGetArgs> DependentPatches
        {
            get => _dependentPatches ?? (_dependentPatches = new InputList<Inputs.PatchDependentPatchGetArgs>());
            set => _dependentPatches = value;
        }

        /// <summary>
        /// (Updatable) A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        [Input("lifecycleDetails")]
        public Input<string>? LifecycleDetails { get; set; }

        /// <summary>
        /// A user-friendly name. Should be unique within the tenancy, and cannot be changed after creation.  Avoid entering confidential information.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// (Updatable) Patch Type
        /// </summary>
        [Input("patchType")]
        public Input<Inputs.PatchPatchTypeGetArgs>? PatchType { get; set; }

        /// <summary>
        /// (Updatable) Product
        /// </summary>
        [Input("product")]
        public Input<Inputs.PatchProductGetArgs>? Product { get; set; }

        /// <summary>
        /// Associated region
        /// </summary>
        [Input("resourceRegion")]
        public Input<string>? ResourceRegion { get; set; }

        /// <summary>
        /// (Updatable) Patch Severity.
        /// </summary>
        [Input("severity")]
        public Input<string>? Severity { get; set; }

        /// <summary>
        /// The current state of the Patch.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("systemTags")]
        private InputMap<string>? _systemTags;

        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public InputMap<string> SystemTags
        {
            get => _systemTags ?? (_systemTags = new InputMap<string>());
            set => _systemTags = value;
        }

        /// <summary>
        /// The time this resource was created. An RFC3339 formatted datetime string.
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// (Updatable) Date when the patch was released.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("timeReleased")]
        public Input<string>? TimeReleased { get; set; }

        /// <summary>
        /// The time this resource was last updated. An RFC3339 formatted datetime string.
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        /// <summary>
        /// Provide information on who defined the patch. Example: For Custom Patches the value will be USER_DEFINED For Oracle Defined Patches the value will be ORACLE_DEFINED
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public PatchState()
        {
        }
        public static new PatchState Empty => new PatchState();
    }
}
