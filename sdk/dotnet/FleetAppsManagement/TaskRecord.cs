// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.FleetAppsManagement
{
    /// <summary>
    /// This resource provides the Task Record resource in Oracle Cloud Infrastructure Fleet Apps Management service.
    /// 
    /// Creates a new Task.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testTaskRecord = new Oci.FleetAppsManagement.TaskRecord("test_task_record", new()
    ///     {
    ///         CompartmentId = compartmentId,
    ///         Details = new Oci.FleetAppsManagement.Inputs.TaskRecordDetailsArgs
    ///         {
    ///             ExecutionDetails = new Oci.FleetAppsManagement.Inputs.TaskRecordDetailsExecutionDetailsArgs
    ///             {
    ///                 ExecutionType = taskRecordDetailsExecutionDetailsExecutionType,
    ///                 Command = taskRecordDetailsExecutionDetailsCommand,
    ///                 Content = new Oci.FleetAppsManagement.Inputs.TaskRecordDetailsExecutionDetailsContentArgs
    ///                 {
    ///                     Bucket = taskRecordDetailsExecutionDetailsContentBucket,
    ///                     Checksum = taskRecordDetailsExecutionDetailsContentChecksum,
    ///                     Namespace = taskRecordDetailsExecutionDetailsContentNamespace,
    ///                     Object = taskRecordDetailsExecutionDetailsContentObject,
    ///                     SourceType = taskRecordDetailsExecutionDetailsContentSourceType,
    ///                 },
    ///                 Credentials = new[]
    ///                 {
    ///                     new Oci.FleetAppsManagement.Inputs.TaskRecordDetailsExecutionDetailsCredentialArgs
    ///                     {
    ///                         DisplayName = taskRecordDetailsExecutionDetailsCredentialsDisplayName,
    ///                         Id = taskRecordDetailsExecutionDetailsCredentialsId,
    ///                     },
    ///                 },
    ///                 Endpoint = taskRecordDetailsExecutionDetailsEndpoint,
    ///                 Variables = new Oci.FleetAppsManagement.Inputs.TaskRecordDetailsExecutionDetailsVariablesArgs
    ///                 {
    ///                     InputVariables = new[]
    ///                     {
    ///                         new Oci.FleetAppsManagement.Inputs.TaskRecordDetailsExecutionDetailsVariablesInputVariableArgs
    ///                         {
    ///                             Description = taskRecordDetailsExecutionDetailsVariablesInputVariablesDescription,
    ///                             Name = taskRecordDetailsExecutionDetailsVariablesInputVariablesName,
    ///                             Type = taskRecordDetailsExecutionDetailsVariablesInputVariablesType,
    ///                         },
    ///                     },
    ///                     OutputVariables = taskRecordDetailsExecutionDetailsVariablesOutputVariables,
    ///                 },
    ///             },
    ///             OsType = taskRecordDetailsOsType,
    ///             Scope = taskRecordDetailsScope,
    ///             IsApplySubjectTask = taskRecordDetailsIsApplySubjectTask,
    ///             IsDiscoveryOutputTask = taskRecordDetailsIsDiscoveryOutputTask,
    ///             Platform = taskRecordDetailsPlatform,
    ///             Properties = new Oci.FleetAppsManagement.Inputs.TaskRecordDetailsPropertiesArgs
    ///             {
    ///                 NumRetries = taskRecordDetailsPropertiesNumRetries,
    ///                 TimeoutInSeconds = taskRecordDetailsPropertiesTimeoutInSeconds,
    ///             },
    ///         },
    ///         DefinedTags = 
    ///         {
    ///             { "foo-namespace.bar-key", "value" },
    ///         },
    ///         Description = taskRecordDescription,
    ///         DisplayName = taskRecordDisplayName,
    ///         FreeformTags = 
    ///         {
    ///             { "bar-key", "value" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// TaskRecords can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:FleetAppsManagement/taskRecord:TaskRecord test_task_record "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:FleetAppsManagement/taskRecord:TaskRecord")]
    public partial class TaskRecord : global::Pulumi.CustomResource
    {
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, string>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The details of the task.
        /// </summary>
        [Output("details")]
        public Output<Outputs.TaskRecordDetails> Details { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}` 
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, string>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        [Output("lifecycleDetails")]
        public Output<string> LifecycleDetails { get; private set; } = null!;

        /// <summary>
        /// Associated region
        /// </summary>
        [Output("resourceRegion")]
        public Output<string> ResourceRegion { get; private set; } = null!;

        /// <summary>
        /// The current state of the TaskRecord.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        [Output("systemTags")]
        public Output<ImmutableDictionary<string, string>> SystemTags { get; private set; } = null!;

        /// <summary>
        /// The time this resource was created. An RFC3339 formatted datetime string.
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The time this resource was last updated. An RFC3339 formatted datetime string.
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;

        /// <summary>
        /// Task type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// The version of the task
        /// </summary>
        [Output("version")]
        public Output<string> Version { get; private set; } = null!;


        /// <summary>
        /// Create a TaskRecord resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TaskRecord(string name, TaskRecordArgs args, CustomResourceOptions? options = null)
            : base("oci:FleetAppsManagement/taskRecord:TaskRecord", name, args ?? new TaskRecordArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TaskRecord(string name, Input<string> id, TaskRecordState? state = null, CustomResourceOptions? options = null)
            : base("oci:FleetAppsManagement/taskRecord:TaskRecord", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TaskRecord resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TaskRecord Get(string name, Input<string> id, TaskRecordState? state = null, CustomResourceOptions? options = null)
        {
            return new TaskRecord(name, id, state, options);
        }
    }

    public sealed class TaskRecordArgs : global::Pulumi.ResourceArgs
    {
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) The details of the task.
        /// </summary>
        [Input("details", required: true)]
        public Input<Inputs.TaskRecordDetailsArgs> Details { get; set; } = null!;

        /// <summary>
        /// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}` 
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        public TaskRecordArgs()
        {
        }
        public static new TaskRecordArgs Empty => new TaskRecordArgs();
    }

    public sealed class TaskRecordState : global::Pulumi.ResourceArgs
    {
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) The details of the task.
        /// </summary>
        [Input("details")]
        public Input<Inputs.TaskRecordDetailsGetArgs>? Details { get; set; }

        /// <summary>
        /// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}` 
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        [Input("lifecycleDetails")]
        public Input<string>? LifecycleDetails { get; set; }

        /// <summary>
        /// Associated region
        /// </summary>
        [Input("resourceRegion")]
        public Input<string>? ResourceRegion { get; set; }

        /// <summary>
        /// The current state of the TaskRecord.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("systemTags")]
        private InputMap<string>? _systemTags;

        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public InputMap<string> SystemTags
        {
            get => _systemTags ?? (_systemTags = new InputMap<string>());
            set => _systemTags = value;
        }

        /// <summary>
        /// The time this resource was created. An RFC3339 formatted datetime string.
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The time this resource was last updated. An RFC3339 formatted datetime string.
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        /// <summary>
        /// Task type.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// The version of the task
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        public TaskRecordState()
        {
        }
        public static new TaskRecordState Empty => new TaskRecordState();
    }
}
