// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.FleetSoftwareUpdate
{
    /// <summary>
    /// This resource provides the Fsu Collection resource in Oracle Cloud Infrastructure Fleet Software Update service.
    /// 
    /// Creates a new Exadata Fleet Update Collection.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testFsuCollection = new Oci.FleetSoftwareUpdate.FsuCollection("test_fsu_collection", new()
    ///     {
    ///         CompartmentId = compartmentId,
    ///         ServiceType = fsuCollectionServiceType,
    ///         SourceMajorVersion = fsuCollectionSourceMajorVersion,
    ///         Type = fsuCollectionType,
    ///         DefinedTags = 
    ///         {
    ///             { "foo-namespace.bar-key", "value" },
    ///         },
    ///         DisplayName = fsuCollectionDisplayName,
    ///         FleetDiscovery = new Oci.FleetSoftwareUpdate.Inputs.FsuCollectionFleetDiscoveryArgs
    ///         {
    ///             Strategy = fsuCollectionFleetDiscoveryStrategy,
    ///             Filters = new[]
    ///             {
    ///                 new Oci.FleetSoftwareUpdate.Inputs.FsuCollectionFleetDiscoveryFilterArgs
    ///                 {
    ///                     Type = fsuCollectionFleetDiscoveryFiltersType,
    ///                     EntityType = fsuCollectionFleetDiscoveryFiltersEntityType,
    ///                     Identifiers = fsuCollectionFleetDiscoveryFiltersIdentifiers,
    ///                     Mode = fsuCollectionFleetDiscoveryFiltersMode,
    ///                     Names = fsuCollectionFleetDiscoveryFiltersNames,
    ///                     Operator = fsuCollectionFleetDiscoveryFiltersOperator,
    ///                     Tags = new[]
    ///                     {
    ///                         new Oci.FleetSoftwareUpdate.Inputs.FsuCollectionFleetDiscoveryFilterTagArgs
    ///                         {
    ///                             Key = fsuCollectionFleetDiscoveryFiltersTagsKey,
    ///                             Value = fsuCollectionFleetDiscoveryFiltersTagsValue,
    ///                             Namespace = fsuCollectionFleetDiscoveryFiltersTagsNamespace,
    ///                         },
    ///                     },
    ///                     Versions = fsuCollectionFleetDiscoveryFiltersVersions,
    ///                 },
    ///             },
    ///             FsuDiscoveryId = testFsuDiscovery.Id,
    ///             Query = fsuCollectionFleetDiscoveryQuery,
    ///             Targets = fsuCollectionFleetDiscoveryTargets,
    ///         },
    ///         FreeformTags = 
    ///         {
    ///             { "bar-key", "value" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// FsuCollections can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:FleetSoftwareUpdate/fsuCollection:FsuCollection test_fsu_collection "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:FleetSoftwareUpdate/fsuCollection:FsuCollection")]
    public partial class FsuCollection : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Active Exadata Fleet Update Cycle resource for this Collection. Object would be null if there is no active Cycle.
        /// </summary>
        [Output("activeFsuCycles")]
        public Output<ImmutableArray<Outputs.FsuCollectionActiveFsuCycle>> ActiveFsuCycles { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Compartment Identifier
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, string>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Exadata Fleet Update Collection Identifier.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Supported fleet discovery strategies for DB Collections. If specified on an Update Collection request, this will re-discover the targets of the Collection.
        /// </summary>
        [Output("fleetDiscovery")]
        public Output<Outputs.FsuCollectionFleetDiscovery> FleetDiscovery { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, string>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of last completed FSU Cycle.
        /// </summary>
        [Output("lastCompletedFsuCycleId")]
        public Output<string> LastCompletedFsuCycleId { get; private set; } = null!;

        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        [Output("lifecycleDetails")]
        public Output<string> LifecycleDetails { get; private set; } = null!;

        /// <summary>
        /// Exadata service type for the target resource members.
        /// </summary>
        [Output("serviceType")]
        public Output<string> ServiceType { get; private set; } = null!;

        /// <summary>
        /// Database Major Version of targets to be included in the Exadata Fleet Update Collection. https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/DbVersionSummary/ListDbVersions Only Database targets that match the version specified in this value would be added to the Exadata Fleet Update Collection.
        /// </summary>
        [Output("sourceMajorVersion")]
        public Output<string> SourceMajorVersion { get; private set; } = null!;

        /// <summary>
        /// The current state of the Exadata Fleet Update Collection.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        [Output("systemTags")]
        public Output<ImmutableDictionary<string, string>> SystemTags { get; private set; } = null!;

        /// <summary>
        /// Number of targets that are members of this Collection.
        /// </summary>
        [Output("targetCount")]
        public Output<int> TargetCount { get; private set; } = null!;

        /// <summary>
        /// The time the Exadata Fleet Update Collection was created. An RFC3339 formatted datetime string.
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The time the Exadata Fleet Update Collection was updated. An RFC3339 formatted datetime string.
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;

        /// <summary>
        /// Collection type. DB: Only Database entity type resources allowed. GI: CloudVMCluster and VMCluster entity type resources allowed. 
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a FsuCollection resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FsuCollection(string name, FsuCollectionArgs args, CustomResourceOptions? options = null)
            : base("oci:FleetSoftwareUpdate/fsuCollection:FsuCollection", name, args ?? new FsuCollectionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FsuCollection(string name, Input<string> id, FsuCollectionState? state = null, CustomResourceOptions? options = null)
            : base("oci:FleetSoftwareUpdate/fsuCollection:FsuCollection", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FsuCollection resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FsuCollection Get(string name, Input<string> id, FsuCollectionState? state = null, CustomResourceOptions? options = null)
        {
            return new FsuCollection(name, id, state, options);
        }
    }

    public sealed class FsuCollectionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) Compartment Identifier
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) Exadata Fleet Update Collection Identifier.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// Supported fleet discovery strategies for DB Collections. If specified on an Update Collection request, this will re-discover the targets of the Collection.
        /// </summary>
        [Input("fleetDiscovery")]
        public Input<Inputs.FsuCollectionFleetDiscoveryArgs>? FleetDiscovery { get; set; }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// Exadata service type for the target resource members.
        /// </summary>
        [Input("serviceType", required: true)]
        public Input<string> ServiceType { get; set; } = null!;

        /// <summary>
        /// Database Major Version of targets to be included in the Exadata Fleet Update Collection. https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/DbVersionSummary/ListDbVersions Only Database targets that match the version specified in this value would be added to the Exadata Fleet Update Collection.
        /// </summary>
        [Input("sourceMajorVersion", required: true)]
        public Input<string> SourceMajorVersion { get; set; } = null!;

        /// <summary>
        /// Collection type. DB: Only Database entity type resources allowed. GI: CloudVMCluster and VMCluster entity type resources allowed. 
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public FsuCollectionArgs()
        {
        }
        public static new FsuCollectionArgs Empty => new FsuCollectionArgs();
    }

    public sealed class FsuCollectionState : global::Pulumi.ResourceArgs
    {
        [Input("activeFsuCycles")]
        private InputList<Inputs.FsuCollectionActiveFsuCycleGetArgs>? _activeFsuCycles;

        /// <summary>
        /// Active Exadata Fleet Update Cycle resource for this Collection. Object would be null if there is no active Cycle.
        /// </summary>
        public InputList<Inputs.FsuCollectionActiveFsuCycleGetArgs> ActiveFsuCycles
        {
            get => _activeFsuCycles ?? (_activeFsuCycles = new InputList<Inputs.FsuCollectionActiveFsuCycleGetArgs>());
            set => _activeFsuCycles = value;
        }

        /// <summary>
        /// (Updatable) Compartment Identifier
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) Exadata Fleet Update Collection Identifier.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// Supported fleet discovery strategies for DB Collections. If specified on an Update Collection request, this will re-discover the targets of the Collection.
        /// </summary>
        [Input("fleetDiscovery")]
        public Input<Inputs.FsuCollectionFleetDiscoveryGetArgs>? FleetDiscovery { get; set; }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of last completed FSU Cycle.
        /// </summary>
        [Input("lastCompletedFsuCycleId")]
        public Input<string>? LastCompletedFsuCycleId { get; set; }

        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        [Input("lifecycleDetails")]
        public Input<string>? LifecycleDetails { get; set; }

        /// <summary>
        /// Exadata service type for the target resource members.
        /// </summary>
        [Input("serviceType")]
        public Input<string>? ServiceType { get; set; }

        /// <summary>
        /// Database Major Version of targets to be included in the Exadata Fleet Update Collection. https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/DbVersionSummary/ListDbVersions Only Database targets that match the version specified in this value would be added to the Exadata Fleet Update Collection.
        /// </summary>
        [Input("sourceMajorVersion")]
        public Input<string>? SourceMajorVersion { get; set; }

        /// <summary>
        /// The current state of the Exadata Fleet Update Collection.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("systemTags")]
        private InputMap<string>? _systemTags;

        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public InputMap<string> SystemTags
        {
            get => _systemTags ?? (_systemTags = new InputMap<string>());
            set => _systemTags = value;
        }

        /// <summary>
        /// Number of targets that are members of this Collection.
        /// </summary>
        [Input("targetCount")]
        public Input<int>? TargetCount { get; set; }

        /// <summary>
        /// The time the Exadata Fleet Update Collection was created. An RFC3339 formatted datetime string.
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The time the Exadata Fleet Update Collection was updated. An RFC3339 formatted datetime string.
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        /// <summary>
        /// Collection type. DB: Only Database entity type resources allowed. GI: CloudVMCluster and VMCluster entity type resources allowed. 
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public FsuCollectionState()
        {
        }
        public static new FsuCollectionState Empty => new FsuCollectionState();
    }
}
