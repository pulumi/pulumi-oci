// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.FleetSoftwareUpdate
{
    [OciResourceType("oci:FleetSoftwareUpdate/fsuCollection:FsuCollection")]
    public partial class FsuCollection : global::Pulumi.CustomResource
    {
        [Output("activeFsuCycles")]
        public Output<ImmutableArray<Outputs.FsuCollectionActiveFsuCycle>> ActiveFsuCycles { get; private set; } = null!;

        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        [Output("definedTags")]
        public Output<ImmutableDictionary<string, string>> DefinedTags { get; private set; } = null!;

        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        [Output("fleetDiscovery")]
        public Output<Outputs.FsuCollectionFleetDiscovery> FleetDiscovery { get; private set; } = null!;

        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, string>> FreeformTags { get; private set; } = null!;

        [Output("lifecycleDetails")]
        public Output<string> LifecycleDetails { get; private set; } = null!;

        [Output("serviceType")]
        public Output<string> ServiceType { get; private set; } = null!;

        [Output("sourceMajorVersion")]
        public Output<string> SourceMajorVersion { get; private set; } = null!;

        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        [Output("systemTags")]
        public Output<ImmutableDictionary<string, string>> SystemTags { get; private set; } = null!;

        [Output("targetCount")]
        public Output<int> TargetCount { get; private set; } = null!;

        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;

        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a FsuCollection resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FsuCollection(string name, FsuCollectionArgs args, CustomResourceOptions? options = null)
            : base("oci:FleetSoftwareUpdate/fsuCollection:FsuCollection", name, args ?? new FsuCollectionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FsuCollection(string name, Input<string> id, FsuCollectionState? state = null, CustomResourceOptions? options = null)
            : base("oci:FleetSoftwareUpdate/fsuCollection:FsuCollection", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FsuCollection resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FsuCollection Get(string name, Input<string> id, FsuCollectionState? state = null, CustomResourceOptions? options = null)
        {
            return new FsuCollection(name, id, state, options);
        }
    }

    public sealed class FsuCollectionArgs : global::Pulumi.ResourceArgs
    {
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("definedTags")]
        private InputMap<string>? _definedTags;
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("fleetDiscovery")]
        public Input<Inputs.FsuCollectionFleetDiscoveryArgs>? FleetDiscovery { get; set; }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        [Input("serviceType", required: true)]
        public Input<string> ServiceType { get; set; } = null!;

        [Input("sourceMajorVersion", required: true)]
        public Input<string> SourceMajorVersion { get; set; } = null!;

        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public FsuCollectionArgs()
        {
        }
        public static new FsuCollectionArgs Empty => new FsuCollectionArgs();
    }

    public sealed class FsuCollectionState : global::Pulumi.ResourceArgs
    {
        [Input("activeFsuCycles")]
        private InputList<Inputs.FsuCollectionActiveFsuCycleGetArgs>? _activeFsuCycles;
        public InputList<Inputs.FsuCollectionActiveFsuCycleGetArgs> ActiveFsuCycles
        {
            get => _activeFsuCycles ?? (_activeFsuCycles = new InputList<Inputs.FsuCollectionActiveFsuCycleGetArgs>());
            set => _activeFsuCycles = value;
        }

        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("definedTags")]
        private InputMap<string>? _definedTags;
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("fleetDiscovery")]
        public Input<Inputs.FsuCollectionFleetDiscoveryGetArgs>? FleetDiscovery { get; set; }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        [Input("lifecycleDetails")]
        public Input<string>? LifecycleDetails { get; set; }

        [Input("serviceType")]
        public Input<string>? ServiceType { get; set; }

        [Input("sourceMajorVersion")]
        public Input<string>? SourceMajorVersion { get; set; }

        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("systemTags")]
        private InputMap<string>? _systemTags;
        public InputMap<string> SystemTags
        {
            get => _systemTags ?? (_systemTags = new InputMap<string>());
            set => _systemTags = value;
        }

        [Input("targetCount")]
        public Input<int>? TargetCount { get; set; }

        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        [Input("type")]
        public Input<string>? Type { get; set; }

        public FsuCollectionState()
        {
        }
        public static new FsuCollectionState Empty => new FsuCollectionState();
    }
}
