// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.FleetSoftwareUpdate
{
    public static class GetFsuCollection
    {
        /// <summary>
        /// This data source provides details about a specific Fsu Collection resource in Oracle Cloud Infrastructure Fleet Software Update service.
        /// 
        /// Gets a Exadata Fleet Update Collection by identifier.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testFsuCollection = Oci.FleetSoftwareUpdate.GetFsuCollection.Invoke(new()
        ///     {
        ///         FsuCollectionId = testFsuCollectionOciFleetSoftwareUpdateFsuCollection.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetFsuCollectionResult> InvokeAsync(GetFsuCollectionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFsuCollectionResult>("oci:FleetSoftwareUpdate/getFsuCollection:getFsuCollection", args ?? new GetFsuCollectionArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Fsu Collection resource in Oracle Cloud Infrastructure Fleet Software Update service.
        /// 
        /// Gets a Exadata Fleet Update Collection by identifier.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testFsuCollection = Oci.FleetSoftwareUpdate.GetFsuCollection.Invoke(new()
        ///     {
        ///         FsuCollectionId = testFsuCollectionOciFleetSoftwareUpdateFsuCollection.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetFsuCollectionResult> Invoke(GetFsuCollectionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFsuCollectionResult>("oci:FleetSoftwareUpdate/getFsuCollection:getFsuCollection", args ?? new GetFsuCollectionInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Fsu Collection resource in Oracle Cloud Infrastructure Fleet Software Update service.
        /// 
        /// Gets a Exadata Fleet Update Collection by identifier.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testFsuCollection = Oci.FleetSoftwareUpdate.GetFsuCollection.Invoke(new()
        ///     {
        ///         FsuCollectionId = testFsuCollectionOciFleetSoftwareUpdateFsuCollection.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetFsuCollectionResult> Invoke(GetFsuCollectionInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetFsuCollectionResult>("oci:FleetSoftwareUpdate/getFsuCollection:getFsuCollection", args ?? new GetFsuCollectionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFsuCollectionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique Exadata Fleet Update Collection identifier.
        /// </summary>
        [Input("fsuCollectionId", required: true)]
        public string FsuCollectionId { get; set; } = null!;

        public GetFsuCollectionArgs()
        {
        }
        public static new GetFsuCollectionArgs Empty => new GetFsuCollectionArgs();
    }

    public sealed class GetFsuCollectionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique Exadata Fleet Update Collection identifier.
        /// </summary>
        [Input("fsuCollectionId", required: true)]
        public Input<string> FsuCollectionId { get; set; } = null!;

        public GetFsuCollectionInvokeArgs()
        {
        }
        public static new GetFsuCollectionInvokeArgs Empty => new GetFsuCollectionInvokeArgs();
    }


    [OutputType]
    public sealed class GetFsuCollectionResult
    {
        /// <summary>
        /// Active Exadata Fleet Update Cycle resource for this Collection. Object would be null if there is no active Cycle.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFsuCollectionActiveFsuCycleResult> ActiveFsuCycles;
        /// <summary>
        /// Compartment Identifier
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// Exadata Fleet Update Collection resource display name.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Supported fleet discovery strategies for DB Collections. If specified on an Update Collection request, this will re-discover the targets of the Collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFsuCollectionFleetDiscoveryResult> FleetDiscoveries;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        public readonly string FsuCollectionId;
        /// <summary>
        /// OCID identifier for the Exadata Fleet Update Collection.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of last completed FSU Cycle.
        /// </summary>
        public readonly string LastCompletedFsuCycleId;
        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// Exadata service type for the target resource members.
        /// </summary>
        public readonly string ServiceType;
        /// <summary>
        /// Database Major Version of targets to be included in the Exadata Fleet Update Collection. https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/DbVersionSummary/ListDbVersions Only Database targets that match the version specified in this value would be added to the Exadata Fleet Update Collection.
        /// </summary>
        public readonly string SourceMajorVersion;
        /// <summary>
        /// The current state of the Exadata Fleet Update Collection.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// Number of targets that are members of this Collection.
        /// </summary>
        public readonly int TargetCount;
        /// <summary>
        /// The time the Exadata Fleet Update Collection was created. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time the Exadata Fleet Update Collection was updated. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeUpdated;
        /// <summary>
        /// Exadata Fleet Update Collection type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetFsuCollectionResult(
            ImmutableArray<Outputs.GetFsuCollectionActiveFsuCycleResult> activeFsuCycles,

            string compartmentId,

            ImmutableDictionary<string, string> definedTags,

            string displayName,

            ImmutableArray<Outputs.GetFsuCollectionFleetDiscoveryResult> fleetDiscoveries,

            ImmutableDictionary<string, string> freeformTags,

            string fsuCollectionId,

            string id,

            string lastCompletedFsuCycleId,

            string lifecycleDetails,

            string serviceType,

            string sourceMajorVersion,

            string state,

            ImmutableDictionary<string, string> systemTags,

            int targetCount,

            string timeCreated,

            string timeUpdated,

            string type)
        {
            ActiveFsuCycles = activeFsuCycles;
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            DisplayName = displayName;
            FleetDiscoveries = fleetDiscoveries;
            FreeformTags = freeformTags;
            FsuCollectionId = fsuCollectionId;
            Id = id;
            LastCompletedFsuCycleId = lastCompletedFsuCycleId;
            LifecycleDetails = lifecycleDetails;
            ServiceType = serviceType;
            SourceMajorVersion = sourceMajorVersion;
            State = state;
            SystemTags = systemTags;
            TargetCount = targetCount;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            Type = type;
        }
    }
}
