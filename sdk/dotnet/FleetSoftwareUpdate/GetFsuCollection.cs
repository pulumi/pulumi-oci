// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.FleetSoftwareUpdate
{
    public static class GetFsuCollection
    {
        public static Task<GetFsuCollectionResult> InvokeAsync(GetFsuCollectionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFsuCollectionResult>("oci:FleetSoftwareUpdate/getFsuCollection:getFsuCollection", args ?? new GetFsuCollectionArgs(), options.WithDefaults());

        public static Output<GetFsuCollectionResult> Invoke(GetFsuCollectionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFsuCollectionResult>("oci:FleetSoftwareUpdate/getFsuCollection:getFsuCollection", args ?? new GetFsuCollectionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFsuCollectionArgs : global::Pulumi.InvokeArgs
    {
        [Input("fsuCollectionId", required: true)]
        public string FsuCollectionId { get; set; } = null!;

        public GetFsuCollectionArgs()
        {
        }
        public static new GetFsuCollectionArgs Empty => new GetFsuCollectionArgs();
    }

    public sealed class GetFsuCollectionInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("fsuCollectionId", required: true)]
        public Input<string> FsuCollectionId { get; set; } = null!;

        public GetFsuCollectionInvokeArgs()
        {
        }
        public static new GetFsuCollectionInvokeArgs Empty => new GetFsuCollectionInvokeArgs();
    }


    [OutputType]
    public sealed class GetFsuCollectionResult
    {
        public readonly ImmutableArray<Outputs.GetFsuCollectionActiveFsuCycleResult> ActiveFsuCycles;
        public readonly string CompartmentId;
        public readonly ImmutableDictionary<string, string> DefinedTags;
        public readonly string DisplayName;
        public readonly ImmutableArray<Outputs.GetFsuCollectionFleetDiscoveryResult> FleetDiscoveries;
        public readonly ImmutableDictionary<string, string> FreeformTags;
        public readonly string FsuCollectionId;
        public readonly string Id;
        public readonly string LifecycleDetails;
        public readonly string ServiceType;
        public readonly string SourceMajorVersion;
        public readonly string State;
        public readonly ImmutableDictionary<string, string> SystemTags;
        public readonly int TargetCount;
        public readonly string TimeCreated;
        public readonly string TimeUpdated;
        public readonly string Type;

        [OutputConstructor]
        private GetFsuCollectionResult(
            ImmutableArray<Outputs.GetFsuCollectionActiveFsuCycleResult> activeFsuCycles,

            string compartmentId,

            ImmutableDictionary<string, string> definedTags,

            string displayName,

            ImmutableArray<Outputs.GetFsuCollectionFleetDiscoveryResult> fleetDiscoveries,

            ImmutableDictionary<string, string> freeformTags,

            string fsuCollectionId,

            string id,

            string lifecycleDetails,

            string serviceType,

            string sourceMajorVersion,

            string state,

            ImmutableDictionary<string, string> systemTags,

            int targetCount,

            string timeCreated,

            string timeUpdated,

            string type)
        {
            ActiveFsuCycles = activeFsuCycles;
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            DisplayName = displayName;
            FleetDiscoveries = fleetDiscoveries;
            FreeformTags = freeformTags;
            FsuCollectionId = fsuCollectionId;
            Id = id;
            LifecycleDetails = lifecycleDetails;
            ServiceType = serviceType;
            SourceMajorVersion = sourceMajorVersion;
            State = state;
            SystemTags = systemTags;
            TargetCount = targetCount;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            Type = type;
        }
    }
}
