// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.FleetSoftwareUpdate.Outputs
{

    [OutputType]
    public sealed class GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterResult
    {
        /// <summary>
        /// Type of resource to match in the discovery.
        /// </summary>
        public readonly string EntityType;
        /// <summary>
        /// Related resource Ids to include in the discovery.  All must match the specified entityType.
        /// </summary>
        public readonly ImmutableArray<string> Identifiers;
        /// <summary>
        /// INCLUDE or EXCLUDE the filter results in the discovery for DB targets. Supported for 'FSUCOLLECTION' RESOURCE_ID filter only.
        /// </summary>
        public readonly string Mode;
        /// <summary>
        /// List of Database unique names to include in the discovery.
        /// </summary>
        public readonly ImmutableArray<string> Names;
        /// <summary>
        /// Type of join for each element in this filter.
        /// </summary>
        public readonly string Operator;
        /// <summary>
        /// Freeform tags to include in the discovery.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagResult> Tags;
        /// <summary>
        /// A filter to return only resources whose type matches the given type.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// List of Versions strings to include in the discovery.
        /// </summary>
        public readonly ImmutableArray<string> Versions;

        [OutputConstructor]
        private GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterResult(
            string entityType,

            ImmutableArray<string> identifiers,

            string mode,

            ImmutableArray<string> names,

            string @operator,

            ImmutableArray<Outputs.GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagResult> tags,

            string type,

            ImmutableArray<string> versions)
        {
            EntityType = entityType;
            Identifiers = identifiers;
            Mode = mode;
            Names = names;
            Operator = @operator;
            Tags = tags;
            Type = type;
            Versions = versions;
        }
    }
}
