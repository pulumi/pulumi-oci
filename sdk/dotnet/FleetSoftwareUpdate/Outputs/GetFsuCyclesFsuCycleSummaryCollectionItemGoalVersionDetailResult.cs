// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.FleetSoftwareUpdate.Outputs
{

    [OutputType]
    public sealed class GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailResult
    {
        /// <summary>
        /// Goal home policy to use when Staging the Goal Version during patching. CREATE_NEW: Create a new DBHome (for Database Collections) for the specified image or version. USE_EXISTING: All database targets in the same VMCluster or CloudVmCluster will be moved to a shared database home.  If an existing home for the selected image or version is not found in the VM Cluster for a target database, then a new home will be created.  If more than one existing home for the selected image is found, then the home with the least number of databases will be used.  If multiple homes have the least number of databases, then a home will be selected at random.
        /// </summary>
        public readonly string HomePolicy;
        /// <summary>
        /// Prefix name used for new DB home resources created as part of the Stage Action. Format: &lt;specified_prefix&gt;_&lt;timestamp&gt; If not specified, a default Oracle Cloud Infrastructure DB home resource will be generated for the new DB home resources created.
        /// </summary>
        public readonly string NewHomePrefix;
        /// <summary>
        /// Target database software image OCID.
        /// </summary>
        public readonly string SoftwareImageId;
        /// <summary>
        /// Type of Exadata Fleet Update Cycle.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Target DB or GI version string for the Exadata Fleet Update Cycle.
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailResult(
            string homePolicy,

            string newHomePrefix,

            string softwareImageId,

            string type,

            string version)
        {
            HomePolicy = homePolicy;
            NewHomePrefix = newHomePrefix;
            SoftwareImageId = softwareImageId;
            Type = type;
            Version = version;
        }
    }
}
