// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.FleetSoftwareUpdate.Outputs
{

    [OutputType]
    public sealed class GetFsuCyclesFsuCycleSummaryCollectionItemResult
    {
        /// <summary>
        /// Scheduling related details for the Exadata Fleet Update Action. The specified time should not conflict with existing Exadata Infrastructure maintenance windows. Null scheduleDetails would execute the Exadata Fleet Update Action as soon as possible.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleResult> ApplyActionSchedules;
        /// <summary>
        /// Batching strategy details to use during PRECHECK and APPLY Cycle Actions.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyResult> BatchingStrategies;
        /// <summary>
        /// A filter to return only resources whose Collection type matches the given type.
        /// </summary>
        public readonly string CollectionType;
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// Details to configure diagnostics collection for targets affected by this Exadata Fleet Update Maintenance Cycle.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionResult> DiagnosticsCollections;
        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// OCID identifier for the Action that is currently in execution, if applicable.
        /// </summary>
        public readonly string ExecutingFsuActionId;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// A filter to return only resources whose fsuCollectionId matches the given fsuCollectionId.
        /// </summary>
        public readonly string FsuCollectionId;
        /// <summary>
        /// Goal version or image details for the Exadata Fleet Update Cycle.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailResult> GoalVersionDetails;
        /// <summary>
        /// OCID identifier for the Exadata Fleet Update Cycle.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// List of identifiers of patches to ignore.
        /// </summary>
        public readonly ImmutableArray<string> IsIgnoreMissingPatches;
        /// <summary>
        /// Ignore patch conflicts or missing patches between the source and goal homes.
        /// </summary>
        public readonly bool IsIgnorePatches;
        /// <summary>
        /// Ensure that services of administrator-managed Oracle RAC or Oracle RAC One databases are running on the same instances before and after the move operation.
        /// </summary>
        public readonly bool IsKeepPlacement;
        /// <summary>
        /// The latest Action type that was completed in the Exadata Fleet Update Cycle. No value would indicate that the Cycle has not completed any Action yet.
        /// </summary>
        public readonly string LastCompletedAction;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the latest Action  in the Exadata Fleet Update Cycle.
        /// </summary>
        public readonly string LastCompletedActionId;
        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// Service drain timeout specified in seconds.
        /// </summary>
        public readonly int MaxDrainTimeoutInSeconds;
        /// <summary>
        /// In this array all the possible actions will be listed. The first element is the suggested Action.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteResult> NextActionToExecutes;
        /// <summary>
        /// Current rollback cycle state if rollback maintenance cycle action has been attempted. No value would indicate that the Cycle has not run a rollback maintenance cycle action before.
        /// </summary>
        public readonly string RollbackCycleState;
        /// <summary>
        /// Scheduling related details for the Exadata Fleet Update Action. The specified time should not conflict with existing Exadata Infrastructure maintenance windows. Null scheduleDetails would execute the Exadata Fleet Update Action as soon as possible.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleResult> StageActionSchedules;
        /// <summary>
        /// A filter to return only resources whose lifecycleState matches the given lifecycleState.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// The date and time the Exadata Fleet Update Cycle was created, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The date and time the Exadata Fleet Update Cycle was finished, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
        /// </summary>
        public readonly string TimeFinished;
        /// <summary>
        /// The date and time the Exadata Fleet Update Cycle was updated, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
        /// </summary>
        public readonly string TimeUpdated;
        /// <summary>
        /// Type of Exadata Fleet Update Cycle.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Details of supported upgrade options for DB or GI collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFsuCyclesFsuCycleSummaryCollectionItemUpgradeDetailResult> UpgradeDetails;

        [OutputConstructor]
        private GetFsuCyclesFsuCycleSummaryCollectionItemResult(
            ImmutableArray<Outputs.GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleResult> applyActionSchedules,

            ImmutableArray<Outputs.GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyResult> batchingStrategies,

            string collectionType,

            string compartmentId,

            ImmutableDictionary<string, string> definedTags,

            ImmutableArray<Outputs.GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionResult> diagnosticsCollections,

            string displayName,

            string executingFsuActionId,

            ImmutableDictionary<string, string> freeformTags,

            string fsuCollectionId,

            ImmutableArray<Outputs.GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailResult> goalVersionDetails,

            string id,

            ImmutableArray<string> isIgnoreMissingPatches,

            bool isIgnorePatches,

            bool isKeepPlacement,

            string lastCompletedAction,

            string lastCompletedActionId,

            string lifecycleDetails,

            int maxDrainTimeoutInSeconds,

            ImmutableArray<Outputs.GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteResult> nextActionToExecutes,

            string rollbackCycleState,

            ImmutableArray<Outputs.GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleResult> stageActionSchedules,

            string state,

            ImmutableDictionary<string, string> systemTags,

            string timeCreated,

            string timeFinished,

            string timeUpdated,

            string type,

            ImmutableArray<Outputs.GetFsuCyclesFsuCycleSummaryCollectionItemUpgradeDetailResult> upgradeDetails)
        {
            ApplyActionSchedules = applyActionSchedules;
            BatchingStrategies = batchingStrategies;
            CollectionType = collectionType;
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            DiagnosticsCollections = diagnosticsCollections;
            DisplayName = displayName;
            ExecutingFsuActionId = executingFsuActionId;
            FreeformTags = freeformTags;
            FsuCollectionId = fsuCollectionId;
            GoalVersionDetails = goalVersionDetails;
            Id = id;
            IsIgnoreMissingPatches = isIgnoreMissingPatches;
            IsIgnorePatches = isIgnorePatches;
            IsKeepPlacement = isKeepPlacement;
            LastCompletedAction = lastCompletedAction;
            LastCompletedActionId = lastCompletedActionId;
            LifecycleDetails = lifecycleDetails;
            MaxDrainTimeoutInSeconds = maxDrainTimeoutInSeconds;
            NextActionToExecutes = nextActionToExecutes;
            RollbackCycleState = rollbackCycleState;
            StageActionSchedules = stageActionSchedules;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeFinished = timeFinished;
            TimeUpdated = timeUpdated;
            Type = type;
            UpgradeDetails = upgradeDetails;
        }
    }
}
