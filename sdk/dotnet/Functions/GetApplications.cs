// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Functions
{
    public static class GetApplications
    {
        /// <summary>
        /// This data source provides the list of Applications in Oracle Cloud Infrastructure Functions service.
        /// 
        /// Lists applications for a compartment.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testApplications = Oci.Functions.GetApplications.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = applicationDisplayName,
        ///         Id = applicationId,
        ///         State = applicationState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetApplicationsResult> InvokeAsync(GetApplicationsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetApplicationsResult>("oci:Functions/getApplications:getApplications", args ?? new GetApplicationsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Applications in Oracle Cloud Infrastructure Functions service.
        /// 
        /// Lists applications for a compartment.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testApplications = Oci.Functions.GetApplications.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = applicationDisplayName,
        ///         Id = applicationId,
        ///         State = applicationState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetApplicationsResult> Invoke(GetApplicationsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetApplicationsResult>("oci:Functions/getApplications:getApplications", args ?? new GetApplicationsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Applications in Oracle Cloud Infrastructure Functions service.
        /// 
        /// Lists applications for a compartment.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testApplications = Oci.Functions.GetApplications.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = applicationDisplayName,
        ///         Id = applicationId,
        ///         State = applicationState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetApplicationsResult> Invoke(GetApplicationsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetApplicationsResult>("oci:Functions/getApplications:getApplications", args ?? new GetApplicationsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApplicationsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to which this resource belongs.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only applications with display names that match the display name string. Matching is exact.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetApplicationsFilterArgs>? _filters;
        public List<Inputs.GetApplicationsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetApplicationsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only applications with the specified OCID.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// A filter to return only applications that match the lifecycle state in this parameter. Example: `Creating`
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetApplicationsArgs()
        {
        }
        public static new GetApplicationsArgs Empty => new GetApplicationsArgs();
    }

    public sealed class GetApplicationsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to which this resource belongs.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only applications with display names that match the display name string. Matching is exact.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetApplicationsFilterInputArgs>? _filters;
        public InputList<Inputs.GetApplicationsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetApplicationsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only applications with the specified OCID.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// A filter to return only applications that match the lifecycle state in this parameter. Example: `Creating`
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetApplicationsInvokeArgs()
        {
        }
        public static new GetApplicationsInvokeArgs Empty => new GetApplicationsInvokeArgs();
    }


    [OutputType]
    public sealed class GetApplicationsResult
    {
        /// <summary>
        /// The list of applications.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetApplicationsApplicationResult> Applications;
        /// <summary>
        /// The OCID of the compartment that contains the application.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The display name of the application. The display name is unique within the compartment containing the application.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetApplicationsFilterResult> Filters;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the application.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The current state of the application.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetApplicationsResult(
            ImmutableArray<Outputs.GetApplicationsApplicationResult> applications,

            string compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetApplicationsFilterResult> filters,

            string? id,

            string? state)
        {
            Applications = applications;
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            State = state;
        }
    }
}
