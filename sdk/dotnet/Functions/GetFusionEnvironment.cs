// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Functions
{
    public static class GetFusionEnvironment
    {
        /// <summary>
        /// This data source provides details about a specific Fusion Environment resource in Oracle Cloud Infrastructure Fusion Apps service.
        /// 
        /// Gets a FusionEnvironment by identifier
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testFusionEnvironment = Oci.Functions.GetFusionEnvironment.Invoke(new()
        ///     {
        ///         FusionEnvironmentId = testFusionEnvironmentOciFusionAppsFusionEnvironment.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetFusionEnvironmentResult> InvokeAsync(GetFusionEnvironmentArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFusionEnvironmentResult>("oci:Functions/getFusionEnvironment:getFusionEnvironment", args ?? new GetFusionEnvironmentArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Fusion Environment resource in Oracle Cloud Infrastructure Fusion Apps service.
        /// 
        /// Gets a FusionEnvironment by identifier
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testFusionEnvironment = Oci.Functions.GetFusionEnvironment.Invoke(new()
        ///     {
        ///         FusionEnvironmentId = testFusionEnvironmentOciFusionAppsFusionEnvironment.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetFusionEnvironmentResult> Invoke(GetFusionEnvironmentInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFusionEnvironmentResult>("oci:Functions/getFusionEnvironment:getFusionEnvironment", args ?? new GetFusionEnvironmentInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Fusion Environment resource in Oracle Cloud Infrastructure Fusion Apps service.
        /// 
        /// Gets a FusionEnvironment by identifier
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testFusionEnvironment = Oci.Functions.GetFusionEnvironment.Invoke(new()
        ///     {
        ///         FusionEnvironmentId = testFusionEnvironmentOciFusionAppsFusionEnvironment.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetFusionEnvironmentResult> Invoke(GetFusionEnvironmentInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetFusionEnvironmentResult>("oci:Functions/getFusionEnvironment:getFusionEnvironment", args ?? new GetFusionEnvironmentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFusionEnvironmentArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// unique FusionEnvironment identifier
        /// </summary>
        [Input("fusionEnvironmentId", required: true)]
        public string FusionEnvironmentId { get; set; } = null!;

        public GetFusionEnvironmentArgs()
        {
        }
        public static new GetFusionEnvironmentArgs Empty => new GetFusionEnvironmentArgs();
    }

    public sealed class GetFusionEnvironmentInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// unique FusionEnvironment identifier
        /// </summary>
        [Input("fusionEnvironmentId", required: true)]
        public Input<string> FusionEnvironmentId { get; set; } = null!;

        public GetFusionEnvironmentInvokeArgs()
        {
        }
        public static new GetFusionEnvironmentInvokeArgs Empty => new GetFusionEnvironmentInvokeArgs();
    }


    [OutputType]
    public sealed class GetFusionEnvironmentResult
    {
        /// <summary>
        /// Language packs
        /// </summary>
        public readonly ImmutableArray<string> AdditionalLanguagePacks;
        /// <summary>
        /// Patch bundle names
        /// </summary>
        public readonly ImmutableArray<string> AppliedPatchBundles;
        /// <summary>
        /// Compartment Identifier
        /// </summary>
        public readonly string CompartmentId;
        public readonly ImmutableArray<Outputs.GetFusionEnvironmentCreateFusionEnvironmentAdminUserDetailResult> CreateFusionEnvironmentAdminUserDetails;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// FusionEnvironment Identifier, can be renamed
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// DNS prefix
        /// </summary>
        public readonly string DnsPrefix;
        /// <summary>
        /// The IDCS domain created for the fusion instance
        /// </summary>
        public readonly string DomainId;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// FusionEnvironmentFamily Identifier
        /// </summary>
        public readonly string FusionEnvironmentFamilyId;
        public readonly string FusionEnvironmentId;
        /// <summary>
        /// Type of the FusionEnvironment.
        /// </summary>
        public readonly string FusionEnvironmentType;
        /// <summary>
        /// Unique identifier that is immutable on creation
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The IDCS Domain URL
        /// </summary>
        public readonly string IdcsDomainUrl;
        /// <summary>
        /// If it's true, then the Break Glass feature is enabled
        /// </summary>
        public readonly bool IsBreakGlassEnabled;
        /// <summary>
        /// BYOK key id
        /// </summary>
        public readonly string KmsKeyId;
        /// <summary>
        /// BYOK key info
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFusionEnvironmentKmsKeyInfoResult> KmsKeyInfos;
        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// The lockbox Id of this fusion environment. If there's no lockbox id, this field will be null
        /// </summary>
        public readonly string LockboxId;
        /// <summary>
        /// The policy that specifies the maintenance and upgrade preferences for an environment. For more information about the options, see [Understanding Environment Maintenance](https://docs.cloud.oracle.com/iaas/Content/fusion-applications/plan-environment-family.htm#about-env-maintenance).
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFusionEnvironmentMaintenancePolicyResult> MaintenancePolicies;
        /// <summary>
        /// Public URL
        /// </summary>
        public readonly string PublicUrl;
        /// <summary>
        /// Describes a refresh of a fusion environment
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFusionEnvironmentRefreshResult> Refreshes;
        /// <summary>
        /// Network Access Control Rules
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFusionEnvironmentRuleResult> Rules;
        /// <summary>
        /// The current state of the ServiceInstance.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// List of subscription IDs.
        /// </summary>
        public readonly ImmutableArray<string> SubscriptionIds;
        /// <summary>
        /// Environment Specific Guid/ System Name
        /// </summary>
        public readonly string SystemName;
        /// <summary>
        /// The time the the FusionEnvironment was created. An RFC3339 formatted datetime string
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The next maintenance for this environment
        /// </summary>
        public readonly string TimeUpcomingMaintenance;
        /// <summary>
        /// The time the FusionEnvironment was updated. An RFC3339 formatted datetime string
        /// </summary>
        public readonly string TimeUpdated;
        /// <summary>
        /// Version of Fusion Apps used by this environment
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private GetFusionEnvironmentResult(
            ImmutableArray<string> additionalLanguagePacks,

            ImmutableArray<string> appliedPatchBundles,

            string compartmentId,

            ImmutableArray<Outputs.GetFusionEnvironmentCreateFusionEnvironmentAdminUserDetailResult> createFusionEnvironmentAdminUserDetails,

            ImmutableDictionary<string, string> definedTags,

            string displayName,

            string dnsPrefix,

            string domainId,

            ImmutableDictionary<string, string> freeformTags,

            string fusionEnvironmentFamilyId,

            string fusionEnvironmentId,

            string fusionEnvironmentType,

            string id,

            string idcsDomainUrl,

            bool isBreakGlassEnabled,

            string kmsKeyId,

            ImmutableArray<Outputs.GetFusionEnvironmentKmsKeyInfoResult> kmsKeyInfos,

            string lifecycleDetails,

            string lockboxId,

            ImmutableArray<Outputs.GetFusionEnvironmentMaintenancePolicyResult> maintenancePolicies,

            string publicUrl,

            ImmutableArray<Outputs.GetFusionEnvironmentRefreshResult> refreshes,

            ImmutableArray<Outputs.GetFusionEnvironmentRuleResult> rules,

            string state,

            ImmutableArray<string> subscriptionIds,

            string systemName,

            string timeCreated,

            string timeUpcomingMaintenance,

            string timeUpdated,

            string version)
        {
            AdditionalLanguagePacks = additionalLanguagePacks;
            AppliedPatchBundles = appliedPatchBundles;
            CompartmentId = compartmentId;
            CreateFusionEnvironmentAdminUserDetails = createFusionEnvironmentAdminUserDetails;
            DefinedTags = definedTags;
            DisplayName = displayName;
            DnsPrefix = dnsPrefix;
            DomainId = domainId;
            FreeformTags = freeformTags;
            FusionEnvironmentFamilyId = fusionEnvironmentFamilyId;
            FusionEnvironmentId = fusionEnvironmentId;
            FusionEnvironmentType = fusionEnvironmentType;
            Id = id;
            IdcsDomainUrl = idcsDomainUrl;
            IsBreakGlassEnabled = isBreakGlassEnabled;
            KmsKeyId = kmsKeyId;
            KmsKeyInfos = kmsKeyInfos;
            LifecycleDetails = lifecycleDetails;
            LockboxId = lockboxId;
            MaintenancePolicies = maintenancePolicies;
            PublicUrl = publicUrl;
            Refreshes = refreshes;
            Rules = rules;
            State = state;
            SubscriptionIds = subscriptionIds;
            SystemName = systemName;
            TimeCreated = timeCreated;
            TimeUpcomingMaintenance = timeUpcomingMaintenance;
            TimeUpdated = timeUpdated;
            Version = version;
        }
    }
}
