// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Functions
{
    public static class GetPbfListingTriggers
    {
        /// <summary>
        /// This data source provides the list of Pbf Listing Triggers in Oracle Cloud Infrastructure Functions service.
        /// 
        /// Returns a list of Triggers.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testPbfListingTriggers = Oci.Functions.GetPbfListingTriggers.Invoke(new()
        ///     {
        ///         Name = @var.Pbf_listing_trigger_name,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetPbfListingTriggersResult> InvokeAsync(GetPbfListingTriggersArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPbfListingTriggersResult>("oci:Functions/getPbfListingTriggers:getPbfListingTriggers", args ?? new GetPbfListingTriggersArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Pbf Listing Triggers in Oracle Cloud Infrastructure Functions service.
        /// 
        /// Returns a list of Triggers.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testPbfListingTriggers = Oci.Functions.GetPbfListingTriggers.Invoke(new()
        ///     {
        ///         Name = @var.Pbf_listing_trigger_name,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetPbfListingTriggersResult> Invoke(GetPbfListingTriggersInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPbfListingTriggersResult>("oci:Functions/getPbfListingTriggers:getPbfListingTriggers", args ?? new GetPbfListingTriggersInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPbfListingTriggersArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetPbfListingTriggersFilterArgs>? _filters;
        public List<Inputs.GetPbfListingTriggersFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetPbfListingTriggersFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only resources that match the service trigger source of a PBF.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        public GetPbfListingTriggersArgs()
        {
        }
        public static new GetPbfListingTriggersArgs Empty => new GetPbfListingTriggersArgs();
    }

    public sealed class GetPbfListingTriggersInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetPbfListingTriggersFilterInputArgs>? _filters;
        public InputList<Inputs.GetPbfListingTriggersFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetPbfListingTriggersFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only resources that match the service trigger source of a PBF.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetPbfListingTriggersInvokeArgs()
        {
        }
        public static new GetPbfListingTriggersInvokeArgs Empty => new GetPbfListingTriggersInvokeArgs();
    }


    [OutputType]
    public sealed class GetPbfListingTriggersResult
    {
        public readonly ImmutableArray<Outputs.GetPbfListingTriggersFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A brief descriptive name for the PBF trigger.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The list of triggers_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPbfListingTriggersTriggersCollectionResult> TriggersCollections;

        [OutputConstructor]
        private GetPbfListingTriggersResult(
            ImmutableArray<Outputs.GetPbfListingTriggersFilterResult> filters,

            string id,

            string? name,

            ImmutableArray<Outputs.GetPbfListingTriggersTriggersCollectionResult> triggersCollections)
        {
            Filters = filters;
            Id = id;
            Name = name;
            TriggersCollections = triggersCollections;
        }
    }
}
