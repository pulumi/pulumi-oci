// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Functions
{
    public static class GetPbfListingVersions
    {
        /// <summary>
        /// This data source provides the list of Pbf Listing Versions in Oracle Cloud Infrastructure Functions service.
        /// 
        /// Fetches a wrapped list of all Pre-built Function(PBF) Listing versions. Returns a PbfListingVersionCollection 
        /// containing an array of PbfListingVersionSummary response models.
        /// 
        /// Note that the PbfListingIdentifier must be provided as a query parameter, otherwise an exception shall 
        /// be thrown.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testPbfListingVersions = Oci.Functions.GetPbfListingVersions.Invoke(new()
        ///     {
        ///         PbfListingId = testPbfListing.Id,
        ///         IsCurrentVersion = pbfListingVersionIsCurrentVersion,
        ///         Name = pbfListingVersionName,
        ///         PbfListingVersionId = testPbfListingVersion.Id,
        ///         State = pbfListingVersionState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetPbfListingVersionsResult> InvokeAsync(GetPbfListingVersionsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPbfListingVersionsResult>("oci:Functions/getPbfListingVersions:getPbfListingVersions", args ?? new GetPbfListingVersionsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Pbf Listing Versions in Oracle Cloud Infrastructure Functions service.
        /// 
        /// Fetches a wrapped list of all Pre-built Function(PBF) Listing versions. Returns a PbfListingVersionCollection 
        /// containing an array of PbfListingVersionSummary response models.
        /// 
        /// Note that the PbfListingIdentifier must be provided as a query parameter, otherwise an exception shall 
        /// be thrown.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testPbfListingVersions = Oci.Functions.GetPbfListingVersions.Invoke(new()
        ///     {
        ///         PbfListingId = testPbfListing.Id,
        ///         IsCurrentVersion = pbfListingVersionIsCurrentVersion,
        ///         Name = pbfListingVersionName,
        ///         PbfListingVersionId = testPbfListingVersion.Id,
        ///         State = pbfListingVersionState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetPbfListingVersionsResult> Invoke(GetPbfListingVersionsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPbfListingVersionsResult>("oci:Functions/getPbfListingVersions:getPbfListingVersions", args ?? new GetPbfListingVersionsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Pbf Listing Versions in Oracle Cloud Infrastructure Functions service.
        /// 
        /// Fetches a wrapped list of all Pre-built Function(PBF) Listing versions. Returns a PbfListingVersionCollection 
        /// containing an array of PbfListingVersionSummary response models.
        /// 
        /// Note that the PbfListingIdentifier must be provided as a query parameter, otherwise an exception shall 
        /// be thrown.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testPbfListingVersions = Oci.Functions.GetPbfListingVersions.Invoke(new()
        ///     {
        ///         PbfListingId = testPbfListing.Id,
        ///         IsCurrentVersion = pbfListingVersionIsCurrentVersion,
        ///         Name = pbfListingVersionName,
        ///         PbfListingVersionId = testPbfListingVersion.Id,
        ///         State = pbfListingVersionState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetPbfListingVersionsResult> Invoke(GetPbfListingVersionsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetPbfListingVersionsResult>("oci:Functions/getPbfListingVersions:getPbfListingVersions", args ?? new GetPbfListingVersionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPbfListingVersionsArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetPbfListingVersionsFilterArgs>? _filters;
        public List<Inputs.GetPbfListingVersionsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetPbfListingVersionsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Matches the current version (the most recently added version with an Active  lifecycleState) associated with a PbfListing.
        /// </summary>
        [Input("isCurrentVersion")]
        public bool? IsCurrentVersion { get; set; }

        /// <summary>
        /// Matches a PbfListingVersion based on a provided semantic version name for a PbfListingVersion.  Each PbfListingVersion name is unique with respect to its associated PbfListing.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// unique PbfListing identifier
        /// </summary>
        [Input("pbfListingId", required: true)]
        public string PbfListingId { get; set; } = null!;

        /// <summary>
        /// unique PbfListingVersion identifier
        /// </summary>
        [Input("pbfListingVersionId")]
        public string? PbfListingVersionId { get; set; }

        /// <summary>
        /// A filter to return only resources their lifecycleState matches the given lifecycleState.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetPbfListingVersionsArgs()
        {
        }
        public static new GetPbfListingVersionsArgs Empty => new GetPbfListingVersionsArgs();
    }

    public sealed class GetPbfListingVersionsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetPbfListingVersionsFilterInputArgs>? _filters;
        public InputList<Inputs.GetPbfListingVersionsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetPbfListingVersionsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Matches the current version (the most recently added version with an Active  lifecycleState) associated with a PbfListing.
        /// </summary>
        [Input("isCurrentVersion")]
        public Input<bool>? IsCurrentVersion { get; set; }

        /// <summary>
        /// Matches a PbfListingVersion based on a provided semantic version name for a PbfListingVersion.  Each PbfListingVersion name is unique with respect to its associated PbfListing.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// unique PbfListing identifier
        /// </summary>
        [Input("pbfListingId", required: true)]
        public Input<string> PbfListingId { get; set; } = null!;

        /// <summary>
        /// unique PbfListingVersion identifier
        /// </summary>
        [Input("pbfListingVersionId")]
        public Input<string>? PbfListingVersionId { get; set; }

        /// <summary>
        /// A filter to return only resources their lifecycleState matches the given lifecycleState.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetPbfListingVersionsInvokeArgs()
        {
        }
        public static new GetPbfListingVersionsInvokeArgs Empty => new GetPbfListingVersionsInvokeArgs();
    }


    [OutputType]
    public sealed class GetPbfListingVersionsResult
    {
        public readonly ImmutableArray<Outputs.GetPbfListingVersionsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool? IsCurrentVersion;
        /// <summary>
        /// A brief descriptive name for the PBF trigger.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The OCID of the PbfListing this resource version belongs to.
        /// </summary>
        public readonly string PbfListingId;
        public readonly string? PbfListingVersionId;
        /// <summary>
        /// The list of pbf_listing_versions_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPbfListingVersionsPbfListingVersionsCollectionResult> PbfListingVersionsCollections;
        /// <summary>
        /// The current state of the PBF resource.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetPbfListingVersionsResult(
            ImmutableArray<Outputs.GetPbfListingVersionsFilterResult> filters,

            string id,

            bool? isCurrentVersion,

            string? name,

            string pbfListingId,

            string? pbfListingVersionId,

            ImmutableArray<Outputs.GetPbfListingVersionsPbfListingVersionsCollectionResult> pbfListingVersionsCollections,

            string? state)
        {
            Filters = filters;
            Id = id;
            IsCurrentVersion = isCurrentVersion;
            Name = name;
            PbfListingId = pbfListingId;
            PbfListingVersionId = pbfListingVersionId;
            PbfListingVersionsCollections = pbfListingVersionsCollections;
            State = state;
        }
    }
}
