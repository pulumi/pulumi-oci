// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Functions.Outputs
{

    [OutputType]
    public sealed class GetFusionEnvironmentRefreshActivitiesRefreshActivityCollectionItemResult
    {
        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// unique FusionEnvironment identifier
        /// </summary>
        public readonly string? FusionEnvironmentId;
        /// <summary>
        /// The unique identifier (OCID) of the refresh activity. Can't be changed after creation.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        public readonly string? LifecycleDetails;
        public readonly string? RefreshActivityId;
        /// <summary>
        /// Details of refresh investigation information, each item represents a different issue.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFusionEnvironmentRefreshActivitiesRefreshActivityCollectionItemRefreshIssueDetailsListResult> RefreshIssueDetailsLists;
        /// <summary>
        /// Service availability / impact during refresh activity execution up down
        /// </summary>
        public readonly string? ServiceAvailability;
        /// <summary>
        /// The OCID of the Fusion environment that is the source environment for the refresh.
        /// </summary>
        public readonly string? SourceFusionEnvironmentId;
        /// <summary>
        /// A filter that returns all resources that match the specified status
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// The time the refresh activity record was created. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string? TimeAccepted;
        /// <summary>
        /// The time the refresh activity is scheduled to end. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string? TimeExpectedFinish;
        /// <summary>
        /// The time the refresh activity actually completed / cancelled / failed. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string? TimeFinished;
        /// <summary>
        /// The date and time of the most recent source environment backup used for the environment refresh.
        /// </summary>
        public readonly string? TimeOfRestorationPoint;
        /// <summary>
        /// The time the refresh activity record was updated. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string? TimeUpdated;

        [OutputConstructor]
        private GetFusionEnvironmentRefreshActivitiesRefreshActivityCollectionItemResult(
            string? displayName,

            string? fusionEnvironmentId,

            string? id,

            string? lifecycleDetails,

            string? refreshActivityId,

            ImmutableArray<Outputs.GetFusionEnvironmentRefreshActivitiesRefreshActivityCollectionItemRefreshIssueDetailsListResult> refreshIssueDetailsLists,

            string? serviceAvailability,

            string? sourceFusionEnvironmentId,

            string? state,

            string? timeAccepted,

            string? timeExpectedFinish,

            string? timeFinished,

            string? timeOfRestorationPoint,

            string? timeUpdated)
        {
            DisplayName = displayName;
            FusionEnvironmentId = fusionEnvironmentId;
            Id = id;
            LifecycleDetails = lifecycleDetails;
            RefreshActivityId = refreshActivityId;
            RefreshIssueDetailsLists = refreshIssueDetailsLists;
            ServiceAvailability = serviceAvailability;
            SourceFusionEnvironmentId = sourceFusionEnvironmentId;
            State = state;
            TimeAccepted = timeAccepted;
            TimeExpectedFinish = timeExpectedFinish;
            TimeFinished = timeFinished;
            TimeOfRestorationPoint = timeOfRestorationPoint;
            TimeUpdated = timeUpdated;
        }
    }
}
