// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Functions.Outputs
{

    [OutputType]
    public sealed class GetFusionEnvironmentsFusionEnvironmentCollectionItemResult
    {
        /// <summary>
        /// Language packs
        /// </summary>
        public readonly ImmutableArray<string> AdditionalLanguagePacks;
        /// <summary>
        /// Patch bundle names
        /// </summary>
        public readonly ImmutableArray<string> AppliedPatchBundles;
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        public readonly string CompartmentId;
        public readonly ImmutableArray<Outputs.GetFusionEnvironmentsFusionEnvironmentCollectionItemCreateFusionEnvironmentAdminUserDetailResult> CreateFusionEnvironmentAdminUserDetails;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// DNS prefix
        /// </summary>
        public readonly string DnsPrefix;
        /// <summary>
        /// The IDCS domain created for the fusion instance
        /// </summary>
        public readonly string DomainId;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The ID of the fusion environment family in which to list resources.
        /// </summary>
        public readonly string FusionEnvironmentFamilyId;
        /// <summary>
        /// Type of the FusionEnvironment.
        /// </summary>
        public readonly string FusionEnvironmentType;
        /// <summary>
        /// Unique identifier that is immutable on creation
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The IDCS Domain URL
        /// </summary>
        public readonly string IdcsDomainUrl;
        /// <summary>
        /// If it's true, then the Break Glass feature is enabled
        /// </summary>
        public readonly bool IsBreakGlassEnabled;
        /// <summary>
        /// BYOK key id
        /// </summary>
        public readonly string KmsKeyId;
        /// <summary>
        /// BYOK key info
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFusionEnvironmentsFusionEnvironmentCollectionItemKmsKeyInfoResult> KmsKeyInfos;
        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// The lockbox Id of this fusion environment. If there's no lockbox id, this field will be null
        /// </summary>
        public readonly string LockboxId;
        /// <summary>
        /// The policy that specifies the maintenance and upgrade preferences for an environment. For more information about the options, see [Understanding Environment Maintenance](https://docs.cloud.oracle.com/iaas/Content/fusion-applications/plan-environment-family.htm#about-env-maintenance).
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFusionEnvironmentsFusionEnvironmentCollectionItemMaintenancePolicyResult> MaintenancePolicies;
        /// <summary>
        /// Public URL
        /// </summary>
        public readonly string PublicUrl;
        /// <summary>
        /// Describes a refresh of a fusion environment
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFusionEnvironmentsFusionEnvironmentCollectionItemRefreshResult> Refreshes;
        /// <summary>
        /// Network Access Control Rules
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFusionEnvironmentsFusionEnvironmentCollectionItemRuleResult> Rules;
        /// <summary>
        /// A filter that returns all resources that match the specified lifecycle state.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// List of subscription IDs.
        /// </summary>
        public readonly ImmutableArray<string> SubscriptionIds;
        /// <summary>
        /// Environment Specific Guid/ System Name
        /// </summary>
        public readonly string SystemName;
        /// <summary>
        /// The time the the FusionEnvironment was created. An RFC3339 formatted datetime string
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The next maintenance for this environment
        /// </summary>
        public readonly string TimeUpcomingMaintenance;
        /// <summary>
        /// The time the FusionEnvironment was updated. An RFC3339 formatted datetime string
        /// </summary>
        public readonly string TimeUpdated;
        /// <summary>
        /// Version of Fusion Apps used by this environment
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private GetFusionEnvironmentsFusionEnvironmentCollectionItemResult(
            ImmutableArray<string> additionalLanguagePacks,

            ImmutableArray<string> appliedPatchBundles,

            string compartmentId,

            ImmutableArray<Outputs.GetFusionEnvironmentsFusionEnvironmentCollectionItemCreateFusionEnvironmentAdminUserDetailResult> createFusionEnvironmentAdminUserDetails,

            ImmutableDictionary<string, string> definedTags,

            string displayName,

            string dnsPrefix,

            string domainId,

            ImmutableDictionary<string, string> freeformTags,

            string fusionEnvironmentFamilyId,

            string fusionEnvironmentType,

            string id,

            string idcsDomainUrl,

            bool isBreakGlassEnabled,

            string kmsKeyId,

            ImmutableArray<Outputs.GetFusionEnvironmentsFusionEnvironmentCollectionItemKmsKeyInfoResult> kmsKeyInfos,

            string lifecycleDetails,

            string lockboxId,

            ImmutableArray<Outputs.GetFusionEnvironmentsFusionEnvironmentCollectionItemMaintenancePolicyResult> maintenancePolicies,

            string publicUrl,

            ImmutableArray<Outputs.GetFusionEnvironmentsFusionEnvironmentCollectionItemRefreshResult> refreshes,

            ImmutableArray<Outputs.GetFusionEnvironmentsFusionEnvironmentCollectionItemRuleResult> rules,

            string state,

            ImmutableArray<string> subscriptionIds,

            string systemName,

            string timeCreated,

            string timeUpcomingMaintenance,

            string timeUpdated,

            string version)
        {
            AdditionalLanguagePacks = additionalLanguagePacks;
            AppliedPatchBundles = appliedPatchBundles;
            CompartmentId = compartmentId;
            CreateFusionEnvironmentAdminUserDetails = createFusionEnvironmentAdminUserDetails;
            DefinedTags = definedTags;
            DisplayName = displayName;
            DnsPrefix = dnsPrefix;
            DomainId = domainId;
            FreeformTags = freeformTags;
            FusionEnvironmentFamilyId = fusionEnvironmentFamilyId;
            FusionEnvironmentType = fusionEnvironmentType;
            Id = id;
            IdcsDomainUrl = idcsDomainUrl;
            IsBreakGlassEnabled = isBreakGlassEnabled;
            KmsKeyId = kmsKeyId;
            KmsKeyInfos = kmsKeyInfos;
            LifecycleDetails = lifecycleDetails;
            LockboxId = lockboxId;
            MaintenancePolicies = maintenancePolicies;
            PublicUrl = publicUrl;
            Refreshes = refreshes;
            Rules = rules;
            State = state;
            SubscriptionIds = subscriptionIds;
            SystemName = systemName;
            TimeCreated = timeCreated;
            TimeUpcomingMaintenance = timeUpcomingMaintenance;
            TimeUpdated = timeUpdated;
            Version = version;
        }
    }
}
