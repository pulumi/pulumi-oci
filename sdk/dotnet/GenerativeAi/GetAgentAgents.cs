// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.GenerativeAi
{
    public static class GetAgentAgents
    {
        /// <summary>
        /// This data source provides the list of Agents in Oracle Cloud Infrastructure Generative Ai Agent service.
        /// 
        /// **ListAgents** 
        /// 
        /// Gets a list of agents.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAgents = Oci.GenerativeAi.GetAgentAgents.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = agentDisplayName,
        ///         State = agentState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetAgentAgentsResult> InvokeAsync(GetAgentAgentsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAgentAgentsResult>("oci:GenerativeAi/getAgentAgents:getAgentAgents", args ?? new GetAgentAgentsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Agents in Oracle Cloud Infrastructure Generative Ai Agent service.
        /// 
        /// **ListAgents** 
        /// 
        /// Gets a list of agents.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAgents = Oci.GenerativeAi.GetAgentAgents.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = agentDisplayName,
        ///         State = agentState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAgentAgentsResult> Invoke(GetAgentAgentsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAgentAgentsResult>("oci:GenerativeAi/getAgentAgents:getAgentAgents", args ?? new GetAgentAgentsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAgentAgentsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given display name exactly.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetAgentAgentsFilterArgs>? _filters;
        public List<Inputs.GetAgentAgentsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetAgentAgentsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetAgentAgentsArgs()
        {
        }
        public static new GetAgentAgentsArgs Empty => new GetAgentAgentsArgs();
    }

    public sealed class GetAgentAgentsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given display name exactly.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetAgentAgentsFilterInputArgs>? _filters;
        public InputList<Inputs.GetAgentAgentsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetAgentAgentsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetAgentAgentsInvokeArgs()
        {
        }
        public static new GetAgentAgentsInvokeArgs Empty => new GetAgentAgentsInvokeArgs();
    }


    [OutputType]
    public sealed class GetAgentAgentsResult
    {
        /// <summary>
        /// The list of agent_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAgentAgentsAgentCollectionResult> AgentCollections;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetAgentAgentsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The current state of the agent.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetAgentAgentsResult(
            ImmutableArray<Outputs.GetAgentAgentsAgentCollectionResult> agentCollections,

            string? compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetAgentAgentsFilterResult> filters,

            string id,

            string? state)
        {
            AgentCollections = agentCollections;
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            State = state;
        }
    }
}
