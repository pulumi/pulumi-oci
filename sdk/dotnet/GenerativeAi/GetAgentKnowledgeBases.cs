// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.GenerativeAi
{
    public static class GetAgentKnowledgeBases
    {
        /// <summary>
        /// This data source provides the list of Knowledge Bases in Oracle Cloud Infrastructure Generative Ai Agent service.
        /// 
        /// **ListKnowledgeBases**
        /// 
        /// Gets a list of knowledge bases.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testKnowledgeBases = Oci.GenerativeAi.GetAgentKnowledgeBases.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = knowledgeBaseDisplayName,
        ///         State = knowledgeBaseState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetAgentKnowledgeBasesResult> InvokeAsync(GetAgentKnowledgeBasesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAgentKnowledgeBasesResult>("oci:GenerativeAi/getAgentKnowledgeBases:getAgentKnowledgeBases", args ?? new GetAgentKnowledgeBasesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Knowledge Bases in Oracle Cloud Infrastructure Generative Ai Agent service.
        /// 
        /// **ListKnowledgeBases**
        /// 
        /// Gets a list of knowledge bases.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testKnowledgeBases = Oci.GenerativeAi.GetAgentKnowledgeBases.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = knowledgeBaseDisplayName,
        ///         State = knowledgeBaseState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAgentKnowledgeBasesResult> Invoke(GetAgentKnowledgeBasesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAgentKnowledgeBasesResult>("oci:GenerativeAi/getAgentKnowledgeBases:getAgentKnowledgeBases", args ?? new GetAgentKnowledgeBasesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Knowledge Bases in Oracle Cloud Infrastructure Generative Ai Agent service.
        /// 
        /// **ListKnowledgeBases**
        /// 
        /// Gets a list of knowledge bases.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testKnowledgeBases = Oci.GenerativeAi.GetAgentKnowledgeBases.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = knowledgeBaseDisplayName,
        ///         State = knowledgeBaseState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAgentKnowledgeBasesResult> Invoke(GetAgentKnowledgeBasesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAgentKnowledgeBasesResult>("oci:GenerativeAi/getAgentKnowledgeBases:getAgentKnowledgeBases", args ?? new GetAgentKnowledgeBasesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAgentKnowledgeBasesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given display name exactly.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetAgentKnowledgeBasesFilterArgs>? _filters;
        public List<Inputs.GetAgentKnowledgeBasesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetAgentKnowledgeBasesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetAgentKnowledgeBasesArgs()
        {
        }
        public static new GetAgentKnowledgeBasesArgs Empty => new GetAgentKnowledgeBasesArgs();
    }

    public sealed class GetAgentKnowledgeBasesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given display name exactly.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetAgentKnowledgeBasesFilterInputArgs>? _filters;
        public InputList<Inputs.GetAgentKnowledgeBasesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetAgentKnowledgeBasesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetAgentKnowledgeBasesInvokeArgs()
        {
        }
        public static new GetAgentKnowledgeBasesInvokeArgs Empty => new GetAgentKnowledgeBasesInvokeArgs();
    }


    [OutputType]
    public sealed class GetAgentKnowledgeBasesResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetAgentKnowledgeBasesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of knowledge_base_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAgentKnowledgeBasesKnowledgeBaseCollectionResult> KnowledgeBaseCollections;
        /// <summary>
        /// The current state of the knowledge base.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetAgentKnowledgeBasesResult(
            string? compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetAgentKnowledgeBasesFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetAgentKnowledgeBasesKnowledgeBaseCollectionResult> knowledgeBaseCollections,

            string? state)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            KnowledgeBaseCollections = knowledgeBaseCollections;
            State = state;
        }
    }
}
