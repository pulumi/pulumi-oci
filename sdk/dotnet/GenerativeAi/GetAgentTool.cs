// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.GenerativeAi
{
    public static class GetAgentTool
    {
        /// <summary>
        /// This data source provides details about a specific Tool resource in Oracle Cloud Infrastructure Generative Ai Agent service.
        /// 
        /// Gets information about a tool.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testTool = Oci.GenerativeAi.GetAgentTool.Invoke(new()
        ///     {
        ///         ToolId = testToolOciGenerativeAiAgentTool.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetAgentToolResult> InvokeAsync(GetAgentToolArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAgentToolResult>("oci:GenerativeAi/getAgentTool:getAgentTool", args ?? new GetAgentToolArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Tool resource in Oracle Cloud Infrastructure Generative Ai Agent service.
        /// 
        /// Gets information about a tool.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testTool = Oci.GenerativeAi.GetAgentTool.Invoke(new()
        ///     {
        ///         ToolId = testToolOciGenerativeAiAgentTool.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAgentToolResult> Invoke(GetAgentToolInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAgentToolResult>("oci:GenerativeAi/getAgentTool:getAgentTool", args ?? new GetAgentToolInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Tool resource in Oracle Cloud Infrastructure Generative Ai Agent service.
        /// 
        /// Gets information about a tool.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testTool = Oci.GenerativeAi.GetAgentTool.Invoke(new()
        ///     {
        ///         ToolId = testToolOciGenerativeAiAgentTool.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAgentToolResult> Invoke(GetAgentToolInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAgentToolResult>("oci:GenerativeAi/getAgentTool:getAgentTool", args ?? new GetAgentToolInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAgentToolArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Tool.
        /// </summary>
        [Input("toolId", required: true)]
        public string ToolId { get; set; } = null!;

        public GetAgentToolArgs()
        {
        }
        public static new GetAgentToolArgs Empty => new GetAgentToolArgs();
    }

    public sealed class GetAgentToolInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Tool.
        /// </summary>
        [Input("toolId", required: true)]
        public Input<string> ToolId { get; set; } = null!;

        public GetAgentToolInvokeArgs()
        {
        }
        public static new GetAgentToolInvokeArgs Empty => new GetAgentToolInvokeArgs();
    }


    [OutputType]
    public sealed class GetAgentToolResult
    {
        /// <summary>
        /// The OCID of the agent that this Tool is attached to.
        /// </summary>
        public readonly string AgentId;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// A description of the function.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Tool.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Key-value pairs to allow additional configurations.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Metadata;
        /// <summary>
        /// The current state of the Tool.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// The date and time the Tool was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The date and time the Tool was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        public readonly string TimeUpdated;
        /// <summary>
        /// The configuration and type of Tool.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAgentToolToolConfigResult> ToolConfigs;
        public readonly string ToolId;

        [OutputConstructor]
        private GetAgentToolResult(
            string agentId,

            string compartmentId,

            ImmutableDictionary<string, string> definedTags,

            string description,

            string displayName,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            ImmutableDictionary<string, string> metadata,

            string state,

            ImmutableDictionary<string, string> systemTags,

            string timeCreated,

            string timeUpdated,

            ImmutableArray<Outputs.GetAgentToolToolConfigResult> toolConfigs,

            string toolId)
        {
            AgentId = agentId;
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            Metadata = metadata;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            ToolConfigs = toolConfigs;
            ToolId = toolId;
        }
    }
}
