// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.GenerativeAi
{
    public static class GetEndpoint
    {
        /// <summary>
        /// This data source provides details about a specific Endpoint resource in Oracle Cloud Infrastructure Generative AI service.
        /// 
        /// Gets information about an endpoint.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testEndpoint = Oci.GenerativeAi.GetEndpoint.Invoke(new()
        ///     {
        ///         EndpointId = testEndpointOciGenerativeAiEndpoint.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetEndpointResult> InvokeAsync(GetEndpointArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEndpointResult>("oci:GenerativeAi/getEndpoint:getEndpoint", args ?? new GetEndpointArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Endpoint resource in Oracle Cloud Infrastructure Generative AI service.
        /// 
        /// Gets information about an endpoint.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testEndpoint = Oci.GenerativeAi.GetEndpoint.Invoke(new()
        ///     {
        ///         EndpointId = testEndpointOciGenerativeAiEndpoint.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetEndpointResult> Invoke(GetEndpointInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEndpointResult>("oci:GenerativeAi/getEndpoint:getEndpoint", args ?? new GetEndpointInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEndpointArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the endpoint.
        /// </summary>
        [Input("endpointId", required: true)]
        public string EndpointId { get; set; } = null!;

        public GetEndpointArgs()
        {
        }
        public static new GetEndpointArgs Empty => new GetEndpointArgs();
    }

    public sealed class GetEndpointInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the endpoint.
        /// </summary>
        [Input("endpointId", required: true)]
        public Input<string> EndpointId { get; set; } = null!;

        public GetEndpointInvokeArgs()
        {
        }
        public static new GetEndpointInvokeArgs Empty => new GetEndpointInvokeArgs();
    }


    [OutputType]
    public sealed class GetEndpointResult
    {
        public readonly string CompartmentId;
        public readonly ImmutableArray<Outputs.GetEndpointContentModerationConfigResult> ContentModerationConfigs;
        public readonly string DedicatedAiClusterId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        public readonly string Description;
        public readonly string DisplayName;
        public readonly string EndpointId;
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// An OCID that uniquely identifies this endpoint resource.
        /// </summary>
        public readonly string Id;
        public readonly string LifecycleDetails;
        /// <summary>
        /// The OCID of the model that's used to create this endpoint.
        /// </summary>
        public readonly string ModelId;
        /// <summary>
        /// The current state of the endpoint.
        /// </summary>
        public readonly string State;
        public readonly ImmutableDictionary<string, object> SystemTags;
        /// <summary>
        /// The date and time that the endpoint was created in the format of an RFC3339 datetime string.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The date and time that the endpoint was updated in the format of an RFC3339 datetime string.
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetEndpointResult(
            string compartmentId,

            ImmutableArray<Outputs.GetEndpointContentModerationConfigResult> contentModerationConfigs,

            string dedicatedAiClusterId,

            ImmutableDictionary<string, object> definedTags,

            string description,

            string displayName,

            string endpointId,

            ImmutableDictionary<string, object> freeformTags,

            string id,

            string lifecycleDetails,

            string modelId,

            string state,

            ImmutableDictionary<string, object> systemTags,

            string timeCreated,

            string timeUpdated)
        {
            CompartmentId = compartmentId;
            ContentModerationConfigs = contentModerationConfigs;
            DedicatedAiClusterId = dedicatedAiClusterId;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            EndpointId = endpointId;
            FreeformTags = freeformTags;
            Id = id;
            LifecycleDetails = lifecycleDetails;
            ModelId = modelId;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
