// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.GenerativeAi.Outputs
{

    [OutputType]
    public sealed class GetAgentKnowledgeBasesKnowledgeBaseCollectionItemIndexConfigResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the OpenSearch Cluster.
        /// </summary>
        public readonly string ClusterId;
        /// <summary>
        /// **DatabaseConnection**
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAgentKnowledgeBasesKnowledgeBaseCollectionItemIndexConfigDatabaseConnectionResult> DatabaseConnections;
        /// <summary>
        /// Array of Database functions to be used.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAgentKnowledgeBasesKnowledgeBaseCollectionItemIndexConfigDatabaseFunctionResult> DatabaseFunctions;
        /// <summary>
        /// The type of index. The allowed values are:
        /// * `DEFAULT_INDEX_CONFIG`: DefaultIndexConfig allows the service to create and manage vector store on behalf of the customer.
        /// * `OCI_OPEN_SEARCH_INDEX_CONFIG`: OciOpenSearchIndexConfig allows customer to configure their OpenSearch cluster.
        /// * `OCI_DATABASE_CONFIG`: OciDatabaseConfig allows customer to configure their Database.
        /// </summary>
        public readonly string IndexConfigType;
        /// <summary>
        /// Index configuration for open search.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAgentKnowledgeBasesKnowledgeBaseCollectionItemIndexConfigIndexResult> Indexes;
        /// <summary>
        /// **SecretDetail**
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAgentKnowledgeBasesKnowledgeBaseCollectionItemIndexConfigSecretDetailResult> SecretDetails;
        /// <summary>
        /// Whether to enable Hybrid search in service managed OpenSearch.
        /// </summary>
        public readonly bool ShouldEnableHybridSearch;

        [OutputConstructor]
        private GetAgentKnowledgeBasesKnowledgeBaseCollectionItemIndexConfigResult(
            string clusterId,

            ImmutableArray<Outputs.GetAgentKnowledgeBasesKnowledgeBaseCollectionItemIndexConfigDatabaseConnectionResult> databaseConnections,

            ImmutableArray<Outputs.GetAgentKnowledgeBasesKnowledgeBaseCollectionItemIndexConfigDatabaseFunctionResult> databaseFunctions,

            string indexConfigType,

            ImmutableArray<Outputs.GetAgentKnowledgeBasesKnowledgeBaseCollectionItemIndexConfigIndexResult> indexes,

            ImmutableArray<Outputs.GetAgentKnowledgeBasesKnowledgeBaseCollectionItemIndexConfigSecretDetailResult> secretDetails,

            bool shouldEnableHybridSearch)
        {
            ClusterId = clusterId;
            DatabaseConnections = databaseConnections;
            DatabaseFunctions = databaseFunctions;
            IndexConfigType = indexConfigType;
            Indexes = indexes;
            SecretDetails = secretDetails;
            ShouldEnableHybridSearch = shouldEnableHybridSearch;
        }
    }
}
