// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.GenericArtifactsContent
{
    public static class GetArtifactByPath
    {
        /// <summary>
        /// This data source provides details about a specific Artifact By Path resource in Oracle Cloud Infrastructure Generic Artifacts Content service.
        /// 
        /// Get generic artifact content.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testArtifactByPath = Oci.GenericArtifactsContent.GetArtifactByPath.Invoke(new()
        ///     {
        ///         ArtifactPath = artifactByPathArtifactPath,
        ///         RepositoryId = testRepository.Id,
        ///         Version = artifactByPathVersion,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetArtifactByPathResult> InvokeAsync(GetArtifactByPathArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetArtifactByPathResult>("oci:GenericArtifactsContent/getArtifactByPath:getArtifactByPath", args ?? new GetArtifactByPathArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Artifact By Path resource in Oracle Cloud Infrastructure Generic Artifacts Content service.
        /// 
        /// Get generic artifact content.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testArtifactByPath = Oci.GenericArtifactsContent.GetArtifactByPath.Invoke(new()
        ///     {
        ///         ArtifactPath = artifactByPathArtifactPath,
        ///         RepositoryId = testRepository.Id,
        ///         Version = artifactByPathVersion,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetArtifactByPathResult> Invoke(GetArtifactByPathInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetArtifactByPathResult>("oci:GenericArtifactsContent/getArtifactByPath:getArtifactByPath", args ?? new GetArtifactByPathInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetArtifactByPathArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The generic artifact path.  Example: `foo/bar/baz`
        /// </summary>
        [Input("artifactPath", required: true)]
        public string ArtifactPath { get; set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the repository.  Example: `ocid1.repository.oc1..exampleuniqueID`
        /// </summary>
        [Input("repositoryId", required: true)]
        public string RepositoryId { get; set; } = null!;

        /// <summary>
        /// The generic artifact version.  Example: `1.1.2`
        /// </summary>
        [Input("version", required: true)]
        public string Version { get; set; } = null!;

        public GetArtifactByPathArgs()
        {
        }
        public static new GetArtifactByPathArgs Empty => new GetArtifactByPathArgs();
    }

    public sealed class GetArtifactByPathInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The generic artifact path.  Example: `foo/bar/baz`
        /// </summary>
        [Input("artifactPath", required: true)]
        public Input<string> ArtifactPath { get; set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the repository.  Example: `ocid1.repository.oc1..exampleuniqueID`
        /// </summary>
        [Input("repositoryId", required: true)]
        public Input<string> RepositoryId { get; set; } = null!;

        /// <summary>
        /// The generic artifact version.  Example: `1.1.2`
        /// </summary>
        [Input("version", required: true)]
        public Input<string> Version { get; set; } = null!;

        public GetArtifactByPathInvokeArgs()
        {
        }
        public static new GetArtifactByPathInvokeArgs Empty => new GetArtifactByPathInvokeArgs();
    }


    [OutputType]
    public sealed class GetArtifactByPathResult
    {
        public readonly string ArtifactId;
        public readonly string ArtifactPath;
        public readonly string CompartmentId;
        public readonly string Content;
        public readonly ImmutableDictionary<string, object> DefinedTags;
        public readonly string DisplayName;
        public readonly ImmutableDictionary<string, object> FreeformTags;
        public readonly string Id;
        public readonly string RepositoryId;
        public readonly string Sha256;
        public readonly string SizeInBytes;
        public readonly string Source;
        public readonly string State;
        public readonly string TimeCreated;
        public readonly string Version;

        [OutputConstructor]
        private GetArtifactByPathResult(
            string artifactId,

            string artifactPath,

            string compartmentId,

            string content,

            ImmutableDictionary<string, object> definedTags,

            string displayName,

            ImmutableDictionary<string, object> freeformTags,

            string id,

            string repositoryId,

            string sha256,

            string sizeInBytes,

            string source,

            string state,

            string timeCreated,

            string version)
        {
            ArtifactId = artifactId;
            ArtifactPath = artifactPath;
            CompartmentId = compartmentId;
            Content = content;
            DefinedTags = definedTags;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            RepositoryId = repositoryId;
            Sha256 = sha256;
            SizeInBytes = sizeInBytes;
            Source = source;
            State = state;
            TimeCreated = timeCreated;
            Version = version;
        }
    }
}
