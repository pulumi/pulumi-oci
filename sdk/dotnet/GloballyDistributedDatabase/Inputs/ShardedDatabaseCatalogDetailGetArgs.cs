// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.GloballyDistributedDatabase.Inputs
{

    public sealed class ShardedDatabaseCatalogDetailGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("adminPassword", required: true)]
        private Input<string>? _adminPassword;

        /// <summary>
        /// Admin password for the catalog database.
        /// </summary>
        public Input<string>? AdminPassword
        {
            get => _adminPassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _adminPassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud Autonomous Exadata VM Cluster.
        /// </summary>
        [Input("cloudAutonomousVmClusterId", required: true)]
        public Input<string> CloudAutonomousVmClusterId { get; set; } = null!;

        /// <summary>
        /// The compute count for the catalog database. It has to be in multiple of 2.
        /// </summary>
        [Input("computeCount", required: true)]
        public Input<double> ComputeCount { get; set; } = null!;

        /// <summary>
        /// Identifier of the underlying container database.
        /// </summary>
        [Input("containerDatabaseId")]
        public Input<string>? ContainerDatabaseId { get; set; }

        /// <summary>
        /// Identifier of the underlying container database parent.
        /// </summary>
        [Input("containerDatabaseParentId")]
        public Input<string>? ContainerDatabaseParentId { get; set; }

        /// <summary>
        /// The data disk group size to be allocated in GBs for the catalog database.
        /// </summary>
        [Input("dataStorageSizeInGbs", required: true)]
        public Input<double> DataStorageSizeInGbs { get; set; } = null!;

        /// <summary>
        /// Details of encryption key to be used to encrypt data for shards and catalog for sharded database. For system-defined sharding type, all shards have to use same encryptionKeyDetails. For system-defined sharding, if encryptionKeyDetails are not specified for catalog, then Oracle managed key will be used for catalog. For user-defined sharding type, if encryptionKeyDetails are not provided for any shard or catalog, then Oracle managed key will be used for such shard or catalog. For system-defined or user-defined sharding type, if the shard or catalog has a peer in region other than primary shard or catalog region, then make sure to provide virtual vault for such shard or catalog, which is also replicated to peer region (the region where peer or standby shard or catalog exists).
        /// </summary>
        [Input("encryptionKeyDetails")]
        public Input<Inputs.ShardedDatabaseCatalogDetailEncryptionKeyDetailsGetArgs>? EncryptionKeyDetails { get; set; }

        /// <summary>
        /// Determines the auto-scaling mode for the catalog database.
        /// </summary>
        [Input("isAutoScalingEnabled", required: true)]
        public Input<bool> IsAutoScalingEnabled { get; set; } = null!;

        [Input("metadata")]
        private InputMap<string>? _metadata;

        /// <summary>
        /// Additional metadata related to shard's underlying supporting resource.
        /// </summary>
        public InputMap<string> Metadata
        {
            get => _metadata ?? (_metadata = new InputMap<string>());
            set => _metadata = value;
        }

        /// <summary>
        /// Name of the shard.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the peer cloud Autonomous Exadata VM Cluster.
        /// </summary>
        [Input("peerCloudAutonomousVmClusterId")]
        public Input<string>? PeerCloudAutonomousVmClusterId { get; set; }

        /// <summary>
        /// Name of the shard-group to which the shard belongs.
        /// </summary>
        [Input("shardGroup")]
        public Input<string>? ShardGroup { get; set; }

        /// <summary>
        /// Status of shard or catalog or gsm for the sharded database.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Identifier of the underlying supporting resource.
        /// </summary>
        [Input("supportingResourceId")]
        public Input<string>? SupportingResourceId { get; set; }

        /// <summary>
        /// The time the the Sharded Database was created. An RFC3339 formatted datetime string
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The time the ssl certificate associated with shard expires. An RFC3339 formatted datetime string
        /// </summary>
        [Input("timeSslCertificateExpires")]
        public Input<string>? TimeSslCertificateExpires { get; set; }

        /// <summary>
        /// The time the Sharded Database was last updated. An RFC3339 formatted datetime string
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        public ShardedDatabaseCatalogDetailGetArgs()
        {
        }
        public static new ShardedDatabaseCatalogDetailGetArgs Empty => new ShardedDatabaseCatalogDetailGetArgs();
    }
}
