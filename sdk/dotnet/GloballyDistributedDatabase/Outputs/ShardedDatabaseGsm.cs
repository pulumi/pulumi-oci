// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.GloballyDistributedDatabase.Outputs
{

    [OutputType]
    public sealed class ShardedDatabaseGsm
    {
        /// <summary>
        /// The compute amount available to the underlying autonomous database associated with shard.
        /// </summary>
        public readonly double? ComputeCount;
        /// <summary>
        /// The data disk group size to be allocated in GBs.
        /// </summary>
        public readonly double? DataStorageSizeInGbs;
        /// <summary>
        /// Additional metadata related to shard's underlying supporting resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Metadata;
        /// <summary>
        /// Name of the shard.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Status of shard or catalog or gsm for the sharded database.
        /// </summary>
        public readonly string? Status;
        /// <summary>
        /// Identifier of the underlying supporting resource.
        /// </summary>
        public readonly string? SupportingResourceId;
        /// <summary>
        /// The time the the Sharded Database was created. An RFC3339 formatted datetime string
        /// </summary>
        public readonly string? TimeCreated;
        /// <summary>
        /// The time the ssl certificate associated with shard expires. An RFC3339 formatted datetime string
        /// </summary>
        public readonly string? TimeSslCertificateExpires;
        /// <summary>
        /// The time the Sharded Database was last updated. An RFC3339 formatted datetime string
        /// </summary>
        public readonly string? TimeUpdated;

        [OutputConstructor]
        private ShardedDatabaseGsm(
            double? computeCount,

            double? dataStorageSizeInGbs,

            ImmutableDictionary<string, string>? metadata,

            string? name,

            string? status,

            string? supportingResourceId,

            string? timeCreated,

            string? timeSslCertificateExpires,

            string? timeUpdated)
        {
            ComputeCount = computeCount;
            DataStorageSizeInGbs = dataStorageSizeInGbs;
            Metadata = metadata;
            Name = name;
            Status = status;
            SupportingResourceId = supportingResourceId;
            TimeCreated = timeCreated;
            TimeSslCertificateExpires = timeSslCertificateExpires;
            TimeUpdated = timeUpdated;
        }
    }
}
