// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.GloballyDistributedDatabase
{
    /// <summary>
    /// This resource provides the Sharded Database resource in Oracle Cloud Infrastructure Globally Distributed Database service.
    /// 
    /// Creates a Sharded Database.
    /// 
    ///   Patch operation to add, remove or update shards to the sharded database topology. In single patch
    /// operation, multiple shards can be either added, or removed or updated. Combination of inserts, update
    /// and remove in single operation is not allowed.
    /// 
    /// ## Import
    /// 
    /// ShardedDatabases can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:GloballyDistributedDatabase/shardedDatabase:ShardedDatabase test_sharded_database "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:GloballyDistributedDatabase/shardedDatabase:ShardedDatabase")]
    public partial class ShardedDatabase : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Collection of ATP-Dedicated catalogs that needs to be created.
        /// </summary>
        [Output("catalogDetails")]
        public Output<ImmutableArray<Outputs.ShardedDatabaseCatalogDetail>> CatalogDetails { get; private set; } = null!;

        /// <summary>
        /// The character set for the new shard database being created. Use database api ListAutonomousDatabaseCharacterSets to get the list of allowed character set for autonomous dedicated database. See documentation: https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/AutonomousDatabaseCharacterSets/ListAutonomousDatabaseCharacterSets
        /// </summary>
        [Output("characterSet")]
        public Output<string> CharacterSet { get; private set; } = null!;

        /// <summary>
        /// The default number of unique chunks in a shardspace. The value of chunks must be greater than 2 times the size of the largest shardgroup in any shardspace.
        /// </summary>
        [Output("chunks")]
        public Output<int> Chunks { get; private set; } = null!;

        /// <summary>
        /// The certificate common name used in all cloudAutonomousVmClusters for the sharded database topology. Eg. Production. All the clusters used in one sharded database topology shall have same CABundle setup. Valid characterset for clusterCertificateCommonName include uppercase or lowercase letters, numbers, hyphens, underscores, and period.
        /// </summary>
        [Output("clusterCertificateCommonName")]
        public Output<string> ClusterCertificateCommonName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Identifier of the compartment where sharded database is to be created.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) An optional property when incremented triggers Configure Gsms. Could be set to any integer value.
        /// </summary>
        [Output("configureGsmsTrigger")]
        public Output<int> ConfigureGsmsTrigger { get; private set; } = null!;

        /// <summary>
        /// (Updatable) An optional property when incremented triggers Configure Sharding. Could be set to any integer value.
        /// </summary>
        [Output("configureShardingTrigger")]
        public Output<int?> ConfigureShardingTrigger { get; private set; } = null!;

        /// <summary>
        /// Details of sharded database connection String.
        /// </summary>
        [Output("connectionStrings")]
        public Output<ImmutableArray<Outputs.ShardedDatabaseConnectionString>> ConnectionStrings { get; private set; } = null!;

        /// <summary>
        /// The database deployment type.
        /// </summary>
        [Output("dbDeploymentType")]
        public Output<string> DbDeploymentType { get; private set; } = null!;

        /// <summary>
        /// Oracle Database version of the Autonomous Container Database.
        /// </summary>
        [Output("dbVersion")]
        public Output<string> DbVersion { get; private set; } = null!;

        /// <summary>
        /// Possible workload types.
        /// </summary>
        [Output("dbWorkload")]
        public Output<string> DbWorkload { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, string>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Oracle sharded database display name.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) An optional property when incremented triggers Download Gsm Certificate Signing Request. Could be set to any integer value.
        /// </summary>
        [Output("downloadGsmCertificateSigningRequestTrigger")]
        public Output<int?> DownloadGsmCertificateSigningRequestTrigger { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, string>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) An optional property when incremented triggers Generate Gsm Certificate Signing Request. Could be set to any integer value.
        /// </summary>
        [Output("generateGsmCertificateSigningRequestTrigger")]
        public Output<int?> GenerateGsmCertificateSigningRequestTrigger { get; private set; } = null!;

        /// <summary>
        /// (Updatable) An optional property when incremented triggers Generate Wallet. Could be set to any integer value.
        /// </summary>
        [Output("generateWalletTrigger")]
        public Output<int> GenerateWalletTrigger { get; private set; } = null!;

        /// <summary>
        /// (Updatable) An optional property when incremented triggers Get Connection String. Could be set to any integer value.
        /// </summary>
        [Output("getConnectionStringTrigger")]
        public Output<int?> GetConnectionStringTrigger { get; private set; } = null!;

        /// <summary>
        /// Details of GSM instances for the sharded database.
        /// </summary>
        [Output("gsms")]
        public Output<ImmutableArray<Outputs.ShardedDatabaseGsm>> Gsms { get; private set; } = null!;

        [Output("lifecycleState")]
        public Output<string> LifecycleState { get; private set; } = null!;

        /// <summary>
        /// Detailed message for the lifecycle state.
        /// </summary>
        [Output("lifecycleStateDetails")]
        public Output<string> LifecycleStateDetails { get; private set; } = null!;

        /// <summary>
        /// The listener port number for sharded database.
        /// </summary>
        [Output("listenerPort")]
        public Output<int> ListenerPort { get; private set; } = null!;

        /// <summary>
        /// The TLS listener port number for sharded database.
        /// </summary>
        [Output("listenerPortTls")]
        public Output<int> ListenerPortTls { get; private set; } = null!;

        /// <summary>
        /// The national character set for the new shard database being created. Use database api ListAutonomousDatabaseCharacterSets to get the list of allowed national character set for autonomous dedicated database. See documentation: https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/AutonomousDatabaseCharacterSets/ListAutonomousDatabaseCharacterSets
        /// </summary>
        [Output("ncharacterSet")]
        public Output<string> NcharacterSet { get; private set; } = null!;

        /// <summary>
        /// Ons port local for sharded database.
        /// </summary>
        [Output("onsPortLocal")]
        public Output<int> OnsPortLocal { get; private set; } = null!;

        /// <summary>
        /// Ons remote port for sharded database.
        /// </summary>
        [Output("onsPortRemote")]
        public Output<int> OnsPortRemote { get; private set; } = null!;

        /// <summary>
        /// (Updatable)
        /// </summary>
        [Output("patchOperations")]
        public Output<ImmutableArray<Outputs.ShardedDatabasePatchOperation>> PatchOperations { get; private set; } = null!;

        /// <summary>
        /// Unique name prefix for the sharded databases. Only alpha-numeric values are allowed. First character has to be a letter followed by any combination of letter and number.
        /// </summary>
        [Output("prefix")]
        public Output<string> Prefix { get; private set; } = null!;

        /// <summary>
        /// The OCID of private endpoint being used by the sharded database.
        /// </summary>
        [Output("privateEndpoint")]
        public Output<string> PrivateEndpoint { get; private set; } = null!;

        /// <summary>
        /// Collection of ATP-Dedicated shards that needs to be created.
        /// </summary>
        [Output("shardDetails")]
        public Output<ImmutableArray<Outputs.ShardedDatabaseShardDetail>> ShardDetails { get; private set; } = null!;

        [Output("shardedDatabaseId")]
        public Output<string> ShardedDatabaseId { get; private set; } = null!;

        /// <summary>
        /// Sharding Method.
        /// </summary>
        [Output("shardingMethod")]
        public Output<string> ShardingMethod { get; private set; } = null!;

        /// <summary>
        /// (Updatable) An optional property when incremented triggers Start Database. Could be set to any integer value.
        /// </summary>
        [Output("startDatabaseTrigger")]
        public Output<int?> StartDatabaseTrigger { get; private set; } = null!;

        /// <summary>
        /// Lifecycle states for sharded databases.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// (Updatable) An optional property when incremented triggers Stop Database. Could be set to any integer value.
        /// </summary>
        [Output("stopDatabaseTrigger")]
        public Output<int?> StopDatabaseTrigger { get; private set; } = null!;

        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        [Output("systemTags")]
        public Output<ImmutableDictionary<string, string>> SystemTags { get; private set; } = null!;

        /// <summary>
        /// The time the the Sharded Database was created. An RFC3339 formatted datetime string
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The time the Sharded Database was last updated. An RFC3339 formatted datetime string
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;

        /// <summary>
        /// Timezone associated with the sharded database.
        /// </summary>
        [Output("timeZone")]
        public Output<string> TimeZone { get; private set; } = null!;

        /// <summary>
        /// (Updatable) An optional property when incremented triggers Upload Signed Certificate And Generate Wallet. Could be set to any integer value.
        /// </summary>
        [Output("uploadSignedCertificateAndGenerateWalletTrigger")]
        public Output<int> UploadSignedCertificateAndGenerateWalletTrigger { get; private set; } = null!;

        /// <summary>
        /// (Updatable) An optional property when incremented triggers Validate Network. Could be set to any integer value.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("validateNetworkTrigger")]
        public Output<int?> ValidateNetworkTrigger { get; private set; } = null!;


        /// <summary>
        /// Create a ShardedDatabase resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ShardedDatabase(string name, ShardedDatabaseArgs args, CustomResourceOptions? options = null)
            : base("oci:GloballyDistributedDatabase/shardedDatabase:ShardedDatabase", name, args ?? new ShardedDatabaseArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ShardedDatabase(string name, Input<string> id, ShardedDatabaseState? state = null, CustomResourceOptions? options = null)
            : base("oci:GloballyDistributedDatabase/shardedDatabase:ShardedDatabase", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ShardedDatabase resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ShardedDatabase Get(string name, Input<string> id, ShardedDatabaseState? state = null, CustomResourceOptions? options = null)
        {
            return new ShardedDatabase(name, id, state, options);
        }
    }

    public sealed class ShardedDatabaseArgs : global::Pulumi.ResourceArgs
    {
        [Input("catalogDetails", required: true)]
        private InputList<Inputs.ShardedDatabaseCatalogDetailArgs>? _catalogDetails;

        /// <summary>
        /// Collection of ATP-Dedicated catalogs that needs to be created.
        /// </summary>
        public InputList<Inputs.ShardedDatabaseCatalogDetailArgs> CatalogDetails
        {
            get => _catalogDetails ?? (_catalogDetails = new InputList<Inputs.ShardedDatabaseCatalogDetailArgs>());
            set => _catalogDetails = value;
        }

        /// <summary>
        /// The character set for the new shard database being created. Use database api ListAutonomousDatabaseCharacterSets to get the list of allowed character set for autonomous dedicated database. See documentation: https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/AutonomousDatabaseCharacterSets/ListAutonomousDatabaseCharacterSets
        /// </summary>
        [Input("characterSet", required: true)]
        public Input<string> CharacterSet { get; set; } = null!;

        /// <summary>
        /// The default number of unique chunks in a shardspace. The value of chunks must be greater than 2 times the size of the largest shardgroup in any shardspace.
        /// </summary>
        [Input("chunks")]
        public Input<int>? Chunks { get; set; }

        /// <summary>
        /// The certificate common name used in all cloudAutonomousVmClusters for the sharded database topology. Eg. Production. All the clusters used in one sharded database topology shall have same CABundle setup. Valid characterset for clusterCertificateCommonName include uppercase or lowercase letters, numbers, hyphens, underscores, and period.
        /// </summary>
        [Input("clusterCertificateCommonName")]
        public Input<string>? ClusterCertificateCommonName { get; set; }

        /// <summary>
        /// (Updatable) Identifier of the compartment where sharded database is to be created.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// (Updatable) An optional property when incremented triggers Configure Sharding. Could be set to any integer value.
        /// </summary>
        [Input("configureShardingTrigger")]
        public Input<int>? ConfigureShardingTrigger { get; set; }

        /// <summary>
        /// The database deployment type.
        /// </summary>
        [Input("dbDeploymentType", required: true)]
        public Input<string> DbDeploymentType { get; set; } = null!;

        /// <summary>
        /// Oracle Database version of the Autonomous Container Database.
        /// </summary>
        [Input("dbVersion", required: true)]
        public Input<string> DbVersion { get; set; } = null!;

        /// <summary>
        /// Possible workload types.
        /// </summary>
        [Input("dbWorkload", required: true)]
        public Input<string> DbWorkload { get; set; } = null!;

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) Oracle sharded database display name.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// (Updatable) An optional property when incremented triggers Download Gsm Certificate Signing Request. Could be set to any integer value.
        /// </summary>
        [Input("downloadGsmCertificateSigningRequestTrigger")]
        public Input<int>? DownloadGsmCertificateSigningRequestTrigger { get; set; }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) An optional property when incremented triggers Generate Gsm Certificate Signing Request. Could be set to any integer value.
        /// </summary>
        [Input("generateGsmCertificateSigningRequestTrigger")]
        public Input<int>? GenerateGsmCertificateSigningRequestTrigger { get; set; }

        /// <summary>
        /// (Updatable) An optional property when incremented triggers Get Connection String. Could be set to any integer value.
        /// </summary>
        [Input("getConnectionStringTrigger")]
        public Input<int>? GetConnectionStringTrigger { get; set; }

        /// <summary>
        /// The listener port number for sharded database.
        /// </summary>
        [Input("listenerPort", required: true)]
        public Input<int> ListenerPort { get; set; } = null!;

        /// <summary>
        /// The TLS listener port number for sharded database.
        /// </summary>
        [Input("listenerPortTls", required: true)]
        public Input<int> ListenerPortTls { get; set; } = null!;

        /// <summary>
        /// The national character set for the new shard database being created. Use database api ListAutonomousDatabaseCharacterSets to get the list of allowed national character set for autonomous dedicated database. See documentation: https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/AutonomousDatabaseCharacterSets/ListAutonomousDatabaseCharacterSets
        /// </summary>
        [Input("ncharacterSet", required: true)]
        public Input<string> NcharacterSet { get; set; } = null!;

        /// <summary>
        /// Ons port local for sharded database.
        /// </summary>
        [Input("onsPortLocal", required: true)]
        public Input<int> OnsPortLocal { get; set; } = null!;

        /// <summary>
        /// Ons remote port for sharded database.
        /// </summary>
        [Input("onsPortRemote", required: true)]
        public Input<int> OnsPortRemote { get; set; } = null!;

        [Input("patchOperations")]
        private InputList<Inputs.ShardedDatabasePatchOperationArgs>? _patchOperations;

        /// <summary>
        /// (Updatable)
        /// </summary>
        public InputList<Inputs.ShardedDatabasePatchOperationArgs> PatchOperations
        {
            get => _patchOperations ?? (_patchOperations = new InputList<Inputs.ShardedDatabasePatchOperationArgs>());
            set => _patchOperations = value;
        }

        /// <summary>
        /// Unique name prefix for the sharded databases. Only alpha-numeric values are allowed. First character has to be a letter followed by any combination of letter and number.
        /// </summary>
        [Input("prefix", required: true)]
        public Input<string> Prefix { get; set; } = null!;

        [Input("shardDetails", required: true)]
        private InputList<Inputs.ShardedDatabaseShardDetailArgs>? _shardDetails;

        /// <summary>
        /// Collection of ATP-Dedicated shards that needs to be created.
        /// </summary>
        public InputList<Inputs.ShardedDatabaseShardDetailArgs> ShardDetails
        {
            get => _shardDetails ?? (_shardDetails = new InputList<Inputs.ShardedDatabaseShardDetailArgs>());
            set => _shardDetails = value;
        }

        /// <summary>
        /// Sharding Method.
        /// </summary>
        [Input("shardingMethod", required: true)]
        public Input<string> ShardingMethod { get; set; } = null!;

        /// <summary>
        /// (Updatable) An optional property when incremented triggers Start Database. Could be set to any integer value.
        /// </summary>
        [Input("startDatabaseTrigger")]
        public Input<int>? StartDatabaseTrigger { get; set; }

        /// <summary>
        /// (Updatable) An optional property when incremented triggers Stop Database. Could be set to any integer value.
        /// </summary>
        [Input("stopDatabaseTrigger")]
        public Input<int>? StopDatabaseTrigger { get; set; }

        /// <summary>
        /// (Updatable) An optional property when incremented triggers Validate Network. Could be set to any integer value.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("validateNetworkTrigger")]
        public Input<int>? ValidateNetworkTrigger { get; set; }

        public ShardedDatabaseArgs()
        {
        }
        public static new ShardedDatabaseArgs Empty => new ShardedDatabaseArgs();
    }

    public sealed class ShardedDatabaseState : global::Pulumi.ResourceArgs
    {
        [Input("catalogDetails")]
        private InputList<Inputs.ShardedDatabaseCatalogDetailGetArgs>? _catalogDetails;

        /// <summary>
        /// Collection of ATP-Dedicated catalogs that needs to be created.
        /// </summary>
        public InputList<Inputs.ShardedDatabaseCatalogDetailGetArgs> CatalogDetails
        {
            get => _catalogDetails ?? (_catalogDetails = new InputList<Inputs.ShardedDatabaseCatalogDetailGetArgs>());
            set => _catalogDetails = value;
        }

        /// <summary>
        /// The character set for the new shard database being created. Use database api ListAutonomousDatabaseCharacterSets to get the list of allowed character set for autonomous dedicated database. See documentation: https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/AutonomousDatabaseCharacterSets/ListAutonomousDatabaseCharacterSets
        /// </summary>
        [Input("characterSet")]
        public Input<string>? CharacterSet { get; set; }

        /// <summary>
        /// The default number of unique chunks in a shardspace. The value of chunks must be greater than 2 times the size of the largest shardgroup in any shardspace.
        /// </summary>
        [Input("chunks")]
        public Input<int>? Chunks { get; set; }

        /// <summary>
        /// The certificate common name used in all cloudAutonomousVmClusters for the sharded database topology. Eg. Production. All the clusters used in one sharded database topology shall have same CABundle setup. Valid characterset for clusterCertificateCommonName include uppercase or lowercase letters, numbers, hyphens, underscores, and period.
        /// </summary>
        [Input("clusterCertificateCommonName")]
        public Input<string>? ClusterCertificateCommonName { get; set; }

        /// <summary>
        /// (Updatable) Identifier of the compartment where sharded database is to be created.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// (Updatable) An optional property when incremented triggers Configure Gsms. Could be set to any integer value.
        /// </summary>
        [Input("configureGsmsTrigger")]
        public Input<int>? ConfigureGsmsTrigger { get; set; }

        /// <summary>
        /// (Updatable) An optional property when incremented triggers Configure Sharding. Could be set to any integer value.
        /// </summary>
        [Input("configureShardingTrigger")]
        public Input<int>? ConfigureShardingTrigger { get; set; }

        [Input("connectionStrings")]
        private InputList<Inputs.ShardedDatabaseConnectionStringGetArgs>? _connectionStrings;

        /// <summary>
        /// Details of sharded database connection String.
        /// </summary>
        public InputList<Inputs.ShardedDatabaseConnectionStringGetArgs> ConnectionStrings
        {
            get => _connectionStrings ?? (_connectionStrings = new InputList<Inputs.ShardedDatabaseConnectionStringGetArgs>());
            set => _connectionStrings = value;
        }

        /// <summary>
        /// The database deployment type.
        /// </summary>
        [Input("dbDeploymentType")]
        public Input<string>? DbDeploymentType { get; set; }

        /// <summary>
        /// Oracle Database version of the Autonomous Container Database.
        /// </summary>
        [Input("dbVersion")]
        public Input<string>? DbVersion { get; set; }

        /// <summary>
        /// Possible workload types.
        /// </summary>
        [Input("dbWorkload")]
        public Input<string>? DbWorkload { get; set; }

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) Oracle sharded database display name.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// (Updatable) An optional property when incremented triggers Download Gsm Certificate Signing Request. Could be set to any integer value.
        /// </summary>
        [Input("downloadGsmCertificateSigningRequestTrigger")]
        public Input<int>? DownloadGsmCertificateSigningRequestTrigger { get; set; }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) An optional property when incremented triggers Generate Gsm Certificate Signing Request. Could be set to any integer value.
        /// </summary>
        [Input("generateGsmCertificateSigningRequestTrigger")]
        public Input<int>? GenerateGsmCertificateSigningRequestTrigger { get; set; }

        /// <summary>
        /// (Updatable) An optional property when incremented triggers Generate Wallet. Could be set to any integer value.
        /// </summary>
        [Input("generateWalletTrigger")]
        public Input<int>? GenerateWalletTrigger { get; set; }

        /// <summary>
        /// (Updatable) An optional property when incremented triggers Get Connection String. Could be set to any integer value.
        /// </summary>
        [Input("getConnectionStringTrigger")]
        public Input<int>? GetConnectionStringTrigger { get; set; }

        [Input("gsms")]
        private InputList<Inputs.ShardedDatabaseGsmGetArgs>? _gsms;

        /// <summary>
        /// Details of GSM instances for the sharded database.
        /// </summary>
        public InputList<Inputs.ShardedDatabaseGsmGetArgs> Gsms
        {
            get => _gsms ?? (_gsms = new InputList<Inputs.ShardedDatabaseGsmGetArgs>());
            set => _gsms = value;
        }

        [Input("lifecycleState")]
        public Input<string>? LifecycleState { get; set; }

        /// <summary>
        /// Detailed message for the lifecycle state.
        /// </summary>
        [Input("lifecycleStateDetails")]
        public Input<string>? LifecycleStateDetails { get; set; }

        /// <summary>
        /// The listener port number for sharded database.
        /// </summary>
        [Input("listenerPort")]
        public Input<int>? ListenerPort { get; set; }

        /// <summary>
        /// The TLS listener port number for sharded database.
        /// </summary>
        [Input("listenerPortTls")]
        public Input<int>? ListenerPortTls { get; set; }

        /// <summary>
        /// The national character set for the new shard database being created. Use database api ListAutonomousDatabaseCharacterSets to get the list of allowed national character set for autonomous dedicated database. See documentation: https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/AutonomousDatabaseCharacterSets/ListAutonomousDatabaseCharacterSets
        /// </summary>
        [Input("ncharacterSet")]
        public Input<string>? NcharacterSet { get; set; }

        /// <summary>
        /// Ons port local for sharded database.
        /// </summary>
        [Input("onsPortLocal")]
        public Input<int>? OnsPortLocal { get; set; }

        /// <summary>
        /// Ons remote port for sharded database.
        /// </summary>
        [Input("onsPortRemote")]
        public Input<int>? OnsPortRemote { get; set; }

        [Input("patchOperations")]
        private InputList<Inputs.ShardedDatabasePatchOperationGetArgs>? _patchOperations;

        /// <summary>
        /// (Updatable)
        /// </summary>
        public InputList<Inputs.ShardedDatabasePatchOperationGetArgs> PatchOperations
        {
            get => _patchOperations ?? (_patchOperations = new InputList<Inputs.ShardedDatabasePatchOperationGetArgs>());
            set => _patchOperations = value;
        }

        /// <summary>
        /// Unique name prefix for the sharded databases. Only alpha-numeric values are allowed. First character has to be a letter followed by any combination of letter and number.
        /// </summary>
        [Input("prefix")]
        public Input<string>? Prefix { get; set; }

        /// <summary>
        /// The OCID of private endpoint being used by the sharded database.
        /// </summary>
        [Input("privateEndpoint")]
        public Input<string>? PrivateEndpoint { get; set; }

        [Input("shardDetails")]
        private InputList<Inputs.ShardedDatabaseShardDetailGetArgs>? _shardDetails;

        /// <summary>
        /// Collection of ATP-Dedicated shards that needs to be created.
        /// </summary>
        public InputList<Inputs.ShardedDatabaseShardDetailGetArgs> ShardDetails
        {
            get => _shardDetails ?? (_shardDetails = new InputList<Inputs.ShardedDatabaseShardDetailGetArgs>());
            set => _shardDetails = value;
        }

        [Input("shardedDatabaseId")]
        public Input<string>? ShardedDatabaseId { get; set; }

        /// <summary>
        /// Sharding Method.
        /// </summary>
        [Input("shardingMethod")]
        public Input<string>? ShardingMethod { get; set; }

        /// <summary>
        /// (Updatable) An optional property when incremented triggers Start Database. Could be set to any integer value.
        /// </summary>
        [Input("startDatabaseTrigger")]
        public Input<int>? StartDatabaseTrigger { get; set; }

        /// <summary>
        /// Lifecycle states for sharded databases.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// (Updatable) An optional property when incremented triggers Stop Database. Could be set to any integer value.
        /// </summary>
        [Input("stopDatabaseTrigger")]
        public Input<int>? StopDatabaseTrigger { get; set; }

        [Input("systemTags")]
        private InputMap<string>? _systemTags;

        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public InputMap<string> SystemTags
        {
            get => _systemTags ?? (_systemTags = new InputMap<string>());
            set => _systemTags = value;
        }

        /// <summary>
        /// The time the the Sharded Database was created. An RFC3339 formatted datetime string
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The time the Sharded Database was last updated. An RFC3339 formatted datetime string
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        /// <summary>
        /// Timezone associated with the sharded database.
        /// </summary>
        [Input("timeZone")]
        public Input<string>? TimeZone { get; set; }

        /// <summary>
        /// (Updatable) An optional property when incremented triggers Upload Signed Certificate And Generate Wallet. Could be set to any integer value.
        /// </summary>
        [Input("uploadSignedCertificateAndGenerateWalletTrigger")]
        public Input<int>? UploadSignedCertificateAndGenerateWalletTrigger { get; set; }

        /// <summary>
        /// (Updatable) An optional property when incremented triggers Validate Network. Could be set to any integer value.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("validateNetworkTrigger")]
        public Input<int>? ValidateNetworkTrigger { get; set; }

        public ShardedDatabaseState()
        {
        }
        public static new ShardedDatabaseState Empty => new ShardedDatabaseState();
    }
}
