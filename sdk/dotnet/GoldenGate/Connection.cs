// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.GoldenGate
{
    /// <summary>
    /// This resource provides the Connection resource in Oracle Cloud Infrastructure Golden Gate service.
    /// 
    /// Creates a new Connection.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testConnection = new Oci.GoldenGate.Connection("test_connection", new()
    ///     {
    ///         CompartmentId = compartmentId,
    ///         ConnectionType = connectionConnectionType,
    ///         DisplayName = connectionDisplayName,
    ///         TechnologyType = connectionTechnologyType,
    ///         AccessKeyId = testKey.Id,
    ///         AccountKey = connectionAccountKey,
    ///         AccountKeySecretId = testSecret.Id,
    ///         AccountName = connectionAccountName,
    ///         AdditionalAttributes = new[]
    ///         {
    ///             new Oci.GoldenGate.Inputs.ConnectionAdditionalAttributeArgs
    ///             {
    ///                 Name = connectionAdditionalAttributesName,
    ///                 Value = connectionAdditionalAttributesValue,
    ///             },
    ///         },
    ///         AuthenticationMode = connectionAuthenticationMode,
    ///         AuthenticationType = connectionAuthenticationType,
    ///         AzureAuthorityHost = connectionAzureAuthorityHost,
    ///         AzureTenantId = testAzureTenant.Id,
    ///         BootstrapServers = new[]
    ///         {
    ///             new Oci.GoldenGate.Inputs.ConnectionBootstrapServerArgs
    ///             {
    ///                 Host = connectionBootstrapServersHost,
    ///                 Port = connectionBootstrapServersPort,
    ///                 PrivateIp = connectionBootstrapServersPrivateIp,
    ///             },
    ///         },
    ///         Catalog = new Oci.GoldenGate.Inputs.ConnectionCatalogArgs
    ///         {
    ///             CatalogType = connectionCatalogCatalogType,
    ///             Branch = connectionCatalogBranch,
    ///             ClientId = testClient.Id,
    ///             ClientSecretSecretId = testSecret.Id,
    ///             GlueId = testGlue.Id,
    ///             Name = connectionCatalogName,
    ///             PrincipalRole = connectionCatalogPrincipalRole,
    ///             PropertiesSecretId = testSecret.Id,
    ///             Uri = connectionCatalogUri,
    ///         },
    ///         ClientId = testClient.Id,
    ///         ClientSecret = connectionClientSecret,
    ///         ClientSecretSecretId = testSecret.Id,
    ///         ConnectionFactory = connectionConnectionFactory,
    ///         ConnectionString = connectionConnectionString,
    ///         ConnectionUrl = connectionConnectionUrl,
    ///         ConsumerProperties = connectionConsumerProperties,
    ///         CoreSiteXml = connectionCoreSiteXml,
    ///         DatabaseId = testDatabase.Id,
    ///         DatabaseName = testDatabase.Name,
    ///         DbSystemId = testDbSystem.Id,
    ///         DefinedTags = 
    ///         {
    ///             { "foo-namespace.bar-key", "value" },
    ///         },
    ///         DeploymentId = testDeployment.Id,
    ///         Description = connectionDescription,
    ///         DoesUseSecretIds = connectionDoesUseSecretIds,
    ///         Endpoint = connectionEndpoint,
    ///         Fingerprint = connectionFingerprint,
    ///         FreeformTags = 
    ///         {
    ///             { "bar-key", "value" },
    ///         },
    ///         Host = connectionHost,
    ///         JndiConnectionFactory = connectionJndiConnectionFactory,
    ///         JndiInitialContextFactory = connectionJndiInitialContextFactory,
    ///         JndiProviderUrl = connectionJndiProviderUrl,
    ///         JndiSecurityCredentials = connectionJndiSecurityCredentials,
    ///         JndiSecurityCredentialsSecretId = testSecret.Id,
    ///         JndiSecurityPrincipal = connectionJndiSecurityPrincipal,
    ///         KeyId = testKey.Id,
    ///         KeyStore = connectionKeyStore,
    ///         KeyStorePassword = connectionKeyStorePassword,
    ///         KeyStoreSecretId = testSecret.Id,
    ///         KeyStorePasswordSecretId = testSecret.Id,
    ///         Locks = new[]
    ///         {
    ///             new Oci.GoldenGate.Inputs.ConnectionLockArgs
    ///             {
    ///                 Type = connectionLocksType,
    ///                 Message = connectionLocksMessage,
    ///             },
    ///         },
    ///         NsgIds = connectionNsgIds,
    ///         Password = connectionPassword,
    ///         PasswordSecretId = testSecret.Id,
    ///         Port = connectionPort,
    ///         PrivateIp = connectionPrivateIp,
    ///         PrivateKeyFile = connectionPrivateKeyFile,
    ///         PrivateKeyFileSecretId = testSecret.Id,
    ///         PrivateKeyPassphrase = connectionPrivateKeyPassphrase,
    ///         PrivateKeyPassphraseSecretId = testSecret.Id,
    ///         ProducerProperties = connectionProducerProperties,
    ///         PublicKeyFingerprint = connectionPublicKeyFingerprint,
    ///         RedisClusterId = testRedisCluster.Id,
    ///         Region = connectionRegion,
    ///         RoutingMethod = connectionRoutingMethod,
    ///         SasToken = connectionSasToken,
    ///         SasTokenSecretId = testSecret.Id,
    ///         SecretAccessKey = connectionSecretAccessKey,
    ///         SecretAccessKeySecretId = testSecret.Id,
    ///         SecurityProtocol = connectionSecurityProtocol,
    ///         Servers = connectionServers,
    ///         ServiceAccountKeyFile = connectionServiceAccountKeyFile,
    ///         ServiceAccountKeyFileSecretId = testSecret.Id,
    ///         SessionMode = connectionSessionMode,
    ///         ShouldUseJndi = connectionShouldUseJndi,
    ///         ShouldUseResourcePrincipal = connectionShouldUseResourcePrincipal,
    ///         ShouldValidateServerCertificate = connectionShouldValidateServerCertificate,
    ///         SslCa = connectionSslCa,
    ///         SslCert = connectionSslCert,
    ///         SslClientKeystash = connectionSslClientKeystash,
    ///         SslClientKeystashSecretId = testSecret.Id,
    ///         SslClientKeystoredb = connectionSslClientKeystoredb,
    ///         SslClientKeystoredbSecretId = testSecret.Id,
    ///         SslCrl = connectionSslCrl,
    ///         SslKey = connectionSslKey,
    ///         SslKeyPassword = connectionSslKeyPassword,
    ///         SslKeyPasswordSecretId = testSecret.Id,
    ///         SslKeySecretId = testSecret.Id,
    ///         SslMode = connectionSslMode,
    ///         SslServerCertificate = connectionSslServerCertificate,
    ///         Storage = new Oci.GoldenGate.Inputs.ConnectionStorageArgs
    ///         {
    ///             StorageType = connectionStorageStorageType,
    ///             AccessKeyId = testKey.Id,
    ///             AccountKeySecretId = testSecret.Id,
    ///             AccountName = connectionStorageAccountName,
    ///             Bucket = connectionStorageBucket,
    ///             Container = connectionStorageContainer,
    ///             Endpoint = connectionStorageEndpoint,
    ///             ProjectId = testProject.Id,
    ///             Region = connectionStorageRegion,
    ///             SchemeType = connectionStorageSchemeType,
    ///             SecretAccessKeySecretId = testSecret.Id,
    ///             ServiceAccountKeyFileSecretId = testSecret.Id,
    ///         },
    ///         StorageCredentialName = connectionStorageCredentialName,
    ///         StreamPoolId = testStreamPool.Id,
    ///         SubnetId = testSubnet.Id,
    ///         TenancyId = testTenancy.Id,
    ///         TenantId = testTenant.Id,
    ///         TlsCaFile = connectionTlsCaFile,
    ///         TlsCertificateKeyFile = connectionTlsCertificateKeyFile,
    ///         TlsCertificateKeyFilePassword = connectionTlsCertificateKeyFilePassword,
    ///         TlsCertificateKeyFilePasswordSecretId = testSecret.Id,
    ///         TlsCertificateKeyFileSecretId = testSecret.Id,
    ///         TrustStore = connectionTrustStore,
    ///         TrustStorePassword = connectionTrustStorePassword,
    ///         TrustStorePasswordSecretId = testSecret.Id,
    ///         TrustStoreSecretId = testSecret.Id,
    ///         Url = connectionUrl,
    ///         UserId = testUser.Id,
    ///         Username = connectionUsername,
    ///         VaultId = testVault.Id,
    ///         Wallet = connectionWallet,
    ///         WalletSecretId = testSecret.Id,
    ///         TriggerRefresh = true,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Connections can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:GoldenGate/connection:Connection test_connection "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:GoldenGate/connection:Connection")]
    public partial class Connection : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) Access key ID to access the Amazon S3 bucket. e.g.: "this-is-not-the-secret"
        /// </summary>
        [Output("accessKeyId")]
        public Output<string> AccessKeyId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Azure storage account key. This property is required when 'authenticationType' is set to 'SHARED_KEY'. e.g.: pa3WbhVATzj56xD4DH1VjOUhApRGEGHvOo58eQJVWIzX+j8j4CUVFcTjpIqDSRaSa1Wo2LbWY5at+AStEgLOIQ== Deprecated: This field is deprecated and replaced by "accountKeySecretId". This field will be removed after February 15 2026.
        /// </summary>
        [Output("accountKey")]
        public Output<string?> AccountKey { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the account key is stored. Note: When provided, 'accountKey' field must not be provided.
        /// </summary>
        [Output("accountKeySecretId")]
        public Output<string> AccountKeySecretId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Sets the Azure storage account name.
        /// </summary>
        [Output("accountName")]
        public Output<string> AccountName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) An array of name-value pair attribute entries. Used as additional parameters in connection string.
        /// </summary>
        [Output("additionalAttributes")]
        public Output<ImmutableArray<Outputs.ConnectionAdditionalAttribute>> AdditionalAttributes { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Authentication mode. It can be provided at creation of Oracle Autonomous Database Serverless connections, when a databaseId is provided. The default value is MTLS.
        /// </summary>
        [Output("authenticationMode")]
        public Output<string> AuthenticationMode { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Authentication type for Java Message Service.  If not provided, default is NONE. Optional until 2024-06-27, in the release after it will be made required.
        /// </summary>
        [Output("authenticationType")]
        public Output<string> AuthenticationType { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The endpoint used for authentication with Microsoft Entra ID (formerly Azure Active Directory). Default value: https://login.microsoftonline.com When connecting to a non-public Azure Cloud, the endpoint must be provided, eg:
        /// * Azure China: https://login.chinacloudapi.cn/
        /// * Azure US Government: https://login.microsoftonline.us/
        /// </summary>
        [Output("azureAuthorityHost")]
        public Output<string> AzureAuthorityHost { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Azure tenant ID of the application. This property is required when 'authenticationType' is set to 'AZURE_ACTIVE_DIRECTORY'. e.g.: 14593954-d337-4a61-a364-9f758c64f97f
        /// </summary>
        [Output("azureTenantId")]
        public Output<string> AzureTenantId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Kafka bootstrap. Equivalent of bootstrap.servers configuration property in Kafka: list of KafkaBootstrapServer objects specified by host/port. Used for establishing the initial connection to the Kafka cluster. Example: `"server1.example.com:9092,server2.example.com:9092"`
        /// </summary>
        [Output("bootstrapServers")]
        public Output<ImmutableArray<Outputs.ConnectionBootstrapServer>> BootstrapServers { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The information about a new catalog of given type used in an Iceberg connection.
        /// </summary>
        [Output("catalog")]
        public Output<Outputs.ConnectionCatalog> Catalog { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Azure client ID of the application. This property is required when 'authenticationType' is set to 'AZURE_ACTIVE_DIRECTORY'. e.g.: 06ecaabf-8b80-4ec8-a0ec-20cbf463703d
        /// </summary>
        [Output("clientId")]
        public Output<string> ClientId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Azure client secret (aka application password) for authentication. This property is required when 'authenticationType' is set to 'AZURE_ACTIVE_DIRECTORY'. e.g.: dO29Q~F5-VwnA.lZdd11xFF_t5NAXCaGwDl9NbT1 Deprecated: This field is deprecated and replaced by "clientSecretSecretId". This field will be removed after February 15 2026.
        /// </summary>
        [Output("clientSecret")]
        public Output<string?> ClientSecret { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the client secret is stored. Only applicable for authenticationType == OAUTH_M2M. Note: When provided, 'clientSecret' field must not be provided.
        /// </summary>
        [Output("clientSecretSecretId")]
        public Output<string?> ClientSecretSecretId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The of Java class implementing javax.jms.ConnectionFactory interface supplied by the Java Message Service provider. e.g.: 'com.stc.jmsjca.core.JConnectionFactoryXA'
        /// </summary>
        [Output("connectionFactory")]
        public Output<string> ConnectionFactory { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Connection string. AZURE_SYNAPSE_ANALYTICS e.g.: 'jdbc:sqlserver://&lt;synapse-workspace&gt;.sql.azuresynapse.net:1433;database=&lt;db-name&gt;;encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.sql.azuresynapse.net;loginTimeout=300;', MONGODB e.g.: 'mongodb://mongodb0.example.com:27017/recordsrecords'.
        /// </summary>
        [Output("connectionString")]
        public Output<string> ConnectionString { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The connection type.
        /// </summary>
        [Output("connectionType")]
        public Output<string> ConnectionType { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Connection URL. e.g.: 'jdbc:databricks://adb-33934.4.azuredatabricks.net:443/default;transportMode=http;ssl=1;httpPath=sql/protocolv1/o/3393########44/0##3-7-hlrb'
        /// </summary>
        [Output("connectionUrl")]
        public Output<string> ConnectionUrl { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The base64 encoded content of the consumer.properties file.
        /// </summary>
        [Output("consumerProperties")]
        public Output<string> ConsumerProperties { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The base64 encoded content of the Hadoop Distributed File System configuration file (core-site.xml). It is not included in GET responses if the `view=COMPACT` query parameter is specified.
        /// </summary>
        [Output("coreSiteXml")]
        public Output<string> CoreSiteXml { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Autonomous Json Database.
        /// </summary>
        [Output("databaseId")]
        public Output<string> DatabaseId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The name of the database.
        /// </summary>
        [Output("databaseName")]
        public Output<string> DatabaseName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database system being referenced.
        /// </summary>
        [Output("dbSystemId")]
        public Output<string> DbSystemId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, string>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment being referenced.
        /// </summary>
        [Output("deploymentId")]
        public Output<string> DeploymentId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Metadata about this specific object.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// (Updatable) An object's Display Name.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Indicates that sensitive attributes are provided via Secrets.
        /// </summary>
        [Output("doesUseSecretIds")]
        public Output<bool> DoesUseSecretIds { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The endpoint URL of the 3rd party cloud service. e.g.: 'https://kinesis.us-east-1.amazonaws.com' If not provided, GoldenGate will default to the default endpoint in the `Region`.
        /// </summary>
        [Output("endpoint")]
        public Output<string> Endpoint { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Fingerprint required by TLS security protocol. E.g.: '6152b2dfbff200f973c5074a5b91d06ab3b472c07c09a1ea57bb7fd406cdce9c'
        /// </summary>
        [Output("fingerprint")]
        public Output<string> Fingerprint { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{"bar-key": "value"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, string>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The name or address of a host. In case of Generic connection type host and port separated by colon. Example: `"server.example.com:1234"`
        /// For multiple hosts, provide a comma separated list. Example: `"server1.example.com:1000,server1.example.com:2000"`
        /// </summary>
        [Output("host")]
        public Output<string> Host { get; private set; } = null!;

        /// <summary>
        /// List of ingress IP addresses from where the GoldenGate deployment connects to this connection's privateIp.  Customers may optionally set up ingress security rules to restrict traffic from these IP addresses.
        /// </summary>
        [Output("ingressIps")]
        public Output<ImmutableArray<Outputs.ConnectionIngressIp>> IngressIps { get; private set; } = null!;

        [Output("isLockOverride")]
        public Output<bool> IsLockOverride { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The Connection Factory can be looked up using this name. e.g.: 'ConnectionFactory'
        /// </summary>
        [Output("jndiConnectionFactory")]
        public Output<string> JndiConnectionFactory { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The implementation of javax.naming.spi.InitialContextFactory interface that the client uses to obtain initial naming context. e.g.: 'org.apache.activemq.jndi.ActiveMQInitialContextFactory'
        /// </summary>
        [Output("jndiInitialContextFactory")]
        public Output<string> JndiInitialContextFactory { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The URL that Java Message Service will use to contact the JNDI provider. e.g.: 'tcp://myjms.host.domain:61616?jms.prefetchPolicy.all=1000'
        /// </summary>
        [Output("jndiProviderUrl")]
        public Output<string> JndiProviderUrl { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The password associated to the principal. Deprecated: This field is deprecated and replaced by "jndiSecurityCredentialsSecretId". This field will be removed after February 15 2026.
        /// </summary>
        [Output("jndiSecurityCredentials")]
        public Output<string?> JndiSecurityCredentials { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the security credentials are stored associated to the principal. Note: When provided, 'jndiSecurityCredentials' field must not be provided.
        /// </summary>
        [Output("jndiSecurityCredentialsSecretId")]
        public Output<string?> JndiSecurityCredentialsSecretId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Specifies the identity of the principal (user) to be authenticated. e.g.: 'admin2'
        /// </summary>
        [Output("jndiSecurityPrincipal")]
        public Output<string> JndiSecurityPrincipal { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Refers to the customer's master key OCID.  If provided, it references a key to manage secrets. Customers must add policies to permit GoldenGate to use this key.
        /// </summary>
        [Output("keyId")]
        public Output<string> KeyId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The base64 encoded content of the KeyStore file. Deprecated: This field is deprecated and replaced by "keyStoreSecretId". This field will be removed after February 15 2026.
        /// </summary>
        [Output("keyStore")]
        public Output<string?> KeyStore { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The KeyStore password. Deprecated: This field is deprecated and replaced by "keyStorePasswordSecretId". This field will be removed after February 15 2026.
        /// </summary>
        [Output("keyStorePassword")]
        public Output<string?> KeyStorePassword { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the kafka Ssl KeyStore password is stored. Note: When provided, 'keyStorePassword' field must not be provided.
        /// </summary>
        [Output("keyStorePasswordSecretId")]
        public Output<string?> KeyStorePasswordSecretId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the content of the KeyStore file is stored. Note: When provided, 'keyStore' field must not be provided.
        /// </summary>
        [Output("keyStoreSecretId")]
        public Output<string?> KeyStoreSecretId { get; private set; } = null!;

        /// <summary>
        /// Describes the object's current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
        /// </summary>
        [Output("lifecycleDetails")]
        public Output<string> LifecycleDetails { get; private set; } = null!;

        /// <summary>
        /// Locks associated with this resource.
        /// </summary>
        [Output("locks")]
        public Output<ImmutableArray<Outputs.ConnectionLock>> Locks { get; private set; } = null!;

        /// <summary>
        /// (Updatable) An array of Network Security Group OCIDs used to define network access for either Deployments or Connections.
        /// </summary>
        [Output("nsgIds")]
        public Output<ImmutableArray<string>> NsgIds { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The password Oracle GoldenGate uses to connect the associated system of the given technology. It must conform to the specific security requirements including length, case sensitivity, and so on. Deprecated: This field is deprecated and replaced by "passwordSecretId". This field will be removed after February 15 2026.
        /// </summary>
        [Output("password")]
        public Output<string?> Password { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the password is stored. The password Oracle GoldenGate uses to connect the associated system of the given technology. It must conform to the specific security requirements including length, case sensitivity, and so on. If secretId is used plaintext field must not be provided. Note: When provided, 'password' field must not be provided.
        /// </summary>
        [Output("passwordSecretId")]
        public Output<string?> PasswordSecretId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The port of an endpoint usually specified for a connection.
        /// </summary>
        [Output("port")]
        public Output<int> Port { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Deprecated: this field will be removed in future versions. Either specify the private IP in the connectionString or host  field, or make sure the host name is resolvable in the target VCN.
        /// 
        /// The private IP address of the connection's endpoint in the customer's VCN, typically a database endpoint or a big data endpoint (e.g. Kafka bootstrap server). In case the privateIp is provided, the subnetId must also be provided. In case the privateIp (and the subnetId) is not provided it is assumed the datasource is publicly accessible. In case the connection is accessible only privately, the lack of privateIp will result in not being able to access the connection.
        /// </summary>
        [Output("privateIp")]
        public Output<string> PrivateIp { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The base64 encoded content of the private key file (PEM file) corresponding to the API key of the fingerprint. See documentation: https://docs.oracle.com/en-us/iaas/Content/Identity/Tasks/managingcredentials.htm Deprecated: This field is deprecated and replaced by "privateKeyFileSecretId". This field will be removed after February 15 2026.
        /// </summary>
        [Output("privateKeyFile")]
        public Output<string?> PrivateKeyFile { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret that stores the content of the private key file (PEM file) corresponding to the API key of the fingerprint. See documentation: https://docs.oracle.com/en-us/iaas/Content/Identity/Tasks/managingcredentials.htm Note: When provided, 'privateKeyFile' field must not be provided.
        /// </summary>
        [Output("privateKeyFileSecretId")]
        public Output<string?> PrivateKeyFileSecretId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Password if the private key file is encrypted. Deprecated: This field is deprecated and replaced by "privateKeyPassphraseSecretId". This field will be removed after February 15 2026.
        /// </summary>
        [Output("privateKeyPassphrase")]
        public Output<string?> PrivateKeyPassphrase { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret that stores the password for the private key file. Note: When provided, 'privateKeyPassphrase' field must not be provided.
        /// </summary>
        [Output("privateKeyPassphraseSecretId")]
        public Output<string?> PrivateKeyPassphraseSecretId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The base64 encoded content of the producer.properties file.
        /// </summary>
        [Output("producerProperties")]
        public Output<string> ProducerProperties { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The fingerprint of the API Key of the user specified by the userId. See documentation: https://docs.oracle.com/en-us/iaas/Content/Identity/Tasks/managingcredentials.htm
        /// </summary>
        [Output("publicKeyFingerprint")]
        public Output<string> PublicKeyFingerprint { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Redis cluster.
        /// </summary>
        [Output("redisClusterId")]
        public Output<string> RedisClusterId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The name of the AWS region where the bucket is created. If not provided, GoldenGate will default to 'us-west-2'. Note: this property will become mandatory after May 20, 2026.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Controls the network traffic direction to the target: SHARED_SERVICE_ENDPOINT: Traffic flows through the Goldengate Service's network to public hosts. Cannot be used for private targets.  SHARED_DEPLOYMENT_ENDPOINT: Network traffic flows from the assigned deployment's private endpoint through the deployment's subnet. DEDICATED_ENDPOINT: A dedicated private endpoint is created in the target VCN subnet for the connection. The subnetId is required when DEDICATED_ENDPOINT networking is selected.
        /// </summary>
        [Output("routingMethod")]
        public Output<string> RoutingMethod { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Credential that uses a shared access signature (SAS) to authenticate to an Azure Service. This property is required when 'authenticationType' is set to 'SHARED_ACCESS_SIGNATURE'. e.g.: ?sv=2020-06-08&amp;ss=bfqt&amp;srt=sco&amp;sp=rwdlacupyx&amp;se=2020-09-10T20:27:28Z&amp;st=2022-08-05T12:27:28Z&amp;spr=https&amp;sig=C1IgHsiLBmTSStYkXXGLTP8it0xBrArcgCqOsZbXwIQ%3D Deprecated: This field is deprecated and replaced by "sasTokenSecretId". This field will be removed after February 15 2026.
        /// </summary>
        [Output("sasToken")]
        public Output<string?> SasToken { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the sas token is stored. Note: When provided, 'sasToken' field must not be provided.
        /// </summary>
        [Output("sasTokenSecretId")]
        public Output<string?> SasTokenSecretId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Secret access key to access the Amazon S3 bucket. e.g.: "this-is-not-the-secret" Deprecated: This field is deprecated and replaced by "secretAccessKeySecretId". This field will be removed after February 15 2026.
        /// </summary>
        [Output("secretAccessKey")]
        public Output<string?> SecretAccessKey { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the secret access key is stored. Note: When provided, 'secretAccessKey' field must not be provided.
        /// </summary>
        [Output("secretAccessKeySecretId")]
        public Output<string?> SecretAccessKeySecretId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Security protocol for Java Message Service. If not provided, default is PLAIN. Optional until 2024-06-27, in the release after it will be made required.
        /// </summary>
        [Output("securityProtocol")]
        public Output<string> SecurityProtocol { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Comma separated list of Elasticsearch server addresses, specified as host:port entries, where :port is optional.  If port is not specified, it defaults to 9200. Used for establishing the initial connection to the Elasticsearch cluster. Example: `"server1.example.com:4000,server2.example.com:4000"`
        /// </summary>
        [Output("servers")]
        public Output<string> Servers { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The base64 encoded content of the service account key file containing the credentials required to use Google Cloud Storage. Deprecated: This field is deprecated and replaced by "serviceAccountKeyFileSecretId". This field will be removed after February 15 2026.
        /// </summary>
        [Output("serviceAccountKeyFile")]
        public Output<string?> ServiceAccountKeyFile { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the content of the service account key file is stored, which contains the credentials required to use Google Cloud Storage. Note: When provided, 'serviceAccountKeyFile' field must not be provided.
        /// </summary>
        [Output("serviceAccountKeyFileSecretId")]
        public Output<string?> ServiceAccountKeyFileSecretId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The mode of the database connection session to be established by the data client. 'REDIRECT' - for a RAC database, 'DIRECT' - for a non-RAC database. Connection to a RAC database involves a redirection received from the SCAN listeners to the database node to connect to. By default the mode would be DIRECT.
        /// </summary>
        [Output("sessionMode")]
        public Output<string> SessionMode { get; private set; } = null!;

        /// <summary>
        /// (Updatable) If set to true, Java Naming and Directory Interface (JNDI) properties should be provided.
        /// </summary>
        [Output("shouldUseJndi")]
        public Output<bool> ShouldUseJndi { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Specifies that the user intends to authenticate to the instance using a resource principal. Default: false
        /// </summary>
        [Output("shouldUseResourcePrincipal")]
        public Output<bool> ShouldUseResourcePrincipal { get; private set; } = null!;

        /// <summary>
        /// (Updatable) If set to true, the driver validates the certificate that is sent by the database server.
        /// </summary>
        [Output("shouldValidateServerCertificate")]
        public Output<bool> ShouldValidateServerCertificate { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The base64 encoded certificate of the trusted certificate authorities (Trusted CA) for PostgreSQL.  The supported file formats are .pem and .crt. It is not included in GET responses if the `view=COMPACT` query parameter is specified.
        /// </summary>
        [Output("sslCa")]
        public Output<string> SslCa { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Client Certificate - The base64 encoded content of a .pem or .crt file containing the client public key (for 2-way SSL). It is not included in GET responses if the `view=COMPACT` query parameter is specified.
        /// </summary>
        [Output("sslCert")]
        public Output<string> SslCert { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The base64 encoded keystash file which contains the encrypted password to the key database file. This property is not supported for IBM Db2 for i, as client TLS mode is not available.
        /// 
        /// Deprecated: This field is deprecated and replaced by "sslClientKeystashSecretId". This field will be removed after February 15 2026.
        /// </summary>
        [Output("sslClientKeystash")]
        public Output<string?> SslClientKeystash { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the keystash file is stored,  which contains the encrypted password to the key database file. This property is not supported for IBM Db2 for i, as client TLS mode is not available.
        /// 
        /// Note: When provided, 'sslClientKeystash' field must not be provided.
        /// </summary>
        [Output("sslClientKeystashSecretId")]
        public Output<string?> SslClientKeystashSecretId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The base64 encoded keystore file created at the client containing the server certificate / CA root certificate. This property is not supported for IBM Db2 for i, as client TLS mode is not available.
        /// 
        /// Deprecated: This field is deprecated and replaced by "sslClientKeystoredbSecretId". This field will be removed after February 15 2026.
        /// </summary>
        [Output("sslClientKeystoredb")]
        public Output<string?> SslClientKeystoredb { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the keystore file stored,  which created at the client containing the server certificate / CA root certificate. This property is not supported for IBM Db2 for i, as client TLS mode is not available.
        /// 
        /// Note: When provided, 'sslClientKeystoredb' field must not be provided.
        /// </summary>
        [Output("sslClientKeystoredbSecretId")]
        public Output<string?> SslClientKeystoredbSecretId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The base64 encoded list of certificates revoked by the trusted certificate authorities (Trusted CA). Note: This is an optional property and only applicable if TLS/MTLS option is selected. It is not included in GET responses if the `view=COMPACT` query parameter is specified.
        /// </summary>
        [Output("sslCrl")]
        public Output<string> SslCrl { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Client Key - The base64 encoded content of a .pem or .crt file containing the client private key (for 2-way SSL). Deprecated: This field is deprecated and replaced by "sslKeySecretId". This field will be removed after February 15 2026.
        /// </summary>
        [Output("sslKey")]
        public Output<string?> SslKey { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The password for the cert inside of the KeyStore. In case it differs from the KeyStore password, it should be provided. Deprecated: This field is deprecated and replaced by "sslKeyPasswordSecretId". This field will be removed after February 15 2026.
        /// </summary>
        [Output("sslKeyPassword")]
        public Output<string?> SslKeyPassword { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the password is stored for the cert inside of the Keystore. In case it differs from the KeyStore password, it should be provided. Note: When provided, 'sslKeyPassword' field must not be provided.
        /// </summary>
        [Output("sslKeyPasswordSecretId")]
        public Output<string?> SslKeyPasswordSecretId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret that stores the Client Key
        /// * The content of a .pem or .crt file containing the client private key (for 2-way SSL). Note: When provided, 'sslKey' field must not be provided.
        /// </summary>
        [Output("sslKeySecretId")]
        public Output<string?> SslKeySecretId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) SSL modes for PostgreSQL.
        /// </summary>
        [Output("sslMode")]
        public Output<string> SslMode { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The base64 encoded file which contains the self-signed server certificate / Certificate Authority (CA) certificate. It is not included in GET responses if the `view=COMPACT` query parameter is specified.
        /// </summary>
        [Output("sslServerCertificate")]
        public Output<string> SslServerCertificate { get; private set; } = null!;

        /// <summary>
        /// Possible lifecycle states for connection.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The information about a new storage of given type used in an Iceberg connection.
        /// </summary>
        [Output("storage")]
        public Output<Outputs.ConnectionStorage> Storage { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Optional. External storage credential name to access files on object storage such as ADLS Gen2, S3 or GCS.
        /// </summary>
        [Output("storageCredentialName")]
        public Output<string> StorageCredentialName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream pool being referenced.
        /// </summary>
        [Output("streamPoolId")]
        public Output<string> StreamPoolId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the target subnet of the dedicated connection.
        /// </summary>
        [Output("subnetId")]
        public Output<string> SubnetId { get; private set; } = null!;

        /// <summary>
        /// The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{orcl-cloud: {free-tier-retain: true}}`
        /// </summary>
        [Output("systemTags")]
        public Output<ImmutableDictionary<string, string>> SystemTags { get; private set; } = null!;

        /// <summary>
        /// The Kafka (e.g. Confluent) Schema Registry technology type.
        /// </summary>
        [Output("technologyType")]
        public Output<string> TechnologyType { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the related Oracle Cloud Infrastructure tenancy.
        /// </summary>
        [Output("tenancyId")]
        public Output<string> TenancyId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Azure tenant ID of the application. e.g.: 14593954-d337-4a61-a364-9f758c64f97f
        /// </summary>
        [Output("tenantId")]
        public Output<string> TenantId { get; private set; } = null!;

        /// <summary>
        /// The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Database Certificate - The base64 encoded content of a .pem file, containing the server public key (for 1 and 2-way SSL). It is not included in GET responses if the `view=COMPACT` query parameter is specified.
        /// </summary>
        [Output("tlsCaFile")]
        public Output<string> TlsCaFile { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Client Certificate - The base64 encoded content of a .pem file, containing the client public key (for 2-way SSL). Deprecated: This field is deprecated and replaced by "tlsCertificateKeyFileSecretId". This field will be removed after February 15 2026.
        /// </summary>
        [Output("tlsCertificateKeyFile")]
        public Output<string> TlsCertificateKeyFile { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Client Certificate key file password. Deprecated: This field is deprecated and replaced by "tlsCertificateKeyFilePasswordSecretId". This field will be removed after February 15 2026.
        /// </summary>
        [Output("tlsCertificateKeyFilePassword")]
        public Output<string> TlsCertificateKeyFilePassword { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret that stores the password of the tls certificate key file. Note: When provided, 'tlsCertificateKeyFilePassword' field must not be provided.
        /// </summary>
        [Output("tlsCertificateKeyFilePasswordSecretId")]
        public Output<string> TlsCertificateKeyFilePasswordSecretId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret that stores the certificate key file of the mtls connection.
        /// * The content of a .pem file containing the client private key (for 2-way SSL). Note: When provided, 'tlsCertificateKeyFile' field must not be provided.
        /// </summary>
        [Output("tlsCertificateKeyFileSecretId")]
        public Output<string> TlsCertificateKeyFileSecretId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) If value is true, it triggers connection refresh action and this attribute change will always show up in the "update" plan and will apply steps in order to refresh secrets and dependent service properties (such as ADB connection strings, wallets, etc..).
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("triggerRefresh")]
        public Output<bool?> TriggerRefresh { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The base64 encoded content of the TrustStore file. Deprecated: This field is deprecated and replaced by "trustStoreSecretId". This field will be removed after February 15 2026.
        /// </summary>
        [Output("trustStore")]
        public Output<string?> TrustStore { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The TrustStore password. Deprecated: This field is deprecated and replaced by "trustStorePasswordSecretId". This field will be removed after February 15 2026.
        /// </summary>
        [Output("trustStorePassword")]
        public Output<string?> TrustStorePassword { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the kafka Ssl TrustStore password is stored. Note: When provided, 'trustStorePassword' field must not be provided.
        /// </summary>
        [Output("trustStorePasswordSecretId")]
        public Output<string?> TrustStorePasswordSecretId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the content of the TrustStore file is stored. Note: When provided, 'trustStore' field must not be provided.
        /// </summary>
        [Output("trustStoreSecretId")]
        public Output<string?> TrustStoreSecretId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Kafka Schema Registry URL. e.g.: 'https://server1.us.oracle.com:8081'
        /// </summary>
        [Output("url")]
        public Output<string> Url { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure user who will access the Oracle NoSQL database. The user must have write access to the table they want to connect to. If the user is not provided, backend will default to the user who is calling the API endpoint.
        /// </summary>
        [Output("userId")]
        public Output<string> UserId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The username Oracle GoldenGate uses to connect the associated system of the given technology. This username must already exist and be available by the system/application to be connected to and must conform to the case sensitivty requirments defined in it.
        /// </summary>
        [Output("username")]
        public Output<string> Username { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Refers to the customer's vault OCID.  If provided, it references a vault where GoldenGate can manage secrets. Customers must add policies to permit GoldenGate to manage secrets contained within this vault.
        /// </summary>
        [Output("vaultId")]
        public Output<string> VaultId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The wallet contents Oracle GoldenGate uses to make connections to a database. This attribute is expected to be base64 encoded. Deprecated: This field is deprecated and replaced by "walletSecretId". This field will be removed after February 15 2026.
        /// </summary>
        [Output("wallet")]
        public Output<string?> Wallet { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the wallet file is stored.  The wallet contents Oracle GoldenGate uses to make connections to a database. Note: When provided, 'wallet' field must not be provided.
        /// </summary>
        [Output("walletSecretId")]
        public Output<string?> WalletSecretId { get; private set; } = null!;


        /// <summary>
        /// Create a Connection resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Connection(string name, ConnectionArgs args, CustomResourceOptions? options = null)
            : base("oci:GoldenGate/connection:Connection", name, args ?? new ConnectionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Connection(string name, Input<string> id, ConnectionState? state = null, CustomResourceOptions? options = null)
            : base("oci:GoldenGate/connection:Connection", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "accountKey",
                    "clientSecret",
                    "jndiSecurityCredentials",
                    "keyStore",
                    "keyStorePassword",
                    "password",
                    "privateKeyFile",
                    "privateKeyPassphrase",
                    "sasToken",
                    "secretAccessKey",
                    "serviceAccountKeyFile",
                    "sslClientKeystash",
                    "sslClientKeystoredb",
                    "sslKey",
                    "sslKeyPassword",
                    "tlsCertificateKeyFilePassword",
                    "tlsCertificateKeyFilePasswordSecretId",
                    "trustStore",
                    "trustStorePassword",
                    "wallet",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Connection resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Connection Get(string name, Input<string> id, ConnectionState? state = null, CustomResourceOptions? options = null)
        {
            return new Connection(name, id, state, options);
        }
    }

    public sealed class ConnectionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) Access key ID to access the Amazon S3 bucket. e.g.: "this-is-not-the-secret"
        /// </summary>
        [Input("accessKeyId")]
        public Input<string>? AccessKeyId { get; set; }

        [Input("accountKey")]
        private Input<string>? _accountKey;

        /// <summary>
        /// (Updatable) Azure storage account key. This property is required when 'authenticationType' is set to 'SHARED_KEY'. e.g.: pa3WbhVATzj56xD4DH1VjOUhApRGEGHvOo58eQJVWIzX+j8j4CUVFcTjpIqDSRaSa1Wo2LbWY5at+AStEgLOIQ== Deprecated: This field is deprecated and replaced by "accountKeySecretId". This field will be removed after February 15 2026.
        /// </summary>
        public Input<string>? AccountKey
        {
            get => _accountKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _accountKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the account key is stored. Note: When provided, 'accountKey' field must not be provided.
        /// </summary>
        [Input("accountKeySecretId")]
        public Input<string>? AccountKeySecretId { get; set; }

        /// <summary>
        /// (Updatable) Sets the Azure storage account name.
        /// </summary>
        [Input("accountName")]
        public Input<string>? AccountName { get; set; }

        [Input("additionalAttributes")]
        private InputList<Inputs.ConnectionAdditionalAttributeArgs>? _additionalAttributes;

        /// <summary>
        /// (Updatable) An array of name-value pair attribute entries. Used as additional parameters in connection string.
        /// </summary>
        public InputList<Inputs.ConnectionAdditionalAttributeArgs> AdditionalAttributes
        {
            get => _additionalAttributes ?? (_additionalAttributes = new InputList<Inputs.ConnectionAdditionalAttributeArgs>());
            set => _additionalAttributes = value;
        }

        /// <summary>
        /// (Updatable) Authentication mode. It can be provided at creation of Oracle Autonomous Database Serverless connections, when a databaseId is provided. The default value is MTLS.
        /// </summary>
        [Input("authenticationMode")]
        public Input<string>? AuthenticationMode { get; set; }

        /// <summary>
        /// (Updatable) Authentication type for Java Message Service.  If not provided, default is NONE. Optional until 2024-06-27, in the release after it will be made required.
        /// </summary>
        [Input("authenticationType")]
        public Input<string>? AuthenticationType { get; set; }

        /// <summary>
        /// (Updatable) The endpoint used for authentication with Microsoft Entra ID (formerly Azure Active Directory). Default value: https://login.microsoftonline.com When connecting to a non-public Azure Cloud, the endpoint must be provided, eg:
        /// * Azure China: https://login.chinacloudapi.cn/
        /// * Azure US Government: https://login.microsoftonline.us/
        /// </summary>
        [Input("azureAuthorityHost")]
        public Input<string>? AzureAuthorityHost { get; set; }

        /// <summary>
        /// (Updatable) Azure tenant ID of the application. This property is required when 'authenticationType' is set to 'AZURE_ACTIVE_DIRECTORY'. e.g.: 14593954-d337-4a61-a364-9f758c64f97f
        /// </summary>
        [Input("azureTenantId")]
        public Input<string>? AzureTenantId { get; set; }

        [Input("bootstrapServers")]
        private InputList<Inputs.ConnectionBootstrapServerArgs>? _bootstrapServers;

        /// <summary>
        /// (Updatable) Kafka bootstrap. Equivalent of bootstrap.servers configuration property in Kafka: list of KafkaBootstrapServer objects specified by host/port. Used for establishing the initial connection to the Kafka cluster. Example: `"server1.example.com:9092,server2.example.com:9092"`
        /// </summary>
        public InputList<Inputs.ConnectionBootstrapServerArgs> BootstrapServers
        {
            get => _bootstrapServers ?? (_bootstrapServers = new InputList<Inputs.ConnectionBootstrapServerArgs>());
            set => _bootstrapServers = value;
        }

        /// <summary>
        /// (Updatable) The information about a new catalog of given type used in an Iceberg connection.
        /// </summary>
        [Input("catalog")]
        public Input<Inputs.ConnectionCatalogArgs>? Catalog { get; set; }

        /// <summary>
        /// (Updatable) Azure client ID of the application. This property is required when 'authenticationType' is set to 'AZURE_ACTIVE_DIRECTORY'. e.g.: 06ecaabf-8b80-4ec8-a0ec-20cbf463703d
        /// </summary>
        [Input("clientId")]
        public Input<string>? ClientId { get; set; }

        [Input("clientSecret")]
        private Input<string>? _clientSecret;

        /// <summary>
        /// (Updatable) Azure client secret (aka application password) for authentication. This property is required when 'authenticationType' is set to 'AZURE_ACTIVE_DIRECTORY'. e.g.: dO29Q~F5-VwnA.lZdd11xFF_t5NAXCaGwDl9NbT1 Deprecated: This field is deprecated and replaced by "clientSecretSecretId". This field will be removed after February 15 2026.
        /// </summary>
        public Input<string>? ClientSecret
        {
            get => _clientSecret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _clientSecret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the client secret is stored. Only applicable for authenticationType == OAUTH_M2M. Note: When provided, 'clientSecret' field must not be provided.
        /// </summary>
        [Input("clientSecretSecretId")]
        public Input<string>? ClientSecretSecretId { get; set; }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// (Updatable) The of Java class implementing javax.jms.ConnectionFactory interface supplied by the Java Message Service provider. e.g.: 'com.stc.jmsjca.core.JConnectionFactoryXA'
        /// </summary>
        [Input("connectionFactory")]
        public Input<string>? ConnectionFactory { get; set; }

        /// <summary>
        /// (Updatable) Connection string. AZURE_SYNAPSE_ANALYTICS e.g.: 'jdbc:sqlserver://&lt;synapse-workspace&gt;.sql.azuresynapse.net:1433;database=&lt;db-name&gt;;encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.sql.azuresynapse.net;loginTimeout=300;', MONGODB e.g.: 'mongodb://mongodb0.example.com:27017/recordsrecords'.
        /// </summary>
        [Input("connectionString")]
        public Input<string>? ConnectionString { get; set; }

        /// <summary>
        /// (Updatable) The connection type.
        /// </summary>
        [Input("connectionType", required: true)]
        public Input<string> ConnectionType { get; set; } = null!;

        /// <summary>
        /// (Updatable) Connection URL. e.g.: 'jdbc:databricks://adb-33934.4.azuredatabricks.net:443/default;transportMode=http;ssl=1;httpPath=sql/protocolv1/o/3393########44/0##3-7-hlrb'
        /// </summary>
        [Input("connectionUrl")]
        public Input<string>? ConnectionUrl { get; set; }

        /// <summary>
        /// (Updatable) The base64 encoded content of the consumer.properties file.
        /// </summary>
        [Input("consumerProperties")]
        public Input<string>? ConsumerProperties { get; set; }

        /// <summary>
        /// (Updatable) The base64 encoded content of the Hadoop Distributed File System configuration file (core-site.xml). It is not included in GET responses if the `view=COMPACT` query parameter is specified.
        /// </summary>
        [Input("coreSiteXml")]
        public Input<string>? CoreSiteXml { get; set; }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Autonomous Json Database.
        /// </summary>
        [Input("databaseId")]
        public Input<string>? DatabaseId { get; set; }

        /// <summary>
        /// (Updatable) The name of the database.
        /// </summary>
        [Input("databaseName")]
        public Input<string>? DatabaseName { get; set; }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database system being referenced.
        /// </summary>
        [Input("dbSystemId")]
        public Input<string>? DbSystemId { get; set; }

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment being referenced.
        /// </summary>
        [Input("deploymentId")]
        public Input<string>? DeploymentId { get; set; }

        /// <summary>
        /// (Updatable) Metadata about this specific object.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) An object's Display Name.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// (Updatable) Indicates that sensitive attributes are provided via Secrets.
        /// </summary>
        [Input("doesUseSecretIds")]
        public Input<bool>? DoesUseSecretIds { get; set; }

        /// <summary>
        /// (Updatable) The endpoint URL of the 3rd party cloud service. e.g.: 'https://kinesis.us-east-1.amazonaws.com' If not provided, GoldenGate will default to the default endpoint in the `Region`.
        /// </summary>
        [Input("endpoint")]
        public Input<string>? Endpoint { get; set; }

        /// <summary>
        /// (Updatable) Fingerprint required by TLS security protocol. E.g.: '6152b2dfbff200f973c5074a5b91d06ab3b472c07c09a1ea57bb7fd406cdce9c'
        /// </summary>
        [Input("fingerprint")]
        public Input<string>? Fingerprint { get; set; }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) The name or address of a host. In case of Generic connection type host and port separated by colon. Example: `"server.example.com:1234"`
        /// For multiple hosts, provide a comma separated list. Example: `"server1.example.com:1000,server1.example.com:2000"`
        /// </summary>
        [Input("host")]
        public Input<string>? Host { get; set; }

        [Input("isLockOverride")]
        public Input<bool>? IsLockOverride { get; set; }

        /// <summary>
        /// (Updatable) The Connection Factory can be looked up using this name. e.g.: 'ConnectionFactory'
        /// </summary>
        [Input("jndiConnectionFactory")]
        public Input<string>? JndiConnectionFactory { get; set; }

        /// <summary>
        /// (Updatable) The implementation of javax.naming.spi.InitialContextFactory interface that the client uses to obtain initial naming context. e.g.: 'org.apache.activemq.jndi.ActiveMQInitialContextFactory'
        /// </summary>
        [Input("jndiInitialContextFactory")]
        public Input<string>? JndiInitialContextFactory { get; set; }

        /// <summary>
        /// (Updatable) The URL that Java Message Service will use to contact the JNDI provider. e.g.: 'tcp://myjms.host.domain:61616?jms.prefetchPolicy.all=1000'
        /// </summary>
        [Input("jndiProviderUrl")]
        public Input<string>? JndiProviderUrl { get; set; }

        [Input("jndiSecurityCredentials")]
        private Input<string>? _jndiSecurityCredentials;

        /// <summary>
        /// (Updatable) The password associated to the principal. Deprecated: This field is deprecated and replaced by "jndiSecurityCredentialsSecretId". This field will be removed after February 15 2026.
        /// </summary>
        public Input<string>? JndiSecurityCredentials
        {
            get => _jndiSecurityCredentials;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _jndiSecurityCredentials = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the security credentials are stored associated to the principal. Note: When provided, 'jndiSecurityCredentials' field must not be provided.
        /// </summary>
        [Input("jndiSecurityCredentialsSecretId")]
        public Input<string>? JndiSecurityCredentialsSecretId { get; set; }

        /// <summary>
        /// (Updatable) Specifies the identity of the principal (user) to be authenticated. e.g.: 'admin2'
        /// </summary>
        [Input("jndiSecurityPrincipal")]
        public Input<string>? JndiSecurityPrincipal { get; set; }

        /// <summary>
        /// (Updatable) Refers to the customer's master key OCID.  If provided, it references a key to manage secrets. Customers must add policies to permit GoldenGate to use this key.
        /// </summary>
        [Input("keyId")]
        public Input<string>? KeyId { get; set; }

        [Input("keyStore")]
        private Input<string>? _keyStore;

        /// <summary>
        /// (Updatable) The base64 encoded content of the KeyStore file. Deprecated: This field is deprecated and replaced by "keyStoreSecretId". This field will be removed after February 15 2026.
        /// </summary>
        public Input<string>? KeyStore
        {
            get => _keyStore;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _keyStore = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("keyStorePassword")]
        private Input<string>? _keyStorePassword;

        /// <summary>
        /// (Updatable) The KeyStore password. Deprecated: This field is deprecated and replaced by "keyStorePasswordSecretId". This field will be removed after February 15 2026.
        /// </summary>
        public Input<string>? KeyStorePassword
        {
            get => _keyStorePassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _keyStorePassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the kafka Ssl KeyStore password is stored. Note: When provided, 'keyStorePassword' field must not be provided.
        /// </summary>
        [Input("keyStorePasswordSecretId")]
        public Input<string>? KeyStorePasswordSecretId { get; set; }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the content of the KeyStore file is stored. Note: When provided, 'keyStore' field must not be provided.
        /// </summary>
        [Input("keyStoreSecretId")]
        public Input<string>? KeyStoreSecretId { get; set; }

        [Input("locks")]
        private InputList<Inputs.ConnectionLockArgs>? _locks;

        /// <summary>
        /// Locks associated with this resource.
        /// </summary>
        public InputList<Inputs.ConnectionLockArgs> Locks
        {
            get => _locks ?? (_locks = new InputList<Inputs.ConnectionLockArgs>());
            set => _locks = value;
        }

        [Input("nsgIds")]
        private InputList<string>? _nsgIds;

        /// <summary>
        /// (Updatable) An array of Network Security Group OCIDs used to define network access for either Deployments or Connections.
        /// </summary>
        public InputList<string> NsgIds
        {
            get => _nsgIds ?? (_nsgIds = new InputList<string>());
            set => _nsgIds = value;
        }

        [Input("password")]
        private Input<string>? _password;

        /// <summary>
        /// (Updatable) The password Oracle GoldenGate uses to connect the associated system of the given technology. It must conform to the specific security requirements including length, case sensitivity, and so on. Deprecated: This field is deprecated and replaced by "passwordSecretId". This field will be removed after February 15 2026.
        /// </summary>
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the password is stored. The password Oracle GoldenGate uses to connect the associated system of the given technology. It must conform to the specific security requirements including length, case sensitivity, and so on. If secretId is used plaintext field must not be provided. Note: When provided, 'password' field must not be provided.
        /// </summary>
        [Input("passwordSecretId")]
        public Input<string>? PasswordSecretId { get; set; }

        /// <summary>
        /// (Updatable) The port of an endpoint usually specified for a connection.
        /// </summary>
        [Input("port")]
        public Input<int>? Port { get; set; }

        /// <summary>
        /// (Updatable) Deprecated: this field will be removed in future versions. Either specify the private IP in the connectionString or host  field, or make sure the host name is resolvable in the target VCN.
        /// 
        /// The private IP address of the connection's endpoint in the customer's VCN, typically a database endpoint or a big data endpoint (e.g. Kafka bootstrap server). In case the privateIp is provided, the subnetId must also be provided. In case the privateIp (and the subnetId) is not provided it is assumed the datasource is publicly accessible. In case the connection is accessible only privately, the lack of privateIp will result in not being able to access the connection.
        /// </summary>
        [Input("privateIp")]
        public Input<string>? PrivateIp { get; set; }

        [Input("privateKeyFile")]
        private Input<string>? _privateKeyFile;

        /// <summary>
        /// (Updatable) The base64 encoded content of the private key file (PEM file) corresponding to the API key of the fingerprint. See documentation: https://docs.oracle.com/en-us/iaas/Content/Identity/Tasks/managingcredentials.htm Deprecated: This field is deprecated and replaced by "privateKeyFileSecretId". This field will be removed after February 15 2026.
        /// </summary>
        public Input<string>? PrivateKeyFile
        {
            get => _privateKeyFile;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _privateKeyFile = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret that stores the content of the private key file (PEM file) corresponding to the API key of the fingerprint. See documentation: https://docs.oracle.com/en-us/iaas/Content/Identity/Tasks/managingcredentials.htm Note: When provided, 'privateKeyFile' field must not be provided.
        /// </summary>
        [Input("privateKeyFileSecretId")]
        public Input<string>? PrivateKeyFileSecretId { get; set; }

        [Input("privateKeyPassphrase")]
        private Input<string>? _privateKeyPassphrase;

        /// <summary>
        /// (Updatable) Password if the private key file is encrypted. Deprecated: This field is deprecated and replaced by "privateKeyPassphraseSecretId". This field will be removed after February 15 2026.
        /// </summary>
        public Input<string>? PrivateKeyPassphrase
        {
            get => _privateKeyPassphrase;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _privateKeyPassphrase = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret that stores the password for the private key file. Note: When provided, 'privateKeyPassphrase' field must not be provided.
        /// </summary>
        [Input("privateKeyPassphraseSecretId")]
        public Input<string>? PrivateKeyPassphraseSecretId { get; set; }

        /// <summary>
        /// (Updatable) The base64 encoded content of the producer.properties file.
        /// </summary>
        [Input("producerProperties")]
        public Input<string>? ProducerProperties { get; set; }

        /// <summary>
        /// (Updatable) The fingerprint of the API Key of the user specified by the userId. See documentation: https://docs.oracle.com/en-us/iaas/Content/Identity/Tasks/managingcredentials.htm
        /// </summary>
        [Input("publicKeyFingerprint")]
        public Input<string>? PublicKeyFingerprint { get; set; }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Redis cluster.
        /// </summary>
        [Input("redisClusterId")]
        public Input<string>? RedisClusterId { get; set; }

        /// <summary>
        /// (Updatable) The name of the AWS region where the bucket is created. If not provided, GoldenGate will default to 'us-west-2'. Note: this property will become mandatory after May 20, 2026.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// (Updatable) Controls the network traffic direction to the target: SHARED_SERVICE_ENDPOINT: Traffic flows through the Goldengate Service's network to public hosts. Cannot be used for private targets.  SHARED_DEPLOYMENT_ENDPOINT: Network traffic flows from the assigned deployment's private endpoint through the deployment's subnet. DEDICATED_ENDPOINT: A dedicated private endpoint is created in the target VCN subnet for the connection. The subnetId is required when DEDICATED_ENDPOINT networking is selected.
        /// </summary>
        [Input("routingMethod")]
        public Input<string>? RoutingMethod { get; set; }

        [Input("sasToken")]
        private Input<string>? _sasToken;

        /// <summary>
        /// (Updatable) Credential that uses a shared access signature (SAS) to authenticate to an Azure Service. This property is required when 'authenticationType' is set to 'SHARED_ACCESS_SIGNATURE'. e.g.: ?sv=2020-06-08&amp;ss=bfqt&amp;srt=sco&amp;sp=rwdlacupyx&amp;se=2020-09-10T20:27:28Z&amp;st=2022-08-05T12:27:28Z&amp;spr=https&amp;sig=C1IgHsiLBmTSStYkXXGLTP8it0xBrArcgCqOsZbXwIQ%3D Deprecated: This field is deprecated and replaced by "sasTokenSecretId". This field will be removed after February 15 2026.
        /// </summary>
        public Input<string>? SasToken
        {
            get => _sasToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _sasToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the sas token is stored. Note: When provided, 'sasToken' field must not be provided.
        /// </summary>
        [Input("sasTokenSecretId")]
        public Input<string>? SasTokenSecretId { get; set; }

        [Input("secretAccessKey")]
        private Input<string>? _secretAccessKey;

        /// <summary>
        /// (Updatable) Secret access key to access the Amazon S3 bucket. e.g.: "this-is-not-the-secret" Deprecated: This field is deprecated and replaced by "secretAccessKeySecretId". This field will be removed after February 15 2026.
        /// </summary>
        public Input<string>? SecretAccessKey
        {
            get => _secretAccessKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _secretAccessKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the secret access key is stored. Note: When provided, 'secretAccessKey' field must not be provided.
        /// </summary>
        [Input("secretAccessKeySecretId")]
        public Input<string>? SecretAccessKeySecretId { get; set; }

        /// <summary>
        /// (Updatable) Security protocol for Java Message Service. If not provided, default is PLAIN. Optional until 2024-06-27, in the release after it will be made required.
        /// </summary>
        [Input("securityProtocol")]
        public Input<string>? SecurityProtocol { get; set; }

        /// <summary>
        /// (Updatable) Comma separated list of Elasticsearch server addresses, specified as host:port entries, where :port is optional.  If port is not specified, it defaults to 9200. Used for establishing the initial connection to the Elasticsearch cluster. Example: `"server1.example.com:4000,server2.example.com:4000"`
        /// </summary>
        [Input("servers")]
        public Input<string>? Servers { get; set; }

        [Input("serviceAccountKeyFile")]
        private Input<string>? _serviceAccountKeyFile;

        /// <summary>
        /// (Updatable) The base64 encoded content of the service account key file containing the credentials required to use Google Cloud Storage. Deprecated: This field is deprecated and replaced by "serviceAccountKeyFileSecretId". This field will be removed after February 15 2026.
        /// </summary>
        public Input<string>? ServiceAccountKeyFile
        {
            get => _serviceAccountKeyFile;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _serviceAccountKeyFile = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the content of the service account key file is stored, which contains the credentials required to use Google Cloud Storage. Note: When provided, 'serviceAccountKeyFile' field must not be provided.
        /// </summary>
        [Input("serviceAccountKeyFileSecretId")]
        public Input<string>? ServiceAccountKeyFileSecretId { get; set; }

        /// <summary>
        /// (Updatable) The mode of the database connection session to be established by the data client. 'REDIRECT' - for a RAC database, 'DIRECT' - for a non-RAC database. Connection to a RAC database involves a redirection received from the SCAN listeners to the database node to connect to. By default the mode would be DIRECT.
        /// </summary>
        [Input("sessionMode")]
        public Input<string>? SessionMode { get; set; }

        /// <summary>
        /// (Updatable) If set to true, Java Naming and Directory Interface (JNDI) properties should be provided.
        /// </summary>
        [Input("shouldUseJndi")]
        public Input<bool>? ShouldUseJndi { get; set; }

        /// <summary>
        /// (Updatable) Specifies that the user intends to authenticate to the instance using a resource principal. Default: false
        /// </summary>
        [Input("shouldUseResourcePrincipal")]
        public Input<bool>? ShouldUseResourcePrincipal { get; set; }

        /// <summary>
        /// (Updatable) If set to true, the driver validates the certificate that is sent by the database server.
        /// </summary>
        [Input("shouldValidateServerCertificate")]
        public Input<bool>? ShouldValidateServerCertificate { get; set; }

        /// <summary>
        /// (Updatable) The base64 encoded certificate of the trusted certificate authorities (Trusted CA) for PostgreSQL.  The supported file formats are .pem and .crt. It is not included in GET responses if the `view=COMPACT` query parameter is specified.
        /// </summary>
        [Input("sslCa")]
        public Input<string>? SslCa { get; set; }

        /// <summary>
        /// (Updatable) Client Certificate - The base64 encoded content of a .pem or .crt file containing the client public key (for 2-way SSL). It is not included in GET responses if the `view=COMPACT` query parameter is specified.
        /// </summary>
        [Input("sslCert")]
        public Input<string>? SslCert { get; set; }

        [Input("sslClientKeystash")]
        private Input<string>? _sslClientKeystash;

        /// <summary>
        /// (Updatable) The base64 encoded keystash file which contains the encrypted password to the key database file. This property is not supported for IBM Db2 for i, as client TLS mode is not available.
        /// 
        /// Deprecated: This field is deprecated and replaced by "sslClientKeystashSecretId". This field will be removed after February 15 2026.
        /// </summary>
        public Input<string>? SslClientKeystash
        {
            get => _sslClientKeystash;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _sslClientKeystash = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the keystash file is stored,  which contains the encrypted password to the key database file. This property is not supported for IBM Db2 for i, as client TLS mode is not available.
        /// 
        /// Note: When provided, 'sslClientKeystash' field must not be provided.
        /// </summary>
        [Input("sslClientKeystashSecretId")]
        public Input<string>? SslClientKeystashSecretId { get; set; }

        [Input("sslClientKeystoredb")]
        private Input<string>? _sslClientKeystoredb;

        /// <summary>
        /// (Updatable) The base64 encoded keystore file created at the client containing the server certificate / CA root certificate. This property is not supported for IBM Db2 for i, as client TLS mode is not available.
        /// 
        /// Deprecated: This field is deprecated and replaced by "sslClientKeystoredbSecretId". This field will be removed after February 15 2026.
        /// </summary>
        public Input<string>? SslClientKeystoredb
        {
            get => _sslClientKeystoredb;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _sslClientKeystoredb = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the keystore file stored,  which created at the client containing the server certificate / CA root certificate. This property is not supported for IBM Db2 for i, as client TLS mode is not available.
        /// 
        /// Note: When provided, 'sslClientKeystoredb' field must not be provided.
        /// </summary>
        [Input("sslClientKeystoredbSecretId")]
        public Input<string>? SslClientKeystoredbSecretId { get; set; }

        /// <summary>
        /// (Updatable) The base64 encoded list of certificates revoked by the trusted certificate authorities (Trusted CA). Note: This is an optional property and only applicable if TLS/MTLS option is selected. It is not included in GET responses if the `view=COMPACT` query parameter is specified.
        /// </summary>
        [Input("sslCrl")]
        public Input<string>? SslCrl { get; set; }

        [Input("sslKey")]
        private Input<string>? _sslKey;

        /// <summary>
        /// (Updatable) Client Key - The base64 encoded content of a .pem or .crt file containing the client private key (for 2-way SSL). Deprecated: This field is deprecated and replaced by "sslKeySecretId". This field will be removed after February 15 2026.
        /// </summary>
        public Input<string>? SslKey
        {
            get => _sslKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _sslKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("sslKeyPassword")]
        private Input<string>? _sslKeyPassword;

        /// <summary>
        /// (Updatable) The password for the cert inside of the KeyStore. In case it differs from the KeyStore password, it should be provided. Deprecated: This field is deprecated and replaced by "sslKeyPasswordSecretId". This field will be removed after February 15 2026.
        /// </summary>
        public Input<string>? SslKeyPassword
        {
            get => _sslKeyPassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _sslKeyPassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the password is stored for the cert inside of the Keystore. In case it differs from the KeyStore password, it should be provided. Note: When provided, 'sslKeyPassword' field must not be provided.
        /// </summary>
        [Input("sslKeyPasswordSecretId")]
        public Input<string>? SslKeyPasswordSecretId { get; set; }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret that stores the Client Key
        /// * The content of a .pem or .crt file containing the client private key (for 2-way SSL). Note: When provided, 'sslKey' field must not be provided.
        /// </summary>
        [Input("sslKeySecretId")]
        public Input<string>? SslKeySecretId { get; set; }

        /// <summary>
        /// (Updatable) SSL modes for PostgreSQL.
        /// </summary>
        [Input("sslMode")]
        public Input<string>? SslMode { get; set; }

        /// <summary>
        /// (Updatable) The base64 encoded file which contains the self-signed server certificate / Certificate Authority (CA) certificate. It is not included in GET responses if the `view=COMPACT` query parameter is specified.
        /// </summary>
        [Input("sslServerCertificate")]
        public Input<string>? SslServerCertificate { get; set; }

        /// <summary>
        /// (Updatable) The information about a new storage of given type used in an Iceberg connection.
        /// </summary>
        [Input("storage")]
        public Input<Inputs.ConnectionStorageArgs>? Storage { get; set; }

        /// <summary>
        /// (Updatable) Optional. External storage credential name to access files on object storage such as ADLS Gen2, S3 or GCS.
        /// </summary>
        [Input("storageCredentialName")]
        public Input<string>? StorageCredentialName { get; set; }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream pool being referenced.
        /// </summary>
        [Input("streamPoolId")]
        public Input<string>? StreamPoolId { get; set; }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the target subnet of the dedicated connection.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        /// <summary>
        /// The Kafka (e.g. Confluent) Schema Registry technology type.
        /// </summary>
        [Input("technologyType", required: true)]
        public Input<string> TechnologyType { get; set; } = null!;

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the related Oracle Cloud Infrastructure tenancy.
        /// </summary>
        [Input("tenancyId")]
        public Input<string>? TenancyId { get; set; }

        /// <summary>
        /// (Updatable) Azure tenant ID of the application. e.g.: 14593954-d337-4a61-a364-9f758c64f97f
        /// </summary>
        [Input("tenantId")]
        public Input<string>? TenantId { get; set; }

        /// <summary>
        /// (Updatable) Database Certificate - The base64 encoded content of a .pem file, containing the server public key (for 1 and 2-way SSL). It is not included in GET responses if the `view=COMPACT` query parameter is specified.
        /// </summary>
        [Input("tlsCaFile")]
        public Input<string>? TlsCaFile { get; set; }

        /// <summary>
        /// (Updatable) Client Certificate - The base64 encoded content of a .pem file, containing the client public key (for 2-way SSL). Deprecated: This field is deprecated and replaced by "tlsCertificateKeyFileSecretId". This field will be removed after February 15 2026.
        /// </summary>
        [Input("tlsCertificateKeyFile")]
        public Input<string>? TlsCertificateKeyFile { get; set; }

        [Input("tlsCertificateKeyFilePassword")]
        private Input<string>? _tlsCertificateKeyFilePassword;

        /// <summary>
        /// (Updatable) Client Certificate key file password. Deprecated: This field is deprecated and replaced by "tlsCertificateKeyFilePasswordSecretId". This field will be removed after February 15 2026.
        /// </summary>
        public Input<string>? TlsCertificateKeyFilePassword
        {
            get => _tlsCertificateKeyFilePassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _tlsCertificateKeyFilePassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("tlsCertificateKeyFilePasswordSecretId")]
        private Input<string>? _tlsCertificateKeyFilePasswordSecretId;

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret that stores the password of the tls certificate key file. Note: When provided, 'tlsCertificateKeyFilePassword' field must not be provided.
        /// </summary>
        public Input<string>? TlsCertificateKeyFilePasswordSecretId
        {
            get => _tlsCertificateKeyFilePasswordSecretId;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _tlsCertificateKeyFilePasswordSecretId = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret that stores the certificate key file of the mtls connection.
        /// * The content of a .pem file containing the client private key (for 2-way SSL). Note: When provided, 'tlsCertificateKeyFile' field must not be provided.
        /// </summary>
        [Input("tlsCertificateKeyFileSecretId")]
        public Input<string>? TlsCertificateKeyFileSecretId { get; set; }

        /// <summary>
        /// (Updatable) If value is true, it triggers connection refresh action and this attribute change will always show up in the "update" plan and will apply steps in order to refresh secrets and dependent service properties (such as ADB connection strings, wallets, etc..).
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("triggerRefresh")]
        public Input<bool>? TriggerRefresh { get; set; }

        [Input("trustStore")]
        private Input<string>? _trustStore;

        /// <summary>
        /// (Updatable) The base64 encoded content of the TrustStore file. Deprecated: This field is deprecated and replaced by "trustStoreSecretId". This field will be removed after February 15 2026.
        /// </summary>
        public Input<string>? TrustStore
        {
            get => _trustStore;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _trustStore = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("trustStorePassword")]
        private Input<string>? _trustStorePassword;

        /// <summary>
        /// (Updatable) The TrustStore password. Deprecated: This field is deprecated and replaced by "trustStorePasswordSecretId". This field will be removed after February 15 2026.
        /// </summary>
        public Input<string>? TrustStorePassword
        {
            get => _trustStorePassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _trustStorePassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the kafka Ssl TrustStore password is stored. Note: When provided, 'trustStorePassword' field must not be provided.
        /// </summary>
        [Input("trustStorePasswordSecretId")]
        public Input<string>? TrustStorePasswordSecretId { get; set; }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the content of the TrustStore file is stored. Note: When provided, 'trustStore' field must not be provided.
        /// </summary>
        [Input("trustStoreSecretId")]
        public Input<string>? TrustStoreSecretId { get; set; }

        /// <summary>
        /// (Updatable) Kafka Schema Registry URL. e.g.: 'https://server1.us.oracle.com:8081'
        /// </summary>
        [Input("url")]
        public Input<string>? Url { get; set; }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure user who will access the Oracle NoSQL database. The user must have write access to the table they want to connect to. If the user is not provided, backend will default to the user who is calling the API endpoint.
        /// </summary>
        [Input("userId")]
        public Input<string>? UserId { get; set; }

        /// <summary>
        /// (Updatable) The username Oracle GoldenGate uses to connect the associated system of the given technology. This username must already exist and be available by the system/application to be connected to and must conform to the case sensitivty requirments defined in it.
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        /// <summary>
        /// (Updatable) Refers to the customer's vault OCID.  If provided, it references a vault where GoldenGate can manage secrets. Customers must add policies to permit GoldenGate to manage secrets contained within this vault.
        /// </summary>
        [Input("vaultId")]
        public Input<string>? VaultId { get; set; }

        [Input("wallet")]
        private Input<string>? _wallet;

        /// <summary>
        /// (Updatable) The wallet contents Oracle GoldenGate uses to make connections to a database. This attribute is expected to be base64 encoded. Deprecated: This field is deprecated and replaced by "walletSecretId". This field will be removed after February 15 2026.
        /// </summary>
        public Input<string>? Wallet
        {
            get => _wallet;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _wallet = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the wallet file is stored.  The wallet contents Oracle GoldenGate uses to make connections to a database. Note: When provided, 'wallet' field must not be provided.
        /// </summary>
        [Input("walletSecretId")]
        public Input<string>? WalletSecretId { get; set; }

        public ConnectionArgs()
        {
        }
        public static new ConnectionArgs Empty => new ConnectionArgs();
    }

    public sealed class ConnectionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) Access key ID to access the Amazon S3 bucket. e.g.: "this-is-not-the-secret"
        /// </summary>
        [Input("accessKeyId")]
        public Input<string>? AccessKeyId { get; set; }

        [Input("accountKey")]
        private Input<string>? _accountKey;

        /// <summary>
        /// (Updatable) Azure storage account key. This property is required when 'authenticationType' is set to 'SHARED_KEY'. e.g.: pa3WbhVATzj56xD4DH1VjOUhApRGEGHvOo58eQJVWIzX+j8j4CUVFcTjpIqDSRaSa1Wo2LbWY5at+AStEgLOIQ== Deprecated: This field is deprecated and replaced by "accountKeySecretId". This field will be removed after February 15 2026.
        /// </summary>
        public Input<string>? AccountKey
        {
            get => _accountKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _accountKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the account key is stored. Note: When provided, 'accountKey' field must not be provided.
        /// </summary>
        [Input("accountKeySecretId")]
        public Input<string>? AccountKeySecretId { get; set; }

        /// <summary>
        /// (Updatable) Sets the Azure storage account name.
        /// </summary>
        [Input("accountName")]
        public Input<string>? AccountName { get; set; }

        [Input("additionalAttributes")]
        private InputList<Inputs.ConnectionAdditionalAttributeGetArgs>? _additionalAttributes;

        /// <summary>
        /// (Updatable) An array of name-value pair attribute entries. Used as additional parameters in connection string.
        /// </summary>
        public InputList<Inputs.ConnectionAdditionalAttributeGetArgs> AdditionalAttributes
        {
            get => _additionalAttributes ?? (_additionalAttributes = new InputList<Inputs.ConnectionAdditionalAttributeGetArgs>());
            set => _additionalAttributes = value;
        }

        /// <summary>
        /// (Updatable) Authentication mode. It can be provided at creation of Oracle Autonomous Database Serverless connections, when a databaseId is provided. The default value is MTLS.
        /// </summary>
        [Input("authenticationMode")]
        public Input<string>? AuthenticationMode { get; set; }

        /// <summary>
        /// (Updatable) Authentication type for Java Message Service.  If not provided, default is NONE. Optional until 2024-06-27, in the release after it will be made required.
        /// </summary>
        [Input("authenticationType")]
        public Input<string>? AuthenticationType { get; set; }

        /// <summary>
        /// (Updatable) The endpoint used for authentication with Microsoft Entra ID (formerly Azure Active Directory). Default value: https://login.microsoftonline.com When connecting to a non-public Azure Cloud, the endpoint must be provided, eg:
        /// * Azure China: https://login.chinacloudapi.cn/
        /// * Azure US Government: https://login.microsoftonline.us/
        /// </summary>
        [Input("azureAuthorityHost")]
        public Input<string>? AzureAuthorityHost { get; set; }

        /// <summary>
        /// (Updatable) Azure tenant ID of the application. This property is required when 'authenticationType' is set to 'AZURE_ACTIVE_DIRECTORY'. e.g.: 14593954-d337-4a61-a364-9f758c64f97f
        /// </summary>
        [Input("azureTenantId")]
        public Input<string>? AzureTenantId { get; set; }

        [Input("bootstrapServers")]
        private InputList<Inputs.ConnectionBootstrapServerGetArgs>? _bootstrapServers;

        /// <summary>
        /// (Updatable) Kafka bootstrap. Equivalent of bootstrap.servers configuration property in Kafka: list of KafkaBootstrapServer objects specified by host/port. Used for establishing the initial connection to the Kafka cluster. Example: `"server1.example.com:9092,server2.example.com:9092"`
        /// </summary>
        public InputList<Inputs.ConnectionBootstrapServerGetArgs> BootstrapServers
        {
            get => _bootstrapServers ?? (_bootstrapServers = new InputList<Inputs.ConnectionBootstrapServerGetArgs>());
            set => _bootstrapServers = value;
        }

        /// <summary>
        /// (Updatable) The information about a new catalog of given type used in an Iceberg connection.
        /// </summary>
        [Input("catalog")]
        public Input<Inputs.ConnectionCatalogGetArgs>? Catalog { get; set; }

        /// <summary>
        /// (Updatable) Azure client ID of the application. This property is required when 'authenticationType' is set to 'AZURE_ACTIVE_DIRECTORY'. e.g.: 06ecaabf-8b80-4ec8-a0ec-20cbf463703d
        /// </summary>
        [Input("clientId")]
        public Input<string>? ClientId { get; set; }

        [Input("clientSecret")]
        private Input<string>? _clientSecret;

        /// <summary>
        /// (Updatable) Azure client secret (aka application password) for authentication. This property is required when 'authenticationType' is set to 'AZURE_ACTIVE_DIRECTORY'. e.g.: dO29Q~F5-VwnA.lZdd11xFF_t5NAXCaGwDl9NbT1 Deprecated: This field is deprecated and replaced by "clientSecretSecretId". This field will be removed after February 15 2026.
        /// </summary>
        public Input<string>? ClientSecret
        {
            get => _clientSecret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _clientSecret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the client secret is stored. Only applicable for authenticationType == OAUTH_M2M. Note: When provided, 'clientSecret' field must not be provided.
        /// </summary>
        [Input("clientSecretSecretId")]
        public Input<string>? ClientSecretSecretId { get; set; }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// (Updatable) The of Java class implementing javax.jms.ConnectionFactory interface supplied by the Java Message Service provider. e.g.: 'com.stc.jmsjca.core.JConnectionFactoryXA'
        /// </summary>
        [Input("connectionFactory")]
        public Input<string>? ConnectionFactory { get; set; }

        /// <summary>
        /// (Updatable) Connection string. AZURE_SYNAPSE_ANALYTICS e.g.: 'jdbc:sqlserver://&lt;synapse-workspace&gt;.sql.azuresynapse.net:1433;database=&lt;db-name&gt;;encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.sql.azuresynapse.net;loginTimeout=300;', MONGODB e.g.: 'mongodb://mongodb0.example.com:27017/recordsrecords'.
        /// </summary>
        [Input("connectionString")]
        public Input<string>? ConnectionString { get; set; }

        /// <summary>
        /// (Updatable) The connection type.
        /// </summary>
        [Input("connectionType")]
        public Input<string>? ConnectionType { get; set; }

        /// <summary>
        /// (Updatable) Connection URL. e.g.: 'jdbc:databricks://adb-33934.4.azuredatabricks.net:443/default;transportMode=http;ssl=1;httpPath=sql/protocolv1/o/3393########44/0##3-7-hlrb'
        /// </summary>
        [Input("connectionUrl")]
        public Input<string>? ConnectionUrl { get; set; }

        /// <summary>
        /// (Updatable) The base64 encoded content of the consumer.properties file.
        /// </summary>
        [Input("consumerProperties")]
        public Input<string>? ConsumerProperties { get; set; }

        /// <summary>
        /// (Updatable) The base64 encoded content of the Hadoop Distributed File System configuration file (core-site.xml). It is not included in GET responses if the `view=COMPACT` query parameter is specified.
        /// </summary>
        [Input("coreSiteXml")]
        public Input<string>? CoreSiteXml { get; set; }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Autonomous Json Database.
        /// </summary>
        [Input("databaseId")]
        public Input<string>? DatabaseId { get; set; }

        /// <summary>
        /// (Updatable) The name of the database.
        /// </summary>
        [Input("databaseName")]
        public Input<string>? DatabaseName { get; set; }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database system being referenced.
        /// </summary>
        [Input("dbSystemId")]
        public Input<string>? DbSystemId { get; set; }

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment being referenced.
        /// </summary>
        [Input("deploymentId")]
        public Input<string>? DeploymentId { get; set; }

        /// <summary>
        /// (Updatable) Metadata about this specific object.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) An object's Display Name.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// (Updatable) Indicates that sensitive attributes are provided via Secrets.
        /// </summary>
        [Input("doesUseSecretIds")]
        public Input<bool>? DoesUseSecretIds { get; set; }

        /// <summary>
        /// (Updatable) The endpoint URL of the 3rd party cloud service. e.g.: 'https://kinesis.us-east-1.amazonaws.com' If not provided, GoldenGate will default to the default endpoint in the `Region`.
        /// </summary>
        [Input("endpoint")]
        public Input<string>? Endpoint { get; set; }

        /// <summary>
        /// (Updatable) Fingerprint required by TLS security protocol. E.g.: '6152b2dfbff200f973c5074a5b91d06ab3b472c07c09a1ea57bb7fd406cdce9c'
        /// </summary>
        [Input("fingerprint")]
        public Input<string>? Fingerprint { get; set; }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) The name or address of a host. In case of Generic connection type host and port separated by colon. Example: `"server.example.com:1234"`
        /// For multiple hosts, provide a comma separated list. Example: `"server1.example.com:1000,server1.example.com:2000"`
        /// </summary>
        [Input("host")]
        public Input<string>? Host { get; set; }

        [Input("ingressIps")]
        private InputList<Inputs.ConnectionIngressIpGetArgs>? _ingressIps;

        /// <summary>
        /// List of ingress IP addresses from where the GoldenGate deployment connects to this connection's privateIp.  Customers may optionally set up ingress security rules to restrict traffic from these IP addresses.
        /// </summary>
        public InputList<Inputs.ConnectionIngressIpGetArgs> IngressIps
        {
            get => _ingressIps ?? (_ingressIps = new InputList<Inputs.ConnectionIngressIpGetArgs>());
            set => _ingressIps = value;
        }

        [Input("isLockOverride")]
        public Input<bool>? IsLockOverride { get; set; }

        /// <summary>
        /// (Updatable) The Connection Factory can be looked up using this name. e.g.: 'ConnectionFactory'
        /// </summary>
        [Input("jndiConnectionFactory")]
        public Input<string>? JndiConnectionFactory { get; set; }

        /// <summary>
        /// (Updatable) The implementation of javax.naming.spi.InitialContextFactory interface that the client uses to obtain initial naming context. e.g.: 'org.apache.activemq.jndi.ActiveMQInitialContextFactory'
        /// </summary>
        [Input("jndiInitialContextFactory")]
        public Input<string>? JndiInitialContextFactory { get; set; }

        /// <summary>
        /// (Updatable) The URL that Java Message Service will use to contact the JNDI provider. e.g.: 'tcp://myjms.host.domain:61616?jms.prefetchPolicy.all=1000'
        /// </summary>
        [Input("jndiProviderUrl")]
        public Input<string>? JndiProviderUrl { get; set; }

        [Input("jndiSecurityCredentials")]
        private Input<string>? _jndiSecurityCredentials;

        /// <summary>
        /// (Updatable) The password associated to the principal. Deprecated: This field is deprecated and replaced by "jndiSecurityCredentialsSecretId". This field will be removed after February 15 2026.
        /// </summary>
        public Input<string>? JndiSecurityCredentials
        {
            get => _jndiSecurityCredentials;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _jndiSecurityCredentials = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the security credentials are stored associated to the principal. Note: When provided, 'jndiSecurityCredentials' field must not be provided.
        /// </summary>
        [Input("jndiSecurityCredentialsSecretId")]
        public Input<string>? JndiSecurityCredentialsSecretId { get; set; }

        /// <summary>
        /// (Updatable) Specifies the identity of the principal (user) to be authenticated. e.g.: 'admin2'
        /// </summary>
        [Input("jndiSecurityPrincipal")]
        public Input<string>? JndiSecurityPrincipal { get; set; }

        /// <summary>
        /// (Updatable) Refers to the customer's master key OCID.  If provided, it references a key to manage secrets. Customers must add policies to permit GoldenGate to use this key.
        /// </summary>
        [Input("keyId")]
        public Input<string>? KeyId { get; set; }

        [Input("keyStore")]
        private Input<string>? _keyStore;

        /// <summary>
        /// (Updatable) The base64 encoded content of the KeyStore file. Deprecated: This field is deprecated and replaced by "keyStoreSecretId". This field will be removed after February 15 2026.
        /// </summary>
        public Input<string>? KeyStore
        {
            get => _keyStore;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _keyStore = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("keyStorePassword")]
        private Input<string>? _keyStorePassword;

        /// <summary>
        /// (Updatable) The KeyStore password. Deprecated: This field is deprecated and replaced by "keyStorePasswordSecretId". This field will be removed after February 15 2026.
        /// </summary>
        public Input<string>? KeyStorePassword
        {
            get => _keyStorePassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _keyStorePassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the kafka Ssl KeyStore password is stored. Note: When provided, 'keyStorePassword' field must not be provided.
        /// </summary>
        [Input("keyStorePasswordSecretId")]
        public Input<string>? KeyStorePasswordSecretId { get; set; }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the content of the KeyStore file is stored. Note: When provided, 'keyStore' field must not be provided.
        /// </summary>
        [Input("keyStoreSecretId")]
        public Input<string>? KeyStoreSecretId { get; set; }

        /// <summary>
        /// Describes the object's current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
        /// </summary>
        [Input("lifecycleDetails")]
        public Input<string>? LifecycleDetails { get; set; }

        [Input("locks")]
        private InputList<Inputs.ConnectionLockGetArgs>? _locks;

        /// <summary>
        /// Locks associated with this resource.
        /// </summary>
        public InputList<Inputs.ConnectionLockGetArgs> Locks
        {
            get => _locks ?? (_locks = new InputList<Inputs.ConnectionLockGetArgs>());
            set => _locks = value;
        }

        [Input("nsgIds")]
        private InputList<string>? _nsgIds;

        /// <summary>
        /// (Updatable) An array of Network Security Group OCIDs used to define network access for either Deployments or Connections.
        /// </summary>
        public InputList<string> NsgIds
        {
            get => _nsgIds ?? (_nsgIds = new InputList<string>());
            set => _nsgIds = value;
        }

        [Input("password")]
        private Input<string>? _password;

        /// <summary>
        /// (Updatable) The password Oracle GoldenGate uses to connect the associated system of the given technology. It must conform to the specific security requirements including length, case sensitivity, and so on. Deprecated: This field is deprecated and replaced by "passwordSecretId". This field will be removed after February 15 2026.
        /// </summary>
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the password is stored. The password Oracle GoldenGate uses to connect the associated system of the given technology. It must conform to the specific security requirements including length, case sensitivity, and so on. If secretId is used plaintext field must not be provided. Note: When provided, 'password' field must not be provided.
        /// </summary>
        [Input("passwordSecretId")]
        public Input<string>? PasswordSecretId { get; set; }

        /// <summary>
        /// (Updatable) The port of an endpoint usually specified for a connection.
        /// </summary>
        [Input("port")]
        public Input<int>? Port { get; set; }

        /// <summary>
        /// (Updatable) Deprecated: this field will be removed in future versions. Either specify the private IP in the connectionString or host  field, or make sure the host name is resolvable in the target VCN.
        /// 
        /// The private IP address of the connection's endpoint in the customer's VCN, typically a database endpoint or a big data endpoint (e.g. Kafka bootstrap server). In case the privateIp is provided, the subnetId must also be provided. In case the privateIp (and the subnetId) is not provided it is assumed the datasource is publicly accessible. In case the connection is accessible only privately, the lack of privateIp will result in not being able to access the connection.
        /// </summary>
        [Input("privateIp")]
        public Input<string>? PrivateIp { get; set; }

        [Input("privateKeyFile")]
        private Input<string>? _privateKeyFile;

        /// <summary>
        /// (Updatable) The base64 encoded content of the private key file (PEM file) corresponding to the API key of the fingerprint. See documentation: https://docs.oracle.com/en-us/iaas/Content/Identity/Tasks/managingcredentials.htm Deprecated: This field is deprecated and replaced by "privateKeyFileSecretId". This field will be removed after February 15 2026.
        /// </summary>
        public Input<string>? PrivateKeyFile
        {
            get => _privateKeyFile;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _privateKeyFile = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret that stores the content of the private key file (PEM file) corresponding to the API key of the fingerprint. See documentation: https://docs.oracle.com/en-us/iaas/Content/Identity/Tasks/managingcredentials.htm Note: When provided, 'privateKeyFile' field must not be provided.
        /// </summary>
        [Input("privateKeyFileSecretId")]
        public Input<string>? PrivateKeyFileSecretId { get; set; }

        [Input("privateKeyPassphrase")]
        private Input<string>? _privateKeyPassphrase;

        /// <summary>
        /// (Updatable) Password if the private key file is encrypted. Deprecated: This field is deprecated and replaced by "privateKeyPassphraseSecretId". This field will be removed after February 15 2026.
        /// </summary>
        public Input<string>? PrivateKeyPassphrase
        {
            get => _privateKeyPassphrase;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _privateKeyPassphrase = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret that stores the password for the private key file. Note: When provided, 'privateKeyPassphrase' field must not be provided.
        /// </summary>
        [Input("privateKeyPassphraseSecretId")]
        public Input<string>? PrivateKeyPassphraseSecretId { get; set; }

        /// <summary>
        /// (Updatable) The base64 encoded content of the producer.properties file.
        /// </summary>
        [Input("producerProperties")]
        public Input<string>? ProducerProperties { get; set; }

        /// <summary>
        /// (Updatable) The fingerprint of the API Key of the user specified by the userId. See documentation: https://docs.oracle.com/en-us/iaas/Content/Identity/Tasks/managingcredentials.htm
        /// </summary>
        [Input("publicKeyFingerprint")]
        public Input<string>? PublicKeyFingerprint { get; set; }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Redis cluster.
        /// </summary>
        [Input("redisClusterId")]
        public Input<string>? RedisClusterId { get; set; }

        /// <summary>
        /// (Updatable) The name of the AWS region where the bucket is created. If not provided, GoldenGate will default to 'us-west-2'. Note: this property will become mandatory after May 20, 2026.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// (Updatable) Controls the network traffic direction to the target: SHARED_SERVICE_ENDPOINT: Traffic flows through the Goldengate Service's network to public hosts. Cannot be used for private targets.  SHARED_DEPLOYMENT_ENDPOINT: Network traffic flows from the assigned deployment's private endpoint through the deployment's subnet. DEDICATED_ENDPOINT: A dedicated private endpoint is created in the target VCN subnet for the connection. The subnetId is required when DEDICATED_ENDPOINT networking is selected.
        /// </summary>
        [Input("routingMethod")]
        public Input<string>? RoutingMethod { get; set; }

        [Input("sasToken")]
        private Input<string>? _sasToken;

        /// <summary>
        /// (Updatable) Credential that uses a shared access signature (SAS) to authenticate to an Azure Service. This property is required when 'authenticationType' is set to 'SHARED_ACCESS_SIGNATURE'. e.g.: ?sv=2020-06-08&amp;ss=bfqt&amp;srt=sco&amp;sp=rwdlacupyx&amp;se=2020-09-10T20:27:28Z&amp;st=2022-08-05T12:27:28Z&amp;spr=https&amp;sig=C1IgHsiLBmTSStYkXXGLTP8it0xBrArcgCqOsZbXwIQ%3D Deprecated: This field is deprecated and replaced by "sasTokenSecretId". This field will be removed after February 15 2026.
        /// </summary>
        public Input<string>? SasToken
        {
            get => _sasToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _sasToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the sas token is stored. Note: When provided, 'sasToken' field must not be provided.
        /// </summary>
        [Input("sasTokenSecretId")]
        public Input<string>? SasTokenSecretId { get; set; }

        [Input("secretAccessKey")]
        private Input<string>? _secretAccessKey;

        /// <summary>
        /// (Updatable) Secret access key to access the Amazon S3 bucket. e.g.: "this-is-not-the-secret" Deprecated: This field is deprecated and replaced by "secretAccessKeySecretId". This field will be removed after February 15 2026.
        /// </summary>
        public Input<string>? SecretAccessKey
        {
            get => _secretAccessKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _secretAccessKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the secret access key is stored. Note: When provided, 'secretAccessKey' field must not be provided.
        /// </summary>
        [Input("secretAccessKeySecretId")]
        public Input<string>? SecretAccessKeySecretId { get; set; }

        /// <summary>
        /// (Updatable) Security protocol for Java Message Service. If not provided, default is PLAIN. Optional until 2024-06-27, in the release after it will be made required.
        /// </summary>
        [Input("securityProtocol")]
        public Input<string>? SecurityProtocol { get; set; }

        /// <summary>
        /// (Updatable) Comma separated list of Elasticsearch server addresses, specified as host:port entries, where :port is optional.  If port is not specified, it defaults to 9200. Used for establishing the initial connection to the Elasticsearch cluster. Example: `"server1.example.com:4000,server2.example.com:4000"`
        /// </summary>
        [Input("servers")]
        public Input<string>? Servers { get; set; }

        [Input("serviceAccountKeyFile")]
        private Input<string>? _serviceAccountKeyFile;

        /// <summary>
        /// (Updatable) The base64 encoded content of the service account key file containing the credentials required to use Google Cloud Storage. Deprecated: This field is deprecated and replaced by "serviceAccountKeyFileSecretId". This field will be removed after February 15 2026.
        /// </summary>
        public Input<string>? ServiceAccountKeyFile
        {
            get => _serviceAccountKeyFile;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _serviceAccountKeyFile = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the content of the service account key file is stored, which contains the credentials required to use Google Cloud Storage. Note: When provided, 'serviceAccountKeyFile' field must not be provided.
        /// </summary>
        [Input("serviceAccountKeyFileSecretId")]
        public Input<string>? ServiceAccountKeyFileSecretId { get; set; }

        /// <summary>
        /// (Updatable) The mode of the database connection session to be established by the data client. 'REDIRECT' - for a RAC database, 'DIRECT' - for a non-RAC database. Connection to a RAC database involves a redirection received from the SCAN listeners to the database node to connect to. By default the mode would be DIRECT.
        /// </summary>
        [Input("sessionMode")]
        public Input<string>? SessionMode { get; set; }

        /// <summary>
        /// (Updatable) If set to true, Java Naming and Directory Interface (JNDI) properties should be provided.
        /// </summary>
        [Input("shouldUseJndi")]
        public Input<bool>? ShouldUseJndi { get; set; }

        /// <summary>
        /// (Updatable) Specifies that the user intends to authenticate to the instance using a resource principal. Default: false
        /// </summary>
        [Input("shouldUseResourcePrincipal")]
        public Input<bool>? ShouldUseResourcePrincipal { get; set; }

        /// <summary>
        /// (Updatable) If set to true, the driver validates the certificate that is sent by the database server.
        /// </summary>
        [Input("shouldValidateServerCertificate")]
        public Input<bool>? ShouldValidateServerCertificate { get; set; }

        /// <summary>
        /// (Updatable) The base64 encoded certificate of the trusted certificate authorities (Trusted CA) for PostgreSQL.  The supported file formats are .pem and .crt. It is not included in GET responses if the `view=COMPACT` query parameter is specified.
        /// </summary>
        [Input("sslCa")]
        public Input<string>? SslCa { get; set; }

        /// <summary>
        /// (Updatable) Client Certificate - The base64 encoded content of a .pem or .crt file containing the client public key (for 2-way SSL). It is not included in GET responses if the `view=COMPACT` query parameter is specified.
        /// </summary>
        [Input("sslCert")]
        public Input<string>? SslCert { get; set; }

        [Input("sslClientKeystash")]
        private Input<string>? _sslClientKeystash;

        /// <summary>
        /// (Updatable) The base64 encoded keystash file which contains the encrypted password to the key database file. This property is not supported for IBM Db2 for i, as client TLS mode is not available.
        /// 
        /// Deprecated: This field is deprecated and replaced by "sslClientKeystashSecretId". This field will be removed after February 15 2026.
        /// </summary>
        public Input<string>? SslClientKeystash
        {
            get => _sslClientKeystash;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _sslClientKeystash = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the keystash file is stored,  which contains the encrypted password to the key database file. This property is not supported for IBM Db2 for i, as client TLS mode is not available.
        /// 
        /// Note: When provided, 'sslClientKeystash' field must not be provided.
        /// </summary>
        [Input("sslClientKeystashSecretId")]
        public Input<string>? SslClientKeystashSecretId { get; set; }

        [Input("sslClientKeystoredb")]
        private Input<string>? _sslClientKeystoredb;

        /// <summary>
        /// (Updatable) The base64 encoded keystore file created at the client containing the server certificate / CA root certificate. This property is not supported for IBM Db2 for i, as client TLS mode is not available.
        /// 
        /// Deprecated: This field is deprecated and replaced by "sslClientKeystoredbSecretId". This field will be removed after February 15 2026.
        /// </summary>
        public Input<string>? SslClientKeystoredb
        {
            get => _sslClientKeystoredb;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _sslClientKeystoredb = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the keystore file stored,  which created at the client containing the server certificate / CA root certificate. This property is not supported for IBM Db2 for i, as client TLS mode is not available.
        /// 
        /// Note: When provided, 'sslClientKeystoredb' field must not be provided.
        /// </summary>
        [Input("sslClientKeystoredbSecretId")]
        public Input<string>? SslClientKeystoredbSecretId { get; set; }

        /// <summary>
        /// (Updatable) The base64 encoded list of certificates revoked by the trusted certificate authorities (Trusted CA). Note: This is an optional property and only applicable if TLS/MTLS option is selected. It is not included in GET responses if the `view=COMPACT` query parameter is specified.
        /// </summary>
        [Input("sslCrl")]
        public Input<string>? SslCrl { get; set; }

        [Input("sslKey")]
        private Input<string>? _sslKey;

        /// <summary>
        /// (Updatable) Client Key - The base64 encoded content of a .pem or .crt file containing the client private key (for 2-way SSL). Deprecated: This field is deprecated and replaced by "sslKeySecretId". This field will be removed after February 15 2026.
        /// </summary>
        public Input<string>? SslKey
        {
            get => _sslKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _sslKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("sslKeyPassword")]
        private Input<string>? _sslKeyPassword;

        /// <summary>
        /// (Updatable) The password for the cert inside of the KeyStore. In case it differs from the KeyStore password, it should be provided. Deprecated: This field is deprecated and replaced by "sslKeyPasswordSecretId". This field will be removed after February 15 2026.
        /// </summary>
        public Input<string>? SslKeyPassword
        {
            get => _sslKeyPassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _sslKeyPassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the password is stored for the cert inside of the Keystore. In case it differs from the KeyStore password, it should be provided. Note: When provided, 'sslKeyPassword' field must not be provided.
        /// </summary>
        [Input("sslKeyPasswordSecretId")]
        public Input<string>? SslKeyPasswordSecretId { get; set; }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret that stores the Client Key
        /// * The content of a .pem or .crt file containing the client private key (for 2-way SSL). Note: When provided, 'sslKey' field must not be provided.
        /// </summary>
        [Input("sslKeySecretId")]
        public Input<string>? SslKeySecretId { get; set; }

        /// <summary>
        /// (Updatable) SSL modes for PostgreSQL.
        /// </summary>
        [Input("sslMode")]
        public Input<string>? SslMode { get; set; }

        /// <summary>
        /// (Updatable) The base64 encoded file which contains the self-signed server certificate / Certificate Authority (CA) certificate. It is not included in GET responses if the `view=COMPACT` query parameter is specified.
        /// </summary>
        [Input("sslServerCertificate")]
        public Input<string>? SslServerCertificate { get; set; }

        /// <summary>
        /// Possible lifecycle states for connection.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// (Updatable) The information about a new storage of given type used in an Iceberg connection.
        /// </summary>
        [Input("storage")]
        public Input<Inputs.ConnectionStorageGetArgs>? Storage { get; set; }

        /// <summary>
        /// (Updatable) Optional. External storage credential name to access files on object storage such as ADLS Gen2, S3 or GCS.
        /// </summary>
        [Input("storageCredentialName")]
        public Input<string>? StorageCredentialName { get; set; }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream pool being referenced.
        /// </summary>
        [Input("streamPoolId")]
        public Input<string>? StreamPoolId { get; set; }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the target subnet of the dedicated connection.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        [Input("systemTags")]
        private InputMap<string>? _systemTags;

        /// <summary>
        /// The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{orcl-cloud: {free-tier-retain: true}}`
        /// </summary>
        public InputMap<string> SystemTags
        {
            get => _systemTags ?? (_systemTags = new InputMap<string>());
            set => _systemTags = value;
        }

        /// <summary>
        /// The Kafka (e.g. Confluent) Schema Registry technology type.
        /// </summary>
        [Input("technologyType")]
        public Input<string>? TechnologyType { get; set; }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the related Oracle Cloud Infrastructure tenancy.
        /// </summary>
        [Input("tenancyId")]
        public Input<string>? TenancyId { get; set; }

        /// <summary>
        /// (Updatable) Azure tenant ID of the application. e.g.: 14593954-d337-4a61-a364-9f758c64f97f
        /// </summary>
        [Input("tenantId")]
        public Input<string>? TenantId { get; set; }

        /// <summary>
        /// The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        /// <summary>
        /// (Updatable) Database Certificate - The base64 encoded content of a .pem file, containing the server public key (for 1 and 2-way SSL). It is not included in GET responses if the `view=COMPACT` query parameter is specified.
        /// </summary>
        [Input("tlsCaFile")]
        public Input<string>? TlsCaFile { get; set; }

        /// <summary>
        /// (Updatable) Client Certificate - The base64 encoded content of a .pem file, containing the client public key (for 2-way SSL). Deprecated: This field is deprecated and replaced by "tlsCertificateKeyFileSecretId". This field will be removed after February 15 2026.
        /// </summary>
        [Input("tlsCertificateKeyFile")]
        public Input<string>? TlsCertificateKeyFile { get; set; }

        [Input("tlsCertificateKeyFilePassword")]
        private Input<string>? _tlsCertificateKeyFilePassword;

        /// <summary>
        /// (Updatable) Client Certificate key file password. Deprecated: This field is deprecated and replaced by "tlsCertificateKeyFilePasswordSecretId". This field will be removed after February 15 2026.
        /// </summary>
        public Input<string>? TlsCertificateKeyFilePassword
        {
            get => _tlsCertificateKeyFilePassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _tlsCertificateKeyFilePassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("tlsCertificateKeyFilePasswordSecretId")]
        private Input<string>? _tlsCertificateKeyFilePasswordSecretId;

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret that stores the password of the tls certificate key file. Note: When provided, 'tlsCertificateKeyFilePassword' field must not be provided.
        /// </summary>
        public Input<string>? TlsCertificateKeyFilePasswordSecretId
        {
            get => _tlsCertificateKeyFilePasswordSecretId;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _tlsCertificateKeyFilePasswordSecretId = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret that stores the certificate key file of the mtls connection.
        /// * The content of a .pem file containing the client private key (for 2-way SSL). Note: When provided, 'tlsCertificateKeyFile' field must not be provided.
        /// </summary>
        [Input("tlsCertificateKeyFileSecretId")]
        public Input<string>? TlsCertificateKeyFileSecretId { get; set; }

        /// <summary>
        /// (Updatable) If value is true, it triggers connection refresh action and this attribute change will always show up in the "update" plan and will apply steps in order to refresh secrets and dependent service properties (such as ADB connection strings, wallets, etc..).
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("triggerRefresh")]
        public Input<bool>? TriggerRefresh { get; set; }

        [Input("trustStore")]
        private Input<string>? _trustStore;

        /// <summary>
        /// (Updatable) The base64 encoded content of the TrustStore file. Deprecated: This field is deprecated and replaced by "trustStoreSecretId". This field will be removed after February 15 2026.
        /// </summary>
        public Input<string>? TrustStore
        {
            get => _trustStore;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _trustStore = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("trustStorePassword")]
        private Input<string>? _trustStorePassword;

        /// <summary>
        /// (Updatable) The TrustStore password. Deprecated: This field is deprecated and replaced by "trustStorePasswordSecretId". This field will be removed after February 15 2026.
        /// </summary>
        public Input<string>? TrustStorePassword
        {
            get => _trustStorePassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _trustStorePassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the kafka Ssl TrustStore password is stored. Note: When provided, 'trustStorePassword' field must not be provided.
        /// </summary>
        [Input("trustStorePasswordSecretId")]
        public Input<string>? TrustStorePasswordSecretId { get; set; }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the content of the TrustStore file is stored. Note: When provided, 'trustStore' field must not be provided.
        /// </summary>
        [Input("trustStoreSecretId")]
        public Input<string>? TrustStoreSecretId { get; set; }

        /// <summary>
        /// (Updatable) Kafka Schema Registry URL. e.g.: 'https://server1.us.oracle.com:8081'
        /// </summary>
        [Input("url")]
        public Input<string>? Url { get; set; }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure user who will access the Oracle NoSQL database. The user must have write access to the table they want to connect to. If the user is not provided, backend will default to the user who is calling the API endpoint.
        /// </summary>
        [Input("userId")]
        public Input<string>? UserId { get; set; }

        /// <summary>
        /// (Updatable) The username Oracle GoldenGate uses to connect the associated system of the given technology. This username must already exist and be available by the system/application to be connected to and must conform to the case sensitivty requirments defined in it.
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        /// <summary>
        /// (Updatable) Refers to the customer's vault OCID.  If provided, it references a vault where GoldenGate can manage secrets. Customers must add policies to permit GoldenGate to manage secrets contained within this vault.
        /// </summary>
        [Input("vaultId")]
        public Input<string>? VaultId { get; set; }

        [Input("wallet")]
        private Input<string>? _wallet;

        /// <summary>
        /// (Updatable) The wallet contents Oracle GoldenGate uses to make connections to a database. This attribute is expected to be base64 encoded. Deprecated: This field is deprecated and replaced by "walletSecretId". This field will be removed after February 15 2026.
        /// </summary>
        public Input<string>? Wallet
        {
            get => _wallet;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _wallet = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the wallet file is stored.  The wallet contents Oracle GoldenGate uses to make connections to a database. Note: When provided, 'wallet' field must not be provided.
        /// </summary>
        [Input("walletSecretId")]
        public Input<string>? WalletSecretId { get; set; }

        public ConnectionState()
        {
        }
        public static new ConnectionState Empty => new ConnectionState();
    }
}
