// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.GoldenGate
{
    public static class GetConnectionAssignments
    {
        /// <summary>
        /// This data source provides the list of Connection Assignments in Oracle Cloud Infrastructure Golden Gate service.
        /// 
        /// Lists the Connection Assignments in the compartment.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testConnectionAssignments = Oci.GoldenGate.GetConnectionAssignments.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         ConnectionId = testConnection.Id,
        ///         DeploymentId = testDeployment.Id,
        ///         Name = connectionAssignmentName,
        ///         State = connectionAssignmentState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetConnectionAssignmentsResult> InvokeAsync(GetConnectionAssignmentsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetConnectionAssignmentsResult>("oci:GoldenGate/getConnectionAssignments:getConnectionAssignments", args ?? new GetConnectionAssignmentsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Connection Assignments in Oracle Cloud Infrastructure Golden Gate service.
        /// 
        /// Lists the Connection Assignments in the compartment.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testConnectionAssignments = Oci.GoldenGate.GetConnectionAssignments.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         ConnectionId = testConnection.Id,
        ///         DeploymentId = testDeployment.Id,
        ///         Name = connectionAssignmentName,
        ///         State = connectionAssignmentState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetConnectionAssignmentsResult> Invoke(GetConnectionAssignmentsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetConnectionAssignmentsResult>("oci:GoldenGate/getConnectionAssignments:getConnectionAssignments", args ?? new GetConnectionAssignmentsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Connection Assignments in Oracle Cloud Infrastructure Golden Gate service.
        /// 
        /// Lists the Connection Assignments in the compartment.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testConnectionAssignments = Oci.GoldenGate.GetConnectionAssignments.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         ConnectionId = testConnection.Id,
        ///         DeploymentId = testDeployment.Id,
        ///         Name = connectionAssignmentName,
        ///         State = connectionAssignmentState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetConnectionAssignmentsResult> Invoke(GetConnectionAssignmentsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetConnectionAssignmentsResult>("oci:GoldenGate/getConnectionAssignments:getConnectionAssignments", args ?? new GetConnectionAssignmentsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetConnectionAssignmentsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment that contains the work request. Work requests should be scoped  to the same compartment as the resource the work request affects. If the work request concerns  multiple resources, and those resources are not in the same compartment, it is up to the service team  to pick the primary resource whose compartment should be used.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the connection.
        /// </summary>
        [Input("connectionId")]
        public string? ConnectionId { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment in which to list resources.
        /// </summary>
        [Input("deploymentId")]
        public string? DeploymentId { get; set; }

        [Input("filters")]
        private List<Inputs.GetConnectionAssignmentsFilterArgs>? _filters;
        public List<Inputs.GetConnectionAssignmentsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetConnectionAssignmentsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The name of the connection in the assignment (aliasName).
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// A filter to return only connection assignments having the 'lifecycleState' given.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetConnectionAssignmentsArgs()
        {
        }
        public static new GetConnectionAssignmentsArgs Empty => new GetConnectionAssignmentsArgs();
    }

    public sealed class GetConnectionAssignmentsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment that contains the work request. Work requests should be scoped  to the same compartment as the resource the work request affects. If the work request concerns  multiple resources, and those resources are not in the same compartment, it is up to the service team  to pick the primary resource whose compartment should be used.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the connection.
        /// </summary>
        [Input("connectionId")]
        public Input<string>? ConnectionId { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment in which to list resources.
        /// </summary>
        [Input("deploymentId")]
        public Input<string>? DeploymentId { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetConnectionAssignmentsFilterInputArgs>? _filters;
        public InputList<Inputs.GetConnectionAssignmentsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetConnectionAssignmentsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The name of the connection in the assignment (aliasName).
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A filter to return only connection assignments having the 'lifecycleState' given.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetConnectionAssignmentsInvokeArgs()
        {
        }
        public static new GetConnectionAssignmentsInvokeArgs Empty => new GetConnectionAssignmentsInvokeArgs();
    }


    [OutputType]
    public sealed class GetConnectionAssignmentsResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The list of connection_assignment_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetConnectionAssignmentsConnectionAssignmentCollectionResult> ConnectionAssignmentCollections;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the connection being referenced.
        /// </summary>
        public readonly string? ConnectionId;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment being referenced.
        /// </summary>
        public readonly string? DeploymentId;
        public readonly ImmutableArray<Outputs.GetConnectionAssignmentsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? Name;
        /// <summary>
        /// Possible lifecycle states for connection assignments.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetConnectionAssignmentsResult(
            string compartmentId,

            ImmutableArray<Outputs.GetConnectionAssignmentsConnectionAssignmentCollectionResult> connectionAssignmentCollections,

            string? connectionId,

            string? deploymentId,

            ImmutableArray<Outputs.GetConnectionAssignmentsFilterResult> filters,

            string id,

            string? name,

            string? state)
        {
            CompartmentId = compartmentId;
            ConnectionAssignmentCollections = connectionAssignmentCollections;
            ConnectionId = connectionId;
            DeploymentId = deploymentId;
            Filters = filters;
            Id = id;
            Name = name;
            State = state;
        }
    }
}
