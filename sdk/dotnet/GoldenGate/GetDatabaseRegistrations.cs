// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.GoldenGate
{
    public static class GetDatabaseRegistrations
    {
        /// <summary>
        /// This data source provides the list of Database Registrations in Oracle Cloud Infrastructure Golden Gate service.
        /// 
        /// Note: Deprecated. Use the /connections API instead.
        /// Lists the DatabaseRegistrations in the compartment.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDatabaseRegistrations = Oci.GoldenGate.GetDatabaseRegistrations.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = databaseRegistrationDisplayName,
        ///         State = databaseRegistrationState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetDatabaseRegistrationsResult> InvokeAsync(GetDatabaseRegistrationsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDatabaseRegistrationsResult>("oci:GoldenGate/getDatabaseRegistrations:getDatabaseRegistrations", args ?? new GetDatabaseRegistrationsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Database Registrations in Oracle Cloud Infrastructure Golden Gate service.
        /// 
        /// Note: Deprecated. Use the /connections API instead.
        /// Lists the DatabaseRegistrations in the compartment.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDatabaseRegistrations = Oci.GoldenGate.GetDatabaseRegistrations.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = databaseRegistrationDisplayName,
        ///         State = databaseRegistrationState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDatabaseRegistrationsResult> Invoke(GetDatabaseRegistrationsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDatabaseRegistrationsResult>("oci:GoldenGate/getDatabaseRegistrations:getDatabaseRegistrations", args ?? new GetDatabaseRegistrationsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Database Registrations in Oracle Cloud Infrastructure Golden Gate service.
        /// 
        /// Note: Deprecated. Use the /connections API instead.
        /// Lists the DatabaseRegistrations in the compartment.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDatabaseRegistrations = Oci.GoldenGate.GetDatabaseRegistrations.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = databaseRegistrationDisplayName,
        ///         State = databaseRegistrationState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDatabaseRegistrationsResult> Invoke(GetDatabaseRegistrationsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDatabaseRegistrationsResult>("oci:GoldenGate/getDatabaseRegistrations:getDatabaseRegistrations", args ?? new GetDatabaseRegistrationsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDatabaseRegistrationsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment that contains the work request. Work requests should be scoped  to the same compartment as the resource the work request affects. If the work request concerns  multiple resources, and those resources are not in the same compartment, it is up to the service team  to pick the primary resource whose compartment should be used.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only the resources that match the entire 'displayName' given.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetDatabaseRegistrationsFilterArgs>? _filters;
        public List<Inputs.GetDatabaseRegistrationsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetDatabaseRegistrationsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only the resources that match the 'lifecycleState' given.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetDatabaseRegistrationsArgs()
        {
        }
        public static new GetDatabaseRegistrationsArgs Empty => new GetDatabaseRegistrationsArgs();
    }

    public sealed class GetDatabaseRegistrationsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment that contains the work request. Work requests should be scoped  to the same compartment as the resource the work request affects. If the work request concerns  multiple resources, and those resources are not in the same compartment, it is up to the service team  to pick the primary resource whose compartment should be used.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only the resources that match the entire 'displayName' given.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetDatabaseRegistrationsFilterInputArgs>? _filters;
        public InputList<Inputs.GetDatabaseRegistrationsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetDatabaseRegistrationsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only the resources that match the 'lifecycleState' given.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetDatabaseRegistrationsInvokeArgs()
        {
        }
        public static new GetDatabaseRegistrationsInvokeArgs Empty => new GetDatabaseRegistrationsInvokeArgs();
    }


    [OutputType]
    public sealed class GetDatabaseRegistrationsResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The list of database_registration_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDatabaseRegistrationsDatabaseRegistrationCollectionResult> DatabaseRegistrationCollections;
        /// <summary>
        /// An object's Display Name.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetDatabaseRegistrationsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Possible lifecycle states.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetDatabaseRegistrationsResult(
            string compartmentId,

            ImmutableArray<Outputs.GetDatabaseRegistrationsDatabaseRegistrationCollectionResult> databaseRegistrationCollections,

            string? displayName,

            ImmutableArray<Outputs.GetDatabaseRegistrationsFilterResult> filters,

            string id,

            string? state)
        {
            CompartmentId = compartmentId;
            DatabaseRegistrationCollections = databaseRegistrationCollections;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            State = state;
        }
    }
}
