// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.GoldenGate
{
    public static class GetDeploymentBackup
    {
        /// <summary>
        /// This data source provides details about a specific Deployment Backup resource in Oracle Cloud Infrastructure Golden Gate service.
        /// 
        /// Retrieves a DeploymentBackup.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDeploymentBackup = Oci.GoldenGate.GetDeploymentBackup.Invoke(new()
        ///     {
        ///         DeploymentBackupId = testDeploymentBackupOciGoldenGateDeploymentBackup.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetDeploymentBackupResult> InvokeAsync(GetDeploymentBackupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDeploymentBackupResult>("oci:GoldenGate/getDeploymentBackup:getDeploymentBackup", args ?? new GetDeploymentBackupArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Deployment Backup resource in Oracle Cloud Infrastructure Golden Gate service.
        /// 
        /// Retrieves a DeploymentBackup.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDeploymentBackup = Oci.GoldenGate.GetDeploymentBackup.Invoke(new()
        ///     {
        ///         DeploymentBackupId = testDeploymentBackupOciGoldenGateDeploymentBackup.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDeploymentBackupResult> Invoke(GetDeploymentBackupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDeploymentBackupResult>("oci:GoldenGate/getDeploymentBackup:getDeploymentBackup", args ?? new GetDeploymentBackupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDeploymentBackupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique DeploymentBackup identifier.
        /// </summary>
        [Input("deploymentBackupId", required: true)]
        public string DeploymentBackupId { get; set; } = null!;

        public GetDeploymentBackupArgs()
        {
        }
        public static new GetDeploymentBackupArgs Empty => new GetDeploymentBackupArgs();
    }

    public sealed class GetDeploymentBackupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique DeploymentBackup identifier.
        /// </summary>
        [Input("deploymentBackupId", required: true)]
        public Input<string> DeploymentBackupId { get; set; } = null!;

        public GetDeploymentBackupInvokeArgs()
        {
        }
        public static new GetDeploymentBackupInvokeArgs Empty => new GetDeploymentBackupInvokeArgs();
    }


    [OutputType]
    public sealed class GetDeploymentBackupResult
    {
        /// <summary>
        /// Possible Deployment backup types.
        /// </summary>
        public readonly string BackupType;
        /// <summary>
        /// Name of the bucket where the object is to be uploaded in the object storage
        /// </summary>
        public readonly string Bucket;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        public readonly string DeploymentBackupId;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment being referenced.
        /// </summary>
        public readonly string DeploymentId;
        /// <summary>
        /// The type of deployment, which can be any one of the Allowed values.  NOTE: Use of the value 'OGG' is maintained for backward compatibility purposes.  Its use is discouraged in favor of 'DATABASE_ORACLE'.
        /// </summary>
        public readonly string DeploymentType;
        /// <summary>
        /// An object's Display Name.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup being referenced.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// True if this object is automatically created
        /// </summary>
        public readonly bool IsAutomatic;
        public readonly bool IsLockOverride;
        /// <summary>
        /// Parameter to allow users to create backup without trails
        /// </summary>
        public readonly bool IsMetadataOnly;
        /// <summary>
        /// Describes the object's current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// Locks associated with this resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDeploymentBackupLockResult> Locks;
        /// <summary>
        /// Name of namespace that serves as a container for all of your buckets
        /// </summary>
        public readonly string Namespace;
        /// <summary>
        /// Name of the object to be uploaded to object storage
        /// </summary>
        public readonly string Object;
        /// <summary>
        /// Version of OGG
        /// </summary>
        public readonly string OggVersion;
        /// <summary>
        /// The size of the backup stored in object storage (in bytes)
        /// </summary>
        public readonly double SizeInBytes;
        /// <summary>
        /// Possible lifecycle states.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{orcl-cloud: {free-tier-retain: true}}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// The time of the resource backup finish. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
        /// </summary>
        public readonly string TimeBackupFinished;
        /// <summary>
        /// The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time of the resource backup. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
        /// </summary>
        public readonly string TimeOfBackup;
        /// <summary>
        /// The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetDeploymentBackupResult(
            string backupType,

            string bucket,

            string compartmentId,

            ImmutableDictionary<string, string> definedTags,

            string deploymentBackupId,

            string deploymentId,

            string deploymentType,

            string displayName,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            bool isAutomatic,

            bool isLockOverride,

            bool isMetadataOnly,

            string lifecycleDetails,

            ImmutableArray<Outputs.GetDeploymentBackupLockResult> locks,

            string @namespace,

            string @object,

            string oggVersion,

            double sizeInBytes,

            string state,

            ImmutableDictionary<string, string> systemTags,

            string timeBackupFinished,

            string timeCreated,

            string timeOfBackup,

            string timeUpdated)
        {
            BackupType = backupType;
            Bucket = bucket;
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            DeploymentBackupId = deploymentBackupId;
            DeploymentId = deploymentId;
            DeploymentType = deploymentType;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            IsAutomatic = isAutomatic;
            IsLockOverride = isLockOverride;
            IsMetadataOnly = isMetadataOnly;
            LifecycleDetails = lifecycleDetails;
            Locks = locks;
            Namespace = @namespace;
            Object = @object;
            OggVersion = oggVersion;
            SizeInBytes = sizeInBytes;
            State = state;
            SystemTags = systemTags;
            TimeBackupFinished = timeBackupFinished;
            TimeCreated = timeCreated;
            TimeOfBackup = timeOfBackup;
            TimeUpdated = timeUpdated;
        }
    }
}
