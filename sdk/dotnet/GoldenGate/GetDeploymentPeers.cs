// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.GoldenGate
{
    public static class GetDeploymentPeers
    {
        /// <summary>
        /// This data source provides the list of Deployment Peers in Oracle Cloud Infrastructure Golden Gate service.
        /// 
        /// Lists the local and remote peers in a deployment.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDeploymentPeers = Oci.GoldenGate.GetDeploymentPeers.Invoke(new()
        ///     {
        ///         DeploymentId = testDeployment.Id,
        ///         DisplayName = deploymentPeerDisplayName,
        ///         State = deploymentPeerState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetDeploymentPeersResult> InvokeAsync(GetDeploymentPeersArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDeploymentPeersResult>("oci:GoldenGate/getDeploymentPeers:getDeploymentPeers", args ?? new GetDeploymentPeersArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Deployment Peers in Oracle Cloud Infrastructure Golden Gate service.
        /// 
        /// Lists the local and remote peers in a deployment.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDeploymentPeers = Oci.GoldenGate.GetDeploymentPeers.Invoke(new()
        ///     {
        ///         DeploymentId = testDeployment.Id,
        ///         DisplayName = deploymentPeerDisplayName,
        ///         State = deploymentPeerState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDeploymentPeersResult> Invoke(GetDeploymentPeersInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDeploymentPeersResult>("oci:GoldenGate/getDeploymentPeers:getDeploymentPeers", args ?? new GetDeploymentPeersInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Deployment Peers in Oracle Cloud Infrastructure Golden Gate service.
        /// 
        /// Lists the local and remote peers in a deployment.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDeploymentPeers = Oci.GoldenGate.GetDeploymentPeers.Invoke(new()
        ///     {
        ///         DeploymentId = testDeployment.Id,
        ///         DisplayName = deploymentPeerDisplayName,
        ///         State = deploymentPeerState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDeploymentPeersResult> Invoke(GetDeploymentPeersInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDeploymentPeersResult>("oci:GoldenGate/getDeploymentPeers:getDeploymentPeers", args ?? new GetDeploymentPeersInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDeploymentPeersArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique Deployment identifier.
        /// </summary>
        [Input("deploymentId", required: true)]
        public string DeploymentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only the resources that match the entire 'displayName' given.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetDeploymentPeersFilterArgs>? _filters;
        public List<Inputs.GetDeploymentPeersFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetDeploymentPeersFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only the resources that match the 'lifecycleState' given.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetDeploymentPeersArgs()
        {
        }
        public static new GetDeploymentPeersArgs Empty => new GetDeploymentPeersArgs();
    }

    public sealed class GetDeploymentPeersInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique Deployment identifier.
        /// </summary>
        [Input("deploymentId", required: true)]
        public Input<string> DeploymentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only the resources that match the entire 'displayName' given.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetDeploymentPeersFilterInputArgs>? _filters;
        public InputList<Inputs.GetDeploymentPeersFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetDeploymentPeersFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only the resources that match the 'lifecycleState' given.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetDeploymentPeersInvokeArgs()
        {
        }
        public static new GetDeploymentPeersInvokeArgs Empty => new GetDeploymentPeersInvokeArgs();
    }


    [OutputType]
    public sealed class GetDeploymentPeersResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment being referenced.
        /// </summary>
        public readonly string DeploymentId;
        /// <summary>
        /// The list of deployment_peer_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDeploymentPeersDeploymentPeerCollectionResult> DeploymentPeerCollections;
        /// <summary>
        /// An object's Display Name.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetDeploymentPeersFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Possible lifecycle states for deployment peer.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetDeploymentPeersResult(
            string deploymentId,

            ImmutableArray<Outputs.GetDeploymentPeersDeploymentPeerCollectionResult> deploymentPeerCollections,

            string? displayName,

            ImmutableArray<Outputs.GetDeploymentPeersFilterResult> filters,

            string id,

            string? state)
        {
            DeploymentId = deploymentId;
            DeploymentPeerCollections = deploymentPeerCollections;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            State = state;
        }
    }
}
