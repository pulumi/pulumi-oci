// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.GoldenGate
{
    public static class GetDeploymentTypes
    {
        /// <summary>
        /// This data source provides the list of Deployment Types in Oracle Cloud Infrastructure Golden Gate service.
        /// 
        /// Returns an array of DeploymentTypeDescriptor
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDeploymentTypes = Oci.GoldenGate.GetDeploymentTypes.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         DisplayName = @var.Deployment_type_display_name,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetDeploymentTypesResult> InvokeAsync(GetDeploymentTypesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDeploymentTypesResult>("oci:GoldenGate/getDeploymentTypes:getDeploymentTypes", args ?? new GetDeploymentTypesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Deployment Types in Oracle Cloud Infrastructure Golden Gate service.
        /// 
        /// Returns an array of DeploymentTypeDescriptor
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDeploymentTypes = Oci.GoldenGate.GetDeploymentTypes.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         DisplayName = @var.Deployment_type_display_name,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetDeploymentTypesResult> Invoke(GetDeploymentTypesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDeploymentTypesResult>("oci:GoldenGate/getDeploymentTypes:getDeploymentTypes", args ?? new GetDeploymentTypesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDeploymentTypesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only the resources that match the entire 'displayName' given.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetDeploymentTypesFilterArgs>? _filters;
        public List<Inputs.GetDeploymentTypesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetDeploymentTypesFilterArgs>());
            set => _filters = value;
        }

        public GetDeploymentTypesArgs()
        {
        }
        public static new GetDeploymentTypesArgs Empty => new GetDeploymentTypesArgs();
    }

    public sealed class GetDeploymentTypesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only the resources that match the entire 'displayName' given.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetDeploymentTypesFilterInputArgs>? _filters;
        public InputList<Inputs.GetDeploymentTypesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetDeploymentTypesFilterInputArgs>());
            set => _filters = value;
        }

        public GetDeploymentTypesInvokeArgs()
        {
        }
        public static new GetDeploymentTypesInvokeArgs Empty => new GetDeploymentTypesInvokeArgs();
    }


    [OutputType]
    public sealed class GetDeploymentTypesResult
    {
        public readonly string CompartmentId;
        /// <summary>
        /// The list of deployment_type_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDeploymentTypesDeploymentTypeCollectionResult> DeploymentTypeCollections;
        /// <summary>
        /// An object's Display Name.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetDeploymentTypesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetDeploymentTypesResult(
            string compartmentId,

            ImmutableArray<Outputs.GetDeploymentTypesDeploymentTypeCollectionResult> deploymentTypeCollections,

            string? displayName,

            ImmutableArray<Outputs.GetDeploymentTypesFilterResult> filters,

            string id)
        {
            CompartmentId = compartmentId;
            DeploymentTypeCollections = deploymentTypeCollections;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
        }
    }
}
