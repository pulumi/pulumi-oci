// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.GoldenGate
{
    public static class GetDeploymentUpgrade
    {
        /// <summary>
        /// This data source provides details about a specific Deployment Upgrade resource in Oracle Cloud Infrastructure Golden Gate service.
        /// 
        /// Retrieves a deployment upgrade.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDeploymentUpgrade = Oci.GoldenGate.GetDeploymentUpgrade.Invoke(new()
        ///     {
        ///         DeploymentUpgradeId = oci_golden_gate_deployment_upgrade.Test_deployment_upgrade.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetDeploymentUpgradeResult> InvokeAsync(GetDeploymentUpgradeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDeploymentUpgradeResult>("oci:GoldenGate/getDeploymentUpgrade:getDeploymentUpgrade", args ?? new GetDeploymentUpgradeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Deployment Upgrade resource in Oracle Cloud Infrastructure Golden Gate service.
        /// 
        /// Retrieves a deployment upgrade.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDeploymentUpgrade = Oci.GoldenGate.GetDeploymentUpgrade.Invoke(new()
        ///     {
        ///         DeploymentUpgradeId = oci_golden_gate_deployment_upgrade.Test_deployment_upgrade.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetDeploymentUpgradeResult> Invoke(GetDeploymentUpgradeInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDeploymentUpgradeResult>("oci:GoldenGate/getDeploymentUpgrade:getDeploymentUpgrade", args ?? new GetDeploymentUpgradeInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDeploymentUpgradeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique Deployment Upgrade identifier.
        /// </summary>
        [Input("deploymentUpgradeId", required: true)]
        public string DeploymentUpgradeId { get; set; } = null!;

        public GetDeploymentUpgradeArgs()
        {
        }
        public static new GetDeploymentUpgradeArgs Empty => new GetDeploymentUpgradeArgs();
    }

    public sealed class GetDeploymentUpgradeInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique Deployment Upgrade identifier.
        /// </summary>
        [Input("deploymentUpgradeId", required: true)]
        public Input<string> DeploymentUpgradeId { get; set; } = null!;

        public GetDeploymentUpgradeInvokeArgs()
        {
        }
        public static new GetDeploymentUpgradeInvokeArgs Empty => new GetDeploymentUpgradeInvokeArgs();
    }


    [OutputType]
    public sealed class GetDeploymentUpgradeResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment being referenced.
        /// </summary>
        public readonly string DeploymentId;
        public readonly string DeploymentUpgradeId;
        /// <summary>
        /// The type of the deployment upgrade: MANUAL or AUTOMATIC
        /// </summary>
        public readonly string DeploymentUpgradeType;
        /// <summary>
        /// Metadata about this specific object.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// An object's Display Name.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Indicates if rollback is allowed. In practice only the last upgrade can be rolled back.
        /// * Manual upgrade is allowed to rollback only until the old version isn't deprecated yet.
        /// * Automatic upgrade by default is not allowed, unless a serious issue does not justify.
        /// </summary>
        public readonly bool IsRollbackAllowed;
        /// <summary>
        /// Indicates if OGG release contains security fix.
        /// </summary>
        public readonly bool IsSecurityFix;
        /// <summary>
        /// Indicates if upgrade notifications are snoozed or not.
        /// </summary>
        public readonly bool IsSnoozed;
        /// <summary>
        /// Describes the object's current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// Possible GGS lifecycle sub-states.
        /// </summary>
        public readonly string LifecycleSubState;
        /// <summary>
        /// Version of OGG
        /// </summary>
        public readonly string OggVersion;
        /// <summary>
        /// Version of OGG
        /// </summary>
        public readonly string PreviousOggVersion;
        /// <summary>
        /// The type of release.
        /// </summary>
        public readonly string ReleaseType;
        /// <summary>
        /// Possible lifecycle states.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{orcl-cloud: {free-tier-retain: true}}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> SystemTags;
        /// <summary>
        /// The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The date and time the request was finished. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
        /// </summary>
        public readonly string TimeFinished;
        /// <summary>
        /// The time the resource was released. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
        /// </summary>
        public readonly string TimeReleased;
        /// <summary>
        /// The time of upgrade schedule. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
        /// </summary>
        public readonly string TimeSchedule;
        /// <summary>
        /// The time the upgrade notifications are snoozed until. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
        /// </summary>
        public readonly string TimeSnoozedUntil;
        /// <summary>
        /// The date and time the request was started. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
        /// </summary>
        public readonly string TimeStarted;
        /// <summary>
        /// The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetDeploymentUpgradeResult(
            string compartmentId,

            ImmutableDictionary<string, object> definedTags,

            string deploymentId,

            string deploymentUpgradeId,

            string deploymentUpgradeType,

            string description,

            string displayName,

            ImmutableDictionary<string, object> freeformTags,

            string id,

            bool isRollbackAllowed,

            bool isSecurityFix,

            bool isSnoozed,

            string lifecycleDetails,

            string lifecycleSubState,

            string oggVersion,

            string previousOggVersion,

            string releaseType,

            string state,

            ImmutableDictionary<string, object> systemTags,

            string timeCreated,

            string timeFinished,

            string timeReleased,

            string timeSchedule,

            string timeSnoozedUntil,

            string timeStarted,

            string timeUpdated)
        {
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            DeploymentId = deploymentId;
            DeploymentUpgradeId = deploymentUpgradeId;
            DeploymentUpgradeType = deploymentUpgradeType;
            Description = description;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            IsRollbackAllowed = isRollbackAllowed;
            IsSecurityFix = isSecurityFix;
            IsSnoozed = isSnoozed;
            LifecycleDetails = lifecycleDetails;
            LifecycleSubState = lifecycleSubState;
            OggVersion = oggVersion;
            PreviousOggVersion = previousOggVersion;
            ReleaseType = releaseType;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeFinished = timeFinished;
            TimeReleased = timeReleased;
            TimeSchedule = timeSchedule;
            TimeSnoozedUntil = timeSnoozedUntil;
            TimeStarted = timeStarted;
            TimeUpdated = timeUpdated;
        }
    }
}
