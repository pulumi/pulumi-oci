// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.GoldenGate
{
    public static class GetTrailFile
    {
        /// <summary>
        /// This data source provides details about a specific Trail File resource in Oracle Cloud Infrastructure Golden Gate service.
        /// 
        /// Lists the TrailFiles for a deployment.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testTrailFile = Oci.GoldenGate.GetTrailFile.Invoke(new()
        ///     {
        ///         DeploymentId = oci_golden_gate_deployment.Test_deployment.Id,
        ///         TrailFileId = oci_golden_gate_trail_file.Test_trail_file.Id,
        ///         DisplayName = @var.Trail_file_display_name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetTrailFileResult> InvokeAsync(GetTrailFileArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTrailFileResult>("oci:GoldenGate/getTrailFile:getTrailFile", args ?? new GetTrailFileArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Trail File resource in Oracle Cloud Infrastructure Golden Gate service.
        /// 
        /// Lists the TrailFiles for a deployment.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testTrailFile = Oci.GoldenGate.GetTrailFile.Invoke(new()
        ///     {
        ///         DeploymentId = oci_golden_gate_deployment.Test_deployment.Id,
        ///         TrailFileId = oci_golden_gate_trail_file.Test_trail_file.Id,
        ///         DisplayName = @var.Trail_file_display_name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetTrailFileResult> Invoke(GetTrailFileInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTrailFileResult>("oci:GoldenGate/getTrailFile:getTrailFile", args ?? new GetTrailFileInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTrailFileArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique Deployment identifier.
        /// </summary>
        [Input("deploymentId", required: true)]
        public string DeploymentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only the resources that match the entire 'displayName' given.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        /// <summary>
        /// A Trail File identifier
        /// </summary>
        [Input("trailFileId", required: true)]
        public string TrailFileId { get; set; } = null!;

        public GetTrailFileArgs()
        {
        }
        public static new GetTrailFileArgs Empty => new GetTrailFileArgs();
    }

    public sealed class GetTrailFileInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique Deployment identifier.
        /// </summary>
        [Input("deploymentId", required: true)]
        public Input<string> DeploymentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only the resources that match the entire 'displayName' given.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// A Trail File identifier
        /// </summary>
        [Input("trailFileId", required: true)]
        public Input<string> TrailFileId { get; set; } = null!;

        public GetTrailFileInvokeArgs()
        {
        }
        public static new GetTrailFileInvokeArgs Empty => new GetTrailFileInvokeArgs();
    }


    [OutputType]
    public sealed class GetTrailFileResult
    {
        public readonly string DeploymentId;
        /// <summary>
        /// An object's Display Name.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// An array of TrailFiles.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTrailFileItemResult> Items;
        /// <summary>
        /// The time the data was last fetched from the deployment. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
        /// </summary>
        public readonly string TimeLastFetched;
        /// <summary>
        /// The TrailFile Id.
        /// </summary>
        public readonly string TrailFileId;

        [OutputConstructor]
        private GetTrailFileResult(
            string deploymentId,

            string? displayName,

            string id,

            ImmutableArray<Outputs.GetTrailFileItemResult> items,

            string timeLastFetched,

            string trailFileId)
        {
            DeploymentId = deploymentId;
            DisplayName = displayName;
            Id = id;
            Items = items;
            TimeLastFetched = timeLastFetched;
            TrailFileId = trailFileId;
        }
    }
}
