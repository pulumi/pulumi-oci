// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.GoldenGate
{
    public static class GetTrailFiles
    {
        /// <summary>
        /// This data source provides the list of Trail Files in Oracle Cloud Infrastructure Golden Gate service.
        /// 
        /// Lists the TrailFiles for a deployment.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testTrailFiles = Oci.GoldenGate.GetTrailFiles.Invoke(new()
        ///     {
        ///         DeploymentId = oci_golden_gate_deployment.Test_deployment.Id,
        ///         TrailFileId = oci_golden_gate_trail_file.Test_trail_file.Id,
        ///         DisplayName = @var.Trail_file_display_name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetTrailFilesResult> InvokeAsync(GetTrailFilesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTrailFilesResult>("oci:GoldenGate/getTrailFiles:getTrailFiles", args ?? new GetTrailFilesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Trail Files in Oracle Cloud Infrastructure Golden Gate service.
        /// 
        /// Lists the TrailFiles for a deployment.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testTrailFiles = Oci.GoldenGate.GetTrailFiles.Invoke(new()
        ///     {
        ///         DeploymentId = oci_golden_gate_deployment.Test_deployment.Id,
        ///         TrailFileId = oci_golden_gate_trail_file.Test_trail_file.Id,
        ///         DisplayName = @var.Trail_file_display_name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetTrailFilesResult> Invoke(GetTrailFilesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTrailFilesResult>("oci:GoldenGate/getTrailFiles:getTrailFiles", args ?? new GetTrailFilesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTrailFilesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique Deployment identifier.
        /// </summary>
        [Input("deploymentId", required: true)]
        public string DeploymentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only the resources that match the entire 'displayName' given.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetTrailFilesFilterArgs>? _filters;
        public List<Inputs.GetTrailFilesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetTrailFilesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A Trail File identifier
        /// </summary>
        [Input("trailFileId", required: true)]
        public string TrailFileId { get; set; } = null!;

        public GetTrailFilesArgs()
        {
        }
        public static new GetTrailFilesArgs Empty => new GetTrailFilesArgs();
    }

    public sealed class GetTrailFilesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique Deployment identifier.
        /// </summary>
        [Input("deploymentId", required: true)]
        public Input<string> DeploymentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only the resources that match the entire 'displayName' given.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetTrailFilesFilterInputArgs>? _filters;
        public InputList<Inputs.GetTrailFilesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetTrailFilesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A Trail File identifier
        /// </summary>
        [Input("trailFileId", required: true)]
        public Input<string> TrailFileId { get; set; } = null!;

        public GetTrailFilesInvokeArgs()
        {
        }
        public static new GetTrailFilesInvokeArgs Empty => new GetTrailFilesInvokeArgs();
    }


    [OutputType]
    public sealed class GetTrailFilesResult
    {
        public readonly string DeploymentId;
        /// <summary>
        /// An object's Display Name.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetTrailFilesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of trail_file_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTrailFilesTrailFileCollectionResult> TrailFileCollections;
        /// <summary>
        /// The TrailFile Id.
        /// </summary>
        public readonly string TrailFileId;

        [OutputConstructor]
        private GetTrailFilesResult(
            string deploymentId,

            string? displayName,

            ImmutableArray<Outputs.GetTrailFilesFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetTrailFilesTrailFileCollectionResult> trailFileCollections,

            string trailFileId)
        {
            DeploymentId = deploymentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            TrailFileCollections = trailFileCollections;
            TrailFileId = trailFileId;
        }
    }
}
