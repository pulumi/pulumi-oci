// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.GoldenGate.Outputs
{

    [OutputType]
    public sealed class GetConnectionsConnectionCollectionItemBootstrapServerResult
    {
        /// <summary>
        /// The name or address of a host.
        /// In case of Generic connection type it represents the Host and port separated by colon. Example: `"server.example.com:1234"`
        /// For multiple hosts, provide a comma separated list. Example: `"server1.example.com:1000,server1.example.com:2000"`
        /// </summary>
        public readonly string Host;
        /// <summary>
        /// The port of an endpoint usually specified for a connection.
        /// </summary>
        public readonly int Port;
        /// <summary>
        /// Deprecated: this field will be removed in future versions. Either specify the private IP in the connectionString or host  field, or make sure the host name is resolvable in the target VCN.
        /// The private IP address of the connection's endpoint in the customer's VCN, typically a database endpoint or a big data endpoint (e.g. Kafka bootstrap server). In case the privateIp is provided, the subnetId must also be provided. In case the privateIp (and the subnetId) is not provided it is assumed the datasource is publicly accessible. In case the connection is accessible only privately, the lack of privateIp will result in not being able to access the connection.
        /// </summary>
        public readonly string PrivateIp;

        [OutputConstructor]
        private GetConnectionsConnectionCollectionItemBootstrapServerResult(
            string host,

            int port,

            string privateIp)
        {
            Host = host;
            Port = port;
            PrivateIp = privateIp;
        }
    }
}
