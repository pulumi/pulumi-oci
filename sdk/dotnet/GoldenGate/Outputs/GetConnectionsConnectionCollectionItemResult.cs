// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.GoldenGate.Outputs
{

    [OutputType]
    public sealed class GetConnectionsConnectionCollectionItemResult
    {
        /// <summary>
        /// Access key ID to access the Amazon S3 bucket. e.g.: "this-is-not-the-secret"
        /// </summary>
        public readonly string AccessKeyId;
        public readonly string AccountKey;
        /// <summary>
        /// Sets the Azure storage account name.
        /// </summary>
        public readonly string AccountName;
        /// <summary>
        /// An array of name-value pair attribute entries. Used as additional parameters in connection string.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetConnectionsConnectionCollectionItemAdditionalAttributeResult> AdditionalAttributes;
        /// <summary>
        /// Authentication mode. It can be provided at creation of Oracle Autonomous Database Serverless connections, when a databaseId is provided. The default value is MTLS.
        /// </summary>
        public readonly string AuthenticationMode;
        /// <summary>
        /// Used authentication mechanism to be provided for the following connection types:
        /// * SNOWFLAKE, AZURE_DATA_LAKE_STORAGE, ELASTICSEARCH, KAFKA_SCHEMA_REGISTRY, REDIS
        /// * JAVA_MESSAGE_SERVICE - If not provided, default is NONE. Optional until 2024-06-27, in the release after it will be made required.
        /// </summary>
        public readonly string AuthenticationType;
        /// <summary>
        /// Azure tenant ID of the application. This property is required when 'authenticationType' is set to 'AZURE_ACTIVE_DIRECTORY'. e.g.: 14593954-d337-4a61-a364-9f758c64f97f
        /// </summary>
        public readonly string AzureTenantId;
        /// <summary>
        /// Kafka bootstrap. Equivalent of bootstrap.servers configuration property in Kafka: list of KafkaBootstrapServer objects specified by host/port. Used for establishing the initial connection to the Kafka cluster. Example: `"server1.example.com:9092,server2.example.com:9092"`
        /// </summary>
        public readonly ImmutableArray<Outputs.GetConnectionsConnectionCollectionItemBootstrapServerResult> BootstrapServers;
        /// <summary>
        /// Azure client ID of the application. This property is required when 'authenticationType' is set to 'AZURE_ACTIVE_DIRECTORY'. e.g.: 06ecaabf-8b80-4ec8-a0ec-20cbf463703d
        /// </summary>
        public readonly string ClientId;
        public readonly string ClientSecret;
        /// <summary>
        /// The OCID of the compartment that contains the work request. Work requests should be scoped  to the same compartment as the resource the work request affects. If the work request concerns  multiple resources, and those resources are not in the same compartment, it is up to the service team  to pick the primary resource whose compartment should be used.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The of Java class implementing javax.jms.ConnectionFactory interface supplied by the Java Message Service provider. e.g.: 'com.stc.jmsjca.core.JConnectionFactoryXA'
        /// </summary>
        public readonly string ConnectionFactory;
        /// <summary>
        /// * ORACLE: Connect descriptor or Easy Connect Naming method used to connect to a database.
        /// * MONGODB: MongoDB connection string. e.g.: 'mongodb://mongodb0.example.com:27017/recordsrecords'
        /// * AZURE_SYNAPSE_ANALYTICS: JDBC connection string. e.g.: 'jdbc:sqlserver://&lt;synapse-workspace&gt;.sql.azuresynapse.net:1433;database=&lt;db-name&gt;;encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.sql.azuresynapse.net;loginTimeout=300;'
        /// </summary>
        public readonly string ConnectionString;
        /// <summary>
        /// The array of connection types.
        /// </summary>
        public readonly string ConnectionType;
        /// <summary>
        /// * JAVA_MESSAGE_SERVICE: Connection URL of the Java Message Service, specifying the protocol, host, and port. e.g.: 'mq://myjms.host.domain:7676'
        /// * SNOWFLAKE: JDBC connection URL. e.g.: 'jdbc:snowflake://&lt;account_name&gt;.snowflakecomputing.com/?warehouse=&lt;warehouse-name&gt;&amp;db=&lt;db-name&gt;'
        /// * AMAZON_REDSHIFT: Connection URL. e.g.: 'jdbc:redshift://aws-redshift-instance.aaaaaaaaaaaa.us-east-2.redshift.amazonaws.com:5439/mydb'
        /// </summary>
        public readonly string ConnectionUrl;
        public readonly string ConsumerProperties;
        public readonly string CoreSiteXml;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database being referenced.
        /// </summary>
        public readonly string DatabaseId;
        /// <summary>
        /// The name of the database.
        /// </summary>
        public readonly string DatabaseName;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database system being referenced.
        /// </summary>
        public readonly string DbSystemId;
        /// <summary>
        /// Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment being referenced.
        /// </summary>
        public readonly string DeploymentId;
        /// <summary>
        /// Metadata about this specific object.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// A filter to return only the resources that match the entire 'displayName' given.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Azure Storage service endpoint. e.g: https://test.blob.core.windows.net
        /// </summary>
        public readonly string Endpoint;
        public readonly string Fingerprint;
        /// <summary>
        /// A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The name or address of a host.
        /// In case of Generic connection type it represents the Host and port separated by colon. Example: `"server.example.com:1234"`
        /// For multiple hosts, provide a comma separated list. Example: `"server1.example.com:1000,server1.example.com:2000"`
        /// </summary>
        public readonly string Host;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the connection being referenced.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// List of ingress IP addresses from where the GoldenGate deployment connects to this connection's privateIp.  Customers may optionally set up ingress security rules to restrict traffic from these IP addresses.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetConnectionsConnectionCollectionItemIngressIpResult> IngressIps;
        public readonly bool IsLockOverride;
        /// <summary>
        /// The Connection Factory can be looked up using this name. e.g.: 'ConnectionFactory'
        /// </summary>
        public readonly string JndiConnectionFactory;
        /// <summary>
        /// The implementation of javax.naming.spi.InitialContextFactory interface that the client uses to obtain initial naming context. e.g.: 'org.apache.activemq.jndi.ActiveMQInitialContextFactory'
        /// </summary>
        public readonly string JndiInitialContextFactory;
        /// <summary>
        /// The URL that Java Message Service will use to contact the JNDI provider. e.g.: 'tcp://myjms.host.domain:61616?jms.prefetchPolicy.all=1000'
        /// </summary>
        public readonly string JndiProviderUrl;
        public readonly string JndiSecurityCredentials;
        /// <summary>
        /// Specifies the identity of the principal (user) to be authenticated. e.g.: 'admin2'
        /// </summary>
        public readonly string JndiSecurityPrincipal;
        /// <summary>
        /// Refers to the customer's master key OCID.  If provided, it references a key to manage secrets. Customers must add policies to permit GoldenGate to use this key.
        /// </summary>
        public readonly string KeyId;
        public readonly string KeyStore;
        public readonly string KeyStorePassword;
        /// <summary>
        /// Describes the object's current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// Locks associated with this resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetConnectionsConnectionCollectionItemLockResult> Locks;
        /// <summary>
        /// An array of Network Security Group OCIDs used to define network access for either Deployments or Connections.
        /// </summary>
        public readonly ImmutableArray<string> NsgIds;
        public readonly string Password;
        /// <summary>
        /// The port of an endpoint usually specified for a connection.
        /// </summary>
        public readonly int Port;
        /// <summary>
        /// Deprecated: this field will be removed in future versions. Either specify the private IP in the connectionString or host  field, or make sure the host name is resolvable in the target VCN.
        /// The private IP address of the connection's endpoint in the customer's VCN, typically a database endpoint or a big data endpoint (e.g. Kafka bootstrap server). In case the privateIp is provided, the subnetId must also be provided. In case the privateIp (and the subnetId) is not provided it is assumed the datasource is publicly accessible. In case the connection is accessible only privately, the lack of privateIp will result in not being able to access the connection.
        /// </summary>
        public readonly string PrivateIp;
        public readonly string PrivateKeyFile;
        public readonly string PrivateKeyPassphrase;
        public readonly string ProducerProperties;
        public readonly string PublicKeyFingerprint;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Redis cluster.
        /// </summary>
        public readonly string RedisClusterId;
        /// <summary>
        /// The name of the region. e.g.: us-ashburn-1
        /// </summary>
        public readonly string Region;
        /// <summary>
        /// Controls the network traffic direction to the target: SHARED_SERVICE_ENDPOINT: Traffic flows through the Goldengate Service's network to public hosts. Cannot be used for private targets.  SHARED_DEPLOYMENT_ENDPOINT: Network traffic flows from the assigned deployment's private endpoint through the deployment's subnet. DEDICATED_ENDPOINT: A dedicated private endpoint is created in the target VCN subnet for the connection. The subnetId is required when DEDICATED_ENDPOINT networking is selected.
        /// </summary>
        public readonly string RoutingMethod;
        public readonly string SasToken;
        public readonly string SecretAccessKey;
        /// <summary>
        /// Security Protocol to be provided for the following connection types:
        /// * ELASTICSEARCH, KAFKA, MICROSOFT_SQLSERVER, MYSQL, POSTGRESQL, REDIS
        /// * JAVA_MESSAGE_SERVICE - If not provided, default is NONE. Optional until 2024-06-27, in the release after it will be made required.
        /// </summary>
        public readonly string SecurityProtocol;
        /// <summary>
        /// Comma separated list of server addresses, specified as host:port entries, where :port is optional. Example: `"server1.example.com:4000,server2.example.com:4000"`
        /// If port is not specified, a default value is set, in case of ELASTICSEARCH: 9200, for REDIS 6379.
        /// </summary>
        public readonly string Servers;
        public readonly string ServiceAccountKeyFile;
        /// <summary>
        /// The mode of the database connection session to be established by the data client. 'REDIRECT' - for a RAC database, 'DIRECT' - for a non-RAC database. Connection to a RAC database involves a redirection received from the SCAN listeners to the database node to connect to. By default the mode would be DIRECT.
        /// </summary>
        public readonly string SessionMode;
        /// <summary>
        /// If set to true, Java Naming and Directory Interface (JNDI) properties should be provided.
        /// </summary>
        public readonly bool ShouldUseJndi;
        /// <summary>
        /// If set to true, the driver validates the certificate that is sent by the database server.
        /// </summary>
        public readonly bool ShouldValidateServerCertificate;
        /// <summary>
        /// Database Certificate - The base64 encoded content of pem file containing the server public key (for 1-way SSL).
        /// </summary>
        public readonly string SslCa;
        public readonly string SslCert;
        public readonly string SslClientKeystash;
        public readonly string SslClientKeystoredb;
        public readonly string SslCrl;
        public readonly string SslKey;
        public readonly string SslKeyPassword;
        /// <summary>
        /// SSL mode to be provided for the following connection types: MYSQL, POSTGRESQL.
        /// </summary>
        public readonly string SslMode;
        public readonly string SslServerCertificate;
        /// <summary>
        /// A filter to return only connections having the 'lifecycleState' given.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream pool being referenced.
        /// </summary>
        public readonly string StreamPoolId;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the target subnet of the dedicated connection.
        /// </summary>
        public readonly string SubnetId;
        /// <summary>
        /// The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{orcl-cloud: {free-tier-retain: true}}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// The array of technology types.
        /// </summary>
        public readonly string TechnologyType;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the related Oracle Cloud Infrastructure tenancy.
        /// </summary>
        public readonly string TenancyId;
        /// <summary>
        /// The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
        /// </summary>
        public readonly string TimeUpdated;
        public readonly string TrustStore;
        public readonly string TrustStorePassword;
        /// <summary>
        /// Kafka Schema Registry URL. e.g.: 'https://server1.us.oracle.com:8081'
        /// </summary>
        public readonly string Url;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure user who will access the Oracle NoSQL database/Object Storage. The user must have write access to the table they want to connect to.
        /// </summary>
        public readonly string UserId;
        /// <summary>
        /// The username Oracle GoldenGate uses to connect the associated system of the given technology. This username must already exist and be available by the system/application to be connected to and must conform to the case sensitivity requirements defined in it.
        /// </summary>
        public readonly string Username;
        /// <summary>
        /// Refers to the customer's vault OCID.  If provided, it references a vault where GoldenGate can manage secrets. Customers must add policies to permit GoldenGate to manage secrets contained within this vault.
        /// </summary>
        public readonly string VaultId;
        public readonly string Wallet;

        [OutputConstructor]
        private GetConnectionsConnectionCollectionItemResult(
            string accessKeyId,

            string accountKey,

            string accountName,

            ImmutableArray<Outputs.GetConnectionsConnectionCollectionItemAdditionalAttributeResult> additionalAttributes,

            string authenticationMode,

            string authenticationType,

            string azureTenantId,

            ImmutableArray<Outputs.GetConnectionsConnectionCollectionItemBootstrapServerResult> bootstrapServers,

            string clientId,

            string clientSecret,

            string compartmentId,

            string connectionFactory,

            string connectionString,

            string connectionType,

            string connectionUrl,

            string consumerProperties,

            string coreSiteXml,

            string databaseId,

            string databaseName,

            string dbSystemId,

            ImmutableDictionary<string, string> definedTags,

            string deploymentId,

            string description,

            string displayName,

            string endpoint,

            string fingerprint,

            ImmutableDictionary<string, string> freeformTags,

            string host,

            string id,

            ImmutableArray<Outputs.GetConnectionsConnectionCollectionItemIngressIpResult> ingressIps,

            bool isLockOverride,

            string jndiConnectionFactory,

            string jndiInitialContextFactory,

            string jndiProviderUrl,

            string jndiSecurityCredentials,

            string jndiSecurityPrincipal,

            string keyId,

            string keyStore,

            string keyStorePassword,

            string lifecycleDetails,

            ImmutableArray<Outputs.GetConnectionsConnectionCollectionItemLockResult> locks,

            ImmutableArray<string> nsgIds,

            string password,

            int port,

            string privateIp,

            string privateKeyFile,

            string privateKeyPassphrase,

            string producerProperties,

            string publicKeyFingerprint,

            string redisClusterId,

            string region,

            string routingMethod,

            string sasToken,

            string secretAccessKey,

            string securityProtocol,

            string servers,

            string serviceAccountKeyFile,

            string sessionMode,

            bool shouldUseJndi,

            bool shouldValidateServerCertificate,

            string sslCa,

            string sslCert,

            string sslClientKeystash,

            string sslClientKeystoredb,

            string sslCrl,

            string sslKey,

            string sslKeyPassword,

            string sslMode,

            string sslServerCertificate,

            string state,

            string streamPoolId,

            string subnetId,

            ImmutableDictionary<string, string> systemTags,

            string technologyType,

            string tenancyId,

            string timeCreated,

            string timeUpdated,

            string trustStore,

            string trustStorePassword,

            string url,

            string userId,

            string username,

            string vaultId,

            string wallet)
        {
            AccessKeyId = accessKeyId;
            AccountKey = accountKey;
            AccountName = accountName;
            AdditionalAttributes = additionalAttributes;
            AuthenticationMode = authenticationMode;
            AuthenticationType = authenticationType;
            AzureTenantId = azureTenantId;
            BootstrapServers = bootstrapServers;
            ClientId = clientId;
            ClientSecret = clientSecret;
            CompartmentId = compartmentId;
            ConnectionFactory = connectionFactory;
            ConnectionString = connectionString;
            ConnectionType = connectionType;
            ConnectionUrl = connectionUrl;
            ConsumerProperties = consumerProperties;
            CoreSiteXml = coreSiteXml;
            DatabaseId = databaseId;
            DatabaseName = databaseName;
            DbSystemId = dbSystemId;
            DefinedTags = definedTags;
            DeploymentId = deploymentId;
            Description = description;
            DisplayName = displayName;
            Endpoint = endpoint;
            Fingerprint = fingerprint;
            FreeformTags = freeformTags;
            Host = host;
            Id = id;
            IngressIps = ingressIps;
            IsLockOverride = isLockOverride;
            JndiConnectionFactory = jndiConnectionFactory;
            JndiInitialContextFactory = jndiInitialContextFactory;
            JndiProviderUrl = jndiProviderUrl;
            JndiSecurityCredentials = jndiSecurityCredentials;
            JndiSecurityPrincipal = jndiSecurityPrincipal;
            KeyId = keyId;
            KeyStore = keyStore;
            KeyStorePassword = keyStorePassword;
            LifecycleDetails = lifecycleDetails;
            Locks = locks;
            NsgIds = nsgIds;
            Password = password;
            Port = port;
            PrivateIp = privateIp;
            PrivateKeyFile = privateKeyFile;
            PrivateKeyPassphrase = privateKeyPassphrase;
            ProducerProperties = producerProperties;
            PublicKeyFingerprint = publicKeyFingerprint;
            RedisClusterId = redisClusterId;
            Region = region;
            RoutingMethod = routingMethod;
            SasToken = sasToken;
            SecretAccessKey = secretAccessKey;
            SecurityProtocol = securityProtocol;
            Servers = servers;
            ServiceAccountKeyFile = serviceAccountKeyFile;
            SessionMode = sessionMode;
            ShouldUseJndi = shouldUseJndi;
            ShouldValidateServerCertificate = shouldValidateServerCertificate;
            SslCa = sslCa;
            SslCert = sslCert;
            SslClientKeystash = sslClientKeystash;
            SslClientKeystoredb = sslClientKeystoredb;
            SslCrl = sslCrl;
            SslKey = sslKey;
            SslKeyPassword = sslKeyPassword;
            SslMode = sslMode;
            SslServerCertificate = sslServerCertificate;
            State = state;
            StreamPoolId = streamPoolId;
            SubnetId = subnetId;
            SystemTags = systemTags;
            TechnologyType = technologyType;
            TenancyId = tenancyId;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            TrustStore = trustStore;
            TrustStorePassword = trustStorePassword;
            Url = url;
            UserId = userId;
            Username = username;
            VaultId = vaultId;
            Wallet = wallet;
        }
    }
}
