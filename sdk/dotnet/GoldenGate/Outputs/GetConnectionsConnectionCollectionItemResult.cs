// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.GoldenGate.Outputs
{

    [OutputType]
    public sealed class GetConnectionsConnectionCollectionItemResult
    {
        public readonly string AccountKey;
        /// <summary>
        /// Sets the Azure storage account name.
        /// </summary>
        public readonly string AccountName;
        /// <summary>
        /// An array of name-value pair attribute entries. Used as additional parameters in connection string.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetConnectionsConnectionCollectionItemAdditionalAttributeResult> AdditionalAttributes;
        /// <summary>
        /// Used authentication mechanism to access Azure Data Lake Storage.
        /// </summary>
        public readonly string AuthenticationType;
        /// <summary>
        /// Azure tenant ID of the application. This property is required when 'authenticationType' is set to 'AZURE_ACTIVE_DIRECTORY'. e.g.: 14593954-d337-4a61-a364-9f758c64f97f
        /// </summary>
        public readonly string AzureTenantId;
        /// <summary>
        /// Kafka bootstrap. Equivalent of bootstrap.servers configuration property in Kafka: list of KafkaBootstrapServer objects specified by host/port. Used for establishing the initial connection to the Kafka cluster. Example: `"server1.example.com:9092,server2.example.com:9092"`
        /// </summary>
        public readonly ImmutableArray<Outputs.GetConnectionsConnectionCollectionItemBootstrapServerResult> BootstrapServers;
        /// <summary>
        /// Azure client ID of the application. This property is required when 'authenticationType' is set to 'AZURE_ACTIVE_DIRECTORY'. e.g.: 06ecaabf-8b80-4ec8-a0ec-20cbf463703d
        /// </summary>
        public readonly string ClientId;
        public readonly string ClientSecret;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// JDBC connection string. e.g.: 'jdbc:sqlserver://&lt;synapse-workspace&gt;.sql.azuresynapse.net:1433;database=&lt;db-name&gt;;encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.sql.azuresynapse.net;loginTimeout=300;'
        /// </summary>
        public readonly string ConnectionString;
        /// <summary>
        /// The array of connection types.
        /// </summary>
        public readonly string ConnectionType;
        public readonly string ConsumerProperties;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database being referenced.
        /// </summary>
        public readonly string DatabaseId;
        /// <summary>
        /// The name of the database.
        /// </summary>
        public readonly string DatabaseName;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database system being referenced.
        /// </summary>
        public readonly string DbSystemId;
        /// <summary>
        /// Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment being referenced.
        /// </summary>
        public readonly string DeploymentId;
        /// <summary>
        /// Metadata about this specific object.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// A filter to return only the resources that match the entire 'displayName' given.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Azure Storage service endpoint. e.g: https://test.blob.core.windows.net
        /// </summary>
        public readonly string Endpoint;
        /// <summary>
        /// A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// The name or address of a host.
        /// </summary>
        public readonly string Host;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the connection being referenced.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// List of ingress IP addresses, from where the GoldenGate deployment connects to this connection's privateIp.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetConnectionsConnectionCollectionItemIngressIpResult> IngressIps;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer "Master" key being referenced. If provided, this will reference a key which the customer will be required to ensure the policies are established to permit the GoldenGate Service to utilize this key to manage secrets.
        /// </summary>
        public readonly string KeyId;
        public readonly string KeyStore;
        public readonly string KeyStorePassword;
        /// <summary>
        /// Describes the object's current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// An array of Network Security Group OCIDs used to define network access for either Deployments or Connections.
        /// </summary>
        public readonly ImmutableArray<string> NsgIds;
        public readonly string Password;
        /// <summary>
        /// The port of an endpoint usually specified for a connection.
        /// </summary>
        public readonly int Port;
        /// <summary>
        /// The private IP address of the connection's endpoint in the customer's VCN, typically a database endpoint or a big data endpoint (e.g. Kafka bootstrap server). In case the privateIp is provided, the subnetId must also be provided. In case the privateIp (and the subnetId) is not provided it is assumed the datasource is publicly accessible. In case the connection is accessible only privately, the lack of privateIp will result in not being able to access the connection.
        /// </summary>
        public readonly string PrivateIp;
        public readonly string PrivateKeyFile;
        public readonly string PrivateKeyPassphrase;
        public readonly string ProducerProperties;
        public readonly string PublicKeyFingerprint;
        /// <summary>
        /// The name of the region. e.g.: us-ashburn-1
        /// </summary>
        public readonly string Region;
        public readonly string SasToken;
        /// <summary>
        /// Security protocol for PostgreSQL.
        /// </summary>
        public readonly string SecurityProtocol;
        /// <summary>
        /// The mode of the database connection session to be established by the data client. 'REDIRECT' - for a RAC database, 'DIRECT' - for a non-RAC database. Connection to a RAC database involves a redirection received from the SCAN listeners to the database node to connect to. By default the mode would be DIRECT.
        /// </summary>
        public readonly string SessionMode;
        public readonly string SslCa;
        public readonly string SslCert;
        public readonly string SslCrl;
        public readonly string SslKey;
        public readonly string SslKeyPassword;
        /// <summary>
        /// SSL mode for PostgreSQL.
        /// </summary>
        public readonly string SslMode;
        /// <summary>
        /// A filter to return only connections having the 'lifecycleState' given.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream pool being referenced.
        /// </summary>
        public readonly string StreamPoolId;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet being referenced.
        /// </summary>
        public readonly string SubnetId;
        /// <summary>
        /// The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{orcl-cloud: {free-tier-retain: true}}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> SystemTags;
        /// <summary>
        /// The array of technology types.
        /// </summary>
        public readonly string TechnologyType;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the related Oracle Cloud Infrastructure tenancy.
        /// </summary>
        public readonly string TenancyId;
        /// <summary>
        /// The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
        /// </summary>
        public readonly string TimeUpdated;
        public readonly string TrustStore;
        public readonly string TrustStorePassword;
        /// <summary>
        /// Kafka Schema Registry URL. e.g.: 'https://server1.us.oracle.com:8081'
        /// </summary>
        public readonly string Url;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure user who will access the Object Storage. The user must have write access to the bucket they want to connect to.
        /// </summary>
        public readonly string UserId;
        /// <summary>
        /// The username Oracle GoldenGate uses to connect the associated RDBMS.  This username must already exist and be available for use by the database.  It must conform to the security requirements implemented by the database including length, case sensitivity, and so on.
        /// </summary>
        public readonly string Username;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer vault being referenced. If provided, this will reference a vault which the customer will be required to ensure the policies are established to permit the GoldenGate Service to manage secrets contained within this vault.
        /// </summary>
        public readonly string VaultId;
        public readonly string Wallet;

        [OutputConstructor]
        private GetConnectionsConnectionCollectionItemResult(
            string accountKey,

            string accountName,

            ImmutableArray<Outputs.GetConnectionsConnectionCollectionItemAdditionalAttributeResult> additionalAttributes,

            string authenticationType,

            string azureTenantId,

            ImmutableArray<Outputs.GetConnectionsConnectionCollectionItemBootstrapServerResult> bootstrapServers,

            string clientId,

            string clientSecret,

            string compartmentId,

            string connectionString,

            string connectionType,

            string consumerProperties,

            string databaseId,

            string databaseName,

            string dbSystemId,

            ImmutableDictionary<string, object> definedTags,

            string deploymentId,

            string description,

            string displayName,

            string endpoint,

            ImmutableDictionary<string, object> freeformTags,

            string host,

            string id,

            ImmutableArray<Outputs.GetConnectionsConnectionCollectionItemIngressIpResult> ingressIps,

            string keyId,

            string keyStore,

            string keyStorePassword,

            string lifecycleDetails,

            ImmutableArray<string> nsgIds,

            string password,

            int port,

            string privateIp,

            string privateKeyFile,

            string privateKeyPassphrase,

            string producerProperties,

            string publicKeyFingerprint,

            string region,

            string sasToken,

            string securityProtocol,

            string sessionMode,

            string sslCa,

            string sslCert,

            string sslCrl,

            string sslKey,

            string sslKeyPassword,

            string sslMode,

            string state,

            string streamPoolId,

            string subnetId,

            ImmutableDictionary<string, object> systemTags,

            string technologyType,

            string tenancyId,

            string timeCreated,

            string timeUpdated,

            string trustStore,

            string trustStorePassword,

            string url,

            string userId,

            string username,

            string vaultId,

            string wallet)
        {
            AccountKey = accountKey;
            AccountName = accountName;
            AdditionalAttributes = additionalAttributes;
            AuthenticationType = authenticationType;
            AzureTenantId = azureTenantId;
            BootstrapServers = bootstrapServers;
            ClientId = clientId;
            ClientSecret = clientSecret;
            CompartmentId = compartmentId;
            ConnectionString = connectionString;
            ConnectionType = connectionType;
            ConsumerProperties = consumerProperties;
            DatabaseId = databaseId;
            DatabaseName = databaseName;
            DbSystemId = dbSystemId;
            DefinedTags = definedTags;
            DeploymentId = deploymentId;
            Description = description;
            DisplayName = displayName;
            Endpoint = endpoint;
            FreeformTags = freeformTags;
            Host = host;
            Id = id;
            IngressIps = ingressIps;
            KeyId = keyId;
            KeyStore = keyStore;
            KeyStorePassword = keyStorePassword;
            LifecycleDetails = lifecycleDetails;
            NsgIds = nsgIds;
            Password = password;
            Port = port;
            PrivateIp = privateIp;
            PrivateKeyFile = privateKeyFile;
            PrivateKeyPassphrase = privateKeyPassphrase;
            ProducerProperties = producerProperties;
            PublicKeyFingerprint = publicKeyFingerprint;
            Region = region;
            SasToken = sasToken;
            SecurityProtocol = securityProtocol;
            SessionMode = sessionMode;
            SslCa = sslCa;
            SslCert = sslCert;
            SslCrl = sslCrl;
            SslKey = sslKey;
            SslKeyPassword = sslKeyPassword;
            SslMode = sslMode;
            State = state;
            StreamPoolId = streamPoolId;
            SubnetId = subnetId;
            SystemTags = systemTags;
            TechnologyType = technologyType;
            TenancyId = tenancyId;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            TrustStore = trustStore;
            TrustStorePassword = trustStorePassword;
            Url = url;
            UserId = userId;
            Username = username;
            VaultId = vaultId;
            Wallet = wallet;
        }
    }
}
