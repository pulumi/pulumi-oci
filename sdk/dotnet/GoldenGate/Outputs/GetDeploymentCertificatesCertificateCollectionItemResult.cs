// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.GoldenGate.Outputs
{

    [OutputType]
    public sealed class GetDeploymentCertificatesCertificateCollectionItemResult
    {
        /// <summary>
        /// The Certificate authority key id.
        /// </summary>
        public readonly string AuthorityKeyId;
        /// <summary>
        /// The base64 encoded content of the PEM file containing the SSL certificate.
        /// </summary>
        public readonly string CertificateContent;
        /// <summary>
        /// A unique Deployment identifier.
        /// </summary>
        public readonly string DeploymentId;
        /// <summary>
        /// Indicates if the certificate is ca.
        /// </summary>
        public readonly bool IsCa;
        public readonly bool IsLockOverride;
        /// <summary>
        /// Indicates if the certificate is self signed.
        /// </summary>
        public readonly bool IsSelfSigned;
        /// <summary>
        /// The Certificate issuer.
        /// </summary>
        public readonly string Issuer;
        /// <summary>
        /// The identifier key (unique name in the scope of the deployment) of the certificate being referenced.  It must be 1 to 32 characters long, must contain only alphanumeric characters and must start with a letter.
        /// </summary>
        public readonly string Key;
        /// <summary>
        /// The Certificate md5Hash.
        /// </summary>
        public readonly string Md5hash;
        /// <summary>
        /// The Certificate public key.
        /// </summary>
        public readonly string PublicKey;
        /// <summary>
        /// The Certificate public key algorithm.
        /// </summary>
        public readonly string PublicKeyAlgorithm;
        /// <summary>
        /// The Certificate public key size.
        /// </summary>
        public readonly string PublicKeySize;
        /// <summary>
        /// The Certificate serial.
        /// </summary>
        public readonly string Serial;
        /// <summary>
        /// The Certificate sha1 hash.
        /// </summary>
        public readonly string Sha1hash;
        /// <summary>
        /// A filter to return only connections having the 'lifecycleState' given.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The Certificate subject.
        /// </summary>
        public readonly string Subject;
        /// <summary>
        /// The Certificate subject key id.
        /// </summary>
        public readonly string SubjectKeyId;
        /// <summary>
        /// The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time the certificate is valid from. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
        /// </summary>
        public readonly string TimeValidFrom;
        /// <summary>
        /// The time the certificate is valid to. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
        /// </summary>
        public readonly string TimeValidTo;
        /// <summary>
        /// The Certificate version.
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private GetDeploymentCertificatesCertificateCollectionItemResult(
            string authorityKeyId,

            string certificateContent,

            string deploymentId,

            bool isCa,

            bool isLockOverride,

            bool isSelfSigned,

            string issuer,

            string key,

            string md5hash,

            string publicKey,

            string publicKeyAlgorithm,

            string publicKeySize,

            string serial,

            string sha1hash,

            string state,

            string subject,

            string subjectKeyId,

            string timeCreated,

            string timeValidFrom,

            string timeValidTo,

            string version)
        {
            AuthorityKeyId = authorityKeyId;
            CertificateContent = certificateContent;
            DeploymentId = deploymentId;
            IsCa = isCa;
            IsLockOverride = isLockOverride;
            IsSelfSigned = isSelfSigned;
            Issuer = issuer;
            Key = key;
            Md5hash = md5hash;
            PublicKey = publicKey;
            PublicKeyAlgorithm = publicKeyAlgorithm;
            PublicKeySize = publicKeySize;
            Serial = serial;
            Sha1hash = sha1hash;
            State = state;
            Subject = subject;
            SubjectKeyId = subjectKeyId;
            TimeCreated = timeCreated;
            TimeValidFrom = timeValidFrom;
            TimeValidTo = timeValidTo;
            Version = version;
        }
    }
}
