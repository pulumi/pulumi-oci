// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.GoldenGate.Outputs
{

    [OutputType]
    public sealed class GetPipelinesPipelineCollectionItemProcessOptionResult
    {
        /// <summary>
        /// Options required for the pipeline Initial Data Load. If enabled, copies existing data from source to target before replication.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPipelinesPipelineCollectionItemProcessOptionInitialDataLoadResult> InitialDataLoads;
        /// <summary>
        /// Options required for pipeline Initial Data Load. If enabled, copies existing data from source to target before replication.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPipelinesPipelineCollectionItemProcessOptionReplicateSchemaChangeResult> ReplicateSchemaChanges;
        /// <summary>
        /// If ENABLED, then the replication process restarts itself upon failure. This option applies when creating or updating a pipeline.
        /// </summary>
        public readonly string ShouldRestartOnFailure;
        /// <summary>
        /// If ENABLED, then the pipeline is started as part of pipeline creation. It uses default mapping. This option only applies when creating a pipeline and is not applicable while updating a pipeline.
        /// </summary>
        public readonly string StartUsingDefaultMapping;

        [OutputConstructor]
        private GetPipelinesPipelineCollectionItemProcessOptionResult(
            ImmutableArray<Outputs.GetPipelinesPipelineCollectionItemProcessOptionInitialDataLoadResult> initialDataLoads,

            ImmutableArray<Outputs.GetPipelinesPipelineCollectionItemProcessOptionReplicateSchemaChangeResult> replicateSchemaChanges,

            string shouldRestartOnFailure,

            string startUsingDefaultMapping)
        {
            InitialDataLoads = initialDataLoads;
            ReplicateSchemaChanges = replicateSchemaChanges;
            ShouldRestartOnFailure = shouldRestartOnFailure;
            StartUsingDefaultMapping = startUsingDefaultMapping;
        }
    }
}
