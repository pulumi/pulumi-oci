// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.GoldenGate.Outputs
{

    [OutputType]
    public sealed class GetPipelinesPipelineCollectionItemResult
    {
        /// <summary>
        /// The OCID of the compartment that contains the work request. Work requests should be scoped  to the same compartment as the resource the work request affects. If the work request concerns  multiple resources, and those resources are not in the same compartment, it is up to the service team  to pick the primary resource whose compartment should be used.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The Minimum number of OCPUs to be made available for this Deployment.
        /// </summary>
        public readonly int CpuCoreCount;
        /// <summary>
        /// Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// Metadata about this specific object.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// A filter to return only the resources that match the entire 'displayName' given.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the pipeline. This option applies when retrieving a pipeline.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Indicates if auto scaling is enabled for the Deployment's CPU core count.
        /// </summary>
        public readonly bool IsAutoScalingEnabled;
        /// <summary>
        /// The Oracle license model that applies to a Deployment.
        /// </summary>
        public readonly string LicenseModel;
        /// <summary>
        /// Describes the object's current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// A filtered list of pipelines to return for a given lifecycleSubState.
        /// </summary>
        public readonly string LifecycleSubState;
        /// <summary>
        /// Locks associated with this resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPipelinesPipelineCollectionItemLockResult> Locks;
        /// <summary>
        /// Mapping for source/target schema/tables for the pipeline data replication.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPipelinesPipelineCollectionItemMappingRuleResult> MappingRules;
        /// <summary>
        /// Required pipeline options to configure the replication process (Extract or Replicat).
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPipelinesPipelineCollectionItemProcessOptionResult> ProcessOptions;
        /// <summary>
        /// The type of the recipe
        /// </summary>
        public readonly string RecipeType;
        /// <summary>
        /// The source connection details for creating a pipeline.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPipelinesPipelineCollectionItemSourceConnectionDetailResult> SourceConnectionDetails;
        /// <summary>
        /// A filtered list of pipelines to return for a given lifecycleState.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{orcl-cloud: {free-tier-retain: true}}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// The target connection details for creating a pipeline.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPipelinesPipelineCollectionItemTargetConnectionDetailResult> TargetConnectionDetails;
        /// <summary>
        /// The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// When the resource was last updated. This option applies when retrieving a pipeline. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2024-07-25T21:10:29.600Z`.
        /// </summary>
        public readonly string TimeLastRecorded;
        /// <summary>
        /// The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetPipelinesPipelineCollectionItemResult(
            string compartmentId,

            int cpuCoreCount,

            ImmutableDictionary<string, string> definedTags,

            string description,

            string displayName,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            bool isAutoScalingEnabled,

            string licenseModel,

            string lifecycleDetails,

            string lifecycleSubState,

            ImmutableArray<Outputs.GetPipelinesPipelineCollectionItemLockResult> locks,

            ImmutableArray<Outputs.GetPipelinesPipelineCollectionItemMappingRuleResult> mappingRules,

            ImmutableArray<Outputs.GetPipelinesPipelineCollectionItemProcessOptionResult> processOptions,

            string recipeType,

            ImmutableArray<Outputs.GetPipelinesPipelineCollectionItemSourceConnectionDetailResult> sourceConnectionDetails,

            string state,

            ImmutableDictionary<string, string> systemTags,

            ImmutableArray<Outputs.GetPipelinesPipelineCollectionItemTargetConnectionDetailResult> targetConnectionDetails,

            string timeCreated,

            string timeLastRecorded,

            string timeUpdated)
        {
            CompartmentId = compartmentId;
            CpuCoreCount = cpuCoreCount;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            IsAutoScalingEnabled = isAutoScalingEnabled;
            LicenseModel = licenseModel;
            LifecycleDetails = lifecycleDetails;
            LifecycleSubState = lifecycleSubState;
            Locks = locks;
            MappingRules = mappingRules;
            ProcessOptions = processOptions;
            RecipeType = recipeType;
            SourceConnectionDetails = sourceConnectionDetails;
            State = state;
            SystemTags = systemTags;
            TargetConnectionDetails = targetConnectionDetails;
            TimeCreated = timeCreated;
            TimeLastRecorded = timeLastRecorded;
            TimeUpdated = timeUpdated;
        }
    }
}
