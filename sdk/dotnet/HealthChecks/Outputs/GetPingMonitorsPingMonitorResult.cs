// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.HealthChecks.Outputs
{

    [OutputType]
    public sealed class GetPingMonitorsPingMonitorResult
    {
        /// <summary>
        /// Filters results by compartment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// Filters results that exactly match the `displayName` field.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// Filters results that match the `homeRegion`.
        /// </summary>
        public readonly string HomeRegion;
        /// <summary>
        /// The OCID of the resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The monitor interval in seconds. Valid values: 10, 30, and 60.
        /// </summary>
        public readonly int IntervalInSeconds;
        /// <summary>
        /// Enables or disables the monitor. Set to 'true' to launch monitoring.
        /// </summary>
        public readonly bool IsEnabled;
        /// <summary>
        /// The port on which to probe endpoints. If unspecified, probes will use the default port of their protocol.
        /// </summary>
        public readonly int Port;
        /// <summary>
        /// The protocols for ping probes.
        /// </summary>
        public readonly string Protocol;
        /// <summary>
        /// A URL for fetching the probe results.
        /// </summary>
        public readonly string ResultsUrl;
        /// <summary>
        /// A list of targets (hostnames or IP addresses) of the probe.
        /// </summary>
        public readonly ImmutableArray<string> Targets;
        /// <summary>
        /// The RFC 3339-formatted creation date and time of the probe.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The probe timeout in seconds. Valid values: 10, 20, 30, and 60. The probe timeout must be less than or equal to `intervalInSeconds` for monitors.
        /// </summary>
        public readonly int TimeoutInSeconds;
        /// <summary>
        /// A list of names of vantage points from which to execute the probe.
        /// </summary>
        public readonly ImmutableArray<string> VantagePointNames;

        [OutputConstructor]
        private GetPingMonitorsPingMonitorResult(
            string compartmentId,

            ImmutableDictionary<string, object> definedTags,

            string displayName,

            ImmutableDictionary<string, object> freeformTags,

            string homeRegion,

            string id,

            int intervalInSeconds,

            bool isEnabled,

            int port,

            string protocol,

            string resultsUrl,

            ImmutableArray<string> targets,

            string timeCreated,

            int timeoutInSeconds,

            ImmutableArray<string> vantagePointNames)
        {
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            HomeRegion = homeRegion;
            Id = id;
            IntervalInSeconds = intervalInSeconds;
            IsEnabled = isEnabled;
            Port = port;
            Protocol = protocol;
            ResultsUrl = resultsUrl;
            Targets = targets;
            TimeCreated = timeCreated;
            TimeoutInSeconds = timeoutInSeconds;
            VantagePointNames = vantagePointNames;
        }
    }
}
