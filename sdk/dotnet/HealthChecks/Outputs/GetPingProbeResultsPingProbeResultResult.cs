// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.HealthChecks.Outputs
{

    [OutputType]
    public sealed class GetPingProbeResultsPingProbeResultResult
    {
        /// <summary>
        /// The network connection results.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPingProbeResultsPingProbeResultConnectionResult> Connections;
        /// <summary>
        /// The DNS resolution results.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPingProbeResultsPingProbeResultDnResult> Dns;
        /// <summary>
        /// The time immediately before the vantage point finishes the domain name lookup for the resource.
        /// </summary>
        public readonly double? DomainLookupEnd;
        /// <summary>
        /// The time immediately before the vantage point starts the domain name lookup for the resource.
        /// </summary>
        public readonly double? DomainLookupStart;
        /// <summary>
        /// The category of error if an error occurs executing the probe. The `errorMessage` field provides a message with the error details.
        /// * NONE - No error
        /// * DNS - DNS errors
        /// * TRANSPORT - Transport-related errors, for example a "TLS certificate expired" error.
        /// * NETWORK - Network-related errors, for example a "network unreachable" error.
        /// * SYSTEM - Internal system errors.
        /// </summary>
        public readonly string? ErrorCategory;
        /// <summary>
        /// The error information indicating why a probe execution failed.
        /// </summary>
        public readonly string? ErrorMessage;
        /// <summary>
        /// The ICMP code of the response message.  This field is not used when the protocol is set to TCP.  For more information on ICMP codes, see [Internet Control Message Protocol (ICMP) Parameters](https://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml).
        /// </summary>
        public readonly int? IcmpCode;
        /// <summary>
        /// True if the probe result is determined to be healthy based on probe type-specific criteria.  For HTTP probes, a probe result is considered healthy if the HTTP response code is greater than or equal to 200 and less than 300.
        /// </summary>
        public readonly bool? IsHealthy;
        /// <summary>
        /// True if the probe did not complete before the configured `timeoutInSeconds` value.
        /// </summary>
        public readonly bool? IsTimedOut;
        /// <summary>
        /// A value identifying this specific probe result. The key is only unique within the results of its probe configuration. The key may be reused after 90 days.
        /// </summary>
        public readonly string? Key;
        /// <summary>
        /// The latency of the probe execution, in milliseconds.
        /// </summary>
        public readonly double? LatencyInMs;
        /// <summary>
        /// The OCID of a monitor or on-demand probe.
        /// </summary>
        public readonly string? ProbeConfigurationId;
        /// <summary>
        /// The protocols for ping probes.
        /// </summary>
        public readonly string? Protocol;
        /// <summary>
        /// The date and time the probe was executed, expressed in milliseconds since the POSIX epoch. This field is defined by the PerformanceResourceTiming interface of the W3C Resource Timing specification. For more information, see [Resource Timing](https://w3c.github.io/resource-timing/#sec-resource-timing).
        /// </summary>
        public readonly double? StartTime;
        /// <summary>
        /// Filters results that match the `target`.
        /// </summary>
        public readonly string? Target;
        /// <summary>
        /// The name of the vantage point that executed the probe.
        /// </summary>
        public readonly string? VantagePointName;

        [OutputConstructor]
        private GetPingProbeResultsPingProbeResultResult(
            ImmutableArray<Outputs.GetPingProbeResultsPingProbeResultConnectionResult> connections,

            ImmutableArray<Outputs.GetPingProbeResultsPingProbeResultDnResult> dns,

            double? domainLookupEnd,

            double? domainLookupStart,

            string? errorCategory,

            string? errorMessage,

            int? icmpCode,

            bool? isHealthy,

            bool? isTimedOut,

            string? key,

            double? latencyInMs,

            string? probeConfigurationId,

            string? protocol,

            double? startTime,

            string? target,

            string? vantagePointName)
        {
            Connections = connections;
            Dns = dns;
            DomainLookupEnd = domainLookupEnd;
            DomainLookupStart = domainLookupStart;
            ErrorCategory = errorCategory;
            ErrorMessage = errorMessage;
            IcmpCode = icmpCode;
            IsHealthy = isHealthy;
            IsTimedOut = isTimedOut;
            Key = key;
            LatencyInMs = latencyInMs;
            ProbeConfigurationId = probeConfigurationId;
            Protocol = protocol;
            StartTime = startTime;
            Target = target;
            VantagePointName = vantagePointName;
        }
    }
}
