// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.HealthChecks.Outputs
{

    [OutputType]
    public sealed class GetVantagePointsHealthChecksVantagePointGeoResult
    {
        /// <summary>
        /// The ISO 3166-2 code for this location's first-level administrative division, either a US state or Canadian province. Only included for locations in the US or Canada. For a list of codes, see [Country Codes](https://www.iso.org/obp/ui/#search).
        /// </summary>
        public readonly string AdminDivCode;
        /// <summary>
        /// Common English-language name for the city.
        /// </summary>
        public readonly string CityName;
        /// <summary>
        /// The ISO 3166-1 alpha-2 country code. For a list of codes, see [Country Codes](https://www.iso.org/obp/ui/#search).
        /// </summary>
        public readonly string CountryCode;
        /// <summary>
        /// The common English-language name for the country.
        /// </summary>
        public readonly string CountryName;
        /// <summary>
        /// An opaque identifier for the geographic location of the vantage point.
        /// </summary>
        public readonly string GeoKey;
        /// <summary>
        /// Degrees north of the Equator.
        /// </summary>
        public readonly double Latitude;
        /// <summary>
        /// Degrees east of the prime meridian.
        /// </summary>
        public readonly double Longitude;

        [OutputConstructor]
        private GetVantagePointsHealthChecksVantagePointGeoResult(
            string adminDivCode,

            string cityName,

            string countryCode,

            string countryName,

            string geoKey,

            double latitude,

            double longitude)
        {
            AdminDivCode = adminDivCode;
            CityName = cityName;
            CountryCode = countryCode;
            CountryName = countryName;
            GeoKey = geoKey;
            Latitude = latitude;
            Longitude = longitude;
        }
    }
}
