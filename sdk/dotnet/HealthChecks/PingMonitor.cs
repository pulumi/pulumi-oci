// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.HealthChecks
{
    /// <summary>
    /// This resource provides the Ping Monitor resource in Oracle Cloud Infrastructure Health Checks service.
    /// 
    /// Creates a ping monitor. Vantage points will be automatically selected if not specified,
    /// and probes will be initiated from each vantage point to each of the targets at the frequency
    /// specified by `intervalInSeconds`.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testPingMonitor = new Oci.HealthChecks.PingMonitor("testPingMonitor", new()
    ///     {
    ///         CompartmentId = @var.Compartment_id,
    ///         DisplayName = @var.Ping_monitor_display_name,
    ///         IntervalInSeconds = @var.Ping_monitor_interval_in_seconds,
    ///         Protocol = @var.Ping_monitor_protocol,
    ///         Targets = @var.Ping_monitor_targets,
    ///         DefinedTags = 
    ///         {
    ///             { "Operations.CostCenter", "42" },
    ///         },
    ///         FreeformTags = 
    ///         {
    ///             { "Department", "Finance" },
    ///         },
    ///         IsEnabled = @var.Ping_monitor_is_enabled,
    ///         Port = @var.Ping_monitor_port,
    ///         TimeoutInSeconds = @var.Ping_monitor_timeout_in_seconds,
    ///         VantagePointNames = @var.Ping_monitor_vantage_point_names,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// PingMonitors can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:HealthChecks/pingMonitor:PingMonitor test_ping_monitor "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:HealthChecks/pingMonitor:PingMonitor")]
    public partial class PingMonitor : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) The OCID of the compartment.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, object>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A user-friendly and mutable name suitable for display in a user interface.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, object>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// The region where updates must be made and where results must be fetched from.
        /// </summary>
        [Output("homeRegion")]
        public Output<string> HomeRegion { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The monitor interval in seconds. Valid values: 10, 30, and 60.
        /// </summary>
        [Output("intervalInSeconds")]
        public Output<int> IntervalInSeconds { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Enables or disables the monitor. Set to 'true' to launch monitoring.
        /// </summary>
        [Output("isEnabled")]
        public Output<bool> IsEnabled { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The port on which to probe endpoints. If unspecified, probes will use the default port of their protocol.
        /// </summary>
        [Output("port")]
        public Output<int> Port { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The protocols for ping probes.
        /// </summary>
        [Output("protocol")]
        public Output<string> Protocol { get; private set; } = null!;

        /// <summary>
        /// A URL for fetching the probe results.
        /// </summary>
        [Output("resultsUrl")]
        public Output<string> ResultsUrl { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A list of targets (hostnames or IP addresses) of the probe.
        /// </summary>
        [Output("targets")]
        public Output<ImmutableArray<string>> Targets { get; private set; } = null!;

        /// <summary>
        /// The RFC 3339-formatted creation date and time of the probe.
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The probe timeout in seconds. Valid values: 10, 20, 30, and 60. The probe timeout must be less than or equal to `intervalInSeconds` for monitors.
        /// </summary>
        [Output("timeoutInSeconds")]
        public Output<int> TimeoutInSeconds { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A list of names of vantage points from which to execute the probe.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("vantagePointNames")]
        public Output<ImmutableArray<string>> VantagePointNames { get; private set; } = null!;


        /// <summary>
        /// Create a PingMonitor resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PingMonitor(string name, PingMonitorArgs args, CustomResourceOptions? options = null)
            : base("oci:HealthChecks/pingMonitor:PingMonitor", name, args ?? new PingMonitorArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PingMonitor(string name, Input<string> id, PingMonitorState? state = null, CustomResourceOptions? options = null)
            : base("oci:HealthChecks/pingMonitor:PingMonitor", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PingMonitor resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PingMonitor Get(string name, Input<string> id, PingMonitorState? state = null, CustomResourceOptions? options = null)
        {
            return new PingMonitor(name, id, state, options);
        }
    }

    public sealed class PingMonitorArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The OCID of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) A user-friendly and mutable name suitable for display in a user interface.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) The monitor interval in seconds. Valid values: 10, 30, and 60.
        /// </summary>
        [Input("intervalInSeconds", required: true)]
        public Input<int> IntervalInSeconds { get; set; } = null!;

        /// <summary>
        /// (Updatable) Enables or disables the monitor. Set to 'true' to launch monitoring.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// (Updatable) The port on which to probe endpoints. If unspecified, probes will use the default port of their protocol.
        /// </summary>
        [Input("port")]
        public Input<int>? Port { get; set; }

        /// <summary>
        /// (Updatable) The protocols for ping probes.
        /// </summary>
        [Input("protocol", required: true)]
        public Input<string> Protocol { get; set; } = null!;

        [Input("targets", required: true)]
        private InputList<string>? _targets;

        /// <summary>
        /// (Updatable) A list of targets (hostnames or IP addresses) of the probe.
        /// </summary>
        public InputList<string> Targets
        {
            get => _targets ?? (_targets = new InputList<string>());
            set => _targets = value;
        }

        /// <summary>
        /// (Updatable) The probe timeout in seconds. Valid values: 10, 20, 30, and 60. The probe timeout must be less than or equal to `intervalInSeconds` for monitors.
        /// </summary>
        [Input("timeoutInSeconds")]
        public Input<int>? TimeoutInSeconds { get; set; }

        [Input("vantagePointNames")]
        private InputList<string>? _vantagePointNames;

        /// <summary>
        /// (Updatable) A list of names of vantage points from which to execute the probe.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        public InputList<string> VantagePointNames
        {
            get => _vantagePointNames ?? (_vantagePointNames = new InputList<string>());
            set => _vantagePointNames = value;
        }

        public PingMonitorArgs()
        {
        }
        public static new PingMonitorArgs Empty => new PingMonitorArgs();
    }

    public sealed class PingMonitorState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The OCID of the compartment.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) A user-friendly and mutable name suitable for display in a user interface.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// The region where updates must be made and where results must be fetched from.
        /// </summary>
        [Input("homeRegion")]
        public Input<string>? HomeRegion { get; set; }

        /// <summary>
        /// (Updatable) The monitor interval in seconds. Valid values: 10, 30, and 60.
        /// </summary>
        [Input("intervalInSeconds")]
        public Input<int>? IntervalInSeconds { get; set; }

        /// <summary>
        /// (Updatable) Enables or disables the monitor. Set to 'true' to launch monitoring.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// (Updatable) The port on which to probe endpoints. If unspecified, probes will use the default port of their protocol.
        /// </summary>
        [Input("port")]
        public Input<int>? Port { get; set; }

        /// <summary>
        /// (Updatable) The protocols for ping probes.
        /// </summary>
        [Input("protocol")]
        public Input<string>? Protocol { get; set; }

        /// <summary>
        /// A URL for fetching the probe results.
        /// </summary>
        [Input("resultsUrl")]
        public Input<string>? ResultsUrl { get; set; }

        [Input("targets")]
        private InputList<string>? _targets;

        /// <summary>
        /// (Updatable) A list of targets (hostnames or IP addresses) of the probe.
        /// </summary>
        public InputList<string> Targets
        {
            get => _targets ?? (_targets = new InputList<string>());
            set => _targets = value;
        }

        /// <summary>
        /// The RFC 3339-formatted creation date and time of the probe.
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// (Updatable) The probe timeout in seconds. Valid values: 10, 20, 30, and 60. The probe timeout must be less than or equal to `intervalInSeconds` for monitors.
        /// </summary>
        [Input("timeoutInSeconds")]
        public Input<int>? TimeoutInSeconds { get; set; }

        [Input("vantagePointNames")]
        private InputList<string>? _vantagePointNames;

        /// <summary>
        /// (Updatable) A list of names of vantage points from which to execute the probe.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        public InputList<string> VantagePointNames
        {
            get => _vantagePointNames ?? (_vantagePointNames = new InputList<string>());
            set => _vantagePointNames = value;
        }

        public PingMonitorState()
        {
        }
        public static new PingMonitorState Empty => new PingMonitorState();
    }
}
