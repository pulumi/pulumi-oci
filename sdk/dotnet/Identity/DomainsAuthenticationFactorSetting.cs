// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Identity
{
    /// <summary>
    /// This resource provides the Authentication Factor Setting resource in Oracle Cloud Infrastructure Identity Domains service.
    /// 
    /// Replace Authentication Factor Settings
    /// 
    /// ## Import
    /// 
    /// AuthenticationFactorSettings can be imported using the `id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import oci:Identity/domainsAuthenticationFactorSetting:DomainsAuthenticationFactorSetting test_authentication_factor_setting "idcsEndpoint/{idcsEndpoint}/authenticationFactorSettings/{authenticationFactorSettingId}"
    /// ```
    /// </summary>
    [OciResourceType("oci:Identity/domainsAuthenticationFactorSetting:DomainsAuthenticationFactorSetting")]
    public partial class DomainsAuthenticationFactorSetting : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
        /// </summary>
        [Output("attributeSets")]
        public Output<ImmutableArray<string>> AttributeSets { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
        /// </summary>
        [Output("attributes")]
        public Output<string?> Attributes { get; private set; } = null!;

        /// <summary>
        /// ID of the resource
        /// </summary>
        [Output("authenticationFactorSettingId")]
        public Output<string> AuthenticationFactorSettingId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
        /// </summary>
        [Output("authorization")]
        public Output<string?> Authorization { get; private set; } = null!;

        /// <summary>
        /// (Updatable) If true, indicates that email will not be enrolled as a MFA factor automatically if it a account recovery factor
        /// </summary>
        [Output("autoEnrollEmailFactorDisabled")]
        public Output<bool> AutoEnrollEmailFactorDisabled { get; private set; } = null!;

        /// <summary>
        /// (Updatable) If true, indicates that Bypass Code is enabled for authentication
        /// </summary>
        [Output("bypassCodeEnabled")]
        public Output<bool> BypassCodeEnabled { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Settings related to the bypass code, such as bypass code length, bypass code expiry, max active bypass codes, and so on
        /// </summary>
        [Output("bypassCodeSettings")]
        public Output<Outputs.DomainsAuthenticationFactorSettingBypassCodeSettings> BypassCodeSettings { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Settings related to compliance, Personal Identification Number (PIN) policy, and so on
        /// </summary>
        [Output("clientAppSettings")]
        public Output<Outputs.DomainsAuthenticationFactorSettingClientAppSettings> ClientAppSettings { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
        /// </summary>
        [Output("compartmentOcid")]
        public Output<string> CompartmentOcid { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Compliance Policy that defines actions to be taken when a condition is violated
        /// </summary>
        [Output("compliancePolicies")]
        public Output<ImmutableArray<Outputs.DomainsAuthenticationFactorSettingCompliancePolicy>> CompliancePolicies { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
        /// </summary>
        [Output("deleteInProgress")]
        public Output<bool> DeleteInProgress { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
        /// </summary>
        [Output("domainOcid")]
        public Output<string> DomainOcid { get; private set; } = null!;

        /// <summary>
        /// (Updatable) If true, indicates that the EMAIL channel is enabled for authentication
        /// </summary>
        [Output("emailEnabled")]
        public Output<bool> EmailEnabled { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Settings related to Email Factor, such as enabled email magic link factor, custom url for Email Link
        /// </summary>
        [Output("emailSettings")]
        public Output<Outputs.DomainsAuthenticationFactorSettingEmailSettings> EmailSettings { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Settings that describe the set of restrictions that the system should apply to devices and trusted endpoints of a user
        /// </summary>
        [Output("endpointRestrictions")]
        public Output<Outputs.DomainsAuthenticationFactorSettingEndpointRestrictions> EndpointRestrictions { get; private set; } = null!;

        /// <summary>
        /// (Updatable) If true, indicates that the Fido Authenticator channels are enabled for authentication
        /// </summary>
        [Output("fidoAuthenticatorEnabled")]
        public Output<bool> FidoAuthenticatorEnabled { get; private set; } = null!;

        /// <summary>
        /// (Updatable) If true, indicates that 'Show backup factor(s)' button will be hidden during authentication
        /// </summary>
        [Output("hideBackupFactorEnabled")]
        public Output<bool> HideBackupFactorEnabled { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The User or App who created the Resource
        /// </summary>
        [Output("idcsCreatedBies")]
        public Output<ImmutableArray<Outputs.DomainsAuthenticationFactorSettingIdcsCreatedBy>> IdcsCreatedBies { get; private set; } = null!;

        /// <summary>
        /// The basic endpoint for the identity domain
        /// </summary>
        [Output("idcsEndpoint")]
        public Output<string> IdcsEndpoint { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The User or App who modified the Resource
        /// </summary>
        [Output("idcsLastModifiedBies")]
        public Output<ImmutableArray<Outputs.DomainsAuthenticationFactorSettingIdcsLastModifiedBy>> IdcsLastModifiedBies { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The release number when the resource was upgraded.
        /// </summary>
        [Output("idcsLastUpgradedInRelease")]
        public Output<string> IdcsLastUpgradedInRelease { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
        /// </summary>
        [Output("idcsPreventedOperations")]
        public Output<ImmutableArray<string>> IdcsPreventedOperations { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Settings related to the use of a user's profile details from the identity store
        /// </summary>
        [Output("identityStoreSettings")]
        public Output<Outputs.DomainsAuthenticationFactorSettingIdentityStoreSettings> IdentityStoreSettings { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
        /// </summary>
        [Output("metas")]
        public Output<ImmutableArray<Outputs.DomainsAuthenticationFactorSettingMeta>> Metas { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Specifies the category of people for whom Multi-Factor Authentication is enabled. This is a readOnly attribute which reflects the value of mfaEnabledCategory attribute in SsoSettings
        /// </summary>
        [Output("mfaEnabledCategory")]
        public Output<string> MfaEnabledCategory { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Specifies if Multi-Factor Authentication enrollment is mandatory or optional for a user
        /// </summary>
        [Output("mfaEnrollmentType")]
        public Output<string> MfaEnrollmentType { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Settings related to the Mobile App Notification channel, such as pull
        /// </summary>
        [Output("notificationSettings")]
        public Output<Outputs.DomainsAuthenticationFactorSettingNotificationSettings> NotificationSettings { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
        /// </summary>
        [Output("ocid")]
        public Output<string> Ocid { get; private set; } = null!;

        /// <summary>
        /// (Updatable) If true, indicates that the phone (PHONE_CALL) channel is enabled for authentication
        /// </summary>
        [Output("phoneCallEnabled")]
        public Output<bool> PhoneCallEnabled { get; private set; } = null!;

        /// <summary>
        /// (Updatable) If true, indicates that the Mobile App Push Notification channel is enabled for authentication
        /// </summary>
        [Output("pushEnabled")]
        public Output<bool> PushEnabled { get; private set; } = null!;

        /// <summary>
        /// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
        /// </summary>
        [Output("resourceTypeSchemaVersion")]
        public Output<string?> ResourceTypeSchemaVersion { get; private set; } = null!;

        /// <summary>
        /// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
        /// </summary>
        [Output("schemas")]
        public Output<ImmutableArray<string>> Schemas { get; private set; } = null!;

        /// <summary>
        /// (Updatable) If true, indicates that Security Questions are enabled for authentication
        /// </summary>
        [Output("securityQuestionsEnabled")]
        public Output<bool> SecurityQuestionsEnabled { get; private set; } = null!;

        /// <summary>
        /// (Updatable) If true, indicates that the Short Message Service (SMS) channel is enabled for authentication
        /// </summary>
        [Output("smsEnabled")]
        public Output<bool> SmsEnabled { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A list of tags on this resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.DomainsAuthenticationFactorSettingTag>> Tags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
        /// </summary>
        [Output("tenancyOcid")]
        public Output<string> TenancyOcid { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Settings related to third-party factor
        /// </summary>
        [Output("thirdPartyFactor")]
        public Output<Outputs.DomainsAuthenticationFactorSettingThirdPartyFactor> ThirdPartyFactor { get; private set; } = null!;

        /// <summary>
        /// (Updatable) If true, indicates that the Mobile App One Time Passcode channel is enabled for authentication
        /// </summary>
        [Output("totpEnabled")]
        public Output<bool> TotpEnabled { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Settings related to Time-Based One-Time Passcodes (TOTP), such as hashing algo, totp time step, passcode length, and so on
        /// </summary>
        [Output("totpSettings")]
        public Output<Outputs.DomainsAuthenticationFactorSettingTotpSettings> TotpSettings { get; private set; } = null!;

        /// <summary>
        /// (Updatable) This extension defines attributes used to manage Multi-Factor Authentication settings of fido authentication
        /// </summary>
        [Output("urnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings")]
        public Output<Outputs.DomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings> UrnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings { get; private set; } = null!;

        /// <summary>
        /// (Updatable) This extension defines attributes used to manage Multi-Factor Authentication settings of third party provider
        /// </summary>
        [Output("urnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings")]
        public Output<Outputs.DomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings> UrnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Factors for which enrollment should be blocked for End User
        /// </summary>
        [Output("userEnrollmentDisabledFactors")]
        public Output<ImmutableArray<string>> UserEnrollmentDisabledFactors { get; private set; } = null!;

        /// <summary>
        /// (Updatable) If true, indicates that the Yubico OTP is enabled for authentication
        /// </summary>
        [Output("yubicoOtpEnabled")]
        public Output<bool> YubicoOtpEnabled { get; private set; } = null!;


        /// <summary>
        /// Create a DomainsAuthenticationFactorSetting resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DomainsAuthenticationFactorSetting(string name, DomainsAuthenticationFactorSettingArgs args, CustomResourceOptions? options = null)
            : base("oci:Identity/domainsAuthenticationFactorSetting:DomainsAuthenticationFactorSetting", name, args ?? new DomainsAuthenticationFactorSettingArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DomainsAuthenticationFactorSetting(string name, Input<string> id, DomainsAuthenticationFactorSettingState? state = null, CustomResourceOptions? options = null)
            : base("oci:Identity/domainsAuthenticationFactorSetting:DomainsAuthenticationFactorSetting", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DomainsAuthenticationFactorSetting resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DomainsAuthenticationFactorSetting Get(string name, Input<string> id, DomainsAuthenticationFactorSettingState? state = null, CustomResourceOptions? options = null)
        {
            return new DomainsAuthenticationFactorSetting(name, id, state, options);
        }
    }

    public sealed class DomainsAuthenticationFactorSettingArgs : global::Pulumi.ResourceArgs
    {
        [Input("attributeSets")]
        private InputList<string>? _attributeSets;

        /// <summary>
        /// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
        /// </summary>
        public InputList<string> AttributeSets
        {
            get => _attributeSets ?? (_attributeSets = new InputList<string>());
            set => _attributeSets = value;
        }

        /// <summary>
        /// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
        /// </summary>
        [Input("attributes")]
        public Input<string>? Attributes { get; set; }

        /// <summary>
        /// ID of the resource
        /// </summary>
        [Input("authenticationFactorSettingId", required: true)]
        public Input<string> AuthenticationFactorSettingId { get; set; } = null!;

        /// <summary>
        /// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
        /// </summary>
        [Input("authorization")]
        public Input<string>? Authorization { get; set; }

        /// <summary>
        /// (Updatable) If true, indicates that email will not be enrolled as a MFA factor automatically if it a account recovery factor
        /// </summary>
        [Input("autoEnrollEmailFactorDisabled")]
        public Input<bool>? AutoEnrollEmailFactorDisabled { get; set; }

        /// <summary>
        /// (Updatable) If true, indicates that Bypass Code is enabled for authentication
        /// </summary>
        [Input("bypassCodeEnabled", required: true)]
        public Input<bool> BypassCodeEnabled { get; set; } = null!;

        /// <summary>
        /// (Updatable) Settings related to the bypass code, such as bypass code length, bypass code expiry, max active bypass codes, and so on
        /// </summary>
        [Input("bypassCodeSettings", required: true)]
        public Input<Inputs.DomainsAuthenticationFactorSettingBypassCodeSettingsArgs> BypassCodeSettings { get; set; } = null!;

        /// <summary>
        /// (Updatable) Settings related to compliance, Personal Identification Number (PIN) policy, and so on
        /// </summary>
        [Input("clientAppSettings", required: true)]
        public Input<Inputs.DomainsAuthenticationFactorSettingClientAppSettingsArgs> ClientAppSettings { get; set; } = null!;

        [Input("compliancePolicies", required: true)]
        private InputList<Inputs.DomainsAuthenticationFactorSettingCompliancePolicyArgs>? _compliancePolicies;

        /// <summary>
        /// (Updatable) Compliance Policy that defines actions to be taken when a condition is violated
        /// </summary>
        public InputList<Inputs.DomainsAuthenticationFactorSettingCompliancePolicyArgs> CompliancePolicies
        {
            get => _compliancePolicies ?? (_compliancePolicies = new InputList<Inputs.DomainsAuthenticationFactorSettingCompliancePolicyArgs>());
            set => _compliancePolicies = value;
        }

        /// <summary>
        /// (Updatable) If true, indicates that the EMAIL channel is enabled for authentication
        /// </summary>
        [Input("emailEnabled")]
        public Input<bool>? EmailEnabled { get; set; }

        /// <summary>
        /// (Updatable) Settings related to Email Factor, such as enabled email magic link factor, custom url for Email Link
        /// </summary>
        [Input("emailSettings")]
        public Input<Inputs.DomainsAuthenticationFactorSettingEmailSettingsArgs>? EmailSettings { get; set; }

        /// <summary>
        /// (Updatable) Settings that describe the set of restrictions that the system should apply to devices and trusted endpoints of a user
        /// </summary>
        [Input("endpointRestrictions", required: true)]
        public Input<Inputs.DomainsAuthenticationFactorSettingEndpointRestrictionsArgs> EndpointRestrictions { get; set; } = null!;

        /// <summary>
        /// (Updatable) If true, indicates that the Fido Authenticator channels are enabled for authentication
        /// </summary>
        [Input("fidoAuthenticatorEnabled")]
        public Input<bool>? FidoAuthenticatorEnabled { get; set; }

        /// <summary>
        /// (Updatable) If true, indicates that 'Show backup factor(s)' button will be hidden during authentication
        /// </summary>
        [Input("hideBackupFactorEnabled")]
        public Input<bool>? HideBackupFactorEnabled { get; set; }

        /// <summary>
        /// The basic endpoint for the identity domain
        /// </summary>
        [Input("idcsEndpoint", required: true)]
        public Input<string> IdcsEndpoint { get; set; } = null!;

        /// <summary>
        /// (Updatable) Settings related to the use of a user's profile details from the identity store
        /// </summary>
        [Input("identityStoreSettings")]
        public Input<Inputs.DomainsAuthenticationFactorSettingIdentityStoreSettingsArgs>? IdentityStoreSettings { get; set; }

        /// <summary>
        /// (Updatable) Specifies if Multi-Factor Authentication enrollment is mandatory or optional for a user
        /// </summary>
        [Input("mfaEnrollmentType", required: true)]
        public Input<string> MfaEnrollmentType { get; set; } = null!;

        /// <summary>
        /// (Updatable) Settings related to the Mobile App Notification channel, such as pull
        /// </summary>
        [Input("notificationSettings", required: true)]
        public Input<Inputs.DomainsAuthenticationFactorSettingNotificationSettingsArgs> NotificationSettings { get; set; } = null!;

        /// <summary>
        /// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
        /// </summary>
        [Input("ocid")]
        public Input<string>? Ocid { get; set; }

        /// <summary>
        /// (Updatable) If true, indicates that the phone (PHONE_CALL) channel is enabled for authentication
        /// </summary>
        [Input("phoneCallEnabled")]
        public Input<bool>? PhoneCallEnabled { get; set; }

        /// <summary>
        /// (Updatable) If true, indicates that the Mobile App Push Notification channel is enabled for authentication
        /// </summary>
        [Input("pushEnabled", required: true)]
        public Input<bool> PushEnabled { get; set; } = null!;

        /// <summary>
        /// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
        /// </summary>
        [Input("resourceTypeSchemaVersion")]
        public Input<string>? ResourceTypeSchemaVersion { get; set; }

        [Input("schemas", required: true)]
        private InputList<string>? _schemas;

        /// <summary>
        /// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
        /// </summary>
        public InputList<string> Schemas
        {
            get => _schemas ?? (_schemas = new InputList<string>());
            set => _schemas = value;
        }

        /// <summary>
        /// (Updatable) If true, indicates that Security Questions are enabled for authentication
        /// </summary>
        [Input("securityQuestionsEnabled", required: true)]
        public Input<bool> SecurityQuestionsEnabled { get; set; } = null!;

        /// <summary>
        /// (Updatable) If true, indicates that the Short Message Service (SMS) channel is enabled for authentication
        /// </summary>
        [Input("smsEnabled", required: true)]
        public Input<bool> SmsEnabled { get; set; } = null!;

        [Input("tags")]
        private InputList<Inputs.DomainsAuthenticationFactorSettingTagArgs>? _tags;

        /// <summary>
        /// (Updatable) A list of tags on this resource.
        /// </summary>
        public InputList<Inputs.DomainsAuthenticationFactorSettingTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.DomainsAuthenticationFactorSettingTagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// (Updatable) Settings related to third-party factor
        /// </summary>
        [Input("thirdPartyFactor")]
        public Input<Inputs.DomainsAuthenticationFactorSettingThirdPartyFactorArgs>? ThirdPartyFactor { get; set; }

        /// <summary>
        /// (Updatable) If true, indicates that the Mobile App One Time Passcode channel is enabled for authentication
        /// </summary>
        [Input("totpEnabled", required: true)]
        public Input<bool> TotpEnabled { get; set; } = null!;

        /// <summary>
        /// (Updatable) Settings related to Time-Based One-Time Passcodes (TOTP), such as hashing algo, totp time step, passcode length, and so on
        /// </summary>
        [Input("totpSettings", required: true)]
        public Input<Inputs.DomainsAuthenticationFactorSettingTotpSettingsArgs> TotpSettings { get; set; } = null!;

        /// <summary>
        /// (Updatable) This extension defines attributes used to manage Multi-Factor Authentication settings of fido authentication
        /// </summary>
        [Input("urnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings")]
        public Input<Inputs.DomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettingsArgs>? UrnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings { get; set; }

        /// <summary>
        /// (Updatable) This extension defines attributes used to manage Multi-Factor Authentication settings of third party provider
        /// </summary>
        [Input("urnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings")]
        public Input<Inputs.DomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettingsArgs>? UrnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings { get; set; }

        [Input("userEnrollmentDisabledFactors")]
        private InputList<string>? _userEnrollmentDisabledFactors;

        /// <summary>
        /// (Updatable) Factors for which enrollment should be blocked for End User
        /// </summary>
        public InputList<string> UserEnrollmentDisabledFactors
        {
            get => _userEnrollmentDisabledFactors ?? (_userEnrollmentDisabledFactors = new InputList<string>());
            set => _userEnrollmentDisabledFactors = value;
        }

        /// <summary>
        /// (Updatable) If true, indicates that the Yubico OTP is enabled for authentication
        /// </summary>
        [Input("yubicoOtpEnabled")]
        public Input<bool>? YubicoOtpEnabled { get; set; }

        public DomainsAuthenticationFactorSettingArgs()
        {
        }
        public static new DomainsAuthenticationFactorSettingArgs Empty => new DomainsAuthenticationFactorSettingArgs();
    }

    public sealed class DomainsAuthenticationFactorSettingState : global::Pulumi.ResourceArgs
    {
        [Input("attributeSets")]
        private InputList<string>? _attributeSets;

        /// <summary>
        /// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
        /// </summary>
        public InputList<string> AttributeSets
        {
            get => _attributeSets ?? (_attributeSets = new InputList<string>());
            set => _attributeSets = value;
        }

        /// <summary>
        /// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
        /// </summary>
        [Input("attributes")]
        public Input<string>? Attributes { get; set; }

        /// <summary>
        /// ID of the resource
        /// </summary>
        [Input("authenticationFactorSettingId")]
        public Input<string>? AuthenticationFactorSettingId { get; set; }

        /// <summary>
        /// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
        /// </summary>
        [Input("authorization")]
        public Input<string>? Authorization { get; set; }

        /// <summary>
        /// (Updatable) If true, indicates that email will not be enrolled as a MFA factor automatically if it a account recovery factor
        /// </summary>
        [Input("autoEnrollEmailFactorDisabled")]
        public Input<bool>? AutoEnrollEmailFactorDisabled { get; set; }

        /// <summary>
        /// (Updatable) If true, indicates that Bypass Code is enabled for authentication
        /// </summary>
        [Input("bypassCodeEnabled")]
        public Input<bool>? BypassCodeEnabled { get; set; }

        /// <summary>
        /// (Updatable) Settings related to the bypass code, such as bypass code length, bypass code expiry, max active bypass codes, and so on
        /// </summary>
        [Input("bypassCodeSettings")]
        public Input<Inputs.DomainsAuthenticationFactorSettingBypassCodeSettingsGetArgs>? BypassCodeSettings { get; set; }

        /// <summary>
        /// (Updatable) Settings related to compliance, Personal Identification Number (PIN) policy, and so on
        /// </summary>
        [Input("clientAppSettings")]
        public Input<Inputs.DomainsAuthenticationFactorSettingClientAppSettingsGetArgs>? ClientAppSettings { get; set; }

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
        /// </summary>
        [Input("compartmentOcid")]
        public Input<string>? CompartmentOcid { get; set; }

        [Input("compliancePolicies")]
        private InputList<Inputs.DomainsAuthenticationFactorSettingCompliancePolicyGetArgs>? _compliancePolicies;

        /// <summary>
        /// (Updatable) Compliance Policy that defines actions to be taken when a condition is violated
        /// </summary>
        public InputList<Inputs.DomainsAuthenticationFactorSettingCompliancePolicyGetArgs> CompliancePolicies
        {
            get => _compliancePolicies ?? (_compliancePolicies = new InputList<Inputs.DomainsAuthenticationFactorSettingCompliancePolicyGetArgs>());
            set => _compliancePolicies = value;
        }

        /// <summary>
        /// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
        /// </summary>
        [Input("deleteInProgress")]
        public Input<bool>? DeleteInProgress { get; set; }

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
        /// </summary>
        [Input("domainOcid")]
        public Input<string>? DomainOcid { get; set; }

        /// <summary>
        /// (Updatable) If true, indicates that the EMAIL channel is enabled for authentication
        /// </summary>
        [Input("emailEnabled")]
        public Input<bool>? EmailEnabled { get; set; }

        /// <summary>
        /// (Updatable) Settings related to Email Factor, such as enabled email magic link factor, custom url for Email Link
        /// </summary>
        [Input("emailSettings")]
        public Input<Inputs.DomainsAuthenticationFactorSettingEmailSettingsGetArgs>? EmailSettings { get; set; }

        /// <summary>
        /// (Updatable) Settings that describe the set of restrictions that the system should apply to devices and trusted endpoints of a user
        /// </summary>
        [Input("endpointRestrictions")]
        public Input<Inputs.DomainsAuthenticationFactorSettingEndpointRestrictionsGetArgs>? EndpointRestrictions { get; set; }

        /// <summary>
        /// (Updatable) If true, indicates that the Fido Authenticator channels are enabled for authentication
        /// </summary>
        [Input("fidoAuthenticatorEnabled")]
        public Input<bool>? FidoAuthenticatorEnabled { get; set; }

        /// <summary>
        /// (Updatable) If true, indicates that 'Show backup factor(s)' button will be hidden during authentication
        /// </summary>
        [Input("hideBackupFactorEnabled")]
        public Input<bool>? HideBackupFactorEnabled { get; set; }

        [Input("idcsCreatedBies")]
        private InputList<Inputs.DomainsAuthenticationFactorSettingIdcsCreatedByGetArgs>? _idcsCreatedBies;

        /// <summary>
        /// (Updatable) The User or App who created the Resource
        /// </summary>
        public InputList<Inputs.DomainsAuthenticationFactorSettingIdcsCreatedByGetArgs> IdcsCreatedBies
        {
            get => _idcsCreatedBies ?? (_idcsCreatedBies = new InputList<Inputs.DomainsAuthenticationFactorSettingIdcsCreatedByGetArgs>());
            set => _idcsCreatedBies = value;
        }

        /// <summary>
        /// The basic endpoint for the identity domain
        /// </summary>
        [Input("idcsEndpoint")]
        public Input<string>? IdcsEndpoint { get; set; }

        [Input("idcsLastModifiedBies")]
        private InputList<Inputs.DomainsAuthenticationFactorSettingIdcsLastModifiedByGetArgs>? _idcsLastModifiedBies;

        /// <summary>
        /// (Updatable) The User or App who modified the Resource
        /// </summary>
        public InputList<Inputs.DomainsAuthenticationFactorSettingIdcsLastModifiedByGetArgs> IdcsLastModifiedBies
        {
            get => _idcsLastModifiedBies ?? (_idcsLastModifiedBies = new InputList<Inputs.DomainsAuthenticationFactorSettingIdcsLastModifiedByGetArgs>());
            set => _idcsLastModifiedBies = value;
        }

        /// <summary>
        /// (Updatable) The release number when the resource was upgraded.
        /// </summary>
        [Input("idcsLastUpgradedInRelease")]
        public Input<string>? IdcsLastUpgradedInRelease { get; set; }

        [Input("idcsPreventedOperations")]
        private InputList<string>? _idcsPreventedOperations;

        /// <summary>
        /// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
        /// </summary>
        public InputList<string> IdcsPreventedOperations
        {
            get => _idcsPreventedOperations ?? (_idcsPreventedOperations = new InputList<string>());
            set => _idcsPreventedOperations = value;
        }

        /// <summary>
        /// (Updatable) Settings related to the use of a user's profile details from the identity store
        /// </summary>
        [Input("identityStoreSettings")]
        public Input<Inputs.DomainsAuthenticationFactorSettingIdentityStoreSettingsGetArgs>? IdentityStoreSettings { get; set; }

        [Input("metas")]
        private InputList<Inputs.DomainsAuthenticationFactorSettingMetaGetArgs>? _metas;

        /// <summary>
        /// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
        /// </summary>
        public InputList<Inputs.DomainsAuthenticationFactorSettingMetaGetArgs> Metas
        {
            get => _metas ?? (_metas = new InputList<Inputs.DomainsAuthenticationFactorSettingMetaGetArgs>());
            set => _metas = value;
        }

        /// <summary>
        /// (Updatable) Specifies the category of people for whom Multi-Factor Authentication is enabled. This is a readOnly attribute which reflects the value of mfaEnabledCategory attribute in SsoSettings
        /// </summary>
        [Input("mfaEnabledCategory")]
        public Input<string>? MfaEnabledCategory { get; set; }

        /// <summary>
        /// (Updatable) Specifies if Multi-Factor Authentication enrollment is mandatory or optional for a user
        /// </summary>
        [Input("mfaEnrollmentType")]
        public Input<string>? MfaEnrollmentType { get; set; }

        /// <summary>
        /// (Updatable) Settings related to the Mobile App Notification channel, such as pull
        /// </summary>
        [Input("notificationSettings")]
        public Input<Inputs.DomainsAuthenticationFactorSettingNotificationSettingsGetArgs>? NotificationSettings { get; set; }

        /// <summary>
        /// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
        /// </summary>
        [Input("ocid")]
        public Input<string>? Ocid { get; set; }

        /// <summary>
        /// (Updatable) If true, indicates that the phone (PHONE_CALL) channel is enabled for authentication
        /// </summary>
        [Input("phoneCallEnabled")]
        public Input<bool>? PhoneCallEnabled { get; set; }

        /// <summary>
        /// (Updatable) If true, indicates that the Mobile App Push Notification channel is enabled for authentication
        /// </summary>
        [Input("pushEnabled")]
        public Input<bool>? PushEnabled { get; set; }

        /// <summary>
        /// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
        /// </summary>
        [Input("resourceTypeSchemaVersion")]
        public Input<string>? ResourceTypeSchemaVersion { get; set; }

        [Input("schemas")]
        private InputList<string>? _schemas;

        /// <summary>
        /// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
        /// </summary>
        public InputList<string> Schemas
        {
            get => _schemas ?? (_schemas = new InputList<string>());
            set => _schemas = value;
        }

        /// <summary>
        /// (Updatable) If true, indicates that Security Questions are enabled for authentication
        /// </summary>
        [Input("securityQuestionsEnabled")]
        public Input<bool>? SecurityQuestionsEnabled { get; set; }

        /// <summary>
        /// (Updatable) If true, indicates that the Short Message Service (SMS) channel is enabled for authentication
        /// </summary>
        [Input("smsEnabled")]
        public Input<bool>? SmsEnabled { get; set; }

        [Input("tags")]
        private InputList<Inputs.DomainsAuthenticationFactorSettingTagGetArgs>? _tags;

        /// <summary>
        /// (Updatable) A list of tags on this resource.
        /// </summary>
        public InputList<Inputs.DomainsAuthenticationFactorSettingTagGetArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.DomainsAuthenticationFactorSettingTagGetArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
        /// </summary>
        [Input("tenancyOcid")]
        public Input<string>? TenancyOcid { get; set; }

        /// <summary>
        /// (Updatable) Settings related to third-party factor
        /// </summary>
        [Input("thirdPartyFactor")]
        public Input<Inputs.DomainsAuthenticationFactorSettingThirdPartyFactorGetArgs>? ThirdPartyFactor { get; set; }

        /// <summary>
        /// (Updatable) If true, indicates that the Mobile App One Time Passcode channel is enabled for authentication
        /// </summary>
        [Input("totpEnabled")]
        public Input<bool>? TotpEnabled { get; set; }

        /// <summary>
        /// (Updatable) Settings related to Time-Based One-Time Passcodes (TOTP), such as hashing algo, totp time step, passcode length, and so on
        /// </summary>
        [Input("totpSettings")]
        public Input<Inputs.DomainsAuthenticationFactorSettingTotpSettingsGetArgs>? TotpSettings { get; set; }

        /// <summary>
        /// (Updatable) This extension defines attributes used to manage Multi-Factor Authentication settings of fido authentication
        /// </summary>
        [Input("urnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings")]
        public Input<Inputs.DomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettingsGetArgs>? UrnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings { get; set; }

        /// <summary>
        /// (Updatable) This extension defines attributes used to manage Multi-Factor Authentication settings of third party provider
        /// </summary>
        [Input("urnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings")]
        public Input<Inputs.DomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettingsGetArgs>? UrnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings { get; set; }

        [Input("userEnrollmentDisabledFactors")]
        private InputList<string>? _userEnrollmentDisabledFactors;

        /// <summary>
        /// (Updatable) Factors for which enrollment should be blocked for End User
        /// </summary>
        public InputList<string> UserEnrollmentDisabledFactors
        {
            get => _userEnrollmentDisabledFactors ?? (_userEnrollmentDisabledFactors = new InputList<string>());
            set => _userEnrollmentDisabledFactors = value;
        }

        /// <summary>
        /// (Updatable) If true, indicates that the Yubico OTP is enabled for authentication
        /// </summary>
        [Input("yubicoOtpEnabled")]
        public Input<bool>? YubicoOtpEnabled { get; set; }

        public DomainsAuthenticationFactorSettingState()
        {
        }
        public static new DomainsAuthenticationFactorSettingState Empty => new DomainsAuthenticationFactorSettingState();
    }
}
