// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Identity
{
    /// <summary>
    /// This resource provides the Group resource in Oracle Cloud Infrastructure Identity Domains service.
    /// 
    /// Create a group.
    /// 
    /// ## Import
    /// 
    /// Groups can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:Identity/domainsGroup:DomainsGroup test_group "idcsEndpoint/{idcsEndpoint}/groups/{groupId}"
    /// ```
    /// </summary>
    [OciResourceType("oci:Identity/domainsGroup:DomainsGroup")]
    public partial class DomainsGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
        /// </summary>
        [Output("attributeSets")]
        public Output<ImmutableArray<string>> AttributeSets { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
        /// </summary>
        [Output("attributes")]
        public Output<string?> Attributes { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
        /// </summary>
        [Output("authorization")]
        public Output<string?> Authorization { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Output("compartmentOcid")]
        public Output<string> CompartmentOcid { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: boolean
        /// * uniqueness: none
        /// </summary>
        [Output("deleteInProgress")]
        public Output<bool> DeleteInProgress { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The Group display name.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsCsvAttributeName: Display Name
        /// * idcsCsvAttributeNameMappings: [[columnHeaderName:Name, deprecatedColumnHeaderName:Display Name]]
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: true
        /// * returned: always
        /// * type: string
        /// * uniqueness: global
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Output("domainOcid")]
        public Output<string> DomainOcid { get; private set; } = null!;

        /// <summary>
        /// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Output("externalId")]
        public Output<string> ExternalId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The User or App who created the Resource
        /// 
        /// **SCIM++ Properties:**
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: true
        /// * returned: default
        /// * type: complex
        /// </summary>
        [Output("idcsCreatedBies")]
        public Output<ImmutableArray<Outputs.DomainsGroupIdcsCreatedBy>> IdcsCreatedBies { get; private set; } = null!;

        /// <summary>
        /// The basic endpoint for the identity domain
        /// </summary>
        [Output("idcsEndpoint")]
        public Output<string> IdcsEndpoint { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The User or App who modified the Resource
        /// 
        /// **SCIM++ Properties:**
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: complex
        /// </summary>
        [Output("idcsLastModifiedBies")]
        public Output<ImmutableArray<Outputs.DomainsGroupIdcsLastModifiedBy>> IdcsLastModifiedBies { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The release number when the resource was upgraded.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: request
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Output("idcsLastUpgradedInRelease")]
        public Output<string> IdcsLastUpgradedInRelease { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
        /// 
        /// **SCIM++ Properties:**
        /// * idcsSearchable: false
        /// * multiValued: true
        /// * mutability: readOnly
        /// * required: false
        /// * returned: request
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Output("idcsPreventedOperations")]
        public Output<ImmutableArray<string>> IdcsPreventedOperations { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The group members. &lt;b&gt;Important:&lt;/b&gt; When requesting group members, a maximum of 10,000 members can be returned in a single request. If the response contains more than 10,000 members, the request will fail. Use 'startIndex' and 'count' to return members in pages instead of in a single response, for example: #attributes=members[startIndex=1%26count=10]. This REST API is SCIM compliant.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsCompositeKey: [value]
        /// * idcsCsvAttributeNameMappings: [[columnHeaderName:User Members, mapsTo:members[User].value, multiValueDelimiter:;]]
        /// * idcsSearchable: true
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: false
        /// * returned: request
        /// * idcsPaginateResponse: true
        /// * type: complex
        /// * uniqueness: none
        /// </summary>
        [Output("members")]
        public Output<ImmutableArray<Outputs.DomainsGroupMember>> Members { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
        /// * type: complex
        /// </summary>
        [Output("metas")]
        public Output<ImmutableArray<Outputs.DomainsGroupMeta>> Metas { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A human readable name for the group as defined by the Service Consumer.
        /// 
        /// **Added In:** 2011192329
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsCsvAttributeName: Non-Unique Display Name
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: always
        /// * type: string
        /// </summary>
        [Output("nonUniqueDisplayName")]
        public Output<string> NonUniqueDisplayName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: true
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: immutable
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: global
        /// </summary>
        [Output("ocid")]
        public Output<string> Ocid { get; private set; } = null!;

        /// <summary>
        /// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
        /// </summary>
        [Output("resourceTypeSchemaVersion")]
        public Output<string?> ResourceTypeSchemaVersion { get; private set; } = null!;

        /// <summary>
        /// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: true
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Output("schemas")]
        public Output<ImmutableArray<string>> Schemas { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A list of tags on this resource.
        /// 
        /// **SCIM++ Properties:**
        /// * idcsCompositeKey: [key, value]
        /// * idcsSearchable: true
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: false
        /// * returned: request
        /// * type: complex
        /// * uniqueness: none
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.DomainsGroupTag>> Tags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Output("tenancyOcid")]
        public Output<string> TenancyOcid { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure Tags.
        /// </summary>
        [Output("urnietfparamsscimschemasoracleidcsextensionOciTags")]
        public Output<Outputs.DomainsGroupUrnietfparamsscimschemasoracleidcsextensionOciTags> UrnietfparamsscimschemasoracleidcsextensionOciTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Schema for Database Service  Resource
        /// </summary>
        [Output("urnietfparamsscimschemasoracleidcsextensiondbcsGroups")]
        public Output<ImmutableArray<Outputs.DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroup>> UrnietfparamsscimschemasoracleidcsextensiondbcsGroups { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Dynamic Group
        /// </summary>
        [Output("urnietfparamsscimschemasoracleidcsextensiondynamicGroup")]
        public Output<Outputs.DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondynamicGroup> UrnietfparamsscimschemasoracleidcsextensiondynamicGroup { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Oracle Identity Cloud Service Group
        /// </summary>
        [Output("urnietfparamsscimschemasoracleidcsextensiongroupGroup")]
        public Output<Outputs.DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroup> UrnietfparamsscimschemasoracleidcsextensiongroupGroup { get; private set; } = null!;

        /// <summary>
        /// (Updatable) POSIX Group extension
        /// </summary>
        [Output("urnietfparamsscimschemasoracleidcsextensionposixGroup")]
        public Output<Outputs.DomainsGroupUrnietfparamsscimschemasoracleidcsextensionposixGroup> UrnietfparamsscimschemasoracleidcsextensionposixGroup { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Requestable Group
        /// </summary>
        [Output("urnietfparamsscimschemasoracleidcsextensionrequestableGroup")]
        public Output<Outputs.DomainsGroupUrnietfparamsscimschemasoracleidcsextensionrequestableGroup> UrnietfparamsscimschemasoracleidcsextensionrequestableGroup { get; private set; } = null!;


        /// <summary>
        /// Create a DomainsGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DomainsGroup(string name, DomainsGroupArgs args, CustomResourceOptions? options = null)
            : base("oci:Identity/domainsGroup:DomainsGroup", name, args ?? new DomainsGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DomainsGroup(string name, Input<string> id, DomainsGroupState? state = null, CustomResourceOptions? options = null)
            : base("oci:Identity/domainsGroup:DomainsGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DomainsGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DomainsGroup Get(string name, Input<string> id, DomainsGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new DomainsGroup(name, id, state, options);
        }
    }

    public sealed class DomainsGroupArgs : global::Pulumi.ResourceArgs
    {
        [Input("attributeSets")]
        private InputList<string>? _attributeSets;

        /// <summary>
        /// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
        /// </summary>
        public InputList<string> AttributeSets
        {
            get => _attributeSets ?? (_attributeSets = new InputList<string>());
            set => _attributeSets = value;
        }

        /// <summary>
        /// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
        /// </summary>
        [Input("attributes")]
        public Input<string>? Attributes { get; set; }

        /// <summary>
        /// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
        /// </summary>
        [Input("authorization")]
        public Input<string>? Authorization { get; set; }

        /// <summary>
        /// (Updatable) The Group display name.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsCsvAttributeName: Display Name
        /// * idcsCsvAttributeNameMappings: [[columnHeaderName:Name, deprecatedColumnHeaderName:Display Name]]
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: true
        /// * returned: always
        /// * type: string
        /// * uniqueness: global
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Input("externalId")]
        public Input<string>? ExternalId { get; set; }

        /// <summary>
        /// The basic endpoint for the identity domain
        /// </summary>
        [Input("idcsEndpoint", required: true)]
        public Input<string> IdcsEndpoint { get; set; } = null!;

        [Input("members")]
        private InputList<Inputs.DomainsGroupMemberArgs>? _members;

        /// <summary>
        /// (Updatable) The group members. &lt;b&gt;Important:&lt;/b&gt; When requesting group members, a maximum of 10,000 members can be returned in a single request. If the response contains more than 10,000 members, the request will fail. Use 'startIndex' and 'count' to return members in pages instead of in a single response, for example: #attributes=members[startIndex=1%26count=10]. This REST API is SCIM compliant.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsCompositeKey: [value]
        /// * idcsCsvAttributeNameMappings: [[columnHeaderName:User Members, mapsTo:members[User].value, multiValueDelimiter:;]]
        /// * idcsSearchable: true
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: false
        /// * returned: request
        /// * idcsPaginateResponse: true
        /// * type: complex
        /// * uniqueness: none
        /// </summary>
        public InputList<Inputs.DomainsGroupMemberArgs> Members
        {
            get => _members ?? (_members = new InputList<Inputs.DomainsGroupMemberArgs>());
            set => _members = value;
        }

        /// <summary>
        /// (Updatable) A human readable name for the group as defined by the Service Consumer.
        /// 
        /// **Added In:** 2011192329
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsCsvAttributeName: Non-Unique Display Name
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: always
        /// * type: string
        /// </summary>
        [Input("nonUniqueDisplayName")]
        public Input<string>? NonUniqueDisplayName { get; set; }

        /// <summary>
        /// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: true
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: immutable
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: global
        /// </summary>
        [Input("ocid")]
        public Input<string>? Ocid { get; set; }

        /// <summary>
        /// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
        /// </summary>
        [Input("resourceTypeSchemaVersion")]
        public Input<string>? ResourceTypeSchemaVersion { get; set; }

        [Input("schemas", required: true)]
        private InputList<string>? _schemas;

        /// <summary>
        /// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: true
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        public InputList<string> Schemas
        {
            get => _schemas ?? (_schemas = new InputList<string>());
            set => _schemas = value;
        }

        [Input("tags")]
        private InputList<Inputs.DomainsGroupTagArgs>? _tags;

        /// <summary>
        /// (Updatable) A list of tags on this resource.
        /// 
        /// **SCIM++ Properties:**
        /// * idcsCompositeKey: [key, value]
        /// * idcsSearchable: true
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: false
        /// * returned: request
        /// * type: complex
        /// * uniqueness: none
        /// </summary>
        public InputList<Inputs.DomainsGroupTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.DomainsGroupTagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure Tags.
        /// </summary>
        [Input("urnietfparamsscimschemasoracleidcsextensionOciTags")]
        public Input<Inputs.DomainsGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsArgs>? UrnietfparamsscimschemasoracleidcsextensionOciTags { get; set; }

        /// <summary>
        /// (Updatable) Dynamic Group
        /// </summary>
        [Input("urnietfparamsscimschemasoracleidcsextensiondynamicGroup")]
        public Input<Inputs.DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondynamicGroupArgs>? UrnietfparamsscimschemasoracleidcsextensiondynamicGroup { get; set; }

        /// <summary>
        /// (Updatable) Oracle Identity Cloud Service Group
        /// </summary>
        [Input("urnietfparamsscimschemasoracleidcsextensiongroupGroup")]
        public Input<Inputs.DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupArgs>? UrnietfparamsscimschemasoracleidcsextensiongroupGroup { get; set; }

        /// <summary>
        /// (Updatable) POSIX Group extension
        /// </summary>
        [Input("urnietfparamsscimschemasoracleidcsextensionposixGroup")]
        public Input<Inputs.DomainsGroupUrnietfparamsscimschemasoracleidcsextensionposixGroupArgs>? UrnietfparamsscimschemasoracleidcsextensionposixGroup { get; set; }

        /// <summary>
        /// (Updatable) Requestable Group
        /// </summary>
        [Input("urnietfparamsscimschemasoracleidcsextensionrequestableGroup")]
        public Input<Inputs.DomainsGroupUrnietfparamsscimschemasoracleidcsextensionrequestableGroupArgs>? UrnietfparamsscimschemasoracleidcsextensionrequestableGroup { get; set; }

        public DomainsGroupArgs()
        {
        }
        public static new DomainsGroupArgs Empty => new DomainsGroupArgs();
    }

    public sealed class DomainsGroupState : global::Pulumi.ResourceArgs
    {
        [Input("attributeSets")]
        private InputList<string>? _attributeSets;

        /// <summary>
        /// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
        /// </summary>
        public InputList<string> AttributeSets
        {
            get => _attributeSets ?? (_attributeSets = new InputList<string>());
            set => _attributeSets = value;
        }

        /// <summary>
        /// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
        /// </summary>
        [Input("attributes")]
        public Input<string>? Attributes { get; set; }

        /// <summary>
        /// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
        /// </summary>
        [Input("authorization")]
        public Input<string>? Authorization { get; set; }

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Input("compartmentOcid")]
        public Input<string>? CompartmentOcid { get; set; }

        /// <summary>
        /// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: boolean
        /// * uniqueness: none
        /// </summary>
        [Input("deleteInProgress")]
        public Input<bool>? DeleteInProgress { get; set; }

        /// <summary>
        /// (Updatable) The Group display name.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsCsvAttributeName: Display Name
        /// * idcsCsvAttributeNameMappings: [[columnHeaderName:Name, deprecatedColumnHeaderName:Display Name]]
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: true
        /// * returned: always
        /// * type: string
        /// * uniqueness: global
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Input("domainOcid")]
        public Input<string>? DomainOcid { get; set; }

        /// <summary>
        /// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Input("externalId")]
        public Input<string>? ExternalId { get; set; }

        [Input("idcsCreatedBies")]
        private InputList<Inputs.DomainsGroupIdcsCreatedByGetArgs>? _idcsCreatedBies;

        /// <summary>
        /// (Updatable) The User or App who created the Resource
        /// 
        /// **SCIM++ Properties:**
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: true
        /// * returned: default
        /// * type: complex
        /// </summary>
        public InputList<Inputs.DomainsGroupIdcsCreatedByGetArgs> IdcsCreatedBies
        {
            get => _idcsCreatedBies ?? (_idcsCreatedBies = new InputList<Inputs.DomainsGroupIdcsCreatedByGetArgs>());
            set => _idcsCreatedBies = value;
        }

        /// <summary>
        /// The basic endpoint for the identity domain
        /// </summary>
        [Input("idcsEndpoint")]
        public Input<string>? IdcsEndpoint { get; set; }

        [Input("idcsLastModifiedBies")]
        private InputList<Inputs.DomainsGroupIdcsLastModifiedByGetArgs>? _idcsLastModifiedBies;

        /// <summary>
        /// (Updatable) The User or App who modified the Resource
        /// 
        /// **SCIM++ Properties:**
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: complex
        /// </summary>
        public InputList<Inputs.DomainsGroupIdcsLastModifiedByGetArgs> IdcsLastModifiedBies
        {
            get => _idcsLastModifiedBies ?? (_idcsLastModifiedBies = new InputList<Inputs.DomainsGroupIdcsLastModifiedByGetArgs>());
            set => _idcsLastModifiedBies = value;
        }

        /// <summary>
        /// (Updatable) The release number when the resource was upgraded.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: request
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Input("idcsLastUpgradedInRelease")]
        public Input<string>? IdcsLastUpgradedInRelease { get; set; }

        [Input("idcsPreventedOperations")]
        private InputList<string>? _idcsPreventedOperations;

        /// <summary>
        /// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
        /// 
        /// **SCIM++ Properties:**
        /// * idcsSearchable: false
        /// * multiValued: true
        /// * mutability: readOnly
        /// * required: false
        /// * returned: request
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        public InputList<string> IdcsPreventedOperations
        {
            get => _idcsPreventedOperations ?? (_idcsPreventedOperations = new InputList<string>());
            set => _idcsPreventedOperations = value;
        }

        [Input("members")]
        private InputList<Inputs.DomainsGroupMemberGetArgs>? _members;

        /// <summary>
        /// (Updatable) The group members. &lt;b&gt;Important:&lt;/b&gt; When requesting group members, a maximum of 10,000 members can be returned in a single request. If the response contains more than 10,000 members, the request will fail. Use 'startIndex' and 'count' to return members in pages instead of in a single response, for example: #attributes=members[startIndex=1%26count=10]. This REST API is SCIM compliant.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsCompositeKey: [value]
        /// * idcsCsvAttributeNameMappings: [[columnHeaderName:User Members, mapsTo:members[User].value, multiValueDelimiter:;]]
        /// * idcsSearchable: true
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: false
        /// * returned: request
        /// * idcsPaginateResponse: true
        /// * type: complex
        /// * uniqueness: none
        /// </summary>
        public InputList<Inputs.DomainsGroupMemberGetArgs> Members
        {
            get => _members ?? (_members = new InputList<Inputs.DomainsGroupMemberGetArgs>());
            set => _members = value;
        }

        [Input("metas")]
        private InputList<Inputs.DomainsGroupMetaGetArgs>? _metas;

        /// <summary>
        /// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
        /// * type: complex
        /// </summary>
        public InputList<Inputs.DomainsGroupMetaGetArgs> Metas
        {
            get => _metas ?? (_metas = new InputList<Inputs.DomainsGroupMetaGetArgs>());
            set => _metas = value;
        }

        /// <summary>
        /// (Updatable) A human readable name for the group as defined by the Service Consumer.
        /// 
        /// **Added In:** 2011192329
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsCsvAttributeName: Non-Unique Display Name
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: always
        /// * type: string
        /// </summary>
        [Input("nonUniqueDisplayName")]
        public Input<string>? NonUniqueDisplayName { get; set; }

        /// <summary>
        /// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: true
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: immutable
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: global
        /// </summary>
        [Input("ocid")]
        public Input<string>? Ocid { get; set; }

        /// <summary>
        /// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
        /// </summary>
        [Input("resourceTypeSchemaVersion")]
        public Input<string>? ResourceTypeSchemaVersion { get; set; }

        [Input("schemas")]
        private InputList<string>? _schemas;

        /// <summary>
        /// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: true
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        public InputList<string> Schemas
        {
            get => _schemas ?? (_schemas = new InputList<string>());
            set => _schemas = value;
        }

        [Input("tags")]
        private InputList<Inputs.DomainsGroupTagGetArgs>? _tags;

        /// <summary>
        /// (Updatable) A list of tags on this resource.
        /// 
        /// **SCIM++ Properties:**
        /// * idcsCompositeKey: [key, value]
        /// * idcsSearchable: true
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: false
        /// * returned: request
        /// * type: complex
        /// * uniqueness: none
        /// </summary>
        public InputList<Inputs.DomainsGroupTagGetArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.DomainsGroupTagGetArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Input("tenancyOcid")]
        public Input<string>? TenancyOcid { get; set; }

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure Tags.
        /// </summary>
        [Input("urnietfparamsscimschemasoracleidcsextensionOciTags")]
        public Input<Inputs.DomainsGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsGetArgs>? UrnietfparamsscimschemasoracleidcsextensionOciTags { get; set; }

        [Input("urnietfparamsscimschemasoracleidcsextensiondbcsGroups")]
        private InputList<Inputs.DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupGetArgs>? _urnietfparamsscimschemasoracleidcsextensiondbcsGroups;

        /// <summary>
        /// (Updatable) Schema for Database Service  Resource
        /// </summary>
        public InputList<Inputs.DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupGetArgs> UrnietfparamsscimschemasoracleidcsextensiondbcsGroups
        {
            get => _urnietfparamsscimschemasoracleidcsextensiondbcsGroups ?? (_urnietfparamsscimschemasoracleidcsextensiondbcsGroups = new InputList<Inputs.DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupGetArgs>());
            set => _urnietfparamsscimschemasoracleidcsextensiondbcsGroups = value;
        }

        /// <summary>
        /// (Updatable) Dynamic Group
        /// </summary>
        [Input("urnietfparamsscimschemasoracleidcsextensiondynamicGroup")]
        public Input<Inputs.DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondynamicGroupGetArgs>? UrnietfparamsscimschemasoracleidcsextensiondynamicGroup { get; set; }

        /// <summary>
        /// (Updatable) Oracle Identity Cloud Service Group
        /// </summary>
        [Input("urnietfparamsscimschemasoracleidcsextensiongroupGroup")]
        public Input<Inputs.DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupGetArgs>? UrnietfparamsscimschemasoracleidcsextensiongroupGroup { get; set; }

        /// <summary>
        /// (Updatable) POSIX Group extension
        /// </summary>
        [Input("urnietfparamsscimschemasoracleidcsextensionposixGroup")]
        public Input<Inputs.DomainsGroupUrnietfparamsscimschemasoracleidcsextensionposixGroupGetArgs>? UrnietfparamsscimschemasoracleidcsextensionposixGroup { get; set; }

        /// <summary>
        /// (Updatable) Requestable Group
        /// </summary>
        [Input("urnietfparamsscimschemasoracleidcsextensionrequestableGroup")]
        public Input<Inputs.DomainsGroupUrnietfparamsscimschemasoracleidcsextensionrequestableGroupGetArgs>? UrnietfparamsscimschemasoracleidcsextensionrequestableGroup { get; set; }

        public DomainsGroupState()
        {
        }
        public static new DomainsGroupState Empty => new DomainsGroupState();
    }
}
