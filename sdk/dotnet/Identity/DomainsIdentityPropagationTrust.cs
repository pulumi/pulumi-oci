// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Identity
{
    /// <summary>
    /// This resource provides the Identity Propagation Trust resource in Oracle Cloud Infrastructure Identity Domains service.
    /// 
    /// Register a new Identity Propagation Trust configuration.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testIdentityPropagationTrust = new Oci.Identity.DomainsIdentityPropagationTrust("test_identity_propagation_trust", new()
    ///     {
    ///         IdcsEndpoint = testDomain.Url,
    ///         Issuer = identityPropagationTrustIssuer,
    ///         Name = identityPropagationTrustName,
    ///         Schemas = new[]
    ///         {
    ///             "urn:ietf:params:scim:schemas:oracle:idcs:IdentityPropagationTrust",
    ///         },
    ///         Type = identityPropagationTrustType,
    ///         AccountId = "accountId",
    ///         Active = identityPropagationTrustActive,
    ///         AllowImpersonation = identityPropagationTrustAllowImpersonation,
    ///         AttributeSets = new[]
    ///         {
    ///             "all",
    ///         },
    ///         Attributes = "",
    ///         Authorization = identityPropagationTrustAuthorization,
    ///         ClientClaimName = identityPropagationTrustClientClaimName,
    ///         ClientClaimValues = new[]
    ///         {
    ///             "clientClaimValues",
    ///         },
    ///         ClockSkewSeconds = identityPropagationTrustClockSkewSeconds,
    ///         Description = identityPropagationTrustDescription,
    ///         ImpersonationServiceUsers = new[]
    ///         {
    ///             new Oci.Identity.Inputs.DomainsIdentityPropagationTrustImpersonationServiceUserArgs
    ///             {
    ///                 Rule = identityPropagationTrustImpersonationServiceUsersRule,
    ///                 Value = testIdentityPropagationTrustUser.Id,
    ///                 Ocid = identityPropagationTrustImpersonationServiceUsersOcid,
    ///             },
    ///         },
    ///         Keytab = new Oci.Identity.Inputs.DomainsIdentityPropagationTrustKeytabArgs
    ///         {
    ///             SecretOcid = identityPropagationTrustKeytabSecretOcid,
    ///             SecretVersion = identityPropagationTrustKeytabSecretVersion,
    ///         },
    ///         OauthClients = new[]
    ///         {
    ///             "oauthClients",
    ///         },
    ///         Ocid = identityPropagationTrustOcid,
    ///         PublicCertificate = identityPropagationTrustPublicCertificate,
    ///         PublicKeyEndpoint = identityPropagationTrustPublicKeyEndpoint,
    ///         ResourceTypeSchemaVersion = identityPropagationTrustResourceTypeSchemaVersion,
    ///         SubjectClaimName = identityPropagationTrustSubjectClaimName,
    ///         SubjectMappingAttribute = identityPropagationTrustSubjectMappingAttribute,
    ///         SubjectType = identityPropagationTrustSubjectType,
    ///         Tags = new[]
    ///         {
    ///             new Oci.Identity.Inputs.DomainsIdentityPropagationTrustTagArgs
    ///             {
    ///                 Key = identityPropagationTrustTagsKey,
    ///                 Value = identityPropagationTrustTagsValue,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// IdentityPropagationTrusts can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:Identity/domainsIdentityPropagationTrust:DomainsIdentityPropagationTrust test_identity_propagation_trust "idcsEndpoint/{idcsEndpoint}/identityPropagationTrusts/{identityPropagationTrustId}"
    /// ```
    /// </summary>
    [OciResourceType("oci:Identity/domainsIdentityPropagationTrust:DomainsIdentityPropagationTrust")]
    public partial class DomainsIdentityPropagationTrust : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) The Identity cloud provider service identifier, for example, the Azure Tenancy ID, AWS Account ID, or GCP Project ID.
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: false
        /// * required: false
        /// * mutability: readWrite
        /// * returned: default
        /// * caseExact: true
        /// * idcsSearchable: true
        /// * uniqueness: none
        /// </summary>
        [Output("accountId")]
        public Output<string> AccountId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) If true, specifies that this Identity Propagation Trust is in an enabled state. The default value is false.
        /// 
        /// **SCIM++ Properties:**
        /// * type: boolean
        /// * multiValued: false
        /// * required: false
        /// * mutability: readWrite
        /// * returned: default
        /// * uniqueness: none
        /// * idcsSearchable: true
        /// </summary>
        [Output("active")]
        public Output<bool> Active { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Allow customers to define whether the resulting token should contain the authenticated user as the subject or whether the token should impersonate another Application Principal in IAM.
        /// 
        /// **SCIM++ Properties:**
        /// * type: boolean
        /// * multiValued: false
        /// * required: false
        /// * mutability: readWrite
        /// * returned: default
        /// * uniqueness: none
        /// * idcsSearchable: false
        /// </summary>
        [Output("allowImpersonation")]
        public Output<bool> AllowImpersonation { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
        /// </summary>
        [Output("attributeSets")]
        public Output<ImmutableArray<string>> AttributeSets { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
        /// </summary>
        [Output("attributes")]
        public Output<string?> Attributes { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
        /// </summary>
        [Output("authorization")]
        public Output<string?> Authorization { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The claim name that identifies to whom the JWT/SAML token is issued. If AWS, then \"aud\" or \"client_id\". If Azure, then \"appid\". If GCP, then \"aud\".
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: false
        /// * required: false
        /// * mutability: readWrite
        /// * returned: default
        /// * uniqueness: none
        /// * idcsSearchable: false
        /// </summary>
        [Output("clientClaimName")]
        public Output<string> ClientClaimName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The value that corresponds to the client claim name used to identify to whom the token is issued.
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: true
        /// * required: false
        /// * mutability: readWrite
        /// * returned: default
        /// * uniqueness: none
        /// * caseExact: true
        /// * idcsSearchable: false
        /// </summary>
        [Output("clientClaimValues")]
        public Output<ImmutableArray<string>> ClientClaimValues { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The clock skew (in secs) that's allowed for the token issue and expiry time.
        /// 
        /// **Added In:** 2308181911
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: integer
        /// * uniqueness: none
        /// </summary>
        [Output("clockSkewSeconds")]
        public Output<int> ClockSkewSeconds { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Output("compartmentOcid")]
        public Output<string> CompartmentOcid { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: boolean
        /// * uniqueness: none
        /// </summary>
        [Output("deleteInProgress")]
        public Output<bool> DeleteInProgress { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The description of the Identity Propagation Trust.
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: false
        /// * required: false
        /// * mutability: readWrite
        /// * returned: default
        /// * uniqueness: none
        /// * caseExact: false
        /// * idcsSearchable: false
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Output("domainOcid")]
        public Output<string> DomainOcid { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The User or App who created the Resource
        /// 
        /// **SCIM++ Properties:**
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: true
        /// * returned: default
        /// * type: complex
        /// </summary>
        [Output("idcsCreatedBies")]
        public Output<ImmutableArray<Outputs.DomainsIdentityPropagationTrustIdcsCreatedBy>> IdcsCreatedBies { get; private set; } = null!;

        /// <summary>
        /// The basic endpoint for the identity domain
        /// </summary>
        [Output("idcsEndpoint")]
        public Output<string> IdcsEndpoint { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The User or App who modified the Resource
        /// 
        /// **SCIM++ Properties:**
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: complex
        /// </summary>
        [Output("idcsLastModifiedBies")]
        public Output<ImmutableArray<Outputs.DomainsIdentityPropagationTrustIdcsLastModifiedBy>> IdcsLastModifiedBies { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The release number when the resource was upgraded.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: request
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Output("idcsLastUpgradedInRelease")]
        public Output<string> IdcsLastUpgradedInRelease { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
        /// 
        /// **SCIM++ Properties:**
        /// * idcsSearchable: false
        /// * multiValued: true
        /// * mutability: readOnly
        /// * required: false
        /// * returned: request
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Output("idcsPreventedOperations")]
        public Output<ImmutableArray<string>> IdcsPreventedOperations { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The Impersonating Principal.
        /// 
        /// **SCIM++ Properties:**
        /// * idcsCompositeKey: [rule, value]
        /// * idcsSearchable: false
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: false
        /// * returned: request
        /// * type: complex
        /// * uniqueness: none
        /// </summary>
        [Output("impersonationServiceUsers")]
        public Output<ImmutableArray<Outputs.DomainsIdentityPropagationTrustImpersonationServiceUser>> ImpersonationServiceUsers { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The issuer claim of the Identity provider.
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: false
        /// * required: true
        /// * mutability: readWrite
        /// * returned: always
        /// * caseExact: true
        /// * idcsSearchable: true
        /// * uniqueness: server
        /// </summary>
        [Output("issuer")]
        public Output<string> Issuer { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The keytab stored in the tenancy's Vault. This is required if the identity propagation type is 'SPNEGO'.
        /// 
        /// **SCIM++ Properties:**
        /// * idcsCompositeKey: [secretOcid]
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: complex
        /// * uniqueness: none
        /// </summary>
        [Output("keytab")]
        public Output<Outputs.DomainsIdentityPropagationTrustKeytab> Keytab { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
        /// * type: complex
        /// </summary>
        [Output("metas")]
        public Output<ImmutableArray<Outputs.DomainsIdentityPropagationTrustMeta>> Metas { get; private set; } = null!;

        /// <summary>
        /// The name of the the Identity Propagation Trust.
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * caseExact: false
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * required: true
        /// * mutability: immutable
        /// * returned: default
        /// * uniqueness: none
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The value of all the authorized OAuth Clients.
        /// 
        /// **SCIM++ Properties:**
        /// * idcsSearchable: false
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Output("oauthClients")]
        public Output<ImmutableArray<string>> OauthClients { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: true
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: immutable
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: global
        /// </summary>
        [Output("ocid")]
        public Output<string> Ocid { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Store the public key if public key cert.
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: false
        /// * required: false
        /// * mutability: readWrite
        /// * returned: default
        /// * uniqueness: none
        /// * idcsSearchable: false
        /// </summary>
        [Output("publicCertificate")]
        public Output<string> PublicCertificate { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The cloud provider's public key API of SAML and OIDC providers for signature validation.
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: false
        /// * required: false
        /// * mutability: readWrite
        /// * returned: default
        /// * uniqueness: none
        /// * caseExact: false
        /// * idcsSearchable: false
        /// </summary>
        [Output("publicKeyEndpoint")]
        public Output<string> PublicKeyEndpoint { get; private set; } = null!;

        /// <summary>
        /// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
        /// </summary>
        [Output("resourceTypeSchemaVersion")]
        public Output<string?> ResourceTypeSchemaVersion { get; private set; } = null!;

        /// <summary>
        /// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: true
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Output("schemas")]
        public Output<ImmutableArray<string>> Schemas { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Used for locating the subject claim from the incoming token.
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: false
        /// * required: false
        /// * mutability: readWrite
        /// * returned: default
        /// * uniqueness: none
        /// * caseExact: true
        /// * idcsSearchable: false
        /// </summary>
        [Output("subjectClaimName")]
        public Output<string> SubjectClaimName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Subject Mapping Attribute to which the value from subject claim name value would be used for identity lookup.
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: false
        /// * idcsSearchable: false
        /// * required: false
        /// * mutability: readWrite
        /// * returned: default
        /// * uniqueness: none
        /// </summary>
        [Output("subjectMappingAttribute")]
        public Output<string> SubjectMappingAttribute { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The type of the resource against which lookup will be made in the identity domain in IAM for the incoming subject claim value.
        /// 
        /// **SCIM++ Properties:**
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Output("subjectType")]
        public Output<string> SubjectType { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A list of tags on this resource.
        /// 
        /// **SCIM++ Properties:**
        /// * idcsCompositeKey: [key, value]
        /// * idcsSearchable: true
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: false
        /// * returned: request
        /// * type: complex
        /// * uniqueness: none
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.DomainsIdentityPropagationTrustTag>> Tags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Output("tenancyOcid")]
        public Output<string> TenancyOcid { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The type of the inbound token from the Identity cloud provider.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: true
        /// * idcsSearchable: false
        /// * required: true
        /// * mutability: readWrite
        /// * returned: default
        /// * type: string
        /// * multiValued: false
        /// * uniqueness: none
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a DomainsIdentityPropagationTrust resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DomainsIdentityPropagationTrust(string name, DomainsIdentityPropagationTrustArgs args, CustomResourceOptions? options = null)
            : base("oci:Identity/domainsIdentityPropagationTrust:DomainsIdentityPropagationTrust", name, args ?? new DomainsIdentityPropagationTrustArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DomainsIdentityPropagationTrust(string name, Input<string> id, DomainsIdentityPropagationTrustState? state = null, CustomResourceOptions? options = null)
            : base("oci:Identity/domainsIdentityPropagationTrust:DomainsIdentityPropagationTrust", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DomainsIdentityPropagationTrust resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DomainsIdentityPropagationTrust Get(string name, Input<string> id, DomainsIdentityPropagationTrustState? state = null, CustomResourceOptions? options = null)
        {
            return new DomainsIdentityPropagationTrust(name, id, state, options);
        }
    }

    public sealed class DomainsIdentityPropagationTrustArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The Identity cloud provider service identifier, for example, the Azure Tenancy ID, AWS Account ID, or GCP Project ID.
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: false
        /// * required: false
        /// * mutability: readWrite
        /// * returned: default
        /// * caseExact: true
        /// * idcsSearchable: true
        /// * uniqueness: none
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// (Updatable) If true, specifies that this Identity Propagation Trust is in an enabled state. The default value is false.
        /// 
        /// **SCIM++ Properties:**
        /// * type: boolean
        /// * multiValued: false
        /// * required: false
        /// * mutability: readWrite
        /// * returned: default
        /// * uniqueness: none
        /// * idcsSearchable: true
        /// </summary>
        [Input("active")]
        public Input<bool>? Active { get; set; }

        /// <summary>
        /// (Updatable) Allow customers to define whether the resulting token should contain the authenticated user as the subject or whether the token should impersonate another Application Principal in IAM.
        /// 
        /// **SCIM++ Properties:**
        /// * type: boolean
        /// * multiValued: false
        /// * required: false
        /// * mutability: readWrite
        /// * returned: default
        /// * uniqueness: none
        /// * idcsSearchable: false
        /// </summary>
        [Input("allowImpersonation")]
        public Input<bool>? AllowImpersonation { get; set; }

        [Input("attributeSets")]
        private InputList<string>? _attributeSets;

        /// <summary>
        /// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
        /// </summary>
        public InputList<string> AttributeSets
        {
            get => _attributeSets ?? (_attributeSets = new InputList<string>());
            set => _attributeSets = value;
        }

        /// <summary>
        /// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
        /// </summary>
        [Input("attributes")]
        public Input<string>? Attributes { get; set; }

        /// <summary>
        /// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
        /// </summary>
        [Input("authorization")]
        public Input<string>? Authorization { get; set; }

        /// <summary>
        /// (Updatable) The claim name that identifies to whom the JWT/SAML token is issued. If AWS, then \"aud\" or \"client_id\". If Azure, then \"appid\". If GCP, then \"aud\".
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: false
        /// * required: false
        /// * mutability: readWrite
        /// * returned: default
        /// * uniqueness: none
        /// * idcsSearchable: false
        /// </summary>
        [Input("clientClaimName")]
        public Input<string>? ClientClaimName { get; set; }

        [Input("clientClaimValues")]
        private InputList<string>? _clientClaimValues;

        /// <summary>
        /// (Updatable) The value that corresponds to the client claim name used to identify to whom the token is issued.
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: true
        /// * required: false
        /// * mutability: readWrite
        /// * returned: default
        /// * uniqueness: none
        /// * caseExact: true
        /// * idcsSearchable: false
        /// </summary>
        public InputList<string> ClientClaimValues
        {
            get => _clientClaimValues ?? (_clientClaimValues = new InputList<string>());
            set => _clientClaimValues = value;
        }

        /// <summary>
        /// (Updatable) The clock skew (in secs) that's allowed for the token issue and expiry time.
        /// 
        /// **Added In:** 2308181911
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: integer
        /// * uniqueness: none
        /// </summary>
        [Input("clockSkewSeconds")]
        public Input<int>? ClockSkewSeconds { get; set; }

        /// <summary>
        /// (Updatable) The description of the Identity Propagation Trust.
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: false
        /// * required: false
        /// * mutability: readWrite
        /// * returned: default
        /// * uniqueness: none
        /// * caseExact: false
        /// * idcsSearchable: false
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The basic endpoint for the identity domain
        /// </summary>
        [Input("idcsEndpoint", required: true)]
        public Input<string> IdcsEndpoint { get; set; } = null!;

        [Input("impersonationServiceUsers")]
        private InputList<Inputs.DomainsIdentityPropagationTrustImpersonationServiceUserArgs>? _impersonationServiceUsers;

        /// <summary>
        /// (Updatable) The Impersonating Principal.
        /// 
        /// **SCIM++ Properties:**
        /// * idcsCompositeKey: [rule, value]
        /// * idcsSearchable: false
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: false
        /// * returned: request
        /// * type: complex
        /// * uniqueness: none
        /// </summary>
        public InputList<Inputs.DomainsIdentityPropagationTrustImpersonationServiceUserArgs> ImpersonationServiceUsers
        {
            get => _impersonationServiceUsers ?? (_impersonationServiceUsers = new InputList<Inputs.DomainsIdentityPropagationTrustImpersonationServiceUserArgs>());
            set => _impersonationServiceUsers = value;
        }

        /// <summary>
        /// (Updatable) The issuer claim of the Identity provider.
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: false
        /// * required: true
        /// * mutability: readWrite
        /// * returned: always
        /// * caseExact: true
        /// * idcsSearchable: true
        /// * uniqueness: server
        /// </summary>
        [Input("issuer", required: true)]
        public Input<string> Issuer { get; set; } = null!;

        /// <summary>
        /// (Updatable) The keytab stored in the tenancy's Vault. This is required if the identity propagation type is 'SPNEGO'.
        /// 
        /// **SCIM++ Properties:**
        /// * idcsCompositeKey: [secretOcid]
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: complex
        /// * uniqueness: none
        /// </summary>
        [Input("keytab")]
        public Input<Inputs.DomainsIdentityPropagationTrustKeytabArgs>? Keytab { get; set; }

        /// <summary>
        /// The name of the the Identity Propagation Trust.
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * caseExact: false
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * required: true
        /// * mutability: immutable
        /// * returned: default
        /// * uniqueness: none
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("oauthClients")]
        private InputList<string>? _oauthClients;

        /// <summary>
        /// (Updatable) The value of all the authorized OAuth Clients.
        /// 
        /// **SCIM++ Properties:**
        /// * idcsSearchable: false
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        public InputList<string> OauthClients
        {
            get => _oauthClients ?? (_oauthClients = new InputList<string>());
            set => _oauthClients = value;
        }

        /// <summary>
        /// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: true
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: immutable
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: global
        /// </summary>
        [Input("ocid")]
        public Input<string>? Ocid { get; set; }

        /// <summary>
        /// (Updatable) Store the public key if public key cert.
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: false
        /// * required: false
        /// * mutability: readWrite
        /// * returned: default
        /// * uniqueness: none
        /// * idcsSearchable: false
        /// </summary>
        [Input("publicCertificate")]
        public Input<string>? PublicCertificate { get; set; }

        /// <summary>
        /// (Updatable) The cloud provider's public key API of SAML and OIDC providers for signature validation.
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: false
        /// * required: false
        /// * mutability: readWrite
        /// * returned: default
        /// * uniqueness: none
        /// * caseExact: false
        /// * idcsSearchable: false
        /// </summary>
        [Input("publicKeyEndpoint")]
        public Input<string>? PublicKeyEndpoint { get; set; }

        /// <summary>
        /// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
        /// </summary>
        [Input("resourceTypeSchemaVersion")]
        public Input<string>? ResourceTypeSchemaVersion { get; set; }

        [Input("schemas", required: true)]
        private InputList<string>? _schemas;

        /// <summary>
        /// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: true
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        public InputList<string> Schemas
        {
            get => _schemas ?? (_schemas = new InputList<string>());
            set => _schemas = value;
        }

        /// <summary>
        /// (Updatable) Used for locating the subject claim from the incoming token.
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: false
        /// * required: false
        /// * mutability: readWrite
        /// * returned: default
        /// * uniqueness: none
        /// * caseExact: true
        /// * idcsSearchable: false
        /// </summary>
        [Input("subjectClaimName")]
        public Input<string>? SubjectClaimName { get; set; }

        /// <summary>
        /// (Updatable) Subject Mapping Attribute to which the value from subject claim name value would be used for identity lookup.
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: false
        /// * idcsSearchable: false
        /// * required: false
        /// * mutability: readWrite
        /// * returned: default
        /// * uniqueness: none
        /// </summary>
        [Input("subjectMappingAttribute")]
        public Input<string>? SubjectMappingAttribute { get; set; }

        /// <summary>
        /// (Updatable) The type of the resource against which lookup will be made in the identity domain in IAM for the incoming subject claim value.
        /// 
        /// **SCIM++ Properties:**
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Input("subjectType")]
        public Input<string>? SubjectType { get; set; }

        [Input("tags")]
        private InputList<Inputs.DomainsIdentityPropagationTrustTagArgs>? _tags;

        /// <summary>
        /// (Updatable) A list of tags on this resource.
        /// 
        /// **SCIM++ Properties:**
        /// * idcsCompositeKey: [key, value]
        /// * idcsSearchable: true
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: false
        /// * returned: request
        /// * type: complex
        /// * uniqueness: none
        /// </summary>
        public InputList<Inputs.DomainsIdentityPropagationTrustTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.DomainsIdentityPropagationTrustTagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// (Updatable) The type of the inbound token from the Identity cloud provider.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: true
        /// * idcsSearchable: false
        /// * required: true
        /// * mutability: readWrite
        /// * returned: default
        /// * type: string
        /// * multiValued: false
        /// * uniqueness: none
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public DomainsIdentityPropagationTrustArgs()
        {
        }
        public static new DomainsIdentityPropagationTrustArgs Empty => new DomainsIdentityPropagationTrustArgs();
    }

    public sealed class DomainsIdentityPropagationTrustState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The Identity cloud provider service identifier, for example, the Azure Tenancy ID, AWS Account ID, or GCP Project ID.
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: false
        /// * required: false
        /// * mutability: readWrite
        /// * returned: default
        /// * caseExact: true
        /// * idcsSearchable: true
        /// * uniqueness: none
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// (Updatable) If true, specifies that this Identity Propagation Trust is in an enabled state. The default value is false.
        /// 
        /// **SCIM++ Properties:**
        /// * type: boolean
        /// * multiValued: false
        /// * required: false
        /// * mutability: readWrite
        /// * returned: default
        /// * uniqueness: none
        /// * idcsSearchable: true
        /// </summary>
        [Input("active")]
        public Input<bool>? Active { get; set; }

        /// <summary>
        /// (Updatable) Allow customers to define whether the resulting token should contain the authenticated user as the subject or whether the token should impersonate another Application Principal in IAM.
        /// 
        /// **SCIM++ Properties:**
        /// * type: boolean
        /// * multiValued: false
        /// * required: false
        /// * mutability: readWrite
        /// * returned: default
        /// * uniqueness: none
        /// * idcsSearchable: false
        /// </summary>
        [Input("allowImpersonation")]
        public Input<bool>? AllowImpersonation { get; set; }

        [Input("attributeSets")]
        private InputList<string>? _attributeSets;

        /// <summary>
        /// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
        /// </summary>
        public InputList<string> AttributeSets
        {
            get => _attributeSets ?? (_attributeSets = new InputList<string>());
            set => _attributeSets = value;
        }

        /// <summary>
        /// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
        /// </summary>
        [Input("attributes")]
        public Input<string>? Attributes { get; set; }

        /// <summary>
        /// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
        /// </summary>
        [Input("authorization")]
        public Input<string>? Authorization { get; set; }

        /// <summary>
        /// (Updatable) The claim name that identifies to whom the JWT/SAML token is issued. If AWS, then \"aud\" or \"client_id\". If Azure, then \"appid\". If GCP, then \"aud\".
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: false
        /// * required: false
        /// * mutability: readWrite
        /// * returned: default
        /// * uniqueness: none
        /// * idcsSearchable: false
        /// </summary>
        [Input("clientClaimName")]
        public Input<string>? ClientClaimName { get; set; }

        [Input("clientClaimValues")]
        private InputList<string>? _clientClaimValues;

        /// <summary>
        /// (Updatable) The value that corresponds to the client claim name used to identify to whom the token is issued.
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: true
        /// * required: false
        /// * mutability: readWrite
        /// * returned: default
        /// * uniqueness: none
        /// * caseExact: true
        /// * idcsSearchable: false
        /// </summary>
        public InputList<string> ClientClaimValues
        {
            get => _clientClaimValues ?? (_clientClaimValues = new InputList<string>());
            set => _clientClaimValues = value;
        }

        /// <summary>
        /// (Updatable) The clock skew (in secs) that's allowed for the token issue and expiry time.
        /// 
        /// **Added In:** 2308181911
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: integer
        /// * uniqueness: none
        /// </summary>
        [Input("clockSkewSeconds")]
        public Input<int>? ClockSkewSeconds { get; set; }

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Input("compartmentOcid")]
        public Input<string>? CompartmentOcid { get; set; }

        /// <summary>
        /// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: boolean
        /// * uniqueness: none
        /// </summary>
        [Input("deleteInProgress")]
        public Input<bool>? DeleteInProgress { get; set; }

        /// <summary>
        /// (Updatable) The description of the Identity Propagation Trust.
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: false
        /// * required: false
        /// * mutability: readWrite
        /// * returned: default
        /// * uniqueness: none
        /// * caseExact: false
        /// * idcsSearchable: false
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Input("domainOcid")]
        public Input<string>? DomainOcid { get; set; }

        [Input("idcsCreatedBies")]
        private InputList<Inputs.DomainsIdentityPropagationTrustIdcsCreatedByGetArgs>? _idcsCreatedBies;

        /// <summary>
        /// (Updatable) The User or App who created the Resource
        /// 
        /// **SCIM++ Properties:**
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: true
        /// * returned: default
        /// * type: complex
        /// </summary>
        public InputList<Inputs.DomainsIdentityPropagationTrustIdcsCreatedByGetArgs> IdcsCreatedBies
        {
            get => _idcsCreatedBies ?? (_idcsCreatedBies = new InputList<Inputs.DomainsIdentityPropagationTrustIdcsCreatedByGetArgs>());
            set => _idcsCreatedBies = value;
        }

        /// <summary>
        /// The basic endpoint for the identity domain
        /// </summary>
        [Input("idcsEndpoint")]
        public Input<string>? IdcsEndpoint { get; set; }

        [Input("idcsLastModifiedBies")]
        private InputList<Inputs.DomainsIdentityPropagationTrustIdcsLastModifiedByGetArgs>? _idcsLastModifiedBies;

        /// <summary>
        /// (Updatable) The User or App who modified the Resource
        /// 
        /// **SCIM++ Properties:**
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: complex
        /// </summary>
        public InputList<Inputs.DomainsIdentityPropagationTrustIdcsLastModifiedByGetArgs> IdcsLastModifiedBies
        {
            get => _idcsLastModifiedBies ?? (_idcsLastModifiedBies = new InputList<Inputs.DomainsIdentityPropagationTrustIdcsLastModifiedByGetArgs>());
            set => _idcsLastModifiedBies = value;
        }

        /// <summary>
        /// (Updatable) The release number when the resource was upgraded.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: request
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Input("idcsLastUpgradedInRelease")]
        public Input<string>? IdcsLastUpgradedInRelease { get; set; }

        [Input("idcsPreventedOperations")]
        private InputList<string>? _idcsPreventedOperations;

        /// <summary>
        /// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
        /// 
        /// **SCIM++ Properties:**
        /// * idcsSearchable: false
        /// * multiValued: true
        /// * mutability: readOnly
        /// * required: false
        /// * returned: request
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        public InputList<string> IdcsPreventedOperations
        {
            get => _idcsPreventedOperations ?? (_idcsPreventedOperations = new InputList<string>());
            set => _idcsPreventedOperations = value;
        }

        [Input("impersonationServiceUsers")]
        private InputList<Inputs.DomainsIdentityPropagationTrustImpersonationServiceUserGetArgs>? _impersonationServiceUsers;

        /// <summary>
        /// (Updatable) The Impersonating Principal.
        /// 
        /// **SCIM++ Properties:**
        /// * idcsCompositeKey: [rule, value]
        /// * idcsSearchable: false
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: false
        /// * returned: request
        /// * type: complex
        /// * uniqueness: none
        /// </summary>
        public InputList<Inputs.DomainsIdentityPropagationTrustImpersonationServiceUserGetArgs> ImpersonationServiceUsers
        {
            get => _impersonationServiceUsers ?? (_impersonationServiceUsers = new InputList<Inputs.DomainsIdentityPropagationTrustImpersonationServiceUserGetArgs>());
            set => _impersonationServiceUsers = value;
        }

        /// <summary>
        /// (Updatable) The issuer claim of the Identity provider.
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: false
        /// * required: true
        /// * mutability: readWrite
        /// * returned: always
        /// * caseExact: true
        /// * idcsSearchable: true
        /// * uniqueness: server
        /// </summary>
        [Input("issuer")]
        public Input<string>? Issuer { get; set; }

        /// <summary>
        /// (Updatable) The keytab stored in the tenancy's Vault. This is required if the identity propagation type is 'SPNEGO'.
        /// 
        /// **SCIM++ Properties:**
        /// * idcsCompositeKey: [secretOcid]
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: complex
        /// * uniqueness: none
        /// </summary>
        [Input("keytab")]
        public Input<Inputs.DomainsIdentityPropagationTrustKeytabGetArgs>? Keytab { get; set; }

        [Input("metas")]
        private InputList<Inputs.DomainsIdentityPropagationTrustMetaGetArgs>? _metas;

        /// <summary>
        /// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
        /// * type: complex
        /// </summary>
        public InputList<Inputs.DomainsIdentityPropagationTrustMetaGetArgs> Metas
        {
            get => _metas ?? (_metas = new InputList<Inputs.DomainsIdentityPropagationTrustMetaGetArgs>());
            set => _metas = value;
        }

        /// <summary>
        /// The name of the the Identity Propagation Trust.
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * caseExact: false
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * required: true
        /// * mutability: immutable
        /// * returned: default
        /// * uniqueness: none
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("oauthClients")]
        private InputList<string>? _oauthClients;

        /// <summary>
        /// (Updatable) The value of all the authorized OAuth Clients.
        /// 
        /// **SCIM++ Properties:**
        /// * idcsSearchable: false
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        public InputList<string> OauthClients
        {
            get => _oauthClients ?? (_oauthClients = new InputList<string>());
            set => _oauthClients = value;
        }

        /// <summary>
        /// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: true
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: immutable
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: global
        /// </summary>
        [Input("ocid")]
        public Input<string>? Ocid { get; set; }

        /// <summary>
        /// (Updatable) Store the public key if public key cert.
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: false
        /// * required: false
        /// * mutability: readWrite
        /// * returned: default
        /// * uniqueness: none
        /// * idcsSearchable: false
        /// </summary>
        [Input("publicCertificate")]
        public Input<string>? PublicCertificate { get; set; }

        /// <summary>
        /// (Updatable) The cloud provider's public key API of SAML and OIDC providers for signature validation.
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: false
        /// * required: false
        /// * mutability: readWrite
        /// * returned: default
        /// * uniqueness: none
        /// * caseExact: false
        /// * idcsSearchable: false
        /// </summary>
        [Input("publicKeyEndpoint")]
        public Input<string>? PublicKeyEndpoint { get; set; }

        /// <summary>
        /// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
        /// </summary>
        [Input("resourceTypeSchemaVersion")]
        public Input<string>? ResourceTypeSchemaVersion { get; set; }

        [Input("schemas")]
        private InputList<string>? _schemas;

        /// <summary>
        /// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: true
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        public InputList<string> Schemas
        {
            get => _schemas ?? (_schemas = new InputList<string>());
            set => _schemas = value;
        }

        /// <summary>
        /// (Updatable) Used for locating the subject claim from the incoming token.
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: false
        /// * required: false
        /// * mutability: readWrite
        /// * returned: default
        /// * uniqueness: none
        /// * caseExact: true
        /// * idcsSearchable: false
        /// </summary>
        [Input("subjectClaimName")]
        public Input<string>? SubjectClaimName { get; set; }

        /// <summary>
        /// (Updatable) Subject Mapping Attribute to which the value from subject claim name value would be used for identity lookup.
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: false
        /// * idcsSearchable: false
        /// * required: false
        /// * mutability: readWrite
        /// * returned: default
        /// * uniqueness: none
        /// </summary>
        [Input("subjectMappingAttribute")]
        public Input<string>? SubjectMappingAttribute { get; set; }

        /// <summary>
        /// (Updatable) The type of the resource against which lookup will be made in the identity domain in IAM for the incoming subject claim value.
        /// 
        /// **SCIM++ Properties:**
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Input("subjectType")]
        public Input<string>? SubjectType { get; set; }

        [Input("tags")]
        private InputList<Inputs.DomainsIdentityPropagationTrustTagGetArgs>? _tags;

        /// <summary>
        /// (Updatable) A list of tags on this resource.
        /// 
        /// **SCIM++ Properties:**
        /// * idcsCompositeKey: [key, value]
        /// * idcsSearchable: true
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: false
        /// * returned: request
        /// * type: complex
        /// * uniqueness: none
        /// </summary>
        public InputList<Inputs.DomainsIdentityPropagationTrustTagGetArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.DomainsIdentityPropagationTrustTagGetArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Input("tenancyOcid")]
        public Input<string>? TenancyOcid { get; set; }

        /// <summary>
        /// (Updatable) The type of the inbound token from the Identity cloud provider.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: true
        /// * idcsSearchable: false
        /// * required: true
        /// * mutability: readWrite
        /// * returned: default
        /// * type: string
        /// * multiValued: false
        /// * uniqueness: none
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public DomainsIdentityPropagationTrustState()
        {
        }
        public static new DomainsIdentityPropagationTrustState Empty => new DomainsIdentityPropagationTrustState();
    }
}
