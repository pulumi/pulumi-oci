// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Identity
{
    /// <summary>
    /// This resource provides the Identity Provider resource in Oracle Cloud Infrastructure Identity Domains service.
    /// 
    /// Create an Identity Provider
    /// 
    /// ## Import
    /// 
    /// IdentityProviders can be imported using the `id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import oci:Identity/domainsIdentityProvider:DomainsIdentityProvider test_identity_provider "idcsEndpoint/{idcsEndpoint}/identityProviders/{identityProviderId}"
    /// ```
    /// </summary>
    [OciResourceType("oci:Identity/domainsIdentityProvider:DomainsIdentityProvider")]
    public partial class DomainsIdentityProvider : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) Assertion attribute name.
        /// </summary>
        [Output("assertionAttribute")]
        public Output<string> AssertionAttribute { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
        /// </summary>
        [Output("attributeSets")]
        public Output<ImmutableArray<string>> AttributeSets { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
        /// </summary>
        [Output("attributes")]
        public Output<string?> Attributes { get; private set; } = null!;

        /// <summary>
        /// (Updatable) HTTP binding to use for authentication requests.
        /// </summary>
        [Output("authnRequestBinding")]
        public Output<string> AuthnRequestBinding { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
        /// </summary>
        [Output("authorization")]
        public Output<string?> Authorization { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
        /// </summary>
        [Output("compartmentOcid")]
        public Output<string> CompartmentOcid { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Correlation policy
        /// </summary>
        [Output("correlationPolicy")]
        public Output<Outputs.DomainsIdentityProviderCorrelationPolicy> CorrelationPolicy { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
        /// </summary>
        [Output("deleteInProgress")]
        public Output<bool> DeleteInProgress { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Description
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
        /// </summary>
        [Output("domainOcid")]
        public Output<string> DomainOcid { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Set to true to indicate Partner enabled.
        /// </summary>
        [Output("enabled")]
        public Output<bool> Enabled { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Encryption certificate
        /// </summary>
        [Output("encryptionCertificate")]
        public Output<string> EncryptionCertificate { get; private set; } = null!;

        /// <summary>
        /// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
        /// </summary>
        [Output("externalId")]
        public Output<string> ExternalId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Identity Provider Icon URL.
        /// </summary>
        [Output("iconUrl")]
        public Output<string> IconUrl { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The User or App who created the Resource
        /// </summary>
        [Output("idcsCreatedBies")]
        public Output<ImmutableArray<Outputs.DomainsIdentityProviderIdcsCreatedBy>> IdcsCreatedBies { get; private set; } = null!;

        /// <summary>
        /// The basic endpoint for the identity domain
        /// </summary>
        [Output("idcsEndpoint")]
        public Output<string> IdcsEndpoint { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The User or App who modified the Resource
        /// </summary>
        [Output("idcsLastModifiedBies")]
        public Output<ImmutableArray<Outputs.DomainsIdentityProviderIdcsLastModifiedBy>> IdcsLastModifiedBies { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The release number when the resource was upgraded.
        /// </summary>
        [Output("idcsLastUpgradedInRelease")]
        public Output<string> IdcsLastUpgradedInRelease { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
        /// </summary>
        [Output("idcsPreventedOperations")]
        public Output<ImmutableArray<string>> IdcsPreventedOperations { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Identity Provider SSO URL
        /// </summary>
        [Output("idpSsoUrl")]
        public Output<string> IdpSsoUrl { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Set to true to include the signing certificate in the signature.
        /// </summary>
        [Output("includeSigningCertInSignature")]
        public Output<bool> IncludeSigningCertInSignature { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Refers to every group of which a JIT-provisioned User should be a member.  Just-in-Time user-provisioning applies this static list when jitUserProvGroupStaticListEnabled:true.
        /// </summary>
        [Output("jitUserProvAssignedGroups")]
        public Output<ImmutableArray<Outputs.DomainsIdentityProviderJitUserProvAssignedGroup>> JitUserProvAssignedGroups { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Set to true to indicate JIT User Creation is enabled
        /// </summary>
        [Output("jitUserProvAttributeUpdateEnabled")]
        public Output<bool> JitUserProvAttributeUpdateEnabled { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Assertion To User Mapping
        /// </summary>
        [Output("jitUserProvAttributes")]
        public Output<Outputs.DomainsIdentityProviderJitUserProvAttributes> JitUserProvAttributes { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Set to true to indicate JIT User Creation is enabled
        /// </summary>
        [Output("jitUserProvCreateUserEnabled")]
        public Output<bool> JitUserProvCreateUserEnabled { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Set to true to indicate JIT User Provisioning is enabled
        /// </summary>
        [Output("jitUserProvEnabled")]
        public Output<bool> JitUserProvEnabled { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Set to true to indicate JIT User Provisioning Groups should be assigned based on assertion attribute
        /// </summary>
        [Output("jitUserProvGroupAssertionAttributeEnabled")]
        public Output<bool> JitUserProvGroupAssertionAttributeEnabled { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The default value is 'Overwrite', which tells Just-In-Time user-provisioning to replace any current group-assignments for a User with those assigned by assertions and/or those assigned statically. Specify 'Merge' if you want Just-In-Time user-provisioning to combine its group-assignments with those the user already has.
        /// </summary>
        [Output("jitUserProvGroupAssignmentMethod")]
        public Output<string> JitUserProvGroupAssignmentMethod { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Property to indicate the mode of group mapping
        /// </summary>
        [Output("jitUserProvGroupMappingMode")]
        public Output<string> JitUserProvGroupMappingMode { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The list of mappings between the Identity Domain Group and the IDP group.
        /// </summary>
        [Output("jitUserProvGroupMappings")]
        public Output<ImmutableArray<Outputs.DomainsIdentityProviderJitUserProvGroupMapping>> JitUserProvGroupMappings { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Name of the assertion attribute containing the users groups
        /// </summary>
        [Output("jitUserProvGroupSamlAttributeName")]
        public Output<string> JitUserProvGroupSamlAttributeName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Set to true to indicate JIT User Provisioning Groups should be assigned from a static list
        /// </summary>
        [Output("jitUserProvGroupStaticListEnabled")]
        public Output<bool> JitUserProvGroupStaticListEnabled { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Set to true to indicate ignoring absence of group while provisioning
        /// </summary>
        [Output("jitUserProvIgnoreErrorOnAbsentGroups")]
        public Output<bool> JitUserProvIgnoreErrorOnAbsentGroups { get; private set; } = null!;

        /// <summary>
        /// (Updatable) HTTP binding to use for logout.
        /// </summary>
        [Output("logoutBinding")]
        public Output<string> LogoutBinding { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Set to true to enable logout.
        /// </summary>
        [Output("logoutEnabled")]
        public Output<bool> LogoutEnabled { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Logout request URL
        /// </summary>
        [Output("logoutRequestUrl")]
        public Output<string> LogoutRequestUrl { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Logout response URL
        /// </summary>
        [Output("logoutResponseUrl")]
        public Output<string> LogoutResponseUrl { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Metadata
        /// </summary>
        [Output("metadata")]
        public Output<string> Metadata { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
        /// </summary>
        [Output("metas")]
        public Output<ImmutableArray<Outputs.DomainsIdentityProviderMeta>> Metas { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Default authentication request name ID format.
        /// </summary>
        [Output("nameIdFormat")]
        public Output<string> NameIdFormat { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
        /// </summary>
        [Output("ocid")]
        public Output<string> Ocid { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Unique name of the trusted Identity Provider.
        /// </summary>
        [Output("partnerName")]
        public Output<string> PartnerName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Provider ID
        /// </summary>
        [Output("partnerProviderId")]
        public Output<string> PartnerProviderId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) SAML SP authentication type.
        /// </summary>
        [Output("requestedAuthenticationContexts")]
        public Output<ImmutableArray<string>> RequestedAuthenticationContexts { get; private set; } = null!;

        /// <summary>
        /// (Updatable) This SP requires requests SAML IdP to enforce re-authentication.
        /// </summary>
        [Output("requireForceAuthn")]
        public Output<bool> RequireForceAuthn { get; private set; } = null!;

        /// <summary>
        /// (Updatable) SAML SP must accept encrypted assertion only.
        /// </summary>
        [Output("requiresEncryptedAssertion")]
        public Output<bool> RequiresEncryptedAssertion { get; private set; } = null!;

        /// <summary>
        /// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
        /// </summary>
        [Output("resourceTypeSchemaVersion")]
        public Output<string?> ResourceTypeSchemaVersion { get; private set; } = null!;

        /// <summary>
        /// (Updatable) SAML SP HoK Enabled.
        /// </summary>
        [Output("samlHoKrequired")]
        public Output<bool> SamlHoKrequired { get; private set; } = null!;

        /// <summary>
        /// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
        /// </summary>
        [Output("schemas")]
        public Output<ImmutableArray<string>> Schemas { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The serviceInstanceIdentifier of the App that hosts this IdP. This value will match the opcServiceInstanceGUID of any service-instance that the IdP represents.
        /// </summary>
        [Output("serviceInstanceIdentifier")]
        public Output<string> ServiceInstanceIdentifier { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Set to true to indicate whether to show IdP in login page or not.
        /// </summary>
        [Output("shownOnLoginPage")]
        public Output<bool> ShownOnLoginPage { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Signature hash algorithm.
        /// </summary>
        [Output("signatureHashAlgorithm")]
        public Output<string> SignatureHashAlgorithm { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Signing certificate
        /// </summary>
        [Output("signingCertificate")]
        public Output<string> SigningCertificate { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Succinct ID
        /// </summary>
        [Output("succinctId")]
        public Output<string> SuccinctId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A list of tags on this resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.DomainsIdentityProviderTag>> Tags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
        /// </summary>
        [Output("tenancyOcid")]
        public Output<string> TenancyOcid { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The alternate Provider ID to be used as the Oracle Identity Cloud Service providerID (instead of the one in SamlSettings) when interacting with this IdP.
        /// </summary>
        [Output("tenantProviderId")]
        public Output<string> TenantProviderId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Identity Provider Type
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Social Identity Provider Extension Schema
        /// </summary>
        [Output("urnietfparamsscimschemasoracleidcsextensionsocialIdentityProvider")]
        public Output<Outputs.DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionsocialIdentityProvider> UrnietfparamsscimschemasoracleidcsextensionsocialIdentityProvider { get; private set; } = null!;

        /// <summary>
        /// (Updatable) X509 Identity Provider Extension Schema
        /// </summary>
        [Output("urnietfparamsscimschemasoracleidcsextensionx509identityProvider")]
        public Output<Outputs.DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionx509identityProvider> Urnietfparamsscimschemasoracleidcsextensionx509identityProvider { get; private set; } = null!;

        /// <summary>
        /// (Updatable) User mapping method.
        /// </summary>
        [Output("userMappingMethod")]
        public Output<string> UserMappingMethod { get; private set; } = null!;

        /// <summary>
        /// (Updatable) This property specifies the userstore attribute value that must match the incoming assertion attribute value or the incoming nameid attribute value in order to identify the user during SSO.&lt;br&gt;You can construct the userMappingStoreAttribute value by specifying attributes from the Oracle Identity Cloud Service Core Users schema. For examples of how to construct the userMappingStoreAttribute value, see the &lt;b&gt;Example of a Request Body&lt;/b&gt; section of the Examples tab for the &lt;a href='./op-admin-v1-identityproviders-post.html'&gt;POST&lt;/a&gt; and &lt;a href='./op-admin-v1-identityproviders-id-put.html'&gt;PUT&lt;/a&gt; methods of the /IdentityProviders endpoint.
        /// </summary>
        [Output("userMappingStoreAttribute")]
        public Output<string> UserMappingStoreAttribute { get; private set; } = null!;


        /// <summary>
        /// Create a DomainsIdentityProvider resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DomainsIdentityProvider(string name, DomainsIdentityProviderArgs args, CustomResourceOptions? options = null)
            : base("oci:Identity/domainsIdentityProvider:DomainsIdentityProvider", name, args ?? new DomainsIdentityProviderArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DomainsIdentityProvider(string name, Input<string> id, DomainsIdentityProviderState? state = null, CustomResourceOptions? options = null)
            : base("oci:Identity/domainsIdentityProvider:DomainsIdentityProvider", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DomainsIdentityProvider resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DomainsIdentityProvider Get(string name, Input<string> id, DomainsIdentityProviderState? state = null, CustomResourceOptions? options = null)
        {
            return new DomainsIdentityProvider(name, id, state, options);
        }
    }

    public sealed class DomainsIdentityProviderArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) Assertion attribute name.
        /// </summary>
        [Input("assertionAttribute")]
        public Input<string>? AssertionAttribute { get; set; }

        [Input("attributeSets")]
        private InputList<string>? _attributeSets;

        /// <summary>
        /// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
        /// </summary>
        public InputList<string> AttributeSets
        {
            get => _attributeSets ?? (_attributeSets = new InputList<string>());
            set => _attributeSets = value;
        }

        /// <summary>
        /// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
        /// </summary>
        [Input("attributes")]
        public Input<string>? Attributes { get; set; }

        /// <summary>
        /// (Updatable) HTTP binding to use for authentication requests.
        /// </summary>
        [Input("authnRequestBinding")]
        public Input<string>? AuthnRequestBinding { get; set; }

        /// <summary>
        /// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
        /// </summary>
        [Input("authorization")]
        public Input<string>? Authorization { get; set; }

        /// <summary>
        /// (Updatable) Correlation policy
        /// </summary>
        [Input("correlationPolicy")]
        public Input<Inputs.DomainsIdentityProviderCorrelationPolicyArgs>? CorrelationPolicy { get; set; }

        /// <summary>
        /// (Updatable) Description
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) Set to true to indicate Partner enabled.
        /// </summary>
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        /// <summary>
        /// (Updatable) Encryption certificate
        /// </summary>
        [Input("encryptionCertificate")]
        public Input<string>? EncryptionCertificate { get; set; }

        /// <summary>
        /// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
        /// </summary>
        [Input("externalId")]
        public Input<string>? ExternalId { get; set; }

        /// <summary>
        /// (Updatable) Identity Provider Icon URL.
        /// </summary>
        [Input("iconUrl")]
        public Input<string>? IconUrl { get; set; }

        /// <summary>
        /// The basic endpoint for the identity domain
        /// </summary>
        [Input("idcsEndpoint", required: true)]
        public Input<string> IdcsEndpoint { get; set; } = null!;

        /// <summary>
        /// (Updatable) Identity Provider SSO URL
        /// </summary>
        [Input("idpSsoUrl")]
        public Input<string>? IdpSsoUrl { get; set; }

        /// <summary>
        /// (Updatable) Set to true to include the signing certificate in the signature.
        /// </summary>
        [Input("includeSigningCertInSignature")]
        public Input<bool>? IncludeSigningCertInSignature { get; set; }

        [Input("jitUserProvAssignedGroups")]
        private InputList<Inputs.DomainsIdentityProviderJitUserProvAssignedGroupArgs>? _jitUserProvAssignedGroups;

        /// <summary>
        /// (Updatable) Refers to every group of which a JIT-provisioned User should be a member.  Just-in-Time user-provisioning applies this static list when jitUserProvGroupStaticListEnabled:true.
        /// </summary>
        public InputList<Inputs.DomainsIdentityProviderJitUserProvAssignedGroupArgs> JitUserProvAssignedGroups
        {
            get => _jitUserProvAssignedGroups ?? (_jitUserProvAssignedGroups = new InputList<Inputs.DomainsIdentityProviderJitUserProvAssignedGroupArgs>());
            set => _jitUserProvAssignedGroups = value;
        }

        /// <summary>
        /// (Updatable) Set to true to indicate JIT User Creation is enabled
        /// </summary>
        [Input("jitUserProvAttributeUpdateEnabled")]
        public Input<bool>? JitUserProvAttributeUpdateEnabled { get; set; }

        /// <summary>
        /// (Updatable) Assertion To User Mapping
        /// </summary>
        [Input("jitUserProvAttributes")]
        public Input<Inputs.DomainsIdentityProviderJitUserProvAttributesArgs>? JitUserProvAttributes { get; set; }

        /// <summary>
        /// (Updatable) Set to true to indicate JIT User Creation is enabled
        /// </summary>
        [Input("jitUserProvCreateUserEnabled")]
        public Input<bool>? JitUserProvCreateUserEnabled { get; set; }

        /// <summary>
        /// (Updatable) Set to true to indicate JIT User Provisioning is enabled
        /// </summary>
        [Input("jitUserProvEnabled")]
        public Input<bool>? JitUserProvEnabled { get; set; }

        /// <summary>
        /// (Updatable) Set to true to indicate JIT User Provisioning Groups should be assigned based on assertion attribute
        /// </summary>
        [Input("jitUserProvGroupAssertionAttributeEnabled")]
        public Input<bool>? JitUserProvGroupAssertionAttributeEnabled { get; set; }

        /// <summary>
        /// (Updatable) The default value is 'Overwrite', which tells Just-In-Time user-provisioning to replace any current group-assignments for a User with those assigned by assertions and/or those assigned statically. Specify 'Merge' if you want Just-In-Time user-provisioning to combine its group-assignments with those the user already has.
        /// </summary>
        [Input("jitUserProvGroupAssignmentMethod")]
        public Input<string>? JitUserProvGroupAssignmentMethod { get; set; }

        /// <summary>
        /// (Updatable) Property to indicate the mode of group mapping
        /// </summary>
        [Input("jitUserProvGroupMappingMode")]
        public Input<string>? JitUserProvGroupMappingMode { get; set; }

        [Input("jitUserProvGroupMappings")]
        private InputList<Inputs.DomainsIdentityProviderJitUserProvGroupMappingArgs>? _jitUserProvGroupMappings;

        /// <summary>
        /// (Updatable) The list of mappings between the Identity Domain Group and the IDP group.
        /// </summary>
        public InputList<Inputs.DomainsIdentityProviderJitUserProvGroupMappingArgs> JitUserProvGroupMappings
        {
            get => _jitUserProvGroupMappings ?? (_jitUserProvGroupMappings = new InputList<Inputs.DomainsIdentityProviderJitUserProvGroupMappingArgs>());
            set => _jitUserProvGroupMappings = value;
        }

        /// <summary>
        /// (Updatable) Name of the assertion attribute containing the users groups
        /// </summary>
        [Input("jitUserProvGroupSamlAttributeName")]
        public Input<string>? JitUserProvGroupSamlAttributeName { get; set; }

        /// <summary>
        /// (Updatable) Set to true to indicate JIT User Provisioning Groups should be assigned from a static list
        /// </summary>
        [Input("jitUserProvGroupStaticListEnabled")]
        public Input<bool>? JitUserProvGroupStaticListEnabled { get; set; }

        /// <summary>
        /// (Updatable) Set to true to indicate ignoring absence of group while provisioning
        /// </summary>
        [Input("jitUserProvIgnoreErrorOnAbsentGroups")]
        public Input<bool>? JitUserProvIgnoreErrorOnAbsentGroups { get; set; }

        /// <summary>
        /// (Updatable) HTTP binding to use for logout.
        /// </summary>
        [Input("logoutBinding")]
        public Input<string>? LogoutBinding { get; set; }

        /// <summary>
        /// (Updatable) Set to true to enable logout.
        /// </summary>
        [Input("logoutEnabled")]
        public Input<bool>? LogoutEnabled { get; set; }

        /// <summary>
        /// (Updatable) Logout request URL
        /// </summary>
        [Input("logoutRequestUrl")]
        public Input<string>? LogoutRequestUrl { get; set; }

        /// <summary>
        /// (Updatable) Logout response URL
        /// </summary>
        [Input("logoutResponseUrl")]
        public Input<string>? LogoutResponseUrl { get; set; }

        /// <summary>
        /// (Updatable) Metadata
        /// </summary>
        [Input("metadata")]
        public Input<string>? Metadata { get; set; }

        /// <summary>
        /// (Updatable) Default authentication request name ID format.
        /// </summary>
        [Input("nameIdFormat")]
        public Input<string>? NameIdFormat { get; set; }

        /// <summary>
        /// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
        /// </summary>
        [Input("ocid")]
        public Input<string>? Ocid { get; set; }

        /// <summary>
        /// (Updatable) Unique name of the trusted Identity Provider.
        /// </summary>
        [Input("partnerName", required: true)]
        public Input<string> PartnerName { get; set; } = null!;

        /// <summary>
        /// (Updatable) Provider ID
        /// </summary>
        [Input("partnerProviderId")]
        public Input<string>? PartnerProviderId { get; set; }

        [Input("requestedAuthenticationContexts")]
        private InputList<string>? _requestedAuthenticationContexts;

        /// <summary>
        /// (Updatable) SAML SP authentication type.
        /// </summary>
        public InputList<string> RequestedAuthenticationContexts
        {
            get => _requestedAuthenticationContexts ?? (_requestedAuthenticationContexts = new InputList<string>());
            set => _requestedAuthenticationContexts = value;
        }

        /// <summary>
        /// (Updatable) This SP requires requests SAML IdP to enforce re-authentication.
        /// </summary>
        [Input("requireForceAuthn")]
        public Input<bool>? RequireForceAuthn { get; set; }

        /// <summary>
        /// (Updatable) SAML SP must accept encrypted assertion only.
        /// </summary>
        [Input("requiresEncryptedAssertion")]
        public Input<bool>? RequiresEncryptedAssertion { get; set; }

        /// <summary>
        /// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
        /// </summary>
        [Input("resourceTypeSchemaVersion")]
        public Input<string>? ResourceTypeSchemaVersion { get; set; }

        /// <summary>
        /// (Updatable) SAML SP HoK Enabled.
        /// </summary>
        [Input("samlHoKrequired")]
        public Input<bool>? SamlHoKrequired { get; set; }

        [Input("schemas", required: true)]
        private InputList<string>? _schemas;

        /// <summary>
        /// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
        /// </summary>
        public InputList<string> Schemas
        {
            get => _schemas ?? (_schemas = new InputList<string>());
            set => _schemas = value;
        }

        /// <summary>
        /// (Updatable) The serviceInstanceIdentifier of the App that hosts this IdP. This value will match the opcServiceInstanceGUID of any service-instance that the IdP represents.
        /// </summary>
        [Input("serviceInstanceIdentifier")]
        public Input<string>? ServiceInstanceIdentifier { get; set; }

        /// <summary>
        /// (Updatable) Set to true to indicate whether to show IdP in login page or not.
        /// </summary>
        [Input("shownOnLoginPage")]
        public Input<bool>? ShownOnLoginPage { get; set; }

        /// <summary>
        /// (Updatable) Signature hash algorithm.
        /// </summary>
        [Input("signatureHashAlgorithm")]
        public Input<string>? SignatureHashAlgorithm { get; set; }

        /// <summary>
        /// (Updatable) Signing certificate
        /// </summary>
        [Input("signingCertificate")]
        public Input<string>? SigningCertificate { get; set; }

        /// <summary>
        /// (Updatable) Succinct ID
        /// </summary>
        [Input("succinctId")]
        public Input<string>? SuccinctId { get; set; }

        [Input("tags")]
        private InputList<Inputs.DomainsIdentityProviderTagArgs>? _tags;

        /// <summary>
        /// (Updatable) A list of tags on this resource.
        /// </summary>
        public InputList<Inputs.DomainsIdentityProviderTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.DomainsIdentityProviderTagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// (Updatable) Identity Provider Type
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// (Updatable) Social Identity Provider Extension Schema
        /// </summary>
        [Input("urnietfparamsscimschemasoracleidcsextensionsocialIdentityProvider")]
        public Input<Inputs.DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionsocialIdentityProviderArgs>? UrnietfparamsscimschemasoracleidcsextensionsocialIdentityProvider { get; set; }

        /// <summary>
        /// (Updatable) X509 Identity Provider Extension Schema
        /// </summary>
        [Input("urnietfparamsscimschemasoracleidcsextensionx509identityProvider")]
        public Input<Inputs.DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionx509identityProviderArgs>? Urnietfparamsscimschemasoracleidcsextensionx509identityProvider { get; set; }

        /// <summary>
        /// (Updatable) User mapping method.
        /// </summary>
        [Input("userMappingMethod")]
        public Input<string>? UserMappingMethod { get; set; }

        /// <summary>
        /// (Updatable) This property specifies the userstore attribute value that must match the incoming assertion attribute value or the incoming nameid attribute value in order to identify the user during SSO.&lt;br&gt;You can construct the userMappingStoreAttribute value by specifying attributes from the Oracle Identity Cloud Service Core Users schema. For examples of how to construct the userMappingStoreAttribute value, see the &lt;b&gt;Example of a Request Body&lt;/b&gt; section of the Examples tab for the &lt;a href='./op-admin-v1-identityproviders-post.html'&gt;POST&lt;/a&gt; and &lt;a href='./op-admin-v1-identityproviders-id-put.html'&gt;PUT&lt;/a&gt; methods of the /IdentityProviders endpoint.
        /// </summary>
        [Input("userMappingStoreAttribute")]
        public Input<string>? UserMappingStoreAttribute { get; set; }

        public DomainsIdentityProviderArgs()
        {
        }
        public static new DomainsIdentityProviderArgs Empty => new DomainsIdentityProviderArgs();
    }

    public sealed class DomainsIdentityProviderState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) Assertion attribute name.
        /// </summary>
        [Input("assertionAttribute")]
        public Input<string>? AssertionAttribute { get; set; }

        [Input("attributeSets")]
        private InputList<string>? _attributeSets;

        /// <summary>
        /// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
        /// </summary>
        public InputList<string> AttributeSets
        {
            get => _attributeSets ?? (_attributeSets = new InputList<string>());
            set => _attributeSets = value;
        }

        /// <summary>
        /// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
        /// </summary>
        [Input("attributes")]
        public Input<string>? Attributes { get; set; }

        /// <summary>
        /// (Updatable) HTTP binding to use for authentication requests.
        /// </summary>
        [Input("authnRequestBinding")]
        public Input<string>? AuthnRequestBinding { get; set; }

        /// <summary>
        /// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
        /// </summary>
        [Input("authorization")]
        public Input<string>? Authorization { get; set; }

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
        /// </summary>
        [Input("compartmentOcid")]
        public Input<string>? CompartmentOcid { get; set; }

        /// <summary>
        /// (Updatable) Correlation policy
        /// </summary>
        [Input("correlationPolicy")]
        public Input<Inputs.DomainsIdentityProviderCorrelationPolicyGetArgs>? CorrelationPolicy { get; set; }

        /// <summary>
        /// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
        /// </summary>
        [Input("deleteInProgress")]
        public Input<bool>? DeleteInProgress { get; set; }

        /// <summary>
        /// (Updatable) Description
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
        /// </summary>
        [Input("domainOcid")]
        public Input<string>? DomainOcid { get; set; }

        /// <summary>
        /// (Updatable) Set to true to indicate Partner enabled.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// (Updatable) Encryption certificate
        /// </summary>
        [Input("encryptionCertificate")]
        public Input<string>? EncryptionCertificate { get; set; }

        /// <summary>
        /// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
        /// </summary>
        [Input("externalId")]
        public Input<string>? ExternalId { get; set; }

        /// <summary>
        /// (Updatable) Identity Provider Icon URL.
        /// </summary>
        [Input("iconUrl")]
        public Input<string>? IconUrl { get; set; }

        [Input("idcsCreatedBies")]
        private InputList<Inputs.DomainsIdentityProviderIdcsCreatedByGetArgs>? _idcsCreatedBies;

        /// <summary>
        /// (Updatable) The User or App who created the Resource
        /// </summary>
        public InputList<Inputs.DomainsIdentityProviderIdcsCreatedByGetArgs> IdcsCreatedBies
        {
            get => _idcsCreatedBies ?? (_idcsCreatedBies = new InputList<Inputs.DomainsIdentityProviderIdcsCreatedByGetArgs>());
            set => _idcsCreatedBies = value;
        }

        /// <summary>
        /// The basic endpoint for the identity domain
        /// </summary>
        [Input("idcsEndpoint")]
        public Input<string>? IdcsEndpoint { get; set; }

        [Input("idcsLastModifiedBies")]
        private InputList<Inputs.DomainsIdentityProviderIdcsLastModifiedByGetArgs>? _idcsLastModifiedBies;

        /// <summary>
        /// (Updatable) The User or App who modified the Resource
        /// </summary>
        public InputList<Inputs.DomainsIdentityProviderIdcsLastModifiedByGetArgs> IdcsLastModifiedBies
        {
            get => _idcsLastModifiedBies ?? (_idcsLastModifiedBies = new InputList<Inputs.DomainsIdentityProviderIdcsLastModifiedByGetArgs>());
            set => _idcsLastModifiedBies = value;
        }

        /// <summary>
        /// (Updatable) The release number when the resource was upgraded.
        /// </summary>
        [Input("idcsLastUpgradedInRelease")]
        public Input<string>? IdcsLastUpgradedInRelease { get; set; }

        [Input("idcsPreventedOperations")]
        private InputList<string>? _idcsPreventedOperations;

        /// <summary>
        /// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
        /// </summary>
        public InputList<string> IdcsPreventedOperations
        {
            get => _idcsPreventedOperations ?? (_idcsPreventedOperations = new InputList<string>());
            set => _idcsPreventedOperations = value;
        }

        /// <summary>
        /// (Updatable) Identity Provider SSO URL
        /// </summary>
        [Input("idpSsoUrl")]
        public Input<string>? IdpSsoUrl { get; set; }

        /// <summary>
        /// (Updatable) Set to true to include the signing certificate in the signature.
        /// </summary>
        [Input("includeSigningCertInSignature")]
        public Input<bool>? IncludeSigningCertInSignature { get; set; }

        [Input("jitUserProvAssignedGroups")]
        private InputList<Inputs.DomainsIdentityProviderJitUserProvAssignedGroupGetArgs>? _jitUserProvAssignedGroups;

        /// <summary>
        /// (Updatable) Refers to every group of which a JIT-provisioned User should be a member.  Just-in-Time user-provisioning applies this static list when jitUserProvGroupStaticListEnabled:true.
        /// </summary>
        public InputList<Inputs.DomainsIdentityProviderJitUserProvAssignedGroupGetArgs> JitUserProvAssignedGroups
        {
            get => _jitUserProvAssignedGroups ?? (_jitUserProvAssignedGroups = new InputList<Inputs.DomainsIdentityProviderJitUserProvAssignedGroupGetArgs>());
            set => _jitUserProvAssignedGroups = value;
        }

        /// <summary>
        /// (Updatable) Set to true to indicate JIT User Creation is enabled
        /// </summary>
        [Input("jitUserProvAttributeUpdateEnabled")]
        public Input<bool>? JitUserProvAttributeUpdateEnabled { get; set; }

        /// <summary>
        /// (Updatable) Assertion To User Mapping
        /// </summary>
        [Input("jitUserProvAttributes")]
        public Input<Inputs.DomainsIdentityProviderJitUserProvAttributesGetArgs>? JitUserProvAttributes { get; set; }

        /// <summary>
        /// (Updatable) Set to true to indicate JIT User Creation is enabled
        /// </summary>
        [Input("jitUserProvCreateUserEnabled")]
        public Input<bool>? JitUserProvCreateUserEnabled { get; set; }

        /// <summary>
        /// (Updatable) Set to true to indicate JIT User Provisioning is enabled
        /// </summary>
        [Input("jitUserProvEnabled")]
        public Input<bool>? JitUserProvEnabled { get; set; }

        /// <summary>
        /// (Updatable) Set to true to indicate JIT User Provisioning Groups should be assigned based on assertion attribute
        /// </summary>
        [Input("jitUserProvGroupAssertionAttributeEnabled")]
        public Input<bool>? JitUserProvGroupAssertionAttributeEnabled { get; set; }

        /// <summary>
        /// (Updatable) The default value is 'Overwrite', which tells Just-In-Time user-provisioning to replace any current group-assignments for a User with those assigned by assertions and/or those assigned statically. Specify 'Merge' if you want Just-In-Time user-provisioning to combine its group-assignments with those the user already has.
        /// </summary>
        [Input("jitUserProvGroupAssignmentMethod")]
        public Input<string>? JitUserProvGroupAssignmentMethod { get; set; }

        /// <summary>
        /// (Updatable) Property to indicate the mode of group mapping
        /// </summary>
        [Input("jitUserProvGroupMappingMode")]
        public Input<string>? JitUserProvGroupMappingMode { get; set; }

        [Input("jitUserProvGroupMappings")]
        private InputList<Inputs.DomainsIdentityProviderJitUserProvGroupMappingGetArgs>? _jitUserProvGroupMappings;

        /// <summary>
        /// (Updatable) The list of mappings between the Identity Domain Group and the IDP group.
        /// </summary>
        public InputList<Inputs.DomainsIdentityProviderJitUserProvGroupMappingGetArgs> JitUserProvGroupMappings
        {
            get => _jitUserProvGroupMappings ?? (_jitUserProvGroupMappings = new InputList<Inputs.DomainsIdentityProviderJitUserProvGroupMappingGetArgs>());
            set => _jitUserProvGroupMappings = value;
        }

        /// <summary>
        /// (Updatable) Name of the assertion attribute containing the users groups
        /// </summary>
        [Input("jitUserProvGroupSamlAttributeName")]
        public Input<string>? JitUserProvGroupSamlAttributeName { get; set; }

        /// <summary>
        /// (Updatable) Set to true to indicate JIT User Provisioning Groups should be assigned from a static list
        /// </summary>
        [Input("jitUserProvGroupStaticListEnabled")]
        public Input<bool>? JitUserProvGroupStaticListEnabled { get; set; }

        /// <summary>
        /// (Updatable) Set to true to indicate ignoring absence of group while provisioning
        /// </summary>
        [Input("jitUserProvIgnoreErrorOnAbsentGroups")]
        public Input<bool>? JitUserProvIgnoreErrorOnAbsentGroups { get; set; }

        /// <summary>
        /// (Updatable) HTTP binding to use for logout.
        /// </summary>
        [Input("logoutBinding")]
        public Input<string>? LogoutBinding { get; set; }

        /// <summary>
        /// (Updatable) Set to true to enable logout.
        /// </summary>
        [Input("logoutEnabled")]
        public Input<bool>? LogoutEnabled { get; set; }

        /// <summary>
        /// (Updatable) Logout request URL
        /// </summary>
        [Input("logoutRequestUrl")]
        public Input<string>? LogoutRequestUrl { get; set; }

        /// <summary>
        /// (Updatable) Logout response URL
        /// </summary>
        [Input("logoutResponseUrl")]
        public Input<string>? LogoutResponseUrl { get; set; }

        /// <summary>
        /// (Updatable) Metadata
        /// </summary>
        [Input("metadata")]
        public Input<string>? Metadata { get; set; }

        [Input("metas")]
        private InputList<Inputs.DomainsIdentityProviderMetaGetArgs>? _metas;

        /// <summary>
        /// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
        /// </summary>
        public InputList<Inputs.DomainsIdentityProviderMetaGetArgs> Metas
        {
            get => _metas ?? (_metas = new InputList<Inputs.DomainsIdentityProviderMetaGetArgs>());
            set => _metas = value;
        }

        /// <summary>
        /// (Updatable) Default authentication request name ID format.
        /// </summary>
        [Input("nameIdFormat")]
        public Input<string>? NameIdFormat { get; set; }

        /// <summary>
        /// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
        /// </summary>
        [Input("ocid")]
        public Input<string>? Ocid { get; set; }

        /// <summary>
        /// (Updatable) Unique name of the trusted Identity Provider.
        /// </summary>
        [Input("partnerName")]
        public Input<string>? PartnerName { get; set; }

        /// <summary>
        /// (Updatable) Provider ID
        /// </summary>
        [Input("partnerProviderId")]
        public Input<string>? PartnerProviderId { get; set; }

        [Input("requestedAuthenticationContexts")]
        private InputList<string>? _requestedAuthenticationContexts;

        /// <summary>
        /// (Updatable) SAML SP authentication type.
        /// </summary>
        public InputList<string> RequestedAuthenticationContexts
        {
            get => _requestedAuthenticationContexts ?? (_requestedAuthenticationContexts = new InputList<string>());
            set => _requestedAuthenticationContexts = value;
        }

        /// <summary>
        /// (Updatable) This SP requires requests SAML IdP to enforce re-authentication.
        /// </summary>
        [Input("requireForceAuthn")]
        public Input<bool>? RequireForceAuthn { get; set; }

        /// <summary>
        /// (Updatable) SAML SP must accept encrypted assertion only.
        /// </summary>
        [Input("requiresEncryptedAssertion")]
        public Input<bool>? RequiresEncryptedAssertion { get; set; }

        /// <summary>
        /// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
        /// </summary>
        [Input("resourceTypeSchemaVersion")]
        public Input<string>? ResourceTypeSchemaVersion { get; set; }

        /// <summary>
        /// (Updatable) SAML SP HoK Enabled.
        /// </summary>
        [Input("samlHoKrequired")]
        public Input<bool>? SamlHoKrequired { get; set; }

        [Input("schemas")]
        private InputList<string>? _schemas;

        /// <summary>
        /// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
        /// </summary>
        public InputList<string> Schemas
        {
            get => _schemas ?? (_schemas = new InputList<string>());
            set => _schemas = value;
        }

        /// <summary>
        /// (Updatable) The serviceInstanceIdentifier of the App that hosts this IdP. This value will match the opcServiceInstanceGUID of any service-instance that the IdP represents.
        /// </summary>
        [Input("serviceInstanceIdentifier")]
        public Input<string>? ServiceInstanceIdentifier { get; set; }

        /// <summary>
        /// (Updatable) Set to true to indicate whether to show IdP in login page or not.
        /// </summary>
        [Input("shownOnLoginPage")]
        public Input<bool>? ShownOnLoginPage { get; set; }

        /// <summary>
        /// (Updatable) Signature hash algorithm.
        /// </summary>
        [Input("signatureHashAlgorithm")]
        public Input<string>? SignatureHashAlgorithm { get; set; }

        /// <summary>
        /// (Updatable) Signing certificate
        /// </summary>
        [Input("signingCertificate")]
        public Input<string>? SigningCertificate { get; set; }

        /// <summary>
        /// (Updatable) Succinct ID
        /// </summary>
        [Input("succinctId")]
        public Input<string>? SuccinctId { get; set; }

        [Input("tags")]
        private InputList<Inputs.DomainsIdentityProviderTagGetArgs>? _tags;

        /// <summary>
        /// (Updatable) A list of tags on this resource.
        /// </summary>
        public InputList<Inputs.DomainsIdentityProviderTagGetArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.DomainsIdentityProviderTagGetArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
        /// </summary>
        [Input("tenancyOcid")]
        public Input<string>? TenancyOcid { get; set; }

        /// <summary>
        /// (Updatable) The alternate Provider ID to be used as the Oracle Identity Cloud Service providerID (instead of the one in SamlSettings) when interacting with this IdP.
        /// </summary>
        [Input("tenantProviderId")]
        public Input<string>? TenantProviderId { get; set; }

        /// <summary>
        /// (Updatable) Identity Provider Type
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// (Updatable) Social Identity Provider Extension Schema
        /// </summary>
        [Input("urnietfparamsscimschemasoracleidcsextensionsocialIdentityProvider")]
        public Input<Inputs.DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionsocialIdentityProviderGetArgs>? UrnietfparamsscimschemasoracleidcsextensionsocialIdentityProvider { get; set; }

        /// <summary>
        /// (Updatable) X509 Identity Provider Extension Schema
        /// </summary>
        [Input("urnietfparamsscimschemasoracleidcsextensionx509identityProvider")]
        public Input<Inputs.DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionx509identityProviderGetArgs>? Urnietfparamsscimschemasoracleidcsextensionx509identityProvider { get; set; }

        /// <summary>
        /// (Updatable) User mapping method.
        /// </summary>
        [Input("userMappingMethod")]
        public Input<string>? UserMappingMethod { get; set; }

        /// <summary>
        /// (Updatable) This property specifies the userstore attribute value that must match the incoming assertion attribute value or the incoming nameid attribute value in order to identify the user during SSO.&lt;br&gt;You can construct the userMappingStoreAttribute value by specifying attributes from the Oracle Identity Cloud Service Core Users schema. For examples of how to construct the userMappingStoreAttribute value, see the &lt;b&gt;Example of a Request Body&lt;/b&gt; section of the Examples tab for the &lt;a href='./op-admin-v1-identityproviders-post.html'&gt;POST&lt;/a&gt; and &lt;a href='./op-admin-v1-identityproviders-id-put.html'&gt;PUT&lt;/a&gt; methods of the /IdentityProviders endpoint.
        /// </summary>
        [Input("userMappingStoreAttribute")]
        public Input<string>? UserMappingStoreAttribute { get; set; }

        public DomainsIdentityProviderState()
        {
        }
        public static new DomainsIdentityProviderState Empty => new DomainsIdentityProviderState();
    }
}
