// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Identity
{
    /// <summary>
    /// This resource provides the O Auth Partner Certificate resource in Oracle Cloud Infrastructure Identity Domains service.
    /// 
    /// Create an OAuth Partner Certificate
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testOauthPartnerCertificate = new Oci.Identity.DomainsOauthPartnerCertificate("testOauthPartnerCertificate", new()
    ///     {
    ///         CertificateAlias = @var.Oauth_partner_certificate_certificate_alias,
    ///         IdcsEndpoint = data.Oci_identity_domain.Test_domain.Url,
    ///         Schemas = new[]
    ///         {
    ///             "urn:ietf:params:scim:schemas:oracle:idcs:OAuthPartnerCertificate",
    ///         },
    ///         Authorization = @var.Oauth_partner_certificate_authorization,
    ///         ExternalId = "externalId",
    ///         KeyStoreId = oci_database_key_store.Test_key_store.Id,
    ///         KeyStoreName = oci_database_key_store.Test_key_store.Name,
    ///         KeyStorePassword = @var.Oauth_partner_certificate_key_store_password,
    ///         Map = @var.Oauth_partner_certificate_map,
    ///         Ocid = @var.Oauth_partner_certificate_ocid,
    ///         ResourceTypeSchemaVersion = @var.Oauth_partner_certificate_resource_type_schema_version,
    ///         Tags = new[]
    ///         {
    ///             new Oci.Identity.Inputs.DomainsOauthPartnerCertificateTagArgs
    ///             {
    ///                 Key = @var.Oauth_partner_certificate_tags_key,
    ///                 Value = @var.Oauth_partner_certificate_tags_value,
    ///             },
    ///         },
    ///         X509base64certificate = @var.Oauth_partner_certificate_x509base64certificate,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// OAuthPartnerCertificates can be imported using the `id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import oci:Identity/domainsOauthPartnerCertificate:DomainsOauthPartnerCertificate test_oauth_partner_certificate "idcsEndpoint/{idcsEndpoint}/oAuthPartnerCertificates/{oAuthPartnerCertificateId}"
    /// ```
    /// </summary>
    [OciResourceType("oci:Identity/domainsOauthPartnerCertificate:DomainsOauthPartnerCertificate")]
    public partial class DomainsOauthPartnerCertificate : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
        /// </summary>
        [Output("authorization")]
        public Output<string?> Authorization { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Certificate end date
        /// 
        /// **SCIM++ Properties:**
        /// * type: dateTime
        /// * multiValued: false
        /// * required: false
        /// * caseExact: true
        /// * mutability: readWrite
        /// * returned: default
        /// * uniqueness: none
        /// </summary>
        [Output("certEndDate")]
        public Output<string> CertEndDate { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Certificate start date
        /// 
        /// **SCIM++ Properties:**
        /// * type: dateTime
        /// * multiValued: false
        /// * required: false
        /// * caseExact: true
        /// * mutability: readWrite
        /// * returned: default
        /// * uniqueness: none
        /// </summary>
        [Output("certStartDate")]
        public Output<string> CertStartDate { get; private set; } = null!;

        /// <summary>
        /// Certificate alias
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: false
        /// * required: true
        /// * caseExact: false
        /// * mutability: readWrite
        /// * returned: always
        /// * uniqueness: none
        /// * idcsSearchable: true
        /// </summary>
        [Output("certificateAlias")]
        public Output<string> CertificateAlias { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Output("compartmentOcid")]
        public Output<string> CompartmentOcid { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: boolean
        /// * uniqueness: none
        /// </summary>
        [Output("deleteInProgress")]
        public Output<bool> DeleteInProgress { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Output("domainOcid")]
        public Output<string> DomainOcid { get; private set; } = null!;

        /// <summary>
        /// An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: false
        /// * required: false
        /// * caseExact: false
        /// * mutability: readWrite
        /// * returned: default
        /// * uniqueness: none
        /// </summary>
        [Output("externalId")]
        public Output<string> ExternalId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The User or App who created the Resource
        /// 
        /// **SCIM++ Properties:**
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: true
        /// * returned: default
        /// * type: complex
        /// </summary>
        [Output("idcsCreatedBies")]
        public Output<ImmutableArray<Outputs.DomainsOauthPartnerCertificateIdcsCreatedBy>> IdcsCreatedBies { get; private set; } = null!;

        /// <summary>
        /// The basic endpoint for the identity domain
        /// </summary>
        [Output("idcsEndpoint")]
        public Output<string> IdcsEndpoint { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The User or App who modified the Resource
        /// 
        /// **SCIM++ Properties:**
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: complex
        /// </summary>
        [Output("idcsLastModifiedBies")]
        public Output<ImmutableArray<Outputs.DomainsOauthPartnerCertificateIdcsLastModifiedBy>> IdcsLastModifiedBies { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The release number when the resource was upgraded.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: request
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Output("idcsLastUpgradedInRelease")]
        public Output<string> IdcsLastUpgradedInRelease { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
        /// 
        /// **SCIM++ Properties:**
        /// * idcsSearchable: false
        /// * multiValued: true
        /// * mutability: readOnly
        /// * required: false
        /// * returned: request
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Output("idcsPreventedOperations")]
        public Output<ImmutableArray<string>> IdcsPreventedOperations { get; private set; } = null!;

        /// <summary>
        /// Key store ID
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: false
        /// * required: false
        /// * caseExact: true
        /// * returned: never
        /// * uniqueness: none
        /// * idcsSearchable: true
        /// </summary>
        [Output("keyStoreId")]
        public Output<string> KeyStoreId { get; private set; } = null!;

        /// <summary>
        /// Key store name
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: false
        /// * required: false
        /// * caseExact: false
        /// * returned: always
        /// * uniqueness: none
        /// </summary>
        [Output("keyStoreName")]
        public Output<string> KeyStoreName { get; private set; } = null!;

        /// <summary>
        /// Key store password
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: false
        /// * idcsSensitive: none
        /// * required: false
        /// * caseExact: true
        /// * returned: never
        /// * uniqueness: none
        /// </summary>
        [Output("keyStorePassword")]
        public Output<string> KeyStorePassword { get; private set; } = null!;

        /// <summary>
        /// Map
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: false
        /// * required: false
        /// * caseExact: false
        /// * returned: always
        /// * uniqueness: none
        /// </summary>
        [Output("map")]
        public Output<string> Map { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
        /// * type: complex
        /// </summary>
        [Output("metas")]
        public Output<ImmutableArray<Outputs.DomainsOauthPartnerCertificateMeta>> Metas { get; private set; } = null!;

        /// <summary>
        /// Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: true
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: immutable
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: global
        /// </summary>
        [Output("ocid")]
        public Output<string> Ocid { get; private set; } = null!;

        /// <summary>
        /// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
        /// </summary>
        [Output("resourceTypeSchemaVersion")]
        public Output<string?> ResourceTypeSchemaVersion { get; private set; } = null!;

        /// <summary>
        /// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: true
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Output("schemas")]
        public Output<ImmutableArray<string>> Schemas { get; private set; } = null!;

        /// <summary>
        /// (Updatable) SHA-1 Thumbprint
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: false
        /// * required: false
        /// * caseExact: true
        /// * returned: default
        /// * idcsSearchable: true
        /// * uniqueness: none
        /// </summary>
        [Output("sha1thumbprint")]
        public Output<string> Sha1thumbprint { get; private set; } = null!;

        /// <summary>
        /// (Updatable) SHA-256 Thumbprint
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: false
        /// * required: false
        /// * caseExact: true
        /// * returned: default
        /// * idcsSearchable: true
        /// * uniqueness: none
        /// </summary>
        [Output("sha256thumbprint")]
        public Output<string> Sha256thumbprint { get; private set; } = null!;

        /// <summary>
        /// A list of tags on this resource.
        /// 
        /// **SCIM++ Properties:**
        /// * idcsCompositeKey: [key, value]
        /// * idcsSearchable: true
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: false
        /// * returned: request
        /// * type: complex
        /// * uniqueness: none
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.DomainsOauthPartnerCertificateTag>> Tags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Output("tenancyOcid")]
        public Output<string> TenancyOcid { get; private set; } = null!;

        /// <summary>
        /// Base 64Key data attribute
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: true
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("x509base64certificate")]
        public Output<string> X509base64certificate { get; private set; } = null!;


        /// <summary>
        /// Create a DomainsOauthPartnerCertificate resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DomainsOauthPartnerCertificate(string name, DomainsOauthPartnerCertificateArgs args, CustomResourceOptions? options = null)
            : base("oci:Identity/domainsOauthPartnerCertificate:DomainsOauthPartnerCertificate", name, args ?? new DomainsOauthPartnerCertificateArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DomainsOauthPartnerCertificate(string name, Input<string> id, DomainsOauthPartnerCertificateState? state = null, CustomResourceOptions? options = null)
            : base("oci:Identity/domainsOauthPartnerCertificate:DomainsOauthPartnerCertificate", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "keyStorePassword",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DomainsOauthPartnerCertificate resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DomainsOauthPartnerCertificate Get(string name, Input<string> id, DomainsOauthPartnerCertificateState? state = null, CustomResourceOptions? options = null)
        {
            return new DomainsOauthPartnerCertificate(name, id, state, options);
        }
    }

    public sealed class DomainsOauthPartnerCertificateArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
        /// </summary>
        [Input("authorization")]
        public Input<string>? Authorization { get; set; }

        /// <summary>
        /// Certificate alias
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: false
        /// * required: true
        /// * caseExact: false
        /// * mutability: readWrite
        /// * returned: always
        /// * uniqueness: none
        /// * idcsSearchable: true
        /// </summary>
        [Input("certificateAlias", required: true)]
        public Input<string> CertificateAlias { get; set; } = null!;

        /// <summary>
        /// An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: false
        /// * required: false
        /// * caseExact: false
        /// * mutability: readWrite
        /// * returned: default
        /// * uniqueness: none
        /// </summary>
        [Input("externalId")]
        public Input<string>? ExternalId { get; set; }

        /// <summary>
        /// The basic endpoint for the identity domain
        /// </summary>
        [Input("idcsEndpoint", required: true)]
        public Input<string> IdcsEndpoint { get; set; } = null!;

        /// <summary>
        /// Key store ID
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: false
        /// * required: false
        /// * caseExact: true
        /// * returned: never
        /// * uniqueness: none
        /// * idcsSearchable: true
        /// </summary>
        [Input("keyStoreId")]
        public Input<string>? KeyStoreId { get; set; }

        /// <summary>
        /// Key store name
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: false
        /// * required: false
        /// * caseExact: false
        /// * returned: always
        /// * uniqueness: none
        /// </summary>
        [Input("keyStoreName")]
        public Input<string>? KeyStoreName { get; set; }

        [Input("keyStorePassword")]
        private Input<string>? _keyStorePassword;

        /// <summary>
        /// Key store password
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: false
        /// * idcsSensitive: none
        /// * required: false
        /// * caseExact: true
        /// * returned: never
        /// * uniqueness: none
        /// </summary>
        public Input<string>? KeyStorePassword
        {
            get => _keyStorePassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _keyStorePassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Map
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: false
        /// * required: false
        /// * caseExact: false
        /// * returned: always
        /// * uniqueness: none
        /// </summary>
        [Input("map")]
        public Input<string>? Map { get; set; }

        /// <summary>
        /// Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: true
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: immutable
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: global
        /// </summary>
        [Input("ocid")]
        public Input<string>? Ocid { get; set; }

        /// <summary>
        /// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
        /// </summary>
        [Input("resourceTypeSchemaVersion")]
        public Input<string>? ResourceTypeSchemaVersion { get; set; }

        [Input("schemas", required: true)]
        private InputList<string>? _schemas;

        /// <summary>
        /// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: true
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        public InputList<string> Schemas
        {
            get => _schemas ?? (_schemas = new InputList<string>());
            set => _schemas = value;
        }

        [Input("tags")]
        private InputList<Inputs.DomainsOauthPartnerCertificateTagArgs>? _tags;

        /// <summary>
        /// A list of tags on this resource.
        /// 
        /// **SCIM++ Properties:**
        /// * idcsCompositeKey: [key, value]
        /// * idcsSearchable: true
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: false
        /// * returned: request
        /// * type: complex
        /// * uniqueness: none
        /// </summary>
        public InputList<Inputs.DomainsOauthPartnerCertificateTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.DomainsOauthPartnerCertificateTagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// Base 64Key data attribute
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: true
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("x509base64certificate")]
        public Input<string>? X509base64certificate { get; set; }

        public DomainsOauthPartnerCertificateArgs()
        {
        }
        public static new DomainsOauthPartnerCertificateArgs Empty => new DomainsOauthPartnerCertificateArgs();
    }

    public sealed class DomainsOauthPartnerCertificateState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
        /// </summary>
        [Input("authorization")]
        public Input<string>? Authorization { get; set; }

        /// <summary>
        /// (Updatable) Certificate end date
        /// 
        /// **SCIM++ Properties:**
        /// * type: dateTime
        /// * multiValued: false
        /// * required: false
        /// * caseExact: true
        /// * mutability: readWrite
        /// * returned: default
        /// * uniqueness: none
        /// </summary>
        [Input("certEndDate")]
        public Input<string>? CertEndDate { get; set; }

        /// <summary>
        /// (Updatable) Certificate start date
        /// 
        /// **SCIM++ Properties:**
        /// * type: dateTime
        /// * multiValued: false
        /// * required: false
        /// * caseExact: true
        /// * mutability: readWrite
        /// * returned: default
        /// * uniqueness: none
        /// </summary>
        [Input("certStartDate")]
        public Input<string>? CertStartDate { get; set; }

        /// <summary>
        /// Certificate alias
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: false
        /// * required: true
        /// * caseExact: false
        /// * mutability: readWrite
        /// * returned: always
        /// * uniqueness: none
        /// * idcsSearchable: true
        /// </summary>
        [Input("certificateAlias")]
        public Input<string>? CertificateAlias { get; set; }

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Input("compartmentOcid")]
        public Input<string>? CompartmentOcid { get; set; }

        /// <summary>
        /// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: boolean
        /// * uniqueness: none
        /// </summary>
        [Input("deleteInProgress")]
        public Input<bool>? DeleteInProgress { get; set; }

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Input("domainOcid")]
        public Input<string>? DomainOcid { get; set; }

        /// <summary>
        /// An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: false
        /// * required: false
        /// * caseExact: false
        /// * mutability: readWrite
        /// * returned: default
        /// * uniqueness: none
        /// </summary>
        [Input("externalId")]
        public Input<string>? ExternalId { get; set; }

        [Input("idcsCreatedBies")]
        private InputList<Inputs.DomainsOauthPartnerCertificateIdcsCreatedByGetArgs>? _idcsCreatedBies;

        /// <summary>
        /// (Updatable) The User or App who created the Resource
        /// 
        /// **SCIM++ Properties:**
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: true
        /// * returned: default
        /// * type: complex
        /// </summary>
        public InputList<Inputs.DomainsOauthPartnerCertificateIdcsCreatedByGetArgs> IdcsCreatedBies
        {
            get => _idcsCreatedBies ?? (_idcsCreatedBies = new InputList<Inputs.DomainsOauthPartnerCertificateIdcsCreatedByGetArgs>());
            set => _idcsCreatedBies = value;
        }

        /// <summary>
        /// The basic endpoint for the identity domain
        /// </summary>
        [Input("idcsEndpoint")]
        public Input<string>? IdcsEndpoint { get; set; }

        [Input("idcsLastModifiedBies")]
        private InputList<Inputs.DomainsOauthPartnerCertificateIdcsLastModifiedByGetArgs>? _idcsLastModifiedBies;

        /// <summary>
        /// (Updatable) The User or App who modified the Resource
        /// 
        /// **SCIM++ Properties:**
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: complex
        /// </summary>
        public InputList<Inputs.DomainsOauthPartnerCertificateIdcsLastModifiedByGetArgs> IdcsLastModifiedBies
        {
            get => _idcsLastModifiedBies ?? (_idcsLastModifiedBies = new InputList<Inputs.DomainsOauthPartnerCertificateIdcsLastModifiedByGetArgs>());
            set => _idcsLastModifiedBies = value;
        }

        /// <summary>
        /// (Updatable) The release number when the resource was upgraded.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: request
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Input("idcsLastUpgradedInRelease")]
        public Input<string>? IdcsLastUpgradedInRelease { get; set; }

        [Input("idcsPreventedOperations")]
        private InputList<string>? _idcsPreventedOperations;

        /// <summary>
        /// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
        /// 
        /// **SCIM++ Properties:**
        /// * idcsSearchable: false
        /// * multiValued: true
        /// * mutability: readOnly
        /// * required: false
        /// * returned: request
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        public InputList<string> IdcsPreventedOperations
        {
            get => _idcsPreventedOperations ?? (_idcsPreventedOperations = new InputList<string>());
            set => _idcsPreventedOperations = value;
        }

        /// <summary>
        /// Key store ID
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: false
        /// * required: false
        /// * caseExact: true
        /// * returned: never
        /// * uniqueness: none
        /// * idcsSearchable: true
        /// </summary>
        [Input("keyStoreId")]
        public Input<string>? KeyStoreId { get; set; }

        /// <summary>
        /// Key store name
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: false
        /// * required: false
        /// * caseExact: false
        /// * returned: always
        /// * uniqueness: none
        /// </summary>
        [Input("keyStoreName")]
        public Input<string>? KeyStoreName { get; set; }

        [Input("keyStorePassword")]
        private Input<string>? _keyStorePassword;

        /// <summary>
        /// Key store password
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: false
        /// * idcsSensitive: none
        /// * required: false
        /// * caseExact: true
        /// * returned: never
        /// * uniqueness: none
        /// </summary>
        public Input<string>? KeyStorePassword
        {
            get => _keyStorePassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _keyStorePassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Map
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: false
        /// * required: false
        /// * caseExact: false
        /// * returned: always
        /// * uniqueness: none
        /// </summary>
        [Input("map")]
        public Input<string>? Map { get; set; }

        [Input("metas")]
        private InputList<Inputs.DomainsOauthPartnerCertificateMetaGetArgs>? _metas;

        /// <summary>
        /// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
        /// * type: complex
        /// </summary>
        public InputList<Inputs.DomainsOauthPartnerCertificateMetaGetArgs> Metas
        {
            get => _metas ?? (_metas = new InputList<Inputs.DomainsOauthPartnerCertificateMetaGetArgs>());
            set => _metas = value;
        }

        /// <summary>
        /// Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: true
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: immutable
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: global
        /// </summary>
        [Input("ocid")]
        public Input<string>? Ocid { get; set; }

        /// <summary>
        /// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
        /// </summary>
        [Input("resourceTypeSchemaVersion")]
        public Input<string>? ResourceTypeSchemaVersion { get; set; }

        [Input("schemas")]
        private InputList<string>? _schemas;

        /// <summary>
        /// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: true
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        public InputList<string> Schemas
        {
            get => _schemas ?? (_schemas = new InputList<string>());
            set => _schemas = value;
        }

        /// <summary>
        /// (Updatable) SHA-1 Thumbprint
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: false
        /// * required: false
        /// * caseExact: true
        /// * returned: default
        /// * idcsSearchable: true
        /// * uniqueness: none
        /// </summary>
        [Input("sha1thumbprint")]
        public Input<string>? Sha1thumbprint { get; set; }

        /// <summary>
        /// (Updatable) SHA-256 Thumbprint
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: false
        /// * required: false
        /// * caseExact: true
        /// * returned: default
        /// * idcsSearchable: true
        /// * uniqueness: none
        /// </summary>
        [Input("sha256thumbprint")]
        public Input<string>? Sha256thumbprint { get; set; }

        [Input("tags")]
        private InputList<Inputs.DomainsOauthPartnerCertificateTagGetArgs>? _tags;

        /// <summary>
        /// A list of tags on this resource.
        /// 
        /// **SCIM++ Properties:**
        /// * idcsCompositeKey: [key, value]
        /// * idcsSearchable: true
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: false
        /// * returned: request
        /// * type: complex
        /// * uniqueness: none
        /// </summary>
        public InputList<Inputs.DomainsOauthPartnerCertificateTagGetArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.DomainsOauthPartnerCertificateTagGetArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Input("tenancyOcid")]
        public Input<string>? TenancyOcid { get; set; }

        /// <summary>
        /// Base 64Key data attribute
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: true
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("x509base64certificate")]
        public Input<string>? X509base64certificate { get; set; }

        public DomainsOauthPartnerCertificateState()
        {
        }
        public static new DomainsOauthPartnerCertificateState Empty => new DomainsOauthPartnerCertificateState();
    }
}
