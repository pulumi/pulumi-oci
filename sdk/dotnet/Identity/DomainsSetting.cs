// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Identity
{
    /// <summary>
    /// This resource provides the Setting resource in Oracle Cloud Infrastructure Identity Domains service.
    /// 
    /// Replace Settings
    /// 
    /// ## Import
    /// 
    /// Settings can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:Identity/domainsSetting:DomainsSetting test_setting "idcsEndpoint/{idcsEndpoint}/settings/{settingId}"
    /// ```
    /// </summary>
    [OciResourceType("oci:Identity/domainsSetting:DomainsSetting")]
    public partial class DomainsSetting : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) Indicates whether all the Apps in this customer tenancy should trust each other. A value of true overrides the 'defaultTrustScope' attribute here in Settings, as well as any App-specific 'trustScope' attribute, to force in effect 'trustScope=Account' for every App in this customer tenancy.
        /// 
        /// **Added In:** 18.1.6
        /// 
        /// **SCIM++ Properties:**
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: boolean
        /// </summary>
        [Output("accountAlwaysTrustScope")]
        public Output<bool> AccountAlwaysTrustScope { get; private set; } = null!;

        /// <summary>
        /// (Updatable) One or more email domains allowed in a user's email field. If unassigned, any domain is allowed.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Output("allowedDomains")]
        public Output<ImmutableArray<string>> AllowedDomains { get; private set; } = null!;

        /// <summary>
        /// (Updatable) If specified, indicates the set of Urls which can be returned to after successful forgot password flow
        /// 
        /// **Added In:** 19.3.3
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: true
        /// * required: false
        /// * mutability: readWrite
        /// * returned: default
        /// * uniqueness: none
        /// * caseExact: false
        /// </summary>
        [Output("allowedForgotPasswordFlowReturnUrls")]
        public Output<ImmutableArray<string>> AllowedForgotPasswordFlowReturnUrls { get; private set; } = null!;

        /// <summary>
        /// (Updatable) If specified, indicates the set of allowed notification redirect Urls which can be specified as the value of \"notificationRedirectUrl\" in the POST .../admin/v1/MePasswordResetRequestor request payload, which will then be included in the reset password email notification sent to a user as part of the forgot password / password reset flow.
        /// 
        /// **Added In:** 2009041201
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: true
        /// * required: false
        /// * mutability: readWrite
        /// * returned: default
        /// * uniqueness: none
        /// * caseExact: false
        /// </summary>
        [Output("allowedNotificationRedirectUrls")]
        public Output<ImmutableArray<string>> AllowedNotificationRedirectUrls { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
        /// </summary>
        [Output("attributeSets")]
        public Output<ImmutableArray<string>> AttributeSets { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
        /// </summary>
        [Output("attributes")]
        public Output<string?> Attributes { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Audit Event retention period. If set, overrides default of 30 days after which Audit Events will be purged
        /// 
        /// **Added In:** 19.2.1
        /// 
        /// **SCIM++ Properties:**
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: integer
        /// </summary>
        [Output("auditEventRetentionPeriod")]
        public Output<int> AuditEventRetentionPeriod { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
        /// </summary>
        [Output("authorization")]
        public Output<string?> Authorization { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Certificate Validation Config
        /// 
        /// **Added In:** 2010242156
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: complex
        /// * uniqueness: none
        /// </summary>
        [Output("certificateValidation")]
        public Output<Outputs.DomainsSettingCertificateValidation> CertificateValidation { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The attribute to store the cloud account name
        /// 
        /// **Deprecated Since: 2011192329**
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Output("cloudAccountName")]
        public Output<string> CloudAccountName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A complex attribute that specifies the Cloud Gate cross origin resource sharing settings.
        /// 
        /// **Added In:** 2011192329
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: complex
        /// * uniqueness: none
        /// </summary>
        [Output("cloudGateCorsSettings")]
        public Output<Outputs.DomainsSettingCloudGateCorsSettings> CloudGateCorsSettings { get; private set; } = null!;

        /// <summary>
        /// (Updatable) If specified, indicates the custom SIM Migrator Url which can be used while SIM to Oracle Identity Cloud Service CloudAccount Migration.
        /// 
        /// **Added In:** 2012271618
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: false
        /// * required: false
        /// * mutability: readWrite
        /// * returned: default
        /// * uniqueness: none
        /// * caseExact: false
        /// </summary>
        [Output("cloudMigrationCustomUrl")]
        public Output<string> CloudMigrationCustomUrl { get; private set; } = null!;

        /// <summary>
        /// (Updatable) CloudAccountMigration: Enable Custom SIM Migrator Url.
        /// 
        /// **Added In:** 2012271618
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: boolean
        /// * uniqueness: none
        /// </summary>
        [Output("cloudMigrationUrlEnabled")]
        public Output<bool> CloudMigrationUrlEnabled { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Name of the company in different locales
        /// 
        /// **SCIM++ Properties:**
        /// * idcsCompositeKey: [locale]
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: complex
        /// </summary>
        [Output("companyNames")]
        public Output<ImmutableArray<Outputs.DomainsSettingCompanyName>> CompanyNames { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Output("compartmentOcid")]
        public Output<string> CompartmentOcid { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Contact emails used to notify tenants. Can be one or more user or group alias emails.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Output("contactEmails")]
        public Output<ImmutableArray<string>> ContactEmails { get; private set; } = null!;

        /// <summary>
        /// (Updatable) This value indicates whether Customer Service Representatives can login and have readOnly or readWrite access.  A value of 'none' means CSR cannot login to the services.
        /// 
        /// **SCIM++ Properties:**
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: true
        /// * returned: default
        /// * type: string
        /// </summary>
        [Output("csrAccess")]
        public Output<string> CsrAccess { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Indicates if the branding is default or custom
        /// 
        /// **SCIM++ Properties:**
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: boolean
        /// </summary>
        [Output("customBranding")]
        public Output<bool> CustomBranding { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Storage URL location where the sanitized custom css is located
        /// 
        /// **Added In:** 20.1.3
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Output("customCssLocation")]
        public Output<string> CustomCssLocation { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Storage URL location where the sanitized custom html is located
        /// 
        /// **Added In:** 20.1.3
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Output("customHtmlLocation")]
        public Output<string> CustomHtmlLocation { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Custom translations (JSON String)
        /// 
        /// **Added In:** 20.1.3
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Output("customTranslation")]
        public Output<string> CustomTranslation { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Default name of the Company in different locales
        /// 
        /// **Added In:** 18.2.2
        /// 
        /// **SCIM++ Properties:**
        /// * idcsCompositeKey: [locale]
        /// * multiValued: true
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: complex
        /// </summary>
        [Output("defaultCompanyNames")]
        public Output<ImmutableArray<Outputs.DomainsSettingDefaultCompanyName>> DefaultCompanyNames { get; private set; } = null!;

        /// <summary>
        /// (Updatable) References to various images
        /// 
        /// **Added In:** 18.2.2
        /// 
        /// **SCIM++ Properties:**
        /// * idcsCompositeKey: [type]
        /// * multiValued: true
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: complex
        /// </summary>
        [Output("defaultImages")]
        public Output<ImmutableArray<Outputs.DomainsSettingDefaultImage>> DefaultImages { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Default Login text in different locales
        /// 
        /// **Added In:** 18.2.2
        /// 
        /// **SCIM++ Properties:**
        /// * idcsCompositeKey: [locale]
        /// * multiValued: true
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: complex
        /// </summary>
        [Output("defaultLoginTexts")]
        public Output<ImmutableArray<Outputs.DomainsSettingDefaultLoginText>> DefaultLoginTexts { get; private set; } = null!;

        /// <summary>
        /// (Updatable) **Deprecated Since: 18.3.6**
        /// 
        /// **SCIM++ Properties:**
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string Indicates the default trust scope for all apps
        /// </summary>
        [Output("defaultTrustScope")]
        public Output<string> DefaultTrustScope { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: boolean
        /// * uniqueness: none
        /// </summary>
        [Output("deleteInProgress")]
        public Output<bool> DeleteInProgress { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The level of diagnostic logging that is currently in effect. A level of 0 (zero) indicates that diagnostic logging is disabled. A level of 1 (one) indicates that diagnostic logging is enabled.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: integer
        /// * uniqueness: none
        /// </summary>
        [Output("diagnosticLevel")]
        public Output<int> DiagnosticLevel { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Controls whether DiagnosticRecords for external search-operations (against SCIM resource-types in the Admin service) identify returned resources.  If true, indicates that for each successful external search-operation at least one DiagnosticRecord will include at least one identifier for each matching resource that is returned in that search-response.  If false, no DiagnosticRecord should be expected to identify returned resources for a search-operation.  The default value is false.
        /// 
        /// **Added In:** 2011192329
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: boolean
        /// * uniqueness: none
        /// </summary>
        [Output("diagnosticRecordForSearchIdentifiesReturnedResources")]
        public Output<bool> DiagnosticRecordForSearchIdentifiesReturnedResources { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The end time up to which diagnostic recording is switched on
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: dateTime
        /// * uniqueness: none
        /// </summary>
        [Output("diagnosticTracingUpto")]
        public Output<string> DiagnosticTracingUpto { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Output("domainOcid")]
        public Output<string> DomainOcid { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Indicates if Terms of Use is enabled in UI
        /// 
        /// **Added In:** 18.2.4
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: boolean
        /// * uniqueness: none
        /// </summary>
        [Output("enableTermsOfUse")]
        public Output<bool> EnableTermsOfUse { get; private set; } = null!;

        /// <summary>
        /// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Output("externalId")]
        public Output<string> ExternalId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Maximum duration for IAM User Principal Session Token expiry
        /// 
        /// **Added In:** 2307071836
        /// 
        /// **SCIM++ Properties:**
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: integer
        /// * uniqueness: none
        /// </summary>
        [Output("iamUpstSessionExpiry")]
        public Output<int> IamUpstSessionExpiry { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The User or App who created the Resource
        /// 
        /// **SCIM++ Properties:**
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: true
        /// * returned: default
        /// * type: complex
        /// </summary>
        [Output("idcsCreatedBies")]
        public Output<ImmutableArray<Outputs.DomainsSettingIdcsCreatedBy>> IdcsCreatedBies { get; private set; } = null!;

        /// <summary>
        /// The basic endpoint for the identity domain
        /// </summary>
        [Output("idcsEndpoint")]
        public Output<string> IdcsEndpoint { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The User or App who modified the Resource
        /// 
        /// **SCIM++ Properties:**
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: complex
        /// </summary>
        [Output("idcsLastModifiedBies")]
        public Output<ImmutableArray<Outputs.DomainsSettingIdcsLastModifiedBy>> IdcsLastModifiedBies { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The release number when the resource was upgraded.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: request
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Output("idcsLastUpgradedInRelease")]
        public Output<string> IdcsLastUpgradedInRelease { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
        /// 
        /// **SCIM++ Properties:**
        /// * idcsSearchable: false
        /// * multiValued: true
        /// * mutability: readOnly
        /// * required: false
        /// * returned: request
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Output("idcsPreventedOperations")]
        public Output<ImmutableArray<string>> IdcsPreventedOperations { get; private set; } = null!;

        /// <summary>
        /// (Updatable) References to various images
        /// 
        /// **SCIM++ Properties:**
        /// * idcsCompositeKey: [type]
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: complex
        /// </summary>
        [Output("images")]
        public Output<ImmutableArray<Outputs.DomainsSettingImage>> Images { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Indicates if 'hosted' option was selected
        /// 
        /// **Added In:** 20.1.3
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: boolean
        /// * uniqueness: none
        /// </summary>
        [Output("isHostedPage")]
        public Output<bool> IsHostedPage { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Tenant issuer.
        /// 
        /// **Added In:** 20.1.3
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Output("issuer")]
        public Output<string> Issuer { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Default location for purposes of localizing items such as currency, date and time format, numerical representations, and so on.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsCanonicalValueSourceFilter: attrName eq "locales" and attrValues.value eq "$(locale)"
        /// * idcsCanonicalValueSourceResourceType: AllowedValue
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Output("locale")]
        public Output<string> Locale { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Login text in different locales
        /// 
        /// **SCIM++ Properties:**
        /// * idcsCompositeKey: [locale]
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: complex
        /// </summary>
        [Output("loginTexts")]
        public Output<ImmutableArray<Outputs.DomainsSettingLoginText>> LoginTexts { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Limit the maximum return of CMVA for an App
        /// 
        /// **Added In:** 2111112015
        /// 
        /// **SCIM++ Properties:**
        /// * idcsMinValue: 0
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: integer
        /// * uniqueness: none
        /// </summary>
        [Output("maxNoOfAppCmvaToReturn")]
        public Output<int> MaxNoOfAppCmvaToReturn { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Limit the maximum return of members for an AppRole
        /// 
        /// **Added In:** 2111112015
        /// 
        /// **SCIM++ Properties:**
        /// * idcsMinValue: 0
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: integer
        /// * uniqueness: none
        /// </summary>
        [Output("maxNoOfAppRoleMembersToReturn")]
        public Output<int> MaxNoOfAppRoleMembersToReturn { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
        /// * type: complex
        /// </summary>
        [Output("metas")]
        public Output<ImmutableArray<Outputs.DomainsSettingMeta>> Metas { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Database Migration Status
        /// 
        /// **Added In:** 19.2.1
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: true
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Output("migrationStatus")]
        public Output<string> MigrationStatus { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: true
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: immutable
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: global
        /// </summary>
        [Output("ocid")]
        public Output<string> Ocid { get; private set; } = null!;

        /// <summary>
        /// (Updatable) On-Premises provisioning feature toggle.
        /// 
        /// **Added In:** 19.2.1
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: boolean
        /// * uniqueness: none
        /// </summary>
        [Output("onPremisesProvisioning")]
        public Output<bool> OnPremisesProvisioning { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Preferred written or spoken language used for localized user interfaces
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsCanonicalValueSourceFilter: attrName eq "languages" and attrValues.value eq "$(preferredLanguage)"
        /// * idcsCanonicalValueSourceResourceType: AllowedValue
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Output("preferredLanguage")]
        public Output<string> PreferredLanguage { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Previous Tenant issuer. This is an Oracle Identity Cloud Service internal attribute which is not meant to be directly modified by ID Admin. Even if the request body (Settings) contains this attribute, the actual value will be set according to the Oracle Identity Cloud Service internal logic rather than solely based on the value provided in the request payload.
        /// 
        /// **Added In:** 20.1.3
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: request
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Output("prevIssuer")]
        public Output<string> PrevIssuer { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Privacy Policy URL
        /// 
        /// **Added In:** 18.2.4
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Output("privacyPolicyUrl")]
        public Output<string> PrivacyPolicyUrl { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Purge Configs for different Resource Types
        /// 
        /// **Deprecated Since: 19.1.6**
        /// 
        /// **SCIM++ Properties:**
        /// * idcsCompositeKey: [resourceName]
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: complex
        /// </summary>
        [Output("purgeConfigs")]
        public Output<ImmutableArray<Outputs.DomainsSettingPurgeConfig>> PurgeConfigs { get; private set; } = null!;

        /// <summary>
        /// (Updatable) If reAuthWhenChangingMyAuthenticationFactors is true (default), this attribute specifies which re-authentication factor to use. Allowed value is \"password\".
        /// 
        /// **Added In:** 20.1.3
        /// 
        /// **SCIM++ Properties:**
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// </summary>
        [Output("reAuthFactors")]
        public Output<ImmutableArray<string>> ReAuthFactors { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Specifies whether re-authentication is required or not when a user changes one of their security factors such as password or email. Default is true to ensure more secure behavior.
        /// 
        /// **Added In:** 20.1.3
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: boolean
        /// * uniqueness: none
        /// </summary>
        [Output("reAuthWhenChangingMyAuthenticationFactors")]
        public Output<bool> ReAuthWhenChangingMyAuthenticationFactors { get; private set; } = null!;

        /// <summary>
        /// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
        /// </summary>
        [Output("resourceTypeSchemaVersion")]
        public Output<string?> ResourceTypeSchemaVersion { get; private set; } = null!;

        /// <summary>
        /// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: true
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Output("schemas")]
        public Output<ImmutableArray<string>> Schemas { get; private set; } = null!;

        /// <summary>
        /// (Updatable) By default, a service admin can list all users in stripe. If true, a service admin cannot list other users.
        /// 
        /// **Added In:** 2108190438
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: boolean
        /// </summary>
        [Output("serviceAdminCannotListOtherUsers")]
        public Output<bool> ServiceAdminCannotListOtherUsers { get; private set; } = null!;

        /// <summary>
        /// ID of the resource
        /// </summary>
        [Output("settingId")]
        public Output<string> SettingId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Indicates if access on SigningCert is allowed to public or not
        /// 
        /// **Added In:** 17.3.4
        /// 
        /// **SCIM++ Properties:**
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: boolean
        /// </summary>
        [Output("signingCertPublicAccess")]
        public Output<bool> SigningCertPublicAccess { get; private set; } = null!;

        /// <summary>
        /// (Updatable) **Added In:** 20.1.3
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none Subject mapping user profile attribute. The input format should be SCIM compliant. This attribute should be of type String and multivalued to false.
        /// </summary>
        [Output("subMappingAttr")]
        public Output<string> SubMappingAttr { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A list of tags on this resource.
        /// 
        /// **SCIM++ Properties:**
        /// * idcsCompositeKey: [key, value]
        /// * idcsSearchable: true
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: false
        /// * returned: request
        /// * type: complex
        /// * uniqueness: none
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.DomainsSettingTag>> Tags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Output("tenancyOcid")]
        public Output<string> TenancyOcid { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Custom claims associated with the specific tenant
        /// 
        /// **Added In:** 18.4.2
        /// 
        /// **SCIM++ Properties:**
        /// * idcsCompositeKey: [name]
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: complex
        /// * uniqueness: none
        /// </summary>
        [Output("tenantCustomClaims")]
        public Output<ImmutableArray<Outputs.DomainsSettingTenantCustomClaim>> TenantCustomClaims { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Terms of Use URL
        /// 
        /// **Added In:** 18.2.4
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Output("termsOfUseUrl")]
        public Output<string> TermsOfUseUrl { get; private set; } = null!;

        /// <summary>
        /// (Updatable) User's timezone
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsCanonicalValueSourceFilter: attrName eq "timezones" and attrValues.value eq "$(timezone)"
        /// * idcsCanonicalValueSourceResourceType: AllowedValue
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("timezone")]
        public Output<string> Timezone { get; private set; } = null!;


        /// <summary>
        /// Create a DomainsSetting resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DomainsSetting(string name, DomainsSettingArgs args, CustomResourceOptions? options = null)
            : base("oci:Identity/domainsSetting:DomainsSetting", name, args ?? new DomainsSettingArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DomainsSetting(string name, Input<string> id, DomainsSettingState? state = null, CustomResourceOptions? options = null)
            : base("oci:Identity/domainsSetting:DomainsSetting", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "allowedForgotPasswordFlowReturnUrls",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DomainsSetting resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DomainsSetting Get(string name, Input<string> id, DomainsSettingState? state = null, CustomResourceOptions? options = null)
        {
            return new DomainsSetting(name, id, state, options);
        }
    }

    public sealed class DomainsSettingArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) Indicates whether all the Apps in this customer tenancy should trust each other. A value of true overrides the 'defaultTrustScope' attribute here in Settings, as well as any App-specific 'trustScope' attribute, to force in effect 'trustScope=Account' for every App in this customer tenancy.
        /// 
        /// **Added In:** 18.1.6
        /// 
        /// **SCIM++ Properties:**
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: boolean
        /// </summary>
        [Input("accountAlwaysTrustScope")]
        public Input<bool>? AccountAlwaysTrustScope { get; set; }

        [Input("allowedDomains")]
        private InputList<string>? _allowedDomains;

        /// <summary>
        /// (Updatable) One or more email domains allowed in a user's email field. If unassigned, any domain is allowed.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        public InputList<string> AllowedDomains
        {
            get => _allowedDomains ?? (_allowedDomains = new InputList<string>());
            set => _allowedDomains = value;
        }

        [Input("allowedForgotPasswordFlowReturnUrls")]
        private InputList<string>? _allowedForgotPasswordFlowReturnUrls;

        /// <summary>
        /// (Updatable) If specified, indicates the set of Urls which can be returned to after successful forgot password flow
        /// 
        /// **Added In:** 19.3.3
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: true
        /// * required: false
        /// * mutability: readWrite
        /// * returned: default
        /// * uniqueness: none
        /// * caseExact: false
        /// </summary>
        public InputList<string> AllowedForgotPasswordFlowReturnUrls
        {
            get => _allowedForgotPasswordFlowReturnUrls ?? (_allowedForgotPasswordFlowReturnUrls = new InputList<string>());
            set
            {
                var emptySecret = Output.CreateSecret(ImmutableArray.Create<string>());
                _allowedForgotPasswordFlowReturnUrls = Output.All(value, emptySecret).Apply(v => v[0]);
            }
        }

        [Input("allowedNotificationRedirectUrls")]
        private InputList<string>? _allowedNotificationRedirectUrls;

        /// <summary>
        /// (Updatable) If specified, indicates the set of allowed notification redirect Urls which can be specified as the value of \"notificationRedirectUrl\" in the POST .../admin/v1/MePasswordResetRequestor request payload, which will then be included in the reset password email notification sent to a user as part of the forgot password / password reset flow.
        /// 
        /// **Added In:** 2009041201
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: true
        /// * required: false
        /// * mutability: readWrite
        /// * returned: default
        /// * uniqueness: none
        /// * caseExact: false
        /// </summary>
        public InputList<string> AllowedNotificationRedirectUrls
        {
            get => _allowedNotificationRedirectUrls ?? (_allowedNotificationRedirectUrls = new InputList<string>());
            set => _allowedNotificationRedirectUrls = value;
        }

        [Input("attributeSets")]
        private InputList<string>? _attributeSets;

        /// <summary>
        /// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
        /// </summary>
        public InputList<string> AttributeSets
        {
            get => _attributeSets ?? (_attributeSets = new InputList<string>());
            set => _attributeSets = value;
        }

        /// <summary>
        /// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
        /// </summary>
        [Input("attributes")]
        public Input<string>? Attributes { get; set; }

        /// <summary>
        /// (Updatable) Audit Event retention period. If set, overrides default of 30 days after which Audit Events will be purged
        /// 
        /// **Added In:** 19.2.1
        /// 
        /// **SCIM++ Properties:**
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: integer
        /// </summary>
        [Input("auditEventRetentionPeriod")]
        public Input<int>? AuditEventRetentionPeriod { get; set; }

        /// <summary>
        /// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
        /// </summary>
        [Input("authorization")]
        public Input<string>? Authorization { get; set; }

        /// <summary>
        /// (Updatable) Certificate Validation Config
        /// 
        /// **Added In:** 2010242156
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: complex
        /// * uniqueness: none
        /// </summary>
        [Input("certificateValidation")]
        public Input<Inputs.DomainsSettingCertificateValidationArgs>? CertificateValidation { get; set; }

        /// <summary>
        /// (Updatable) A complex attribute that specifies the Cloud Gate cross origin resource sharing settings.
        /// 
        /// **Added In:** 2011192329
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: complex
        /// * uniqueness: none
        /// </summary>
        [Input("cloudGateCorsSettings")]
        public Input<Inputs.DomainsSettingCloudGateCorsSettingsArgs>? CloudGateCorsSettings { get; set; }

        /// <summary>
        /// (Updatable) If specified, indicates the custom SIM Migrator Url which can be used while SIM to Oracle Identity Cloud Service CloudAccount Migration.
        /// 
        /// **Added In:** 2012271618
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: false
        /// * required: false
        /// * mutability: readWrite
        /// * returned: default
        /// * uniqueness: none
        /// * caseExact: false
        /// </summary>
        [Input("cloudMigrationCustomUrl")]
        public Input<string>? CloudMigrationCustomUrl { get; set; }

        /// <summary>
        /// (Updatable) CloudAccountMigration: Enable Custom SIM Migrator Url.
        /// 
        /// **Added In:** 2012271618
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: boolean
        /// * uniqueness: none
        /// </summary>
        [Input("cloudMigrationUrlEnabled")]
        public Input<bool>? CloudMigrationUrlEnabled { get; set; }

        [Input("companyNames")]
        private InputList<Inputs.DomainsSettingCompanyNameArgs>? _companyNames;

        /// <summary>
        /// (Updatable) Name of the company in different locales
        /// 
        /// **SCIM++ Properties:**
        /// * idcsCompositeKey: [locale]
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: complex
        /// </summary>
        public InputList<Inputs.DomainsSettingCompanyNameArgs> CompanyNames
        {
            get => _companyNames ?? (_companyNames = new InputList<Inputs.DomainsSettingCompanyNameArgs>());
            set => _companyNames = value;
        }

        [Input("contactEmails")]
        private InputList<string>? _contactEmails;

        /// <summary>
        /// (Updatable) Contact emails used to notify tenants. Can be one or more user or group alias emails.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        public InputList<string> ContactEmails
        {
            get => _contactEmails ?? (_contactEmails = new InputList<string>());
            set => _contactEmails = value;
        }

        /// <summary>
        /// (Updatable) This value indicates whether Customer Service Representatives can login and have readOnly or readWrite access.  A value of 'none' means CSR cannot login to the services.
        /// 
        /// **SCIM++ Properties:**
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: true
        /// * returned: default
        /// * type: string
        /// </summary>
        [Input("csrAccess", required: true)]
        public Input<string> CsrAccess { get; set; } = null!;

        /// <summary>
        /// (Updatable) Indicates if the branding is default or custom
        /// 
        /// **SCIM++ Properties:**
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: boolean
        /// </summary>
        [Input("customBranding")]
        public Input<bool>? CustomBranding { get; set; }

        /// <summary>
        /// (Updatable) Storage URL location where the sanitized custom css is located
        /// 
        /// **Added In:** 20.1.3
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Input("customCssLocation")]
        public Input<string>? CustomCssLocation { get; set; }

        /// <summary>
        /// (Updatable) Storage URL location where the sanitized custom html is located
        /// 
        /// **Added In:** 20.1.3
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Input("customHtmlLocation")]
        public Input<string>? CustomHtmlLocation { get; set; }

        /// <summary>
        /// (Updatable) Custom translations (JSON String)
        /// 
        /// **Added In:** 20.1.3
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Input("customTranslation")]
        public Input<string>? CustomTranslation { get; set; }

        /// <summary>
        /// (Updatable) **Deprecated Since: 18.3.6**
        /// 
        /// **SCIM++ Properties:**
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string Indicates the default trust scope for all apps
        /// </summary>
        [Input("defaultTrustScope")]
        public Input<string>? DefaultTrustScope { get; set; }

        /// <summary>
        /// (Updatable) The level of diagnostic logging that is currently in effect. A level of 0 (zero) indicates that diagnostic logging is disabled. A level of 1 (one) indicates that diagnostic logging is enabled.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: integer
        /// * uniqueness: none
        /// </summary>
        [Input("diagnosticLevel")]
        public Input<int>? DiagnosticLevel { get; set; }

        /// <summary>
        /// (Updatable) Controls whether DiagnosticRecords for external search-operations (against SCIM resource-types in the Admin service) identify returned resources.  If true, indicates that for each successful external search-operation at least one DiagnosticRecord will include at least one identifier for each matching resource that is returned in that search-response.  If false, no DiagnosticRecord should be expected to identify returned resources for a search-operation.  The default value is false.
        /// 
        /// **Added In:** 2011192329
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: boolean
        /// * uniqueness: none
        /// </summary>
        [Input("diagnosticRecordForSearchIdentifiesReturnedResources")]
        public Input<bool>? DiagnosticRecordForSearchIdentifiesReturnedResources { get; set; }

        /// <summary>
        /// (Updatable) Indicates if Terms of Use is enabled in UI
        /// 
        /// **Added In:** 18.2.4
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: boolean
        /// * uniqueness: none
        /// </summary>
        [Input("enableTermsOfUse")]
        public Input<bool>? EnableTermsOfUse { get; set; }

        /// <summary>
        /// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Input("externalId")]
        public Input<string>? ExternalId { get; set; }

        /// <summary>
        /// (Updatable) Maximum duration for IAM User Principal Session Token expiry
        /// 
        /// **Added In:** 2307071836
        /// 
        /// **SCIM++ Properties:**
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: integer
        /// * uniqueness: none
        /// </summary>
        [Input("iamUpstSessionExpiry")]
        public Input<int>? IamUpstSessionExpiry { get; set; }

        /// <summary>
        /// The basic endpoint for the identity domain
        /// </summary>
        [Input("idcsEndpoint", required: true)]
        public Input<string> IdcsEndpoint { get; set; } = null!;

        [Input("images")]
        private InputList<Inputs.DomainsSettingImageArgs>? _images;

        /// <summary>
        /// (Updatable) References to various images
        /// 
        /// **SCIM++ Properties:**
        /// * idcsCompositeKey: [type]
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: complex
        /// </summary>
        public InputList<Inputs.DomainsSettingImageArgs> Images
        {
            get => _images ?? (_images = new InputList<Inputs.DomainsSettingImageArgs>());
            set => _images = value;
        }

        /// <summary>
        /// (Updatable) Indicates if 'hosted' option was selected
        /// 
        /// **Added In:** 20.1.3
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: boolean
        /// * uniqueness: none
        /// </summary>
        [Input("isHostedPage")]
        public Input<bool>? IsHostedPage { get; set; }

        /// <summary>
        /// (Updatable) Tenant issuer.
        /// 
        /// **Added In:** 20.1.3
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Input("issuer")]
        public Input<string>? Issuer { get; set; }

        /// <summary>
        /// (Updatable) Default location for purposes of localizing items such as currency, date and time format, numerical representations, and so on.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsCanonicalValueSourceFilter: attrName eq "locales" and attrValues.value eq "$(locale)"
        /// * idcsCanonicalValueSourceResourceType: AllowedValue
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Input("locale")]
        public Input<string>? Locale { get; set; }

        [Input("loginTexts")]
        private InputList<Inputs.DomainsSettingLoginTextArgs>? _loginTexts;

        /// <summary>
        /// (Updatable) Login text in different locales
        /// 
        /// **SCIM++ Properties:**
        /// * idcsCompositeKey: [locale]
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: complex
        /// </summary>
        public InputList<Inputs.DomainsSettingLoginTextArgs> LoginTexts
        {
            get => _loginTexts ?? (_loginTexts = new InputList<Inputs.DomainsSettingLoginTextArgs>());
            set => _loginTexts = value;
        }

        /// <summary>
        /// (Updatable) Limit the maximum return of CMVA for an App
        /// 
        /// **Added In:** 2111112015
        /// 
        /// **SCIM++ Properties:**
        /// * idcsMinValue: 0
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: integer
        /// * uniqueness: none
        /// </summary>
        [Input("maxNoOfAppCmvaToReturn")]
        public Input<int>? MaxNoOfAppCmvaToReturn { get; set; }

        /// <summary>
        /// (Updatable) Limit the maximum return of members for an AppRole
        /// 
        /// **Added In:** 2111112015
        /// 
        /// **SCIM++ Properties:**
        /// * idcsMinValue: 0
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: integer
        /// * uniqueness: none
        /// </summary>
        [Input("maxNoOfAppRoleMembersToReturn")]
        public Input<int>? MaxNoOfAppRoleMembersToReturn { get; set; }

        /// <summary>
        /// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: true
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: immutable
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: global
        /// </summary>
        [Input("ocid")]
        public Input<string>? Ocid { get; set; }

        /// <summary>
        /// (Updatable) Preferred written or spoken language used for localized user interfaces
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsCanonicalValueSourceFilter: attrName eq "languages" and attrValues.value eq "$(preferredLanguage)"
        /// * idcsCanonicalValueSourceResourceType: AllowedValue
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Input("preferredLanguage")]
        public Input<string>? PreferredLanguage { get; set; }

        /// <summary>
        /// (Updatable) Previous Tenant issuer. This is an Oracle Identity Cloud Service internal attribute which is not meant to be directly modified by ID Admin. Even if the request body (Settings) contains this attribute, the actual value will be set according to the Oracle Identity Cloud Service internal logic rather than solely based on the value provided in the request payload.
        /// 
        /// **Added In:** 20.1.3
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: request
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Input("prevIssuer")]
        public Input<string>? PrevIssuer { get; set; }

        /// <summary>
        /// (Updatable) Privacy Policy URL
        /// 
        /// **Added In:** 18.2.4
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Input("privacyPolicyUrl")]
        public Input<string>? PrivacyPolicyUrl { get; set; }

        [Input("purgeConfigs")]
        private InputList<Inputs.DomainsSettingPurgeConfigArgs>? _purgeConfigs;

        /// <summary>
        /// (Updatable) Purge Configs for different Resource Types
        /// 
        /// **Deprecated Since: 19.1.6**
        /// 
        /// **SCIM++ Properties:**
        /// * idcsCompositeKey: [resourceName]
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: complex
        /// </summary>
        public InputList<Inputs.DomainsSettingPurgeConfigArgs> PurgeConfigs
        {
            get => _purgeConfigs ?? (_purgeConfigs = new InputList<Inputs.DomainsSettingPurgeConfigArgs>());
            set => _purgeConfigs = value;
        }

        [Input("reAuthFactors")]
        private InputList<string>? _reAuthFactors;

        /// <summary>
        /// (Updatable) If reAuthWhenChangingMyAuthenticationFactors is true (default), this attribute specifies which re-authentication factor to use. Allowed value is \"password\".
        /// 
        /// **Added In:** 20.1.3
        /// 
        /// **SCIM++ Properties:**
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// </summary>
        public InputList<string> ReAuthFactors
        {
            get => _reAuthFactors ?? (_reAuthFactors = new InputList<string>());
            set => _reAuthFactors = value;
        }

        /// <summary>
        /// (Updatable) Specifies whether re-authentication is required or not when a user changes one of their security factors such as password or email. Default is true to ensure more secure behavior.
        /// 
        /// **Added In:** 20.1.3
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: boolean
        /// * uniqueness: none
        /// </summary>
        [Input("reAuthWhenChangingMyAuthenticationFactors")]
        public Input<bool>? ReAuthWhenChangingMyAuthenticationFactors { get; set; }

        /// <summary>
        /// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
        /// </summary>
        [Input("resourceTypeSchemaVersion")]
        public Input<string>? ResourceTypeSchemaVersion { get; set; }

        [Input("schemas", required: true)]
        private InputList<string>? _schemas;

        /// <summary>
        /// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: true
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        public InputList<string> Schemas
        {
            get => _schemas ?? (_schemas = new InputList<string>());
            set => _schemas = value;
        }

        /// <summary>
        /// (Updatable) By default, a service admin can list all users in stripe. If true, a service admin cannot list other users.
        /// 
        /// **Added In:** 2108190438
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: boolean
        /// </summary>
        [Input("serviceAdminCannotListOtherUsers")]
        public Input<bool>? ServiceAdminCannotListOtherUsers { get; set; }

        /// <summary>
        /// ID of the resource
        /// </summary>
        [Input("settingId", required: true)]
        public Input<string> SettingId { get; set; } = null!;

        /// <summary>
        /// (Updatable) Indicates if access on SigningCert is allowed to public or not
        /// 
        /// **Added In:** 17.3.4
        /// 
        /// **SCIM++ Properties:**
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: boolean
        /// </summary>
        [Input("signingCertPublicAccess")]
        public Input<bool>? SigningCertPublicAccess { get; set; }

        /// <summary>
        /// (Updatable) **Added In:** 20.1.3
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none Subject mapping user profile attribute. The input format should be SCIM compliant. This attribute should be of type String and multivalued to false.
        /// </summary>
        [Input("subMappingAttr")]
        public Input<string>? SubMappingAttr { get; set; }

        [Input("tags")]
        private InputList<Inputs.DomainsSettingTagArgs>? _tags;

        /// <summary>
        /// (Updatable) A list of tags on this resource.
        /// 
        /// **SCIM++ Properties:**
        /// * idcsCompositeKey: [key, value]
        /// * idcsSearchable: true
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: false
        /// * returned: request
        /// * type: complex
        /// * uniqueness: none
        /// </summary>
        public InputList<Inputs.DomainsSettingTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.DomainsSettingTagArgs>());
            set => _tags = value;
        }

        [Input("tenantCustomClaims")]
        private InputList<Inputs.DomainsSettingTenantCustomClaimArgs>? _tenantCustomClaims;

        /// <summary>
        /// (Updatable) Custom claims associated with the specific tenant
        /// 
        /// **Added In:** 18.4.2
        /// 
        /// **SCIM++ Properties:**
        /// * idcsCompositeKey: [name]
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: complex
        /// * uniqueness: none
        /// </summary>
        public InputList<Inputs.DomainsSettingTenantCustomClaimArgs> TenantCustomClaims
        {
            get => _tenantCustomClaims ?? (_tenantCustomClaims = new InputList<Inputs.DomainsSettingTenantCustomClaimArgs>());
            set => _tenantCustomClaims = value;
        }

        /// <summary>
        /// (Updatable) Terms of Use URL
        /// 
        /// **Added In:** 18.2.4
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Input("termsOfUseUrl")]
        public Input<string>? TermsOfUseUrl { get; set; }

        /// <summary>
        /// (Updatable) User's timezone
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsCanonicalValueSourceFilter: attrName eq "timezones" and attrValues.value eq "$(timezone)"
        /// * idcsCanonicalValueSourceResourceType: AllowedValue
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("timezone")]
        public Input<string>? Timezone { get; set; }

        public DomainsSettingArgs()
        {
        }
        public static new DomainsSettingArgs Empty => new DomainsSettingArgs();
    }

    public sealed class DomainsSettingState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) Indicates whether all the Apps in this customer tenancy should trust each other. A value of true overrides the 'defaultTrustScope' attribute here in Settings, as well as any App-specific 'trustScope' attribute, to force in effect 'trustScope=Account' for every App in this customer tenancy.
        /// 
        /// **Added In:** 18.1.6
        /// 
        /// **SCIM++ Properties:**
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: boolean
        /// </summary>
        [Input("accountAlwaysTrustScope")]
        public Input<bool>? AccountAlwaysTrustScope { get; set; }

        [Input("allowedDomains")]
        private InputList<string>? _allowedDomains;

        /// <summary>
        /// (Updatable) One or more email domains allowed in a user's email field. If unassigned, any domain is allowed.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        public InputList<string> AllowedDomains
        {
            get => _allowedDomains ?? (_allowedDomains = new InputList<string>());
            set => _allowedDomains = value;
        }

        [Input("allowedForgotPasswordFlowReturnUrls")]
        private InputList<string>? _allowedForgotPasswordFlowReturnUrls;

        /// <summary>
        /// (Updatable) If specified, indicates the set of Urls which can be returned to after successful forgot password flow
        /// 
        /// **Added In:** 19.3.3
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: true
        /// * required: false
        /// * mutability: readWrite
        /// * returned: default
        /// * uniqueness: none
        /// * caseExact: false
        /// </summary>
        public InputList<string> AllowedForgotPasswordFlowReturnUrls
        {
            get => _allowedForgotPasswordFlowReturnUrls ?? (_allowedForgotPasswordFlowReturnUrls = new InputList<string>());
            set
            {
                var emptySecret = Output.CreateSecret(ImmutableArray.Create<string>());
                _allowedForgotPasswordFlowReturnUrls = Output.All(value, emptySecret).Apply(v => v[0]);
            }
        }

        [Input("allowedNotificationRedirectUrls")]
        private InputList<string>? _allowedNotificationRedirectUrls;

        /// <summary>
        /// (Updatable) If specified, indicates the set of allowed notification redirect Urls which can be specified as the value of \"notificationRedirectUrl\" in the POST .../admin/v1/MePasswordResetRequestor request payload, which will then be included in the reset password email notification sent to a user as part of the forgot password / password reset flow.
        /// 
        /// **Added In:** 2009041201
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: true
        /// * required: false
        /// * mutability: readWrite
        /// * returned: default
        /// * uniqueness: none
        /// * caseExact: false
        /// </summary>
        public InputList<string> AllowedNotificationRedirectUrls
        {
            get => _allowedNotificationRedirectUrls ?? (_allowedNotificationRedirectUrls = new InputList<string>());
            set => _allowedNotificationRedirectUrls = value;
        }

        [Input("attributeSets")]
        private InputList<string>? _attributeSets;

        /// <summary>
        /// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
        /// </summary>
        public InputList<string> AttributeSets
        {
            get => _attributeSets ?? (_attributeSets = new InputList<string>());
            set => _attributeSets = value;
        }

        /// <summary>
        /// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
        /// </summary>
        [Input("attributes")]
        public Input<string>? Attributes { get; set; }

        /// <summary>
        /// (Updatable) Audit Event retention period. If set, overrides default of 30 days after which Audit Events will be purged
        /// 
        /// **Added In:** 19.2.1
        /// 
        /// **SCIM++ Properties:**
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: integer
        /// </summary>
        [Input("auditEventRetentionPeriod")]
        public Input<int>? AuditEventRetentionPeriod { get; set; }

        /// <summary>
        /// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
        /// </summary>
        [Input("authorization")]
        public Input<string>? Authorization { get; set; }

        /// <summary>
        /// (Updatable) Certificate Validation Config
        /// 
        /// **Added In:** 2010242156
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: complex
        /// * uniqueness: none
        /// </summary>
        [Input("certificateValidation")]
        public Input<Inputs.DomainsSettingCertificateValidationGetArgs>? CertificateValidation { get; set; }

        /// <summary>
        /// (Updatable) The attribute to store the cloud account name
        /// 
        /// **Deprecated Since: 2011192329**
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Input("cloudAccountName")]
        public Input<string>? CloudAccountName { get; set; }

        /// <summary>
        /// (Updatable) A complex attribute that specifies the Cloud Gate cross origin resource sharing settings.
        /// 
        /// **Added In:** 2011192329
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: complex
        /// * uniqueness: none
        /// </summary>
        [Input("cloudGateCorsSettings")]
        public Input<Inputs.DomainsSettingCloudGateCorsSettingsGetArgs>? CloudGateCorsSettings { get; set; }

        /// <summary>
        /// (Updatable) If specified, indicates the custom SIM Migrator Url which can be used while SIM to Oracle Identity Cloud Service CloudAccount Migration.
        /// 
        /// **Added In:** 2012271618
        /// 
        /// **SCIM++ Properties:**
        /// * type: string
        /// * multiValued: false
        /// * required: false
        /// * mutability: readWrite
        /// * returned: default
        /// * uniqueness: none
        /// * caseExact: false
        /// </summary>
        [Input("cloudMigrationCustomUrl")]
        public Input<string>? CloudMigrationCustomUrl { get; set; }

        /// <summary>
        /// (Updatable) CloudAccountMigration: Enable Custom SIM Migrator Url.
        /// 
        /// **Added In:** 2012271618
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: boolean
        /// * uniqueness: none
        /// </summary>
        [Input("cloudMigrationUrlEnabled")]
        public Input<bool>? CloudMigrationUrlEnabled { get; set; }

        [Input("companyNames")]
        private InputList<Inputs.DomainsSettingCompanyNameGetArgs>? _companyNames;

        /// <summary>
        /// (Updatable) Name of the company in different locales
        /// 
        /// **SCIM++ Properties:**
        /// * idcsCompositeKey: [locale]
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: complex
        /// </summary>
        public InputList<Inputs.DomainsSettingCompanyNameGetArgs> CompanyNames
        {
            get => _companyNames ?? (_companyNames = new InputList<Inputs.DomainsSettingCompanyNameGetArgs>());
            set => _companyNames = value;
        }

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Input("compartmentOcid")]
        public Input<string>? CompartmentOcid { get; set; }

        [Input("contactEmails")]
        private InputList<string>? _contactEmails;

        /// <summary>
        /// (Updatable) Contact emails used to notify tenants. Can be one or more user or group alias emails.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        public InputList<string> ContactEmails
        {
            get => _contactEmails ?? (_contactEmails = new InputList<string>());
            set => _contactEmails = value;
        }

        /// <summary>
        /// (Updatable) This value indicates whether Customer Service Representatives can login and have readOnly or readWrite access.  A value of 'none' means CSR cannot login to the services.
        /// 
        /// **SCIM++ Properties:**
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: true
        /// * returned: default
        /// * type: string
        /// </summary>
        [Input("csrAccess")]
        public Input<string>? CsrAccess { get; set; }

        /// <summary>
        /// (Updatable) Indicates if the branding is default or custom
        /// 
        /// **SCIM++ Properties:**
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: boolean
        /// </summary>
        [Input("customBranding")]
        public Input<bool>? CustomBranding { get; set; }

        /// <summary>
        /// (Updatable) Storage URL location where the sanitized custom css is located
        /// 
        /// **Added In:** 20.1.3
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Input("customCssLocation")]
        public Input<string>? CustomCssLocation { get; set; }

        /// <summary>
        /// (Updatable) Storage URL location where the sanitized custom html is located
        /// 
        /// **Added In:** 20.1.3
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Input("customHtmlLocation")]
        public Input<string>? CustomHtmlLocation { get; set; }

        /// <summary>
        /// (Updatable) Custom translations (JSON String)
        /// 
        /// **Added In:** 20.1.3
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Input("customTranslation")]
        public Input<string>? CustomTranslation { get; set; }

        [Input("defaultCompanyNames")]
        private InputList<Inputs.DomainsSettingDefaultCompanyNameGetArgs>? _defaultCompanyNames;

        /// <summary>
        /// (Updatable) Default name of the Company in different locales
        /// 
        /// **Added In:** 18.2.2
        /// 
        /// **SCIM++ Properties:**
        /// * idcsCompositeKey: [locale]
        /// * multiValued: true
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: complex
        /// </summary>
        public InputList<Inputs.DomainsSettingDefaultCompanyNameGetArgs> DefaultCompanyNames
        {
            get => _defaultCompanyNames ?? (_defaultCompanyNames = new InputList<Inputs.DomainsSettingDefaultCompanyNameGetArgs>());
            set => _defaultCompanyNames = value;
        }

        [Input("defaultImages")]
        private InputList<Inputs.DomainsSettingDefaultImageGetArgs>? _defaultImages;

        /// <summary>
        /// (Updatable) References to various images
        /// 
        /// **Added In:** 18.2.2
        /// 
        /// **SCIM++ Properties:**
        /// * idcsCompositeKey: [type]
        /// * multiValued: true
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: complex
        /// </summary>
        public InputList<Inputs.DomainsSettingDefaultImageGetArgs> DefaultImages
        {
            get => _defaultImages ?? (_defaultImages = new InputList<Inputs.DomainsSettingDefaultImageGetArgs>());
            set => _defaultImages = value;
        }

        [Input("defaultLoginTexts")]
        private InputList<Inputs.DomainsSettingDefaultLoginTextGetArgs>? _defaultLoginTexts;

        /// <summary>
        /// (Updatable) Default Login text in different locales
        /// 
        /// **Added In:** 18.2.2
        /// 
        /// **SCIM++ Properties:**
        /// * idcsCompositeKey: [locale]
        /// * multiValued: true
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: complex
        /// </summary>
        public InputList<Inputs.DomainsSettingDefaultLoginTextGetArgs> DefaultLoginTexts
        {
            get => _defaultLoginTexts ?? (_defaultLoginTexts = new InputList<Inputs.DomainsSettingDefaultLoginTextGetArgs>());
            set => _defaultLoginTexts = value;
        }

        /// <summary>
        /// (Updatable) **Deprecated Since: 18.3.6**
        /// 
        /// **SCIM++ Properties:**
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string Indicates the default trust scope for all apps
        /// </summary>
        [Input("defaultTrustScope")]
        public Input<string>? DefaultTrustScope { get; set; }

        /// <summary>
        /// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: boolean
        /// * uniqueness: none
        /// </summary>
        [Input("deleteInProgress")]
        public Input<bool>? DeleteInProgress { get; set; }

        /// <summary>
        /// (Updatable) The level of diagnostic logging that is currently in effect. A level of 0 (zero) indicates that diagnostic logging is disabled. A level of 1 (one) indicates that diagnostic logging is enabled.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: integer
        /// * uniqueness: none
        /// </summary>
        [Input("diagnosticLevel")]
        public Input<int>? DiagnosticLevel { get; set; }

        /// <summary>
        /// (Updatable) Controls whether DiagnosticRecords for external search-operations (against SCIM resource-types in the Admin service) identify returned resources.  If true, indicates that for each successful external search-operation at least one DiagnosticRecord will include at least one identifier for each matching resource that is returned in that search-response.  If false, no DiagnosticRecord should be expected to identify returned resources for a search-operation.  The default value is false.
        /// 
        /// **Added In:** 2011192329
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: boolean
        /// * uniqueness: none
        /// </summary>
        [Input("diagnosticRecordForSearchIdentifiesReturnedResources")]
        public Input<bool>? DiagnosticRecordForSearchIdentifiesReturnedResources { get; set; }

        /// <summary>
        /// (Updatable) The end time up to which diagnostic recording is switched on
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: dateTime
        /// * uniqueness: none
        /// </summary>
        [Input("diagnosticTracingUpto")]
        public Input<string>? DiagnosticTracingUpto { get; set; }

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Input("domainOcid")]
        public Input<string>? DomainOcid { get; set; }

        /// <summary>
        /// (Updatable) Indicates if Terms of Use is enabled in UI
        /// 
        /// **Added In:** 18.2.4
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: boolean
        /// * uniqueness: none
        /// </summary>
        [Input("enableTermsOfUse")]
        public Input<bool>? EnableTermsOfUse { get; set; }

        /// <summary>
        /// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Input("externalId")]
        public Input<string>? ExternalId { get; set; }

        /// <summary>
        /// (Updatable) Maximum duration for IAM User Principal Session Token expiry
        /// 
        /// **Added In:** 2307071836
        /// 
        /// **SCIM++ Properties:**
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: integer
        /// * uniqueness: none
        /// </summary>
        [Input("iamUpstSessionExpiry")]
        public Input<int>? IamUpstSessionExpiry { get; set; }

        [Input("idcsCreatedBies")]
        private InputList<Inputs.DomainsSettingIdcsCreatedByGetArgs>? _idcsCreatedBies;

        /// <summary>
        /// (Updatable) The User or App who created the Resource
        /// 
        /// **SCIM++ Properties:**
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: true
        /// * returned: default
        /// * type: complex
        /// </summary>
        public InputList<Inputs.DomainsSettingIdcsCreatedByGetArgs> IdcsCreatedBies
        {
            get => _idcsCreatedBies ?? (_idcsCreatedBies = new InputList<Inputs.DomainsSettingIdcsCreatedByGetArgs>());
            set => _idcsCreatedBies = value;
        }

        /// <summary>
        /// The basic endpoint for the identity domain
        /// </summary>
        [Input("idcsEndpoint")]
        public Input<string>? IdcsEndpoint { get; set; }

        [Input("idcsLastModifiedBies")]
        private InputList<Inputs.DomainsSettingIdcsLastModifiedByGetArgs>? _idcsLastModifiedBies;

        /// <summary>
        /// (Updatable) The User or App who modified the Resource
        /// 
        /// **SCIM++ Properties:**
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: complex
        /// </summary>
        public InputList<Inputs.DomainsSettingIdcsLastModifiedByGetArgs> IdcsLastModifiedBies
        {
            get => _idcsLastModifiedBies ?? (_idcsLastModifiedBies = new InputList<Inputs.DomainsSettingIdcsLastModifiedByGetArgs>());
            set => _idcsLastModifiedBies = value;
        }

        /// <summary>
        /// (Updatable) The release number when the resource was upgraded.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: request
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Input("idcsLastUpgradedInRelease")]
        public Input<string>? IdcsLastUpgradedInRelease { get; set; }

        [Input("idcsPreventedOperations")]
        private InputList<string>? _idcsPreventedOperations;

        /// <summary>
        /// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
        /// 
        /// **SCIM++ Properties:**
        /// * idcsSearchable: false
        /// * multiValued: true
        /// * mutability: readOnly
        /// * required: false
        /// * returned: request
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        public InputList<string> IdcsPreventedOperations
        {
            get => _idcsPreventedOperations ?? (_idcsPreventedOperations = new InputList<string>());
            set => _idcsPreventedOperations = value;
        }

        [Input("images")]
        private InputList<Inputs.DomainsSettingImageGetArgs>? _images;

        /// <summary>
        /// (Updatable) References to various images
        /// 
        /// **SCIM++ Properties:**
        /// * idcsCompositeKey: [type]
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: complex
        /// </summary>
        public InputList<Inputs.DomainsSettingImageGetArgs> Images
        {
            get => _images ?? (_images = new InputList<Inputs.DomainsSettingImageGetArgs>());
            set => _images = value;
        }

        /// <summary>
        /// (Updatable) Indicates if 'hosted' option was selected
        /// 
        /// **Added In:** 20.1.3
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: boolean
        /// * uniqueness: none
        /// </summary>
        [Input("isHostedPage")]
        public Input<bool>? IsHostedPage { get; set; }

        /// <summary>
        /// (Updatable) Tenant issuer.
        /// 
        /// **Added In:** 20.1.3
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Input("issuer")]
        public Input<string>? Issuer { get; set; }

        /// <summary>
        /// (Updatable) Default location for purposes of localizing items such as currency, date and time format, numerical representations, and so on.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsCanonicalValueSourceFilter: attrName eq "locales" and attrValues.value eq "$(locale)"
        /// * idcsCanonicalValueSourceResourceType: AllowedValue
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Input("locale")]
        public Input<string>? Locale { get; set; }

        [Input("loginTexts")]
        private InputList<Inputs.DomainsSettingLoginTextGetArgs>? _loginTexts;

        /// <summary>
        /// (Updatable) Login text in different locales
        /// 
        /// **SCIM++ Properties:**
        /// * idcsCompositeKey: [locale]
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: complex
        /// </summary>
        public InputList<Inputs.DomainsSettingLoginTextGetArgs> LoginTexts
        {
            get => _loginTexts ?? (_loginTexts = new InputList<Inputs.DomainsSettingLoginTextGetArgs>());
            set => _loginTexts = value;
        }

        /// <summary>
        /// (Updatable) Limit the maximum return of CMVA for an App
        /// 
        /// **Added In:** 2111112015
        /// 
        /// **SCIM++ Properties:**
        /// * idcsMinValue: 0
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: integer
        /// * uniqueness: none
        /// </summary>
        [Input("maxNoOfAppCmvaToReturn")]
        public Input<int>? MaxNoOfAppCmvaToReturn { get; set; }

        /// <summary>
        /// (Updatable) Limit the maximum return of members for an AppRole
        /// 
        /// **Added In:** 2111112015
        /// 
        /// **SCIM++ Properties:**
        /// * idcsMinValue: 0
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: integer
        /// * uniqueness: none
        /// </summary>
        [Input("maxNoOfAppRoleMembersToReturn")]
        public Input<int>? MaxNoOfAppRoleMembersToReturn { get; set; }

        [Input("metas")]
        private InputList<Inputs.DomainsSettingMetaGetArgs>? _metas;

        /// <summary>
        /// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
        /// * type: complex
        /// </summary>
        public InputList<Inputs.DomainsSettingMetaGetArgs> Metas
        {
            get => _metas ?? (_metas = new InputList<Inputs.DomainsSettingMetaGetArgs>());
            set => _metas = value;
        }

        /// <summary>
        /// (Updatable) Database Migration Status
        /// 
        /// **Added In:** 19.2.1
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: true
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Input("migrationStatus")]
        public Input<string>? MigrationStatus { get; set; }

        /// <summary>
        /// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: true
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: immutable
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: global
        /// </summary>
        [Input("ocid")]
        public Input<string>? Ocid { get; set; }

        /// <summary>
        /// (Updatable) On-Premises provisioning feature toggle.
        /// 
        /// **Added In:** 19.2.1
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: boolean
        /// * uniqueness: none
        /// </summary>
        [Input("onPremisesProvisioning")]
        public Input<bool>? OnPremisesProvisioning { get; set; }

        /// <summary>
        /// (Updatable) Preferred written or spoken language used for localized user interfaces
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsCanonicalValueSourceFilter: attrName eq "languages" and attrValues.value eq "$(preferredLanguage)"
        /// * idcsCanonicalValueSourceResourceType: AllowedValue
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Input("preferredLanguage")]
        public Input<string>? PreferredLanguage { get; set; }

        /// <summary>
        /// (Updatable) Previous Tenant issuer. This is an Oracle Identity Cloud Service internal attribute which is not meant to be directly modified by ID Admin. Even if the request body (Settings) contains this attribute, the actual value will be set according to the Oracle Identity Cloud Service internal logic rather than solely based on the value provided in the request payload.
        /// 
        /// **Added In:** 20.1.3
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: request
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Input("prevIssuer")]
        public Input<string>? PrevIssuer { get; set; }

        /// <summary>
        /// (Updatable) Privacy Policy URL
        /// 
        /// **Added In:** 18.2.4
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Input("privacyPolicyUrl")]
        public Input<string>? PrivacyPolicyUrl { get; set; }

        [Input("purgeConfigs")]
        private InputList<Inputs.DomainsSettingPurgeConfigGetArgs>? _purgeConfigs;

        /// <summary>
        /// (Updatable) Purge Configs for different Resource Types
        /// 
        /// **Deprecated Since: 19.1.6**
        /// 
        /// **SCIM++ Properties:**
        /// * idcsCompositeKey: [resourceName]
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: complex
        /// </summary>
        public InputList<Inputs.DomainsSettingPurgeConfigGetArgs> PurgeConfigs
        {
            get => _purgeConfigs ?? (_purgeConfigs = new InputList<Inputs.DomainsSettingPurgeConfigGetArgs>());
            set => _purgeConfigs = value;
        }

        [Input("reAuthFactors")]
        private InputList<string>? _reAuthFactors;

        /// <summary>
        /// (Updatable) If reAuthWhenChangingMyAuthenticationFactors is true (default), this attribute specifies which re-authentication factor to use. Allowed value is \"password\".
        /// 
        /// **Added In:** 20.1.3
        /// 
        /// **SCIM++ Properties:**
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// </summary>
        public InputList<string> ReAuthFactors
        {
            get => _reAuthFactors ?? (_reAuthFactors = new InputList<string>());
            set => _reAuthFactors = value;
        }

        /// <summary>
        /// (Updatable) Specifies whether re-authentication is required or not when a user changes one of their security factors such as password or email. Default is true to ensure more secure behavior.
        /// 
        /// **Added In:** 20.1.3
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: boolean
        /// * uniqueness: none
        /// </summary>
        [Input("reAuthWhenChangingMyAuthenticationFactors")]
        public Input<bool>? ReAuthWhenChangingMyAuthenticationFactors { get; set; }

        /// <summary>
        /// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
        /// </summary>
        [Input("resourceTypeSchemaVersion")]
        public Input<string>? ResourceTypeSchemaVersion { get; set; }

        [Input("schemas")]
        private InputList<string>? _schemas;

        /// <summary>
        /// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: true
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        public InputList<string> Schemas
        {
            get => _schemas ?? (_schemas = new InputList<string>());
            set => _schemas = value;
        }

        /// <summary>
        /// (Updatable) By default, a service admin can list all users in stripe. If true, a service admin cannot list other users.
        /// 
        /// **Added In:** 2108190438
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: boolean
        /// </summary>
        [Input("serviceAdminCannotListOtherUsers")]
        public Input<bool>? ServiceAdminCannotListOtherUsers { get; set; }

        /// <summary>
        /// ID of the resource
        /// </summary>
        [Input("settingId")]
        public Input<string>? SettingId { get; set; }

        /// <summary>
        /// (Updatable) Indicates if access on SigningCert is allowed to public or not
        /// 
        /// **Added In:** 17.3.4
        /// 
        /// **SCIM++ Properties:**
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: boolean
        /// </summary>
        [Input("signingCertPublicAccess")]
        public Input<bool>? SigningCertPublicAccess { get; set; }

        /// <summary>
        /// (Updatable) **Added In:** 20.1.3
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none Subject mapping user profile attribute. The input format should be SCIM compliant. This attribute should be of type String and multivalued to false.
        /// </summary>
        [Input("subMappingAttr")]
        public Input<string>? SubMappingAttr { get; set; }

        [Input("tags")]
        private InputList<Inputs.DomainsSettingTagGetArgs>? _tags;

        /// <summary>
        /// (Updatable) A list of tags on this resource.
        /// 
        /// **SCIM++ Properties:**
        /// * idcsCompositeKey: [key, value]
        /// * idcsSearchable: true
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: false
        /// * returned: request
        /// * type: complex
        /// * uniqueness: none
        /// </summary>
        public InputList<Inputs.DomainsSettingTagGetArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.DomainsSettingTagGetArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Input("tenancyOcid")]
        public Input<string>? TenancyOcid { get; set; }

        [Input("tenantCustomClaims")]
        private InputList<Inputs.DomainsSettingTenantCustomClaimGetArgs>? _tenantCustomClaims;

        /// <summary>
        /// (Updatable) Custom claims associated with the specific tenant
        /// 
        /// **Added In:** 18.4.2
        /// 
        /// **SCIM++ Properties:**
        /// * idcsCompositeKey: [name]
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: complex
        /// * uniqueness: none
        /// </summary>
        public InputList<Inputs.DomainsSettingTenantCustomClaimGetArgs> TenantCustomClaims
        {
            get => _tenantCustomClaims ?? (_tenantCustomClaims = new InputList<Inputs.DomainsSettingTenantCustomClaimGetArgs>());
            set => _tenantCustomClaims = value;
        }

        /// <summary>
        /// (Updatable) Terms of Use URL
        /// 
        /// **Added In:** 18.2.4
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Input("termsOfUseUrl")]
        public Input<string>? TermsOfUseUrl { get; set; }

        /// <summary>
        /// (Updatable) User's timezone
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsCanonicalValueSourceFilter: attrName eq "timezones" and attrValues.value eq "$(timezone)"
        /// * idcsCanonicalValueSourceResourceType: AllowedValue
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("timezone")]
        public Input<string>? Timezone { get; set; }

        public DomainsSettingState()
        {
        }
        public static new DomainsSettingState Empty => new DomainsSettingState();
    }
}
