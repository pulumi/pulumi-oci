// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Identity
{
    /// <summary>
    /// This resource provides the User resource in Oracle Cloud Infrastructure Identity Domains service.
    /// 
    /// Create a User
    /// 
    /// ## Import
    /// 
    /// Users can be imported using the `id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import oci:Identity/domainsUser:DomainsUser test_user "idcsEndpoint/{idcsEndpoint}/users/{userId}"
    /// ```
    /// </summary>
    [OciResourceType("oci:Identity/domainsUser:DomainsUser")]
    public partial class DomainsUser : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) Status of the account
        /// </summary>
        [Output("active")]
        public Output<bool> Active { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A physical mailing address for this User, as described in (address Element). Canonical Type Values of work, home, and other. The value attribute is a complex type with the following sub-attributes.
        /// </summary>
        [Output("addresses")]
        public Output<ImmutableArray<Outputs.DomainsUserAddress>> Addresses { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
        /// </summary>
        [Output("attributeSets")]
        public Output<ImmutableArray<string>> AttributeSets { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
        /// </summary>
        [Output("attributes")]
        public Output<string?> Attributes { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
        /// </summary>
        [Output("authorization")]
        public Output<string?> Authorization { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
        /// </summary>
        [Output("compartmentOcid")]
        public Output<string> CompartmentOcid { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
        /// </summary>
        [Output("deleteInProgress")]
        public Output<bool> DeleteInProgress { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Description of the user
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The displayName of the User's manager. OPTIONAL and READ-ONLY.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
        /// </summary>
        [Output("domainOcid")]
        public Output<string> DomainOcid { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A complex attribute representing emails
        /// </summary>
        [Output("emails")]
        public Output<ImmutableArray<Outputs.DomainsUserEmail>> Emails { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A list of entitlements for the User that represent a thing the User has.
        /// </summary>
        [Output("entitlements")]
        public Output<ImmutableArray<Outputs.DomainsUserEntitlement>> Entitlements { get; private set; } = null!;

        /// <summary>
        /// (Updatable) An identifier for the Resource as defined by the Service Consumer. READ-ONLY.
        /// </summary>
        [Output("externalId")]
        public Output<string> ExternalId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A list of groups that the user belongs to, either thorough direct membership, nested groups, or dynamically calculated
        /// </summary>
        [Output("groups")]
        public Output<ImmutableArray<Outputs.DomainsUserGroup>> Groups { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The User or App who created the Resource
        /// </summary>
        [Output("idcsCreatedBies")]
        public Output<ImmutableArray<Outputs.DomainsUserIdcsCreatedBy>> IdcsCreatedBies { get; private set; } = null!;

        /// <summary>
        /// The basic endpoint for the identity domain
        /// </summary>
        [Output("idcsEndpoint")]
        public Output<string> IdcsEndpoint { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The User or App who modified the Resource
        /// </summary>
        [Output("idcsLastModifiedBies")]
        public Output<ImmutableArray<Outputs.DomainsUserIdcsLastModifiedBy>> IdcsLastModifiedBies { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The release number when the resource was upgraded.
        /// </summary>
        [Output("idcsLastUpgradedInRelease")]
        public Output<string> IdcsLastUpgradedInRelease { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
        /// </summary>
        [Output("idcsPreventedOperations")]
        public Output<ImmutableArray<string>> IdcsPreventedOperations { get; private set; } = null!;

        /// <summary>
        /// (Updatable) User's instant messaging addresses
        /// </summary>
        [Output("ims")]
        public Output<ImmutableArray<Outputs.DomainsUserIm>> Ims { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Used to indicate the User's default location for purposes of localizing items such as currency, date and time format, numerical representations, and so on.
        /// </summary>
        [Output("locale")]
        public Output<string> Locale { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
        /// </summary>
        [Output("metas")]
        public Output<ImmutableArray<Outputs.DomainsUserMeta>> Metas { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Name of the account assigned to the User.
        /// </summary>
        [Output("name")]
        public Output<Outputs.DomainsUserName> Name { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Nick name
        /// </summary>
        [Output("nickName")]
        public Output<string> NickName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Ocid of the User's Support Account.
        /// </summary>
        [Output("ocid")]
        public Output<string> Ocid { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Password attribute. Max length for password is controlled via Password Policy.
        /// </summary>
        [Output("password")]
        public Output<string> Password { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Phone numbers
        /// </summary>
        [Output("phoneNumbers")]
        public Output<ImmutableArray<Outputs.DomainsUserPhoneNumber>> PhoneNumbers { get; private set; } = null!;

        /// <summary>
        /// (Updatable) URLs of photos for the User
        /// </summary>
        [Output("photos")]
        public Output<ImmutableArray<Outputs.DomainsUserPhoto>> Photos { get; private set; } = null!;

        /// <summary>
        /// (Updatable) User's preferred written or spoken language used for localized user interfaces
        /// </summary>
        [Output("preferredLanguage")]
        public Output<string> PreferredLanguage { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A fully-qualified URL to a page representing the User's online profile
        /// </summary>
        [Output("profileUrl")]
        public Output<string> ProfileUrl { get; private set; } = null!;

        /// <summary>
        /// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
        /// </summary>
        [Output("resourceTypeSchemaVersion")]
        public Output<string?> ResourceTypeSchemaVersion { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A list of roles for the User that collectively represent who the User is; e.g., 'Student', 'Faculty'.
        /// </summary>
        [Output("roles")]
        public Output<ImmutableArray<Outputs.DomainsUserRole>> Roles { get; private set; } = null!;

        /// <summary>
        /// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
        /// </summary>
        [Output("schemas")]
        public Output<ImmutableArray<string>> Schemas { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A list of tags on this resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.DomainsUserTag>> Tags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
        /// </summary>
        [Output("tenancyOcid")]
        public Output<string> TenancyOcid { get; private set; } = null!;

        /// <summary>
        /// (Updatable) User's timezone
        /// </summary>
        [Output("timezone")]
        public Output<string> Timezone { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Title
        /// </summary>
        [Output("title")]
        public Output<string> Title { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Enterprise User
        /// </summary>
        [Output("urnietfparamsscimschemasextensionenterprise20user")]
        public Output<Outputs.DomainsUserUrnietfparamsscimschemasextensionenterprise20user> Urnietfparamsscimschemasextensionenterprise20user { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure Tags.
        /// </summary>
        [Output("urnietfparamsscimschemasoracleidcsextensionOciTags")]
        public Output<Outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionOciTags> UrnietfparamsscimschemasoracleidcsextensionOciTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) This extension defines attributes to manage user's risk score.
        /// </summary>
        [Output("urnietfparamsscimschemasoracleidcsextensionadaptiveUser")]
        public Output<Outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUser> UrnietfparamsscimschemasoracleidcsextensionadaptiveUser { get; private set; } = null!;

        /// <summary>
        /// (Updatable) User's Capabilities
        /// </summary>
        [Output("urnietfparamsscimschemasoracleidcsextensioncapabilitiesUser")]
        public Output<Outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensioncapabilitiesUser> UrnietfparamsscimschemasoracleidcsextensioncapabilitiesUser { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Db Credentials User extension
        /// </summary>
        [Output("urnietfparamsscimschemasoracleidcsextensiondbCredentialsUser")]
        public Output<Outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbCredentialsUser> UrnietfparamsscimschemasoracleidcsextensiondbCredentialsUser { get; private set; } = null!;

        /// <summary>
        /// (Updatable) DB User extension
        /// </summary>
        [Output("urnietfparamsscimschemasoracleidcsextensiondbUserUsers")]
        public Output<ImmutableArray<Outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUser>> UrnietfparamsscimschemasoracleidcsextensiondbUserUsers { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Kerberos User extension
        /// </summary>
        [Output("urnietfparamsscimschemasoracleidcsextensionkerberosUserUser")]
        public Output<Outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionkerberosUserUser> UrnietfparamsscimschemasoracleidcsextensionkerberosUserUser { get; private set; } = null!;

        /// <summary>
        /// (Updatable) This extension defines attributes used to manage Multi-Factor Authentication within a service provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use MFA.
        /// </summary>
        [Output("urnietfparamsscimschemasoracleidcsextensionmfaUser")]
        public Output<Outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUser> UrnietfparamsscimschemasoracleidcsextensionmfaUser { get; private set; } = null!;

        /// <summary>
        /// (Updatable) This extension defines attributes used to manage account passwords within a Service Provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use passwords.
        /// </summary>
        [Output("urnietfparamsscimschemasoracleidcsextensionpasswordStateUsers")]
        public Output<ImmutableArray<Outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordStateUser>> UrnietfparamsscimschemasoracleidcsextensionpasswordStateUsers { get; private set; } = null!;

        /// <summary>
        /// (Updatable) This extension defines attributes used to manage Passwordless-Factor Authentication within a service provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use MFA.
        /// </summary>
        [Output("urnietfparamsscimschemasoracleidcsextensionpasswordlessUser")]
        public Output<Outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordlessUser> UrnietfparamsscimschemasoracleidcsextensionpasswordlessUser { get; private set; } = null!;

        /// <summary>
        /// (Updatable) POSIX User extension
        /// </summary>
        [Output("urnietfparamsscimschemasoracleidcsextensionposixUser")]
        public Output<Outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionposixUser> UrnietfparamsscimschemasoracleidcsextensionposixUser { get; private set; } = null!;

        /// <summary>
        /// (Updatable) This extension defines attributes used to store Security Questions of User.
        /// </summary>
        [Output("urnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUser")]
        public Output<Outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUser> UrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUser { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Controls whether a user can update themselves or not via User related APIs
        /// </summary>
        [Output("urnietfparamsscimschemasoracleidcsextensionselfChangeUser")]
        public Output<Outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfChangeUser> UrnietfparamsscimschemasoracleidcsextensionselfChangeUser { get; private set; } = null!;

        /// <summary>
        /// (Updatable) This extension defines attributes used to manage self registration profile linked to the user.
        /// </summary>
        [Output("urnietfparamsscimschemasoracleidcsextensionselfRegistrationUser")]
        public Output<Outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUser> UrnietfparamsscimschemasoracleidcsextensionselfRegistrationUser { get; private set; } = null!;

        /// <summary>
        /// (Updatable) SFF Auth Keys User extension
        /// </summary>
        [Output("urnietfparamsscimschemasoracleidcsextensionsffUser")]
        public Output<Outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionsffUser> UrnietfparamsscimschemasoracleidcsextensionsffUser { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Social User extension
        /// </summary>
        [Output("urnietfparamsscimschemasoracleidcsextensionsocialAccountUser")]
        public Output<Outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionsocialAccountUser> UrnietfparamsscimschemasoracleidcsextensionsocialAccountUser { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Terms Of Use extension
        /// </summary>
        [Output("urnietfparamsscimschemasoracleidcsextensiontermsOfUseUser")]
        public Output<Outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUser> UrnietfparamsscimschemasoracleidcsextensiontermsOfUseUser { get; private set; } = null!;

        /// <summary>
        /// (Updatable) User's credentials
        /// </summary>
        [Output("urnietfparamsscimschemasoracleidcsextensionuserCredentialsUsers")]
        public Output<ImmutableArray<Outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUser>> UrnietfparamsscimschemasoracleidcsextensionuserCredentialsUsers { get; private set; } = null!;

        /// <summary>
        /// (Updatable) This extension defines attributes used to manage account passwords within a service provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use passwords.
        /// </summary>
        [Output("urnietfparamsscimschemasoracleidcsextensionuserStateUser")]
        public Output<Outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserStateUser> UrnietfparamsscimschemasoracleidcsextensionuserStateUser { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure IAM User
        /// </summary>
        [Output("urnietfparamsscimschemasoracleidcsextensionuserUser")]
        public Output<Outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUser> UrnietfparamsscimschemasoracleidcsextensionuserUser { get; private set; } = null!;

        /// <summary>
        /// (Updatable) User name
        /// </summary>
        [Output("userName")]
        public Output<string> UserName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Used to identify the organization-to-user relationship
        /// </summary>
        [Output("userType")]
        public Output<string> UserType { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A list of certificates issued to the User.
        /// </summary>
        [Output("x509certificates")]
        public Output<ImmutableArray<Outputs.DomainsUserX509certificate>> X509certificates { get; private set; } = null!;


        /// <summary>
        /// Create a DomainsUser resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DomainsUser(string name, DomainsUserArgs args, CustomResourceOptions? options = null)
            : base("oci:Identity/domainsUser:DomainsUser", name, args ?? new DomainsUserArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DomainsUser(string name, Input<string> id, DomainsUserState? state = null, CustomResourceOptions? options = null)
            : base("oci:Identity/domainsUser:DomainsUser", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "password",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DomainsUser resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DomainsUser Get(string name, Input<string> id, DomainsUserState? state = null, CustomResourceOptions? options = null)
        {
            return new DomainsUser(name, id, state, options);
        }
    }

    public sealed class DomainsUserArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) Status of the account
        /// </summary>
        [Input("active")]
        public Input<bool>? Active { get; set; }

        [Input("addresses")]
        private InputList<Inputs.DomainsUserAddressArgs>? _addresses;

        /// <summary>
        /// (Updatable) A physical mailing address for this User, as described in (address Element). Canonical Type Values of work, home, and other. The value attribute is a complex type with the following sub-attributes.
        /// </summary>
        public InputList<Inputs.DomainsUserAddressArgs> Addresses
        {
            get => _addresses ?? (_addresses = new InputList<Inputs.DomainsUserAddressArgs>());
            set => _addresses = value;
        }

        [Input("attributeSets")]
        private InputList<string>? _attributeSets;

        /// <summary>
        /// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
        /// </summary>
        public InputList<string> AttributeSets
        {
            get => _attributeSets ?? (_attributeSets = new InputList<string>());
            set => _attributeSets = value;
        }

        /// <summary>
        /// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
        /// </summary>
        [Input("attributes")]
        public Input<string>? Attributes { get; set; }

        /// <summary>
        /// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
        /// </summary>
        [Input("authorization")]
        public Input<string>? Authorization { get; set; }

        /// <summary>
        /// (Updatable) Description of the user
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) The displayName of the User's manager. OPTIONAL and READ-ONLY.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("emails")]
        private InputList<Inputs.DomainsUserEmailArgs>? _emails;

        /// <summary>
        /// (Updatable) A complex attribute representing emails
        /// </summary>
        public InputList<Inputs.DomainsUserEmailArgs> Emails
        {
            get => _emails ?? (_emails = new InputList<Inputs.DomainsUserEmailArgs>());
            set => _emails = value;
        }

        [Input("entitlements")]
        private InputList<Inputs.DomainsUserEntitlementArgs>? _entitlements;

        /// <summary>
        /// (Updatable) A list of entitlements for the User that represent a thing the User has.
        /// </summary>
        public InputList<Inputs.DomainsUserEntitlementArgs> Entitlements
        {
            get => _entitlements ?? (_entitlements = new InputList<Inputs.DomainsUserEntitlementArgs>());
            set => _entitlements = value;
        }

        /// <summary>
        /// (Updatable) An identifier for the Resource as defined by the Service Consumer. READ-ONLY.
        /// </summary>
        [Input("externalId")]
        public Input<string>? ExternalId { get; set; }

        /// <summary>
        /// The basic endpoint for the identity domain
        /// </summary>
        [Input("idcsEndpoint", required: true)]
        public Input<string> IdcsEndpoint { get; set; } = null!;

        [Input("ims")]
        private InputList<Inputs.DomainsUserImArgs>? _ims;

        /// <summary>
        /// (Updatable) User's instant messaging addresses
        /// </summary>
        public InputList<Inputs.DomainsUserImArgs> Ims
        {
            get => _ims ?? (_ims = new InputList<Inputs.DomainsUserImArgs>());
            set => _ims = value;
        }

        /// <summary>
        /// (Updatable) Used to indicate the User's default location for purposes of localizing items such as currency, date and time format, numerical representations, and so on.
        /// </summary>
        [Input("locale")]
        public Input<string>? Locale { get; set; }

        /// <summary>
        /// (Updatable) Name of the account assigned to the User.
        /// </summary>
        [Input("name", required: true)]
        public Input<Inputs.DomainsUserNameArgs> Name { get; set; } = null!;

        /// <summary>
        /// (Updatable) Nick name
        /// </summary>
        [Input("nickName")]
        public Input<string>? NickName { get; set; }

        /// <summary>
        /// (Updatable) Ocid of the User's Support Account.
        /// </summary>
        [Input("ocid")]
        public Input<string>? Ocid { get; set; }

        [Input("password")]
        private Input<string>? _password;

        /// <summary>
        /// (Updatable) Password attribute. Max length for password is controlled via Password Policy.
        /// </summary>
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("phoneNumbers")]
        private InputList<Inputs.DomainsUserPhoneNumberArgs>? _phoneNumbers;

        /// <summary>
        /// (Updatable) Phone numbers
        /// </summary>
        public InputList<Inputs.DomainsUserPhoneNumberArgs> PhoneNumbers
        {
            get => _phoneNumbers ?? (_phoneNumbers = new InputList<Inputs.DomainsUserPhoneNumberArgs>());
            set => _phoneNumbers = value;
        }

        [Input("photos")]
        private InputList<Inputs.DomainsUserPhotoArgs>? _photos;

        /// <summary>
        /// (Updatable) URLs of photos for the User
        /// </summary>
        public InputList<Inputs.DomainsUserPhotoArgs> Photos
        {
            get => _photos ?? (_photos = new InputList<Inputs.DomainsUserPhotoArgs>());
            set => _photos = value;
        }

        /// <summary>
        /// (Updatable) User's preferred written or spoken language used for localized user interfaces
        /// </summary>
        [Input("preferredLanguage")]
        public Input<string>? PreferredLanguage { get; set; }

        /// <summary>
        /// (Updatable) A fully-qualified URL to a page representing the User's online profile
        /// </summary>
        [Input("profileUrl")]
        public Input<string>? ProfileUrl { get; set; }

        /// <summary>
        /// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
        /// </summary>
        [Input("resourceTypeSchemaVersion")]
        public Input<string>? ResourceTypeSchemaVersion { get; set; }

        [Input("roles")]
        private InputList<Inputs.DomainsUserRoleArgs>? _roles;

        /// <summary>
        /// (Updatable) A list of roles for the User that collectively represent who the User is; e.g., 'Student', 'Faculty'.
        /// </summary>
        public InputList<Inputs.DomainsUserRoleArgs> Roles
        {
            get => _roles ?? (_roles = new InputList<Inputs.DomainsUserRoleArgs>());
            set => _roles = value;
        }

        [Input("schemas", required: true)]
        private InputList<string>? _schemas;

        /// <summary>
        /// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
        /// </summary>
        public InputList<string> Schemas
        {
            get => _schemas ?? (_schemas = new InputList<string>());
            set => _schemas = value;
        }

        [Input("tags")]
        private InputList<Inputs.DomainsUserTagArgs>? _tags;

        /// <summary>
        /// (Updatable) A list of tags on this resource.
        /// </summary>
        public InputList<Inputs.DomainsUserTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.DomainsUserTagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// (Updatable) User's timezone
        /// </summary>
        [Input("timezone")]
        public Input<string>? Timezone { get; set; }

        /// <summary>
        /// (Updatable) Title
        /// </summary>
        [Input("title")]
        public Input<string>? Title { get; set; }

        /// <summary>
        /// (Updatable) Enterprise User
        /// </summary>
        [Input("urnietfparamsscimschemasextensionenterprise20user")]
        public Input<Inputs.DomainsUserUrnietfparamsscimschemasextensionenterprise20userArgs>? Urnietfparamsscimschemasextensionenterprise20user { get; set; }

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure Tags.
        /// </summary>
        [Input("urnietfparamsscimschemasoracleidcsextensionOciTags")]
        public Input<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionOciTagsArgs>? UrnietfparamsscimschemasoracleidcsextensionOciTags { get; set; }

        /// <summary>
        /// (Updatable) This extension defines attributes to manage user's risk score.
        /// </summary>
        [Input("urnietfparamsscimschemasoracleidcsextensionadaptiveUser")]
        public Input<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserArgs>? UrnietfparamsscimschemasoracleidcsextensionadaptiveUser { get; set; }

        /// <summary>
        /// (Updatable) User's Capabilities
        /// </summary>
        [Input("urnietfparamsscimschemasoracleidcsextensioncapabilitiesUser")]
        public Input<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensioncapabilitiesUserArgs>? UrnietfparamsscimschemasoracleidcsextensioncapabilitiesUser { get; set; }

        /// <summary>
        /// (Updatable) Db Credentials User extension
        /// </summary>
        [Input("urnietfparamsscimschemasoracleidcsextensiondbCredentialsUser")]
        public Input<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbCredentialsUserArgs>? UrnietfparamsscimschemasoracleidcsextensiondbCredentialsUser { get; set; }

        /// <summary>
        /// (Updatable) Kerberos User extension
        /// </summary>
        [Input("urnietfparamsscimschemasoracleidcsextensionkerberosUserUser")]
        public Input<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionkerberosUserUserArgs>? UrnietfparamsscimschemasoracleidcsextensionkerberosUserUser { get; set; }

        /// <summary>
        /// (Updatable) This extension defines attributes used to manage Multi-Factor Authentication within a service provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use MFA.
        /// </summary>
        [Input("urnietfparamsscimschemasoracleidcsextensionmfaUser")]
        public Input<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserArgs>? UrnietfparamsscimschemasoracleidcsextensionmfaUser { get; set; }

        /// <summary>
        /// (Updatable) This extension defines attributes used to manage Passwordless-Factor Authentication within a service provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use MFA.
        /// </summary>
        [Input("urnietfparamsscimschemasoracleidcsextensionpasswordlessUser")]
        public Input<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordlessUserArgs>? UrnietfparamsscimschemasoracleidcsextensionpasswordlessUser { get; set; }

        /// <summary>
        /// (Updatable) POSIX User extension
        /// </summary>
        [Input("urnietfparamsscimschemasoracleidcsextensionposixUser")]
        public Input<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionposixUserArgs>? UrnietfparamsscimschemasoracleidcsextensionposixUser { get; set; }

        /// <summary>
        /// (Updatable) This extension defines attributes used to store Security Questions of User.
        /// </summary>
        [Input("urnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUser")]
        public Input<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUserArgs>? UrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUser { get; set; }

        /// <summary>
        /// (Updatable) Controls whether a user can update themselves or not via User related APIs
        /// </summary>
        [Input("urnietfparamsscimschemasoracleidcsextensionselfChangeUser")]
        public Input<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfChangeUserArgs>? UrnietfparamsscimschemasoracleidcsextensionselfChangeUser { get; set; }

        /// <summary>
        /// (Updatable) This extension defines attributes used to manage self registration profile linked to the user.
        /// </summary>
        [Input("urnietfparamsscimschemasoracleidcsextensionselfRegistrationUser")]
        public Input<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUserArgs>? UrnietfparamsscimschemasoracleidcsextensionselfRegistrationUser { get; set; }

        /// <summary>
        /// (Updatable) SFF Auth Keys User extension
        /// </summary>
        [Input("urnietfparamsscimschemasoracleidcsextensionsffUser")]
        public Input<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionsffUserArgs>? UrnietfparamsscimschemasoracleidcsextensionsffUser { get; set; }

        /// <summary>
        /// (Updatable) Social User extension
        /// </summary>
        [Input("urnietfparamsscimschemasoracleidcsextensionsocialAccountUser")]
        public Input<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionsocialAccountUserArgs>? UrnietfparamsscimschemasoracleidcsextensionsocialAccountUser { get; set; }

        /// <summary>
        /// (Updatable) Terms Of Use extension
        /// </summary>
        [Input("urnietfparamsscimschemasoracleidcsextensiontermsOfUseUser")]
        public Input<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUserArgs>? UrnietfparamsscimschemasoracleidcsextensiontermsOfUseUser { get; set; }

        /// <summary>
        /// (Updatable) This extension defines attributes used to manage account passwords within a service provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use passwords.
        /// </summary>
        [Input("urnietfparamsscimschemasoracleidcsextensionuserStateUser")]
        public Input<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserStateUserArgs>? UrnietfparamsscimschemasoracleidcsextensionuserStateUser { get; set; }

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure IAM User
        /// </summary>
        [Input("urnietfparamsscimschemasoracleidcsextensionuserUser")]
        public Input<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserArgs>? UrnietfparamsscimschemasoracleidcsextensionuserUser { get; set; }

        /// <summary>
        /// (Updatable) User name
        /// </summary>
        [Input("userName", required: true)]
        public Input<string> UserName { get; set; } = null!;

        /// <summary>
        /// (Updatable) Used to identify the organization-to-user relationship
        /// </summary>
        [Input("userType")]
        public Input<string>? UserType { get; set; }

        [Input("x509certificates")]
        private InputList<Inputs.DomainsUserX509certificateArgs>? _x509certificates;

        /// <summary>
        /// (Updatable) A list of certificates issued to the User.
        /// </summary>
        public InputList<Inputs.DomainsUserX509certificateArgs> X509certificates
        {
            get => _x509certificates ?? (_x509certificates = new InputList<Inputs.DomainsUserX509certificateArgs>());
            set => _x509certificates = value;
        }

        public DomainsUserArgs()
        {
        }
        public static new DomainsUserArgs Empty => new DomainsUserArgs();
    }

    public sealed class DomainsUserState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) Status of the account
        /// </summary>
        [Input("active")]
        public Input<bool>? Active { get; set; }

        [Input("addresses")]
        private InputList<Inputs.DomainsUserAddressGetArgs>? _addresses;

        /// <summary>
        /// (Updatable) A physical mailing address for this User, as described in (address Element). Canonical Type Values of work, home, and other. The value attribute is a complex type with the following sub-attributes.
        /// </summary>
        public InputList<Inputs.DomainsUserAddressGetArgs> Addresses
        {
            get => _addresses ?? (_addresses = new InputList<Inputs.DomainsUserAddressGetArgs>());
            set => _addresses = value;
        }

        [Input("attributeSets")]
        private InputList<string>? _attributeSets;

        /// <summary>
        /// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
        /// </summary>
        public InputList<string> AttributeSets
        {
            get => _attributeSets ?? (_attributeSets = new InputList<string>());
            set => _attributeSets = value;
        }

        /// <summary>
        /// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
        /// </summary>
        [Input("attributes")]
        public Input<string>? Attributes { get; set; }

        /// <summary>
        /// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
        /// </summary>
        [Input("authorization")]
        public Input<string>? Authorization { get; set; }

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
        /// </summary>
        [Input("compartmentOcid")]
        public Input<string>? CompartmentOcid { get; set; }

        /// <summary>
        /// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
        /// </summary>
        [Input("deleteInProgress")]
        public Input<bool>? DeleteInProgress { get; set; }

        /// <summary>
        /// (Updatable) Description of the user
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) The displayName of the User's manager. OPTIONAL and READ-ONLY.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
        /// </summary>
        [Input("domainOcid")]
        public Input<string>? DomainOcid { get; set; }

        [Input("emails")]
        private InputList<Inputs.DomainsUserEmailGetArgs>? _emails;

        /// <summary>
        /// (Updatable) A complex attribute representing emails
        /// </summary>
        public InputList<Inputs.DomainsUserEmailGetArgs> Emails
        {
            get => _emails ?? (_emails = new InputList<Inputs.DomainsUserEmailGetArgs>());
            set => _emails = value;
        }

        [Input("entitlements")]
        private InputList<Inputs.DomainsUserEntitlementGetArgs>? _entitlements;

        /// <summary>
        /// (Updatable) A list of entitlements for the User that represent a thing the User has.
        /// </summary>
        public InputList<Inputs.DomainsUserEntitlementGetArgs> Entitlements
        {
            get => _entitlements ?? (_entitlements = new InputList<Inputs.DomainsUserEntitlementGetArgs>());
            set => _entitlements = value;
        }

        /// <summary>
        /// (Updatable) An identifier for the Resource as defined by the Service Consumer. READ-ONLY.
        /// </summary>
        [Input("externalId")]
        public Input<string>? ExternalId { get; set; }

        [Input("groups")]
        private InputList<Inputs.DomainsUserGroupGetArgs>? _groups;

        /// <summary>
        /// (Updatable) A list of groups that the user belongs to, either thorough direct membership, nested groups, or dynamically calculated
        /// </summary>
        public InputList<Inputs.DomainsUserGroupGetArgs> Groups
        {
            get => _groups ?? (_groups = new InputList<Inputs.DomainsUserGroupGetArgs>());
            set => _groups = value;
        }

        [Input("idcsCreatedBies")]
        private InputList<Inputs.DomainsUserIdcsCreatedByGetArgs>? _idcsCreatedBies;

        /// <summary>
        /// (Updatable) The User or App who created the Resource
        /// </summary>
        public InputList<Inputs.DomainsUserIdcsCreatedByGetArgs> IdcsCreatedBies
        {
            get => _idcsCreatedBies ?? (_idcsCreatedBies = new InputList<Inputs.DomainsUserIdcsCreatedByGetArgs>());
            set => _idcsCreatedBies = value;
        }

        /// <summary>
        /// The basic endpoint for the identity domain
        /// </summary>
        [Input("idcsEndpoint")]
        public Input<string>? IdcsEndpoint { get; set; }

        [Input("idcsLastModifiedBies")]
        private InputList<Inputs.DomainsUserIdcsLastModifiedByGetArgs>? _idcsLastModifiedBies;

        /// <summary>
        /// (Updatable) The User or App who modified the Resource
        /// </summary>
        public InputList<Inputs.DomainsUserIdcsLastModifiedByGetArgs> IdcsLastModifiedBies
        {
            get => _idcsLastModifiedBies ?? (_idcsLastModifiedBies = new InputList<Inputs.DomainsUserIdcsLastModifiedByGetArgs>());
            set => _idcsLastModifiedBies = value;
        }

        /// <summary>
        /// (Updatable) The release number when the resource was upgraded.
        /// </summary>
        [Input("idcsLastUpgradedInRelease")]
        public Input<string>? IdcsLastUpgradedInRelease { get; set; }

        [Input("idcsPreventedOperations")]
        private InputList<string>? _idcsPreventedOperations;

        /// <summary>
        /// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
        /// </summary>
        public InputList<string> IdcsPreventedOperations
        {
            get => _idcsPreventedOperations ?? (_idcsPreventedOperations = new InputList<string>());
            set => _idcsPreventedOperations = value;
        }

        [Input("ims")]
        private InputList<Inputs.DomainsUserImGetArgs>? _ims;

        /// <summary>
        /// (Updatable) User's instant messaging addresses
        /// </summary>
        public InputList<Inputs.DomainsUserImGetArgs> Ims
        {
            get => _ims ?? (_ims = new InputList<Inputs.DomainsUserImGetArgs>());
            set => _ims = value;
        }

        /// <summary>
        /// (Updatable) Used to indicate the User's default location for purposes of localizing items such as currency, date and time format, numerical representations, and so on.
        /// </summary>
        [Input("locale")]
        public Input<string>? Locale { get; set; }

        [Input("metas")]
        private InputList<Inputs.DomainsUserMetaGetArgs>? _metas;

        /// <summary>
        /// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
        /// </summary>
        public InputList<Inputs.DomainsUserMetaGetArgs> Metas
        {
            get => _metas ?? (_metas = new InputList<Inputs.DomainsUserMetaGetArgs>());
            set => _metas = value;
        }

        /// <summary>
        /// (Updatable) Name of the account assigned to the User.
        /// </summary>
        [Input("name")]
        public Input<Inputs.DomainsUserNameGetArgs>? Name { get; set; }

        /// <summary>
        /// (Updatable) Nick name
        /// </summary>
        [Input("nickName")]
        public Input<string>? NickName { get; set; }

        /// <summary>
        /// (Updatable) Ocid of the User's Support Account.
        /// </summary>
        [Input("ocid")]
        public Input<string>? Ocid { get; set; }

        [Input("password")]
        private Input<string>? _password;

        /// <summary>
        /// (Updatable) Password attribute. Max length for password is controlled via Password Policy.
        /// </summary>
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("phoneNumbers")]
        private InputList<Inputs.DomainsUserPhoneNumberGetArgs>? _phoneNumbers;

        /// <summary>
        /// (Updatable) Phone numbers
        /// </summary>
        public InputList<Inputs.DomainsUserPhoneNumberGetArgs> PhoneNumbers
        {
            get => _phoneNumbers ?? (_phoneNumbers = new InputList<Inputs.DomainsUserPhoneNumberGetArgs>());
            set => _phoneNumbers = value;
        }

        [Input("photos")]
        private InputList<Inputs.DomainsUserPhotoGetArgs>? _photos;

        /// <summary>
        /// (Updatable) URLs of photos for the User
        /// </summary>
        public InputList<Inputs.DomainsUserPhotoGetArgs> Photos
        {
            get => _photos ?? (_photos = new InputList<Inputs.DomainsUserPhotoGetArgs>());
            set => _photos = value;
        }

        /// <summary>
        /// (Updatable) User's preferred written or spoken language used for localized user interfaces
        /// </summary>
        [Input("preferredLanguage")]
        public Input<string>? PreferredLanguage { get; set; }

        /// <summary>
        /// (Updatable) A fully-qualified URL to a page representing the User's online profile
        /// </summary>
        [Input("profileUrl")]
        public Input<string>? ProfileUrl { get; set; }

        /// <summary>
        /// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
        /// </summary>
        [Input("resourceTypeSchemaVersion")]
        public Input<string>? ResourceTypeSchemaVersion { get; set; }

        [Input("roles")]
        private InputList<Inputs.DomainsUserRoleGetArgs>? _roles;

        /// <summary>
        /// (Updatable) A list of roles for the User that collectively represent who the User is; e.g., 'Student', 'Faculty'.
        /// </summary>
        public InputList<Inputs.DomainsUserRoleGetArgs> Roles
        {
            get => _roles ?? (_roles = new InputList<Inputs.DomainsUserRoleGetArgs>());
            set => _roles = value;
        }

        [Input("schemas")]
        private InputList<string>? _schemas;

        /// <summary>
        /// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
        /// </summary>
        public InputList<string> Schemas
        {
            get => _schemas ?? (_schemas = new InputList<string>());
            set => _schemas = value;
        }

        [Input("tags")]
        private InputList<Inputs.DomainsUserTagGetArgs>? _tags;

        /// <summary>
        /// (Updatable) A list of tags on this resource.
        /// </summary>
        public InputList<Inputs.DomainsUserTagGetArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.DomainsUserTagGetArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
        /// </summary>
        [Input("tenancyOcid")]
        public Input<string>? TenancyOcid { get; set; }

        /// <summary>
        /// (Updatable) User's timezone
        /// </summary>
        [Input("timezone")]
        public Input<string>? Timezone { get; set; }

        /// <summary>
        /// (Updatable) Title
        /// </summary>
        [Input("title")]
        public Input<string>? Title { get; set; }

        /// <summary>
        /// (Updatable) Enterprise User
        /// </summary>
        [Input("urnietfparamsscimschemasextensionenterprise20user")]
        public Input<Inputs.DomainsUserUrnietfparamsscimschemasextensionenterprise20userGetArgs>? Urnietfparamsscimschemasextensionenterprise20user { get; set; }

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure Tags.
        /// </summary>
        [Input("urnietfparamsscimschemasoracleidcsextensionOciTags")]
        public Input<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionOciTagsGetArgs>? UrnietfparamsscimschemasoracleidcsextensionOciTags { get; set; }

        /// <summary>
        /// (Updatable) This extension defines attributes to manage user's risk score.
        /// </summary>
        [Input("urnietfparamsscimschemasoracleidcsextensionadaptiveUser")]
        public Input<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserGetArgs>? UrnietfparamsscimschemasoracleidcsextensionadaptiveUser { get; set; }

        /// <summary>
        /// (Updatable) User's Capabilities
        /// </summary>
        [Input("urnietfparamsscimschemasoracleidcsextensioncapabilitiesUser")]
        public Input<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensioncapabilitiesUserGetArgs>? UrnietfparamsscimschemasoracleidcsextensioncapabilitiesUser { get; set; }

        /// <summary>
        /// (Updatable) Db Credentials User extension
        /// </summary>
        [Input("urnietfparamsscimschemasoracleidcsextensiondbCredentialsUser")]
        public Input<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbCredentialsUserGetArgs>? UrnietfparamsscimschemasoracleidcsextensiondbCredentialsUser { get; set; }

        [Input("urnietfparamsscimschemasoracleidcsextensiondbUserUsers")]
        private InputList<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserGetArgs>? _urnietfparamsscimschemasoracleidcsextensiondbUserUsers;

        /// <summary>
        /// (Updatable) DB User extension
        /// </summary>
        public InputList<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserGetArgs> UrnietfparamsscimschemasoracleidcsextensiondbUserUsers
        {
            get => _urnietfparamsscimschemasoracleidcsextensiondbUserUsers ?? (_urnietfparamsscimschemasoracleidcsextensiondbUserUsers = new InputList<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserGetArgs>());
            set => _urnietfparamsscimschemasoracleidcsextensiondbUserUsers = value;
        }

        /// <summary>
        /// (Updatable) Kerberos User extension
        /// </summary>
        [Input("urnietfparamsscimschemasoracleidcsextensionkerberosUserUser")]
        public Input<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionkerberosUserUserGetArgs>? UrnietfparamsscimschemasoracleidcsextensionkerberosUserUser { get; set; }

        /// <summary>
        /// (Updatable) This extension defines attributes used to manage Multi-Factor Authentication within a service provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use MFA.
        /// </summary>
        [Input("urnietfparamsscimschemasoracleidcsextensionmfaUser")]
        public Input<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserGetArgs>? UrnietfparamsscimschemasoracleidcsextensionmfaUser { get; set; }

        [Input("urnietfparamsscimschemasoracleidcsextensionpasswordStateUsers")]
        private InputList<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordStateUserGetArgs>? _urnietfparamsscimschemasoracleidcsextensionpasswordStateUsers;

        /// <summary>
        /// (Updatable) This extension defines attributes used to manage account passwords within a Service Provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use passwords.
        /// </summary>
        public InputList<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordStateUserGetArgs> UrnietfparamsscimschemasoracleidcsextensionpasswordStateUsers
        {
            get => _urnietfparamsscimschemasoracleidcsextensionpasswordStateUsers ?? (_urnietfparamsscimschemasoracleidcsextensionpasswordStateUsers = new InputList<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordStateUserGetArgs>());
            set => _urnietfparamsscimschemasoracleidcsextensionpasswordStateUsers = value;
        }

        /// <summary>
        /// (Updatable) This extension defines attributes used to manage Passwordless-Factor Authentication within a service provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use MFA.
        /// </summary>
        [Input("urnietfparamsscimschemasoracleidcsextensionpasswordlessUser")]
        public Input<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordlessUserGetArgs>? UrnietfparamsscimschemasoracleidcsextensionpasswordlessUser { get; set; }

        /// <summary>
        /// (Updatable) POSIX User extension
        /// </summary>
        [Input("urnietfparamsscimschemasoracleidcsextensionposixUser")]
        public Input<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionposixUserGetArgs>? UrnietfparamsscimschemasoracleidcsextensionposixUser { get; set; }

        /// <summary>
        /// (Updatable) This extension defines attributes used to store Security Questions of User.
        /// </summary>
        [Input("urnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUser")]
        public Input<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUserGetArgs>? UrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUser { get; set; }

        /// <summary>
        /// (Updatable) Controls whether a user can update themselves or not via User related APIs
        /// </summary>
        [Input("urnietfparamsscimschemasoracleidcsextensionselfChangeUser")]
        public Input<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfChangeUserGetArgs>? UrnietfparamsscimschemasoracleidcsextensionselfChangeUser { get; set; }

        /// <summary>
        /// (Updatable) This extension defines attributes used to manage self registration profile linked to the user.
        /// </summary>
        [Input("urnietfparamsscimschemasoracleidcsextensionselfRegistrationUser")]
        public Input<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUserGetArgs>? UrnietfparamsscimschemasoracleidcsextensionselfRegistrationUser { get; set; }

        /// <summary>
        /// (Updatable) SFF Auth Keys User extension
        /// </summary>
        [Input("urnietfparamsscimschemasoracleidcsextensionsffUser")]
        public Input<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionsffUserGetArgs>? UrnietfparamsscimschemasoracleidcsextensionsffUser { get; set; }

        /// <summary>
        /// (Updatable) Social User extension
        /// </summary>
        [Input("urnietfparamsscimschemasoracleidcsextensionsocialAccountUser")]
        public Input<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionsocialAccountUserGetArgs>? UrnietfparamsscimschemasoracleidcsextensionsocialAccountUser { get; set; }

        /// <summary>
        /// (Updatable) Terms Of Use extension
        /// </summary>
        [Input("urnietfparamsscimschemasoracleidcsextensiontermsOfUseUser")]
        public Input<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUserGetArgs>? UrnietfparamsscimschemasoracleidcsextensiontermsOfUseUser { get; set; }

        [Input("urnietfparamsscimschemasoracleidcsextensionuserCredentialsUsers")]
        private InputList<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserGetArgs>? _urnietfparamsscimschemasoracleidcsextensionuserCredentialsUsers;

        /// <summary>
        /// (Updatable) User's credentials
        /// </summary>
        public InputList<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserGetArgs> UrnietfparamsscimschemasoracleidcsextensionuserCredentialsUsers
        {
            get => _urnietfparamsscimschemasoracleidcsextensionuserCredentialsUsers ?? (_urnietfparamsscimschemasoracleidcsextensionuserCredentialsUsers = new InputList<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserGetArgs>());
            set => _urnietfparamsscimschemasoracleidcsextensionuserCredentialsUsers = value;
        }

        /// <summary>
        /// (Updatable) This extension defines attributes used to manage account passwords within a service provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use passwords.
        /// </summary>
        [Input("urnietfparamsscimschemasoracleidcsextensionuserStateUser")]
        public Input<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserStateUserGetArgs>? UrnietfparamsscimschemasoracleidcsextensionuserStateUser { get; set; }

        /// <summary>
        /// (Updatable) Oracle Cloud Infrastructure IAM User
        /// </summary>
        [Input("urnietfparamsscimschemasoracleidcsextensionuserUser")]
        public Input<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserGetArgs>? UrnietfparamsscimschemasoracleidcsextensionuserUser { get; set; }

        /// <summary>
        /// (Updatable) User name
        /// </summary>
        [Input("userName")]
        public Input<string>? UserName { get; set; }

        /// <summary>
        /// (Updatable) Used to identify the organization-to-user relationship
        /// </summary>
        [Input("userType")]
        public Input<string>? UserType { get; set; }

        [Input("x509certificates")]
        private InputList<Inputs.DomainsUserX509certificateGetArgs>? _x509certificates;

        /// <summary>
        /// (Updatable) A list of certificates issued to the User.
        /// </summary>
        public InputList<Inputs.DomainsUserX509certificateGetArgs> X509certificates
        {
            get => _x509certificates ?? (_x509certificates = new InputList<Inputs.DomainsUserX509certificateGetArgs>());
            set => _x509certificates = value;
        }

        public DomainsUserState()
        {
        }
        public static new DomainsUserState Empty => new DomainsUserState();
    }
}
