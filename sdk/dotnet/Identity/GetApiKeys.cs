// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Identity
{
    public static class GetApiKeys
    {
        /// <summary>
        /// This data source provides the list of Api Keys in Oracle Cloud Infrastructure Identity service.
        /// 
        /// Lists the API signing keys for the specified user. A user can have a maximum of three keys.
        /// 
        /// Every user has permission to use this API call for *their own user ID*.  An administrator in your
        /// organization does not need to write a policy to give users this ability.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testApiKeys = Oci.Identity.GetApiKeys.Invoke(new()
        ///     {
        ///         UserId = testUser.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetApiKeysResult> InvokeAsync(GetApiKeysArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetApiKeysResult>("oci:Identity/getApiKeys:getApiKeys", args ?? new GetApiKeysArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Api Keys in Oracle Cloud Infrastructure Identity service.
        /// 
        /// Lists the API signing keys for the specified user. A user can have a maximum of three keys.
        /// 
        /// Every user has permission to use this API call for *their own user ID*.  An administrator in your
        /// organization does not need to write a policy to give users this ability.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testApiKeys = Oci.Identity.GetApiKeys.Invoke(new()
        ///     {
        ///         UserId = testUser.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetApiKeysResult> Invoke(GetApiKeysInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetApiKeysResult>("oci:Identity/getApiKeys:getApiKeys", args ?? new GetApiKeysInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApiKeysArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetApiKeysFilterArgs>? _filters;
        public List<Inputs.GetApiKeysFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetApiKeysFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The OCID of the user.
        /// </summary>
        [Input("userId", required: true)]
        public string UserId { get; set; } = null!;

        public GetApiKeysArgs()
        {
        }
        public static new GetApiKeysArgs Empty => new GetApiKeysArgs();
    }

    public sealed class GetApiKeysInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetApiKeysFilterInputArgs>? _filters;
        public InputList<Inputs.GetApiKeysFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetApiKeysFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The OCID of the user.
        /// </summary>
        [Input("userId", required: true)]
        public Input<string> UserId { get; set; } = null!;

        public GetApiKeysInvokeArgs()
        {
        }
        public static new GetApiKeysInvokeArgs Empty => new GetApiKeysInvokeArgs();
    }


    [OutputType]
    public sealed class GetApiKeysResult
    {
        /// <summary>
        /// The list of api_keys.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetApiKeysApiKeyResult> ApiKeys;
        public readonly ImmutableArray<Outputs.GetApiKeysFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The OCID of the user the key belongs to.
        /// </summary>
        public readonly string UserId;

        [OutputConstructor]
        private GetApiKeysResult(
            ImmutableArray<Outputs.GetApiKeysApiKeyResult> apiKeys,

            ImmutableArray<Outputs.GetApiKeysFilterResult> filters,

            string id,

            string userId)
        {
            ApiKeys = apiKeys;
            Filters = filters;
            Id = id;
            UserId = userId;
        }
    }
}
