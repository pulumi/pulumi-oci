// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Identity
{
    public static class GetAuthTokens
    {
        /// <summary>
        /// This data source provides the list of Auth Tokens in Oracle Cloud Infrastructure Identity service.
        /// 
        /// Lists the auth tokens for the specified user. The returned object contains the token's OCID, but not
        /// the token itself. The actual token is returned only upon creation.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testAuthTokens = Output.Create(Oci.Identity.GetAuthTokens.InvokeAsync(new Oci.Identity.GetAuthTokensArgs
        ///         {
        ///             UserId = oci_identity_user.Test_user.Id,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetAuthTokensResult> InvokeAsync(GetAuthTokensArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAuthTokensResult>("oci:Identity/getAuthTokens:getAuthTokens", args ?? new GetAuthTokensArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Auth Tokens in Oracle Cloud Infrastructure Identity service.
        /// 
        /// Lists the auth tokens for the specified user. The returned object contains the token's OCID, but not
        /// the token itself. The actual token is returned only upon creation.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testAuthTokens = Output.Create(Oci.Identity.GetAuthTokens.InvokeAsync(new Oci.Identity.GetAuthTokensArgs
        ///         {
        ///             UserId = oci_identity_user.Test_user.Id,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetAuthTokensResult> Invoke(GetAuthTokensInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetAuthTokensResult>("oci:Identity/getAuthTokens:getAuthTokens", args ?? new GetAuthTokensInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAuthTokensArgs : Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetAuthTokensFilterArgs>? _filters;
        public List<Inputs.GetAuthTokensFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetAuthTokensFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The OCID of the user.
        /// </summary>
        [Input("userId", required: true)]
        public string UserId { get; set; } = null!;

        public GetAuthTokensArgs()
        {
        }
    }

    public sealed class GetAuthTokensInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetAuthTokensFilterInputArgs>? _filters;
        public InputList<Inputs.GetAuthTokensFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetAuthTokensFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The OCID of the user.
        /// </summary>
        [Input("userId", required: true)]
        public Input<string> UserId { get; set; } = null!;

        public GetAuthTokensInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetAuthTokensResult
    {
        public readonly ImmutableArray<Outputs.GetAuthTokensFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of tokens.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAuthTokensTokenResult> Tokens;
        /// <summary>
        /// The OCID of the user the auth token belongs to.
        /// </summary>
        public readonly string UserId;

        [OutputConstructor]
        private GetAuthTokensResult(
            ImmutableArray<Outputs.GetAuthTokensFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetAuthTokensTokenResult> tokens,

            string userId)
        {
            Filters = filters;
            Id = id;
            Tokens = tokens;
            UserId = userId;
        }
    }
}
