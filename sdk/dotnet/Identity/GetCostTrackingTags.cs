// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Identity
{
    public static class GetCostTrackingTags
    {
        /// <summary>
        /// This data source provides the list of Cost Tracking Tags in Oracle Cloud Infrastructure Identity service.
        /// 
        /// Lists all the tags enabled for cost-tracking in the specified tenancy. For information about
        /// cost-tracking tags, see [Using Cost-tracking Tags](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/taggingoverview.htm#costs).
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testCostTrackingTags = Oci.Identity.GetCostTrackingTags.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetCostTrackingTagsResult> InvokeAsync(GetCostTrackingTagsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCostTrackingTagsResult>("oci:Identity/getCostTrackingTags:getCostTrackingTags", args ?? new GetCostTrackingTagsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Cost Tracking Tags in Oracle Cloud Infrastructure Identity service.
        /// 
        /// Lists all the tags enabled for cost-tracking in the specified tenancy. For information about
        /// cost-tracking tags, see [Using Cost-tracking Tags](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/taggingoverview.htm#costs).
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testCostTrackingTags = Oci.Identity.GetCostTrackingTags.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetCostTrackingTagsResult> Invoke(GetCostTrackingTagsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCostTrackingTagsResult>("oci:Identity/getCostTrackingTags:getCostTrackingTags", args ?? new GetCostTrackingTagsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCostTrackingTagsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment (remember that the tenancy is simply the root compartment).
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetCostTrackingTagsFilterArgs>? _filters;
        public List<Inputs.GetCostTrackingTagsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetCostTrackingTagsFilterArgs>());
            set => _filters = value;
        }

        public GetCostTrackingTagsArgs()
        {
        }
        public static new GetCostTrackingTagsArgs Empty => new GetCostTrackingTagsArgs();
    }

    public sealed class GetCostTrackingTagsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment (remember that the tenancy is simply the root compartment).
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetCostTrackingTagsFilterInputArgs>? _filters;
        public InputList<Inputs.GetCostTrackingTagsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetCostTrackingTagsFilterInputArgs>());
            set => _filters = value;
        }

        public GetCostTrackingTagsInvokeArgs()
        {
        }
        public static new GetCostTrackingTagsInvokeArgs Empty => new GetCostTrackingTagsInvokeArgs();
    }


    [OutputType]
    public sealed class GetCostTrackingTagsResult
    {
        /// <summary>
        /// The OCID of the compartment that contains the tag definition.
        /// </summary>
        public readonly string CompartmentId;
        public readonly ImmutableArray<Outputs.GetCostTrackingTagsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of tags.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCostTrackingTagsTagResult> Tags;

        [OutputConstructor]
        private GetCostTrackingTagsResult(
            string compartmentId,

            ImmutableArray<Outputs.GetCostTrackingTagsFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetCostTrackingTagsTagResult> tags)
        {
            CompartmentId = compartmentId;
            Filters = filters;
            Id = id;
            Tags = tags;
        }
    }
}
