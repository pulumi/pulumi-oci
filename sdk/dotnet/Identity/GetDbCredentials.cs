// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Identity
{
    public static class GetDbCredentials
    {
        /// <summary>
        /// This data source provides the list of Db Credentials in Oracle Cloud Infrastructure Identity service.
        /// 
        /// Lists the DB credentials for the specified user. The returned object contains the credential's OCID
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDbCredentials = Oci.Identity.GetDbCredentials.Invoke(new()
        ///     {
        ///         UserId = oci_identity_user.Test_user.Id,
        ///         Name = @var.Db_credential_name,
        ///         State = @var.Db_credential_state,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetDbCredentialsResult> InvokeAsync(GetDbCredentialsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDbCredentialsResult>("oci:Identity/getDbCredentials:getDbCredentials", args ?? new GetDbCredentialsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Db Credentials in Oracle Cloud Infrastructure Identity service.
        /// 
        /// Lists the DB credentials for the specified user. The returned object contains the credential's OCID
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDbCredentials = Oci.Identity.GetDbCredentials.Invoke(new()
        ///     {
        ///         UserId = oci_identity_user.Test_user.Id,
        ///         Name = @var.Db_credential_name,
        ///         State = @var.Db_credential_state,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetDbCredentialsResult> Invoke(GetDbCredentialsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDbCredentialsResult>("oci:Identity/getDbCredentials:getDbCredentials", args ?? new GetDbCredentialsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDbCredentialsArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetDbCredentialsFilterArgs>? _filters;
        public List<Inputs.GetDbCredentialsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetDbCredentialsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to only return resources that match the given name exactly.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        /// <summary>
        /// The OCID of the user.
        /// </summary>
        [Input("userId", required: true)]
        public string UserId { get; set; } = null!;

        public GetDbCredentialsArgs()
        {
        }
        public static new GetDbCredentialsArgs Empty => new GetDbCredentialsArgs();
    }

    public sealed class GetDbCredentialsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetDbCredentialsFilterInputArgs>? _filters;
        public InputList<Inputs.GetDbCredentialsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetDbCredentialsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to only return resources that match the given name exactly.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The OCID of the user.
        /// </summary>
        [Input("userId", required: true)]
        public Input<string> UserId { get; set; } = null!;

        public GetDbCredentialsInvokeArgs()
        {
        }
        public static new GetDbCredentialsInvokeArgs Empty => new GetDbCredentialsInvokeArgs();
    }


    [OutputType]
    public sealed class GetDbCredentialsResult
    {
        /// <summary>
        /// The list of db_credentials.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDbCredentialsDbCredentialResult> DbCredentials;
        public readonly ImmutableArray<Outputs.GetDbCredentialsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string? Id;
        public readonly string? Name;
        /// <summary>
        /// The credential's current state. After creating a DB credential, make sure its `lifecycleState` changes from CREATING to ACTIVE before using it.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// The OCID of the user the DB credential belongs to.
        /// </summary>
        public readonly string UserId;

        [OutputConstructor]
        private GetDbCredentialsResult(
            ImmutableArray<Outputs.GetDbCredentialsDbCredentialResult> dbCredentials,

            ImmutableArray<Outputs.GetDbCredentialsFilterResult> filters,

            string? id,

            string? name,

            string? state,

            string userId)
        {
            DbCredentials = dbCredentials;
            Filters = filters;
            Id = id;
            Name = name;
            State = state;
            UserId = userId;
        }
    }
}
