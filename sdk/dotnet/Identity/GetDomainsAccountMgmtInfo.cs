// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Identity
{
    public static class GetDomainsAccountMgmtInfo
    {
        /// <summary>
        /// This data source provides details about a specific Account Mgmt Info resource in Oracle Cloud Infrastructure Identity Domains service.
        /// 
        /// Get Account Mgmt Info
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAccountMgmtInfo = Oci.Identity.GetDomainsAccountMgmtInfo.Invoke(new()
        ///     {
        ///         AccountMgmtInfoId = oci_identity_domains_account_mgmt_info.Test_account_mgmt_info.Id,
        ///         IdcsEndpoint = data.Oci_identity_domain.Test_domain.Url,
        ///         AttributeSets = new[]
        ///         {
        ///             "all",
        ///         },
        ///         Attributes = "",
        ///         Authorization = @var.Account_mgmt_info_authorization,
        ///         ResourceTypeSchemaVersion = @var.Account_mgmt_info_resource_type_schema_version,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetDomainsAccountMgmtInfoResult> InvokeAsync(GetDomainsAccountMgmtInfoArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDomainsAccountMgmtInfoResult>("oci:Identity/getDomainsAccountMgmtInfo:getDomainsAccountMgmtInfo", args ?? new GetDomainsAccountMgmtInfoArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Account Mgmt Info resource in Oracle Cloud Infrastructure Identity Domains service.
        /// 
        /// Get Account Mgmt Info
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAccountMgmtInfo = Oci.Identity.GetDomainsAccountMgmtInfo.Invoke(new()
        ///     {
        ///         AccountMgmtInfoId = oci_identity_domains_account_mgmt_info.Test_account_mgmt_info.Id,
        ///         IdcsEndpoint = data.Oci_identity_domain.Test_domain.Url,
        ///         AttributeSets = new[]
        ///         {
        ///             "all",
        ///         },
        ///         Attributes = "",
        ///         Authorization = @var.Account_mgmt_info_authorization,
        ///         ResourceTypeSchemaVersion = @var.Account_mgmt_info_resource_type_schema_version,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDomainsAccountMgmtInfoResult> Invoke(GetDomainsAccountMgmtInfoInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDomainsAccountMgmtInfoResult>("oci:Identity/getDomainsAccountMgmtInfo:getDomainsAccountMgmtInfo", args ?? new GetDomainsAccountMgmtInfoInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDomainsAccountMgmtInfoArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the resource
        /// </summary>
        [Input("accountMgmtInfoId", required: true)]
        public string AccountMgmtInfoId { get; set; } = null!;

        [Input("attributeSets")]
        private List<string>? _attributeSets;

        /// <summary>
        /// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
        /// </summary>
        public List<string> AttributeSets
        {
            get => _attributeSets ?? (_attributeSets = new List<string>());
            set => _attributeSets = value;
        }

        /// <summary>
        /// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
        /// </summary>
        [Input("attributes")]
        public string? Attributes { get; set; }

        /// <summary>
        /// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
        /// </summary>
        [Input("authorization")]
        public string? Authorization { get; set; }

        /// <summary>
        /// The basic endpoint for the identity domain
        /// </summary>
        [Input("idcsEndpoint", required: true)]
        public string IdcsEndpoint { get; set; } = null!;

        /// <summary>
        /// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
        /// </summary>
        [Input("resourceTypeSchemaVersion")]
        public string? ResourceTypeSchemaVersion { get; set; }

        public GetDomainsAccountMgmtInfoArgs()
        {
        }
        public static new GetDomainsAccountMgmtInfoArgs Empty => new GetDomainsAccountMgmtInfoArgs();
    }

    public sealed class GetDomainsAccountMgmtInfoInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the resource
        /// </summary>
        [Input("accountMgmtInfoId", required: true)]
        public Input<string> AccountMgmtInfoId { get; set; } = null!;

        [Input("attributeSets")]
        private InputList<string>? _attributeSets;

        /// <summary>
        /// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
        /// </summary>
        public InputList<string> AttributeSets
        {
            get => _attributeSets ?? (_attributeSets = new InputList<string>());
            set => _attributeSets = value;
        }

        /// <summary>
        /// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
        /// </summary>
        [Input("attributes")]
        public Input<string>? Attributes { get; set; }

        /// <summary>
        /// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
        /// </summary>
        [Input("authorization")]
        public Input<string>? Authorization { get; set; }

        /// <summary>
        /// The basic endpoint for the identity domain
        /// </summary>
        [Input("idcsEndpoint", required: true)]
        public Input<string> IdcsEndpoint { get; set; } = null!;

        /// <summary>
        /// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
        /// </summary>
        [Input("resourceTypeSchemaVersion")]
        public Input<string>? ResourceTypeSchemaVersion { get; set; }

        public GetDomainsAccountMgmtInfoInvokeArgs()
        {
        }
        public static new GetDomainsAccountMgmtInfoInvokeArgs Empty => new GetDomainsAccountMgmtInfoInvokeArgs();
    }


    [OutputType]
    public sealed class GetDomainsAccountMgmtInfoResult
    {
        public readonly string AccountMgmtInfoId;
        /// <summary>
        /// Type of Account
        /// </summary>
        public readonly string AccountType;
        /// <summary>
        /// If true, this App is able to participate in runtime services, such as automatic-login, OAuth, and SAML. If false, all runtime services are disabled for this App and only administrative operations can be performed.
        /// </summary>
        public readonly bool Active;
        /// <summary>
        /// Application on which the account is based
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsAccountMgmtInfoAppResult> Apps;
        public readonly ImmutableArray<string> AttributeSets;
        public readonly string? Attributes;
        public readonly string? Authorization;
        /// <summary>
        /// Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
        /// </summary>
        public readonly string CompartmentOcid;
        /// <summary>
        /// Unique key for this AccountMgmtInfo, which is used to prevent duplicate AccountMgmtInfo resources. Key is composed of a subset of app, owner and accountType.
        /// </summary>
        public readonly string CompositeKey;
        /// <summary>
        /// A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
        /// </summary>
        public readonly bool DeleteInProgress;
        /// <summary>
        /// If true, a back-fill grant will not be created for a connected managed app as part of account creation.
        /// </summary>
        public readonly bool DoNotBackFillGrants;
        /// <summary>
        /// If true, the operation will not be performed on the target
        /// </summary>
        public readonly bool DoNotPerformActionOnTarget;
        /// <summary>
        /// Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
        /// </summary>
        public readonly string DomainOcid;
        /// <summary>
        /// If true, this account has been marked as a favorite of the User who owns it
        /// </summary>
        public readonly bool Favorite;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The User or App who created the Resource
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsAccountMgmtInfoIdcsCreatedByResult> IdcsCreatedBies;
        public readonly string IdcsEndpoint;
        /// <summary>
        /// The User or App who modified the Resource
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsAccountMgmtInfoIdcsLastModifiedByResult> IdcsLastModifiedBies;
        /// <summary>
        /// The release number when the resource was upgraded.
        /// </summary>
        public readonly string IdcsLastUpgradedInRelease;
        /// <summary>
        /// Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
        /// </summary>
        public readonly ImmutableArray<string> IdcsPreventedOperations;
        /// <summary>
        /// If true, indicates that this managed object is an account, which is an identity that represents a user in the context of a specific application
        /// </summary>
        public readonly bool IsAccount;
        /// <summary>
        /// Last accessed timestamp of an application
        /// </summary>
        public readonly string LastAccessed;
        /// <summary>
        /// Matching owning users of the account
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsAccountMgmtInfoMatchingOwnerResult> MatchingOwners;
        /// <summary>
        /// A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsAccountMgmtInfoMetaResult> Metas;
        /// <summary>
        /// Name of the Account
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Object-class of the Account
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsAccountMgmtInfoObjectClassResult> ObjectClasses;
        /// <summary>
        /// Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
        /// </summary>
        public readonly string Ocid;
        /// <summary>
        /// The context in which the operation is performed on the account.
        /// </summary>
        public readonly string OperationContext;
        /// <summary>
        /// Owning user of the account
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsAccountMgmtInfoOwnerResult> Owners;
        /// <summary>
        /// If true, then the response to the account creation operation on a connected managed app returns a preview of the account data that is evaluated by the attribute value generation policy. Note that an account will not be created on the target application when this attribute is set to true.
        /// </summary>
        public readonly bool PreviewOnly;
        public readonly string? ResourceTypeSchemaVersion;
        /// <summary>
        /// Resource Type of the Account
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsAccountMgmtInfoResourceTypeResult> ResourceTypes;
        /// <summary>
        /// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
        /// </summary>
        public readonly ImmutableArray<string> Schemas;
        /// <summary>
        /// Last recorded sync response for the account
        /// </summary>
        public readonly string SyncResponse;
        /// <summary>
        /// Last recorded sync situation for the account
        /// </summary>
        public readonly string SyncSituation;
        /// <summary>
        /// Last sync timestamp of the account
        /// </summary>
        public readonly string SyncTimestamp;
        /// <summary>
        /// A list of tags on this resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsAccountMgmtInfoTagResult> Tags;
        /// <summary>
        /// Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
        /// </summary>
        public readonly string TenancyOcid;
        /// <summary>
        /// Unique identifier of the Account
        /// </summary>
        public readonly string Uid;
        /// <summary>
        /// The UserWalletArtifact that contains the credentials that the system will use when performing Secure Form-Fill to log the user in to this application
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsAccountMgmtInfoUserWalletArtifactResult> UserWalletArtifacts;

        [OutputConstructor]
        private GetDomainsAccountMgmtInfoResult(
            string accountMgmtInfoId,

            string accountType,

            bool active,

            ImmutableArray<Outputs.GetDomainsAccountMgmtInfoAppResult> apps,

            ImmutableArray<string> attributeSets,

            string? attributes,

            string? authorization,

            string compartmentOcid,

            string compositeKey,

            bool deleteInProgress,

            bool doNotBackFillGrants,

            bool doNotPerformActionOnTarget,

            string domainOcid,

            bool favorite,

            string id,

            ImmutableArray<Outputs.GetDomainsAccountMgmtInfoIdcsCreatedByResult> idcsCreatedBies,

            string idcsEndpoint,

            ImmutableArray<Outputs.GetDomainsAccountMgmtInfoIdcsLastModifiedByResult> idcsLastModifiedBies,

            string idcsLastUpgradedInRelease,

            ImmutableArray<string> idcsPreventedOperations,

            bool isAccount,

            string lastAccessed,

            ImmutableArray<Outputs.GetDomainsAccountMgmtInfoMatchingOwnerResult> matchingOwners,

            ImmutableArray<Outputs.GetDomainsAccountMgmtInfoMetaResult> metas,

            string name,

            ImmutableArray<Outputs.GetDomainsAccountMgmtInfoObjectClassResult> objectClasses,

            string ocid,

            string operationContext,

            ImmutableArray<Outputs.GetDomainsAccountMgmtInfoOwnerResult> owners,

            bool previewOnly,

            string? resourceTypeSchemaVersion,

            ImmutableArray<Outputs.GetDomainsAccountMgmtInfoResourceTypeResult> resourceTypes,

            ImmutableArray<string> schemas,

            string syncResponse,

            string syncSituation,

            string syncTimestamp,

            ImmutableArray<Outputs.GetDomainsAccountMgmtInfoTagResult> tags,

            string tenancyOcid,

            string uid,

            ImmutableArray<Outputs.GetDomainsAccountMgmtInfoUserWalletArtifactResult> userWalletArtifacts)
        {
            AccountMgmtInfoId = accountMgmtInfoId;
            AccountType = accountType;
            Active = active;
            Apps = apps;
            AttributeSets = attributeSets;
            Attributes = attributes;
            Authorization = authorization;
            CompartmentOcid = compartmentOcid;
            CompositeKey = compositeKey;
            DeleteInProgress = deleteInProgress;
            DoNotBackFillGrants = doNotBackFillGrants;
            DoNotPerformActionOnTarget = doNotPerformActionOnTarget;
            DomainOcid = domainOcid;
            Favorite = favorite;
            Id = id;
            IdcsCreatedBies = idcsCreatedBies;
            IdcsEndpoint = idcsEndpoint;
            IdcsLastModifiedBies = idcsLastModifiedBies;
            IdcsLastUpgradedInRelease = idcsLastUpgradedInRelease;
            IdcsPreventedOperations = idcsPreventedOperations;
            IsAccount = isAccount;
            LastAccessed = lastAccessed;
            MatchingOwners = matchingOwners;
            Metas = metas;
            Name = name;
            ObjectClasses = objectClasses;
            Ocid = ocid;
            OperationContext = operationContext;
            Owners = owners;
            PreviewOnly = previewOnly;
            ResourceTypeSchemaVersion = resourceTypeSchemaVersion;
            ResourceTypes = resourceTypes;
            Schemas = schemas;
            SyncResponse = syncResponse;
            SyncSituation = syncSituation;
            SyncTimestamp = syncTimestamp;
            Tags = tags;
            TenancyOcid = tenancyOcid;
            Uid = uid;
            UserWalletArtifacts = userWalletArtifacts;
        }
    }
}
