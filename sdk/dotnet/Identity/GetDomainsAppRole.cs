// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Identity
{
    public static class GetDomainsAppRole
    {
        /// <summary>
        /// This data source provides details about a specific App Role resource in Oracle Cloud Infrastructure Identity Domains service.
        /// 
        /// Get an AppRole
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAppRole = Oci.Identity.GetDomainsAppRole.Invoke(new()
        ///     {
        ///         AppRoleId = oci_identity_domains_app_role.Test_app_role.Id,
        ///         IdcsEndpoint = data.Oci_identity_domain.Test_domain.Url,
        ///         AttributeSets = new[]
        ///         {
        ///             "all",
        ///         },
        ///         Attributes = "",
        ///         Authorization = @var.App_role_authorization,
        ///         ResourceTypeSchemaVersion = @var.App_role_resource_type_schema_version,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetDomainsAppRoleResult> InvokeAsync(GetDomainsAppRoleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDomainsAppRoleResult>("oci:Identity/getDomainsAppRole:getDomainsAppRole", args ?? new GetDomainsAppRoleArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific App Role resource in Oracle Cloud Infrastructure Identity Domains service.
        /// 
        /// Get an AppRole
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAppRole = Oci.Identity.GetDomainsAppRole.Invoke(new()
        ///     {
        ///         AppRoleId = oci_identity_domains_app_role.Test_app_role.Id,
        ///         IdcsEndpoint = data.Oci_identity_domain.Test_domain.Url,
        ///         AttributeSets = new[]
        ///         {
        ///             "all",
        ///         },
        ///         Attributes = "",
        ///         Authorization = @var.App_role_authorization,
        ///         ResourceTypeSchemaVersion = @var.App_role_resource_type_schema_version,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetDomainsAppRoleResult> Invoke(GetDomainsAppRoleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDomainsAppRoleResult>("oci:Identity/getDomainsAppRole:getDomainsAppRole", args ?? new GetDomainsAppRoleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDomainsAppRoleArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the resource
        /// </summary>
        [Input("appRoleId", required: true)]
        public string AppRoleId { get; set; } = null!;

        [Input("attributeSets")]
        private List<string>? _attributeSets;

        /// <summary>
        /// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
        /// </summary>
        public List<string> AttributeSets
        {
            get => _attributeSets ?? (_attributeSets = new List<string>());
            set => _attributeSets = value;
        }

        /// <summary>
        /// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
        /// </summary>
        [Input("attributes")]
        public string? Attributes { get; set; }

        /// <summary>
        /// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
        /// </summary>
        [Input("authorization")]
        public string? Authorization { get; set; }

        /// <summary>
        /// The basic endpoint for the identity domain
        /// </summary>
        [Input("idcsEndpoint", required: true)]
        public string IdcsEndpoint { get; set; } = null!;

        /// <summary>
        /// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
        /// </summary>
        [Input("resourceTypeSchemaVersion")]
        public string? ResourceTypeSchemaVersion { get; set; }

        public GetDomainsAppRoleArgs()
        {
        }
        public static new GetDomainsAppRoleArgs Empty => new GetDomainsAppRoleArgs();
    }

    public sealed class GetDomainsAppRoleInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the resource
        /// </summary>
        [Input("appRoleId", required: true)]
        public Input<string> AppRoleId { get; set; } = null!;

        [Input("attributeSets")]
        private InputList<string>? _attributeSets;

        /// <summary>
        /// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
        /// </summary>
        public InputList<string> AttributeSets
        {
            get => _attributeSets ?? (_attributeSets = new InputList<string>());
            set => _attributeSets = value;
        }

        /// <summary>
        /// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
        /// </summary>
        [Input("attributes")]
        public Input<string>? Attributes { get; set; }

        /// <summary>
        /// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
        /// </summary>
        [Input("authorization")]
        public Input<string>? Authorization { get; set; }

        /// <summary>
        /// The basic endpoint for the identity domain
        /// </summary>
        [Input("idcsEndpoint", required: true)]
        public Input<string> IdcsEndpoint { get; set; } = null!;

        /// <summary>
        /// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
        /// </summary>
        [Input("resourceTypeSchemaVersion")]
        public Input<string>? ResourceTypeSchemaVersion { get; set; }

        public GetDomainsAppRoleInvokeArgs()
        {
        }
        public static new GetDomainsAppRoleInvokeArgs Empty => new GetDomainsAppRoleInvokeArgs();
    }


    [OutputType]
    public sealed class GetDomainsAppRoleResult
    {
        /// <summary>
        /// If true, the role provides administrative access privileges.
        /// </summary>
        public readonly bool AdminRole;
        public readonly string AppRoleId;
        /// <summary>
        /// A unique identifier for the application that references this role.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsAppRoleAppResult> Apps;
        public readonly ImmutableArray<string> AttributeSets;
        public readonly string? Attributes;
        public readonly string? Authorization;
        /// <summary>
        /// If true, this AppRole can be granted to Apps.
        /// </summary>
        public readonly bool AvailableToClients;
        /// <summary>
        /// If true, this AppRole can be granted to Groups.
        /// </summary>
        public readonly bool AvailableToGroups;
        /// <summary>
        /// If true, this AppRole can be granted to Users.
        /// </summary>
        public readonly bool AvailableToUsers;
        /// <summary>
        /// Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
        /// </summary>
        public readonly string CompartmentOcid;
        /// <summary>
        /// A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
        /// </summary>
        public readonly bool DeleteInProgress;
        /// <summary>
        /// AppRole description
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// AppRole name
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
        /// </summary>
        public readonly string DomainOcid;
        /// <summary>
        /// Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The User or App who created the Resource
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsAppRoleIdcsCreatedByResult> IdcsCreatedBies;
        public readonly string IdcsEndpoint;
        /// <summary>
        /// The User or App who modified the Resource
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsAppRoleIdcsLastModifiedByResult> IdcsLastModifiedBies;
        /// <summary>
        /// The release number when the resource was upgraded.
        /// </summary>
        public readonly string IdcsLastUpgradedInRelease;
        /// <summary>
        /// Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
        /// </summary>
        public readonly ImmutableArray<string> IdcsPreventedOperations;
        /// <summary>
        /// The name of the legacy group associated with this AppRole.
        /// </summary>
        public readonly string LegacyGroupName;
        /// <summary>
        /// If true, indicates that this Oracle Identity Cloud Service AppRole can be granted to a delegated administrator whose scope is limited to users that are members of one or more groups.
        /// </summary>
        public readonly bool LimitedToOneOrMoreGroups;
        /// <summary>
        /// AppRole localization name
        /// </summary>
        public readonly string LocalizedDisplayName;
        /// <summary>
        /// AppRole members - when requesting members attribute, it is recommended to use startIndex and count to return members in pages instead of in a single response, eg : #attributes=members[startIndex=1%26count=10]
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsAppRoleMemberResult> Members;
        /// <summary>
        /// A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsAppRoleMetaResult> Metas;
        /// <summary>
        /// Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
        /// </summary>
        public readonly string Ocid;
        /// <summary>
        /// If true, this AppRole is available automatically to every Oracle Identity Cloud Service User in this tenancy. There is no need to grant it to individual Users or Groups.
        /// </summary>
        public readonly bool Public;
        public readonly string? ResourceTypeSchemaVersion;
        /// <summary>
        /// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
        /// </summary>
        public readonly ImmutableArray<string> Schemas;
        /// <summary>
        /// A list of tags on this resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsAppRoleTagResult> Tags;
        /// <summary>
        /// Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
        /// </summary>
        public readonly string TenancyOcid;
        /// <summary>
        /// AppRole unique name
        /// </summary>
        public readonly string UniqueName;

        [OutputConstructor]
        private GetDomainsAppRoleResult(
            bool adminRole,

            string appRoleId,

            ImmutableArray<Outputs.GetDomainsAppRoleAppResult> apps,

            ImmutableArray<string> attributeSets,

            string? attributes,

            string? authorization,

            bool availableToClients,

            bool availableToGroups,

            bool availableToUsers,

            string compartmentOcid,

            bool deleteInProgress,

            string description,

            string displayName,

            string domainOcid,

            string id,

            ImmutableArray<Outputs.GetDomainsAppRoleIdcsCreatedByResult> idcsCreatedBies,

            string idcsEndpoint,

            ImmutableArray<Outputs.GetDomainsAppRoleIdcsLastModifiedByResult> idcsLastModifiedBies,

            string idcsLastUpgradedInRelease,

            ImmutableArray<string> idcsPreventedOperations,

            string legacyGroupName,

            bool limitedToOneOrMoreGroups,

            string localizedDisplayName,

            ImmutableArray<Outputs.GetDomainsAppRoleMemberResult> members,

            ImmutableArray<Outputs.GetDomainsAppRoleMetaResult> metas,

            string ocid,

            bool @public,

            string? resourceTypeSchemaVersion,

            ImmutableArray<string> schemas,

            ImmutableArray<Outputs.GetDomainsAppRoleTagResult> tags,

            string tenancyOcid,

            string uniqueName)
        {
            AdminRole = adminRole;
            AppRoleId = appRoleId;
            Apps = apps;
            AttributeSets = attributeSets;
            Attributes = attributes;
            Authorization = authorization;
            AvailableToClients = availableToClients;
            AvailableToGroups = availableToGroups;
            AvailableToUsers = availableToUsers;
            CompartmentOcid = compartmentOcid;
            DeleteInProgress = deleteInProgress;
            Description = description;
            DisplayName = displayName;
            DomainOcid = domainOcid;
            Id = id;
            IdcsCreatedBies = idcsCreatedBies;
            IdcsEndpoint = idcsEndpoint;
            IdcsLastModifiedBies = idcsLastModifiedBies;
            IdcsLastUpgradedInRelease = idcsLastUpgradedInRelease;
            IdcsPreventedOperations = idcsPreventedOperations;
            LegacyGroupName = legacyGroupName;
            LimitedToOneOrMoreGroups = limitedToOneOrMoreGroups;
            LocalizedDisplayName = localizedDisplayName;
            Members = members;
            Metas = metas;
            Ocid = ocid;
            Public = @public;
            ResourceTypeSchemaVersion = resourceTypeSchemaVersion;
            Schemas = schemas;
            Tags = tags;
            TenancyOcid = tenancyOcid;
            UniqueName = uniqueName;
        }
    }
}
