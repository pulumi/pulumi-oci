// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Identity
{
    public static class GetDomainsApprovalWorkflow
    {
        /// <summary>
        /// This data source provides details about a specific Approval Workflow resource in Oracle Cloud Infrastructure Identity Domains service.
        /// 
        /// Get ApprovalWorkflow
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testApprovalWorkflow = Oci.Identity.GetDomainsApprovalWorkflow.Invoke(new()
        ///     {
        ///         ApprovalWorkflowId = oci_identity_domains_approval_workflow.Test_approval_workflow.Id,
        ///         IdcsEndpoint = data.Oci_identity_domain.Test_domain.Url,
        ///         AttributeSets = new[]
        ///         {
        ///             "all",
        ///         },
        ///         Attributes = "",
        ///         Authorization = @var.Approval_workflow_authorization,
        ///         ResourceTypeSchemaVersion = @var.Approval_workflow_resource_type_schema_version,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetDomainsApprovalWorkflowResult> InvokeAsync(GetDomainsApprovalWorkflowArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDomainsApprovalWorkflowResult>("oci:Identity/getDomainsApprovalWorkflow:getDomainsApprovalWorkflow", args ?? new GetDomainsApprovalWorkflowArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Approval Workflow resource in Oracle Cloud Infrastructure Identity Domains service.
        /// 
        /// Get ApprovalWorkflow
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testApprovalWorkflow = Oci.Identity.GetDomainsApprovalWorkflow.Invoke(new()
        ///     {
        ///         ApprovalWorkflowId = oci_identity_domains_approval_workflow.Test_approval_workflow.Id,
        ///         IdcsEndpoint = data.Oci_identity_domain.Test_domain.Url,
        ///         AttributeSets = new[]
        ///         {
        ///             "all",
        ///         },
        ///         Attributes = "",
        ///         Authorization = @var.Approval_workflow_authorization,
        ///         ResourceTypeSchemaVersion = @var.Approval_workflow_resource_type_schema_version,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetDomainsApprovalWorkflowResult> Invoke(GetDomainsApprovalWorkflowInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDomainsApprovalWorkflowResult>("oci:Identity/getDomainsApprovalWorkflow:getDomainsApprovalWorkflow", args ?? new GetDomainsApprovalWorkflowInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDomainsApprovalWorkflowArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the resource
        /// </summary>
        [Input("approvalWorkflowId", required: true)]
        public string ApprovalWorkflowId { get; set; } = null!;

        [Input("attributeSets")]
        private List<string>? _attributeSets;

        /// <summary>
        /// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
        /// </summary>
        public List<string> AttributeSets
        {
            get => _attributeSets ?? (_attributeSets = new List<string>());
            set => _attributeSets = value;
        }

        /// <summary>
        /// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
        /// </summary>
        [Input("attributes")]
        public string? Attributes { get; set; }

        /// <summary>
        /// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
        /// </summary>
        [Input("authorization")]
        public string? Authorization { get; set; }

        /// <summary>
        /// The basic endpoint for the identity domain
        /// </summary>
        [Input("idcsEndpoint", required: true)]
        public string IdcsEndpoint { get; set; } = null!;

        /// <summary>
        /// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
        /// </summary>
        [Input("resourceTypeSchemaVersion")]
        public string? ResourceTypeSchemaVersion { get; set; }

        public GetDomainsApprovalWorkflowArgs()
        {
        }
        public static new GetDomainsApprovalWorkflowArgs Empty => new GetDomainsApprovalWorkflowArgs();
    }

    public sealed class GetDomainsApprovalWorkflowInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the resource
        /// </summary>
        [Input("approvalWorkflowId", required: true)]
        public Input<string> ApprovalWorkflowId { get; set; } = null!;

        [Input("attributeSets")]
        private InputList<string>? _attributeSets;

        /// <summary>
        /// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
        /// </summary>
        public InputList<string> AttributeSets
        {
            get => _attributeSets ?? (_attributeSets = new InputList<string>());
            set => _attributeSets = value;
        }

        /// <summary>
        /// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
        /// </summary>
        [Input("attributes")]
        public Input<string>? Attributes { get; set; }

        /// <summary>
        /// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
        /// </summary>
        [Input("authorization")]
        public Input<string>? Authorization { get; set; }

        /// <summary>
        /// The basic endpoint for the identity domain
        /// </summary>
        [Input("idcsEndpoint", required: true)]
        public Input<string> IdcsEndpoint { get; set; } = null!;

        /// <summary>
        /// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
        /// </summary>
        [Input("resourceTypeSchemaVersion")]
        public Input<string>? ResourceTypeSchemaVersion { get; set; }

        public GetDomainsApprovalWorkflowInvokeArgs()
        {
        }
        public static new GetDomainsApprovalWorkflowInvokeArgs Empty => new GetDomainsApprovalWorkflowInvokeArgs();
    }


    [OutputType]
    public sealed class GetDomainsApprovalWorkflowResult
    {
        public readonly string ApprovalWorkflowId;
        /// <summary>
        /// ApprovalWorkflowSteps applicable for the ApprovalWorkflowInstance.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsApprovalWorkflowApprovalWorkflowStepResult> ApprovalWorkflowSteps;
        public readonly ImmutableArray<string> AttributeSets;
        public readonly string? Attributes;
        public readonly string? Authorization;
        /// <summary>
        /// Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
        /// </summary>
        public readonly string CompartmentOcid;
        /// <summary>
        /// A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
        /// </summary>
        public readonly bool DeleteInProgress;
        /// <summary>
        /// Description of the ApprovalWorkflow.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
        /// </summary>
        public readonly string DomainOcid;
        /// <summary>
        /// Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The User or App who created the Resource
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsApprovalWorkflowIdcsCreatedByResult> IdcsCreatedBies;
        public readonly string IdcsEndpoint;
        /// <summary>
        /// The User or App who modified the Resource
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsApprovalWorkflowIdcsLastModifiedByResult> IdcsLastModifiedBies;
        /// <summary>
        /// The release number when the resource was upgraded.
        /// </summary>
        public readonly string IdcsLastUpgradedInRelease;
        /// <summary>
        /// Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
        /// </summary>
        public readonly ImmutableArray<string> IdcsPreventedOperations;
        /// <summary>
        /// Max duration of the ApprovalWorkflow must be acted at all levels.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsApprovalWorkflowMaxDurationResult> MaxDurations;
        /// <summary>
        /// A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsApprovalWorkflowMetaResult> Metas;
        /// <summary>
        /// Name of the ApprovalWorkflow.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
        /// </summary>
        public readonly string Ocid;
        public readonly string? ResourceTypeSchemaVersion;
        /// <summary>
        /// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
        /// </summary>
        public readonly ImmutableArray<string> Schemas;
        /// <summary>
        /// A list of tags on this resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsApprovalWorkflowTagResult> Tags;
        /// <summary>
        /// Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
        /// </summary>
        public readonly string TenancyOcid;

        [OutputConstructor]
        private GetDomainsApprovalWorkflowResult(
            string approvalWorkflowId,

            ImmutableArray<Outputs.GetDomainsApprovalWorkflowApprovalWorkflowStepResult> approvalWorkflowSteps,

            ImmutableArray<string> attributeSets,

            string? attributes,

            string? authorization,

            string compartmentOcid,

            bool deleteInProgress,

            string description,

            string domainOcid,

            string id,

            ImmutableArray<Outputs.GetDomainsApprovalWorkflowIdcsCreatedByResult> idcsCreatedBies,

            string idcsEndpoint,

            ImmutableArray<Outputs.GetDomainsApprovalWorkflowIdcsLastModifiedByResult> idcsLastModifiedBies,

            string idcsLastUpgradedInRelease,

            ImmutableArray<string> idcsPreventedOperations,

            ImmutableArray<Outputs.GetDomainsApprovalWorkflowMaxDurationResult> maxDurations,

            ImmutableArray<Outputs.GetDomainsApprovalWorkflowMetaResult> metas,

            string name,

            string ocid,

            string? resourceTypeSchemaVersion,

            ImmutableArray<string> schemas,

            ImmutableArray<Outputs.GetDomainsApprovalWorkflowTagResult> tags,

            string tenancyOcid)
        {
            ApprovalWorkflowId = approvalWorkflowId;
            ApprovalWorkflowSteps = approvalWorkflowSteps;
            AttributeSets = attributeSets;
            Attributes = attributes;
            Authorization = authorization;
            CompartmentOcid = compartmentOcid;
            DeleteInProgress = deleteInProgress;
            Description = description;
            DomainOcid = domainOcid;
            Id = id;
            IdcsCreatedBies = idcsCreatedBies;
            IdcsEndpoint = idcsEndpoint;
            IdcsLastModifiedBies = idcsLastModifiedBies;
            IdcsLastUpgradedInRelease = idcsLastUpgradedInRelease;
            IdcsPreventedOperations = idcsPreventedOperations;
            MaxDurations = maxDurations;
            Metas = metas;
            Name = name;
            Ocid = ocid;
            ResourceTypeSchemaVersion = resourceTypeSchemaVersion;
            Schemas = schemas;
            Tags = tags;
            TenancyOcid = tenancyOcid;
        }
    }
}
