// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Identity
{
    public static class GetDomainsIdentityPropagationTrust
    {
        /// <summary>
        /// This data source provides details about a specific Identity Propagation Trust resource in Oracle Cloud Infrastructure Identity Domains service.
        /// 
        /// Get an existing Identity Propagation Trust configuration.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testIdentityPropagationTrust = Oci.Identity.GetDomainsIdentityPropagationTrust.Invoke(new()
        ///     {
        ///         IdcsEndpoint = testDomain.Url,
        ///         IdentityPropagationTrustId = testIdentityPropagationTrustOciIdentityDomainsIdentityPropagationTrust.Id,
        ///         AttributeSets = new[]
        ///         {
        ///             "all",
        ///         },
        ///         Attributes = "",
        ///         Authorization = identityPropagationTrustAuthorization,
        ///         ResourceTypeSchemaVersion = identityPropagationTrustResourceTypeSchemaVersion,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetDomainsIdentityPropagationTrustResult> InvokeAsync(GetDomainsIdentityPropagationTrustArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDomainsIdentityPropagationTrustResult>("oci:Identity/getDomainsIdentityPropagationTrust:getDomainsIdentityPropagationTrust", args ?? new GetDomainsIdentityPropagationTrustArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Identity Propagation Trust resource in Oracle Cloud Infrastructure Identity Domains service.
        /// 
        /// Get an existing Identity Propagation Trust configuration.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testIdentityPropagationTrust = Oci.Identity.GetDomainsIdentityPropagationTrust.Invoke(new()
        ///     {
        ///         IdcsEndpoint = testDomain.Url,
        ///         IdentityPropagationTrustId = testIdentityPropagationTrustOciIdentityDomainsIdentityPropagationTrust.Id,
        ///         AttributeSets = new[]
        ///         {
        ///             "all",
        ///         },
        ///         Attributes = "",
        ///         Authorization = identityPropagationTrustAuthorization,
        ///         ResourceTypeSchemaVersion = identityPropagationTrustResourceTypeSchemaVersion,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDomainsIdentityPropagationTrustResult> Invoke(GetDomainsIdentityPropagationTrustInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDomainsIdentityPropagationTrustResult>("oci:Identity/getDomainsIdentityPropagationTrust:getDomainsIdentityPropagationTrust", args ?? new GetDomainsIdentityPropagationTrustInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDomainsIdentityPropagationTrustArgs : global::Pulumi.InvokeArgs
    {
        [Input("attributeSets")]
        private List<string>? _attributeSets;

        /// <summary>
        /// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
        /// </summary>
        public List<string> AttributeSets
        {
            get => _attributeSets ?? (_attributeSets = new List<string>());
            set => _attributeSets = value;
        }

        /// <summary>
        /// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
        /// </summary>
        [Input("attributes")]
        public string? Attributes { get; set; }

        /// <summary>
        /// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
        /// </summary>
        [Input("authorization")]
        public string? Authorization { get; set; }

        /// <summary>
        /// The basic endpoint for the identity domain
        /// </summary>
        [Input("idcsEndpoint", required: true)]
        public string IdcsEndpoint { get; set; } = null!;

        /// <summary>
        /// ID of the resource
        /// </summary>
        [Input("identityPropagationTrustId", required: true)]
        public string IdentityPropagationTrustId { get; set; } = null!;

        /// <summary>
        /// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
        /// </summary>
        [Input("resourceTypeSchemaVersion")]
        public string? ResourceTypeSchemaVersion { get; set; }

        public GetDomainsIdentityPropagationTrustArgs()
        {
        }
        public static new GetDomainsIdentityPropagationTrustArgs Empty => new GetDomainsIdentityPropagationTrustArgs();
    }

    public sealed class GetDomainsIdentityPropagationTrustInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("attributeSets")]
        private InputList<string>? _attributeSets;

        /// <summary>
        /// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
        /// </summary>
        public InputList<string> AttributeSets
        {
            get => _attributeSets ?? (_attributeSets = new InputList<string>());
            set => _attributeSets = value;
        }

        /// <summary>
        /// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
        /// </summary>
        [Input("attributes")]
        public Input<string>? Attributes { get; set; }

        /// <summary>
        /// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
        /// </summary>
        [Input("authorization")]
        public Input<string>? Authorization { get; set; }

        /// <summary>
        /// The basic endpoint for the identity domain
        /// </summary>
        [Input("idcsEndpoint", required: true)]
        public Input<string> IdcsEndpoint { get; set; } = null!;

        /// <summary>
        /// ID of the resource
        /// </summary>
        [Input("identityPropagationTrustId", required: true)]
        public Input<string> IdentityPropagationTrustId { get; set; } = null!;

        /// <summary>
        /// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
        /// </summary>
        [Input("resourceTypeSchemaVersion")]
        public Input<string>? ResourceTypeSchemaVersion { get; set; }

        public GetDomainsIdentityPropagationTrustInvokeArgs()
        {
        }
        public static new GetDomainsIdentityPropagationTrustInvokeArgs Empty => new GetDomainsIdentityPropagationTrustInvokeArgs();
    }


    [OutputType]
    public sealed class GetDomainsIdentityPropagationTrustResult
    {
        /// <summary>
        /// The Identity cloud provider service identifier, for example, the Azure Tenancy ID, AWS Account ID, or GCP Project ID.
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// If true, specifies that this Identity Propagation Trust is in an enabled state. The default value is false.
        /// </summary>
        public readonly bool Active;
        /// <summary>
        /// Allow customers to define whether the resulting token should contain the authenticated user as the subject or whether the token should impersonate another Application Principal in IAM.
        /// </summary>
        public readonly bool AllowImpersonation;
        public readonly ImmutableArray<string> AttributeSets;
        public readonly string? Attributes;
        public readonly string? Authorization;
        /// <summary>
        /// The claim name that identifies to whom the JWT/SAML token is issued. If AWS, then \"aud\" or \"client_id\". If Azure, then \"appid\". If GCP, then \"aud\".
        /// </summary>
        public readonly string ClientClaimName;
        /// <summary>
        /// The value that corresponds to the client claim name used to identify to whom the token is issued.
        /// </summary>
        public readonly ImmutableArray<string> ClientClaimValues;
        /// <summary>
        /// The clock skew (in secs) that's allowed for the token issue and expiry time.
        /// </summary>
        public readonly int ClockSkewSeconds;
        /// <summary>
        /// Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
        /// </summary>
        public readonly string CompartmentOcid;
        /// <summary>
        /// A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
        /// </summary>
        public readonly bool DeleteInProgress;
        /// <summary>
        /// The description of the Identity Propagation Trust.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
        /// </summary>
        public readonly string DomainOcid;
        /// <summary>
        /// Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The User or App who created the Resource
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsIdentityPropagationTrustIdcsCreatedByResult> IdcsCreatedBies;
        public readonly string IdcsEndpoint;
        /// <summary>
        /// The User or App who modified the Resource
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsIdentityPropagationTrustIdcsLastModifiedByResult> IdcsLastModifiedBies;
        /// <summary>
        /// The release number when the resource was upgraded.
        /// </summary>
        public readonly string IdcsLastUpgradedInRelease;
        /// <summary>
        /// Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
        /// </summary>
        public readonly ImmutableArray<string> IdcsPreventedOperations;
        public readonly string IdentityPropagationTrustId;
        /// <summary>
        /// The Impersonating Principal.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsIdentityPropagationTrustImpersonationServiceUserResult> ImpersonationServiceUsers;
        /// <summary>
        /// The issuer claim of the Identity provider.
        /// </summary>
        public readonly string Issuer;
        /// <summary>
        /// The keytab stored in the tenancy's Vault. This is required if the identity propagation type is 'SPNEGO'.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsIdentityPropagationTrustKeytabResult> Keytabs;
        /// <summary>
        /// A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsIdentityPropagationTrustMetaResult> Metas;
        /// <summary>
        /// The name of the the Identity Propagation Trust.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The value of all the authorized OAuth Clients.
        /// </summary>
        public readonly ImmutableArray<string> OauthClients;
        /// <summary>
        /// Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
        /// </summary>
        public readonly string Ocid;
        /// <summary>
        /// Store the public key if public key cert.
        /// </summary>
        public readonly string PublicCertificate;
        /// <summary>
        /// The cloud provider's public key API of SAML and OIDC providers for signature validation.
        /// </summary>
        public readonly string PublicKeyEndpoint;
        public readonly string? ResourceTypeSchemaVersion;
        /// <summary>
        /// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
        /// </summary>
        public readonly ImmutableArray<string> Schemas;
        /// <summary>
        /// Used for locating the subject claim from the incoming token.
        /// </summary>
        public readonly string SubjectClaimName;
        /// <summary>
        /// Subject Mapping Attribute to which the value from subject claim name value would be used for identity lookup.
        /// </summary>
        public readonly string SubjectMappingAttribute;
        /// <summary>
        /// The type of the resource against which lookup will be made in the identity domain in IAM for the incoming subject claim value.
        /// </summary>
        public readonly string SubjectType;
        /// <summary>
        /// A list of tags on this resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsIdentityPropagationTrustTagResult> Tags;
        /// <summary>
        /// Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
        /// </summary>
        public readonly string TenancyOcid;
        /// <summary>
        /// The type of the inbound token from the Identity cloud provider.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetDomainsIdentityPropagationTrustResult(
            string accountId,

            bool active,

            bool allowImpersonation,

            ImmutableArray<string> attributeSets,

            string? attributes,

            string? authorization,

            string clientClaimName,

            ImmutableArray<string> clientClaimValues,

            int clockSkewSeconds,

            string compartmentOcid,

            bool deleteInProgress,

            string description,

            string domainOcid,

            string id,

            ImmutableArray<Outputs.GetDomainsIdentityPropagationTrustIdcsCreatedByResult> idcsCreatedBies,

            string idcsEndpoint,

            ImmutableArray<Outputs.GetDomainsIdentityPropagationTrustIdcsLastModifiedByResult> idcsLastModifiedBies,

            string idcsLastUpgradedInRelease,

            ImmutableArray<string> idcsPreventedOperations,

            string identityPropagationTrustId,

            ImmutableArray<Outputs.GetDomainsIdentityPropagationTrustImpersonationServiceUserResult> impersonationServiceUsers,

            string issuer,

            ImmutableArray<Outputs.GetDomainsIdentityPropagationTrustKeytabResult> keytabs,

            ImmutableArray<Outputs.GetDomainsIdentityPropagationTrustMetaResult> metas,

            string name,

            ImmutableArray<string> oauthClients,

            string ocid,

            string publicCertificate,

            string publicKeyEndpoint,

            string? resourceTypeSchemaVersion,

            ImmutableArray<string> schemas,

            string subjectClaimName,

            string subjectMappingAttribute,

            string subjectType,

            ImmutableArray<Outputs.GetDomainsIdentityPropagationTrustTagResult> tags,

            string tenancyOcid,

            string type)
        {
            AccountId = accountId;
            Active = active;
            AllowImpersonation = allowImpersonation;
            AttributeSets = attributeSets;
            Attributes = attributes;
            Authorization = authorization;
            ClientClaimName = clientClaimName;
            ClientClaimValues = clientClaimValues;
            ClockSkewSeconds = clockSkewSeconds;
            CompartmentOcid = compartmentOcid;
            DeleteInProgress = deleteInProgress;
            Description = description;
            DomainOcid = domainOcid;
            Id = id;
            IdcsCreatedBies = idcsCreatedBies;
            IdcsEndpoint = idcsEndpoint;
            IdcsLastModifiedBies = idcsLastModifiedBies;
            IdcsLastUpgradedInRelease = idcsLastUpgradedInRelease;
            IdcsPreventedOperations = idcsPreventedOperations;
            IdentityPropagationTrustId = identityPropagationTrustId;
            ImpersonationServiceUsers = impersonationServiceUsers;
            Issuer = issuer;
            Keytabs = keytabs;
            Metas = metas;
            Name = name;
            OauthClients = oauthClients;
            Ocid = ocid;
            PublicCertificate = publicCertificate;
            PublicKeyEndpoint = publicKeyEndpoint;
            ResourceTypeSchemaVersion = resourceTypeSchemaVersion;
            Schemas = schemas;
            SubjectClaimName = subjectClaimName;
            SubjectMappingAttribute = subjectMappingAttribute;
            SubjectType = subjectType;
            Tags = tags;
            TenancyOcid = tenancyOcid;
            Type = type;
        }
    }
}
