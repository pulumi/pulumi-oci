// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Identity
{
    public static class GetDomainsMyCustomerSecretKey
    {
        /// <summary>
        /// This data source provides details about a specific My Customer Secret Key resource in Oracle Cloud Infrastructure Identity Domains service.
        /// 
        /// Get a user's own customer secret key.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMyCustomerSecretKey = Oci.Identity.GetDomainsMyCustomerSecretKey.Invoke(new()
        ///     {
        ///         IdcsEndpoint = data.Oci_identity_domain.Test_domain.Url,
        ///         MyCustomerSecretKeyId = oci_identity_customer_secret_key.Test_customer_secret_key.Id,
        ///         Authorization = @var.My_customer_secret_key_authorization,
        ///         ResourceTypeSchemaVersion = @var.My_customer_secret_key_resource_type_schema_version,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetDomainsMyCustomerSecretKeyResult> InvokeAsync(GetDomainsMyCustomerSecretKeyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDomainsMyCustomerSecretKeyResult>("oci:Identity/getDomainsMyCustomerSecretKey:getDomainsMyCustomerSecretKey", args ?? new GetDomainsMyCustomerSecretKeyArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific My Customer Secret Key resource in Oracle Cloud Infrastructure Identity Domains service.
        /// 
        /// Get a user's own customer secret key.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMyCustomerSecretKey = Oci.Identity.GetDomainsMyCustomerSecretKey.Invoke(new()
        ///     {
        ///         IdcsEndpoint = data.Oci_identity_domain.Test_domain.Url,
        ///         MyCustomerSecretKeyId = oci_identity_customer_secret_key.Test_customer_secret_key.Id,
        ///         Authorization = @var.My_customer_secret_key_authorization,
        ///         ResourceTypeSchemaVersion = @var.My_customer_secret_key_resource_type_schema_version,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetDomainsMyCustomerSecretKeyResult> Invoke(GetDomainsMyCustomerSecretKeyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDomainsMyCustomerSecretKeyResult>("oci:Identity/getDomainsMyCustomerSecretKey:getDomainsMyCustomerSecretKey", args ?? new GetDomainsMyCustomerSecretKeyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDomainsMyCustomerSecretKeyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
        /// </summary>
        [Input("authorization")]
        public string? Authorization { get; set; }

        /// <summary>
        /// The basic endpoint for the identity domain
        /// </summary>
        [Input("idcsEndpoint", required: true)]
        public string IdcsEndpoint { get; set; } = null!;

        /// <summary>
        /// ID of the resource
        /// </summary>
        [Input("myCustomerSecretKeyId", required: true)]
        public string MyCustomerSecretKeyId { get; set; } = null!;

        /// <summary>
        /// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
        /// </summary>
        [Input("resourceTypeSchemaVersion")]
        public string? ResourceTypeSchemaVersion { get; set; }

        public GetDomainsMyCustomerSecretKeyArgs()
        {
        }
        public static new GetDomainsMyCustomerSecretKeyArgs Empty => new GetDomainsMyCustomerSecretKeyArgs();
    }

    public sealed class GetDomainsMyCustomerSecretKeyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
        /// </summary>
        [Input("authorization")]
        public Input<string>? Authorization { get; set; }

        /// <summary>
        /// The basic endpoint for the identity domain
        /// </summary>
        [Input("idcsEndpoint", required: true)]
        public Input<string> IdcsEndpoint { get; set; } = null!;

        /// <summary>
        /// ID of the resource
        /// </summary>
        [Input("myCustomerSecretKeyId", required: true)]
        public Input<string> MyCustomerSecretKeyId { get; set; } = null!;

        /// <summary>
        /// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
        /// </summary>
        [Input("resourceTypeSchemaVersion")]
        public Input<string>? ResourceTypeSchemaVersion { get; set; }

        public GetDomainsMyCustomerSecretKeyInvokeArgs()
        {
        }
        public static new GetDomainsMyCustomerSecretKeyInvokeArgs Empty => new GetDomainsMyCustomerSecretKeyInvokeArgs();
    }


    [OutputType]
    public sealed class GetDomainsMyCustomerSecretKeyResult
    {
        /// <summary>
        /// The access key.
        /// </summary>
        public readonly string AccessKey;
        public readonly string? Authorization;
        /// <summary>
        /// Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
        /// </summary>
        public readonly string CompartmentOcid;
        /// <summary>
        /// A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
        /// </summary>
        public readonly bool DeleteInProgress;
        /// <summary>
        /// Description
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Display Name
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
        /// </summary>
        public readonly string DomainOcid;
        /// <summary>
        /// When the user's credential expire.
        /// </summary>
        public readonly string ExpiresOn;
        /// <summary>
        /// Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The User or App who created the Resource
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsMyCustomerSecretKeyIdcsCreatedByResult> IdcsCreatedBies;
        public readonly string IdcsEndpoint;
        /// <summary>
        /// The User or App who modified the Resource
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsMyCustomerSecretKeyIdcsLastModifiedByResult> IdcsLastModifiedBies;
        /// <summary>
        /// The release number when the resource was upgraded.
        /// </summary>
        public readonly string IdcsLastUpgradedInRelease;
        /// <summary>
        /// Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
        /// </summary>
        public readonly ImmutableArray<string> IdcsPreventedOperations;
        /// <summary>
        /// A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsMyCustomerSecretKeyMetaResult> Metas;
        public readonly string MyCustomerSecretKeyId;
        /// <summary>
        /// The user's OCID.
        /// </summary>
        public readonly string Ocid;
        public readonly string? ResourceTypeSchemaVersion;
        /// <summary>
        /// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
        /// </summary>
        public readonly ImmutableArray<string> Schemas;
        /// <summary>
        /// The user's credential status.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// A list of tags on this resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsMyCustomerSecretKeyTagResult> Tags;
        /// <summary>
        /// Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
        /// </summary>
        public readonly string TenancyOcid;
        /// <summary>
        /// User linked to customer secret key
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsMyCustomerSecretKeyUserResult> Users;

        [OutputConstructor]
        private GetDomainsMyCustomerSecretKeyResult(
            string accessKey,

            string? authorization,

            string compartmentOcid,

            bool deleteInProgress,

            string description,

            string displayName,

            string domainOcid,

            string expiresOn,

            string id,

            ImmutableArray<Outputs.GetDomainsMyCustomerSecretKeyIdcsCreatedByResult> idcsCreatedBies,

            string idcsEndpoint,

            ImmutableArray<Outputs.GetDomainsMyCustomerSecretKeyIdcsLastModifiedByResult> idcsLastModifiedBies,

            string idcsLastUpgradedInRelease,

            ImmutableArray<string> idcsPreventedOperations,

            ImmutableArray<Outputs.GetDomainsMyCustomerSecretKeyMetaResult> metas,

            string myCustomerSecretKeyId,

            string ocid,

            string? resourceTypeSchemaVersion,

            ImmutableArray<string> schemas,

            string status,

            ImmutableArray<Outputs.GetDomainsMyCustomerSecretKeyTagResult> tags,

            string tenancyOcid,

            ImmutableArray<Outputs.GetDomainsMyCustomerSecretKeyUserResult> users)
        {
            AccessKey = accessKey;
            Authorization = authorization;
            CompartmentOcid = compartmentOcid;
            DeleteInProgress = deleteInProgress;
            Description = description;
            DisplayName = displayName;
            DomainOcid = domainOcid;
            ExpiresOn = expiresOn;
            Id = id;
            IdcsCreatedBies = idcsCreatedBies;
            IdcsEndpoint = idcsEndpoint;
            IdcsLastModifiedBies = idcsLastModifiedBies;
            IdcsLastUpgradedInRelease = idcsLastUpgradedInRelease;
            IdcsPreventedOperations = idcsPreventedOperations;
            Metas = metas;
            MyCustomerSecretKeyId = myCustomerSecretKeyId;
            Ocid = ocid;
            ResourceTypeSchemaVersion = resourceTypeSchemaVersion;
            Schemas = schemas;
            Status = status;
            Tags = tags;
            TenancyOcid = tenancyOcid;
            Users = users;
        }
    }
}
