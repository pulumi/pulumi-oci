// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Identity
{
    public static class GetDomainsMyDevice
    {
        /// <summary>
        /// This data source provides details about a specific My Device resource in Oracle Cloud Infrastructure Identity Domains service.
        /// 
        /// Get a Device
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMyDevice = Oci.Identity.GetDomainsMyDevice.Invoke(new()
        ///     {
        ///         IdcsEndpoint = testDomain.Url,
        ///         MyDeviceId = testMyDeviceOciIdentityDomainsMyDevice.Id,
        ///         AttributeSets = new() { },
        ///         Attributes = "",
        ///         Authorization = myDeviceAuthorization,
        ///         ResourceTypeSchemaVersion = myDeviceResourceTypeSchemaVersion,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetDomainsMyDeviceResult> InvokeAsync(GetDomainsMyDeviceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDomainsMyDeviceResult>("oci:Identity/getDomainsMyDevice:getDomainsMyDevice", args ?? new GetDomainsMyDeviceArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific My Device resource in Oracle Cloud Infrastructure Identity Domains service.
        /// 
        /// Get a Device
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMyDevice = Oci.Identity.GetDomainsMyDevice.Invoke(new()
        ///     {
        ///         IdcsEndpoint = testDomain.Url,
        ///         MyDeviceId = testMyDeviceOciIdentityDomainsMyDevice.Id,
        ///         AttributeSets = new() { },
        ///         Attributes = "",
        ///         Authorization = myDeviceAuthorization,
        ///         ResourceTypeSchemaVersion = myDeviceResourceTypeSchemaVersion,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDomainsMyDeviceResult> Invoke(GetDomainsMyDeviceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDomainsMyDeviceResult>("oci:Identity/getDomainsMyDevice:getDomainsMyDevice", args ?? new GetDomainsMyDeviceInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific My Device resource in Oracle Cloud Infrastructure Identity Domains service.
        /// 
        /// Get a Device
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMyDevice = Oci.Identity.GetDomainsMyDevice.Invoke(new()
        ///     {
        ///         IdcsEndpoint = testDomain.Url,
        ///         MyDeviceId = testMyDeviceOciIdentityDomainsMyDevice.Id,
        ///         AttributeSets = new() { },
        ///         Attributes = "",
        ///         Authorization = myDeviceAuthorization,
        ///         ResourceTypeSchemaVersion = myDeviceResourceTypeSchemaVersion,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDomainsMyDeviceResult> Invoke(GetDomainsMyDeviceInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDomainsMyDeviceResult>("oci:Identity/getDomainsMyDevice:getDomainsMyDevice", args ?? new GetDomainsMyDeviceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDomainsMyDeviceArgs : global::Pulumi.InvokeArgs
    {
        [Input("attributeSets")]
        private List<string>? _attributeSets;

        /// <summary>
        /// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
        /// </summary>
        public List<string> AttributeSets
        {
            get => _attributeSets ?? (_attributeSets = new List<string>());
            set => _attributeSets = value;
        }

        /// <summary>
        /// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
        /// </summary>
        [Input("attributes")]
        public string? Attributes { get; set; }

        /// <summary>
        /// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
        /// </summary>
        [Input("authorization")]
        public string? Authorization { get; set; }

        /// <summary>
        /// The basic endpoint for the identity domain
        /// </summary>
        [Input("idcsEndpoint", required: true)]
        public string IdcsEndpoint { get; set; } = null!;

        /// <summary>
        /// ID of the resource
        /// </summary>
        [Input("myDeviceId", required: true)]
        public string MyDeviceId { get; set; } = null!;

        /// <summary>
        /// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
        /// </summary>
        [Input("resourceTypeSchemaVersion")]
        public string? ResourceTypeSchemaVersion { get; set; }

        public GetDomainsMyDeviceArgs()
        {
        }
        public static new GetDomainsMyDeviceArgs Empty => new GetDomainsMyDeviceArgs();
    }

    public sealed class GetDomainsMyDeviceInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("attributeSets")]
        private InputList<string>? _attributeSets;

        /// <summary>
        /// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
        /// </summary>
        public InputList<string> AttributeSets
        {
            get => _attributeSets ?? (_attributeSets = new InputList<string>());
            set => _attributeSets = value;
        }

        /// <summary>
        /// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
        /// </summary>
        [Input("attributes")]
        public Input<string>? Attributes { get; set; }

        /// <summary>
        /// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
        /// </summary>
        [Input("authorization")]
        public Input<string>? Authorization { get; set; }

        /// <summary>
        /// The basic endpoint for the identity domain
        /// </summary>
        [Input("idcsEndpoint", required: true)]
        public Input<string> IdcsEndpoint { get; set; } = null!;

        /// <summary>
        /// ID of the resource
        /// </summary>
        [Input("myDeviceId", required: true)]
        public Input<string> MyDeviceId { get; set; } = null!;

        /// <summary>
        /// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
        /// </summary>
        [Input("resourceTypeSchemaVersion")]
        public Input<string>? ResourceTypeSchemaVersion { get; set; }

        public GetDomainsMyDeviceInvokeArgs()
        {
        }
        public static new GetDomainsMyDeviceInvokeArgs Empty => new GetDomainsMyDeviceInvokeArgs();
    }


    [OutputType]
    public sealed class GetDomainsMyDeviceResult
    {
        /// <summary>
        /// Device additional attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsMyDeviceAdditionalAttributeResult> AdditionalAttributes;
        /// <summary>
        /// Mobile Authenticator App Version
        /// </summary>
        public readonly string AppVersion;
        public readonly ImmutableArray<string> AttributeSets;
        public readonly string? Attributes;
        /// <summary>
        /// Authentication Factors
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsMyDeviceAuthenticationFactorResult> AuthenticationFactors;
        /// <summary>
        /// Authentication method used in device. For FIDO, it will contain SECURITY_KEY/WINDOWS_HELLO etc
        /// </summary>
        public readonly string AuthenticationMethod;
        public readonly string? Authorization;
        /// <summary>
        /// Device base public Key
        /// </summary>
        public readonly string BasePublicKey;
        /// <summary>
        /// Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
        /// </summary>
        public readonly string CompartmentOcid;
        /// <summary>
        /// Country code of user's Phone Number
        /// </summary>
        public readonly string CountryCode;
        /// <summary>
        /// A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
        /// </summary>
        public readonly bool DeleteInProgress;
        /// <summary>
        /// Device hardware name/model
        /// </summary>
        public readonly string DeviceType;
        /// <summary>
        /// Unique id sent from device
        /// </summary>
        public readonly string DeviceUuid;
        /// <summary>
        /// Device friendly display name
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
        /// </summary>
        public readonly string DomainOcid;
        /// <summary>
        /// Attribute added for replication log, it is not used by IDCS, just added as place holder
        /// </summary>
        public readonly int ExpiresOn;
        /// <summary>
        /// An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued be the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
        /// </summary>
        public readonly string ExternalId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The User or App who created the Resource
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsMyDeviceIdcsCreatedByResult> IdcsCreatedBies;
        public readonly string IdcsEndpoint;
        /// <summary>
        /// The User or App who modified the Resource
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsMyDeviceIdcsLastModifiedByResult> IdcsLastModifiedBies;
        /// <summary>
        /// The release number when the resource was upgraded.
        /// </summary>
        public readonly string IdcsLastUpgradedInRelease;
        /// <summary>
        /// Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
        /// </summary>
        public readonly ImmutableArray<string> IdcsPreventedOperations;
        /// <summary>
        /// Flag that indicates whether the device is enrolled for account recovery
        /// </summary>
        public readonly bool IsAccRecEnabled;
        /// <summary>
        /// Device Compliance Status
        /// </summary>
        public readonly bool IsCompliant;
        /// <summary>
        /// Last Sync time for device
        /// </summary>
        public readonly string LastSyncTime;
        /// <summary>
        /// The most recent timestamp when the device was successfully validated using one time passcode
        /// </summary>
        public readonly string LastValidatedTime;
        /// <summary>
        /// A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsMyDeviceMetaResult> Metas;
        public readonly string MyDeviceId;
        /// <summary>
        /// Device Non Compliances
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsMyDeviceNonComplianceResult> NonCompliances;
        /// <summary>
        /// The OCID of the user
        /// </summary>
        public readonly string Ocid;
        /// <summary>
        /// Mobile Authenticator App Package Id
        /// </summary>
        public readonly string PackageId;
        /// <summary>
        /// User's Phone Number
        /// </summary>
        public readonly string PhoneNumber;
        /// <summary>
        /// Device Platform
        /// </summary>
        public readonly string Platform;
        /// <summary>
        /// Push Notification target. Reference to Device notification related resource
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsMyDevicePushNotificationTargetResult> PushNotificationTargets;
        /// <summary>
        /// Additional comments/reasons for the change in device status
        /// </summary>
        public readonly string Reason;
        public readonly string? ResourceTypeSchemaVersion;
        /// <summary>
        /// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
        /// </summary>
        public readonly ImmutableArray<string> Schemas;
        /// <summary>
        /// Attribute added for replication log, it is not used by IDCS, it is actual encrypted TOTP seed for the user
        /// </summary>
        public readonly string Seed;
        /// <summary>
        /// Attribute added for replication log, it is not used by IDCS, the DEK that encrypts the specific seed for that user
        /// </summary>
        public readonly string SeedDekId;
        /// <summary>
        /// Device Status
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// A list of tags on this resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsMyDeviceTagResult> Tags;
        /// <summary>
        /// Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
        /// </summary>
        public readonly string TenancyOcid;
        /// <summary>
        /// User's third-party authentication factor details
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsMyDeviceThirdPartyFactorResult> ThirdPartyFactors;
        /// <summary>
        /// Device member
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsMyDeviceUserResult> Users;

        [OutputConstructor]
        private GetDomainsMyDeviceResult(
            ImmutableArray<Outputs.GetDomainsMyDeviceAdditionalAttributeResult> additionalAttributes,

            string appVersion,

            ImmutableArray<string> attributeSets,

            string? attributes,

            ImmutableArray<Outputs.GetDomainsMyDeviceAuthenticationFactorResult> authenticationFactors,

            string authenticationMethod,

            string? authorization,

            string basePublicKey,

            string compartmentOcid,

            string countryCode,

            bool deleteInProgress,

            string deviceType,

            string deviceUuid,

            string displayName,

            string domainOcid,

            int expiresOn,

            string externalId,

            string id,

            ImmutableArray<Outputs.GetDomainsMyDeviceIdcsCreatedByResult> idcsCreatedBies,

            string idcsEndpoint,

            ImmutableArray<Outputs.GetDomainsMyDeviceIdcsLastModifiedByResult> idcsLastModifiedBies,

            string idcsLastUpgradedInRelease,

            ImmutableArray<string> idcsPreventedOperations,

            bool isAccRecEnabled,

            bool isCompliant,

            string lastSyncTime,

            string lastValidatedTime,

            ImmutableArray<Outputs.GetDomainsMyDeviceMetaResult> metas,

            string myDeviceId,

            ImmutableArray<Outputs.GetDomainsMyDeviceNonComplianceResult> nonCompliances,

            string ocid,

            string packageId,

            string phoneNumber,

            string platform,

            ImmutableArray<Outputs.GetDomainsMyDevicePushNotificationTargetResult> pushNotificationTargets,

            string reason,

            string? resourceTypeSchemaVersion,

            ImmutableArray<string> schemas,

            string seed,

            string seedDekId,

            string status,

            ImmutableArray<Outputs.GetDomainsMyDeviceTagResult> tags,

            string tenancyOcid,

            ImmutableArray<Outputs.GetDomainsMyDeviceThirdPartyFactorResult> thirdPartyFactors,

            ImmutableArray<Outputs.GetDomainsMyDeviceUserResult> users)
        {
            AdditionalAttributes = additionalAttributes;
            AppVersion = appVersion;
            AttributeSets = attributeSets;
            Attributes = attributes;
            AuthenticationFactors = authenticationFactors;
            AuthenticationMethod = authenticationMethod;
            Authorization = authorization;
            BasePublicKey = basePublicKey;
            CompartmentOcid = compartmentOcid;
            CountryCode = countryCode;
            DeleteInProgress = deleteInProgress;
            DeviceType = deviceType;
            DeviceUuid = deviceUuid;
            DisplayName = displayName;
            DomainOcid = domainOcid;
            ExpiresOn = expiresOn;
            ExternalId = externalId;
            Id = id;
            IdcsCreatedBies = idcsCreatedBies;
            IdcsEndpoint = idcsEndpoint;
            IdcsLastModifiedBies = idcsLastModifiedBies;
            IdcsLastUpgradedInRelease = idcsLastUpgradedInRelease;
            IdcsPreventedOperations = idcsPreventedOperations;
            IsAccRecEnabled = isAccRecEnabled;
            IsCompliant = isCompliant;
            LastSyncTime = lastSyncTime;
            LastValidatedTime = lastValidatedTime;
            Metas = metas;
            MyDeviceId = myDeviceId;
            NonCompliances = nonCompliances;
            Ocid = ocid;
            PackageId = packageId;
            PhoneNumber = phoneNumber;
            Platform = platform;
            PushNotificationTargets = pushNotificationTargets;
            Reason = reason;
            ResourceTypeSchemaVersion = resourceTypeSchemaVersion;
            Schemas = schemas;
            Seed = seed;
            SeedDekId = seedDekId;
            Status = status;
            Tags = tags;
            TenancyOcid = tenancyOcid;
            ThirdPartyFactors = thirdPartyFactors;
            Users = users;
        }
    }
}
