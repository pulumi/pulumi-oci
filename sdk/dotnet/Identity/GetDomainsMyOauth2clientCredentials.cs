// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Identity
{
    public static class GetDomainsMyOauth2clientCredentials
    {
        /// <summary>
        /// This data source provides the list of My O Auth2 Client Credentials in Oracle Cloud Infrastructure Identity Domains service.
        /// 
        /// Search for a user's own OAuth2 client credential.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMyOauth2clientCredentials = Oci.Identity.GetDomainsMyOauth2clientCredentials.Invoke(new()
        ///     {
        ///         IdcsEndpoint = testDomain.Url,
        ///         MyOauth2clientCredentialCount = myOauth2clientCredentialMyOauth2clientCredentialCount,
        ///         MyOauth2clientCredentialFilter = myOauth2clientCredentialMyOauth2clientCredentialFilter,
        ///         Authorization = myOauth2clientCredentialAuthorization,
        ///         ResourceTypeSchemaVersion = myOauth2clientCredentialResourceTypeSchemaVersion,
        ///         StartIndex = myOauth2clientCredentialStartIndex,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetDomainsMyOauth2clientCredentialsResult> InvokeAsync(GetDomainsMyOauth2clientCredentialsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDomainsMyOauth2clientCredentialsResult>("oci:Identity/getDomainsMyOauth2clientCredentials:getDomainsMyOauth2clientCredentials", args ?? new GetDomainsMyOauth2clientCredentialsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of My O Auth2 Client Credentials in Oracle Cloud Infrastructure Identity Domains service.
        /// 
        /// Search for a user's own OAuth2 client credential.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMyOauth2clientCredentials = Oci.Identity.GetDomainsMyOauth2clientCredentials.Invoke(new()
        ///     {
        ///         IdcsEndpoint = testDomain.Url,
        ///         MyOauth2clientCredentialCount = myOauth2clientCredentialMyOauth2clientCredentialCount,
        ///         MyOauth2clientCredentialFilter = myOauth2clientCredentialMyOauth2clientCredentialFilter,
        ///         Authorization = myOauth2clientCredentialAuthorization,
        ///         ResourceTypeSchemaVersion = myOauth2clientCredentialResourceTypeSchemaVersion,
        ///         StartIndex = myOauth2clientCredentialStartIndex,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDomainsMyOauth2clientCredentialsResult> Invoke(GetDomainsMyOauth2clientCredentialsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDomainsMyOauth2clientCredentialsResult>("oci:Identity/getDomainsMyOauth2clientCredentials:getDomainsMyOauth2clientCredentials", args ?? new GetDomainsMyOauth2clientCredentialsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of My O Auth2 Client Credentials in Oracle Cloud Infrastructure Identity Domains service.
        /// 
        /// Search for a user's own OAuth2 client credential.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMyOauth2clientCredentials = Oci.Identity.GetDomainsMyOauth2clientCredentials.Invoke(new()
        ///     {
        ///         IdcsEndpoint = testDomain.Url,
        ///         MyOauth2clientCredentialCount = myOauth2clientCredentialMyOauth2clientCredentialCount,
        ///         MyOauth2clientCredentialFilter = myOauth2clientCredentialMyOauth2clientCredentialFilter,
        ///         Authorization = myOauth2clientCredentialAuthorization,
        ///         ResourceTypeSchemaVersion = myOauth2clientCredentialResourceTypeSchemaVersion,
        ///         StartIndex = myOauth2clientCredentialStartIndex,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDomainsMyOauth2clientCredentialsResult> Invoke(GetDomainsMyOauth2clientCredentialsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDomainsMyOauth2clientCredentialsResult>("oci:Identity/getDomainsMyOauth2clientCredentials:getDomainsMyOauth2clientCredentials", args ?? new GetDomainsMyOauth2clientCredentialsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDomainsMyOauth2clientCredentialsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
        /// </summary>
        [Input("authorization")]
        public string? Authorization { get; set; }

        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        /// <summary>
        /// The basic endpoint for the identity domain
        /// </summary>
        [Input("idcsEndpoint", required: true)]
        public string IdcsEndpoint { get; set; } = null!;

        /// <summary>
        /// OPTIONAL. An integer that indicates the desired maximum number of query results per page. 1000 is the largest value that you can use. See the Pagination section of the System for Cross-Domain Identity Management Protocol specification for more information. (Section 3.4.2.4).
        /// </summary>
        [Input("myOauth2clientCredentialCount")]
        public int? MyOauth2clientCredentialCount { get; set; }

        /// <summary>
        /// OPTIONAL. The filter string that is used to request a subset of resources. The filter string MUST be a valid filter expression. See the Filtering section of the SCIM specification for more information (Section 3.4.2.2). The string should contain at least one condition that each item must match in order to be returned in the search results. Each condition specifies an attribute, an operator, and a value. Conditions within a filter can be connected by logical operators (such as AND and OR). Sets of conditions can be grouped together using parentheses.
        /// </summary>
        [Input("myOauth2clientCredentialFilter")]
        public string? MyOauth2clientCredentialFilter { get; set; }

        /// <summary>
        /// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
        /// </summary>
        [Input("resourceTypeSchemaVersion")]
        public string? ResourceTypeSchemaVersion { get; set; }

        [Input("sortBy")]
        public string? SortBy { get; set; }

        [Input("sortOrder")]
        public string? SortOrder { get; set; }

        /// <summary>
        /// OPTIONAL. An integer that indicates the 1-based index of the first query result. See the Pagination section of the SCIM specification for more information. (Section 3.4.2.4). The number of results pages to return. The first page is 1. Specify 2 to access the second page of results, and so on.
        /// </summary>
        [Input("startIndex")]
        public int? StartIndex { get; set; }

        public GetDomainsMyOauth2clientCredentialsArgs()
        {
        }
        public static new GetDomainsMyOauth2clientCredentialsArgs Empty => new GetDomainsMyOauth2clientCredentialsArgs();
    }

    public sealed class GetDomainsMyOauth2clientCredentialsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
        /// </summary>
        [Input("authorization")]
        public Input<string>? Authorization { get; set; }

        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// The basic endpoint for the identity domain
        /// </summary>
        [Input("idcsEndpoint", required: true)]
        public Input<string> IdcsEndpoint { get; set; } = null!;

        /// <summary>
        /// OPTIONAL. An integer that indicates the desired maximum number of query results per page. 1000 is the largest value that you can use. See the Pagination section of the System for Cross-Domain Identity Management Protocol specification for more information. (Section 3.4.2.4).
        /// </summary>
        [Input("myOauth2clientCredentialCount")]
        public Input<int>? MyOauth2clientCredentialCount { get; set; }

        /// <summary>
        /// OPTIONAL. The filter string that is used to request a subset of resources. The filter string MUST be a valid filter expression. See the Filtering section of the SCIM specification for more information (Section 3.4.2.2). The string should contain at least one condition that each item must match in order to be returned in the search results. Each condition specifies an attribute, an operator, and a value. Conditions within a filter can be connected by logical operators (such as AND and OR). Sets of conditions can be grouped together using parentheses.
        /// </summary>
        [Input("myOauth2clientCredentialFilter")]
        public Input<string>? MyOauth2clientCredentialFilter { get; set; }

        /// <summary>
        /// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
        /// </summary>
        [Input("resourceTypeSchemaVersion")]
        public Input<string>? ResourceTypeSchemaVersion { get; set; }

        [Input("sortBy")]
        public Input<string>? SortBy { get; set; }

        [Input("sortOrder")]
        public Input<string>? SortOrder { get; set; }

        /// <summary>
        /// OPTIONAL. An integer that indicates the 1-based index of the first query result. See the Pagination section of the SCIM specification for more information. (Section 3.4.2.4). The number of results pages to return. The first page is 1. Specify 2 to access the second page of results, and so on.
        /// </summary>
        [Input("startIndex")]
        public Input<int>? StartIndex { get; set; }

        public GetDomainsMyOauth2clientCredentialsInvokeArgs()
        {
        }
        public static new GetDomainsMyOauth2clientCredentialsInvokeArgs Empty => new GetDomainsMyOauth2clientCredentialsInvokeArgs();
    }


    [OutputType]
    public sealed class GetDomainsMyOauth2clientCredentialsResult
    {
        public readonly string? Authorization;
        public readonly string? CompartmentId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string IdcsEndpoint;
        public readonly int ItemsPerPage;
        public readonly int? MyOauth2clientCredentialCount;
        public readonly string? MyOauth2clientCredentialFilter;
        /// <summary>
        /// The list of my_oauth2client_credentials.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsMyOauth2clientCredentialsMyOauth2clientCredentialResult> MyOauth2clientCredentials;
        public readonly string? ResourceTypeSchemaVersion;
        /// <summary>
        /// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
        /// </summary>
        public readonly ImmutableArray<string> Schemas;
        public readonly string? SortBy;
        public readonly string? SortOrder;
        public readonly int? StartIndex;
        public readonly int TotalResults;

        [OutputConstructor]
        private GetDomainsMyOauth2clientCredentialsResult(
            string? authorization,

            string? compartmentId,

            string id,

            string idcsEndpoint,

            int itemsPerPage,

            int? myOauth2clientCredentialCount,

            string? myOauth2clientCredentialFilter,

            ImmutableArray<Outputs.GetDomainsMyOauth2clientCredentialsMyOauth2clientCredentialResult> myOauth2clientCredentials,

            string? resourceTypeSchemaVersion,

            ImmutableArray<string> schemas,

            string? sortBy,

            string? sortOrder,

            int? startIndex,

            int totalResults)
        {
            Authorization = authorization;
            CompartmentId = compartmentId;
            Id = id;
            IdcsEndpoint = idcsEndpoint;
            ItemsPerPage = itemsPerPage;
            MyOauth2clientCredentialCount = myOauth2clientCredentialCount;
            MyOauth2clientCredentialFilter = myOauth2clientCredentialFilter;
            MyOauth2clientCredentials = myOauth2clientCredentials;
            ResourceTypeSchemaVersion = resourceTypeSchemaVersion;
            Schemas = schemas;
            SortBy = sortBy;
            SortOrder = sortOrder;
            StartIndex = startIndex;
            TotalResults = totalResults;
        }
    }
}
