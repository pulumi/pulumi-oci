// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Identity
{
    public static class GetDomainsSelfRegistrationProfile
    {
        /// <summary>
        /// This data source provides details about a specific Self Registration Profile resource in Oracle Cloud Infrastructure Identity Domains service.
        /// 
        /// Get a self-registration profile.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSelfRegistrationProfile = Oci.Identity.GetDomainsSelfRegistrationProfile.Invoke(new()
        ///     {
        ///         IdcsEndpoint = testDomain.Url,
        ///         SelfRegistrationProfileId = testProfile.Id,
        ///         AttributeSets = new[]
        ///         {
        ///             "all",
        ///         },
        ///         Attributes = "",
        ///         Authorization = selfRegistrationProfileAuthorization,
        ///         ResourceTypeSchemaVersion = selfRegistrationProfileResourceTypeSchemaVersion,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetDomainsSelfRegistrationProfileResult> InvokeAsync(GetDomainsSelfRegistrationProfileArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDomainsSelfRegistrationProfileResult>("oci:Identity/getDomainsSelfRegistrationProfile:getDomainsSelfRegistrationProfile", args ?? new GetDomainsSelfRegistrationProfileArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Self Registration Profile resource in Oracle Cloud Infrastructure Identity Domains service.
        /// 
        /// Get a self-registration profile.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSelfRegistrationProfile = Oci.Identity.GetDomainsSelfRegistrationProfile.Invoke(new()
        ///     {
        ///         IdcsEndpoint = testDomain.Url,
        ///         SelfRegistrationProfileId = testProfile.Id,
        ///         AttributeSets = new[]
        ///         {
        ///             "all",
        ///         },
        ///         Attributes = "",
        ///         Authorization = selfRegistrationProfileAuthorization,
        ///         ResourceTypeSchemaVersion = selfRegistrationProfileResourceTypeSchemaVersion,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDomainsSelfRegistrationProfileResult> Invoke(GetDomainsSelfRegistrationProfileInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDomainsSelfRegistrationProfileResult>("oci:Identity/getDomainsSelfRegistrationProfile:getDomainsSelfRegistrationProfile", args ?? new GetDomainsSelfRegistrationProfileInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Self Registration Profile resource in Oracle Cloud Infrastructure Identity Domains service.
        /// 
        /// Get a self-registration profile.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSelfRegistrationProfile = Oci.Identity.GetDomainsSelfRegistrationProfile.Invoke(new()
        ///     {
        ///         IdcsEndpoint = testDomain.Url,
        ///         SelfRegistrationProfileId = testProfile.Id,
        ///         AttributeSets = new[]
        ///         {
        ///             "all",
        ///         },
        ///         Attributes = "",
        ///         Authorization = selfRegistrationProfileAuthorization,
        ///         ResourceTypeSchemaVersion = selfRegistrationProfileResourceTypeSchemaVersion,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDomainsSelfRegistrationProfileResult> Invoke(GetDomainsSelfRegistrationProfileInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDomainsSelfRegistrationProfileResult>("oci:Identity/getDomainsSelfRegistrationProfile:getDomainsSelfRegistrationProfile", args ?? new GetDomainsSelfRegistrationProfileInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDomainsSelfRegistrationProfileArgs : global::Pulumi.InvokeArgs
    {
        [Input("attributeSets")]
        private List<string>? _attributeSets;

        /// <summary>
        /// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
        /// </summary>
        public List<string> AttributeSets
        {
            get => _attributeSets ?? (_attributeSets = new List<string>());
            set => _attributeSets = value;
        }

        /// <summary>
        /// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
        /// </summary>
        [Input("attributes")]
        public string? Attributes { get; set; }

        /// <summary>
        /// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
        /// </summary>
        [Input("authorization")]
        public string? Authorization { get; set; }

        /// <summary>
        /// The basic endpoint for the identity domain
        /// </summary>
        [Input("idcsEndpoint", required: true)]
        public string IdcsEndpoint { get; set; } = null!;

        /// <summary>
        /// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
        /// </summary>
        [Input("resourceTypeSchemaVersion")]
        public string? ResourceTypeSchemaVersion { get; set; }

        /// <summary>
        /// ID of the resource
        /// </summary>
        [Input("selfRegistrationProfileId", required: true)]
        public string SelfRegistrationProfileId { get; set; } = null!;

        public GetDomainsSelfRegistrationProfileArgs()
        {
        }
        public static new GetDomainsSelfRegistrationProfileArgs Empty => new GetDomainsSelfRegistrationProfileArgs();
    }

    public sealed class GetDomainsSelfRegistrationProfileInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("attributeSets")]
        private InputList<string>? _attributeSets;

        /// <summary>
        /// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
        /// </summary>
        public InputList<string> AttributeSets
        {
            get => _attributeSets ?? (_attributeSets = new InputList<string>());
            set => _attributeSets = value;
        }

        /// <summary>
        /// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
        /// </summary>
        [Input("attributes")]
        public Input<string>? Attributes { get; set; }

        /// <summary>
        /// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
        /// </summary>
        [Input("authorization")]
        public Input<string>? Authorization { get; set; }

        /// <summary>
        /// The basic endpoint for the identity domain
        /// </summary>
        [Input("idcsEndpoint", required: true)]
        public Input<string> IdcsEndpoint { get; set; } = null!;

        /// <summary>
        /// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
        /// </summary>
        [Input("resourceTypeSchemaVersion")]
        public Input<string>? ResourceTypeSchemaVersion { get; set; }

        /// <summary>
        /// ID of the resource
        /// </summary>
        [Input("selfRegistrationProfileId", required: true)]
        public Input<string> SelfRegistrationProfileId { get; set; } = null!;

        public GetDomainsSelfRegistrationProfileInvokeArgs()
        {
        }
        public static new GetDomainsSelfRegistrationProfileInvokeArgs Empty => new GetDomainsSelfRegistrationProfileInvokeArgs();
    }


    [OutputType]
    public sealed class GetDomainsSelfRegistrationProfileResult
    {
        /// <summary>
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: true
        /// * returned: default
        /// * type: boolean
        /// * uniqueness: none A Boolean value that indicates whether Account verification email is required to be sent before login or not
        /// </summary>
        public readonly bool ActivationEmailRequired;
        /// <summary>
        /// A Boolean value that indicates whether the profile is enabled or not
        /// </summary>
        public readonly bool Active;
        /// <summary>
        /// Text to be displayed on UI after doing self registration
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsSelfRegistrationProfileAfterSubmitTextResult> AfterSubmitTexts;
        /// <summary>
        /// A Multivalue String value for Email domains which are valid for this profile
        /// </summary>
        public readonly ImmutableArray<string> AllowedEmailDomains;
        public readonly ImmutableArray<string> AttributeSets;
        public readonly string? Attributes;
        public readonly string? Authorization;
        /// <summary>
        /// Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
        /// </summary>
        public readonly string CompartmentOcid;
        /// <summary>
        /// A boolean value that indicates whether the consent text is present.
        /// </summary>
        public readonly bool ConsentTextPresent;
        /// <summary>
        /// Consent text
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsSelfRegistrationProfileConsentTextResult> ConsentTexts;
        /// <summary>
        /// Default groups assigned to the user
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsSelfRegistrationProfileDefaultGroupResult> DefaultGroups;
        /// <summary>
        /// A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
        /// </summary>
        public readonly bool DeleteInProgress;
        /// <summary>
        /// A Multivalue String Value for Email domains to be handled as exceptions
        /// </summary>
        public readonly ImmutableArray<string> DisallowedEmailDomains;
        /// <summary>
        /// Registration page name
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsSelfRegistrationProfileDisplayNameResult> DisplayNames;
        /// <summary>
        /// Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
        /// </summary>
        public readonly string DomainOcid;
        /// <summary>
        /// Email template
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsSelfRegistrationProfileEmailTemplateResult> EmailTemplates;
        /// <summary>
        /// An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
        /// </summary>
        public readonly string ExternalId;
        /// <summary>
        /// References to footer logo
        /// </summary>
        public readonly string FooterLogo;
        /// <summary>
        /// Footer text
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsSelfRegistrationProfileFooterTextResult> FooterTexts;
        /// <summary>
        /// Reference to header logo
        /// </summary>
        public readonly string HeaderLogo;
        /// <summary>
        /// Header text
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsSelfRegistrationProfileHeaderTextResult> HeaderTexts;
        /// <summary>
        /// Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The User or App who created the Resource
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsSelfRegistrationProfileIdcsCreatedByResult> IdcsCreatedBies;
        public readonly string IdcsEndpoint;
        /// <summary>
        /// The User or App who modified the Resource
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsSelfRegistrationProfileIdcsLastModifiedByResult> IdcsLastModifiedBies;
        /// <summary>
        /// The release number when the resource was upgraded.
        /// </summary>
        public readonly string IdcsLastUpgradedInRelease;
        /// <summary>
        /// Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
        /// </summary>
        public readonly ImmutableArray<string> IdcsPreventedOperations;
        /// <summary>
        /// A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsSelfRegistrationProfileMetaResult> Metas;
        /// <summary>
        /// Name of the profile
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Number of days redirect URL is valid
        /// </summary>
        public readonly int NumberOfDaysRedirectUrlIsValid;
        /// <summary>
        /// Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
        /// </summary>
        public readonly string Ocid;
        /// <summary>
        /// This URL will be replaced in email notification sent to user. When activation email required is set to true, user is created in \"pending verification\" state, upon clicking this link user will be able to activate himself. When activation email required is set to false, user is created in \"verified\" state, this link will be used to verify user's email.
        /// </summary>
        public readonly string RedirectUrl;
        public readonly string? ResourceTypeSchemaVersion;
        /// <summary>
        /// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
        /// </summary>
        public readonly ImmutableArray<string> Schemas;
        public readonly string SelfRegistrationProfileId;
        /// <summary>
        /// A Boolean value that indicates whether the profile should be displayed on login page
        /// </summary>
        public readonly bool ShowOnLoginPage;
        /// <summary>
        /// A list of tags on this resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsSelfRegistrationProfileTagResult> Tags;
        /// <summary>
        /// Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
        /// </summary>
        public readonly string TenancyOcid;
        /// <summary>
        /// **SCIM++ Properties:**
        /// * idcsCompositeKey: [value]
        /// * idcsSearchable: true
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: complex
        /// * uniqueness: none User Attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsSelfRegistrationProfileUserAttributeResult> UserAttributes;

        [OutputConstructor]
        private GetDomainsSelfRegistrationProfileResult(
            bool activationEmailRequired,

            bool active,

            ImmutableArray<Outputs.GetDomainsSelfRegistrationProfileAfterSubmitTextResult> afterSubmitTexts,

            ImmutableArray<string> allowedEmailDomains,

            ImmutableArray<string> attributeSets,

            string? attributes,

            string? authorization,

            string compartmentOcid,

            bool consentTextPresent,

            ImmutableArray<Outputs.GetDomainsSelfRegistrationProfileConsentTextResult> consentTexts,

            ImmutableArray<Outputs.GetDomainsSelfRegistrationProfileDefaultGroupResult> defaultGroups,

            bool deleteInProgress,

            ImmutableArray<string> disallowedEmailDomains,

            ImmutableArray<Outputs.GetDomainsSelfRegistrationProfileDisplayNameResult> displayNames,

            string domainOcid,

            ImmutableArray<Outputs.GetDomainsSelfRegistrationProfileEmailTemplateResult> emailTemplates,

            string externalId,

            string footerLogo,

            ImmutableArray<Outputs.GetDomainsSelfRegistrationProfileFooterTextResult> footerTexts,

            string headerLogo,

            ImmutableArray<Outputs.GetDomainsSelfRegistrationProfileHeaderTextResult> headerTexts,

            string id,

            ImmutableArray<Outputs.GetDomainsSelfRegistrationProfileIdcsCreatedByResult> idcsCreatedBies,

            string idcsEndpoint,

            ImmutableArray<Outputs.GetDomainsSelfRegistrationProfileIdcsLastModifiedByResult> idcsLastModifiedBies,

            string idcsLastUpgradedInRelease,

            ImmutableArray<string> idcsPreventedOperations,

            ImmutableArray<Outputs.GetDomainsSelfRegistrationProfileMetaResult> metas,

            string name,

            int numberOfDaysRedirectUrlIsValid,

            string ocid,

            string redirectUrl,

            string? resourceTypeSchemaVersion,

            ImmutableArray<string> schemas,

            string selfRegistrationProfileId,

            bool showOnLoginPage,

            ImmutableArray<Outputs.GetDomainsSelfRegistrationProfileTagResult> tags,

            string tenancyOcid,

            ImmutableArray<Outputs.GetDomainsSelfRegistrationProfileUserAttributeResult> userAttributes)
        {
            ActivationEmailRequired = activationEmailRequired;
            Active = active;
            AfterSubmitTexts = afterSubmitTexts;
            AllowedEmailDomains = allowedEmailDomains;
            AttributeSets = attributeSets;
            Attributes = attributes;
            Authorization = authorization;
            CompartmentOcid = compartmentOcid;
            ConsentTextPresent = consentTextPresent;
            ConsentTexts = consentTexts;
            DefaultGroups = defaultGroups;
            DeleteInProgress = deleteInProgress;
            DisallowedEmailDomains = disallowedEmailDomains;
            DisplayNames = displayNames;
            DomainOcid = domainOcid;
            EmailTemplates = emailTemplates;
            ExternalId = externalId;
            FooterLogo = footerLogo;
            FooterTexts = footerTexts;
            HeaderLogo = headerLogo;
            HeaderTexts = headerTexts;
            Id = id;
            IdcsCreatedBies = idcsCreatedBies;
            IdcsEndpoint = idcsEndpoint;
            IdcsLastModifiedBies = idcsLastModifiedBies;
            IdcsLastUpgradedInRelease = idcsLastUpgradedInRelease;
            IdcsPreventedOperations = idcsPreventedOperations;
            Metas = metas;
            Name = name;
            NumberOfDaysRedirectUrlIsValid = numberOfDaysRedirectUrlIsValid;
            Ocid = ocid;
            RedirectUrl = redirectUrl;
            ResourceTypeSchemaVersion = resourceTypeSchemaVersion;
            Schemas = schemas;
            SelfRegistrationProfileId = selfRegistrationProfileId;
            ShowOnLoginPage = showOnLoginPage;
            Tags = tags;
            TenancyOcid = tenancyOcid;
            UserAttributes = userAttributes;
        }
    }
}
