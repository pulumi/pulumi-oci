// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Identity
{
    public static class GetDomainsSetting
    {
        /// <summary>
        /// This data source provides details about a specific Setting resource in Oracle Cloud Infrastructure Identity Domains service.
        /// 
        /// Get Settings
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSetting = Oci.Identity.GetDomainsSetting.Invoke(new()
        ///     {
        ///         IdcsEndpoint = data.Oci_identity_domain.Test_domain.Url,
        ///         SettingId = "Settings",
        ///         AttributeSets = new[]
        ///         {
        ///             "all",
        ///         },
        ///         Attributes = "",
        ///         Authorization = @var.Setting_authorization,
        ///         ResourceTypeSchemaVersion = @var.Setting_resource_type_schema_version,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetDomainsSettingResult> InvokeAsync(GetDomainsSettingArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDomainsSettingResult>("oci:Identity/getDomainsSetting:getDomainsSetting", args ?? new GetDomainsSettingArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Setting resource in Oracle Cloud Infrastructure Identity Domains service.
        /// 
        /// Get Settings
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSetting = Oci.Identity.GetDomainsSetting.Invoke(new()
        ///     {
        ///         IdcsEndpoint = data.Oci_identity_domain.Test_domain.Url,
        ///         SettingId = "Settings",
        ///         AttributeSets = new[]
        ///         {
        ///             "all",
        ///         },
        ///         Attributes = "",
        ///         Authorization = @var.Setting_authorization,
        ///         ResourceTypeSchemaVersion = @var.Setting_resource_type_schema_version,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetDomainsSettingResult> Invoke(GetDomainsSettingInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDomainsSettingResult>("oci:Identity/getDomainsSetting:getDomainsSetting", args ?? new GetDomainsSettingInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDomainsSettingArgs : global::Pulumi.InvokeArgs
    {
        [Input("attributeSets")]
        private List<string>? _attributeSets;

        /// <summary>
        /// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
        /// </summary>
        public List<string> AttributeSets
        {
            get => _attributeSets ?? (_attributeSets = new List<string>());
            set => _attributeSets = value;
        }

        /// <summary>
        /// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
        /// </summary>
        [Input("attributes")]
        public string? Attributes { get; set; }

        /// <summary>
        /// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
        /// </summary>
        [Input("authorization")]
        public string? Authorization { get; set; }

        /// <summary>
        /// The basic endpoint for the identity domain
        /// </summary>
        [Input("idcsEndpoint", required: true)]
        public string IdcsEndpoint { get; set; } = null!;

        /// <summary>
        /// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
        /// </summary>
        [Input("resourceTypeSchemaVersion")]
        public string? ResourceTypeSchemaVersion { get; set; }

        /// <summary>
        /// ID of the resource
        /// </summary>
        [Input("settingId", required: true)]
        public string SettingId { get; set; } = null!;

        public GetDomainsSettingArgs()
        {
        }
        public static new GetDomainsSettingArgs Empty => new GetDomainsSettingArgs();
    }

    public sealed class GetDomainsSettingInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("attributeSets")]
        private InputList<string>? _attributeSets;

        /// <summary>
        /// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
        /// </summary>
        public InputList<string> AttributeSets
        {
            get => _attributeSets ?? (_attributeSets = new InputList<string>());
            set => _attributeSets = value;
        }

        /// <summary>
        /// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
        /// </summary>
        [Input("attributes")]
        public Input<string>? Attributes { get; set; }

        /// <summary>
        /// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
        /// </summary>
        [Input("authorization")]
        public Input<string>? Authorization { get; set; }

        /// <summary>
        /// The basic endpoint for the identity domain
        /// </summary>
        [Input("idcsEndpoint", required: true)]
        public Input<string> IdcsEndpoint { get; set; } = null!;

        /// <summary>
        /// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
        /// </summary>
        [Input("resourceTypeSchemaVersion")]
        public Input<string>? ResourceTypeSchemaVersion { get; set; }

        /// <summary>
        /// ID of the resource
        /// </summary>
        [Input("settingId", required: true)]
        public Input<string> SettingId { get; set; } = null!;

        public GetDomainsSettingInvokeArgs()
        {
        }
        public static new GetDomainsSettingInvokeArgs Empty => new GetDomainsSettingInvokeArgs();
    }


    [OutputType]
    public sealed class GetDomainsSettingResult
    {
        /// <summary>
        /// Indicates whether all the Apps in this customer tenancy should trust each other. A value of true overrides the 'defaultTrustScope' attribute here in Settings, as well as any App-specific 'trustScope' attribute, to force in effect 'trustScope=Account' for every App in this customer tenancy.
        /// </summary>
        public readonly bool AccountAlwaysTrustScope;
        /// <summary>
        /// One or more email domains allowed in a user's email field. If unassigned, any domain is allowed.
        /// </summary>
        public readonly ImmutableArray<string> AllowedDomains;
        /// <summary>
        /// If specified, indicates the set of Urls which can be returned to after successful forgot password flow
        /// </summary>
        public readonly ImmutableArray<string> AllowedForgotPasswordFlowReturnUrls;
        /// <summary>
        /// If specified, indicates the set of allowed notification redirect Urls which can be specified as the value of \"notificationRedirectUrl\" in the POST .../admin/v1/MePasswordResetRequestor request payload, which will then be included in the reset password email notification sent to a user as part of the forgot password / password reset flow.
        /// </summary>
        public readonly ImmutableArray<string> AllowedNotificationRedirectUrls;
        public readonly ImmutableArray<string> AttributeSets;
        public readonly string? Attributes;
        /// <summary>
        /// Audit Event retention period. If set, overrides default of 30 days after which Audit Events will be purged
        /// </summary>
        public readonly int AuditEventRetentionPeriod;
        public readonly string? Authorization;
        /// <summary>
        /// Certificate Validation Config
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsSettingCertificateValidationResult> CertificateValidations;
        /// <summary>
        /// The attribute to store the cloud account name
        /// </summary>
        public readonly string CloudAccountName;
        /// <summary>
        /// A complex attribute that specifies the Cloud Gate cross origin resource sharing settings.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsSettingCloudGateCorsSettingResult> CloudGateCorsSettings;
        /// <summary>
        /// If specified, indicates the custom SIM Migrator Url which can be used while SIM to Oracle Identity Cloud Service CloudAccount Migration.
        /// </summary>
        public readonly string CloudMigrationCustomUrl;
        /// <summary>
        /// CloudAccountMigration: Enable Custom SIM Migrator Url.
        /// </summary>
        public readonly bool CloudMigrationUrlEnabled;
        /// <summary>
        /// Name of the company in different locales
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsSettingCompanyNameResult> CompanyNames;
        /// <summary>
        /// Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
        /// </summary>
        public readonly string CompartmentOcid;
        /// <summary>
        /// Contact emails used to notify tenants. Can be one or more user or group alias emails.
        /// </summary>
        public readonly ImmutableArray<string> ContactEmails;
        /// <summary>
        /// This value indicates whether Customer Service Representatives can login and have readOnly or readWrite access.  A value of 'none' means CSR cannot login to the services.
        /// </summary>
        public readonly string CsrAccess;
        /// <summary>
        /// Indicates if the branding is default or custom
        /// </summary>
        public readonly bool CustomBranding;
        /// <summary>
        /// Storage URL location where the sanitized custom css is located
        /// </summary>
        public readonly string CustomCssLocation;
        /// <summary>
        /// Storage URL location where the sanitized custom html is located
        /// </summary>
        public readonly string CustomHtmlLocation;
        /// <summary>
        /// Custom translations (JSON String)
        /// </summary>
        public readonly string CustomTranslation;
        /// <summary>
        /// Default name of the Company in different locales
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsSettingDefaultCompanyNameResult> DefaultCompanyNames;
        /// <summary>
        /// References to various images
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsSettingDefaultImageResult> DefaultImages;
        /// <summary>
        /// Default Login text in different locales
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsSettingDefaultLoginTextResult> DefaultLoginTexts;
        /// <summary>
        /// **Deprecated Since: 18.3.6**
        /// </summary>
        public readonly string DefaultTrustScope;
        /// <summary>
        /// A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
        /// </summary>
        public readonly bool DeleteInProgress;
        /// <summary>
        /// The level of diagnostic logging that is currently in effect. A level of 0 (zero) indicates that diagnostic logging is disabled. A level of 1 (one) indicates that diagnostic logging is enabled.
        /// </summary>
        public readonly int DiagnosticLevel;
        /// <summary>
        /// Controls whether DiagnosticRecords for external search-operations (against SCIM resource-types in the Admin service) identify returned resources.  If true, indicates that for each successful external search-operation at least one DiagnosticRecord will include at least one identifier for each matching resource that is returned in that search-response.  If false, no DiagnosticRecord should be expected to identify returned resources for a search-operation.  The default value is false.
        /// </summary>
        public readonly bool DiagnosticRecordForSearchIdentifiesReturnedResources;
        /// <summary>
        /// The end time up to which diagnostic recording is switched on
        /// </summary>
        public readonly string DiagnosticTracingUpto;
        /// <summary>
        /// Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
        /// </summary>
        public readonly string DomainOcid;
        /// <summary>
        /// Indicates if Terms of Use is enabled in UI
        /// </summary>
        public readonly bool EnableTermsOfUse;
        /// <summary>
        /// An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
        /// </summary>
        public readonly string ExternalId;
        /// <summary>
        /// Maximum duration for IAM User Principal Session Token expiry
        /// </summary>
        public readonly int IamUpstSessionExpiry;
        /// <summary>
        /// Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The User or App who created the Resource
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsSettingIdcsCreatedByResult> IdcsCreatedBies;
        public readonly string IdcsEndpoint;
        /// <summary>
        /// The User or App who modified the Resource
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsSettingIdcsLastModifiedByResult> IdcsLastModifiedBies;
        /// <summary>
        /// The release number when the resource was upgraded.
        /// </summary>
        public readonly string IdcsLastUpgradedInRelease;
        /// <summary>
        /// Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
        /// </summary>
        public readonly ImmutableArray<string> IdcsPreventedOperations;
        /// <summary>
        /// References to various images
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsSettingImageResult> Images;
        /// <summary>
        /// Indicates if 'hosted' option was selected
        /// </summary>
        public readonly bool IsHostedPage;
        /// <summary>
        /// Tenant issuer.
        /// </summary>
        public readonly string Issuer;
        /// <summary>
        /// Locale
        /// </summary>
        public readonly string Locale;
        /// <summary>
        /// Login text in different locales
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsSettingLoginTextResult> LoginTexts;
        /// <summary>
        /// Limit the maximum return of CMVA for an App
        /// </summary>
        public readonly int MaxNoOfAppCmvaToReturn;
        /// <summary>
        /// Limit the maximum return of members for an AppRole
        /// </summary>
        public readonly int MaxNoOfAppRoleMembersToReturn;
        /// <summary>
        /// A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsSettingMetaResult> Metas;
        /// <summary>
        /// Database Migration Status
        /// </summary>
        public readonly string MigrationStatus;
        /// <summary>
        /// Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
        /// </summary>
        public readonly string Ocid;
        /// <summary>
        /// On-Premises provisioning feature toggle.
        /// </summary>
        public readonly bool OnPremisesProvisioning;
        /// <summary>
        /// Preferred written or spoken language used for localized user interfaces
        /// </summary>
        public readonly string PreferredLanguage;
        /// <summary>
        /// Previous Tenant issuer. This is an Oracle Identity Cloud Service internal attribute which is not meant to be directly modified by ID Admin. Even if the request body (Settings) contains this attribute, the actual value will be set according to the Oracle Identity Cloud Service internal logic rather than solely based on the value provided in the request payload.
        /// </summary>
        public readonly string PrevIssuer;
        /// <summary>
        /// Privacy Policy URL
        /// </summary>
        public readonly string PrivacyPolicyUrl;
        /// <summary>
        /// Purge Configs for different Resource Types
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsSettingPurgeConfigResult> PurgeConfigs;
        /// <summary>
        /// If reAuthWhenChangingMyAuthenticationFactors is true (default), this attribute specifies which re-authentication factor to use. Allowed value is \"password\".
        /// </summary>
        public readonly ImmutableArray<string> ReAuthFactors;
        /// <summary>
        /// Specifies whether re-authentication is required or not when a user changes one of their security factors such as password or email. Default is true to ensure more secure behavior.
        /// </summary>
        public readonly bool ReAuthWhenChangingMyAuthenticationFactors;
        public readonly string? ResourceTypeSchemaVersion;
        /// <summary>
        /// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
        /// </summary>
        public readonly ImmutableArray<string> Schemas;
        /// <summary>
        /// By default, a service admin can list all users in stripe. If true, a service admin cannot list other users.
        /// </summary>
        public readonly bool ServiceAdminCannotListOtherUsers;
        public readonly string SettingId;
        /// <summary>
        /// Indicates if access on SigningCert is allowed to public or not
        /// </summary>
        public readonly bool SigningCertPublicAccess;
        /// <summary>
        /// **Added In:** 20.1.3
        /// </summary>
        public readonly string SubMappingAttr;
        /// <summary>
        /// A list of tags on this resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsSettingTagResult> Tags;
        /// <summary>
        /// Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
        /// </summary>
        public readonly string TenancyOcid;
        /// <summary>
        /// Custom claims associated with the specific tenant
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsSettingTenantCustomClaimResult> TenantCustomClaims;
        /// <summary>
        /// Terms of Use URL
        /// </summary>
        public readonly string TermsOfUseUrl;
        /// <summary>
        /// User's timezone
        /// </summary>
        public readonly string Timezone;

        [OutputConstructor]
        private GetDomainsSettingResult(
            bool accountAlwaysTrustScope,

            ImmutableArray<string> allowedDomains,

            ImmutableArray<string> allowedForgotPasswordFlowReturnUrls,

            ImmutableArray<string> allowedNotificationRedirectUrls,

            ImmutableArray<string> attributeSets,

            string? attributes,

            int auditEventRetentionPeriod,

            string? authorization,

            ImmutableArray<Outputs.GetDomainsSettingCertificateValidationResult> certificateValidations,

            string cloudAccountName,

            ImmutableArray<Outputs.GetDomainsSettingCloudGateCorsSettingResult> cloudGateCorsSettings,

            string cloudMigrationCustomUrl,

            bool cloudMigrationUrlEnabled,

            ImmutableArray<Outputs.GetDomainsSettingCompanyNameResult> companyNames,

            string compartmentOcid,

            ImmutableArray<string> contactEmails,

            string csrAccess,

            bool customBranding,

            string customCssLocation,

            string customHtmlLocation,

            string customTranslation,

            ImmutableArray<Outputs.GetDomainsSettingDefaultCompanyNameResult> defaultCompanyNames,

            ImmutableArray<Outputs.GetDomainsSettingDefaultImageResult> defaultImages,

            ImmutableArray<Outputs.GetDomainsSettingDefaultLoginTextResult> defaultLoginTexts,

            string defaultTrustScope,

            bool deleteInProgress,

            int diagnosticLevel,

            bool diagnosticRecordForSearchIdentifiesReturnedResources,

            string diagnosticTracingUpto,

            string domainOcid,

            bool enableTermsOfUse,

            string externalId,

            int iamUpstSessionExpiry,

            string id,

            ImmutableArray<Outputs.GetDomainsSettingIdcsCreatedByResult> idcsCreatedBies,

            string idcsEndpoint,

            ImmutableArray<Outputs.GetDomainsSettingIdcsLastModifiedByResult> idcsLastModifiedBies,

            string idcsLastUpgradedInRelease,

            ImmutableArray<string> idcsPreventedOperations,

            ImmutableArray<Outputs.GetDomainsSettingImageResult> images,

            bool isHostedPage,

            string issuer,

            string locale,

            ImmutableArray<Outputs.GetDomainsSettingLoginTextResult> loginTexts,

            int maxNoOfAppCmvaToReturn,

            int maxNoOfAppRoleMembersToReturn,

            ImmutableArray<Outputs.GetDomainsSettingMetaResult> metas,

            string migrationStatus,

            string ocid,

            bool onPremisesProvisioning,

            string preferredLanguage,

            string prevIssuer,

            string privacyPolicyUrl,

            ImmutableArray<Outputs.GetDomainsSettingPurgeConfigResult> purgeConfigs,

            ImmutableArray<string> reAuthFactors,

            bool reAuthWhenChangingMyAuthenticationFactors,

            string? resourceTypeSchemaVersion,

            ImmutableArray<string> schemas,

            bool serviceAdminCannotListOtherUsers,

            string settingId,

            bool signingCertPublicAccess,

            string subMappingAttr,

            ImmutableArray<Outputs.GetDomainsSettingTagResult> tags,

            string tenancyOcid,

            ImmutableArray<Outputs.GetDomainsSettingTenantCustomClaimResult> tenantCustomClaims,

            string termsOfUseUrl,

            string timezone)
        {
            AccountAlwaysTrustScope = accountAlwaysTrustScope;
            AllowedDomains = allowedDomains;
            AllowedForgotPasswordFlowReturnUrls = allowedForgotPasswordFlowReturnUrls;
            AllowedNotificationRedirectUrls = allowedNotificationRedirectUrls;
            AttributeSets = attributeSets;
            Attributes = attributes;
            AuditEventRetentionPeriod = auditEventRetentionPeriod;
            Authorization = authorization;
            CertificateValidations = certificateValidations;
            CloudAccountName = cloudAccountName;
            CloudGateCorsSettings = cloudGateCorsSettings;
            CloudMigrationCustomUrl = cloudMigrationCustomUrl;
            CloudMigrationUrlEnabled = cloudMigrationUrlEnabled;
            CompanyNames = companyNames;
            CompartmentOcid = compartmentOcid;
            ContactEmails = contactEmails;
            CsrAccess = csrAccess;
            CustomBranding = customBranding;
            CustomCssLocation = customCssLocation;
            CustomHtmlLocation = customHtmlLocation;
            CustomTranslation = customTranslation;
            DefaultCompanyNames = defaultCompanyNames;
            DefaultImages = defaultImages;
            DefaultLoginTexts = defaultLoginTexts;
            DefaultTrustScope = defaultTrustScope;
            DeleteInProgress = deleteInProgress;
            DiagnosticLevel = diagnosticLevel;
            DiagnosticRecordForSearchIdentifiesReturnedResources = diagnosticRecordForSearchIdentifiesReturnedResources;
            DiagnosticTracingUpto = diagnosticTracingUpto;
            DomainOcid = domainOcid;
            EnableTermsOfUse = enableTermsOfUse;
            ExternalId = externalId;
            IamUpstSessionExpiry = iamUpstSessionExpiry;
            Id = id;
            IdcsCreatedBies = idcsCreatedBies;
            IdcsEndpoint = idcsEndpoint;
            IdcsLastModifiedBies = idcsLastModifiedBies;
            IdcsLastUpgradedInRelease = idcsLastUpgradedInRelease;
            IdcsPreventedOperations = idcsPreventedOperations;
            Images = images;
            IsHostedPage = isHostedPage;
            Issuer = issuer;
            Locale = locale;
            LoginTexts = loginTexts;
            MaxNoOfAppCmvaToReturn = maxNoOfAppCmvaToReturn;
            MaxNoOfAppRoleMembersToReturn = maxNoOfAppRoleMembersToReturn;
            Metas = metas;
            MigrationStatus = migrationStatus;
            Ocid = ocid;
            OnPremisesProvisioning = onPremisesProvisioning;
            PreferredLanguage = preferredLanguage;
            PrevIssuer = prevIssuer;
            PrivacyPolicyUrl = privacyPolicyUrl;
            PurgeConfigs = purgeConfigs;
            ReAuthFactors = reAuthFactors;
            ReAuthWhenChangingMyAuthenticationFactors = reAuthWhenChangingMyAuthenticationFactors;
            ResourceTypeSchemaVersion = resourceTypeSchemaVersion;
            Schemas = schemas;
            ServiceAdminCannotListOtherUsers = serviceAdminCannotListOtherUsers;
            SettingId = settingId;
            SigningCertPublicAccess = signingCertPublicAccess;
            SubMappingAttr = subMappingAttr;
            Tags = tags;
            TenancyOcid = tenancyOcid;
            TenantCustomClaims = tenantCustomClaims;
            TermsOfUseUrl = termsOfUseUrl;
            Timezone = timezone;
        }
    }
}
