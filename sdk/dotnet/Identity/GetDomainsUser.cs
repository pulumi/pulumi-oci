// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Identity
{
    public static class GetDomainsUser
    {
        /// <summary>
        /// This data source provides details about a specific User resource in Oracle Cloud Infrastructure Identity Domains service.
        /// 
        /// Get a user.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testUser = Oci.Identity.GetDomainsUser.Invoke(new()
        ///     {
        ///         IdcsEndpoint = data.Oci_identity_domain.Test_domain.Url,
        ///         UserId = oci_identity_user.Test_user.Id,
        ///         AttributeSets = new() { },
        ///         Attributes = "",
        ///         Authorization = @var.User_authorization,
        ///         ResourceTypeSchemaVersion = @var.User_resource_type_schema_version,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetDomainsUserResult> InvokeAsync(GetDomainsUserArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDomainsUserResult>("oci:Identity/getDomainsUser:getDomainsUser", args ?? new GetDomainsUserArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific User resource in Oracle Cloud Infrastructure Identity Domains service.
        /// 
        /// Get a user.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testUser = Oci.Identity.GetDomainsUser.Invoke(new()
        ///     {
        ///         IdcsEndpoint = data.Oci_identity_domain.Test_domain.Url,
        ///         UserId = oci_identity_user.Test_user.Id,
        ///         AttributeSets = new() { },
        ///         Attributes = "",
        ///         Authorization = @var.User_authorization,
        ///         ResourceTypeSchemaVersion = @var.User_resource_type_schema_version,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetDomainsUserResult> Invoke(GetDomainsUserInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDomainsUserResult>("oci:Identity/getDomainsUser:getDomainsUser", args ?? new GetDomainsUserInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDomainsUserArgs : global::Pulumi.InvokeArgs
    {
        [Input("attributeSets")]
        private List<string>? _attributeSets;

        /// <summary>
        /// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
        /// </summary>
        public List<string> AttributeSets
        {
            get => _attributeSets ?? (_attributeSets = new List<string>());
            set => _attributeSets = value;
        }

        /// <summary>
        /// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
        /// </summary>
        [Input("attributes")]
        public string? Attributes { get; set; }

        /// <summary>
        /// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
        /// </summary>
        [Input("authorization")]
        public string? Authorization { get; set; }

        /// <summary>
        /// The basic endpoint for the identity domain
        /// </summary>
        [Input("idcsEndpoint", required: true)]
        public string IdcsEndpoint { get; set; } = null!;

        /// <summary>
        /// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
        /// </summary>
        [Input("resourceTypeSchemaVersion")]
        public string? ResourceTypeSchemaVersion { get; set; }

        /// <summary>
        /// ID of the resource
        /// </summary>
        [Input("userId", required: true)]
        public string UserId { get; set; } = null!;

        public GetDomainsUserArgs()
        {
        }
        public static new GetDomainsUserArgs Empty => new GetDomainsUserArgs();
    }

    public sealed class GetDomainsUserInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("attributeSets")]
        private InputList<string>? _attributeSets;

        /// <summary>
        /// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
        /// </summary>
        public InputList<string> AttributeSets
        {
            get => _attributeSets ?? (_attributeSets = new InputList<string>());
            set => _attributeSets = value;
        }

        /// <summary>
        /// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
        /// </summary>
        [Input("attributes")]
        public Input<string>? Attributes { get; set; }

        /// <summary>
        /// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
        /// </summary>
        [Input("authorization")]
        public Input<string>? Authorization { get; set; }

        /// <summary>
        /// The basic endpoint for the identity domain
        /// </summary>
        [Input("idcsEndpoint", required: true)]
        public Input<string> IdcsEndpoint { get; set; } = null!;

        /// <summary>
        /// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
        /// </summary>
        [Input("resourceTypeSchemaVersion")]
        public Input<string>? ResourceTypeSchemaVersion { get; set; }

        /// <summary>
        /// ID of the resource
        /// </summary>
        [Input("userId", required: true)]
        public Input<string> UserId { get; set; } = null!;

        public GetDomainsUserInvokeArgs()
        {
        }
        public static new GetDomainsUserInvokeArgs Empty => new GetDomainsUserInvokeArgs();
    }


    [OutputType]
    public sealed class GetDomainsUserResult
    {
        /// <summary>
        /// Status of the account
        /// </summary>
        public readonly bool Active;
        /// <summary>
        /// A physical mailing address for this User, as described in (address Element). Canonical Type Values of work, home, and other. The value attribute is a complex type with the following sub-attributes.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsUserAddressResult> Addresses;
        public readonly ImmutableArray<string> AttributeSets;
        public readonly string? Attributes;
        public readonly string? Authorization;
        /// <summary>
        /// Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
        /// </summary>
        public readonly string CompartmentOcid;
        /// <summary>
        /// A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
        /// </summary>
        public readonly bool DeleteInProgress;
        /// <summary>
        /// Description of the user
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The displayName of the User's manager. OPTIONAL and READ-ONLY.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
        /// </summary>
        public readonly string DomainOcid;
        /// <summary>
        /// A complex attribute representing emails
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsUserEmailResult> Emails;
        /// <summary>
        /// A list of entitlements for the User that represent a thing the User has.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsUserEntitlementResult> Entitlements;
        /// <summary>
        /// An identifier for the Resource as defined by the Service Consumer. READ-ONLY.
        /// </summary>
        public readonly string ExternalId;
        /// <summary>
        /// A list of groups that the user belongs to, either thorough direct membership, nested groups, or dynamically calculated
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsUserGroupResult> Groups;
        /// <summary>
        /// Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The User or App who created the Resource
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsUserIdcsCreatedByResult> IdcsCreatedBies;
        public readonly string IdcsEndpoint;
        /// <summary>
        /// The User or App who modified the Resource
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsUserIdcsLastModifiedByResult> IdcsLastModifiedBies;
        /// <summary>
        /// The release number when the resource was upgraded.
        /// </summary>
        public readonly string IdcsLastUpgradedInRelease;
        /// <summary>
        /// Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
        /// </summary>
        public readonly ImmutableArray<string> IdcsPreventedOperations;
        /// <summary>
        /// User's instant messaging addresses
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsUserImResult> Ims;
        /// <summary>
        /// Used to indicate the User's default location for purposes of localizing items such as currency, date and time format, numerical representations, and so on.
        /// </summary>
        public readonly string Locale;
        /// <summary>
        /// A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsUserMetaResult> Metas;
        /// <summary>
        /// Name of the account assigned to the User.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsUserNameResult> Names;
        /// <summary>
        /// Nick name
        /// </summary>
        public readonly string NickName;
        /// <summary>
        /// The OCID of the user's support account.
        /// </summary>
        public readonly string Ocid;
        /// <summary>
        /// Password attribute. Max length for password is controlled via Password Policy.
        /// </summary>
        public readonly string Password;
        /// <summary>
        /// Phone numbers
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsUserPhoneNumberResult> PhoneNumbers;
        /// <summary>
        /// URLs of photos for the User
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsUserPhotoResult> Photos;
        /// <summary>
        /// User's preferred written or spoken language used for localized user interfaces
        /// </summary>
        public readonly string PreferredLanguage;
        /// <summary>
        /// A fully-qualified URL to a page representing the User's online profile
        /// </summary>
        public readonly string ProfileUrl;
        public readonly string? ResourceTypeSchemaVersion;
        /// <summary>
        /// A list of roles for the User that collectively represent who the User is; e.g., 'Student', 'Faculty'.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsUserRoleResult> Roles;
        /// <summary>
        /// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
        /// </summary>
        public readonly ImmutableArray<string> Schemas;
        /// <summary>
        /// A list of tags on this resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsUserTagResult> Tags;
        /// <summary>
        /// Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
        /// </summary>
        public readonly string TenancyOcid;
        /// <summary>
        /// User's timezone
        /// </summary>
        public readonly string Timezone;
        /// <summary>
        /// Title
        /// </summary>
        public readonly string Title;
        /// <summary>
        /// Enterprise User
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsUserUrnietfparamsscimschemasextensionenterprise20userResult> Urnietfparamsscimschemasextensionenterprise20users;
        /// <summary>
        /// Oracle Cloud Infrastructure Tags.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionOciTagResult> UrnietfparamsscimschemasoracleidcsextensionOciTags;
        /// <summary>
        /// This extension defines attributes to manage user's risk score.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserResult> UrnietfparamsscimschemasoracleidcsextensionadaptiveUsers;
        /// <summary>
        /// User's Capabilities
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsUserUrnietfparamsscimschemasoracleidcsextensioncapabilitiesUserResult> UrnietfparamsscimschemasoracleidcsextensioncapabilitiesUsers;
        /// <summary>
        /// The database credentials user extension.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsUserUrnietfparamsscimschemasoracleidcsextensiondbCredentialsUserResult> UrnietfparamsscimschemasoracleidcsextensiondbCredentialsUsers;
        /// <summary>
        /// DB User extension
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserResult> UrnietfparamsscimschemasoracleidcsextensiondbUserUsers;
        /// <summary>
        /// Kerberos User extension
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionkerberosUserUserResult> UrnietfparamsscimschemasoracleidcsextensionkerberosUserUsers;
        /// <summary>
        /// This extension defines attributes used to manage Multi-Factor Authentication within a service provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use MFA.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserResult> UrnietfparamsscimschemasoracleidcsextensionmfaUsers;
        /// <summary>
        /// This extension defines attributes used to manage account passwords within a Service Provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use passwords.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordStateUserResult> UrnietfparamsscimschemasoracleidcsextensionpasswordStateUsers;
        /// <summary>
        /// This extension defines attributes used to manage Passwordless-Factor Authentication within a service provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use MFA.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordlessUserResult> UrnietfparamsscimschemasoracleidcsextensionpasswordlessUsers;
        /// <summary>
        /// POSIX User extension
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionposixUserResult> UrnietfparamsscimschemasoracleidcsextensionposixUsers;
        /// <summary>
        /// This extension defines the attributes used to store the security questions of a user.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUserResult> UrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUsers;
        /// <summary>
        /// Controls whether a user can update themselves or not via User related APIs
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionselfChangeUserResult> UrnietfparamsscimschemasoracleidcsextensionselfChangeUsers;
        /// <summary>
        /// This extension defines attributes used to manage self registration profile linked to the user.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUserResult> UrnietfparamsscimschemasoracleidcsextensionselfRegistrationUsers;
        /// <summary>
        /// SFF Auth Keys User extension
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionsffUserResult> UrnietfparamsscimschemasoracleidcsextensionsffUsers;
        /// <summary>
        /// Social User extension
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionsocialAccountUserResult> UrnietfparamsscimschemasoracleidcsextensionsocialAccountUsers;
        /// <summary>
        /// Terms Of Use extension
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUserResult> UrnietfparamsscimschemasoracleidcsextensiontermsOfUseUsers;
        /// <summary>
        /// User's credentials
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserResult> UrnietfparamsscimschemasoracleidcsextensionuserCredentialsUsers;
        /// <summary>
        /// This extension defines the attributes used to manage account passwords within a service provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use passwords.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserStateUserResult> UrnietfparamsscimschemasoracleidcsextensionuserStateUsers;
        /// <summary>
        /// Oracle Identity Cloud Service User
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserResult> UrnietfparamsscimschemasoracleidcsextensionuserUsers;
        /// <summary>
        /// User Support User Id
        /// </summary>
        public readonly string UserId;
        /// <summary>
        /// User name
        /// </summary>
        public readonly string UserName;
        /// <summary>
        /// Used to identify the organization-to-user relationship
        /// </summary>
        public readonly string UserType;
        /// <summary>
        /// A list of certificates issued to the User.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsUserX509certificateResult> X509certificates;

        [OutputConstructor]
        private GetDomainsUserResult(
            bool active,

            ImmutableArray<Outputs.GetDomainsUserAddressResult> addresses,

            ImmutableArray<string> attributeSets,

            string? attributes,

            string? authorization,

            string compartmentOcid,

            bool deleteInProgress,

            string description,

            string displayName,

            string domainOcid,

            ImmutableArray<Outputs.GetDomainsUserEmailResult> emails,

            ImmutableArray<Outputs.GetDomainsUserEntitlementResult> entitlements,

            string externalId,

            ImmutableArray<Outputs.GetDomainsUserGroupResult> groups,

            string id,

            ImmutableArray<Outputs.GetDomainsUserIdcsCreatedByResult> idcsCreatedBies,

            string idcsEndpoint,

            ImmutableArray<Outputs.GetDomainsUserIdcsLastModifiedByResult> idcsLastModifiedBies,

            string idcsLastUpgradedInRelease,

            ImmutableArray<string> idcsPreventedOperations,

            ImmutableArray<Outputs.GetDomainsUserImResult> ims,

            string locale,

            ImmutableArray<Outputs.GetDomainsUserMetaResult> metas,

            ImmutableArray<Outputs.GetDomainsUserNameResult> names,

            string nickName,

            string ocid,

            string password,

            ImmutableArray<Outputs.GetDomainsUserPhoneNumberResult> phoneNumbers,

            ImmutableArray<Outputs.GetDomainsUserPhotoResult> photos,

            string preferredLanguage,

            string profileUrl,

            string? resourceTypeSchemaVersion,

            ImmutableArray<Outputs.GetDomainsUserRoleResult> roles,

            ImmutableArray<string> schemas,

            ImmutableArray<Outputs.GetDomainsUserTagResult> tags,

            string tenancyOcid,

            string timezone,

            string title,

            ImmutableArray<Outputs.GetDomainsUserUrnietfparamsscimschemasextensionenterprise20userResult> urnietfparamsscimschemasextensionenterprise20users,

            ImmutableArray<Outputs.GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionOciTagResult> urnietfparamsscimschemasoracleidcsextensionOciTags,

            ImmutableArray<Outputs.GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserResult> urnietfparamsscimschemasoracleidcsextensionadaptiveUsers,

            ImmutableArray<Outputs.GetDomainsUserUrnietfparamsscimschemasoracleidcsextensioncapabilitiesUserResult> urnietfparamsscimschemasoracleidcsextensioncapabilitiesUsers,

            ImmutableArray<Outputs.GetDomainsUserUrnietfparamsscimschemasoracleidcsextensiondbCredentialsUserResult> urnietfparamsscimschemasoracleidcsextensiondbCredentialsUsers,

            ImmutableArray<Outputs.GetDomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserResult> urnietfparamsscimschemasoracleidcsextensiondbUserUsers,

            ImmutableArray<Outputs.GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionkerberosUserUserResult> urnietfparamsscimschemasoracleidcsextensionkerberosUserUsers,

            ImmutableArray<Outputs.GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserResult> urnietfparamsscimschemasoracleidcsextensionmfaUsers,

            ImmutableArray<Outputs.GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordStateUserResult> urnietfparamsscimschemasoracleidcsextensionpasswordStateUsers,

            ImmutableArray<Outputs.GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordlessUserResult> urnietfparamsscimschemasoracleidcsextensionpasswordlessUsers,

            ImmutableArray<Outputs.GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionposixUserResult> urnietfparamsscimschemasoracleidcsextensionposixUsers,

            ImmutableArray<Outputs.GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUserResult> urnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUsers,

            ImmutableArray<Outputs.GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionselfChangeUserResult> urnietfparamsscimschemasoracleidcsextensionselfChangeUsers,

            ImmutableArray<Outputs.GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUserResult> urnietfparamsscimschemasoracleidcsextensionselfRegistrationUsers,

            ImmutableArray<Outputs.GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionsffUserResult> urnietfparamsscimschemasoracleidcsextensionsffUsers,

            ImmutableArray<Outputs.GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionsocialAccountUserResult> urnietfparamsscimschemasoracleidcsextensionsocialAccountUsers,

            ImmutableArray<Outputs.GetDomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUserResult> urnietfparamsscimschemasoracleidcsextensiontermsOfUseUsers,

            ImmutableArray<Outputs.GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserResult> urnietfparamsscimschemasoracleidcsextensionuserCredentialsUsers,

            ImmutableArray<Outputs.GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserStateUserResult> urnietfparamsscimschemasoracleidcsextensionuserStateUsers,

            ImmutableArray<Outputs.GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserResult> urnietfparamsscimschemasoracleidcsextensionuserUsers,

            string userId,

            string userName,

            string userType,

            ImmutableArray<Outputs.GetDomainsUserX509certificateResult> x509certificates)
        {
            Active = active;
            Addresses = addresses;
            AttributeSets = attributeSets;
            Attributes = attributes;
            Authorization = authorization;
            CompartmentOcid = compartmentOcid;
            DeleteInProgress = deleteInProgress;
            Description = description;
            DisplayName = displayName;
            DomainOcid = domainOcid;
            Emails = emails;
            Entitlements = entitlements;
            ExternalId = externalId;
            Groups = groups;
            Id = id;
            IdcsCreatedBies = idcsCreatedBies;
            IdcsEndpoint = idcsEndpoint;
            IdcsLastModifiedBies = idcsLastModifiedBies;
            IdcsLastUpgradedInRelease = idcsLastUpgradedInRelease;
            IdcsPreventedOperations = idcsPreventedOperations;
            Ims = ims;
            Locale = locale;
            Metas = metas;
            Names = names;
            NickName = nickName;
            Ocid = ocid;
            Password = password;
            PhoneNumbers = phoneNumbers;
            Photos = photos;
            PreferredLanguage = preferredLanguage;
            ProfileUrl = profileUrl;
            ResourceTypeSchemaVersion = resourceTypeSchemaVersion;
            Roles = roles;
            Schemas = schemas;
            Tags = tags;
            TenancyOcid = tenancyOcid;
            Timezone = timezone;
            Title = title;
            Urnietfparamsscimschemasextensionenterprise20users = urnietfparamsscimschemasextensionenterprise20users;
            UrnietfparamsscimschemasoracleidcsextensionOciTags = urnietfparamsscimschemasoracleidcsextensionOciTags;
            UrnietfparamsscimschemasoracleidcsextensionadaptiveUsers = urnietfparamsscimschemasoracleidcsextensionadaptiveUsers;
            UrnietfparamsscimschemasoracleidcsextensioncapabilitiesUsers = urnietfparamsscimschemasoracleidcsextensioncapabilitiesUsers;
            UrnietfparamsscimschemasoracleidcsextensiondbCredentialsUsers = urnietfparamsscimschemasoracleidcsextensiondbCredentialsUsers;
            UrnietfparamsscimschemasoracleidcsextensiondbUserUsers = urnietfparamsscimschemasoracleidcsextensiondbUserUsers;
            UrnietfparamsscimschemasoracleidcsextensionkerberosUserUsers = urnietfparamsscimschemasoracleidcsextensionkerberosUserUsers;
            UrnietfparamsscimschemasoracleidcsextensionmfaUsers = urnietfparamsscimschemasoracleidcsextensionmfaUsers;
            UrnietfparamsscimschemasoracleidcsextensionpasswordStateUsers = urnietfparamsscimschemasoracleidcsextensionpasswordStateUsers;
            UrnietfparamsscimschemasoracleidcsextensionpasswordlessUsers = urnietfparamsscimschemasoracleidcsextensionpasswordlessUsers;
            UrnietfparamsscimschemasoracleidcsextensionposixUsers = urnietfparamsscimschemasoracleidcsextensionposixUsers;
            UrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUsers = urnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUsers;
            UrnietfparamsscimschemasoracleidcsextensionselfChangeUsers = urnietfparamsscimschemasoracleidcsextensionselfChangeUsers;
            UrnietfparamsscimschemasoracleidcsextensionselfRegistrationUsers = urnietfparamsscimschemasoracleidcsextensionselfRegistrationUsers;
            UrnietfparamsscimschemasoracleidcsextensionsffUsers = urnietfparamsscimschemasoracleidcsextensionsffUsers;
            UrnietfparamsscimschemasoracleidcsextensionsocialAccountUsers = urnietfparamsscimschemasoracleidcsextensionsocialAccountUsers;
            UrnietfparamsscimschemasoracleidcsextensiontermsOfUseUsers = urnietfparamsscimschemasoracleidcsextensiontermsOfUseUsers;
            UrnietfparamsscimschemasoracleidcsextensionuserCredentialsUsers = urnietfparamsscimschemasoracleidcsextensionuserCredentialsUsers;
            UrnietfparamsscimschemasoracleidcsextensionuserStateUsers = urnietfparamsscimschemasoracleidcsextensionuserStateUsers;
            UrnietfparamsscimschemasoracleidcsextensionuserUsers = urnietfparamsscimschemasoracleidcsextensionuserUsers;
            UserId = userId;
            UserName = userName;
            UserType = userType;
            X509certificates = x509certificates;
        }
    }
}
