// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Identity
{
    public static class GetDynamicGroups
    {
        /// <summary>
        /// This data source provides the list of Dynamic Groups in Oracle Cloud Infrastructure Identity service.
        /// 
        /// Lists the dynamic groups in your tenancy. You must specify your tenancy's OCID as the value for
        /// the compartment ID (remember that the tenancy is simply the root compartment).
        /// See [Where to Get the Tenancy's OCID and User's OCID](https://docs.cloud.oracle.com/iaas/Content/API/Concepts/apisigningkey.htm#five).
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDynamicGroups = Oci.Identity.GetDynamicGroups.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Tenancy_ocid,
        ///         Name = @var.Dynamic_group_name,
        ///         State = @var.Dynamic_group_state,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetDynamicGroupsResult> InvokeAsync(GetDynamicGroupsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDynamicGroupsResult>("oci:Identity/getDynamicGroups:getDynamicGroups", args ?? new GetDynamicGroupsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Dynamic Groups in Oracle Cloud Infrastructure Identity service.
        /// 
        /// Lists the dynamic groups in your tenancy. You must specify your tenancy's OCID as the value for
        /// the compartment ID (remember that the tenancy is simply the root compartment).
        /// See [Where to Get the Tenancy's OCID and User's OCID](https://docs.cloud.oracle.com/iaas/Content/API/Concepts/apisigningkey.htm#five).
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDynamicGroups = Oci.Identity.GetDynamicGroups.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Tenancy_ocid,
        ///         Name = @var.Dynamic_group_name,
        ///         State = @var.Dynamic_group_state,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetDynamicGroupsResult> Invoke(GetDynamicGroupsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDynamicGroupsResult>("oci:Identity/getDynamicGroups:getDynamicGroups", args ?? new GetDynamicGroupsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDynamicGroupsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment (remember that the tenancy is simply the root compartment).
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetDynamicGroupsFilterArgs>? _filters;
        public List<Inputs.GetDynamicGroupsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetDynamicGroupsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to only return resources that match the given name exactly.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetDynamicGroupsArgs()
        {
        }
        public static new GetDynamicGroupsArgs Empty => new GetDynamicGroupsArgs();
    }

    public sealed class GetDynamicGroupsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment (remember that the tenancy is simply the root compartment).
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetDynamicGroupsFilterInputArgs>? _filters;
        public InputList<Inputs.GetDynamicGroupsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetDynamicGroupsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to only return resources that match the given name exactly.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetDynamicGroupsInvokeArgs()
        {
        }
        public static new GetDynamicGroupsInvokeArgs Empty => new GetDynamicGroupsInvokeArgs();
    }


    [OutputType]
    public sealed class GetDynamicGroupsResult
    {
        /// <summary>
        /// The OCID of the tenancy containing the group.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The list of dynamic_groups.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDynamicGroupsDynamicGroupResult> DynamicGroups;
        public readonly ImmutableArray<Outputs.GetDynamicGroupsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name you assign to the group during creation. The name must be unique across all groups in the tenancy and cannot be changed.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The group's current state.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetDynamicGroupsResult(
            string compartmentId,

            ImmutableArray<Outputs.GetDynamicGroupsDynamicGroupResult> dynamicGroups,

            ImmutableArray<Outputs.GetDynamicGroupsFilterResult> filters,

            string id,

            string? name,

            string? state)
        {
            CompartmentId = compartmentId;
            DynamicGroups = dynamicGroups;
            Filters = filters;
            Id = id;
            Name = name;
            State = state;
        }
    }
}
