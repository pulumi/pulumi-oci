// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Identity
{
    public static class GetFaultDomains
    {
        /// <summary>
        /// This data source provides the list of Fault Domains in Oracle Cloud Infrastructure Identity service.
        /// 
        /// Lists the Fault Domains in your tenancy. Specify the OCID of either the tenancy or another
        /// of your compartments as the value for the compartment ID (remember that the tenancy is simply the root compartment).
        /// See [Where to Get the Tenancy's OCID and User's OCID](https://docs.cloud.oracle.com/iaas/Content/API/Concepts/apisigningkey.htm#five).
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testFaultDomains = Oci.Identity.GetFaultDomains.Invoke(new()
        ///     {
        ///         AvailabilityDomain = faultDomainAvailabilityDomain,
        ///         CompartmentId = compartmentId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetFaultDomainsResult> InvokeAsync(GetFaultDomainsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFaultDomainsResult>("oci:Identity/getFaultDomains:getFaultDomains", args ?? new GetFaultDomainsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Fault Domains in Oracle Cloud Infrastructure Identity service.
        /// 
        /// Lists the Fault Domains in your tenancy. Specify the OCID of either the tenancy or another
        /// of your compartments as the value for the compartment ID (remember that the tenancy is simply the root compartment).
        /// See [Where to Get the Tenancy's OCID and User's OCID](https://docs.cloud.oracle.com/iaas/Content/API/Concepts/apisigningkey.htm#five).
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testFaultDomains = Oci.Identity.GetFaultDomains.Invoke(new()
        ///     {
        ///         AvailabilityDomain = faultDomainAvailabilityDomain,
        ///         CompartmentId = compartmentId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetFaultDomainsResult> Invoke(GetFaultDomainsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFaultDomainsResult>("oci:Identity/getFaultDomains:getFaultDomains", args ?? new GetFaultDomainsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Fault Domains in Oracle Cloud Infrastructure Identity service.
        /// 
        /// Lists the Fault Domains in your tenancy. Specify the OCID of either the tenancy or another
        /// of your compartments as the value for the compartment ID (remember that the tenancy is simply the root compartment).
        /// See [Where to Get the Tenancy's OCID and User's OCID](https://docs.cloud.oracle.com/iaas/Content/API/Concepts/apisigningkey.htm#five).
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testFaultDomains = Oci.Identity.GetFaultDomains.Invoke(new()
        ///     {
        ///         AvailabilityDomain = faultDomainAvailabilityDomain,
        ///         CompartmentId = compartmentId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetFaultDomainsResult> Invoke(GetFaultDomainsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetFaultDomainsResult>("oci:Identity/getFaultDomains:getFaultDomains", args ?? new GetFaultDomainsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFaultDomainsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the availibilityDomain.
        /// </summary>
        [Input("availabilityDomain", required: true)]
        public string AvailabilityDomain { get; set; } = null!;

        /// <summary>
        /// The OCID of the compartment (remember that the tenancy is simply the root compartment).
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetFaultDomainsFilterArgs>? _filters;
        public List<Inputs.GetFaultDomainsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetFaultDomainsFilterArgs>());
            set => _filters = value;
        }

        public GetFaultDomainsArgs()
        {
        }
        public static new GetFaultDomainsArgs Empty => new GetFaultDomainsArgs();
    }

    public sealed class GetFaultDomainsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the availibilityDomain.
        /// </summary>
        [Input("availabilityDomain", required: true)]
        public Input<string> AvailabilityDomain { get; set; } = null!;

        /// <summary>
        /// The OCID of the compartment (remember that the tenancy is simply the root compartment).
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetFaultDomainsFilterInputArgs>? _filters;
        public InputList<Inputs.GetFaultDomainsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetFaultDomainsFilterInputArgs>());
            set => _filters = value;
        }

        public GetFaultDomainsInvokeArgs()
        {
        }
        public static new GetFaultDomainsInvokeArgs Empty => new GetFaultDomainsInvokeArgs();
    }


    [OutputType]
    public sealed class GetFaultDomainsResult
    {
        /// <summary>
        /// The name of the availabilityDomain where the Fault Domain belongs.
        /// </summary>
        public readonly string AvailabilityDomain;
        /// <summary>
        /// The OCID of the compartment. Currently only tenancy (root) compartment can be provided.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The list of fault_domains.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFaultDomainsFaultDomainResult> FaultDomains;
        public readonly ImmutableArray<Outputs.GetFaultDomainsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetFaultDomainsResult(
            string availabilityDomain,

            string compartmentId,

            ImmutableArray<Outputs.GetFaultDomainsFaultDomainResult> faultDomains,

            ImmutableArray<Outputs.GetFaultDomainsFilterResult> filters,

            string id)
        {
            AvailabilityDomain = availabilityDomain;
            CompartmentId = compartmentId;
            FaultDomains = faultDomains;
            Filters = filters;
            Id = id;
        }
    }
}
