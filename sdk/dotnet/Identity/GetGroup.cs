// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Identity
{
    public static class GetGroup
    {
        /// <summary>
        /// This data source provides details about a specific Group resource in Oracle Cloud Infrastructure Identity service.
        /// 
        /// Gets the specified group's information.
        /// 
        /// This operation does not return a list of all the users in the group. To do that, use
        /// [ListUserGroupMemberships](https://docs.cloud.oracle.com/iaas/api/#/en/identity/20160918/UserGroupMembership/ListUserGroupMemberships) and
        /// provide the group's OCID as a query parameter in the request.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testGroup = Oci.Identity.GetGroup.Invoke(new()
        ///     {
        ///         GroupId = testGroupOciIdentityGroup.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetGroupResult> InvokeAsync(GetGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGroupResult>("oci:Identity/getGroup:getGroup", args ?? new GetGroupArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Group resource in Oracle Cloud Infrastructure Identity service.
        /// 
        /// Gets the specified group's information.
        /// 
        /// This operation does not return a list of all the users in the group. To do that, use
        /// [ListUserGroupMemberships](https://docs.cloud.oracle.com/iaas/api/#/en/identity/20160918/UserGroupMembership/ListUserGroupMemberships) and
        /// provide the group's OCID as a query parameter in the request.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testGroup = Oci.Identity.GetGroup.Invoke(new()
        ///     {
        ///         GroupId = testGroupOciIdentityGroup.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetGroupResult> Invoke(GetGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGroupResult>("oci:Identity/getGroup:getGroup", args ?? new GetGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the group.
        /// </summary>
        [Input("groupId", required: true)]
        public string GroupId { get; set; } = null!;

        public GetGroupArgs()
        {
        }
        public static new GetGroupArgs Empty => new GetGroupArgs();
    }

    public sealed class GetGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the group.
        /// </summary>
        [Input("groupId", required: true)]
        public Input<string> GroupId { get; set; } = null!;

        public GetGroupInvokeArgs()
        {
        }
        public static new GetGroupInvokeArgs Empty => new GetGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetGroupResult
    {
        /// <summary>
        /// The OCID of the tenancy containing the group.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// The description you assign to the group. Does not have to be unique, and it's changeable.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        public readonly string GroupId;
        /// <summary>
        /// The OCID of the group.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The detailed status of INACTIVE lifecycleState.
        /// </summary>
        public readonly string InactiveState;
        /// <summary>
        /// The name you assign to the group during creation. The name must be unique across all groups in the tenancy and cannot be changed.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The group's current state.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Date and time the group was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        public readonly string TimeCreated;

        [OutputConstructor]
        private GetGroupResult(
            string compartmentId,

            ImmutableDictionary<string, string> definedTags,

            string description,

            ImmutableDictionary<string, string> freeformTags,

            string groupId,

            string id,

            string inactiveState,

            string name,

            string state,

            string timeCreated)
        {
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            Description = description;
            FreeformTags = freeformTags;
            GroupId = groupId;
            Id = id;
            InactiveState = inactiveState;
            Name = name;
            State = state;
            TimeCreated = timeCreated;
        }
    }
}
