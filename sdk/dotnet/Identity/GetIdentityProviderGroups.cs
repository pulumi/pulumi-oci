// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Identity
{
    public static class GetIdentityProviderGroups
    {
        /// <summary>
        /// This data source provides the list of Identity Provider Groups in Oracle Cloud Infrastructure Identity service.
        /// 
        /// **Deprecated.** For more information, see [Deprecated IAM Service APIs](https://docs.cloud.oracle.com/iaas/Content/Identity/Reference/deprecatediamapis.htm).
        /// 
        /// Lists the identity provider groups.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testIdentityProviderGroups = Oci.Identity.GetIdentityProviderGroups.Invoke(new()
        ///     {
        ///         IdentityProviderId = testIdentityProvider.Id,
        ///         Name = identityProviderGroupName,
        ///         State = identityProviderGroupState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetIdentityProviderGroupsResult> InvokeAsync(GetIdentityProviderGroupsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIdentityProviderGroupsResult>("oci:Identity/getIdentityProviderGroups:getIdentityProviderGroups", args ?? new GetIdentityProviderGroupsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Identity Provider Groups in Oracle Cloud Infrastructure Identity service.
        /// 
        /// **Deprecated.** For more information, see [Deprecated IAM Service APIs](https://docs.cloud.oracle.com/iaas/Content/Identity/Reference/deprecatediamapis.htm).
        /// 
        /// Lists the identity provider groups.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testIdentityProviderGroups = Oci.Identity.GetIdentityProviderGroups.Invoke(new()
        ///     {
        ///         IdentityProviderId = testIdentityProvider.Id,
        ///         Name = identityProviderGroupName,
        ///         State = identityProviderGroupState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetIdentityProviderGroupsResult> Invoke(GetIdentityProviderGroupsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIdentityProviderGroupsResult>("oci:Identity/getIdentityProviderGroups:getIdentityProviderGroups", args ?? new GetIdentityProviderGroupsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIdentityProviderGroupsArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetIdentityProviderGroupsFilterArgs>? _filters;
        public List<Inputs.GetIdentityProviderGroupsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetIdentityProviderGroupsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The OCID of the identity provider.
        /// </summary>
        [Input("identityProviderId", required: true)]
        public string IdentityProviderId { get; set; } = null!;

        /// <summary>
        /// A filter to only return resources that match the given name exactly.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetIdentityProviderGroupsArgs()
        {
        }
        public static new GetIdentityProviderGroupsArgs Empty => new GetIdentityProviderGroupsArgs();
    }

    public sealed class GetIdentityProviderGroupsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetIdentityProviderGroupsFilterInputArgs>? _filters;
        public InputList<Inputs.GetIdentityProviderGroupsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetIdentityProviderGroupsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The OCID of the identity provider.
        /// </summary>
        [Input("identityProviderId", required: true)]
        public Input<string> IdentityProviderId { get; set; } = null!;

        /// <summary>
        /// A filter to only return resources that match the given name exactly.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetIdentityProviderGroupsInvokeArgs()
        {
        }
        public static new GetIdentityProviderGroupsInvokeArgs Empty => new GetIdentityProviderGroupsInvokeArgs();
    }


    [OutputType]
    public sealed class GetIdentityProviderGroupsResult
    {
        public readonly ImmutableArray<Outputs.GetIdentityProviderGroupsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of identity_provider_groups.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetIdentityProviderGroupsIdentityProviderGroupResult> IdentityProviderGroups;
        /// <summary>
        /// The OCID of the `IdentityProvider` this group belongs to.
        /// </summary>
        public readonly string IdentityProviderId;
        /// <summary>
        /// Display name of the group
        /// </summary>
        public readonly string? Name;
        public readonly string? State;

        [OutputConstructor]
        private GetIdentityProviderGroupsResult(
            ImmutableArray<Outputs.GetIdentityProviderGroupsFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetIdentityProviderGroupsIdentityProviderGroupResult> identityProviderGroups,

            string identityProviderId,

            string? name,

            string? state)
        {
            Filters = filters;
            Id = id;
            IdentityProviderGroups = identityProviderGroups;
            IdentityProviderId = identityProviderId;
            Name = name;
            State = state;
        }
    }
}
