// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Identity
{
    public static class GetIdentityProviders
    {
        /// <summary>
        /// This data source provides the list of Identity Providers in Oracle Cloud Infrastructure Identity service.
        /// 
        /// **Deprecated.** For more information, see [Deprecated IAM Service APIs](https://docs.cloud.oracle.com/iaas/Content/Identity/Reference/deprecatediamapis.htm).
        /// 
        /// Lists all the identity providers in your tenancy. You must specify the identity provider type (e.g., `SAML2` for
        /// identity providers using the SAML2.0 protocol). You must specify your tenancy's OCID as the value for the
        /// compartment ID (remember that the tenancy is simply the root compartment).
        /// See [Where to Get the Tenancy's OCID and User's OCID](https://docs.cloud.oracle.com/iaas/Content/API/Concepts/apisigningkey.htm#five).
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testIdentityProviders = Oci.Identity.GetIdentityProviders.Invoke(new()
        ///     {
        ///         CompartmentId = tenancyOcid,
        ///         Protocol = identityProviderProtocol,
        ///         Name = identityProviderName,
        ///         State = identityProviderState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetIdentityProvidersResult> InvokeAsync(GetIdentityProvidersArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIdentityProvidersResult>("oci:Identity/getIdentityProviders:getIdentityProviders", args ?? new GetIdentityProvidersArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Identity Providers in Oracle Cloud Infrastructure Identity service.
        /// 
        /// **Deprecated.** For more information, see [Deprecated IAM Service APIs](https://docs.cloud.oracle.com/iaas/Content/Identity/Reference/deprecatediamapis.htm).
        /// 
        /// Lists all the identity providers in your tenancy. You must specify the identity provider type (e.g., `SAML2` for
        /// identity providers using the SAML2.0 protocol). You must specify your tenancy's OCID as the value for the
        /// compartment ID (remember that the tenancy is simply the root compartment).
        /// See [Where to Get the Tenancy's OCID and User's OCID](https://docs.cloud.oracle.com/iaas/Content/API/Concepts/apisigningkey.htm#five).
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testIdentityProviders = Oci.Identity.GetIdentityProviders.Invoke(new()
        ///     {
        ///         CompartmentId = tenancyOcid,
        ///         Protocol = identityProviderProtocol,
        ///         Name = identityProviderName,
        ///         State = identityProviderState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetIdentityProvidersResult> Invoke(GetIdentityProvidersInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIdentityProvidersResult>("oci:Identity/getIdentityProviders:getIdentityProviders", args ?? new GetIdentityProvidersInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIdentityProvidersArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment (remember that the tenancy is simply the root compartment).
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetIdentityProvidersFilterArgs>? _filters;
        public List<Inputs.GetIdentityProvidersFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetIdentityProvidersFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to only return resources that match the given name exactly.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// The protocol used for federation.
        /// </summary>
        [Input("protocol", required: true)]
        public string Protocol { get; set; } = null!;

        /// <summary>
        /// A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetIdentityProvidersArgs()
        {
        }
        public static new GetIdentityProvidersArgs Empty => new GetIdentityProvidersArgs();
    }

    public sealed class GetIdentityProvidersInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment (remember that the tenancy is simply the root compartment).
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetIdentityProvidersFilterInputArgs>? _filters;
        public InputList<Inputs.GetIdentityProvidersFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetIdentityProvidersFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to only return resources that match the given name exactly.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The protocol used for federation.
        /// </summary>
        [Input("protocol", required: true)]
        public Input<string> Protocol { get; set; } = null!;

        /// <summary>
        /// A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetIdentityProvidersInvokeArgs()
        {
        }
        public static new GetIdentityProvidersInvokeArgs Empty => new GetIdentityProvidersInvokeArgs();
    }


    [OutputType]
    public sealed class GetIdentityProvidersResult
    {
        /// <summary>
        /// The OCID of the tenancy containing the `IdentityProvider`.
        /// </summary>
        public readonly string CompartmentId;
        public readonly ImmutableArray<Outputs.GetIdentityProvidersFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of identity_providers.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetIdentityProvidersIdentityProviderResult> IdentityProviders;
        /// <summary>
        /// The name you assign to the `IdentityProvider` during creation. The name must be unique across all `IdentityProvider` objects in the tenancy and cannot be changed. This is the name federated users see when choosing which identity provider to use when signing in to the Oracle Cloud Infrastructure Console.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The protocol used for federation. Allowed value: `SAML2`.  Example: `SAML2`
        /// </summary>
        public readonly string Protocol;
        /// <summary>
        /// The current state.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetIdentityProvidersResult(
            string compartmentId,

            ImmutableArray<Outputs.GetIdentityProvidersFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetIdentityProvidersIdentityProviderResult> identityProviders,

            string? name,

            string protocol,

            string? state)
        {
            CompartmentId = compartmentId;
            Filters = filters;
            Id = id;
            IdentityProviders = identityProviders;
            Name = name;
            Protocol = protocol;
            State = state;
        }
    }
}
