// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Identity
{
    public static class GetNetworkSource
    {
        /// <summary>
        /// This data source provides details about a specific Network Source resource in Oracle Cloud Infrastructure Identity service.
        /// 
        /// Gets the specified network source's information.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testNetworkSource = Oci.Identity.GetNetworkSource.Invoke(new()
        ///     {
        ///         NetworkSourceId = testNetworkSourceOciIdentityNetworkSource.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetNetworkSourceResult> InvokeAsync(GetNetworkSourceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNetworkSourceResult>("oci:Identity/getNetworkSource:getNetworkSource", args ?? new GetNetworkSourceArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Network Source resource in Oracle Cloud Infrastructure Identity service.
        /// 
        /// Gets the specified network source's information.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testNetworkSource = Oci.Identity.GetNetworkSource.Invoke(new()
        ///     {
        ///         NetworkSourceId = testNetworkSourceOciIdentityNetworkSource.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNetworkSourceResult> Invoke(GetNetworkSourceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNetworkSourceResult>("oci:Identity/getNetworkSource:getNetworkSource", args ?? new GetNetworkSourceInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Network Source resource in Oracle Cloud Infrastructure Identity service.
        /// 
        /// Gets the specified network source's information.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testNetworkSource = Oci.Identity.GetNetworkSource.Invoke(new()
        ///     {
        ///         NetworkSourceId = testNetworkSourceOciIdentityNetworkSource.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNetworkSourceResult> Invoke(GetNetworkSourceInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNetworkSourceResult>("oci:Identity/getNetworkSource:getNetworkSource", args ?? new GetNetworkSourceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNetworkSourceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the network source.
        /// </summary>
        [Input("networkSourceId", required: true)]
        public string NetworkSourceId { get; set; } = null!;

        public GetNetworkSourceArgs()
        {
        }
        public static new GetNetworkSourceArgs Empty => new GetNetworkSourceArgs();
    }

    public sealed class GetNetworkSourceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the network source.
        /// </summary>
        [Input("networkSourceId", required: true)]
        public Input<string> NetworkSourceId { get; set; } = null!;

        public GetNetworkSourceInvokeArgs()
        {
        }
        public static new GetNetworkSourceInvokeArgs Empty => new GetNetworkSourceInvokeArgs();
    }


    [OutputType]
    public sealed class GetNetworkSourceResult
    {
        /// <summary>
        /// The OCID of the tenancy containing the network source. The tenancy is the root compartment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// The description you assign to the network source. Does not have to be unique, and it's changeable.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The OCID of the network source.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The detailed status of INACTIVE lifecycleState.
        /// </summary>
        public readonly string InactiveState;
        /// <summary>
        /// The name you assign to the network source during creation. The name must be unique across the tenancy and cannot be changed.
        /// </summary>
        public readonly string Name;
        public readonly string NetworkSourceId;
        /// <summary>
        /// A list of allowed public IP addresses and CIDR ranges.
        /// </summary>
        public readonly ImmutableArray<string> PublicSourceLists;
        /// <summary>
        /// A list of services allowed to make on-behalf-of requests. These requests can have different source IPs than those specified in the network source. Currently, only `All` and `None` are supported. The default is `All`.
        /// </summary>
        public readonly ImmutableArray<string> Services;
        /// <summary>
        /// The network source object's current state. After creating a network source, make sure its `lifecycleState` changes from CREATING to ACTIVE before using it.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Date and time the group was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// A list of allowed VCN OCID and IP range pairs. Example:`"vcnId": "ocid1.vcn.oc1.iad.aaaaaaaaexampleuniqueID", "ipRanges": [ "129.213.39.0/24" ]`
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNetworkSourceVirtualSourceListResult> VirtualSourceLists;

        [OutputConstructor]
        private GetNetworkSourceResult(
            string compartmentId,

            ImmutableDictionary<string, string> definedTags,

            string description,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            string inactiveState,

            string name,

            string networkSourceId,

            ImmutableArray<string> publicSourceLists,

            ImmutableArray<string> services,

            string state,

            string timeCreated,

            ImmutableArray<Outputs.GetNetworkSourceVirtualSourceListResult> virtualSourceLists)
        {
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            Description = description;
            FreeformTags = freeformTags;
            Id = id;
            InactiveState = inactiveState;
            Name = name;
            NetworkSourceId = networkSourceId;
            PublicSourceLists = publicSourceLists;
            Services = services;
            State = state;
            TimeCreated = timeCreated;
            VirtualSourceLists = virtualSourceLists;
        }
    }
}
