// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Identity
{
    public static class GetPolicies
    {
        /// <summary>
        /// This data source provides the list of Policies in Oracle Cloud Infrastructure Identity service.
        /// 
        /// Lists the policies in the specified compartment (either the tenancy or another of your compartments).
        /// See [Where to Get the Tenancy's OCID and User's OCID](https://docs.cloud.oracle.com/iaas/Content/API/Concepts/apisigningkey.htm#five).
        /// 
        /// To determine which policies apply to a particular group or compartment, you must view the individual
        /// statements inside all your policies. There isn't a way to automatically obtain that information via the API.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testPolicies = Oci.Identity.GetPolicies.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Tenancy_ocid,
        ///         Name = @var.Policy_name,
        ///         State = @var.Policy_state,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetPoliciesResult> InvokeAsync(GetPoliciesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPoliciesResult>("oci:Identity/getPolicies:getPolicies", args ?? new GetPoliciesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Policies in Oracle Cloud Infrastructure Identity service.
        /// 
        /// Lists the policies in the specified compartment (either the tenancy or another of your compartments).
        /// See [Where to Get the Tenancy's OCID and User's OCID](https://docs.cloud.oracle.com/iaas/Content/API/Concepts/apisigningkey.htm#five).
        /// 
        /// To determine which policies apply to a particular group or compartment, you must view the individual
        /// statements inside all your policies. There isn't a way to automatically obtain that information via the API.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testPolicies = Oci.Identity.GetPolicies.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Tenancy_ocid,
        ///         Name = @var.Policy_name,
        ///         State = @var.Policy_state,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetPoliciesResult> Invoke(GetPoliciesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPoliciesResult>("oci:Identity/getPolicies:getPolicies", args ?? new GetPoliciesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPoliciesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment (remember that the tenancy is simply the root compartment).
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetPoliciesFilterArgs>? _filters;
        public List<Inputs.GetPoliciesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetPoliciesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to only return resources that match the given name exactly.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetPoliciesArgs()
        {
        }
        public static new GetPoliciesArgs Empty => new GetPoliciesArgs();
    }

    public sealed class GetPoliciesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment (remember that the tenancy is simply the root compartment).
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetPoliciesFilterInputArgs>? _filters;
        public InputList<Inputs.GetPoliciesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetPoliciesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to only return resources that match the given name exactly.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetPoliciesInvokeArgs()
        {
        }
        public static new GetPoliciesInvokeArgs Empty => new GetPoliciesInvokeArgs();
    }


    [OutputType]
    public sealed class GetPoliciesResult
    {
        /// <summary>
        /// The OCID of the compartment containing the policy (either the tenancy or another compartment).
        /// </summary>
        public readonly string CompartmentId;
        public readonly ImmutableArray<Outputs.GetPoliciesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name you assign to the policy during creation. The name must be unique across all policies in the tenancy and cannot be changed.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The list of policies.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPoliciesPolicyResult> Policies;
        /// <summary>
        /// The policy's current state.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetPoliciesResult(
            string compartmentId,

            ImmutableArray<Outputs.GetPoliciesFilterResult> filters,

            string id,

            string? name,

            ImmutableArray<Outputs.GetPoliciesPolicyResult> policies,

            string? state)
        {
            CompartmentId = compartmentId;
            Filters = filters;
            Id = id;
            Name = name;
            Policies = policies;
            State = state;
        }
    }
}
