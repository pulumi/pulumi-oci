// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Identity
{
    public static class GetRegionSubscriptions
    {
        /// <summary>
        /// This data source provides the list of Region Subscriptions in Oracle Cloud Infrastructure Identity service.
        /// 
        /// Lists the region subscriptions for the specified tenancy.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testRegionSubscriptions = Oci.Identity.GetRegionSubscriptions.Invoke(new()
        ///     {
        ///         TenancyId = oci_identity_tenancy.Test_tenancy.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetRegionSubscriptionsResult> InvokeAsync(GetRegionSubscriptionsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRegionSubscriptionsResult>("oci:Identity/getRegionSubscriptions:getRegionSubscriptions", args ?? new GetRegionSubscriptionsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Region Subscriptions in Oracle Cloud Infrastructure Identity service.
        /// 
        /// Lists the region subscriptions for the specified tenancy.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testRegionSubscriptions = Oci.Identity.GetRegionSubscriptions.Invoke(new()
        ///     {
        ///         TenancyId = oci_identity_tenancy.Test_tenancy.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetRegionSubscriptionsResult> Invoke(GetRegionSubscriptionsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRegionSubscriptionsResult>("oci:Identity/getRegionSubscriptions:getRegionSubscriptions", args ?? new GetRegionSubscriptionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRegionSubscriptionsArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetRegionSubscriptionsFilterArgs>? _filters;
        public List<Inputs.GetRegionSubscriptionsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetRegionSubscriptionsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The OCID of the tenancy.
        /// </summary>
        [Input("tenancyId", required: true)]
        public string TenancyId { get; set; } = null!;

        public GetRegionSubscriptionsArgs()
        {
        }
        public static new GetRegionSubscriptionsArgs Empty => new GetRegionSubscriptionsArgs();
    }

    public sealed class GetRegionSubscriptionsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetRegionSubscriptionsFilterInputArgs>? _filters;
        public InputList<Inputs.GetRegionSubscriptionsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetRegionSubscriptionsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The OCID of the tenancy.
        /// </summary>
        [Input("tenancyId", required: true)]
        public Input<string> TenancyId { get; set; } = null!;

        public GetRegionSubscriptionsInvokeArgs()
        {
        }
        public static new GetRegionSubscriptionsInvokeArgs Empty => new GetRegionSubscriptionsInvokeArgs();
    }


    [OutputType]
    public sealed class GetRegionSubscriptionsResult
    {
        public readonly ImmutableArray<Outputs.GetRegionSubscriptionsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of region_subscriptions.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRegionSubscriptionsRegionSubscriptionResult> RegionSubscriptions;
        public readonly string TenancyId;

        [OutputConstructor]
        private GetRegionSubscriptionsResult(
            ImmutableArray<Outputs.GetRegionSubscriptionsFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetRegionSubscriptionsRegionSubscriptionResult> regionSubscriptions,

            string tenancyId)
        {
            Filters = filters;
            Id = id;
            RegionSubscriptions = regionSubscriptions;
            TenancyId = tenancyId;
        }
    }
}
