// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Identity.Inputs
{

    public sealed class DomainsAuthenticationFactorSettingBypassCodeSettingsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) Expiry (in minutes) of any bypass code that is generated by the help desk
        /// 
        /// **SCIM++ Properties:**
        /// * idcsMaxValue: 9999999
        /// * idcsMinValue: 1
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: true
        /// * returned: default
        /// * type: integer
        /// * uniqueness: none
        /// </summary>
        [Input("helpDeskCodeExpiryInMins", required: true)]
        public Input<int> HelpDeskCodeExpiryInMins { get; set; } = null!;

        /// <summary>
        /// (Updatable) If true, indicates that help desk bypass code generation is enabled
        /// 
        /// **SCIM++ Properties:**
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: true
        /// * returned: default
        /// * type: boolean
        /// * uniqueness: none
        /// </summary>
        [Input("helpDeskGenerationEnabled", required: true)]
        public Input<bool> HelpDeskGenerationEnabled { get; set; } = null!;

        /// <summary>
        /// (Updatable) The maximum number of times that any bypass code that is generated by the help desk can be used
        /// 
        /// **SCIM++ Properties:**
        /// * idcsMaxValue: 999
        /// * idcsMinValue: 1
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: true
        /// * returned: default
        /// * type: integer
        /// * uniqueness: none
        /// </summary>
        [Input("helpDeskMaxUsage", required: true)]
        public Input<int> HelpDeskMaxUsage { get; set; } = null!;

        /// <summary>
        /// (Updatable) Exact length of the bypass code to be generated
        /// 
        /// **SCIM++ Properties:**
        /// * idcsMaxValue: 20
        /// * idcsMinValue: 8
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: true
        /// * returned: default
        /// * type: integer
        /// * uniqueness: none
        /// </summary>
        [Input("length", required: true)]
        public Input<int> Length { get; set; } = null!;

        /// <summary>
        /// (Updatable) The maximum number of bypass codes that can be issued to any user
        /// 
        /// **SCIM++ Properties:**
        /// * idcsMaxValue: 6
        /// * idcsMinValue: 1
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: true
        /// * returned: default
        /// * type: integer
        /// * uniqueness: none
        /// </summary>
        [Input("maxActive", required: true)]
        public Input<int> MaxActive { get; set; } = null!;

        /// <summary>
        /// (Updatable) If true, indicates that self-service bypass code generation is enabled
        /// 
        /// **SCIM++ Properties:**
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: true
        /// * returned: default
        /// * type: boolean
        /// * uniqueness: none
        /// </summary>
        [Input("selfServiceGenerationEnabled", required: true)]
        public Input<bool> SelfServiceGenerationEnabled { get; set; } = null!;

        public DomainsAuthenticationFactorSettingBypassCodeSettingsArgs()
        {
        }
        public static new DomainsAuthenticationFactorSettingBypassCodeSettingsArgs Empty => new DomainsAuthenticationFactorSettingBypassCodeSettingsArgs();
    }
}
