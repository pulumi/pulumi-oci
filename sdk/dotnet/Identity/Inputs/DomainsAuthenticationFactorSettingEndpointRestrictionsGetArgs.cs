// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Identity.Inputs
{

    public sealed class DomainsAuthenticationFactorSettingEndpointRestrictionsGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) Maximum number of days until an endpoint can be trusted
        /// 
        /// **SCIM++ Properties:**
        /// * idcsMaxValue: 180
        /// * idcsMinValue: 1
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: true
        /// * returned: default
        /// * type: integer
        /// * uniqueness: none
        /// </summary>
        [Input("maxEndpointTrustDurationInDays", required: true)]
        public Input<int> MaxEndpointTrustDurationInDays { get; set; } = null!;

        /// <summary>
        /// (Updatable) Maximum number of enrolled devices per user
        /// 
        /// **SCIM++ Properties:**
        /// * idcsMaxValue: 20
        /// * idcsMinValue: 1
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: true
        /// * returned: default
        /// * type: integer
        /// * uniqueness: none
        /// </summary>
        [Input("maxEnrolledDevices", required: true)]
        public Input<int> MaxEnrolledDevices { get; set; } = null!;

        /// <summary>
        /// (Updatable) An integer that represents the maximum number of failed MFA logins before an account is locked
        /// 
        /// **SCIM++ Properties:**
        /// * idcsMaxValue: 20
        /// * idcsMinValue: 5
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: true
        /// * returned: default
        /// * type: integer
        /// * uniqueness: none
        /// </summary>
        [Input("maxIncorrectAttempts", required: true)]
        public Input<int> MaxIncorrectAttempts { get; set; } = null!;

        /// <summary>
        /// (Updatable) Max number of trusted endpoints per user
        /// 
        /// **SCIM++ Properties:**
        /// * idcsMaxValue: 20
        /// * idcsMinValue: 1
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: true
        /// * returned: default
        /// * type: integer
        /// * uniqueness: none
        /// </summary>
        [Input("maxTrustedEndpoints", required: true)]
        public Input<int> MaxTrustedEndpoints { get; set; } = null!;

        /// <summary>
        /// (Updatable) Specify if trusted endpoints are enabled
        /// 
        /// **SCIM++ Properties:**
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: true
        /// * returned: default
        /// * type: boolean
        /// * uniqueness: none
        /// </summary>
        [Input("trustedEndpointsEnabled", required: true)]
        public Input<bool> TrustedEndpointsEnabled { get; set; } = null!;

        public DomainsAuthenticationFactorSettingEndpointRestrictionsGetArgs()
        {
        }
        public static new DomainsAuthenticationFactorSettingEndpointRestrictionsGetArgs Empty => new DomainsAuthenticationFactorSettingEndpointRestrictionsGetArgs();
    }
}
