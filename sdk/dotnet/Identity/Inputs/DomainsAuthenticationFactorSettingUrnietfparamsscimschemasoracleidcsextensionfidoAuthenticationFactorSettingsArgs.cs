// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Identity.Inputs
{

    public sealed class DomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettingsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) Attribute used to define the type of attestation required.
        /// </summary>
        [Input("attestation", required: true)]
        public Input<string> Attestation { get; set; } = null!;

        /// <summary>
        /// (Updatable) Attribute used to define authenticator selection attachment.
        /// </summary>
        [Input("authenticatorSelectionAttachment", required: true)]
        public Input<string> AuthenticatorSelectionAttachment { get; set; } = null!;

        /// <summary>
        /// (Updatable) Flag used to indicate authenticator selection is required or not
        /// </summary>
        [Input("authenticatorSelectionRequireResidentKey", required: true)]
        public Input<bool> AuthenticatorSelectionRequireResidentKey { get; set; } = null!;

        /// <summary>
        /// (Updatable) Attribute used to define authenticator selection resident key requirement.
        /// </summary>
        [Input("authenticatorSelectionResidentKey", required: true)]
        public Input<string> AuthenticatorSelectionResidentKey { get; set; } = null!;

        /// <summary>
        /// (Updatable) Attribute used to define authenticator selection verification.
        /// </summary>
        [Input("authenticatorSelectionUserVerification", required: true)]
        public Input<string> AuthenticatorSelectionUserVerification { get; set; } = null!;

        /// <summary>
        /// (Updatable) Number of domain levels IDCS should use for origin comparision
        /// </summary>
        [Input("domainValidationLevel")]
        public Input<int>? DomainValidationLevel { get; set; }

        /// <summary>
        /// (Updatable) Flag used to indicate whether we need to restrict creation of multiple credentials in same authenticator
        /// </summary>
        [Input("excludeCredentials", required: true)]
        public Input<bool> ExcludeCredentials { get; set; } = null!;

        [Input("publicKeyTypes", required: true)]
        private InputList<string>? _publicKeyTypes;

        /// <summary>
        /// (Updatable) List of server supported public key algorithms
        /// </summary>
        public InputList<string> PublicKeyTypes
        {
            get => _publicKeyTypes ?? (_publicKeyTypes = new InputList<string>());
            set => _publicKeyTypes = value;
        }

        /// <summary>
        /// (Updatable) Timeout for the fido authentication to complete
        /// </summary>
        [Input("timeout", required: true)]
        public Input<int> Timeout { get; set; } = null!;

        public DomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettingsArgs()
        {
        }
        public static new DomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettingsArgs Empty => new DomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettingsArgs();
    }
}
