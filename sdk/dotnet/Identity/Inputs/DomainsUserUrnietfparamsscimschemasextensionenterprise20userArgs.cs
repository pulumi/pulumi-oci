// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Identity.Inputs
{

    public sealed class DomainsUserUrnietfparamsscimschemasextensionenterprise20userArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) Identifies the name of a cost center.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsCsvAttributeName: Cost Center
        /// * idcsCsvAttributeNameMappings: [[columnHeaderName:Cost Center]]
        /// * idcsPii: true
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Input("costCenter")]
        public Input<string>? CostCenter { get; set; }

        /// <summary>
        /// (Updatable) Identifies the name of a department.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsCsvAttributeName: Department
        /// * idcsCsvAttributeNameMappings: [[columnHeaderName:Department]]
        /// * idcsPii: true
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Input("department")]
        public Input<string>? Department { get; set; }

        /// <summary>
        /// (Updatable) Identifies the name of a division.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsCsvAttributeName: Division
        /// * idcsCsvAttributeNameMappings: [[columnHeaderName:Division]]
        /// * idcsPii: true
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Input("division")]
        public Input<string>? Division { get; set; }

        /// <summary>
        /// (Updatable) Numeric or alphanumeric identifier assigned to  a person, typically based on order of hire or association with an organization.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsCsvAttributeName: Employee Number
        /// * idcsCsvAttributeNameMappings: [[columnHeaderName:Employee Number]]
        /// * idcsPii: true
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Input("employeeNumber")]
        public Input<string>? EmployeeNumber { get; set; }

        /// <summary>
        /// (Updatable) The User's manager. A complex type that optionally allows Service Providers to represent organizational hierarchy by referencing the 'id' attribute of another User.
        /// 
        /// **SCIM++ Properties:**
        /// * idcsCsvAttributeNameMappings: [[columnHeaderName:Manager, deprecatedColumnHeaderName:Manager Name, mapsTo:manager.value]]
        /// * idcsPii: true
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: complex
        /// * uniqueness: none
        /// </summary>
        [Input("manager")]
        public Input<Inputs.DomainsUserUrnietfparamsscimschemasextensionenterprise20userManagerArgs>? Manager { get; set; }

        /// <summary>
        /// (Updatable) Identifies the name of an organization.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsCsvAttributeName: Organization
        /// * idcsCsvAttributeNameMappings: [[columnHeaderName:Organization Name, deprecatedColumnHeaderName:Organization]]
        /// * idcsPii: true
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        [Input("organization")]
        public Input<string>? Organization { get; set; }

        public DomainsUserUrnietfparamsscimschemasextensionenterprise20userArgs()
        {
        }
        public static new DomainsUserUrnietfparamsscimschemasextensionenterprise20userArgs Empty => new DomainsUserUrnietfparamsscimschemasextensionenterprise20userArgs();
    }
}
