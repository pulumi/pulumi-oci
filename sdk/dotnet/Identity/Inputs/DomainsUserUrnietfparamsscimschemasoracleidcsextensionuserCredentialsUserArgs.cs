// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Identity.Inputs
{

    public sealed class DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserArgs : global::Pulumi.ResourceArgs
    {
        [Input("apiKeys")]
        private InputList<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserApiKeyArgs>? _apiKeys;

        /// <summary>
        /// (Updatable) A list of API keys corresponding to user.
        /// 
        /// **Added In:** 2012271618
        /// 
        /// **SCIM++ Properties:**
        /// * idcsCompositeKey: [value]
        /// * idcsSearchable: true
        /// * multiValued: true
        /// * mutability: readOnly
        /// * required: false
        /// * returned: request
        /// * type: complex
        /// * uniqueness: none
        /// </summary>
        public InputList<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserApiKeyArgs> ApiKeys
        {
            get => _apiKeys ?? (_apiKeys = new InputList<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserApiKeyArgs>());
            set => _apiKeys = value;
        }

        [Input("authTokens")]
        private InputList<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserAuthTokenArgs>? _authTokens;

        /// <summary>
        /// (Updatable) A list of Auth tokens corresponding to user.
        /// 
        /// **Added In:** 2012271618
        /// 
        /// **SCIM++ Properties:**
        /// * idcsCompositeKey: [value]
        /// * idcsSearchable: true
        /// * multiValued: true
        /// * mutability: readOnly
        /// * required: false
        /// * returned: request
        /// * type: complex
        /// * uniqueness: none
        /// </summary>
        public InputList<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserAuthTokenArgs> AuthTokens
        {
            get => _authTokens ?? (_authTokens = new InputList<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserAuthTokenArgs>());
            set => _authTokens = value;
        }

        [Input("customerSecretKeys")]
        private InputList<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserCustomerSecretKeyArgs>? _customerSecretKeys;

        /// <summary>
        /// (Updatable) A list of customer secret keys corresponding to user.
        /// 
        /// **Added In:** 2102181953
        /// 
        /// **SCIM++ Properties:**
        /// * idcsCompositeKey: [value]
        /// * idcsSearchable: true
        /// * multiValued: true
        /// * mutability: readOnly
        /// * required: false
        /// * returned: request
        /// * type: complex
        /// * uniqueness: none
        /// </summary>
        public InputList<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserCustomerSecretKeyArgs> CustomerSecretKeys
        {
            get => _customerSecretKeys ?? (_customerSecretKeys = new InputList<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserCustomerSecretKeyArgs>());
            set => _customerSecretKeys = value;
        }

        [Input("dbCredentials")]
        private InputList<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserDbCredentialArgs>? _dbCredentials;

        /// <summary>
        /// (Updatable) A list of database credentials corresponding to user.
        /// 
        /// **Added In:** 2102181953
        /// 
        /// **SCIM++ Properties:**
        /// * idcsCompositeKey: [value]
        /// * idcsSearchable: true
        /// * multiValued: true
        /// * mutability: readOnly
        /// * required: false
        /// * returned: request
        /// * type: complex
        /// * uniqueness: none
        /// </summary>
        public InputList<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserDbCredentialArgs> DbCredentials
        {
            get => _dbCredentials ?? (_dbCredentials = new InputList<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserDbCredentialArgs>());
            set => _dbCredentials = value;
        }

        [Input("oAuth2clientCredentials")]
        private InputList<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserOAuth2clientCredentialArgs>? _oAuth2clientCredentials;

        /// <summary>
        /// (Updatable) A list of OAuth2 client credentials corresponding to a user.
        /// 
        /// **Added In:** 2012271618
        /// 
        /// **SCIM++ Properties:**
        /// * idcsCompositeKey: [value]
        /// * idcsSearchable: true
        /// * multiValued: true
        /// * mutability: readOnly
        /// * required: false
        /// * returned: request
        /// * type: complex
        /// * uniqueness: none
        /// </summary>
        public InputList<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserOAuth2clientCredentialArgs> OAuth2clientCredentials
        {
            get => _oAuth2clientCredentials ?? (_oAuth2clientCredentials = new InputList<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserOAuth2clientCredentialArgs>());
            set => _oAuth2clientCredentials = value;
        }

        [Input("smtpCredentials")]
        private InputList<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserSmtpCredentialArgs>? _smtpCredentials;

        /// <summary>
        /// (Updatable) A list of SMTP credentials corresponding to user.
        /// 
        /// **Added In:** 2012271618
        /// 
        /// **SCIM++ Properties:**
        /// * idcsCompositeKey: [value]
        /// * idcsSearchable: true
        /// * multiValued: true
        /// * mutability: readOnly
        /// * required: false
        /// * returned: request
        /// * type: complex
        /// * uniqueness: none
        /// </summary>
        public InputList<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserSmtpCredentialArgs> SmtpCredentials
        {
            get => _smtpCredentials ?? (_smtpCredentials = new InputList<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserSmtpCredentialArgs>());
            set => _smtpCredentials = value;
        }

        public DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserArgs()
        {
        }
        public static new DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserArgs Empty => new DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserArgs();
    }
}
