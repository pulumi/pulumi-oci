// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Identity.Inputs
{

    public sealed class DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("apiKeys")]
        private InputList<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserApiKeyGetArgs>? _apiKeys;

        /// <summary>
        /// (Updatable) A list of API keys corresponding to user.
        /// 
        /// **Added In:** 2012271618
        /// 
        /// **SCIM++ Properties:**
        /// * idcsCompositeKey: [value]
        /// * idcsSearchable: true
        /// * multiValued: true
        /// * mutability: readOnly
        /// * required: false
        /// * returned: request
        /// * type: complex
        /// * uniqueness: none
        /// </summary>
        public InputList<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserApiKeyGetArgs> ApiKeys
        {
            get => _apiKeys ?? (_apiKeys = new InputList<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserApiKeyGetArgs>());
            set => _apiKeys = value;
        }

        [Input("authTokens")]
        private InputList<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserAuthTokenGetArgs>? _authTokens;

        /// <summary>
        /// (Updatable) A list of Auth tokens corresponding to user.
        /// 
        /// **Added In:** 2012271618
        /// 
        /// **SCIM++ Properties:**
        /// * idcsCompositeKey: [value]
        /// * idcsSearchable: true
        /// * multiValued: true
        /// * mutability: readOnly
        /// * required: false
        /// * returned: request
        /// * type: complex
        /// * uniqueness: none
        /// </summary>
        public InputList<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserAuthTokenGetArgs> AuthTokens
        {
            get => _authTokens ?? (_authTokens = new InputList<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserAuthTokenGetArgs>());
            set => _authTokens = value;
        }

        [Input("customerSecretKeys")]
        private InputList<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserCustomerSecretKeyGetArgs>? _customerSecretKeys;

        /// <summary>
        /// (Updatable) A list of customer secret keys corresponding to user.
        /// 
        /// **Added In:** 2102181953
        /// 
        /// **SCIM++ Properties:**
        /// * idcsCompositeKey: [value]
        /// * idcsSearchable: true
        /// * multiValued: true
        /// * mutability: readOnly
        /// * required: false
        /// * returned: request
        /// * type: complex
        /// * uniqueness: none
        /// </summary>
        public InputList<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserCustomerSecretKeyGetArgs> CustomerSecretKeys
        {
            get => _customerSecretKeys ?? (_customerSecretKeys = new InputList<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserCustomerSecretKeyGetArgs>());
            set => _customerSecretKeys = value;
        }

        [Input("dbCredentials")]
        private InputList<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserDbCredentialGetArgs>? _dbCredentials;

        /// <summary>
        /// (Updatable) A list of database credentials corresponding to user.
        /// 
        /// **Added In:** 2102181953
        /// 
        /// **SCIM++ Properties:**
        /// * idcsCompositeKey: [value]
        /// * idcsSearchable: true
        /// * multiValued: true
        /// * mutability: readOnly
        /// * required: false
        /// * returned: request
        /// * type: complex
        /// * uniqueness: none
        /// </summary>
        public InputList<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserDbCredentialGetArgs> DbCredentials
        {
            get => _dbCredentials ?? (_dbCredentials = new InputList<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserDbCredentialGetArgs>());
            set => _dbCredentials = value;
        }

        [Input("oAuth2clientCredentials")]
        private InputList<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserOAuth2clientCredentialGetArgs>? _oAuth2clientCredentials;

        /// <summary>
        /// (Updatable) A list of OAuth2 client credentials corresponding to a user.
        /// 
        /// **Added In:** 2012271618
        /// 
        /// **SCIM++ Properties:**
        /// * idcsCompositeKey: [value]
        /// * idcsSearchable: true
        /// * multiValued: true
        /// * mutability: readOnly
        /// * required: false
        /// * returned: request
        /// * type: complex
        /// * uniqueness: none
        /// </summary>
        public InputList<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserOAuth2clientCredentialGetArgs> OAuth2clientCredentials
        {
            get => _oAuth2clientCredentials ?? (_oAuth2clientCredentials = new InputList<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserOAuth2clientCredentialGetArgs>());
            set => _oAuth2clientCredentials = value;
        }

        [Input("smtpCredentials")]
        private InputList<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserSmtpCredentialGetArgs>? _smtpCredentials;

        /// <summary>
        /// (Updatable) A list of SMTP credentials corresponding to user.
        /// 
        /// **Added In:** 2012271618
        /// 
        /// **SCIM++ Properties:**
        /// * idcsCompositeKey: [value]
        /// * idcsSearchable: true
        /// * multiValued: true
        /// * mutability: readOnly
        /// * required: false
        /// * returned: request
        /// * type: complex
        /// * uniqueness: none
        /// </summary>
        public InputList<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserSmtpCredentialGetArgs> SmtpCredentials
        {
            get => _smtpCredentials ?? (_smtpCredentials = new InputList<Inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserSmtpCredentialGetArgs>());
            set => _smtpCredentials = value;
        }

        public DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserGetArgs()
        {
        }
        public static new DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserGetArgs Empty => new DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserGetArgs();
    }
}
