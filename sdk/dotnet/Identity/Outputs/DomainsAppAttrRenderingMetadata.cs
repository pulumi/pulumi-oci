// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Identity.Outputs
{

    [OutputType]
    public sealed class DomainsAppAttrRenderingMetadata
    {
        /// <summary>
        /// (Updatable) Data type of the attribute.
        /// 
        /// **SCIM++ Properties:**
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        public readonly string? Datatype;
        /// <summary>
        /// (Updatable) Help text for the attribute. It can contain HTML tags.
        /// 
        /// **SCIM++ Properties:**
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        public readonly string? Helptext;
        /// <summary>
        /// (Updatable) Label for the attribute to be shown in the UI.
        /// 
        /// **SCIM++ Properties:**
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        public readonly string? Label;
        /// <summary>
        /// (Updatable) Maximum length of the attribute.
        /// 
        /// **SCIM++ Properties:**
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: integer
        /// * uniqueness: none
        /// </summary>
        public readonly int? MaxLength;
        /// <summary>
        /// (Updatable) Maximum size of the attribute.
        /// 
        /// **SCIM++ Properties:**
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: integer
        /// * uniqueness: none
        /// </summary>
        public readonly int? MaxSize;
        /// <summary>
        /// (Updatable) Minimum length of the attribute.
        /// 
        /// **SCIM++ Properties:**
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: integer
        /// * uniqueness: none
        /// </summary>
        public readonly int? MinLength;
        /// <summary>
        /// (Updatable) Minimum size of the attribute..
        /// 
        /// **SCIM++ Properties:**
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: integer
        /// * uniqueness: none
        /// </summary>
        public readonly int? MinSize;
        /// <summary>
        /// (Updatable) The attribute represents the name of the attribute that will be used in the Security Assertion Markup Language (SAML) assertion
        /// 
        /// **Deprecated Since: 18.2.2**
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * idcsValuePersistedInOtherAttribute: true
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: true
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// (Updatable) Display sequence of the bundle configuration property.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: integer
        /// * uniqueness: none
        /// </summary>
        public readonly int? Order;
        /// <summary>
        /// (Updatable) If true, indicates that this value must be protected.
        /// 
        /// **Added In:** 18.2.2
        /// 
        /// **SCIM++ Properties:**
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: request
        /// * type: boolean
        /// * uniqueness: none
        /// </summary>
        public readonly bool? ReadOnly;
        /// <summary>
        /// (Updatable) Regular expression of the attribute for validation.
        /// 
        /// **SCIM++ Properties:**
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        public readonly string? Regexp;
        /// <summary>
        /// (Updatable) If true, this flatfile bundle configuration property is required to connect to the target connected managed app. This attribute maps to \"isRequired\" attribute in \"ConfigurationProperty\" in ICF.
        /// 
        /// **SCIM++ Properties:**
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: immutable
        /// * required: true
        /// * returned: default
        /// * type: boolean
        /// * uniqueness: none
        /// </summary>
        public readonly bool? Required;
        /// <summary>
        /// (Updatable) UI widget to use for the attribute.
        /// 
        /// **SCIM++ Properties:**
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        public readonly string? Section;
        /// <summary>
        /// (Updatable) Indicates whether the attribute is to be shown on the application creation UI.
        /// 
        /// **SCIM++ Properties:**
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: boolean
        /// * uniqueness: none
        /// </summary>
        public readonly bool? Visible;
        /// <summary>
        /// (Updatable) UI widget to use for the attribute.
        /// 
        /// **SCIM++ Properties:**
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        public readonly string? Widget;

        [OutputConstructor]
        private DomainsAppAttrRenderingMetadata(
            string? datatype,

            string? helptext,

            string? label,

            int? maxLength,

            int? maxSize,

            int? minLength,

            int? minSize,

            string name,

            int? order,

            bool? readOnly,

            string? regexp,

            bool? required,

            string? section,

            bool? visible,

            string? widget)
        {
            Datatype = datatype;
            Helptext = helptext;
            Label = label;
            MaxLength = maxLength;
            MaxSize = maxSize;
            MinLength = minLength;
            MinSize = minSize;
            Name = name;
            Order = order;
            ReadOnly = readOnly;
            Regexp = regexp;
            Required = required;
            Section = section;
            Visible = visible;
            Widget = widget;
        }
    }
}
