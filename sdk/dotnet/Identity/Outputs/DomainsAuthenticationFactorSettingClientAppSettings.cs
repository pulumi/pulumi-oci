// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Identity.Outputs
{

    [OutputType]
    public sealed class DomainsAuthenticationFactorSettingClientAppSettings
    {
        /// <summary>
        /// (Updatable) Indicates what protection policy that the system applies on a device. By default, the value is NONE, which indicates that the system applies no protection policy. A value of APP_PIN indicates that the system requires a Personal Identification Number (PIN). A value of DEVICE_BIOMETRIC_OR_APP_PIN indicates that either a PIN or a biometric authentication factor is required.
        /// </summary>
        public readonly string DeviceProtectionPolicy;
        /// <summary>
        /// (Updatable) The period of time in seconds that the system will lock a user out of the service after that user exceeds the maximum number of login failures
        /// </summary>
        public readonly int InitialLockoutPeriodInSecs;
        /// <summary>
        /// (Updatable) The size of the key that the system uses to generate the public-private key pair
        /// </summary>
        public readonly int KeyPairLength;
        /// <summary>
        /// (Updatable) The pattern of escalation that the system follows, in locking a particular user out of the service.
        /// </summary>
        public readonly string LockoutEscalationPattern;
        /// <summary>
        /// (Updatable) The maximum number of times that a particular user can fail to login before the system locks that user out of the service
        /// </summary>
        public readonly int MaxFailuresBeforeLockout;
        /// <summary>
        /// (Updatable) The maximum number of login failures that the system will allow before raising a warning and sending an alert via email
        /// </summary>
        public readonly int MaxFailuresBeforeWarning;
        /// <summary>
        /// (Updatable) The maximum period of time that the system will lock a particular user out of the service regardless of what the configured pattern of escalation would otherwise dictate
        /// </summary>
        public readonly int MaxLockoutIntervalInSecs;
        /// <summary>
        /// (Updatable) Minimum length of the Personal Identification Number (PIN)
        /// </summary>
        public readonly int MinPinLength;
        /// <summary>
        /// (Updatable) The period of time in days after which a client should refresh its policy by re-reading that policy from the server
        /// </summary>
        public readonly int PolicyUpdateFreqInDays;
        /// <summary>
        /// (Updatable) Indicates which algorithm the system will use to sign requests
        /// </summary>
        public readonly string RequestSigningAlgo;
        /// <summary>
        /// (Updatable) Indicates the type of encoding that the system should use to generate a shared secret
        /// </summary>
        public readonly string SharedSecretEncoding;
        /// <summary>
        /// (Updatable) If true, indicates that the system should require the user to unlock the client app for each request. In order to unlock the App, the user must supply a Personal Identification Number (PIN) or a biometric authentication-factor.
        /// </summary>
        public readonly bool UnlockAppForEachRequestEnabled;
        /// <summary>
        /// (Updatable) Specifies the period of time in seconds after which the client App should require the user to unlock the App. In order to unlock the App, the user must supply a Personal Identification Number (PIN) or a biometric authentication-factor. A value of zero means that it is disabled.
        /// </summary>
        public readonly int UnlockAppIntervalInSecs;
        /// <summary>
        /// (Updatable) If true, indicates that the system should require the user to unlock the client App, when the client App comes to the foreground in the display of the device. In order to unlock the App, the user must supply a Personal Identification Number (PIN) or a biometric authentication-factor.
        /// </summary>
        public readonly bool UnlockOnAppForegroundEnabled;
        /// <summary>
        /// (Updatable) If true, indicates that the system should require the user to unlock the client App whenever the App is started. In order to unlock the App, the user must supply a Personal Identification Number (PIN) or a biometric authentication-factor.
        /// </summary>
        public readonly bool UnlockOnAppStartEnabled;

        [OutputConstructor]
        private DomainsAuthenticationFactorSettingClientAppSettings(
            string deviceProtectionPolicy,

            int initialLockoutPeriodInSecs,

            int keyPairLength,

            string lockoutEscalationPattern,

            int maxFailuresBeforeLockout,

            int maxFailuresBeforeWarning,

            int maxLockoutIntervalInSecs,

            int minPinLength,

            int policyUpdateFreqInDays,

            string requestSigningAlgo,

            string sharedSecretEncoding,

            bool unlockAppForEachRequestEnabled,

            int unlockAppIntervalInSecs,

            bool unlockOnAppForegroundEnabled,

            bool unlockOnAppStartEnabled)
        {
            DeviceProtectionPolicy = deviceProtectionPolicy;
            InitialLockoutPeriodInSecs = initialLockoutPeriodInSecs;
            KeyPairLength = keyPairLength;
            LockoutEscalationPattern = lockoutEscalationPattern;
            MaxFailuresBeforeLockout = maxFailuresBeforeLockout;
            MaxFailuresBeforeWarning = maxFailuresBeforeWarning;
            MaxLockoutIntervalInSecs = maxLockoutIntervalInSecs;
            MinPinLength = minPinLength;
            PolicyUpdateFreqInDays = policyUpdateFreqInDays;
            RequestSigningAlgo = requestSigningAlgo;
            SharedSecretEncoding = sharedSecretEncoding;
            UnlockAppForEachRequestEnabled = unlockAppForEachRequestEnabled;
            UnlockAppIntervalInSecs = unlockAppIntervalInSecs;
            UnlockOnAppForegroundEnabled = unlockOnAppForegroundEnabled;
            UnlockOnAppStartEnabled = unlockOnAppStartEnabled;
        }
    }
}
