// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Identity.Outputs
{

    [OutputType]
    public sealed class DomainsAuthenticationFactorSettingTotpSettings
    {
        /// <summary>
        /// (Updatable) The period of time (in minutes) that a one-time passcode remains valid that the system sends by email.
        /// 
        /// **Added In:** 18.1.2
        /// 
        /// **SCIM++ Properties:**
        /// * idcsMaxValue: 60
        /// * idcsMinValue: 2
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: true
        /// * returned: default
        /// * type: integer
        /// * uniqueness: none
        /// </summary>
        public readonly int EmailOtpValidityDurationInMins;
        /// <summary>
        /// (Updatable) Exact length of the email one-time passcode.
        /// 
        /// **Added In:** 18.1.2
        /// 
        /// **SCIM++ Properties:**
        /// * idcsMaxValue: 10
        /// * idcsMinValue: 4
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: true
        /// * returned: default
        /// * type: integer
        /// * uniqueness: none
        /// </summary>
        public readonly int EmailPasscodeLength;
        /// <summary>
        /// (Updatable) The hashing algorithm to be used to calculate a One-Time Passcode. By default, the system uses SHA1.
        /// 
        /// **SCIM++ Properties:**
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: true
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        public readonly string HashingAlgorithm;
        /// <summary>
        /// (Updatable) The period of time (in seconds) that a JSON Web Token (JWT) is valid
        /// 
        /// **SCIM++ Properties:**
        /// * idcsMaxValue: 99999
        /// * idcsMinValue: 30
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: true
        /// * returned: default
        /// * type: integer
        /// * uniqueness: none
        /// </summary>
        public readonly int JwtValidityDurationInSecs;
        /// <summary>
        /// (Updatable) The duration of time (in days) after which the shared secret has to be refreshed
        /// 
        /// **SCIM++ Properties:**
        /// * idcsMaxValue: 999
        /// * idcsMinValue: 30
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: true
        /// * returned: default
        /// * type: integer
        /// * uniqueness: none
        /// </summary>
        public readonly int KeyRefreshIntervalInDays;
        /// <summary>
        /// (Updatable) Exact length of the One-Time Passcode that the system should generate
        /// 
        /// **SCIM++ Properties:**
        /// * idcsMaxValue: 10
        /// * idcsMinValue: 4
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: true
        /// * returned: default
        /// * type: integer
        /// * uniqueness: none
        /// </summary>
        public readonly int PasscodeLength;
        /// <summary>
        /// (Updatable) The period of time (in minutes) for which a One-Time Passcode that the system sends by Short Message Service (SMS) or by voice remains valid
        /// 
        /// **SCIM++ Properties:**
        /// * idcsMaxValue: 60
        /// * idcsMinValue: 2
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: true
        /// * returned: default
        /// * type: integer
        /// * uniqueness: none
        /// </summary>
        public readonly int SmsOtpValidityDurationInMins;
        /// <summary>
        /// (Updatable) Exact length of the Short Message Service (SMS) One-Time Passcode
        /// 
        /// **SCIM++ Properties:**
        /// * idcsMaxValue: 10
        /// * idcsMinValue: 4
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: true
        /// * returned: default
        /// * type: integer
        /// * uniqueness: none
        /// </summary>
        public readonly int SmsPasscodeLength;
        /// <summary>
        /// (Updatable) Time (in secs) to be used as the time step
        /// 
        /// **SCIM++ Properties:**
        /// * idcsMaxValue: 300
        /// * idcsMinValue: 30
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: true
        /// * returned: default
        /// * type: integer
        /// * uniqueness: none
        /// </summary>
        public readonly int TimeStepInSecs;
        /// <summary>
        /// (Updatable) The tolerance/step-size that the system should use when validating a One-Time Passcode
        /// 
        /// **SCIM++ Properties:**
        /// * idcsMaxValue: 3
        /// * idcsMinValue: 2
        /// * idcsSearchable: false
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: true
        /// * returned: default
        /// * type: integer
        /// * uniqueness: none
        /// </summary>
        public readonly int TimeStepTolerance;

        [OutputConstructor]
        private DomainsAuthenticationFactorSettingTotpSettings(
            int emailOtpValidityDurationInMins,

            int emailPasscodeLength,

            string hashingAlgorithm,

            int jwtValidityDurationInSecs,

            int keyRefreshIntervalInDays,

            int passcodeLength,

            int smsOtpValidityDurationInMins,

            int smsPasscodeLength,

            int timeStepInSecs,

            int timeStepTolerance)
        {
            EmailOtpValidityDurationInMins = emailOtpValidityDurationInMins;
            EmailPasscodeLength = emailPasscodeLength;
            HashingAlgorithm = hashingAlgorithm;
            JwtValidityDurationInSecs = jwtValidityDurationInSecs;
            KeyRefreshIntervalInDays = keyRefreshIntervalInDays;
            PasscodeLength = passcodeLength;
            SmsOtpValidityDurationInMins = smsOtpValidityDurationInMins;
            SmsPasscodeLength = smsPasscodeLength;
            TimeStepInSecs = timeStepInSecs;
            TimeStepTolerance = timeStepTolerance;
        }
    }
}
