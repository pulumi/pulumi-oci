// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Identity.Outputs
{

    [OutputType]
    public sealed class DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroup
    {
        /// <summary>
        /// (Updatable) A list of appRoles that the user belongs to, either thorough direct membership, nested groups, or dynamically calculated
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsCompositeKey: [value]
        /// * idcsSearchable: true
        /// * multiValued: true
        /// * mutability: readOnly
        /// * required: false
        /// * returned: request
        /// * type: complex
        /// * uniqueness: none
        /// </summary>
        public readonly ImmutableArray<Outputs.DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupAppRole> AppRoles;
        /// <summary>
        /// (Updatable) Source from which this group got created.
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsCsvAttributeNameMappings: [[defaultValue:import]]
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: immutable
        /// * required: false
        /// * returned: request
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        public readonly string? CreationMechanism;
        /// <summary>
        /// (Updatable) Group description
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsCsvAttributeName: Description
        /// * idcsCsvAttributeNameMappings: [[columnHeaderName:Description]]
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: readWrite
        /// * required: false
        /// * returned: default
        /// * type: string
        /// * uniqueness: none
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// (Updatable) Grants assigned to group
        /// 
        /// **SCIM++ Properties:**
        /// * idcsSearchable: true
        /// * multiValued: true
        /// * mutability: readOnly
        /// * required: false
        /// * returned: request
        /// * type: complex
        /// * uniqueness: none
        /// </summary>
        public readonly ImmutableArray<Outputs.DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupGrant> Grants;
        /// <summary>
        /// (Updatable) Group owners
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsCompositeKey: [value, type]
        /// * idcsSearchable: true
        /// * multiValued: true
        /// * mutability: readWrite
        /// * required: false
        /// * returned: request
        /// * type: complex
        /// * uniqueness: none
        /// </summary>
        public readonly ImmutableArray<Outputs.DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupOwner> Owners;
        /// <summary>
        /// (Updatable) Password Policy associated with this Group.
        /// 
        /// **Added In:** 20.1.3
        /// 
        /// **SCIM++ Properties:**
        /// * caseExact: false
        /// * idcsCompositeKey: [value]
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: request
        /// * type: complex
        /// * uniqueness: none
        /// </summary>
        public readonly ImmutableArray<Outputs.DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupPasswordPolicy> PasswordPolicies;
        /// <summary>
        /// (Updatable) The entity that created this Group.
        /// 
        /// **Added In:** 18.4.2
        /// 
        /// **SCIM++ Properties:**
        /// * idcsCompositeKey: [value]
        /// * idcsSearchable: true
        /// * multiValued: false
        /// * mutability: readOnly
        /// * required: false
        /// * returned: request
        /// * type: complex
        /// * uniqueness: none
        /// </summary>
        public readonly ImmutableArray<Outputs.DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupSyncedFromApp> SyncedFromApps;

        [OutputConstructor]
        private DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroup(
            ImmutableArray<Outputs.DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupAppRole> appRoles,

            string? creationMechanism,

            string? description,

            ImmutableArray<Outputs.DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupGrant> grants,

            ImmutableArray<Outputs.DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupOwner> owners,

            ImmutableArray<Outputs.DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupPasswordPolicy> passwordPolicies,

            ImmutableArray<Outputs.DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupSyncedFromApp> syncedFromApps)
        {
            AppRoles = appRoles;
            CreationMechanism = creationMechanism;
            Description = description;
            Grants = grants;
            Owners = owners;
            PasswordPolicies = passwordPolicies;
            SyncedFromApps = syncedFromApps;
        }
    }
}
