// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Identity.Outputs
{

    [OutputType]
    public sealed class GetDomainsAppsAppGrantedAppRoleResult
    {
        /// <summary>
        /// If true, then this granted AppRole confers administrative privileges within the App that defines it. Otherwise, the granted AppRole confers only functional privileges.
        /// </summary>
        public readonly bool AdminRole;
        /// <summary>
        /// The id of the App that defines this AppRole, which is granted to this App. The App that defines the AppRole acts as the producer; the App to which the AppRole is granted acts as a consumer.
        /// </summary>
        public readonly string AppId;
        /// <summary>
        /// The name of the App that defines this AppRole, which is granted to this App. The App that defines the AppRole acts as the producer; the App to which the AppRole is granted acts as a consumer.
        /// </summary>
        public readonly string AppName;
        /// <summary>
        /// Display-name of the AppRole.
        /// </summary>
        public readonly string Display;
        /// <summary>
        /// The name of the legacy group associated with this AppRole.
        /// </summary>
        public readonly string LegacyGroupName;
        /// <summary>
        /// If true, indicates that this value must be protected.
        /// </summary>
        public readonly bool ReadOnly;
        /// <summary>
        /// URI of the AppRole.
        /// </summary>
        public readonly string Ref;
        /// <summary>
        /// Object Class type. Allowed values are AccountObjectClass, ManagedObjectClass.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// ID of the AppRole.
        /// </summary>
        public readonly string Value;

        [OutputConstructor]
        private GetDomainsAppsAppGrantedAppRoleResult(
            bool adminRole,

            string appId,

            string appName,

            string display,

            string legacyGroupName,

            bool readOnly,

            string @ref,

            string type,

            string value)
        {
            AdminRole = adminRole;
            AppId = appId;
            AppName = appName;
            Display = display;
            LegacyGroupName = legacyGroupName;
            ReadOnly = readOnly;
            Ref = @ref;
            Type = type;
            Value = value;
        }
    }
}
