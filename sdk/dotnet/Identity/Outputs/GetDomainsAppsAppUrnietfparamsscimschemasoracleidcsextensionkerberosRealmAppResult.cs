// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Identity.Outputs
{

    [OutputType]
    public sealed class GetDomainsAppsAppUrnietfparamsscimschemasoracleidcsextensionkerberosRealmAppResult
    {
        /// <summary>
        /// The type of salt that the system will use to encrypt Kerberos-specific artifacts of this App unless another type of salt is specified.
        /// </summary>
        public readonly string DefaultEncryptionSaltType;
        /// <summary>
        /// The primary key that the system should use to encrypt artifacts that are specific to this Kerberos realm -- for example, to encrypt the Principal Key in each KerberosRealmUser.
        /// </summary>
        public readonly string MasterKey;
        /// <summary>
        /// Max Renewable Age in seconds
        /// </summary>
        public readonly int MaxRenewableAge;
        /// <summary>
        /// Max Ticket Life in seconds
        /// </summary>
        public readonly int MaxTicketLife;
        /// <summary>
        /// The name of the Kerberos Realm that this App uses for authentication.
        /// </summary>
        public readonly string RealmName;
        /// <summary>
        /// The types of salt that are available for the system to use when encrypting Kerberos-specific artifacts for this App.
        /// </summary>
        public readonly ImmutableArray<string> SupportedEncryptionSaltTypes;
        /// <summary>
        /// Ticket Flags
        /// </summary>
        public readonly int TicketFlags;

        [OutputConstructor]
        private GetDomainsAppsAppUrnietfparamsscimschemasoracleidcsextensionkerberosRealmAppResult(
            string defaultEncryptionSaltType,

            string masterKey,

            int maxRenewableAge,

            int maxTicketLife,

            string realmName,

            ImmutableArray<string> supportedEncryptionSaltTypes,

            int ticketFlags)
        {
            DefaultEncryptionSaltType = defaultEncryptionSaltType;
            MasterKey = masterKey;
            MaxRenewableAge = maxRenewableAge;
            MaxTicketLife = maxTicketLife;
            RealmName = realmName;
            SupportedEncryptionSaltTypes = supportedEncryptionSaltTypes;
            TicketFlags = ticketFlags;
        }
    }
}
