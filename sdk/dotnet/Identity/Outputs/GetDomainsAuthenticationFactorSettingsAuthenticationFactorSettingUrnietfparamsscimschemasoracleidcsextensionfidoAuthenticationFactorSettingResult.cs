// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Identity.Outputs
{

    [OutputType]
    public sealed class GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettingResult
    {
        /// <summary>
        /// Attribute used to define the type of attestation required.
        /// </summary>
        public readonly string Attestation;
        /// <summary>
        /// Attribute used to define authenticator selection attachment.
        /// </summary>
        public readonly string AuthenticatorSelectionAttachment;
        /// <summary>
        /// Flag used to indicate authenticator selection is required or not
        /// </summary>
        public readonly bool AuthenticatorSelectionRequireResidentKey;
        /// <summary>
        /// Attribute used to define authenticator selection resident key requirement.
        /// </summary>
        public readonly string AuthenticatorSelectionResidentKey;
        /// <summary>
        /// Attribute used to define authenticator selection verification.
        /// </summary>
        public readonly string AuthenticatorSelectionUserVerification;
        /// <summary>
        /// Number of domain levels Oracle Identity Cloud Service should use for origin comparision
        /// </summary>
        public readonly int DomainValidationLevel;
        /// <summary>
        /// Flag used to indicate whether we need to restrict creation of multiple credentials in same authenticator
        /// </summary>
        public readonly bool ExcludeCredentials;
        /// <summary>
        /// List of server supported public key algorithms
        /// </summary>
        public readonly ImmutableArray<string> PublicKeyTypes;
        /// <summary>
        /// Timeout for the fido authentication to complete
        /// </summary>
        public readonly int Timeout;

        [OutputConstructor]
        private GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettingResult(
            string attestation,

            string authenticatorSelectionAttachment,

            bool authenticatorSelectionRequireResidentKey,

            string authenticatorSelectionResidentKey,

            string authenticatorSelectionUserVerification,

            int domainValidationLevel,

            bool excludeCredentials,

            ImmutableArray<string> publicKeyTypes,

            int timeout)
        {
            Attestation = attestation;
            AuthenticatorSelectionAttachment = authenticatorSelectionAttachment;
            AuthenticatorSelectionRequireResidentKey = authenticatorSelectionRequireResidentKey;
            AuthenticatorSelectionResidentKey = authenticatorSelectionResidentKey;
            AuthenticatorSelectionUserVerification = authenticatorSelectionUserVerification;
            DomainValidationLevel = domainValidationLevel;
            ExcludeCredentials = excludeCredentials;
            PublicKeyTypes = publicKeyTypes;
            Timeout = timeout;
        }
    }
}
