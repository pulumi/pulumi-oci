// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Identity.Outputs
{

    [OutputType]
    public sealed class GetDomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionsocialIdentityProviderResult
    {
        /// <summary>
        /// Social IDP Access token URL
        /// </summary>
        public readonly string AccessTokenUrl;
        /// <summary>
        /// Whether account linking is enabled
        /// </summary>
        public readonly bool AccountLinkingEnabled;
        /// <summary>
        /// Admin scope to request
        /// </summary>
        public readonly ImmutableArray<string> AdminScopes;
        /// <summary>
        /// Social IDP Authorization URL
        /// </summary>
        public readonly string AuthzUrl;
        /// <summary>
        /// Whether social auto redirect is enabled. The IDP policy should be configured with only one Social IDP, and without username/password selected.
        /// </summary>
        public readonly bool AutoRedirectEnabled;
        /// <summary>
        /// Whether the client credential is contained in payload
        /// </summary>
        public readonly bool ClientCredentialInPayload;
        /// <summary>
        /// Social IDP allowed clock skew time
        /// </summary>
        public readonly int ClockSkewInSeconds;
        /// <summary>
        /// Social IDP Client Application Client ID
        /// </summary>
        public readonly string ConsumerKey;
        /// <summary>
        /// Social IDP Client Application Client Secret
        /// </summary>
        public readonly string ConsumerSecret;
        /// <summary>
        /// Discovery URL
        /// </summary>
        public readonly string DiscoveryUrl;
        /// <summary>
        /// Id attribute used for account linking
        /// </summary>
        public readonly string IdAttribute;
        /// <summary>
        /// Lists the groups each social JIT-provisioned user is a member. Just-in-Time user-provisioning applies this static list when jitProvGroupStaticListEnabled:true.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionsocialIdentityProviderJitProvAssignedGroupResult> JitProvAssignedGroups;
        /// <summary>
        /// Set to true to indicate Social JIT User Provisioning Groups should be assigned from a static list
        /// </summary>
        public readonly bool JitProvGroupStaticListEnabled;
        /// <summary>
        /// Social IDP User profile URL
        /// </summary>
        public readonly string ProfileUrl;
        /// <summary>
        /// redirect URL for social idp
        /// </summary>
        public readonly string RedirectUrl;
        /// <summary>
        /// Whether registration is enabled
        /// </summary>
        public readonly bool RegistrationEnabled;
        /// <summary>
        /// Scope to request
        /// </summary>
        public readonly ImmutableArray<string> Scopes;
        /// <summary>
        /// Service Provider Name
        /// </summary>
        public readonly string ServiceProviderName;
        /// <summary>
        /// Whether Social JIT Provisioning is enabled
        /// </summary>
        public readonly bool SocialJitProvisioningEnabled;
        /// <summary>
        /// Status
        /// </summary>
        public readonly string Status;

        [OutputConstructor]
        private GetDomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionsocialIdentityProviderResult(
            string accessTokenUrl,

            bool accountLinkingEnabled,

            ImmutableArray<string> adminScopes,

            string authzUrl,

            bool autoRedirectEnabled,

            bool clientCredentialInPayload,

            int clockSkewInSeconds,

            string consumerKey,

            string consumerSecret,

            string discoveryUrl,

            string idAttribute,

            ImmutableArray<Outputs.GetDomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionsocialIdentityProviderJitProvAssignedGroupResult> jitProvAssignedGroups,

            bool jitProvGroupStaticListEnabled,

            string profileUrl,

            string redirectUrl,

            bool registrationEnabled,

            ImmutableArray<string> scopes,

            string serviceProviderName,

            bool socialJitProvisioningEnabled,

            string status)
        {
            AccessTokenUrl = accessTokenUrl;
            AccountLinkingEnabled = accountLinkingEnabled;
            AdminScopes = adminScopes;
            AuthzUrl = authzUrl;
            AutoRedirectEnabled = autoRedirectEnabled;
            ClientCredentialInPayload = clientCredentialInPayload;
            ClockSkewInSeconds = clockSkewInSeconds;
            ConsumerKey = consumerKey;
            ConsumerSecret = consumerSecret;
            DiscoveryUrl = discoveryUrl;
            IdAttribute = idAttribute;
            JitProvAssignedGroups = jitProvAssignedGroups;
            JitProvGroupStaticListEnabled = jitProvGroupStaticListEnabled;
            ProfileUrl = profileUrl;
            RedirectUrl = redirectUrl;
            RegistrationEnabled = registrationEnabled;
            Scopes = scopes;
            ServiceProviderName = serviceProviderName;
            SocialJitProvisioningEnabled = socialJitProvisioningEnabled;
            Status = status;
        }
    }
}
