// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Identity.Outputs
{

    [OutputType]
    public sealed class GetDomainsMyUserDbCredentialsMyUserDbCredentialResult
    {
        /// <summary>
        /// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
        /// </summary>
        public readonly string? Authorization;
        /// <summary>
        /// Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
        /// </summary>
        public readonly string? CompartmentOcid;
        /// <summary>
        /// The user's database password.
        /// </summary>
        public readonly string? DbPassword;
        /// <summary>
        /// A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
        /// </summary>
        public readonly bool? DeleteInProgress;
        /// <summary>
        /// Description
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
        /// </summary>
        public readonly string? DomainOcid;
        /// <summary>
        /// Indicates that the database password has expired.
        /// </summary>
        public readonly bool? Expired;
        /// <summary>
        /// When the user credential expires.
        /// </summary>
        public readonly string? ExpiresOn;
        /// <summary>
        /// Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The User or App who created the Resource
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsMyUserDbCredentialsMyUserDbCredentialIdcsCreatedByResult> IdcsCreatedBies;
        /// <summary>
        /// The basic endpoint for the identity domain
        /// </summary>
        public readonly string? IdcsEndpoint;
        /// <summary>
        /// The User or App who modified the Resource
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsMyUserDbCredentialsMyUserDbCredentialIdcsLastModifiedByResult> IdcsLastModifiedBies;
        /// <summary>
        /// The release number when the resource was upgraded.
        /// </summary>
        public readonly string? IdcsLastUpgradedInRelease;
        /// <summary>
        /// Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
        /// </summary>
        public readonly ImmutableArray<string> IdcsPreventedOperations;
        /// <summary>
        /// A DateTime that specifies the date and time when the current database password was set.
        /// </summary>
        public readonly string? LastSetDate;
        /// <summary>
        /// A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsMyUserDbCredentialsMyUserDbCredentialMetaResult> Metas;
        /// <summary>
        /// The user's database password with mixed salt.
        /// </summary>
        public readonly string? MixedDbPassword;
        /// <summary>
        /// The mixed salt of the password.
        /// </summary>
        public readonly string? MixedSalt;
        /// <summary>
        /// The username.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The user's OCID.
        /// </summary>
        public readonly string? Ocid;
        /// <summary>
        /// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
        /// </summary>
        public readonly string? ResourceTypeSchemaVersion;
        /// <summary>
        /// The salt of the password.
        /// </summary>
        public readonly string? Salt;
        /// <summary>
        /// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
        /// </summary>
        public readonly ImmutableArray<string> Schemas;
        /// <summary>
        /// User credential status
        /// </summary>
        public readonly string? Status;
        /// <summary>
        /// A list of tags on this resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsMyUserDbCredentialsMyUserDbCredentialTagResult> Tags;
        /// <summary>
        /// Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
        /// </summary>
        public readonly string? TenancyOcid;
        /// <summary>
        /// The user linked to the database credential.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsMyUserDbCredentialsMyUserDbCredentialUserResult> Users;

        [OutputConstructor]
        private GetDomainsMyUserDbCredentialsMyUserDbCredentialResult(
            string? authorization,

            string? compartmentOcid,

            string? dbPassword,

            bool? deleteInProgress,

            string? description,

            string? domainOcid,

            bool? expired,

            string? expiresOn,

            string? id,

            ImmutableArray<Outputs.GetDomainsMyUserDbCredentialsMyUserDbCredentialIdcsCreatedByResult> idcsCreatedBies,

            string? idcsEndpoint,

            ImmutableArray<Outputs.GetDomainsMyUserDbCredentialsMyUserDbCredentialIdcsLastModifiedByResult> idcsLastModifiedBies,

            string? idcsLastUpgradedInRelease,

            ImmutableArray<string> idcsPreventedOperations,

            string? lastSetDate,

            ImmutableArray<Outputs.GetDomainsMyUserDbCredentialsMyUserDbCredentialMetaResult> metas,

            string? mixedDbPassword,

            string? mixedSalt,

            string? name,

            string? ocid,

            string? resourceTypeSchemaVersion,

            string? salt,

            ImmutableArray<string> schemas,

            string? status,

            ImmutableArray<Outputs.GetDomainsMyUserDbCredentialsMyUserDbCredentialTagResult> tags,

            string? tenancyOcid,

            ImmutableArray<Outputs.GetDomainsMyUserDbCredentialsMyUserDbCredentialUserResult> users)
        {
            Authorization = authorization;
            CompartmentOcid = compartmentOcid;
            DbPassword = dbPassword;
            DeleteInProgress = deleteInProgress;
            Description = description;
            DomainOcid = domainOcid;
            Expired = expired;
            ExpiresOn = expiresOn;
            Id = id;
            IdcsCreatedBies = idcsCreatedBies;
            IdcsEndpoint = idcsEndpoint;
            IdcsLastModifiedBies = idcsLastModifiedBies;
            IdcsLastUpgradedInRelease = idcsLastUpgradedInRelease;
            IdcsPreventedOperations = idcsPreventedOperations;
            LastSetDate = lastSetDate;
            Metas = metas;
            MixedDbPassword = mixedDbPassword;
            MixedSalt = mixedSalt;
            Name = name;
            Ocid = ocid;
            ResourceTypeSchemaVersion = resourceTypeSchemaVersion;
            Salt = salt;
            Schemas = schemas;
            Status = status;
            Tags = tags;
            TenancyOcid = tenancyOcid;
            Users = users;
        }
    }
}
