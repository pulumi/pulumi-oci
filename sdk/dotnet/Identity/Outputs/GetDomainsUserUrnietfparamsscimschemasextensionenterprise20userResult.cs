// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Identity.Outputs
{

    [OutputType]
    public sealed class GetDomainsUserUrnietfparamsscimschemasextensionenterprise20userResult
    {
        /// <summary>
        /// Identifies the name of a cost center.
        /// </summary>
        public readonly string? CostCenter;
        /// <summary>
        /// Identifies the name of a department.
        /// </summary>
        public readonly string? Department;
        /// <summary>
        /// Identifies the name of a division.
        /// </summary>
        public readonly string? Division;
        /// <summary>
        /// Numeric or alphanumeric identifier assigned to  a person, typically based on order of hire or association with an organization.
        /// </summary>
        public readonly string? EmployeeNumber;
        /// <summary>
        /// The User's manager. A complex type that optionally allows Service Providers to represent organizational hierarchy by referencing the 'id' attribute of another User.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsUserUrnietfparamsscimschemasextensionenterprise20userManagerResult> Managers;
        /// <summary>
        /// Identifies the name of an organization.
        /// </summary>
        public readonly string? Organization;

        [OutputConstructor]
        private GetDomainsUserUrnietfparamsscimschemasextensionenterprise20userResult(
            string? costCenter,

            string? department,

            string? division,

            string? employeeNumber,

            ImmutableArray<Outputs.GetDomainsUserUrnietfparamsscimschemasextensionenterprise20userManagerResult> managers,

            string? organization)
        {
            CostCenter = costCenter;
            Department = department;
            Division = division;
            EmployeeNumber = employeeNumber;
            Managers = managers;
            Organization = organization;
        }
    }
}
