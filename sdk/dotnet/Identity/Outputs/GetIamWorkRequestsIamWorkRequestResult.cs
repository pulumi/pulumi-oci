// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Identity.Outputs
{

    [OutputType]
    public sealed class GetIamWorkRequestsIamWorkRequestResult
    {
        /// <summary>
        /// The OCID of the compartment (remember that the tenancy is simply the root compartment).
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The OCID of the work request.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The asynchronous operation tracked by this IAM work request.
        /// </summary>
        public readonly string OperationType;
        /// <summary>
        /// How much progress the operation has made.
        /// </summary>
        public readonly double PercentComplete;
        /// <summary>
        /// The resources this work request affects.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetIamWorkRequestsIamWorkRequestResourceResult> Resources;
        /// <summary>
        /// Status of the work request
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Date and time the work was accepted, in the format defined by RFC3339. Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        public readonly string TimeAccepted;
        /// <summary>
        /// Date and time the work completed, in the format defined by RFC3339. Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        public readonly string TimeFinished;
        /// <summary>
        /// Date and time the work started, in the format defined by RFC3339. Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        public readonly string TimeStarted;

        [OutputConstructor]
        private GetIamWorkRequestsIamWorkRequestResult(
            string compartmentId,

            string id,

            string operationType,

            double percentComplete,

            ImmutableArray<Outputs.GetIamWorkRequestsIamWorkRequestResourceResult> resources,

            string status,

            string timeAccepted,

            string timeFinished,

            string timeStarted)
        {
            CompartmentId = compartmentId;
            Id = id;
            OperationType = operationType;
            PercentComplete = percentComplete;
            Resources = resources;
            Status = status;
            TimeAccepted = timeAccepted;
            TimeFinished = timeFinished;
            TimeStarted = timeStarted;
        }
    }
}
