// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Identity.Outputs
{

    [OutputType]
    public sealed class GetIdentityProvidersIdentityProviderResult
    {
        /// <summary>
        /// The OCID of the compartment (remember that the tenancy is simply the root compartment).
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// The description you assign to the `IdentityProvider` during creation. Does not have to be unique, and it's changeable.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Extra name value pairs associated with this identity provider. Example: `{"clientId": "app_sf3kdjf3"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformAttributes;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// The OCID of the `IdentityProvider`.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The detailed status of INACTIVE lifecycleState.
        /// </summary>
        public readonly string InactiveState;
        /// <summary>
        /// The XML that contains the information required for federating Identity with SAML2 Identity Provider.
        /// </summary>
        public readonly string Metadata;
        /// <summary>
        /// The URL for retrieving the identity provider's metadata, which contains information required for federating.
        /// </summary>
        public readonly string MetadataUrl;
        /// <summary>
        /// A filter to only return resources that match the given name exactly.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The identity provider service or product. Supported identity providers are Oracle Identity Cloud Service (IDCS) and Microsoft Active Directory Federation Services (ADFS).
        /// </summary>
        public readonly string ProductType;
        /// <summary>
        /// The protocol used for federation.
        /// </summary>
        public readonly string Protocol;
        /// <summary>
        /// The URL to redirect federated users to for authentication with the identity provider.
        /// </summary>
        public readonly string RedirectUrl;
        /// <summary>
        /// The identity provider's signing certificate used by the IAM Service to validate the SAML2 token.
        /// </summary>
        public readonly string SigningCertificate;
        /// <summary>
        /// A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Date and time the `IdentityProvider` was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        public readonly string TimeCreated;

        [OutputConstructor]
        private GetIdentityProvidersIdentityProviderResult(
            string compartmentId,

            ImmutableDictionary<string, object> definedTags,

            string description,

            ImmutableDictionary<string, object> freeformAttributes,

            ImmutableDictionary<string, object> freeformTags,

            string id,

            string inactiveState,

            string metadata,

            string metadataUrl,

            string name,

            string productType,

            string protocol,

            string redirectUrl,

            string signingCertificate,

            string state,

            string timeCreated)
        {
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            Description = description;
            FreeformAttributes = freeformAttributes;
            FreeformTags = freeformTags;
            Id = id;
            InactiveState = inactiveState;
            Metadata = metadata;
            MetadataUrl = metadataUrl;
            Name = name;
            ProductType = productType;
            Protocol = protocol;
            RedirectUrl = redirectUrl;
            SigningCertificate = signingCertificate;
            State = state;
            TimeCreated = timeCreated;
        }
    }
}
