// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Identity.Outputs
{

    [OutputType]
    public sealed class GetUsersUserResult
    {
        /// <summary>
        /// Properties indicating how the user is allowed to authenticate.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetUsersUserCapabilityResult> Capabilities;
        /// <summary>
        /// The OCID of the compartment (remember that the tenancy is simply the root compartment).
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// DB username of the DB credential. Has to be unique across the tenancy.
        /// </summary>
        public readonly string DbUserName;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// The description you assign to the user. Does not have to be unique, and it's changeable.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The email address you assign to the user. The email address must be unique across all users in the tenancy.
        /// </summary>
        public readonly string Email;
        /// <summary>
        /// Whether the email address has been validated.
        /// </summary>
        public readonly bool EmailVerified;
        /// <summary>
        /// The id of a user in the identity provider.
        /// </summary>
        public readonly string ExternalIdentifier;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// The OCID of the user.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The id of the identity provider.
        /// </summary>
        public readonly string IdentityProviderId;
        /// <summary>
        /// Returned only if the user's `lifecycleState` is INACTIVE. A 16-bit value showing the reason why the user is inactive:
        /// * bit 0: SUSPENDED (reserved for future use)
        /// * bit 1: DISABLED (reserved for future use)
        /// * bit 2: BLOCKED (the user has exceeded the maximum number of failed login attempts for the Console)
        /// </summary>
        public readonly string InactiveState;
        /// <summary>
        /// The date and time of when the user most recently logged in the format defined by RFC3339 (ex. `2016-08-25T21:10:29.600Z`). If there is no login history, this field is null.
        /// </summary>
        public readonly string LastSuccessfulLoginTime;
        /// <summary>
        /// A filter to only return resources that match the given name exactly.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The date and time of when the user most recently logged in the format defined by RFC3339 (ex. `2016-08-25T21:10:29.600Z`). If there is no login history, this field is null.
        /// </summary>
        public readonly string PreviousSuccessfulLoginTime;
        /// <summary>
        /// A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Date and time the user was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        public readonly string TimeCreated;

        [OutputConstructor]
        private GetUsersUserResult(
            ImmutableArray<Outputs.GetUsersUserCapabilityResult> capabilities,

            string compartmentId,

            string dbUserName,

            ImmutableDictionary<string, object> definedTags,

            string description,

            string email,

            bool emailVerified,

            string externalIdentifier,

            ImmutableDictionary<string, object> freeformTags,

            string id,

            string identityProviderId,

            string inactiveState,

            string lastSuccessfulLoginTime,

            string name,

            string previousSuccessfulLoginTime,

            string state,

            string timeCreated)
        {
            Capabilities = capabilities;
            CompartmentId = compartmentId;
            DbUserName = dbUserName;
            DefinedTags = definedTags;
            Description = description;
            Email = email;
            EmailVerified = emailVerified;
            ExternalIdentifier = externalIdentifier;
            FreeformTags = freeformTags;
            Id = id;
            IdentityProviderId = identityProviderId;
            InactiveState = inactiveState;
            LastSuccessfulLoginTime = lastSuccessfulLoginTime;
            Name = name;
            PreviousSuccessfulLoginTime = previousSuccessfulLoginTime;
            State = state;
            TimeCreated = timeCreated;
        }
    }
}
