// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Identity
{
    /// <summary>
    /// This resource provides the Tag Default resource in Oracle Cloud Infrastructure Identity service.
    /// 
    /// Creates a new tag default in the specified compartment for the specified tag definition.
    /// 
    /// If you specify that a value is required, a value is set during resource creation (either by
    /// the user creating the resource or another tag defualt). If no value is set, resource creation
    /// is blocked.
    /// 
    /// * If the `isRequired` flag is set to "true", the value is set during resource creation.
    /// * If the `isRequired` flag is set to "false", the value you enter is set during resource creation.
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testTagDefault = new Oci.Identity.TagDefault("test_tag_default", new()
    ///     {
    ///         CompartmentId = compartmentId,
    ///         TagDefinitionId = testTagDefinition.Id,
    ///         Value = tagDefaultValue,
    ///         IsRequired = tagDefaultIsRequired,
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// TagDefaults can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:Identity/tagDefault:TagDefault test_tag_default "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:Identity/tagDefault:TagDefault")]
    public partial class TagDefault : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The OCID of the compartment. The tag default will be applied to all new resources created in this compartment.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) If you specify that a value is required, a value is set during resource creation (either by the user creating the resource or another tag defualt). If no value is set, resource creation is blocked.
        /// * If the `isRequired` flag is set to "true", the value is set during resource creation.
        /// * If the `isRequired` flag is set to "false", the value you enter is set during resource creation.
        /// 
        /// Example: `false`
        /// </summary>
        [Output("isRequired")]
        public Output<bool> IsRequired { get; private set; } = null!;

        /// <summary>
        /// The tag default's current state. After creating a `TagDefault`, make sure its `lifecycleState` is ACTIVE before using it.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The OCID of the tag definition. The tag default will always assign a default value for this tag definition.
        /// </summary>
        [Output("tagDefinitionId")]
        public Output<string> TagDefinitionId { get; private set; } = null!;

        /// <summary>
        /// The name used in the tag definition. This field is informational in the context of the tag default.
        /// </summary>
        [Output("tagDefinitionName")]
        public Output<string> TagDefinitionName { get; private set; } = null!;

        /// <summary>
        /// The OCID of the tag namespace that contains the tag definition.
        /// </summary>
        [Output("tagNamespaceId")]
        public Output<string> TagNamespaceId { get; private set; } = null!;

        /// <summary>
        /// Date and time the `TagDefault` object was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The default value for the tag definition. This will be applied to all new resources created in the compartment. 
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("value")]
        public Output<string> Value { get; private set; } = null!;


        /// <summary>
        /// Create a TagDefault resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TagDefault(string name, TagDefaultArgs args, CustomResourceOptions? options = null)
            : base("oci:Identity/tagDefault:TagDefault", name, args ?? new TagDefaultArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TagDefault(string name, Input<string> id, TagDefaultState? state = null, CustomResourceOptions? options = null)
            : base("oci:Identity/tagDefault:TagDefault", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TagDefault resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TagDefault Get(string name, Input<string> id, TagDefaultState? state = null, CustomResourceOptions? options = null)
        {
            return new TagDefault(name, id, state, options);
        }
    }

    public sealed class TagDefaultArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The OCID of the compartment. The tag default will be applied to all new resources created in this compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// (Updatable) If you specify that a value is required, a value is set during resource creation (either by the user creating the resource or another tag defualt). If no value is set, resource creation is blocked.
        /// * If the `isRequired` flag is set to "true", the value is set during resource creation.
        /// * If the `isRequired` flag is set to "false", the value you enter is set during resource creation.
        /// 
        /// Example: `false`
        /// </summary>
        [Input("isRequired")]
        public Input<bool>? IsRequired { get; set; }

        /// <summary>
        /// The OCID of the tag definition. The tag default will always assign a default value for this tag definition.
        /// </summary>
        [Input("tagDefinitionId", required: true)]
        public Input<string> TagDefinitionId { get; set; } = null!;

        /// <summary>
        /// (Updatable) The default value for the tag definition. This will be applied to all new resources created in the compartment. 
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("value", required: true)]
        public Input<string> Value { get; set; } = null!;

        public TagDefaultArgs()
        {
        }
        public static new TagDefaultArgs Empty => new TagDefaultArgs();
    }

    public sealed class TagDefaultState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The OCID of the compartment. The tag default will be applied to all new resources created in this compartment.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// (Updatable) If you specify that a value is required, a value is set during resource creation (either by the user creating the resource or another tag defualt). If no value is set, resource creation is blocked.
        /// * If the `isRequired` flag is set to "true", the value is set during resource creation.
        /// * If the `isRequired` flag is set to "false", the value you enter is set during resource creation.
        /// 
        /// Example: `false`
        /// </summary>
        [Input("isRequired")]
        public Input<bool>? IsRequired { get; set; }

        /// <summary>
        /// The tag default's current state. After creating a `TagDefault`, make sure its `lifecycleState` is ACTIVE before using it.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The OCID of the tag definition. The tag default will always assign a default value for this tag definition.
        /// </summary>
        [Input("tagDefinitionId")]
        public Input<string>? TagDefinitionId { get; set; }

        /// <summary>
        /// The name used in the tag definition. This field is informational in the context of the tag default.
        /// </summary>
        [Input("tagDefinitionName")]
        public Input<string>? TagDefinitionName { get; set; }

        /// <summary>
        /// The OCID of the tag namespace that contains the tag definition.
        /// </summary>
        [Input("tagNamespaceId")]
        public Input<string>? TagNamespaceId { get; set; }

        /// <summary>
        /// Date and time the `TagDefault` object was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// (Updatable) The default value for the tag definition. This will be applied to all new resources created in the compartment. 
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("value")]
        public Input<string>? Value { get; set; }

        public TagDefaultState()
        {
        }
        public static new TagDefaultState Empty => new TagDefaultState();
    }
}
