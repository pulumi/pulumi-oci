// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Identity
{
    /// <summary>
    /// This resource provides the Ui Password resource in Oracle Cloud Infrastructure Identity service.
    /// 
    /// Creates a new Console one-time password for the specified user. For more information about user
    /// credentials, see [User Credentials](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/usercredentials.htm).
    /// 
    /// Use this operation after creating a new user, or if a user forgets their password. The new one-time
    /// password is returned to you in the response, and you must securely deliver it to the user. They'll
    /// be prompted to change this password the next time they sign in to the Console. If they don't change
    /// it within 7 days, the password will expire and you'll need to create a new one-time password for the
    /// user.
    /// 
    /// **Note:** The user's Console login is the unique name you specified when you created the user
    /// (see [CreateUser](https://docs.cloud.oracle.com/iaas/api/#/en/identity/20160918/User/CreateUser)).
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testUiPassword = new Oci.Identity.UiPassword("testUiPassword", new()
    ///     {
    ///         UserId = oci_identity_user.Test_user.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Import is not supported for this resource.
    /// </summary>
    [OciResourceType("oci:Identity/uiPassword:UiPassword")]
    public partial class UiPassword : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The detailed status of INACTIVE lifecycleState.
        /// </summary>
        [Output("inactiveStatus")]
        public Output<string> InactiveStatus { get; private set; } = null!;

        /// <summary>
        /// The user's password for the Console.
        /// </summary>
        [Output("password")]
        public Output<string> Password { get; private set; } = null!;

        /// <summary>
        /// The password's current state.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// Date and time the password was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The OCID of the user.
        /// </summary>
        [Output("userId")]
        public Output<string> UserId { get; private set; } = null!;


        /// <summary>
        /// Create a UiPassword resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public UiPassword(string name, UiPasswordArgs args, CustomResourceOptions? options = null)
            : base("oci:Identity/uiPassword:UiPassword", name, args ?? new UiPasswordArgs(), MakeResourceOptions(options, ""))
        {
        }

        private UiPassword(string name, Input<string> id, UiPasswordState? state = null, CustomResourceOptions? options = null)
            : base("oci:Identity/uiPassword:UiPassword", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing UiPassword resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static UiPassword Get(string name, Input<string> id, UiPasswordState? state = null, CustomResourceOptions? options = null)
        {
            return new UiPassword(name, id, state, options);
        }
    }

    public sealed class UiPasswordArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The OCID of the user.
        /// </summary>
        [Input("userId", required: true)]
        public Input<string> UserId { get; set; } = null!;

        public UiPasswordArgs()
        {
        }
        public static new UiPasswordArgs Empty => new UiPasswordArgs();
    }

    public sealed class UiPasswordState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The detailed status of INACTIVE lifecycleState.
        /// </summary>
        [Input("inactiveStatus")]
        public Input<string>? InactiveStatus { get; set; }

        /// <summary>
        /// The user's password for the Console.
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        /// <summary>
        /// The password's current state.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// Date and time the password was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The OCID of the user.
        /// </summary>
        [Input("userId")]
        public Input<string>? UserId { get; set; }

        public UiPasswordState()
        {
        }
        public static new UiPasswordState Empty => new UiPasswordState();
    }
}
