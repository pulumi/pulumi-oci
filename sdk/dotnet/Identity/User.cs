// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Identity
{
    /// <summary>
    /// This resource provides the User resource in Oracle Cloud Infrastructure Identity service.
    /// 
    /// Creates a new user in your tenancy. For conceptual information about users, your tenancy, and other
    /// IAM Service components, see [Overview of the IAM Service](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/overview.htm).
    /// 
    /// You must specify your tenancy's OCID as the compartment ID in the request object (remember that the
    /// tenancy is simply the root compartment). Notice that IAM resources (users, groups, compartments, and
    /// some policies) reside within the tenancy itself, unlike cloud resources such as compute instances,
    /// which typically reside within compartments inside the tenancy. For information about OCIDs, see
    /// [Resource Identifiers](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
    /// 
    /// You must also specify a *name* for the user, which must be unique across all users in your tenancy
    /// and cannot be changed. Allowed characters: No spaces. Only letters, numerals, hyphens, periods,
    /// underscores, +, and @. If you specify a name that's already in use, you'll get a 409 error.
    /// This name will be the user's login to the Console. You might want to pick a
    /// name that your company's own identity system (e.g., Active Directory, LDAP, etc.) already uses.
    /// If you delete a user and then create a new user with the same name, they'll be considered different
    /// users because they have different OCIDs.
    /// 
    /// You must also specify a *description* for the user (although it can be an empty string).
    /// It does not have to be unique, and you can change it anytime with
    /// [UpdateUser](https://docs.cloud.oracle.com/iaas/api/#/en/identity/20160918/User/UpdateUser). You can use the field to provide the user's
    /// full name, a description, a nickname, or other information to generally identify the user.
    /// A new user has no permissions until you place the user in one or more groups (see
    /// [AddUserToGroup](https://docs.cloud.oracle.com/iaas/api/#/en/identity/20160918/UserGroupMembership/AddUserToGroup)). If the user needs to
    /// access the Console, you need to provide the user a password (see
    /// [CreateOrResetUIPassword](https://docs.cloud.oracle.com/iaas/api/#/en/identity/20160918/UIPassword/CreateOrResetUIPassword)).
    /// If the user needs to access the Oracle Cloud Infrastructure REST API, you need to upload a
    /// public API signing key for that user (see
    /// [Required Keys and OCIDs](https://docs.cloud.oracle.com/iaas/Content/API/Concepts/apisigningkey.htm) and also
    /// [UploadApiKey](https://docs.cloud.oracle.com/iaas/api/#/en/identity/20160918/ApiKey/UploadApiKey)).
    /// 
    /// **Important:** Make sure to inform the new user which compartment(s) they have access to.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testUser = new Oci.Identity.User("testUser", new()
    ///     {
    ///         CompartmentId = @var.Tenancy_ocid,
    ///         Description = @var.User_description,
    ///         DefinedTags = 
    ///         {
    ///             { "Operations.CostCenter", "42" },
    ///         },
    ///         Email = @var.User_email,
    ///         FreeformTags = 
    ///         {
    ///             { "Department", "Finance" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Users can be imported using the `id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import oci:Identity/user:User test_user "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:Identity/user:User")]
    public partial class User : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Properties indicating how the user is allowed to authenticate.
        /// </summary>
        [Output("capabilities")]
        public Output<ImmutableArray<Outputs.UserCapability>> Capabilities { get; private set; } = null!;

        /// <summary>
        /// The OCID of the tenancy containing the user.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// DB username of the DB credential. Has to be unique across the tenancy.
        /// </summary>
        [Output("dbUserName")]
        public Output<string> DbUserName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, object>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The description you assign to the user during creation. Does not have to be unique, and it's changeable.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The email you assign to the user. Has to be unique across the tenancy.
        /// </summary>
        [Output("email")]
        public Output<string> Email { get; private set; } = null!;

        /// <summary>
        /// Whether the email address has been validated.
        /// </summary>
        [Output("emailVerified")]
        public Output<bool> EmailVerified { get; private set; } = null!;

        /// <summary>
        /// Identifier of the user in the identity provider
        /// </summary>
        [Output("externalIdentifier")]
        public Output<string> ExternalIdentifier { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, object>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// The OCID of the `IdentityProvider` this user belongs to.
        /// </summary>
        [Output("identityProviderId")]
        public Output<string> IdentityProviderId { get; private set; } = null!;

        /// <summary>
        /// Returned only if the user's `lifecycleState` is INACTIVE. A 16-bit value showing the reason why the user is inactive:
        /// * bit 0: SUSPENDED (reserved for future use)
        /// * bit 1: DISABLED (reserved for future use)
        /// * bit 2: BLOCKED (the user has exceeded the maximum number of failed login attempts for the Console)
        /// </summary>
        [Output("inactiveState")]
        public Output<string> InactiveState { get; private set; } = null!;

        /// <summary>
        /// The date and time of when the user most recently logged in the format defined by RFC3339 (ex. `2016-08-25T21:10:29.600Z`). If there is no login history, this field is null.
        /// </summary>
        [Output("lastSuccessfulLoginTime")]
        public Output<string> LastSuccessfulLoginTime { get; private set; } = null!;

        /// <summary>
        /// The name you assign to the user during creation. This is the user's login for the Console. The name must be unique across all users in the tenancy and cannot be changed.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The date and time of when the user most recently logged in the format defined by RFC3339 (ex. `2016-08-25T21:10:29.600Z`). If there is no login history, this field is null.
        /// </summary>
        [Output("previousSuccessfulLoginTime")]
        public Output<string> PreviousSuccessfulLoginTime { get; private set; } = null!;

        /// <summary>
        /// The user's current state.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// Date and time the user was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;


        /// <summary>
        /// Create a User resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public User(string name, UserArgs args, CustomResourceOptions? options = null)
            : base("oci:Identity/user:User", name, args ?? new UserArgs(), MakeResourceOptions(options, ""))
        {
        }

        private User(string name, Input<string> id, UserState? state = null, CustomResourceOptions? options = null)
            : base("oci:Identity/user:User", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing User resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static User Get(string name, Input<string> id, UserState? state = null, CustomResourceOptions? options = null)
        {
            return new User(name, id, state, options);
        }
    }

    public sealed class UserArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The OCID of the tenancy containing the user.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) The description you assign to the user during creation. Does not have to be unique, and it's changeable.
        /// </summary>
        [Input("description", required: true)]
        public Input<string> Description { get; set; } = null!;

        /// <summary>
        /// (Updatable) The email you assign to the user. Has to be unique across the tenancy.
        /// </summary>
        [Input("email")]
        public Input<string>? Email { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// The name you assign to the user during creation. This is the user's login for the Console. The name must be unique across all users in the tenancy and cannot be changed.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public UserArgs()
        {
        }
        public static new UserArgs Empty => new UserArgs();
    }

    public sealed class UserState : global::Pulumi.ResourceArgs
    {
        [Input("capabilities")]
        private InputList<Inputs.UserCapabilityGetArgs>? _capabilities;

        /// <summary>
        /// Properties indicating how the user is allowed to authenticate.
        /// </summary>
        public InputList<Inputs.UserCapabilityGetArgs> Capabilities
        {
            get => _capabilities ?? (_capabilities = new InputList<Inputs.UserCapabilityGetArgs>());
            set => _capabilities = value;
        }

        /// <summary>
        /// The OCID of the tenancy containing the user.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// DB username of the DB credential. Has to be unique across the tenancy.
        /// </summary>
        [Input("dbUserName")]
        public Input<string>? DbUserName { get; set; }

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) The description you assign to the user during creation. Does not have to be unique, and it's changeable.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) The email you assign to the user. Has to be unique across the tenancy.
        /// </summary>
        [Input("email")]
        public Input<string>? Email { get; set; }

        /// <summary>
        /// Whether the email address has been validated.
        /// </summary>
        [Input("emailVerified")]
        public Input<bool>? EmailVerified { get; set; }

        /// <summary>
        /// Identifier of the user in the identity provider
        /// </summary>
        [Input("externalIdentifier")]
        public Input<string>? ExternalIdentifier { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// The OCID of the `IdentityProvider` this user belongs to.
        /// </summary>
        [Input("identityProviderId")]
        public Input<string>? IdentityProviderId { get; set; }

        /// <summary>
        /// Returned only if the user's `lifecycleState` is INACTIVE. A 16-bit value showing the reason why the user is inactive:
        /// * bit 0: SUSPENDED (reserved for future use)
        /// * bit 1: DISABLED (reserved for future use)
        /// * bit 2: BLOCKED (the user has exceeded the maximum number of failed login attempts for the Console)
        /// </summary>
        [Input("inactiveState")]
        public Input<string>? InactiveState { get; set; }

        /// <summary>
        /// The date and time of when the user most recently logged in the format defined by RFC3339 (ex. `2016-08-25T21:10:29.600Z`). If there is no login history, this field is null.
        /// </summary>
        [Input("lastSuccessfulLoginTime")]
        public Input<string>? LastSuccessfulLoginTime { get; set; }

        /// <summary>
        /// The name you assign to the user during creation. This is the user's login for the Console. The name must be unique across all users in the tenancy and cannot be changed.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The date and time of when the user most recently logged in the format defined by RFC3339 (ex. `2016-08-25T21:10:29.600Z`). If there is no login history, this field is null.
        /// </summary>
        [Input("previousSuccessfulLoginTime")]
        public Input<string>? PreviousSuccessfulLoginTime { get; set; }

        /// <summary>
        /// The user's current state.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// Date and time the user was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        public UserState()
        {
        }
        public static new UserState Empty => new UserState();
    }
}
