// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Jms
{
    public static class GetAgentInstallers
    {
        /// <summary>
        /// This data source provides the list of Agent Installers in Oracle Cloud Infrastructure Jms service.
        /// 
        /// Returns a list of the agent installer information.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAgentInstallers = Oci.Jms.GetAgentInstallers.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         FleetId = testFleet.Id,
        ///         OsFamily = agentInstallerOsFamily,
        ///         PlatformArchitecture = agentInstallerPlatformArchitecture,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetAgentInstallersResult> InvokeAsync(GetAgentInstallersArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAgentInstallersResult>("oci:Jms/getAgentInstallers:getAgentInstallers", args ?? new GetAgentInstallersArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Agent Installers in Oracle Cloud Infrastructure Jms service.
        /// 
        /// Returns a list of the agent installer information.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAgentInstallers = Oci.Jms.GetAgentInstallers.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         FleetId = testFleet.Id,
        ///         OsFamily = agentInstallerOsFamily,
        ///         PlatformArchitecture = agentInstallerPlatformArchitecture,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAgentInstallersResult> Invoke(GetAgentInstallersInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAgentInstallersResult>("oci:Jms/getAgentInstallers:getAgentInstallers", args ?? new GetAgentInstallersInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Agent Installers in Oracle Cloud Infrastructure Jms service.
        /// 
        /// Returns a list of the agent installer information.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAgentInstallers = Oci.Jms.GetAgentInstallers.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         FleetId = testFleet.Id,
        ///         OsFamily = agentInstallerOsFamily,
        ///         PlatformArchitecture = agentInstallerPlatformArchitecture,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAgentInstallersResult> Invoke(GetAgentInstallersInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAgentInstallersResult>("oci:Jms/getAgentInstallers:getAgentInstallers", args ?? new GetAgentInstallersInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAgentInstallersArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        [Input("filters")]
        private List<Inputs.GetAgentInstallersFilterArgs>? _filters;
        public List<Inputs.GetAgentInstallersFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetAgentInstallersFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The ID of the Fleet.
        /// </summary>
        [Input("fleetId")]
        public string? FleetId { get; set; }

        /// <summary>
        /// The OS family for the agent installer.
        /// </summary>
        [Input("osFamily")]
        public string? OsFamily { get; set; }

        /// <summary>
        /// The platform architecture for the agent installer.
        /// </summary>
        [Input("platformArchitecture")]
        public string? PlatformArchitecture { get; set; }

        public GetAgentInstallersArgs()
        {
        }
        public static new GetAgentInstallersArgs Empty => new GetAgentInstallersArgs();
    }

    public sealed class GetAgentInstallersInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetAgentInstallersFilterInputArgs>? _filters;
        public InputList<Inputs.GetAgentInstallersFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetAgentInstallersFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The ID of the Fleet.
        /// </summary>
        [Input("fleetId")]
        public Input<string>? FleetId { get; set; }

        /// <summary>
        /// The OS family for the agent installer.
        /// </summary>
        [Input("osFamily")]
        public Input<string>? OsFamily { get; set; }

        /// <summary>
        /// The platform architecture for the agent installer.
        /// </summary>
        [Input("platformArchitecture")]
        public Input<string>? PlatformArchitecture { get; set; }

        public GetAgentInstallersInvokeArgs()
        {
        }
        public static new GetAgentInstallersInvokeArgs Empty => new GetAgentInstallersInvokeArgs();
    }


    [OutputType]
    public sealed class GetAgentInstallersResult
    {
        /// <summary>
        /// The list of agent_installer_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAgentInstallersAgentInstallerCollectionResult> AgentInstallerCollections;
        public readonly string? CompartmentId;
        public readonly ImmutableArray<Outputs.GetAgentInstallersFilterResult> Filters;
        public readonly string? FleetId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The target operating system family for the agent installer.
        /// </summary>
        public readonly string? OsFamily;
        /// <summary>
        /// The target operating system architecture for the installer.
        /// </summary>
        public readonly string? PlatformArchitecture;

        [OutputConstructor]
        private GetAgentInstallersResult(
            ImmutableArray<Outputs.GetAgentInstallersAgentInstallerCollectionResult> agentInstallerCollections,

            string? compartmentId,

            ImmutableArray<Outputs.GetAgentInstallersFilterResult> filters,

            string? fleetId,

            string id,

            string? osFamily,

            string? platformArchitecture)
        {
            AgentInstallerCollections = agentInstallerCollections;
            CompartmentId = compartmentId;
            Filters = filters;
            FleetId = fleetId;
            Id = id;
            OsFamily = osFamily;
            PlatformArchitecture = platformArchitecture;
        }
    }
}
