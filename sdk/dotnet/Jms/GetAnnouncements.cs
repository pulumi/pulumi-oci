// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Jms
{
    public static class GetAnnouncements
    {
        /// <summary>
        /// This data source provides the list of Announcements in Oracle Cloud Infrastructure Jms service.
        /// 
        /// Return a list of AnnouncementSummary items
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAnnouncements = Oci.Jms.GetAnnouncements.Invoke(new()
        ///     {
        ///         SummaryContains = announcementSummaryContains,
        ///         TimeEnd = announcementTimeEnd,
        ///         TimeStart = announcementTimeStart,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetAnnouncementsResult> InvokeAsync(GetAnnouncementsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAnnouncementsResult>("oci:Jms/getAnnouncements:getAnnouncements", args ?? new GetAnnouncementsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Announcements in Oracle Cloud Infrastructure Jms service.
        /// 
        /// Return a list of AnnouncementSummary items
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAnnouncements = Oci.Jms.GetAnnouncements.Invoke(new()
        ///     {
        ///         SummaryContains = announcementSummaryContains,
        ///         TimeEnd = announcementTimeEnd,
        ///         TimeStart = announcementTimeStart,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAnnouncementsResult> Invoke(GetAnnouncementsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAnnouncementsResult>("oci:Jms/getAnnouncements:getAnnouncements", args ?? new GetAnnouncementsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Announcements in Oracle Cloud Infrastructure Jms service.
        /// 
        /// Return a list of AnnouncementSummary items
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAnnouncements = Oci.Jms.GetAnnouncements.Invoke(new()
        ///     {
        ///         SummaryContains = announcementSummaryContains,
        ///         TimeEnd = announcementTimeEnd,
        ///         TimeStart = announcementTimeStart,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAnnouncementsResult> Invoke(GetAnnouncementsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAnnouncementsResult>("oci:Jms/getAnnouncements:getAnnouncements", args ?? new GetAnnouncementsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAnnouncementsArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetAnnouncementsFilterArgs>? _filters;
        public List<Inputs.GetAnnouncementsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetAnnouncementsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Filter the list with summary contains the given value.
        /// </summary>
        [Input("summaryContains")]
        public string? SummaryContains { get; set; }

        /// <summary>
        /// The end of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        /// </summary>
        [Input("timeEnd")]
        public string? TimeEnd { get; set; }

        /// <summary>
        /// The start of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        /// </summary>
        [Input("timeStart")]
        public string? TimeStart { get; set; }

        public GetAnnouncementsArgs()
        {
        }
        public static new GetAnnouncementsArgs Empty => new GetAnnouncementsArgs();
    }

    public sealed class GetAnnouncementsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetAnnouncementsFilterInputArgs>? _filters;
        public InputList<Inputs.GetAnnouncementsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetAnnouncementsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Filter the list with summary contains the given value.
        /// </summary>
        [Input("summaryContains")]
        public Input<string>? SummaryContains { get; set; }

        /// <summary>
        /// The end of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        /// </summary>
        [Input("timeEnd")]
        public Input<string>? TimeEnd { get; set; }

        /// <summary>
        /// The start of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        /// </summary>
        [Input("timeStart")]
        public Input<string>? TimeStart { get; set; }

        public GetAnnouncementsInvokeArgs()
        {
        }
        public static new GetAnnouncementsInvokeArgs Empty => new GetAnnouncementsInvokeArgs();
    }


    [OutputType]
    public sealed class GetAnnouncementsResult
    {
        /// <summary>
        /// The list of announcement_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAnnouncementsAnnouncementCollectionResult> AnnouncementCollections;
        public readonly ImmutableArray<Outputs.GetAnnouncementsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? SummaryContains;
        public readonly string? TimeEnd;
        public readonly string? TimeStart;

        [OutputConstructor]
        private GetAnnouncementsResult(
            ImmutableArray<Outputs.GetAnnouncementsAnnouncementCollectionResult> announcementCollections,

            ImmutableArray<Outputs.GetAnnouncementsFilterResult> filters,

            string id,

            string? summaryContains,

            string? timeEnd,

            string? timeStart)
        {
            AnnouncementCollections = announcementCollections;
            Filters = filters;
            Id = id;
            SummaryContains = summaryContains;
            TimeEnd = timeEnd;
            TimeStart = timeStart;
        }
    }
}
