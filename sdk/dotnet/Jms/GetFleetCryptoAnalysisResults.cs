// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Jms
{
    public static class GetFleetCryptoAnalysisResults
    {
        /// <summary>
        /// This data source provides the list of Fleet Crypto Analysis Results in Oracle Cloud Infrastructure Jms service.
        /// 
        /// Lists the results of a Crypto event analysis.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testFleetCryptoAnalysisResults = Oci.Jms.GetFleetCryptoAnalysisResults.Invoke(new()
        ///     {
        ///         FleetId = testFleet.Id,
        ///         AggregationMode = fleetCryptoAnalysisResultAggregationMode,
        ///         FindingCount = fleetCryptoAnalysisResultFindingCount,
        ///         FindingCountGreaterThan = fleetCryptoAnalysisResultFindingCountGreaterThan,
        ///         HostName = fleetCryptoAnalysisResultHostName,
        ///         ManagedInstanceId = fleetCryptoAnalysisResultManagedInstanceOcid,
        ///         NonCompliantFindingCount = fleetCryptoAnalysisResultNonCompliantFindingCount,
        ///         NonCompliantFindingCountGreaterThan = fleetCryptoAnalysisResultNonCompliantFindingCountGreaterThan,
        ///         TimeEnd = fleetCryptoAnalysisResultTimeEnd,
        ///         TimeStart = fleetCryptoAnalysisResultTimeStart,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetFleetCryptoAnalysisResultsResult> InvokeAsync(GetFleetCryptoAnalysisResultsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFleetCryptoAnalysisResultsResult>("oci:Jms/getFleetCryptoAnalysisResults:getFleetCryptoAnalysisResults", args ?? new GetFleetCryptoAnalysisResultsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Fleet Crypto Analysis Results in Oracle Cloud Infrastructure Jms service.
        /// 
        /// Lists the results of a Crypto event analysis.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testFleetCryptoAnalysisResults = Oci.Jms.GetFleetCryptoAnalysisResults.Invoke(new()
        ///     {
        ///         FleetId = testFleet.Id,
        ///         AggregationMode = fleetCryptoAnalysisResultAggregationMode,
        ///         FindingCount = fleetCryptoAnalysisResultFindingCount,
        ///         FindingCountGreaterThan = fleetCryptoAnalysisResultFindingCountGreaterThan,
        ///         HostName = fleetCryptoAnalysisResultHostName,
        ///         ManagedInstanceId = fleetCryptoAnalysisResultManagedInstanceOcid,
        ///         NonCompliantFindingCount = fleetCryptoAnalysisResultNonCompliantFindingCount,
        ///         NonCompliantFindingCountGreaterThan = fleetCryptoAnalysisResultNonCompliantFindingCountGreaterThan,
        ///         TimeEnd = fleetCryptoAnalysisResultTimeEnd,
        ///         TimeStart = fleetCryptoAnalysisResultTimeStart,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetFleetCryptoAnalysisResultsResult> Invoke(GetFleetCryptoAnalysisResultsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFleetCryptoAnalysisResultsResult>("oci:Jms/getFleetCryptoAnalysisResults:getFleetCryptoAnalysisResults", args ?? new GetFleetCryptoAnalysisResultsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Fleet Crypto Analysis Results in Oracle Cloud Infrastructure Jms service.
        /// 
        /// Lists the results of a Crypto event analysis.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testFleetCryptoAnalysisResults = Oci.Jms.GetFleetCryptoAnalysisResults.Invoke(new()
        ///     {
        ///         FleetId = testFleet.Id,
        ///         AggregationMode = fleetCryptoAnalysisResultAggregationMode,
        ///         FindingCount = fleetCryptoAnalysisResultFindingCount,
        ///         FindingCountGreaterThan = fleetCryptoAnalysisResultFindingCountGreaterThan,
        ///         HostName = fleetCryptoAnalysisResultHostName,
        ///         ManagedInstanceId = fleetCryptoAnalysisResultManagedInstanceOcid,
        ///         NonCompliantFindingCount = fleetCryptoAnalysisResultNonCompliantFindingCount,
        ///         NonCompliantFindingCountGreaterThan = fleetCryptoAnalysisResultNonCompliantFindingCountGreaterThan,
        ///         TimeEnd = fleetCryptoAnalysisResultTimeEnd,
        ///         TimeStart = fleetCryptoAnalysisResultTimeStart,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetFleetCryptoAnalysisResultsResult> Invoke(GetFleetCryptoAnalysisResultsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetFleetCryptoAnalysisResultsResult>("oci:Jms/getFleetCryptoAnalysisResults:getFleetCryptoAnalysisResults", args ?? new GetFleetCryptoAnalysisResultsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFleetCryptoAnalysisResultsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The aggregation mode of the crypto event analysis result.
        /// </summary>
        [Input("aggregationMode")]
        public string? AggregationMode { get; set; }

        [Input("filters")]
        private List<Inputs.GetFleetCryptoAnalysisResultsFilterArgs>? _filters;
        public List<Inputs.GetFleetCryptoAnalysisResultsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetFleetCryptoAnalysisResultsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// FindingCount of CryptoAnalysis Report.
        /// </summary>
        [Input("findingCount")]
        public int? FindingCount { get; set; }

        /// <summary>
        /// FindingCount of CryptoAnalysis Report.
        /// </summary>
        [Input("findingCountGreaterThan")]
        public int? FindingCountGreaterThan { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
        /// </summary>
        [Input("fleetId", required: true)]
        public string FleetId { get; set; } = null!;

        /// <summary>
        /// The host [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance.
        /// </summary>
        [Input("hostName")]
        public string? HostName { get; set; }

        /// <summary>
        /// The Fleet-unique identifier of the related managed instance.
        /// </summary>
        [Input("managedInstanceId")]
        public string? ManagedInstanceId { get; set; }

        /// <summary>
        /// Non Compliant Finding Count of CryptoAnalysis Report.
        /// </summary>
        [Input("nonCompliantFindingCount")]
        public int? NonCompliantFindingCount { get; set; }

        /// <summary>
        /// Non Compliant Finding Count of CryptoAnalysis Report.
        /// </summary>
        [Input("nonCompliantFindingCountGreaterThan")]
        public int? NonCompliantFindingCountGreaterThan { get; set; }

        /// <summary>
        /// The end of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        /// </summary>
        [Input("timeEnd")]
        public string? TimeEnd { get; set; }

        /// <summary>
        /// The start of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        /// </summary>
        [Input("timeStart")]
        public string? TimeStart { get; set; }

        public GetFleetCryptoAnalysisResultsArgs()
        {
        }
        public static new GetFleetCryptoAnalysisResultsArgs Empty => new GetFleetCryptoAnalysisResultsArgs();
    }

    public sealed class GetFleetCryptoAnalysisResultsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The aggregation mode of the crypto event analysis result.
        /// </summary>
        [Input("aggregationMode")]
        public Input<string>? AggregationMode { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetFleetCryptoAnalysisResultsFilterInputArgs>? _filters;
        public InputList<Inputs.GetFleetCryptoAnalysisResultsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetFleetCryptoAnalysisResultsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// FindingCount of CryptoAnalysis Report.
        /// </summary>
        [Input("findingCount")]
        public Input<int>? FindingCount { get; set; }

        /// <summary>
        /// FindingCount of CryptoAnalysis Report.
        /// </summary>
        [Input("findingCountGreaterThan")]
        public Input<int>? FindingCountGreaterThan { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
        /// </summary>
        [Input("fleetId", required: true)]
        public Input<string> FleetId { get; set; } = null!;

        /// <summary>
        /// The host [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance.
        /// </summary>
        [Input("hostName")]
        public Input<string>? HostName { get; set; }

        /// <summary>
        /// The Fleet-unique identifier of the related managed instance.
        /// </summary>
        [Input("managedInstanceId")]
        public Input<string>? ManagedInstanceId { get; set; }

        /// <summary>
        /// Non Compliant Finding Count of CryptoAnalysis Report.
        /// </summary>
        [Input("nonCompliantFindingCount")]
        public Input<int>? NonCompliantFindingCount { get; set; }

        /// <summary>
        /// Non Compliant Finding Count of CryptoAnalysis Report.
        /// </summary>
        [Input("nonCompliantFindingCountGreaterThan")]
        public Input<int>? NonCompliantFindingCountGreaterThan { get; set; }

        /// <summary>
        /// The end of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        /// </summary>
        [Input("timeEnd")]
        public Input<string>? TimeEnd { get; set; }

        /// <summary>
        /// The start of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        /// </summary>
        [Input("timeStart")]
        public Input<string>? TimeStart { get; set; }

        public GetFleetCryptoAnalysisResultsInvokeArgs()
        {
        }
        public static new GetFleetCryptoAnalysisResultsInvokeArgs Empty => new GetFleetCryptoAnalysisResultsInvokeArgs();
    }


    [OutputType]
    public sealed class GetFleetCryptoAnalysisResultsResult
    {
        /// <summary>
        /// The result aggregation mode
        /// </summary>
        public readonly string? AggregationMode;
        /// <summary>
        /// The list of crypto_analysis_result_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFleetCryptoAnalysisResultsCryptoAnalysisResultCollectionResult> CryptoAnalysisResultCollections;
        public readonly ImmutableArray<Outputs.GetFleetCryptoAnalysisResultsFilterResult> Filters;
        /// <summary>
        /// Total number of findings with the analysis.
        /// </summary>
        public readonly int? FindingCount;
        public readonly int? FindingCountGreaterThan;
        /// <summary>
        /// The fleet OCID.
        /// </summary>
        public readonly string FleetId;
        /// <summary>
        /// The hostname of the managed instance.
        /// </summary>
        public readonly string? HostName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The managed instance OCID.
        /// </summary>
        public readonly string? ManagedInstanceId;
        /// <summary>
        /// Total number of non-compliant findings with the analysis. A non-compliant finding means the application won't work properly with the changes introduced by the Crypto Roadmap version used by the analysis.
        /// </summary>
        public readonly int? NonCompliantFindingCount;
        public readonly int? NonCompliantFindingCountGreaterThan;
        public readonly string? TimeEnd;
        public readonly string? TimeStart;

        [OutputConstructor]
        private GetFleetCryptoAnalysisResultsResult(
            string? aggregationMode,

            ImmutableArray<Outputs.GetFleetCryptoAnalysisResultsCryptoAnalysisResultCollectionResult> cryptoAnalysisResultCollections,

            ImmutableArray<Outputs.GetFleetCryptoAnalysisResultsFilterResult> filters,

            int? findingCount,

            int? findingCountGreaterThan,

            string fleetId,

            string? hostName,

            string id,

            string? managedInstanceId,

            int? nonCompliantFindingCount,

            int? nonCompliantFindingCountGreaterThan,

            string? timeEnd,

            string? timeStart)
        {
            AggregationMode = aggregationMode;
            CryptoAnalysisResultCollections = cryptoAnalysisResultCollections;
            Filters = filters;
            FindingCount = findingCount;
            FindingCountGreaterThan = findingCountGreaterThan;
            FleetId = fleetId;
            HostName = hostName;
            Id = id;
            ManagedInstanceId = managedInstanceId;
            NonCompliantFindingCount = nonCompliantFindingCount;
            NonCompliantFindingCountGreaterThan = nonCompliantFindingCountGreaterThan;
            TimeEnd = timeEnd;
            TimeStart = timeStart;
        }
    }
}
