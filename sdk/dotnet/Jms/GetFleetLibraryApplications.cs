// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Jms
{
    public static class GetFleetLibraryApplications
    {
        /// <summary>
        /// This data source provides the list of Fleet Library Applications in Oracle Cloud Infrastructure Jms service.
        /// 
        /// List applications where a library has been detected filtered by query parameters.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testFleetLibraryApplications = Oci.Jms.GetFleetLibraryApplications.Invoke(new()
        ///     {
        ///         FleetId = testFleet.Id,
        ///         LibraryKey = fleetLibraryApplicationLibraryKey,
        ///         ApplicationId = testApplication.Id,
        ///         ApplicationName = testApplication.Name,
        ///         ApplicationNameContains = fleetLibraryApplicationApplicationNameContains,
        ///         ManagedInstanceId = testManagedInstance.Id,
        ///         TimeEnd = fleetLibraryApplicationTimeEnd,
        ///         TimeStart = fleetLibraryApplicationTimeStart,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetFleetLibraryApplicationsResult> InvokeAsync(GetFleetLibraryApplicationsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFleetLibraryApplicationsResult>("oci:Jms/getFleetLibraryApplications:getFleetLibraryApplications", args ?? new GetFleetLibraryApplicationsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Fleet Library Applications in Oracle Cloud Infrastructure Jms service.
        /// 
        /// List applications where a library has been detected filtered by query parameters.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testFleetLibraryApplications = Oci.Jms.GetFleetLibraryApplications.Invoke(new()
        ///     {
        ///         FleetId = testFleet.Id,
        ///         LibraryKey = fleetLibraryApplicationLibraryKey,
        ///         ApplicationId = testApplication.Id,
        ///         ApplicationName = testApplication.Name,
        ///         ApplicationNameContains = fleetLibraryApplicationApplicationNameContains,
        ///         ManagedInstanceId = testManagedInstance.Id,
        ///         TimeEnd = fleetLibraryApplicationTimeEnd,
        ///         TimeStart = fleetLibraryApplicationTimeStart,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetFleetLibraryApplicationsResult> Invoke(GetFleetLibraryApplicationsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFleetLibraryApplicationsResult>("oci:Jms/getFleetLibraryApplications:getFleetLibraryApplications", args ?? new GetFleetLibraryApplicationsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Fleet Library Applications in Oracle Cloud Infrastructure Jms service.
        /// 
        /// List applications where a library has been detected filtered by query parameters.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testFleetLibraryApplications = Oci.Jms.GetFleetLibraryApplications.Invoke(new()
        ///     {
        ///         FleetId = testFleet.Id,
        ///         LibraryKey = fleetLibraryApplicationLibraryKey,
        ///         ApplicationId = testApplication.Id,
        ///         ApplicationName = testApplication.Name,
        ///         ApplicationNameContains = fleetLibraryApplicationApplicationNameContains,
        ///         ManagedInstanceId = testManagedInstance.Id,
        ///         TimeEnd = fleetLibraryApplicationTimeEnd,
        ///         TimeStart = fleetLibraryApplicationTimeStart,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetFleetLibraryApplicationsResult> Invoke(GetFleetLibraryApplicationsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetFleetLibraryApplicationsResult>("oci:Jms/getFleetLibraryApplications:getFleetLibraryApplications", args ?? new GetFleetLibraryApplicationsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFleetLibraryApplicationsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Fleet-unique identifier of the application.
        /// </summary>
        [Input("applicationId")]
        public string? ApplicationId { get; set; }

        /// <summary>
        /// The name of the application.
        /// </summary>
        [Input("applicationName")]
        public string? ApplicationName { get; set; }

        /// <summary>
        /// Filter the list with application name contains the given value.
        /// </summary>
        [Input("applicationNameContains")]
        public string? ApplicationNameContains { get; set; }

        [Input("filters")]
        private List<Inputs.GetFleetLibraryApplicationsFilterArgs>? _filters;
        public List<Inputs.GetFleetLibraryApplicationsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetFleetLibraryApplicationsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
        /// </summary>
        [Input("fleetId", required: true)]
        public string FleetId { get; set; } = null!;

        /// <summary>
        /// The unique identifier of a Java library.
        /// </summary>
        [Input("libraryKey", required: true)]
        public string LibraryKey { get; set; } = null!;

        /// <summary>
        /// The Fleet-unique identifier of the managed instance.
        /// </summary>
        [Input("managedInstanceId")]
        public string? ManagedInstanceId { get; set; }

        /// <summary>
        /// The end of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        /// </summary>
        [Input("timeEnd")]
        public string? TimeEnd { get; set; }

        /// <summary>
        /// The start of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        /// </summary>
        [Input("timeStart")]
        public string? TimeStart { get; set; }

        public GetFleetLibraryApplicationsArgs()
        {
        }
        public static new GetFleetLibraryApplicationsArgs Empty => new GetFleetLibraryApplicationsArgs();
    }

    public sealed class GetFleetLibraryApplicationsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Fleet-unique identifier of the application.
        /// </summary>
        [Input("applicationId")]
        public Input<string>? ApplicationId { get; set; }

        /// <summary>
        /// The name of the application.
        /// </summary>
        [Input("applicationName")]
        public Input<string>? ApplicationName { get; set; }

        /// <summary>
        /// Filter the list with application name contains the given value.
        /// </summary>
        [Input("applicationNameContains")]
        public Input<string>? ApplicationNameContains { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetFleetLibraryApplicationsFilterInputArgs>? _filters;
        public InputList<Inputs.GetFleetLibraryApplicationsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetFleetLibraryApplicationsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
        /// </summary>
        [Input("fleetId", required: true)]
        public Input<string> FleetId { get; set; } = null!;

        /// <summary>
        /// The unique identifier of a Java library.
        /// </summary>
        [Input("libraryKey", required: true)]
        public Input<string> LibraryKey { get; set; } = null!;

        /// <summary>
        /// The Fleet-unique identifier of the managed instance.
        /// </summary>
        [Input("managedInstanceId")]
        public Input<string>? ManagedInstanceId { get; set; }

        /// <summary>
        /// The end of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        /// </summary>
        [Input("timeEnd")]
        public Input<string>? TimeEnd { get; set; }

        /// <summary>
        /// The start of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        /// </summary>
        [Input("timeStart")]
        public Input<string>? TimeStart { get; set; }

        public GetFleetLibraryApplicationsInvokeArgs()
        {
        }
        public static new GetFleetLibraryApplicationsInvokeArgs Empty => new GetFleetLibraryApplicationsInvokeArgs();
    }


    [OutputType]
    public sealed class GetFleetLibraryApplicationsResult
    {
        public readonly string? ApplicationId;
        /// <summary>
        /// The displayed name of the Java application.
        /// </summary>
        public readonly string? ApplicationName;
        public readonly string? ApplicationNameContains;
        public readonly ImmutableArray<Outputs.GetFleetLibraryApplicationsFilterResult> Filters;
        public readonly string FleetId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of library_application_usage_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFleetLibraryApplicationsLibraryApplicationUsageCollectionResult> LibraryApplicationUsageCollections;
        public readonly string LibraryKey;
        public readonly string? ManagedInstanceId;
        public readonly string? TimeEnd;
        public readonly string? TimeStart;

        [OutputConstructor]
        private GetFleetLibraryApplicationsResult(
            string? applicationId,

            string? applicationName,

            string? applicationNameContains,

            ImmutableArray<Outputs.GetFleetLibraryApplicationsFilterResult> filters,

            string fleetId,

            string id,

            ImmutableArray<Outputs.GetFleetLibraryApplicationsLibraryApplicationUsageCollectionResult> libraryApplicationUsageCollections,

            string libraryKey,

            string? managedInstanceId,

            string? timeEnd,

            string? timeStart)
        {
            ApplicationId = applicationId;
            ApplicationName = applicationName;
            ApplicationNameContains = applicationNameContains;
            Filters = filters;
            FleetId = fleetId;
            Id = id;
            LibraryApplicationUsageCollections = libraryApplicationUsageCollections;
            LibraryKey = libraryKey;
            ManagedInstanceId = managedInstanceId;
            TimeEnd = timeEnd;
            TimeStart = timeStart;
        }
    }
}
