// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Jms
{
    public static class GetFleetSummarizeLibraryInventory
    {
        public static Task<GetFleetSummarizeLibraryInventoryResult> InvokeAsync(GetFleetSummarizeLibraryInventoryArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFleetSummarizeLibraryInventoryResult>("oci:Jms/getFleetSummarizeLibraryInventory:getFleetSummarizeLibraryInventory", args ?? new GetFleetSummarizeLibraryInventoryArgs(), options.WithDefaults());

        public static Output<GetFleetSummarizeLibraryInventoryResult> Invoke(GetFleetSummarizeLibraryInventoryInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFleetSummarizeLibraryInventoryResult>("oci:Jms/getFleetSummarizeLibraryInventory:getFleetSummarizeLibraryInventory", args ?? new GetFleetSummarizeLibraryInventoryInvokeArgs(), options.WithDefaults());

        public static Output<GetFleetSummarizeLibraryInventoryResult> Invoke(GetFleetSummarizeLibraryInventoryInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetFleetSummarizeLibraryInventoryResult>("oci:Jms/getFleetSummarizeLibraryInventory:getFleetSummarizeLibraryInventory", args ?? new GetFleetSummarizeLibraryInventoryInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFleetSummarizeLibraryInventoryArgs : global::Pulumi.InvokeArgs
    {
        [Input("applicationId")]
        public string? ApplicationId { get; set; }

        [Input("fleetId")]
        public string? FleetId { get; set; }

        [Input("managedInstanceId")]
        public string? ManagedInstanceId { get; set; }

        [Input("timeEnd")]
        public string? TimeEnd { get; set; }

        [Input("timeStart")]
        public string? TimeStart { get; set; }

        public GetFleetSummarizeLibraryInventoryArgs()
        {
        }
        public static new GetFleetSummarizeLibraryInventoryArgs Empty => new GetFleetSummarizeLibraryInventoryArgs();
    }

    public sealed class GetFleetSummarizeLibraryInventoryInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("applicationId")]
        public Input<string>? ApplicationId { get; set; }

        [Input("fleetId")]
        public Input<string>? FleetId { get; set; }

        [Input("managedInstanceId")]
        public Input<string>? ManagedInstanceId { get; set; }

        [Input("timeEnd")]
        public Input<string>? TimeEnd { get; set; }

        [Input("timeStart")]
        public Input<string>? TimeStart { get; set; }

        public GetFleetSummarizeLibraryInventoryInvokeArgs()
        {
        }
        public static new GetFleetSummarizeLibraryInventoryInvokeArgs Empty => new GetFleetSummarizeLibraryInventoryInvokeArgs();
    }


    [OutputType]
    public sealed class GetFleetSummarizeLibraryInventoryResult
    {
        public readonly string? ApplicationId;
        public readonly int DynamicallyDetectedLibraryCount;
        public readonly string? FleetId;
        public readonly int HighSeverityLibraryCount;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly int LowSeverityLibraryCount;
        public readonly string? ManagedInstanceId;
        public readonly int MediumSeverityLibraryCount;
        public readonly int StaticallyDetectedLibraryCount;
        public readonly string? TimeEnd;
        public readonly string? TimeStart;
        public readonly int UncorrelatedPackageCount;

        [OutputConstructor]
        private GetFleetSummarizeLibraryInventoryResult(
            string? applicationId,

            int dynamicallyDetectedLibraryCount,

            string? fleetId,

            int highSeverityLibraryCount,

            string id,

            int lowSeverityLibraryCount,

            string? managedInstanceId,

            int mediumSeverityLibraryCount,

            int staticallyDetectedLibraryCount,

            string? timeEnd,

            string? timeStart,

            int uncorrelatedPackageCount)
        {
            ApplicationId = applicationId;
            DynamicallyDetectedLibraryCount = dynamicallyDetectedLibraryCount;
            FleetId = fleetId;
            HighSeverityLibraryCount = highSeverityLibraryCount;
            Id = id;
            LowSeverityLibraryCount = lowSeverityLibraryCount;
            ManagedInstanceId = managedInstanceId;
            MediumSeverityLibraryCount = mediumSeverityLibraryCount;
            StaticallyDetectedLibraryCount = staticallyDetectedLibraryCount;
            TimeEnd = timeEnd;
            TimeStart = timeStart;
            UncorrelatedPackageCount = uncorrelatedPackageCount;
        }
    }
}
