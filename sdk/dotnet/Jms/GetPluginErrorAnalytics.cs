// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Jms
{
    public static class GetPluginErrorAnalytics
    {
        /// <summary>
        /// This data source provides the list of Plugin Error Analytics in Oracle Cloud Infrastructure Jms service.
        /// 
        /// Returns a high level summary of PluginErrors.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testPluginErrorAnalytics = Oci.Jms.GetPluginErrorAnalytics.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         CompartmentIdInSubtree = pluginErrorAnalyticCompartmentIdInSubtree,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetPluginErrorAnalyticsResult> InvokeAsync(GetPluginErrorAnalyticsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPluginErrorAnalyticsResult>("oci:Jms/getPluginErrorAnalytics:getPluginErrorAnalytics", args ?? new GetPluginErrorAnalyticsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Plugin Error Analytics in Oracle Cloud Infrastructure Jms service.
        /// 
        /// Returns a high level summary of PluginErrors.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testPluginErrorAnalytics = Oci.Jms.GetPluginErrorAnalytics.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         CompartmentIdInSubtree = pluginErrorAnalyticCompartmentIdInSubtree,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetPluginErrorAnalyticsResult> Invoke(GetPluginErrorAnalyticsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPluginErrorAnalyticsResult>("oci:Jms/getPluginErrorAnalytics:getPluginErrorAnalytics", args ?? new GetPluginErrorAnalyticsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Plugin Error Analytics in Oracle Cloud Infrastructure Jms service.
        /// 
        /// Returns a high level summary of PluginErrors.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testPluginErrorAnalytics = Oci.Jms.GetPluginErrorAnalytics.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         CompartmentIdInSubtree = pluginErrorAnalyticCompartmentIdInSubtree,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetPluginErrorAnalyticsResult> Invoke(GetPluginErrorAnalyticsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetPluginErrorAnalyticsResult>("oci:Jms/getPluginErrorAnalytics:getPluginErrorAnalytics", args ?? new GetPluginErrorAnalyticsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPluginErrorAnalyticsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        /// <summary>
        /// Flag to determine whether the info should be gathered only in the compartment or in the compartment and its subcompartments.
        /// </summary>
        [Input("compartmentIdInSubtree")]
        public bool? CompartmentIdInSubtree { get; set; }

        [Input("filters")]
        private List<Inputs.GetPluginErrorAnalyticsFilterArgs>? _filters;
        public List<Inputs.GetPluginErrorAnalyticsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetPluginErrorAnalyticsFilterArgs>());
            set => _filters = value;
        }

        public GetPluginErrorAnalyticsArgs()
        {
        }
        public static new GetPluginErrorAnalyticsArgs Empty => new GetPluginErrorAnalyticsArgs();
    }

    public sealed class GetPluginErrorAnalyticsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// Flag to determine whether the info should be gathered only in the compartment or in the compartment and its subcompartments.
        /// </summary>
        [Input("compartmentIdInSubtree")]
        public Input<bool>? CompartmentIdInSubtree { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetPluginErrorAnalyticsFilterInputArgs>? _filters;
        public InputList<Inputs.GetPluginErrorAnalyticsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetPluginErrorAnalyticsFilterInputArgs>());
            set => _filters = value;
        }

        public GetPluginErrorAnalyticsInvokeArgs()
        {
        }
        public static new GetPluginErrorAnalyticsInvokeArgs Empty => new GetPluginErrorAnalyticsInvokeArgs();
    }


    [OutputType]
    public sealed class GetPluginErrorAnalyticsResult
    {
        public readonly string? CompartmentId;
        public readonly bool? CompartmentIdInSubtree;
        public readonly ImmutableArray<Outputs.GetPluginErrorAnalyticsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of plugin_error_aggregation_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPluginErrorAnalyticsPluginErrorAggregationCollectionResult> PluginErrorAggregationCollections;

        [OutputConstructor]
        private GetPluginErrorAnalyticsResult(
            string? compartmentId,

            bool? compartmentIdInSubtree,

            ImmutableArray<Outputs.GetPluginErrorAnalyticsFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetPluginErrorAnalyticsPluginErrorAggregationCollectionResult> pluginErrorAggregationCollections)
        {
            CompartmentId = compartmentId;
            CompartmentIdInSubtree = compartmentIdInSubtree;
            Filters = filters;
            Id = id;
            PluginErrorAggregationCollections = pluginErrorAggregationCollections;
        }
    }
}
