// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Jms
{
    public static class GetTaskSchedule
    {
        /// <summary>
        /// This data source provides details about a specific Task Schedule resource in Oracle Cloud Infrastructure Jms service.
        /// 
        /// Returns a task schedule.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testTaskSchedule = Oci.Jms.GetTaskSchedule.Invoke(new()
        ///     {
        ///         TaskScheduleId = testTaskScheduleOciJmsTaskSchedule.Id,
        ///         FleetId = testFleet.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetTaskScheduleResult> InvokeAsync(GetTaskScheduleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTaskScheduleResult>("oci:Jms/getTaskSchedule:getTaskSchedule", args ?? new GetTaskScheduleArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Task Schedule resource in Oracle Cloud Infrastructure Jms service.
        /// 
        /// Returns a task schedule.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testTaskSchedule = Oci.Jms.GetTaskSchedule.Invoke(new()
        ///     {
        ///         TaskScheduleId = testTaskScheduleOciJmsTaskSchedule.Id,
        ///         FleetId = testFleet.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetTaskScheduleResult> Invoke(GetTaskScheduleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTaskScheduleResult>("oci:Jms/getTaskSchedule:getTaskSchedule", args ?? new GetTaskScheduleInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Task Schedule resource in Oracle Cloud Infrastructure Jms service.
        /// 
        /// Returns a task schedule.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testTaskSchedule = Oci.Jms.GetTaskSchedule.Invoke(new()
        ///     {
        ///         TaskScheduleId = testTaskScheduleOciJmsTaskSchedule.Id,
        ///         FleetId = testFleet.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetTaskScheduleResult> Invoke(GetTaskScheduleInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetTaskScheduleResult>("oci:Jms/getTaskSchedule:getTaskSchedule", args ?? new GetTaskScheduleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTaskScheduleArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Fleet.
        /// </summary>
        [Input("fleetId")]
        public string? FleetId { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) to identify this task schedule.
        /// </summary>
        [Input("taskScheduleId", required: true)]
        public string TaskScheduleId { get; set; } = null!;

        public GetTaskScheduleArgs()
        {
        }
        public static new GetTaskScheduleArgs Empty => new GetTaskScheduleArgs();
    }

    public sealed class GetTaskScheduleInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Fleet.
        /// </summary>
        [Input("fleetId")]
        public Input<string>? FleetId { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) to identify this task schedule.
        /// </summary>
        [Input("taskScheduleId", required: true)]
        public Input<string> TaskScheduleId { get; set; } = null!;

        public GetTaskScheduleInvokeArgs()
        {
        }
        public static new GetTaskScheduleInvokeArgs Empty => new GetTaskScheduleInvokeArgs();
    }


    [OutputType]
    public sealed class GetTaskScheduleResult
    {
        /// <summary>
        /// Name of the task creator.
        /// </summary>
        public readonly string CreatedBy;
        /// <summary>
        /// Recurrence specification for the task schedule execution (formatted according to [RFC-5545](https://icalendar.org/RFC-Specifications/iCalendar-RFC-5545/)). To run daily for 10 occurrences starts on September 2, 2024 09:00 EDT, it should be 'DTSTART;TZID=America/New_York:20240902T090000 RRULE:FREQ=DAILY;COUNT=10'. To run every 3 hours from 9:00 AM to 5:00 PM on August 5, 2024 EDT, it should be 'DTSTART;TZID=America/New_York:20240805T090000 RRULE:FREQ=HOURLY;INTERVAL=3;UNTIL=20240805T170000Z'.
        /// </summary>
        public readonly string ExecutionRecurrences;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
        /// </summary>
        public readonly string? FleetId;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) to identify this task schedule.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the task schedule.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// All possible status of task schedule.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The minimum details of a task.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTaskScheduleTaskDetailResult> TaskDetails;
        public readonly string TaskScheduleId;
        /// <summary>
        /// The date and time the task schedule was created (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The date and time the task schedule ran last (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        /// </summary>
        public readonly string TimeLastRun;
        /// <summary>
        /// The date and time the task schedule was last updated (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        /// </summary>
        public readonly string TimeLastUpdated;
        /// <summary>
        /// The date and time the task schedule will run next (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        /// </summary>
        public readonly string TimeNextRun;

        [OutputConstructor]
        private GetTaskScheduleResult(
            string createdBy,

            string executionRecurrences,

            string? fleetId,

            string id,

            string name,

            string state,

            ImmutableArray<Outputs.GetTaskScheduleTaskDetailResult> taskDetails,

            string taskScheduleId,

            string timeCreated,

            string timeLastRun,

            string timeLastUpdated,

            string timeNextRun)
        {
            CreatedBy = createdBy;
            ExecutionRecurrences = executionRecurrences;
            FleetId = fleetId;
            Id = id;
            Name = name;
            State = state;
            TaskDetails = taskDetails;
            TaskScheduleId = taskScheduleId;
            TimeCreated = timeCreated;
            TimeLastRun = timeLastRun;
            TimeLastUpdated = timeLastUpdated;
            TimeNextRun = timeNextRun;
        }
    }
}
