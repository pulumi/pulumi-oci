// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Jms.Outputs
{

    [OutputType]
    public sealed class GetFleetCryptoAnalysisResultsCryptoAnalysisResultCollectionItemResult
    {
        /// <summary>
        /// The aggregation mode of the crypto event analysis result.
        /// </summary>
        public readonly string AggregationMode;
        /// <summary>
        /// The Object Storage bucket name of this analysis result.
        /// </summary>
        public readonly string Bucket;
        /// <summary>
        /// The Crypto Roadmap version used to perform the analysis.
        /// </summary>
        public readonly string CryptoRoadmapVersion;
        /// <summary>
        /// Total number of findings with the analysis.
        /// </summary>
        public readonly int FindingCount;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
        /// </summary>
        public readonly string FleetId;
        /// <summary>
        /// The hostname of the managed instance.
        /// </summary>
        public readonly string HostName;
        /// <summary>
        /// The OCID to identify this analysis results.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The Fleet-unique identifier of the related managed instance.
        /// </summary>
        public readonly string ManagedInstanceId;
        /// <summary>
        /// The Object Storage namespace of this analysis result.
        /// </summary>
        public readonly string Namespace;
        /// <summary>
        /// Total number of non-compliant findings with the analysis. A non-compliant finding means the application won't work properly with the changes introduced by the crypto roadmap version used the the analysis.
        /// </summary>
        public readonly int NonCompliantFindingCount;
        /// <summary>
        /// The Object Storage object name of this analysis result.
        /// </summary>
        public readonly string Object;
        /// <summary>
        /// Total number of summarized events. Summarized events are deduplicated events of interest.
        /// </summary>
        public readonly int SummarizedEventCount;
        /// <summary>
        /// The time the result is compiled.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// Time of the first event in the analysis.
        /// </summary>
        public readonly string TimeFirstEvent;
        /// <summary>
        /// Time of the last event in the analysis.
        /// </summary>
        public readonly string TimeLastEvent;
        /// <summary>
        /// Total number of events in the analysis.
        /// </summary>
        public readonly int TotalEventCount;
        /// <summary>
        /// The OCID of the work request to start the analysis.
        /// </summary>
        public readonly string WorkRequestId;

        [OutputConstructor]
        private GetFleetCryptoAnalysisResultsCryptoAnalysisResultCollectionItemResult(
            string aggregationMode,

            string bucket,

            string cryptoRoadmapVersion,

            int findingCount,

            string fleetId,

            string hostName,

            string id,

            string managedInstanceId,

            string @namespace,

            int nonCompliantFindingCount,

            string @object,

            int summarizedEventCount,

            string timeCreated,

            string timeFirstEvent,

            string timeLastEvent,

            int totalEventCount,

            string workRequestId)
        {
            AggregationMode = aggregationMode;
            Bucket = bucket;
            CryptoRoadmapVersion = cryptoRoadmapVersion;
            FindingCount = findingCount;
            FleetId = fleetId;
            HostName = hostName;
            Id = id;
            ManagedInstanceId = managedInstanceId;
            Namespace = @namespace;
            NonCompliantFindingCount = nonCompliantFindingCount;
            Object = @object;
            SummarizedEventCount = summarizedEventCount;
            TimeCreated = timeCreated;
            TimeFirstEvent = timeFirstEvent;
            TimeLastEvent = timeLastEvent;
            TotalEventCount = totalEventCount;
            WorkRequestId = workRequestId;
        }
    }
}
