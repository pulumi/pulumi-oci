// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Jms.Outputs
{

    [OutputType]
    public sealed class GetTaskSchedulesTaskScheduleCollectionItemResult
    {
        /// <summary>
        /// Name of the task creator.
        /// </summary>
        public readonly string CreatedBy;
        /// <summary>
        /// Recurrence specification for the task schedule execution (formatted according to [RFC-5545](https://icalendar.org/RFC-Specifications/iCalendar-RFC-5545/)). To run daily for 10 occurrences starts on September 2, 2024 09:00 EDT, it should be 'DTSTART;TZID=America/New_York:20240902T090000 RRULE:FREQ=DAILY;COUNT=10'. To run every 3 hours from 9:00 AM to 5:00 PM on August 5, 2024 EDT, it should be 'DTSTART;TZID=America/New_York:20240805T090000 RRULE:FREQ=HOURLY;INTERVAL=3;UNTIL=20240805T170000Z'.
        /// </summary>
        public readonly string ExecutionRecurrences;
        /// <summary>
        /// The ID of the Fleet.
        /// </summary>
        public readonly string FleetId;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) to identify this task schedule.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The task name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// All possible status of task schedule.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The minimum details of a task.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTaskSchedulesTaskScheduleCollectionItemTaskDetailResult> TaskDetails;
        /// <summary>
        /// The date and time the task schedule was created (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The date and time the task schedule ran last (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        /// </summary>
        public readonly string TimeLastRun;
        /// <summary>
        /// The date and time the task schedule was last updated (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        /// </summary>
        public readonly string TimeLastUpdated;
        /// <summary>
        /// The date and time the task schedule will run next (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        /// </summary>
        public readonly string TimeNextRun;

        [OutputConstructor]
        private GetTaskSchedulesTaskScheduleCollectionItemResult(
            string createdBy,

            string executionRecurrences,

            string fleetId,

            string id,

            string name,

            string state,

            ImmutableArray<Outputs.GetTaskSchedulesTaskScheduleCollectionItemTaskDetailResult> taskDetails,

            string timeCreated,

            string timeLastRun,

            string timeLastUpdated,

            string timeNextRun)
        {
            CreatedBy = createdBy;
            ExecutionRecurrences = executionRecurrences;
            FleetId = fleetId;
            Id = id;
            Name = name;
            State = state;
            TaskDetails = taskDetails;
            TimeCreated = timeCreated;
            TimeLastRun = timeLastRun;
            TimeLastUpdated = timeLastUpdated;
            TimeNextRun = timeNextRun;
        }
    }
}
