// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Jms
{
    /// <summary>
    /// This resource provides the Task Schedule resource in Oracle Cloud Infrastructure Jms service.
    /// 
    /// Create a task schedule using the information provided.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testTaskSchedule = new Oci.Jms.TaskSchedule("test_task_schedule", new()
    ///     {
    ///         ExecutionRecurrences = taskScheduleExecutionRecurrences,
    ///         FleetId = testFleet.Id,
    ///         TaskDetails = new Oci.Jms.Inputs.TaskScheduleTaskDetailsArgs
    ///         {
    ///             TaskType = taskScheduleTaskDetailsTaskType,
    ///             AddInstallationSiteTaskRequest = new Oci.Jms.Inputs.TaskScheduleTaskDetailsAddInstallationSiteTaskRequestArgs
    ///             {
    ///                 InstallationSites = new[]
    ///                 {
    ///                     new Oci.Jms.Inputs.TaskScheduleTaskDetailsAddInstallationSiteTaskRequestInstallationSiteArgs
    ///                     {
    ///                         ArtifactContentType = taskScheduleTaskDetailsAddInstallationSiteTaskRequestInstallationSitesArtifactContentType,
    ///                         ForceInstall = taskScheduleTaskDetailsAddInstallationSiteTaskRequestInstallationSitesForceInstall,
    ///                         HeadlessMode = taskScheduleTaskDetailsAddInstallationSiteTaskRequestInstallationSitesHeadlessMode,
    ///                         InstallationPath = taskScheduleTaskDetailsAddInstallationSiteTaskRequestInstallationSitesInstallationPath,
    ///                         ManagedInstanceId = testManagedInstance.Id,
    ///                         ReleaseVersion = taskScheduleTaskDetailsAddInstallationSiteTaskRequestInstallationSitesReleaseVersion,
    ///                     },
    ///                 },
    ///                 PostInstallationActions = taskScheduleTaskDetailsAddInstallationSiteTaskRequestPostInstallationActions,
    ///             },
    ///             CryptoTaskRequest = new Oci.Jms.Inputs.TaskScheduleTaskDetailsCryptoTaskRequestArgs
    ///             {
    ///                 RecordingDurationInMinutes = taskScheduleTaskDetailsCryptoTaskRequestRecordingDurationInMinutes,
    ///                 Targets = new[]
    ///                 {
    ///                     new Oci.Jms.Inputs.TaskScheduleTaskDetailsCryptoTaskRequestTargetArgs
    ///                     {
    ///                         ApplicationInstallationKey = taskScheduleTaskDetailsCryptoTaskRequestTargetsApplicationInstallationKey,
    ///                         ApplicationKey = taskScheduleTaskDetailsCryptoTaskRequestTargetsApplicationKey,
    ///                         ContainerKey = taskScheduleTaskDetailsCryptoTaskRequestTargetsContainerKey,
    ///                         JreKey = taskScheduleTaskDetailsCryptoTaskRequestTargetsJreKey,
    ///                         ManagedInstanceId = testManagedInstance.Id,
    ///                     },
    ///                 },
    ///                 WaitingPeriodInMinutes = taskScheduleTaskDetailsCryptoTaskRequestWaitingPeriodInMinutes,
    ///             },
    ///             DeployedApplicationMigrationTaskRequest = new Oci.Jms.Inputs.TaskScheduleTaskDetailsDeployedApplicationMigrationTaskRequestArgs
    ///             {
    ///                 Targets = new[]
    ///                 {
    ///                     new Oci.Jms.Inputs.TaskScheduleTaskDetailsDeployedApplicationMigrationTaskRequestTargetArgs
    ///                     {
    ///                         DeployedApplicationInstallationKey = taskScheduleTaskDetailsDeployedApplicationMigrationTaskRequestTargetsDeployedApplicationInstallationKey,
    ///                         ExcludePackagePrefixes = taskScheduleTaskDetailsDeployedApplicationMigrationTaskRequestTargetsExcludePackagePrefixes,
    ///                         IncludePackagePrefixes = taskScheduleTaskDetailsDeployedApplicationMigrationTaskRequestTargetsIncludePackagePrefixes,
    ///                         ManagedInstanceId = testManagedInstance.Id,
    ///                         SourceJdkVersion = taskScheduleTaskDetailsDeployedApplicationMigrationTaskRequestTargetsSourceJdkVersion,
    ///                         TargetJdkVersion = taskScheduleTaskDetailsDeployedApplicationMigrationTaskRequestTargetsTargetJdkVersion,
    ///                     },
    ///                 },
    ///             },
    ///             JavaMigrationTaskRequest = new Oci.Jms.Inputs.TaskScheduleTaskDetailsJavaMigrationTaskRequestArgs
    ///             {
    ///                 Targets = new[]
    ///                 {
    ///                     new Oci.Jms.Inputs.TaskScheduleTaskDetailsJavaMigrationTaskRequestTargetArgs
    ///                     {
    ///                         ApplicationInstallationKey = taskScheduleTaskDetailsJavaMigrationTaskRequestTargetsApplicationInstallationKey,
    ///                         ExcludePackagePrefixes = taskScheduleTaskDetailsJavaMigrationTaskRequestTargetsExcludePackagePrefixes,
    ///                         IncludePackagePrefixes = taskScheduleTaskDetailsJavaMigrationTaskRequestTargetsIncludePackagePrefixes,
    ///                         ManagedInstanceId = testManagedInstance.Id,
    ///                         SourceJdkVersion = taskScheduleTaskDetailsJavaMigrationTaskRequestTargetsSourceJdkVersion,
    ///                         TargetJdkVersion = taskScheduleTaskDetailsJavaMigrationTaskRequestTargetsTargetJdkVersion,
    ///                     },
    ///                 },
    ///             },
    ///             JfrTaskRequest = new Oci.Jms.Inputs.TaskScheduleTaskDetailsJfrTaskRequestArgs
    ///             {
    ///                 JfcProfileName = testProfile.Name,
    ///                 JfcV1 = taskScheduleTaskDetailsJfrTaskRequestJfcV1,
    ///                 JfcV2 = taskScheduleTaskDetailsJfrTaskRequestJfcV2,
    ///                 RecordingDurationInMinutes = taskScheduleTaskDetailsJfrTaskRequestRecordingDurationInMinutes,
    ///                 RecordingSizeInMb = taskScheduleTaskDetailsJfrTaskRequestRecordingSizeInMb,
    ///                 Targets = new[]
    ///                 {
    ///                     new Oci.Jms.Inputs.TaskScheduleTaskDetailsJfrTaskRequestTargetArgs
    ///                     {
    ///                         ApplicationInstallationKey = taskScheduleTaskDetailsJfrTaskRequestTargetsApplicationInstallationKey,
    ///                         ApplicationKey = taskScheduleTaskDetailsJfrTaskRequestTargetsApplicationKey,
    ///                         ContainerKey = taskScheduleTaskDetailsJfrTaskRequestTargetsContainerKey,
    ///                         JreKey = taskScheduleTaskDetailsJfrTaskRequestTargetsJreKey,
    ///                         ManagedInstanceId = testManagedInstance.Id,
    ///                     },
    ///                 },
    ///                 WaitingPeriodInMinutes = taskScheduleTaskDetailsJfrTaskRequestWaitingPeriodInMinutes,
    ///             },
    ///             PerformanceTuningTaskRequest = new Oci.Jms.Inputs.TaskScheduleTaskDetailsPerformanceTuningTaskRequestArgs
    ///             {
    ///                 RecordingDurationInMinutes = taskScheduleTaskDetailsPerformanceTuningTaskRequestRecordingDurationInMinutes,
    ///                 Targets = new[]
    ///                 {
    ///                     new Oci.Jms.Inputs.TaskScheduleTaskDetailsPerformanceTuningTaskRequestTargetArgs
    ///                     {
    ///                         ApplicationInstallationKey = taskScheduleTaskDetailsPerformanceTuningTaskRequestTargetsApplicationInstallationKey,
    ///                         ApplicationKey = taskScheduleTaskDetailsPerformanceTuningTaskRequestTargetsApplicationKey,
    ///                         ContainerKey = taskScheduleTaskDetailsPerformanceTuningTaskRequestTargetsContainerKey,
    ///                         JreKey = taskScheduleTaskDetailsPerformanceTuningTaskRequestTargetsJreKey,
    ///                         ManagedInstanceId = testManagedInstance.Id,
    ///                     },
    ///                 },
    ///                 WaitingPeriodInMinutes = taskScheduleTaskDetailsPerformanceTuningTaskRequestWaitingPeriodInMinutes,
    ///             },
    ///             RemoveInstallationSiteTaskRequest = new Oci.Jms.Inputs.TaskScheduleTaskDetailsRemoveInstallationSiteTaskRequestArgs
    ///             {
    ///                 InstallationSites = new[]
    ///                 {
    ///                     new Oci.Jms.Inputs.TaskScheduleTaskDetailsRemoveInstallationSiteTaskRequestInstallationSiteArgs
    ///                     {
    ///                         InstallationKey = taskScheduleTaskDetailsRemoveInstallationSiteTaskRequestInstallationSitesInstallationKey,
    ///                         ManagedInstanceId = testManagedInstance.Id,
    ///                     },
    ///                 },
    ///             },
    ///             ScanJavaServerTaskRequest = new Oci.Jms.Inputs.TaskScheduleTaskDetailsScanJavaServerTaskRequestArgs
    ///             {
    ///                 ManagedInstanceIds = taskScheduleTaskDetailsScanJavaServerTaskRequestManagedInstanceIds,
    ///             },
    ///             ScanLibraryTaskRequest = new Oci.Jms.Inputs.TaskScheduleTaskDetailsScanLibraryTaskRequestArgs
    ///             {
    ///                 DynamicScanDurationInMinutes = taskScheduleTaskDetailsScanLibraryTaskRequestDynamicScanDurationInMinutes,
    ///                 IsDynamicScan = taskScheduleTaskDetailsScanLibraryTaskRequestIsDynamicScan,
    ///                 ManagedInstanceIds = taskScheduleTaskDetailsScanLibraryTaskRequestManagedInstanceIds,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// TaskSchedules can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:Jms/taskSchedule:TaskSchedule test_task_schedule "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:Jms/taskSchedule:TaskSchedule")]
    public partial class TaskSchedule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Name of the task creator.
        /// </summary>
        [Output("createdBy")]
        public Output<string> CreatedBy { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Recurrence specification for the task schedule execution (formatted according to [RFC-5545](https://icalendar.org/RFC-Specifications/iCalendar-RFC-5545/)). To run daily for 10 occurrences starts on September 2, 2024 09:00 EDT, it should be 'DTSTART;TZID=America/New_York:20240902T090000 RRULE:FREQ=DAILY;COUNT=10'. To run every 3 hours from 9:00 AM to 5:00 PM on August 5, 2024 EDT, it should be 'DTSTART;TZID=America/New_York:20240805T090000 RRULE:FREQ=HOURLY;INTERVAL=3;UNTIL=20240805T170000Z'.
        /// </summary>
        [Output("executionRecurrences")]
        public Output<string> ExecutionRecurrences { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
        /// </summary>
        [Output("fleetId")]
        public Output<string> FleetId { get; private set; } = null!;

        /// <summary>
        /// The name of the task schedule.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// All possible status of task schedule.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The minimum details of a task.
        /// </summary>
        [Output("taskDetails")]
        public Output<Outputs.TaskScheduleTaskDetails> TaskDetails { get; private set; } = null!;

        /// <summary>
        /// The date and time the task schedule was created (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The date and time the task schedule ran last (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        /// </summary>
        [Output("timeLastRun")]
        public Output<string> TimeLastRun { get; private set; } = null!;

        /// <summary>
        /// The date and time the task schedule was last updated (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        /// </summary>
        [Output("timeLastUpdated")]
        public Output<string> TimeLastUpdated { get; private set; } = null!;

        /// <summary>
        /// The date and time the task schedule will run next (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        /// </summary>
        [Output("timeNextRun")]
        public Output<string> TimeNextRun { get; private set; } = null!;


        /// <summary>
        /// Create a TaskSchedule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TaskSchedule(string name, TaskScheduleArgs args, CustomResourceOptions? options = null)
            : base("oci:Jms/taskSchedule:TaskSchedule", name, args ?? new TaskScheduleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TaskSchedule(string name, Input<string> id, TaskScheduleState? state = null, CustomResourceOptions? options = null)
            : base("oci:Jms/taskSchedule:TaskSchedule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TaskSchedule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TaskSchedule Get(string name, Input<string> id, TaskScheduleState? state = null, CustomResourceOptions? options = null)
        {
            return new TaskSchedule(name, id, state, options);
        }
    }

    public sealed class TaskScheduleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) Recurrence specification for the task schedule execution (formatted according to [RFC-5545](https://icalendar.org/RFC-Specifications/iCalendar-RFC-5545/)). To run daily for 10 occurrences starts on September 2, 2024 09:00 EDT, it should be 'DTSTART;TZID=America/New_York:20240902T090000 RRULE:FREQ=DAILY;COUNT=10'. To run every 3 hours from 9:00 AM to 5:00 PM on August 5, 2024 EDT, it should be 'DTSTART;TZID=America/New_York:20240805T090000 RRULE:FREQ=HOURLY;INTERVAL=3;UNTIL=20240805T170000Z'.
        /// </summary>
        [Input("executionRecurrences", required: true)]
        public Input<string> ExecutionRecurrences { get; set; } = null!;

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
        /// </summary>
        [Input("fleetId", required: true)]
        public Input<string> FleetId { get; set; } = null!;

        /// <summary>
        /// (Updatable) The minimum details of a task.
        /// </summary>
        [Input("taskDetails", required: true)]
        public Input<Inputs.TaskScheduleTaskDetailsArgs> TaskDetails { get; set; } = null!;

        public TaskScheduleArgs()
        {
        }
        public static new TaskScheduleArgs Empty => new TaskScheduleArgs();
    }

    public sealed class TaskScheduleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the task creator.
        /// </summary>
        [Input("createdBy")]
        public Input<string>? CreatedBy { get; set; }

        /// <summary>
        /// (Updatable) Recurrence specification for the task schedule execution (formatted according to [RFC-5545](https://icalendar.org/RFC-Specifications/iCalendar-RFC-5545/)). To run daily for 10 occurrences starts on September 2, 2024 09:00 EDT, it should be 'DTSTART;TZID=America/New_York:20240902T090000 RRULE:FREQ=DAILY;COUNT=10'. To run every 3 hours from 9:00 AM to 5:00 PM on August 5, 2024 EDT, it should be 'DTSTART;TZID=America/New_York:20240805T090000 RRULE:FREQ=HOURLY;INTERVAL=3;UNTIL=20240805T170000Z'.
        /// </summary>
        [Input("executionRecurrences")]
        public Input<string>? ExecutionRecurrences { get; set; }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
        /// </summary>
        [Input("fleetId")]
        public Input<string>? FleetId { get; set; }

        /// <summary>
        /// The name of the task schedule.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// All possible status of task schedule.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// (Updatable) The minimum details of a task.
        /// </summary>
        [Input("taskDetails")]
        public Input<Inputs.TaskScheduleTaskDetailsGetArgs>? TaskDetails { get; set; }

        /// <summary>
        /// The date and time the task schedule was created (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The date and time the task schedule ran last (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        /// </summary>
        [Input("timeLastRun")]
        public Input<string>? TimeLastRun { get; set; }

        /// <summary>
        /// The date and time the task schedule was last updated (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        /// </summary>
        [Input("timeLastUpdated")]
        public Input<string>? TimeLastUpdated { get; set; }

        /// <summary>
        /// The date and time the task schedule will run next (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        /// </summary>
        [Input("timeNextRun")]
        public Input<string>? TimeNextRun { get; set; }

        public TaskScheduleState()
        {
        }
        public static new TaskScheduleState Empty => new TaskScheduleState();
    }
}
