// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Kms
{
    public static class GetEkmsPrivateEndpoint
    {
        /// <summary>
        /// This data source provides details about a specific Ekms Private Endpoint resource in Oracle Cloud Infrastructure Kms service.
        /// 
        /// Gets a specific EKMS private by identifier.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testEkmsPrivateEndpoint = Oci.Kms.GetEkmsPrivateEndpoint.Invoke(new()
        ///     {
        ///         EkmsPrivateEndpointId = oci_kms_ekms_private_endpoint.Test_ekms_private_endpoint.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetEkmsPrivateEndpointResult> InvokeAsync(GetEkmsPrivateEndpointArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEkmsPrivateEndpointResult>("oci:Kms/getEkmsPrivateEndpoint:getEkmsPrivateEndpoint", args ?? new GetEkmsPrivateEndpointArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Ekms Private Endpoint resource in Oracle Cloud Infrastructure Kms service.
        /// 
        /// Gets a specific EKMS private by identifier.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testEkmsPrivateEndpoint = Oci.Kms.GetEkmsPrivateEndpoint.Invoke(new()
        ///     {
        ///         EkmsPrivateEndpointId = oci_kms_ekms_private_endpoint.Test_ekms_private_endpoint.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetEkmsPrivateEndpointResult> Invoke(GetEkmsPrivateEndpointInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEkmsPrivateEndpointResult>("oci:Kms/getEkmsPrivateEndpoint:getEkmsPrivateEndpoint", args ?? new GetEkmsPrivateEndpointInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEkmsPrivateEndpointArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique EKMS private endpoint identifier.
        /// </summary>
        [Input("ekmsPrivateEndpointId", required: true)]
        public string EkmsPrivateEndpointId { get; set; } = null!;

        public GetEkmsPrivateEndpointArgs()
        {
        }
        public static new GetEkmsPrivateEndpointArgs Empty => new GetEkmsPrivateEndpointArgs();
    }

    public sealed class GetEkmsPrivateEndpointInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique EKMS private endpoint identifier.
        /// </summary>
        [Input("ekmsPrivateEndpointId", required: true)]
        public Input<string> EkmsPrivateEndpointId { get; set; } = null!;

        public GetEkmsPrivateEndpointInvokeArgs()
        {
        }
        public static new GetEkmsPrivateEndpointInvokeArgs Empty => new GetEkmsPrivateEndpointInvokeArgs();
    }


    [OutputType]
    public sealed class GetEkmsPrivateEndpointResult
    {
        /// <summary>
        /// CABundle to validate TLS certificate of the external key manager system in PEM format
        /// </summary>
        public readonly string CaBundle;
        /// <summary>
        /// Identifier of the compartment this EKMS private endpoint belongs to
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// Mutable name of the EKMS private endpoint
        /// </summary>
        public readonly string DisplayName;
        public readonly string EkmsPrivateEndpointId;
        /// <summary>
        /// Private IP of the external key manager system to connect to from the EKMS private endpoint
        /// </summary>
        public readonly string ExternalKeyManagerIp;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// Unique identifier that is immutable
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in 'Failed' state.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// The port of the external key manager system
        /// </summary>
        public readonly int Port;
        /// <summary>
        /// The IP address in the customer's VCN for the EKMS private endpoint. This is taken from subnet
        /// </summary>
        public readonly string PrivateEndpointIp;
        /// <summary>
        /// The current state of the EKMS private endpoint resource.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Subnet Identifier
        /// </summary>
        public readonly string SubnetId;
        /// <summary>
        /// The time the EKMS private endpoint was created. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time the EKMS private endpoint was updated. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetEkmsPrivateEndpointResult(
            string caBundle,

            string compartmentId,

            ImmutableDictionary<string, object> definedTags,

            string displayName,

            string ekmsPrivateEndpointId,

            string externalKeyManagerIp,

            ImmutableDictionary<string, object> freeformTags,

            string id,

            string lifecycleDetails,

            int port,

            string privateEndpointIp,

            string state,

            string subnetId,

            string timeCreated,

            string timeUpdated)
        {
            CaBundle = caBundle;
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            DisplayName = displayName;
            EkmsPrivateEndpointId = ekmsPrivateEndpointId;
            ExternalKeyManagerIp = externalKeyManagerIp;
            FreeformTags = freeformTags;
            Id = id;
            LifecycleDetails = lifecycleDetails;
            Port = port;
            PrivateEndpointIp = privateEndpointIp;
            State = state;
            SubnetId = subnetId;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
