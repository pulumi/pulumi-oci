// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Kms
{
    public static class GetReplicationStatus
    {
        /// <summary>
        /// This data source provides details about a specific Replication Status resource in Oracle Cloud Infrastructure Kms service.
        /// 
        /// When a vault has a replica, each operation on the vault or its resources, such as
        /// keys, is replicated and has an associated replicationId. Replication status provides
        /// details about whether the operation associated with the given replicationId has been
        /// successfully applied across replicas.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testReplicationStatus = Oci.Kms.GetReplicationStatus.Invoke(new()
        ///     {
        ///         ReplicationId = oci_kms_replication.Test_replication.Id,
        ///         ManagementEndpoint = @var.Replication_status_management_endpoint,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetReplicationStatusResult> InvokeAsync(GetReplicationStatusArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetReplicationStatusResult>("oci:Kms/getReplicationStatus:getReplicationStatus", args ?? new GetReplicationStatusArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Replication Status resource in Oracle Cloud Infrastructure Kms service.
        /// 
        /// When a vault has a replica, each operation on the vault or its resources, such as
        /// keys, is replicated and has an associated replicationId. Replication status provides
        /// details about whether the operation associated with the given replicationId has been
        /// successfully applied across replicas.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testReplicationStatus = Oci.Kms.GetReplicationStatus.Invoke(new()
        ///     {
        ///         ReplicationId = oci_kms_replication.Test_replication.Id,
        ///         ManagementEndpoint = @var.Replication_status_management_endpoint,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetReplicationStatusResult> Invoke(GetReplicationStatusInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetReplicationStatusResult>("oci:Kms/getReplicationStatus:getReplicationStatus", args ?? new GetReplicationStatusInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetReplicationStatusArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The service endpoint to perform management operations against. See Vault Management endpoint.
        /// </summary>
        [Input("managementEndpoint", required: true)]
        public string ManagementEndpoint { get; set; } = null!;

        /// <summary>
        /// replicationId associated with an operation on a resource
        /// </summary>
        [Input("replicationId", required: true)]
        public string ReplicationId { get; set; } = null!;

        public GetReplicationStatusArgs()
        {
        }
        public static new GetReplicationStatusArgs Empty => new GetReplicationStatusArgs();
    }

    public sealed class GetReplicationStatusInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The service endpoint to perform management operations against. See Vault Management endpoint.
        /// </summary>
        [Input("managementEndpoint", required: true)]
        public Input<string> ManagementEndpoint { get; set; } = null!;

        /// <summary>
        /// replicationId associated with an operation on a resource
        /// </summary>
        [Input("replicationId", required: true)]
        public Input<string> ReplicationId { get; set; } = null!;

        public GetReplicationStatusInvokeArgs()
        {
        }
        public static new GetReplicationStatusInvokeArgs Empty => new GetReplicationStatusInvokeArgs();
    }


    [OutputType]
    public sealed class GetReplicationStatusResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string ManagementEndpoint;
        public readonly ImmutableArray<Outputs.GetReplicationStatusReplicaDetailResult> ReplicaDetails;
        public readonly string ReplicationId;

        [OutputConstructor]
        private GetReplicationStatusResult(
            string id,

            string managementEndpoint,

            ImmutableArray<Outputs.GetReplicationStatusReplicaDetailResult> replicaDetails,

            string replicationId)
        {
            Id = id;
            ManagementEndpoint = managementEndpoint;
            ReplicaDetails = replicaDetails;
            ReplicationId = replicationId;
        }
    }
}
