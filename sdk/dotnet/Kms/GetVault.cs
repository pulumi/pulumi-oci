// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Kms
{
    public static class GetVault
    {
        /// <summary>
        /// This data source provides details about a specific Vault resource in Oracle Cloud Infrastructure Kms service.
        /// 
        /// Gets the specified vault's configuration information.
        /// 
        /// As a provisioning operation, this call is subject to a Key Management limit that applies to
        /// the total number of requests across all provisioning read operations. Key Management might
        /// throttle this call to reject an otherwise valid request when the total rate of provisioning
        /// read operations exceeds 10 requests per second for a given tenancy.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testVault = Oci.Kms.GetVault.Invoke(new()
        ///     {
        ///         VaultId = testVaultOciKmsVault.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetVaultResult> InvokeAsync(GetVaultArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVaultResult>("oci:Kms/getVault:getVault", args ?? new GetVaultArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Vault resource in Oracle Cloud Infrastructure Kms service.
        /// 
        /// Gets the specified vault's configuration information.
        /// 
        /// As a provisioning operation, this call is subject to a Key Management limit that applies to
        /// the total number of requests across all provisioning read operations. Key Management might
        /// throttle this call to reject an otherwise valid request when the total rate of provisioning
        /// read operations exceeds 10 requests per second for a given tenancy.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testVault = Oci.Kms.GetVault.Invoke(new()
        ///     {
        ///         VaultId = testVaultOciKmsVault.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetVaultResult> Invoke(GetVaultInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVaultResult>("oci:Kms/getVault:getVault", args ?? new GetVaultInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Vault resource in Oracle Cloud Infrastructure Kms service.
        /// 
        /// Gets the specified vault's configuration information.
        /// 
        /// As a provisioning operation, this call is subject to a Key Management limit that applies to
        /// the total number of requests across all provisioning read operations. Key Management might
        /// throttle this call to reject an otherwise valid request when the total rate of provisioning
        /// read operations exceeds 10 requests per second for a given tenancy.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testVault = Oci.Kms.GetVault.Invoke(new()
        ///     {
        ///         VaultId = testVaultOciKmsVault.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetVaultResult> Invoke(GetVaultInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetVaultResult>("oci:Kms/getVault:getVault", args ?? new GetVaultInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVaultArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the vault.
        /// </summary>
        [Input("vaultId", required: true)]
        public string VaultId { get; set; } = null!;

        public GetVaultArgs()
        {
        }
        public static new GetVaultArgs Empty => new GetVaultArgs();
    }

    public sealed class GetVaultInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the vault.
        /// </summary>
        [Input("vaultId", required: true)]
        public Input<string> VaultId { get; set; } = null!;

        public GetVaultInvokeArgs()
        {
        }
        public static new GetVaultInvokeArgs Empty => new GetVaultInvokeArgs();
    }


    [OutputType]
    public sealed class GetVaultResult
    {
        /// <summary>
        /// The OCID of the compartment that contains a particular vault.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The service endpoint to perform cryptographic operations against. Cryptographic operations include [Encrypt](https://docs.cloud.oracle.com/iaas/api/#/en/key/latest/EncryptedData/Encrypt), [Decrypt](https://docs.cloud.oracle.com/iaas/api/#/en/key/latest/DecryptedData/Decrypt), and [GenerateDataEncryptionKey](https://docs.cloud.oracle.com/iaas/api/#/en/key/latest/GeneratedKey/GenerateDataEncryptionKey) operations.
        /// </summary>
        public readonly string CryptoEndpoint;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// A user-friendly name for the vault. It does not have to be unique, and it is changeable. Avoid entering confidential information.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Summary about metadata of external key manager to be returned to the customer as a response.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetVaultExternalKeyManagerMetadataSummaryResult> ExternalKeyManagerMetadataSummaries;
        public readonly ImmutableArray<Outputs.GetVaultExternalKeyManagerMetadataResult> ExternalKeyManagerMetadatas;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The OCID of the vault.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A Boolean value that indicates whether the Vault is primary Vault or replica Vault.
        /// </summary>
        public readonly bool IsPrimary;
        /// <summary>
        /// A Boolean value that indicates whether the Vault has cross region replication capability. Always true for Virtual Private Vaults.
        /// </summary>
        public readonly bool IsVaultReplicable;
        /// <summary>
        /// The service endpoint to perform management operations against. Management operations include "Create," "Update," "List," "Get," and "Delete" operations.
        /// </summary>
        public readonly string ManagementEndpoint;
        /// <summary>
        /// Vault replica details
        /// </summary>
        public readonly ImmutableArray<Outputs.GetVaultReplicaDetailResult> ReplicaDetails;
        /// <summary>
        /// Details where vault was backed up.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetVaultRestoreFromFileResult> RestoreFromFiles;
        /// <summary>
        /// Details where vault was backed up
        /// </summary>
        public readonly ImmutableArray<Outputs.GetVaultRestoreFromObjectStoreResult> RestoreFromObjectStores;
        /// <summary>
        /// When flipped, triggers restore if restore options are provided. Values of 0 or 1 are supported
        /// </summary>
        public readonly bool RestoreTrigger;
        /// <summary>
        /// The OCID of the vault from which this vault was restored, if it was restored from a backup file. If you restore a vault to the same region, the vault retains the same OCID that it had when you backed up the vault.
        /// </summary>
        public readonly string RestoredFromVaultId;
        /// <summary>
        /// The vault's current lifecycle state.  Example: `DELETED`
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The date and time this vault was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-04-03T21:10:29.600Z`
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// An optional property to indicate when to delete the vault, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2018-04-03T21:10:29.600Z`
        /// </summary>
        public readonly string TimeOfDeletion;
        public readonly string VaultId;
        /// <summary>
        /// The type of vault. Each type of vault stores the key with different degrees of isolation and has different options and pricing.
        /// </summary>
        public readonly string VaultType;

        [OutputConstructor]
        private GetVaultResult(
            string compartmentId,

            string cryptoEndpoint,

            ImmutableDictionary<string, string> definedTags,

            string displayName,

            ImmutableArray<Outputs.GetVaultExternalKeyManagerMetadataSummaryResult> externalKeyManagerMetadataSummaries,

            ImmutableArray<Outputs.GetVaultExternalKeyManagerMetadataResult> externalKeyManagerMetadatas,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            bool isPrimary,

            bool isVaultReplicable,

            string managementEndpoint,

            ImmutableArray<Outputs.GetVaultReplicaDetailResult> replicaDetails,

            ImmutableArray<Outputs.GetVaultRestoreFromFileResult> restoreFromFiles,

            ImmutableArray<Outputs.GetVaultRestoreFromObjectStoreResult> restoreFromObjectStores,

            bool restoreTrigger,

            string restoredFromVaultId,

            string state,

            string timeCreated,

            string timeOfDeletion,

            string vaultId,

            string vaultType)
        {
            CompartmentId = compartmentId;
            CryptoEndpoint = cryptoEndpoint;
            DefinedTags = definedTags;
            DisplayName = displayName;
            ExternalKeyManagerMetadataSummaries = externalKeyManagerMetadataSummaries;
            ExternalKeyManagerMetadatas = externalKeyManagerMetadatas;
            FreeformTags = freeformTags;
            Id = id;
            IsPrimary = isPrimary;
            IsVaultReplicable = isVaultReplicable;
            ManagementEndpoint = managementEndpoint;
            ReplicaDetails = replicaDetails;
            RestoreFromFiles = restoreFromFiles;
            RestoreFromObjectStores = restoreFromObjectStores;
            RestoreTrigger = restoreTrigger;
            RestoredFromVaultId = restoredFromVaultId;
            State = state;
            TimeCreated = timeCreated;
            TimeOfDeletion = timeOfDeletion;
            VaultId = vaultId;
            VaultType = vaultType;
        }
    }
}
