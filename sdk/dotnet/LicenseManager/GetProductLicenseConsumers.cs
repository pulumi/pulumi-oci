// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.LicenseManager
{
    public static class GetProductLicenseConsumers
    {
        /// <summary>
        /// This data source provides the list of Product License Consumers in Oracle Cloud Infrastructure License Manager service.
        /// 
        /// Retrieves the product license consumers for a particular product license ID.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testProductLicenseConsumers = Oci.LicenseManager.GetProductLicenseConsumers.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         ProductLicenseId = oci_license_manager_product_license.Test_product_license.Id,
        ///         IsCompartmentIdInSubtree = @var.Product_license_consumer_is_compartment_id_in_subtree,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetProductLicenseConsumersResult> InvokeAsync(GetProductLicenseConsumersArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetProductLicenseConsumersResult>("oci:LicenseManager/getProductLicenseConsumers:getProductLicenseConsumers", args ?? new GetProductLicenseConsumersArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Product License Consumers in Oracle Cloud Infrastructure License Manager service.
        /// 
        /// Retrieves the product license consumers for a particular product license ID.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testProductLicenseConsumers = Oci.LicenseManager.GetProductLicenseConsumers.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         ProductLicenseId = oci_license_manager_product_license.Test_product_license.Id,
        ///         IsCompartmentIdInSubtree = @var.Product_license_consumer_is_compartment_id_in_subtree,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetProductLicenseConsumersResult> Invoke(GetProductLicenseConsumersInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetProductLicenseConsumersResult>("oci:LicenseManager/getProductLicenseConsumers:getProductLicenseConsumers", args ?? new GetProductLicenseConsumersInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetProductLicenseConsumersArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) used for the license record, product license, and configuration.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// Indicates if the given compartment is the root compartment.
        /// </summary>
        [Input("isCompartmentIdInSubtree")]
        public bool? IsCompartmentIdInSubtree { get; set; }

        /// <summary>
        /// Unique product license identifier.
        /// </summary>
        [Input("productLicenseId", required: true)]
        public string ProductLicenseId { get; set; } = null!;

        public GetProductLicenseConsumersArgs()
        {
        }
        public static new GetProductLicenseConsumersArgs Empty => new GetProductLicenseConsumersArgs();
    }

    public sealed class GetProductLicenseConsumersInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) used for the license record, product license, and configuration.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// Indicates if the given compartment is the root compartment.
        /// </summary>
        [Input("isCompartmentIdInSubtree")]
        public Input<bool>? IsCompartmentIdInSubtree { get; set; }

        /// <summary>
        /// Unique product license identifier.
        /// </summary>
        [Input("productLicenseId", required: true)]
        public Input<string> ProductLicenseId { get; set; } = null!;

        public GetProductLicenseConsumersInvokeArgs()
        {
        }
        public static new GetProductLicenseConsumersInvokeArgs Empty => new GetProductLicenseConsumersInvokeArgs();
    }


    [OutputType]
    public sealed class GetProductLicenseConsumersResult
    {
        public readonly string CompartmentId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string? Id;
        public readonly bool? IsCompartmentIdInSubtree;
        /// <summary>
        /// Collection of product license consumers.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProductLicenseConsumersItemResult> Items;
        public readonly string ProductLicenseId;

        [OutputConstructor]
        private GetProductLicenseConsumersResult(
            string compartmentId,

            string? id,

            bool? isCompartmentIdInSubtree,

            ImmutableArray<Outputs.GetProductLicenseConsumersItemResult> items,

            string productLicenseId)
        {
            CompartmentId = compartmentId;
            Id = id;
            IsCompartmentIdInSubtree = isCompartmentIdInSubtree;
            Items = items;
            ProductLicenseId = productLicenseId;
        }
    }
}
