// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.LicenseManager.Outputs
{

    [OutputType]
    public sealed class GetProductLicenseConsumersItemResult
    {
        /// <summary>
        /// Specifies if all options are available.
        /// </summary>
        public readonly bool? AreAllOptionsAvailable;
        /// <summary>
        /// Specifies if the base license is available.
        /// </summary>
        public readonly bool? IsBaseLicenseAvailable;
        /// <summary>
        /// The product license unit.
        /// </summary>
        public readonly string? LicenseUnitType;
        /// <summary>
        /// Number of license units consumed by the resource.
        /// </summary>
        public readonly double? LicenseUnitsConsumed;
        /// <summary>
        /// Collection of missing product licenses.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProductLicenseConsumersItemMissingProductResult> MissingProducts;
        /// <summary>
        /// The resource product name.
        /// </summary>
        public readonly string? ProductName;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the resource.
        /// </summary>
        public readonly string? ResourceCompartmentId;
        /// <summary>
        /// The display name of the compartment that contains the resource.
        /// </summary>
        public readonly string? ResourceCompartmentName;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource.
        /// </summary>
        public readonly string? ResourceId;
        /// <summary>
        /// The display name of the resource.
        /// </summary>
        public readonly string? ResourceName;
        /// <summary>
        /// Number of units of the resource
        /// </summary>
        public readonly double? ResourceUnitCount;
        /// <summary>
        /// The unit type for the resource.
        /// </summary>
        public readonly string? ResourceUnitType;

        [OutputConstructor]
        private GetProductLicenseConsumersItemResult(
            bool? areAllOptionsAvailable,

            bool? isBaseLicenseAvailable,

            string? licenseUnitType,

            double? licenseUnitsConsumed,

            ImmutableArray<Outputs.GetProductLicenseConsumersItemMissingProductResult> missingProducts,

            string? productName,

            string? resourceCompartmentId,

            string? resourceCompartmentName,

            string? resourceId,

            string? resourceName,

            double? resourceUnitCount,

            string? resourceUnitType)
        {
            AreAllOptionsAvailable = areAllOptionsAvailable;
            IsBaseLicenseAvailable = isBaseLicenseAvailable;
            LicenseUnitType = licenseUnitType;
            LicenseUnitsConsumed = licenseUnitsConsumed;
            MissingProducts = missingProducts;
            ProductName = productName;
            ResourceCompartmentId = resourceCompartmentId;
            ResourceCompartmentName = resourceCompartmentName;
            ResourceId = resourceId;
            ResourceName = resourceName;
            ResourceUnitCount = resourceUnitCount;
            ResourceUnitType = resourceUnitType;
        }
    }
}
