// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.LicenseManager.Outputs
{

    [OutputType]
    public sealed class GetTopUtilizedProductLicensesItemResult
    {
        /// <summary>
        /// Specifies if the license unit count is unlimited.
        /// </summary>
        public readonly bool IsUnlimited;
        /// <summary>
        /// The product license [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        public readonly string ProductLicenseId;
        /// <summary>
        /// The product type.
        /// </summary>
        public readonly string ProductType;
        /// <summary>
        /// The current product license status.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Total number of license units in the product license provided by the user.
        /// </summary>
        public readonly int TotalLicenseUnitCount;
        /// <summary>
        /// Number of license units consumed.
        /// </summary>
        public readonly double TotalUnitsConsumed;
        /// <summary>
        /// The product license unit.
        /// </summary>
        public readonly string UnitType;

        [OutputConstructor]
        private GetTopUtilizedProductLicensesItemResult(
            bool isUnlimited,

            string productLicenseId,

            string productType,

            string status,

            int totalLicenseUnitCount,

            double totalUnitsConsumed,

            string unitType)
        {
            IsUnlimited = isUnlimited;
            ProductLicenseId = productLicenseId;
            ProductType = productType;
            Status = status;
            TotalLicenseUnitCount = totalLicenseUnitCount;
            TotalUnitsConsumed = totalUnitsConsumed;
            UnitType = unitType;
        }
    }
}
