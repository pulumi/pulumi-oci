// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Limits
{
    public static class GetQuota
    {
        /// <summary>
        /// This data source provides details about a specific Quota resource in Oracle Cloud Infrastructure Limits service.
        /// 
        /// Gets the quota for the OCID specified.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testQuota = Oci.Limits.GetQuota.Invoke(new()
        ///     {
        ///         QuotaId = oci_limits_quota.Test_quota.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetQuotaResult> InvokeAsync(GetQuotaArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetQuotaResult>("oci:Limits/getQuota:getQuota", args ?? new GetQuotaArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Quota resource in Oracle Cloud Infrastructure Limits service.
        /// 
        /// Gets the quota for the OCID specified.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testQuota = Oci.Limits.GetQuota.Invoke(new()
        ///     {
        ///         QuotaId = oci_limits_quota.Test_quota.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetQuotaResult> Invoke(GetQuotaInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetQuotaResult>("oci:Limits/getQuota:getQuota", args ?? new GetQuotaInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetQuotaArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the quota.
        /// </summary>
        [Input("quotaId", required: true)]
        public string QuotaId { get; set; } = null!;

        public GetQuotaArgs()
        {
        }
        public static new GetQuotaArgs Empty => new GetQuotaArgs();
    }

    public sealed class GetQuotaInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the quota.
        /// </summary>
        [Input("quotaId", required: true)]
        public Input<string> QuotaId { get; set; } = null!;

        public GetQuotaInvokeArgs()
        {
        }
        public static new GetQuotaInvokeArgs Empty => new GetQuotaInvokeArgs();
    }


    [OutputType]
    public sealed class GetQuotaResult
    {
        /// <summary>
        /// The OCID of the compartment containing the resource this quota applies to.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// The description you assign to the quota.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// The OCID of the quota.
        /// </summary>
        public readonly string Id;
        public readonly bool IsLockOverride;
        /// <summary>
        /// Locks associated with this resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetQuotaLockResult> Locks;
        /// <summary>
        /// The name you assign to the quota during creation. The name must be unique across all quotas in the tenancy and cannot be changed.
        /// </summary>
        public readonly string Name;
        public readonly string QuotaId;
        /// <summary>
        /// The quota's current state.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// An array of one or more quota statements written in the declarative quota statement language.
        /// </summary>
        public readonly ImmutableArray<string> Statements;
        /// <summary>
        /// Date and time the quota was created, in the format defined by RFC 3339. Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        public readonly string TimeCreated;

        [OutputConstructor]
        private GetQuotaResult(
            string compartmentId,

            ImmutableDictionary<string, object> definedTags,

            string description,

            ImmutableDictionary<string, object> freeformTags,

            string id,

            bool isLockOverride,

            ImmutableArray<Outputs.GetQuotaLockResult> locks,

            string name,

            string quotaId,

            string state,

            ImmutableArray<string> statements,

            string timeCreated)
        {
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            Description = description;
            FreeformTags = freeformTags;
            Id = id;
            IsLockOverride = isLockOverride;
            Locks = locks;
            Name = name;
            QuotaId = quotaId;
            State = state;
            Statements = statements;
            TimeCreated = timeCreated;
        }
    }
}
