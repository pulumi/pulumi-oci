// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Limits
{
    /// <summary>
    /// This resource provides the Quota resource in Oracle Cloud Infrastructure Limits service.
    /// 
    /// Creates a new quota with the details supplied.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testQuota = new Oci.Limits.Quota("testQuota", new()
    ///     {
    ///         CompartmentId = @var.Tenancy_ocid,
    ///         Description = @var.Quota_description,
    ///         Statements = @var.Quota_statements,
    ///         DefinedTags = 
    ///         {
    ///             { "Operations.CostCenter", "42" },
    ///         },
    ///         FreeformTags = 
    ///         {
    ///             { "Department", "Finance" },
    ///         },
    ///         Locks = new[]
    ///         {
    ///             new Oci.Limits.Inputs.QuotaLockArgs
    ///             {
    ///                 Type = @var.Quota_locks_type,
    ///                 Message = @var.Quota_locks_message,
    ///                 RelatedResourceId = oci_limits_related_resource.Test_related_resource.Id,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Quotas can be imported using the `id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import oci:Limits/quota:Quota test_quota "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:Limits/quota:Quota")]
    public partial class Quota : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The OCID of the compartment containing the resource this quota applies to.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, object>?> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The description you assign to the quota.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, object>?> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// this is a computed field which is set to true if any lock is present`
        /// </summary>
        [Output("isLockOverride")]
        public Output<bool?> IsLockOverride { get; private set; } = null!;

        /// <summary>
        /// Locks associated with this resource.
        /// </summary>
        [Output("locks")]
        public Output<ImmutableArray<Outputs.QuotaLock>> Locks { get; private set; } = null!;

        /// <summary>
        /// The name you assign to the quota during creation. The name must be unique across all quotas in the tenancy and cannot be changed.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The quota's current state.
        /// </summary>
        [Output("state")]
        public Output<string?> State { get; private set; } = null!;

        /// <summary>
        /// (Updatable) An array of quota statements written in the declarative quota statement language. 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("statements")]
        public Output<ImmutableArray<string>> Statements { get; private set; } = null!;

        /// <summary>
        /// Date and time the quota was created, in the format defined by RFC 3339. Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Output("timeCreated")]
        public Output<string?> TimeCreated { get; private set; } = null!;


        /// <summary>
        /// Create a Quota resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Quota(string name, QuotaArgs args, CustomResourceOptions? options = null)
            : base("oci:Limits/quota:Quota", name, args ?? new QuotaArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Quota(string name, Input<string> id, QuotaState? state = null, CustomResourceOptions? options = null)
            : base("oci:Limits/quota:Quota", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Quota resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Quota Get(string name, Input<string> id, QuotaState? state = null, CustomResourceOptions? options = null)
        {
            return new Quota(name, id, state, options);
        }
    }

    public sealed class QuotaArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The OCID of the compartment containing the resource this quota applies to.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) The description you assign to the quota.
        /// </summary>
        [Input("description", required: true)]
        public Input<string> Description { get; set; } = null!;

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        [Input("locks")]
        private InputList<Inputs.QuotaLockArgs>? _locks;

        /// <summary>
        /// Locks associated with this resource.
        /// </summary>
        public InputList<Inputs.QuotaLockArgs> Locks
        {
            get => _locks ?? (_locks = new InputList<Inputs.QuotaLockArgs>());
            set => _locks = value;
        }

        /// <summary>
        /// The name you assign to the quota during creation. The name must be unique across all quotas in the tenancy and cannot be changed.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("statements", required: true)]
        private InputList<string>? _statements;

        /// <summary>
        /// (Updatable) An array of quota statements written in the declarative quota statement language. 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        public InputList<string> Statements
        {
            get => _statements ?? (_statements = new InputList<string>());
            set => _statements = value;
        }

        public QuotaArgs()
        {
        }
        public static new QuotaArgs Empty => new QuotaArgs();
    }

    public sealed class QuotaState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The OCID of the compartment containing the resource this quota applies to.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) The description you assign to the quota.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// this is a computed field which is set to true if any lock is present`
        /// </summary>
        [Input("isLockOverride")]
        public Input<bool>? IsLockOverride { get; set; }

        [Input("locks")]
        private InputList<Inputs.QuotaLockGetArgs>? _locks;

        /// <summary>
        /// Locks associated with this resource.
        /// </summary>
        public InputList<Inputs.QuotaLockGetArgs> Locks
        {
            get => _locks ?? (_locks = new InputList<Inputs.QuotaLockGetArgs>());
            set => _locks = value;
        }

        /// <summary>
        /// The name you assign to the quota during creation. The name must be unique across all quotas in the tenancy and cannot be changed.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The quota's current state.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("statements")]
        private InputList<string>? _statements;

        /// <summary>
        /// (Updatable) An array of quota statements written in the declarative quota statement language. 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        public InputList<string> Statements
        {
            get => _statements ?? (_statements = new InputList<string>());
            set => _statements = value;
        }

        /// <summary>
        /// Date and time the quota was created, in the format defined by RFC 3339. Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        public QuotaState()
        {
        }
        public static new QuotaState Empty => new QuotaState();
    }
}
