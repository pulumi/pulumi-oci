// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.LoadBalancer
{
    public static class GetBackendSetHealth
    {
        /// <summary>
        /// This data source provides details about a specific Backend Set Health resource in Oracle Cloud Infrastructure Load Balancer service.
        /// 
        /// Gets the health status for the specified backend set.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testBackendSetHealth = Oci.LoadBalancer.GetBackendSetHealth.Invoke(new()
        ///     {
        ///         BackendSetName = oci_load_balancer_backend_set.Test_backend_set.Name,
        ///         LoadBalancerId = oci_load_balancer_load_balancer.Test_load_balancer.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetBackendSetHealthResult> InvokeAsync(GetBackendSetHealthArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBackendSetHealthResult>("oci:LoadBalancer/getBackendSetHealth:getBackendSetHealth", args ?? new GetBackendSetHealthArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Backend Set Health resource in Oracle Cloud Infrastructure Load Balancer service.
        /// 
        /// Gets the health status for the specified backend set.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testBackendSetHealth = Oci.LoadBalancer.GetBackendSetHealth.Invoke(new()
        ///     {
        ///         BackendSetName = oci_load_balancer_backend_set.Test_backend_set.Name,
        ///         LoadBalancerId = oci_load_balancer_load_balancer.Test_load_balancer.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetBackendSetHealthResult> Invoke(GetBackendSetHealthInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBackendSetHealthResult>("oci:LoadBalancer/getBackendSetHealth:getBackendSetHealth", args ?? new GetBackendSetHealthInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBackendSetHealthArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the backend set to retrieve the health status for.  Example: `example_backend_set`
        /// </summary>
        [Input("backendSetName", required: true)]
        public string BackendSetName { get; set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer associated with the backend set health status to be retrieved.
        /// </summary>
        [Input("loadBalancerId", required: true)]
        public string LoadBalancerId { get; set; } = null!;

        public GetBackendSetHealthArgs()
        {
        }
        public static new GetBackendSetHealthArgs Empty => new GetBackendSetHealthArgs();
    }

    public sealed class GetBackendSetHealthInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the backend set to retrieve the health status for.  Example: `example_backend_set`
        /// </summary>
        [Input("backendSetName", required: true)]
        public Input<string> BackendSetName { get; set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer associated with the backend set health status to be retrieved.
        /// </summary>
        [Input("loadBalancerId", required: true)]
        public Input<string> LoadBalancerId { get; set; } = null!;

        public GetBackendSetHealthInvokeArgs()
        {
        }
        public static new GetBackendSetHealthInvokeArgs Empty => new GetBackendSetHealthInvokeArgs();
    }


    [OutputType]
    public sealed class GetBackendSetHealthResult
    {
        public readonly string BackendSetName;
        /// <summary>
        /// A list of backend servers that are currently in the `CRITICAL` health state. The list identifies each backend server by IP address and port.  Example: `10.0.0.4:8080`
        /// </summary>
        public readonly ImmutableArray<string> CriticalStateBackendNames;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string LoadBalancerId;
        /// <summary>
        /// Overall health status of the backend set.
        /// *  **OK:** All backend servers in the backend set return a status of `OK`.
        /// *  **WARNING:** Half or more of the backend set's backend servers return a status of `OK` and at least one backend server returns a status of `WARNING`, `CRITICAL`, or `UNKNOWN`.
        /// *  **CRITICAL:** Fewer than half of the backend set's backend servers return a status of `OK`.
        /// *  **UNKNOWN:** More than half of the backend set's backend servers return a status of `UNKNOWN`, the system was unable to retrieve metrics, or the backend set does not have a listener attached.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The total number of backend servers in this backend set.  Example: `7`
        /// </summary>
        public readonly int TotalBackendCount;
        /// <summary>
        /// A list of backend servers that are currently in the `UNKNOWN` health state. The list identifies each backend server by IP address and port.  Example: `10.0.0.5:8080`
        /// </summary>
        public readonly ImmutableArray<string> UnknownStateBackendNames;
        /// <summary>
        /// A list of backend servers that are currently in the `WARNING` health state. The list identifies each backend server by IP address and port.  Example: `10.0.0.3:8080`
        /// </summary>
        public readonly ImmutableArray<string> WarningStateBackendNames;

        [OutputConstructor]
        private GetBackendSetHealthResult(
            string backendSetName,

            ImmutableArray<string> criticalStateBackendNames,

            string id,

            string loadBalancerId,

            string status,

            int totalBackendCount,

            ImmutableArray<string> unknownStateBackendNames,

            ImmutableArray<string> warningStateBackendNames)
        {
            BackendSetName = backendSetName;
            CriticalStateBackendNames = criticalStateBackendNames;
            Id = id;
            LoadBalancerId = loadBalancerId;
            Status = status;
            TotalBackendCount = totalBackendCount;
            UnknownStateBackendNames = unknownStateBackendNames;
            WarningStateBackendNames = warningStateBackendNames;
        }
    }
}
