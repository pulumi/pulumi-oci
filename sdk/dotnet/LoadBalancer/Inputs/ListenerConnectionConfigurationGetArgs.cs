// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.LoadBalancer.Inputs
{

    public sealed class ListenerConnectionConfigurationGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("backendTcpProxyProtocolOptions")]
        private InputList<string>? _backendTcpProxyProtocolOptions;

        /// <summary>
        /// (Updatable) An array that represents the PPV2 Options that can be enabled on TCP Listeners. Example: ["PP2_TYPE_AUTHORITY"]
        /// </summary>
        public InputList<string> BackendTcpProxyProtocolOptions
        {
            get => _backendTcpProxyProtocolOptions ?? (_backendTcpProxyProtocolOptions = new InputList<string>());
            set => _backendTcpProxyProtocolOptions = value;
        }

        /// <summary>
        /// (Updatable) The backend TCP Proxy Protocol version.  Example: `1`
        /// </summary>
        [Input("backendTcpProxyProtocolVersion")]
        public Input<int>? BackendTcpProxyProtocolVersion { get; set; }

        /// <summary>
        /// (Updatable) The maximum idle time, in seconds, allowed between two successive receive or two successive send operations between the client and backend servers. A send operation does not reset the timer for receive operations. A receive operation does not reset the timer for send operations.
        /// 
        /// For more information, see [Connection Configuration](https://docs.cloud.oracle.com/iaas/Content/Balance/Reference/connectionreuse.htm#ConnectionConfiguration).
        /// 
        /// Example: `1200`
        /// </summary>
        [Input("idleTimeoutInSeconds", required: true)]
        public Input<string> IdleTimeoutInSeconds { get; set; } = null!;

        public ListenerConnectionConfigurationGetArgs()
        {
        }
        public static new ListenerConnectionConfigurationGetArgs Empty => new ListenerConnectionConfigurationGetArgs();
    }
}
