// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.LogAnalytics
{
    public static class GetLogAnalyticsEntityTopology
    {
        /// <summary>
        /// This data source provides details about a specific Log Analytics Entity Topology resource in Oracle Cloud Infrastructure Log Analytics service.
        /// 
        /// Return a log analytics entity topology collection that contains a set of log analytics entities and a set of relationships between those, for the input source entity.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testLogAnalyticsEntityTopology = Oci.LogAnalytics.GetLogAnalyticsEntityTopology.Invoke(new()
        ///     {
        ///         LogAnalyticsEntityId = testLogAnalyticsEntity.Id,
        ///         Namespace = logAnalyticsEntityTopologyNamespace,
        ///         MetadataEquals = logAnalyticsEntityTopologyMetadataEquals,
        ///         State = logAnalyticsEntityTopologyState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetLogAnalyticsEntityTopologyResult> InvokeAsync(GetLogAnalyticsEntityTopologyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLogAnalyticsEntityTopologyResult>("oci:LogAnalytics/getLogAnalyticsEntityTopology:getLogAnalyticsEntityTopology", args ?? new GetLogAnalyticsEntityTopologyArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Log Analytics Entity Topology resource in Oracle Cloud Infrastructure Log Analytics service.
        /// 
        /// Return a log analytics entity topology collection that contains a set of log analytics entities and a set of relationships between those, for the input source entity.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testLogAnalyticsEntityTopology = Oci.LogAnalytics.GetLogAnalyticsEntityTopology.Invoke(new()
        ///     {
        ///         LogAnalyticsEntityId = testLogAnalyticsEntity.Id,
        ///         Namespace = logAnalyticsEntityTopologyNamespace,
        ///         MetadataEquals = logAnalyticsEntityTopologyMetadataEquals,
        ///         State = logAnalyticsEntityTopologyState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetLogAnalyticsEntityTopologyResult> Invoke(GetLogAnalyticsEntityTopologyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLogAnalyticsEntityTopologyResult>("oci:LogAnalytics/getLogAnalyticsEntityTopology:getLogAnalyticsEntityTopology", args ?? new GetLogAnalyticsEntityTopologyInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Log Analytics Entity Topology resource in Oracle Cloud Infrastructure Log Analytics service.
        /// 
        /// Return a log analytics entity topology collection that contains a set of log analytics entities and a set of relationships between those, for the input source entity.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testLogAnalyticsEntityTopology = Oci.LogAnalytics.GetLogAnalyticsEntityTopology.Invoke(new()
        ///     {
        ///         LogAnalyticsEntityId = testLogAnalyticsEntity.Id,
        ///         Namespace = logAnalyticsEntityTopologyNamespace,
        ///         MetadataEquals = logAnalyticsEntityTopologyMetadataEquals,
        ///         State = logAnalyticsEntityTopologyState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetLogAnalyticsEntityTopologyResult> Invoke(GetLogAnalyticsEntityTopologyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetLogAnalyticsEntityTopologyResult>("oci:LogAnalytics/getLogAnalyticsEntityTopology:getLogAnalyticsEntityTopology", args ?? new GetLogAnalyticsEntityTopologyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLogAnalyticsEntityTopologyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The log analytics entity OCID.
        /// </summary>
        [Input("logAnalyticsEntityId", required: true)]
        public string LogAnalyticsEntityId { get; set; } = null!;

        [Input("metadataEquals")]
        private List<string>? _metadataEquals;

        /// <summary>
        /// A filter to return only log analytics entities whose metadata name, value and type matches the specified string. Each item in the array has the format "{name}:{value}:{type}".  All inputs are case-insensitive.
        /// </summary>
        public List<string> MetadataEquals
        {
            get => _metadataEquals ?? (_metadataEquals = new List<string>());
            set => _metadataEquals = value;
        }

        /// <summary>
        /// The Logging Analytics namespace used for the request.
        /// </summary>
        [Input("namespace", required: true)]
        public string Namespace { get; set; } = null!;

        /// <summary>
        /// A filter to return only those log analytics entities with the specified lifecycle state. The state value is case-insensitive.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetLogAnalyticsEntityTopologyArgs()
        {
        }
        public static new GetLogAnalyticsEntityTopologyArgs Empty => new GetLogAnalyticsEntityTopologyArgs();
    }

    public sealed class GetLogAnalyticsEntityTopologyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The log analytics entity OCID.
        /// </summary>
        [Input("logAnalyticsEntityId", required: true)]
        public Input<string> LogAnalyticsEntityId { get; set; } = null!;

        [Input("metadataEquals")]
        private InputList<string>? _metadataEquals;

        /// <summary>
        /// A filter to return only log analytics entities whose metadata name, value and type matches the specified string. Each item in the array has the format "{name}:{value}:{type}".  All inputs are case-insensitive.
        /// </summary>
        public InputList<string> MetadataEquals
        {
            get => _metadataEquals ?? (_metadataEquals = new InputList<string>());
            set => _metadataEquals = value;
        }

        /// <summary>
        /// The Logging Analytics namespace used for the request.
        /// </summary>
        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        /// <summary>
        /// A filter to return only those log analytics entities with the specified lifecycle state. The state value is case-insensitive.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetLogAnalyticsEntityTopologyInvokeArgs()
        {
        }
        public static new GetLogAnalyticsEntityTopologyInvokeArgs Empty => new GetLogAnalyticsEntityTopologyInvokeArgs();
    }


    [OutputType]
    public sealed class GetLogAnalyticsEntityTopologyResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// An array of entity metadata.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetLogAnalyticsEntityTopologyItemResult> Items;
        public readonly string LogAnalyticsEntityId;
        public readonly ImmutableArray<string> MetadataEquals;
        public readonly string Namespace;
        /// <summary>
        /// The current state of the log analytics entity.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetLogAnalyticsEntityTopologyResult(
            string id,

            ImmutableArray<Outputs.GetLogAnalyticsEntityTopologyItemResult> items,

            string logAnalyticsEntityId,

            ImmutableArray<string> metadataEquals,

            string @namespace,

            string? state)
        {
            Id = id;
            Items = items;
            LogAnalyticsEntityId = logAnalyticsEntityId;
            MetadataEquals = metadataEquals;
            Namespace = @namespace;
            State = state;
        }
    }
}
