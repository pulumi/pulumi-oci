// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.LogAnalytics
{
    public static class GetLogAnalyticsEntityTopology
    {
        /// <summary>
        /// This data source provides details about a specific Log Analytics Entity Topology resource in Oracle Cloud Infrastructure Log Analytics service.
        /// 
        /// Return a log analytics entity topology collection that contains a set of log analytics entities and a set of relationships between those, for the input source entity.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testLogAnalyticsEntityTopology = Output.Create(Oci.LogAnalytics.GetLogAnalyticsEntityTopology.InvokeAsync(new Oci.LogAnalytics.GetLogAnalyticsEntityTopologyArgs
        ///         {
        ///             LogAnalyticsEntityId = oci_log_analytics_log_analytics_entity.Test_log_analytics_entity.Id,
        ///             Namespace = @var.Log_analytics_entity_topology_namespace,
        ///             State = @var.Log_analytics_entity_topology_state,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetLogAnalyticsEntityTopologyResult> InvokeAsync(GetLogAnalyticsEntityTopologyArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetLogAnalyticsEntityTopologyResult>("oci:LogAnalytics/getLogAnalyticsEntityTopology:getLogAnalyticsEntityTopology", args ?? new GetLogAnalyticsEntityTopologyArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Log Analytics Entity Topology resource in Oracle Cloud Infrastructure Log Analytics service.
        /// 
        /// Return a log analytics entity topology collection that contains a set of log analytics entities and a set of relationships between those, for the input source entity.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testLogAnalyticsEntityTopology = Output.Create(Oci.LogAnalytics.GetLogAnalyticsEntityTopology.InvokeAsync(new Oci.LogAnalytics.GetLogAnalyticsEntityTopologyArgs
        ///         {
        ///             LogAnalyticsEntityId = oci_log_analytics_log_analytics_entity.Test_log_analytics_entity.Id,
        ///             Namespace = @var.Log_analytics_entity_topology_namespace,
        ///             State = @var.Log_analytics_entity_topology_state,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetLogAnalyticsEntityTopologyResult> Invoke(GetLogAnalyticsEntityTopologyInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetLogAnalyticsEntityTopologyResult>("oci:LogAnalytics/getLogAnalyticsEntityTopology:getLogAnalyticsEntityTopology", args ?? new GetLogAnalyticsEntityTopologyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLogAnalyticsEntityTopologyArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The log analytics entity OCID.
        /// </summary>
        [Input("logAnalyticsEntityId", required: true)]
        public string LogAnalyticsEntityId { get; set; } = null!;

        /// <summary>
        /// The Logging Analytics namespace used for the request.
        /// </summary>
        [Input("namespace", required: true)]
        public string Namespace { get; set; } = null!;

        /// <summary>
        /// A filter to return only those log analytics entities with the specified lifecycle state. The state value is case-insensitive.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetLogAnalyticsEntityTopologyArgs()
        {
        }
    }

    public sealed class GetLogAnalyticsEntityTopologyInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The log analytics entity OCID.
        /// </summary>
        [Input("logAnalyticsEntityId", required: true)]
        public Input<string> LogAnalyticsEntityId { get; set; } = null!;

        /// <summary>
        /// The Logging Analytics namespace used for the request.
        /// </summary>
        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        /// <summary>
        /// A filter to return only those log analytics entities with the specified lifecycle state. The state value is case-insensitive.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetLogAnalyticsEntityTopologyInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetLogAnalyticsEntityTopologyResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Array of log analytics entity summary.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetLogAnalyticsEntityTopologyItemResult> Items;
        public readonly string LogAnalyticsEntityId;
        public readonly string Namespace;
        /// <summary>
        /// The current state of the log analytics entity.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetLogAnalyticsEntityTopologyResult(
            string id,

            ImmutableArray<Outputs.GetLogAnalyticsEntityTopologyItemResult> items,

            string logAnalyticsEntityId,

            string @namespace,

            string? state)
        {
            Id = id;
            Items = items;
            LogAnalyticsEntityId = logAnalyticsEntityId;
            Namespace = @namespace;
            State = state;
        }
    }
}
