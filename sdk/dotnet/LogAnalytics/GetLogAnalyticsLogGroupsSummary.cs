// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.LogAnalytics
{
    public static class GetLogAnalyticsLogGroupsSummary
    {
        /// <summary>
        /// This data source provides details about a specific Log Analytics Log Groups Summary resource in Oracle Cloud Infrastructure Log Analytics service.
        /// 
        /// Returns the count of log groups in a compartment.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testLogAnalyticsLogGroupsSummary = Oci.LogAnalytics.GetLogAnalyticsLogGroupsSummary.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         Namespace = logAnalyticsLogGroupsSummaryNamespace,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetLogAnalyticsLogGroupsSummaryResult> InvokeAsync(GetLogAnalyticsLogGroupsSummaryArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLogAnalyticsLogGroupsSummaryResult>("oci:LogAnalytics/getLogAnalyticsLogGroupsSummary:getLogAnalyticsLogGroupsSummary", args ?? new GetLogAnalyticsLogGroupsSummaryArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Log Analytics Log Groups Summary resource in Oracle Cloud Infrastructure Log Analytics service.
        /// 
        /// Returns the count of log groups in a compartment.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testLogAnalyticsLogGroupsSummary = Oci.LogAnalytics.GetLogAnalyticsLogGroupsSummary.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         Namespace = logAnalyticsLogGroupsSummaryNamespace,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetLogAnalyticsLogGroupsSummaryResult> Invoke(GetLogAnalyticsLogGroupsSummaryInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLogAnalyticsLogGroupsSummaryResult>("oci:LogAnalytics/getLogAnalyticsLogGroupsSummary:getLogAnalyticsLogGroupsSummary", args ?? new GetLogAnalyticsLogGroupsSummaryInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLogAnalyticsLogGroupsSummaryArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// The Logging Analytics namespace used for the request.
        /// </summary>
        [Input("namespace", required: true)]
        public string Namespace { get; set; } = null!;

        public GetLogAnalyticsLogGroupsSummaryArgs()
        {
        }
        public static new GetLogAnalyticsLogGroupsSummaryArgs Empty => new GetLogAnalyticsLogGroupsSummaryArgs();
    }

    public sealed class GetLogAnalyticsLogGroupsSummaryInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// The Logging Analytics namespace used for the request.
        /// </summary>
        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        public GetLogAnalyticsLogGroupsSummaryInvokeArgs()
        {
        }
        public static new GetLogAnalyticsLogGroupsSummaryInvokeArgs Empty => new GetLogAnalyticsLogGroupsSummaryInvokeArgs();
    }


    [OutputType]
    public sealed class GetLogAnalyticsLogGroupsSummaryResult
    {
        public readonly string CompartmentId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly int LogGroupCount;
        public readonly string Namespace;

        [OutputConstructor]
        private GetLogAnalyticsLogGroupsSummaryResult(
            string compartmentId,

            string id,

            int logGroupCount,

            string @namespace)
        {
            CompartmentId = compartmentId;
            Id = id;
            LogGroupCount = logGroupCount;
            Namespace = @namespace;
        }
    }
}
