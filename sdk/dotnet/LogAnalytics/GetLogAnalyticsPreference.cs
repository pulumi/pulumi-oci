// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.LogAnalytics
{
    public static class GetLogAnalyticsPreference
    {
        /// <summary>
        /// This data source provides details about a specific Log Analytics Preference resource in Oracle Cloud Infrastructure Log Analytics service.
        /// 
        /// Lists the tenant preferences such as DEFAULT_HOMEPAGE and collection properties.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testLogAnalyticsPreference = Oci.LogAnalytics.GetLogAnalyticsPreference.Invoke(new()
        ///     {
        ///         Namespace = @var.Log_analytics_preference_namespace,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetLogAnalyticsPreferenceResult> InvokeAsync(GetLogAnalyticsPreferenceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLogAnalyticsPreferenceResult>("oci:LogAnalytics/getLogAnalyticsPreference:getLogAnalyticsPreference", args ?? new GetLogAnalyticsPreferenceArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Log Analytics Preference resource in Oracle Cloud Infrastructure Log Analytics service.
        /// 
        /// Lists the tenant preferences such as DEFAULT_HOMEPAGE and collection properties.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testLogAnalyticsPreference = Oci.LogAnalytics.GetLogAnalyticsPreference.Invoke(new()
        ///     {
        ///         Namespace = @var.Log_analytics_preference_namespace,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetLogAnalyticsPreferenceResult> Invoke(GetLogAnalyticsPreferenceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLogAnalyticsPreferenceResult>("oci:LogAnalytics/getLogAnalyticsPreference:getLogAnalyticsPreference", args ?? new GetLogAnalyticsPreferenceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLogAnalyticsPreferenceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Logging Analytics namespace used for the request.
        /// </summary>
        [Input("namespace", required: true)]
        public string Namespace { get; set; } = null!;

        public GetLogAnalyticsPreferenceArgs()
        {
        }
        public static new GetLogAnalyticsPreferenceArgs Empty => new GetLogAnalyticsPreferenceArgs();
    }

    public sealed class GetLogAnalyticsPreferenceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Logging Analytics namespace used for the request.
        /// </summary>
        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        public GetLogAnalyticsPreferenceInvokeArgs()
        {
        }
        public static new GetLogAnalyticsPreferenceInvokeArgs Empty => new GetLogAnalyticsPreferenceInvokeArgs();
    }


    [OutputType]
    public sealed class GetLogAnalyticsPreferenceResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// An array of tenant preferences.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetLogAnalyticsPreferenceItemResult> Items;
        public readonly string Namespace;

        [OutputConstructor]
        private GetLogAnalyticsPreferenceResult(
            string id,

            ImmutableArray<Outputs.GetLogAnalyticsPreferenceItemResult> items,

            string @namespace)
        {
            Id = id;
            Items = items;
            Namespace = @namespace;
        }
    }
}
