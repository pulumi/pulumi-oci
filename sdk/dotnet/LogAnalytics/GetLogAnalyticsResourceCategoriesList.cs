// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.LogAnalytics
{
    public static class GetLogAnalyticsResourceCategoriesList
    {
        /// <summary>
        /// This data source provides details about Resource Categories in Oracle Cloud Infrastructure Log Analytics service.
        /// 
        /// Returns a list of resources and their category assignments.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testLogAnalyticsResourceCategoriesList = Oci.LogAnalytics.GetLogAnalyticsResourceCategoriesList.Invoke(new()
        ///     {
        ///         Namespace = logAnalyticsResourceCategoriesListNamespace,
        ///         CompartmentId = logAnalyticsResourceCategoriesCompartmentId,
        ///         ResourceIds = logAnalyticsResourceCategoriesListResourceIds,
        ///         ResourceTypes = logAnalyticsResourceCategoriesListResourceTypes,
        ///         ResourceCategories = logAnalyticsResourceCategoriesListResourceCategories,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetLogAnalyticsResourceCategoriesListResult> InvokeAsync(GetLogAnalyticsResourceCategoriesListArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLogAnalyticsResourceCategoriesListResult>("oci:LogAnalytics/getLogAnalyticsResourceCategoriesList:getLogAnalyticsResourceCategoriesList", args ?? new GetLogAnalyticsResourceCategoriesListArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about Resource Categories in Oracle Cloud Infrastructure Log Analytics service.
        /// 
        /// Returns a list of resources and their category assignments.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testLogAnalyticsResourceCategoriesList = Oci.LogAnalytics.GetLogAnalyticsResourceCategoriesList.Invoke(new()
        ///     {
        ///         Namespace = logAnalyticsResourceCategoriesListNamespace,
        ///         CompartmentId = logAnalyticsResourceCategoriesCompartmentId,
        ///         ResourceIds = logAnalyticsResourceCategoriesListResourceIds,
        ///         ResourceTypes = logAnalyticsResourceCategoriesListResourceTypes,
        ///         ResourceCategories = logAnalyticsResourceCategoriesListResourceCategories,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetLogAnalyticsResourceCategoriesListResult> Invoke(GetLogAnalyticsResourceCategoriesListInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLogAnalyticsResourceCategoriesListResult>("oci:LogAnalytics/getLogAnalyticsResourceCategoriesList:getLogAnalyticsResourceCategoriesList", args ?? new GetLogAnalyticsResourceCategoriesListInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about Resource Categories in Oracle Cloud Infrastructure Log Analytics service.
        /// 
        /// Returns a list of resources and their category assignments.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testLogAnalyticsResourceCategoriesList = Oci.LogAnalytics.GetLogAnalyticsResourceCategoriesList.Invoke(new()
        ///     {
        ///         Namespace = logAnalyticsResourceCategoriesListNamespace,
        ///         CompartmentId = logAnalyticsResourceCategoriesCompartmentId,
        ///         ResourceIds = logAnalyticsResourceCategoriesListResourceIds,
        ///         ResourceTypes = logAnalyticsResourceCategoriesListResourceTypes,
        ///         ResourceCategories = logAnalyticsResourceCategoriesListResourceCategories,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetLogAnalyticsResourceCategoriesListResult> Invoke(GetLogAnalyticsResourceCategoriesListInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetLogAnalyticsResourceCategoriesListResult>("oci:LogAnalytics/getLogAnalyticsResourceCategoriesList:getLogAnalyticsResourceCategoriesList", args ?? new GetLogAnalyticsResourceCategoriesListInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLogAnalyticsResourceCategoriesListArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The compartment id in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        /// <summary>
        /// The Logging Analytics namespace used for the request.
        /// </summary>
        [Input("namespace", required: true)]
        public string Namespace { get; set; } = null!;

        /// <summary>
        /// A comma-separated list of category names used for filtering
        /// </summary>
        [Input("resourceCategories")]
        public string? ResourceCategories { get; set; }

        /// <summary>
        /// A comma-separated list of resource unique identifiers used for filtering. Only resources with matching unique identifiers will be returned.
        /// </summary>
        [Input("resourceIds")]
        public string? ResourceIds { get; set; }

        /// <summary>
        /// A comma-separated list of resource types used for filtering. Only resources of the types specified will be returned. Examples include SOURCE, PARSER, LOOKUP, etc.
        /// </summary>
        [Input("resourceTypes")]
        public string? ResourceTypes { get; set; }

        public GetLogAnalyticsResourceCategoriesListArgs()
        {
        }
        public static new GetLogAnalyticsResourceCategoriesListArgs Empty => new GetLogAnalyticsResourceCategoriesListArgs();
    }

    public sealed class GetLogAnalyticsResourceCategoriesListInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The compartment id in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// The Logging Analytics namespace used for the request.
        /// </summary>
        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        /// <summary>
        /// A comma-separated list of category names used for filtering
        /// </summary>
        [Input("resourceCategories")]
        public Input<string>? ResourceCategories { get; set; }

        /// <summary>
        /// A comma-separated list of resource unique identifiers used for filtering. Only resources with matching unique identifiers will be returned.
        /// </summary>
        [Input("resourceIds")]
        public Input<string>? ResourceIds { get; set; }

        /// <summary>
        /// A comma-separated list of resource types used for filtering. Only resources of the types specified will be returned. Examples include SOURCE, PARSER, LOOKUP, etc.
        /// </summary>
        [Input("resourceTypes")]
        public Input<string>? ResourceTypes { get; set; }

        public GetLogAnalyticsResourceCategoriesListInvokeArgs()
        {
        }
        public static new GetLogAnalyticsResourceCategoriesListInvokeArgs Empty => new GetLogAnalyticsResourceCategoriesListInvokeArgs();
    }


    [OutputType]
    public sealed class GetLogAnalyticsResourceCategoriesListResult
    {
        /// <summary>
        /// An array of categories. The array contents include detailed information about the distinct set of categories assigned to all the listed resources under items.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetLogAnalyticsResourceCategoriesListCategoryResult> Categories;
        /// <summary>
        /// The compartment ID of the resource, if applicable.
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A list of resources and their category assignments
        /// </summary>
        public readonly ImmutableArray<Outputs.GetLogAnalyticsResourceCategoriesListItemResult> Items;
        public readonly string Namespace;
        public readonly string? ResourceCategories;
        public readonly string? ResourceIds;
        public readonly string? ResourceTypes;

        [OutputConstructor]
        private GetLogAnalyticsResourceCategoriesListResult(
            ImmutableArray<Outputs.GetLogAnalyticsResourceCategoriesListCategoryResult> categories,

            string? compartmentId,

            string id,

            ImmutableArray<Outputs.GetLogAnalyticsResourceCategoriesListItemResult> items,

            string @namespace,

            string? resourceCategories,

            string? resourceIds,

            string? resourceTypes)
        {
            Categories = categories;
            CompartmentId = compartmentId;
            Id = id;
            Items = items;
            Namespace = @namespace;
            ResourceCategories = resourceCategories;
            ResourceIds = resourceIds;
            ResourceTypes = resourceTypes;
        }
    }
}
