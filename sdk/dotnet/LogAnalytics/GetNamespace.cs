// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.LogAnalytics
{
    public static class GetNamespace
    {
        /// <summary>
        /// This data source provides details about a specific Namespace resource in Oracle Cloud Infrastructure Log Analytics service.
        /// 
        /// This API gets the namespace details of a tenancy already onboarded in Logging Analytics Application
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testNamespace = Oci.LogAnalytics.GetNamespace.Invoke(new()
        ///     {
        ///         Namespace = namespaceNamespace,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetNamespaceResult> InvokeAsync(GetNamespaceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNamespaceResult>("oci:LogAnalytics/getNamespace:getNamespace", args ?? new GetNamespaceArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Namespace resource in Oracle Cloud Infrastructure Log Analytics service.
        /// 
        /// This API gets the namespace details of a tenancy already onboarded in Logging Analytics Application
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testNamespace = Oci.LogAnalytics.GetNamespace.Invoke(new()
        ///     {
        ///         Namespace = namespaceNamespace,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNamespaceResult> Invoke(GetNamespaceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNamespaceResult>("oci:LogAnalytics/getNamespace:getNamespace", args ?? new GetNamespaceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNamespaceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Logging Analytics namespace used for the request.
        /// </summary>
        [Input("namespace", required: true)]
        public string Namespace { get; set; } = null!;

        public GetNamespaceArgs()
        {
        }
        public static new GetNamespaceArgs Empty => new GetNamespaceArgs();
    }

    public sealed class GetNamespaceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Logging Analytics namespace used for the request.
        /// </summary>
        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        public GetNamespaceInvokeArgs()
        {
        }
        public static new GetNamespaceInvokeArgs Empty => new GetNamespaceInvokeArgs();
    }


    [OutputType]
    public sealed class GetNamespaceResult
    {
        /// <summary>
        /// The is the tenancy ID
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// This indicates if the tenancy is onboarded to Logging Analytics
        /// </summary>
        public readonly bool IsOnboarded;
        /// <summary>
        /// This is the namespace name of a tenancy
        /// </summary>
        public readonly string Namespace;

        [OutputConstructor]
        private GetNamespaceResult(
            string compartmentId,

            string id,

            bool isOnboarded,

            string @namespace)
        {
            CompartmentId = compartmentId;
            Id = id;
            IsOnboarded = isOnboarded;
            Namespace = @namespace;
        }
    }
}
