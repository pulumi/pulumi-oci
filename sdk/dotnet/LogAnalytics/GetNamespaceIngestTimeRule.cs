// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.LogAnalytics
{
    public static class GetNamespaceIngestTimeRule
    {
        /// <summary>
        /// This data source provides details about a specific Namespace Ingest Time Rule resource in Oracle Cloud Infrastructure Log Analytics service.
        /// 
        /// Gets detailed information about the specified ingest time rule such as description, defined tags, and free-form tags.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testNamespaceIngestTimeRule = Oci.LogAnalytics.GetNamespaceIngestTimeRule.Invoke(new()
        ///     {
        ///         IngestTimeRuleId = testRule.Id,
        ///         Namespace = namespaceIngestTimeRuleNamespace,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetNamespaceIngestTimeRuleResult> InvokeAsync(GetNamespaceIngestTimeRuleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNamespaceIngestTimeRuleResult>("oci:LogAnalytics/getNamespaceIngestTimeRule:getNamespaceIngestTimeRule", args ?? new GetNamespaceIngestTimeRuleArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Namespace Ingest Time Rule resource in Oracle Cloud Infrastructure Log Analytics service.
        /// 
        /// Gets detailed information about the specified ingest time rule such as description, defined tags, and free-form tags.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testNamespaceIngestTimeRule = Oci.LogAnalytics.GetNamespaceIngestTimeRule.Invoke(new()
        ///     {
        ///         IngestTimeRuleId = testRule.Id,
        ///         Namespace = namespaceIngestTimeRuleNamespace,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNamespaceIngestTimeRuleResult> Invoke(GetNamespaceIngestTimeRuleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNamespaceIngestTimeRuleResult>("oci:LogAnalytics/getNamespaceIngestTimeRule:getNamespaceIngestTimeRule", args ?? new GetNamespaceIngestTimeRuleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNamespaceIngestTimeRuleArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique ocid of the ingest time rule.
        /// </summary>
        [Input("ingestTimeRuleId", required: true)]
        public string IngestTimeRuleId { get; set; } = null!;

        /// <summary>
        /// The Logging Analytics namespace used for the request.
        /// </summary>
        [Input("namespace", required: true)]
        public string Namespace { get; set; } = null!;

        public GetNamespaceIngestTimeRuleArgs()
        {
        }
        public static new GetNamespaceIngestTimeRuleArgs Empty => new GetNamespaceIngestTimeRuleArgs();
    }

    public sealed class GetNamespaceIngestTimeRuleInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique ocid of the ingest time rule.
        /// </summary>
        [Input("ingestTimeRuleId", required: true)]
        public Input<string> IngestTimeRuleId { get; set; } = null!;

        /// <summary>
        /// The Logging Analytics namespace used for the request.
        /// </summary>
        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        public GetNamespaceIngestTimeRuleInvokeArgs()
        {
        }
        public static new GetNamespaceIngestTimeRuleInvokeArgs Empty => new GetNamespaceIngestTimeRuleInvokeArgs();
    }


    [OutputType]
    public sealed class GetNamespaceIngestTimeRuleResult
    {
        /// <summary>
        /// The action(s) to be performed if the ingest time rule condition(s) are satisfied.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNamespaceIngestTimeRuleActionResult> Actions;
        /// <summary>
        /// Compartment Identifier [OCID] (&lt;https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)&gt;.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The condition(s) to evaluate for an ingest time rule.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNamespaceIngestTimeRuleConditionResult> Conditions;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// Description for this resource.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The ingest time rule display name.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The log analytics entity OCID. This ID is a reference used by log analytics features and it represents a resource that is provisioned and managed by the customer on their premises or on the cloud.
        /// </summary>
        public readonly string Id;
        public readonly string IngestTimeRuleId;
        /// <summary>
        /// A flag indicating whether or not the ingest time rule is enabled.
        /// </summary>
        public readonly bool IsEnabled;
        /// <summary>
        /// The namespace of the extracted metric. A valid value starts with an alphabetical character and includes only alphanumeric characters and underscores (_).
        /// </summary>
        public readonly string Namespace;
        /// <summary>
        /// The current state of the ingest time rule.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The date and time the resource was created, in the format defined by RFC3339.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The date and time the resource was last updated, in the format defined by RFC3339.
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetNamespaceIngestTimeRuleResult(
            ImmutableArray<Outputs.GetNamespaceIngestTimeRuleActionResult> actions,

            string compartmentId,

            ImmutableArray<Outputs.GetNamespaceIngestTimeRuleConditionResult> conditions,

            ImmutableDictionary<string, string> definedTags,

            string description,

            string displayName,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            string ingestTimeRuleId,

            bool isEnabled,

            string @namespace,

            string state,

            string timeCreated,

            string timeUpdated)
        {
            Actions = actions;
            CompartmentId = compartmentId;
            Conditions = conditions;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            IngestTimeRuleId = ingestTimeRuleId;
            IsEnabled = isEnabled;
            Namespace = @namespace;
            State = state;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
