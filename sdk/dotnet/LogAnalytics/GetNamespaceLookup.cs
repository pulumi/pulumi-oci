// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.LogAnalytics
{
    public static class GetNamespaceLookup
    {
        /// <summary>
        /// This data source provides details about a specific Namespace Lookup resource in Oracle Cloud Infrastructure Log Analytics service.
        /// 
        /// Gets detailed information about the lookup with the specified name.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testNamespaceLookup = Oci.LogAnalytics.GetNamespaceLookup.Invoke(new()
        ///     {
        ///         LookupName = namespaceLookupLookupName,
        ///         Namespace = namespaceLookupNamespace,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetNamespaceLookupResult> InvokeAsync(GetNamespaceLookupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNamespaceLookupResult>("oci:LogAnalytics/getNamespaceLookup:getNamespaceLookup", args ?? new GetNamespaceLookupArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Namespace Lookup resource in Oracle Cloud Infrastructure Log Analytics service.
        /// 
        /// Gets detailed information about the lookup with the specified name.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testNamespaceLookup = Oci.LogAnalytics.GetNamespaceLookup.Invoke(new()
        ///     {
        ///         LookupName = namespaceLookupLookupName,
        ///         Namespace = namespaceLookupNamespace,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNamespaceLookupResult> Invoke(GetNamespaceLookupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNamespaceLookupResult>("oci:LogAnalytics/getNamespaceLookup:getNamespaceLookup", args ?? new GetNamespaceLookupInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Namespace Lookup resource in Oracle Cloud Infrastructure Log Analytics service.
        /// 
        /// Gets detailed information about the lookup with the specified name.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testNamespaceLookup = Oci.LogAnalytics.GetNamespaceLookup.Invoke(new()
        ///     {
        ///         LookupName = namespaceLookupLookupName,
        ///         Namespace = namespaceLookupNamespace,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNamespaceLookupResult> Invoke(GetNamespaceLookupInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNamespaceLookupResult>("oci:LogAnalytics/getNamespaceLookup:getNamespaceLookup", args ?? new GetNamespaceLookupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNamespaceLookupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the lookup to operate on.
        /// </summary>
        [Input("lookupName", required: true)]
        public string LookupName { get; set; } = null!;

        /// <summary>
        /// The Logging Analytics namespace used for the request.
        /// </summary>
        [Input("namespace", required: true)]
        public string Namespace { get; set; } = null!;

        public GetNamespaceLookupArgs()
        {
        }
        public static new GetNamespaceLookupArgs Empty => new GetNamespaceLookupArgs();
    }

    public sealed class GetNamespaceLookupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the lookup to operate on.
        /// </summary>
        [Input("lookupName", required: true)]
        public Input<string> LookupName { get; set; } = null!;

        /// <summary>
        /// The Logging Analytics namespace used for the request.
        /// </summary>
        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        public GetNamespaceLookupInvokeArgs()
        {
        }
        public static new GetNamespaceLookupInvokeArgs Empty => new GetNamespaceLookupInvokeArgs();
    }


    [OutputType]
    public sealed class GetNamespaceLookupResult
    {
        /// <summary>
        /// The active edit version.
        /// </summary>
        public readonly string ActiveEditVersion;
        /// <summary>
        /// The canonical link.
        /// </summary>
        public readonly string CanonicalLink;
        /// <summary>
        /// An array of categories assigned to this lookup. The isSystem flag denotes if each category assignment is user-created or Oracle-defined.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNamespaceLookupCategoryResult> Categories;
        public readonly string CharEncoding;
        /// <summary>
        /// Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The default match value.
        /// </summary>
        public readonly string DefaultMatchValue;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// The lookup description.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The edit version.
        /// </summary>
        public readonly string EditVersion;
        /// <summary>
        /// The lookup fields.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNamespaceLookupFieldResult> Fields;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The log analytics entity OCID. This ID is a reference used by log analytics features and it represents a resource that is provisioned and managed by the customer on their premises or on the cloud.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A flag indicating if the lookup is custom (user-defined) or built in.
        /// </summary>
        public readonly string IsBuiltIn;
        /// <summary>
        /// A flag indicating if the lookup is hidden or not.  A hidden lookup will not be returned in list operations by default.
        /// </summary>
        public readonly bool IsHidden;
        /// <summary>
        /// The lookup display name.
        /// </summary>
        public readonly string LookupDisplayName;
        /// <summary>
        /// The lookup OCID.
        /// </summary>
        public readonly string LookupId;
        /// <summary>
        /// The lookup name.
        /// </summary>
        public readonly string LookupName;
        /// <summary>
        /// The lookup reference as an integer.
        /// </summary>
        public readonly string LookupReference;
        /// <summary>
        /// The lookup reference as a string.
        /// </summary>
        public readonly string LookupReferenceString;
        public readonly string MaxMatches;
        public readonly string Namespace;
        /// <summary>
        /// AutoLookups
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNamespaceLookupReferringSourceResult> ReferringSources;
        public readonly string RegisterLookupFile;
        /// <summary>
        /// StatusSummary
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNamespaceLookupStatusSummaryResult> StatusSummaries;
        /// <summary>
        /// The last updated date.
        /// </summary>
        public readonly string TimeUpdated;
        /// <summary>
        /// The lookup type. Valid values are Lookup, Dictionary or Module.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetNamespaceLookupResult(
            string activeEditVersion,

            string canonicalLink,

            ImmutableArray<Outputs.GetNamespaceLookupCategoryResult> categories,

            string charEncoding,

            string compartmentId,

            string defaultMatchValue,

            ImmutableDictionary<string, string> definedTags,

            string description,

            string editVersion,

            ImmutableArray<Outputs.GetNamespaceLookupFieldResult> fields,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            string isBuiltIn,

            bool isHidden,

            string lookupDisplayName,

            string lookupId,

            string lookupName,

            string lookupReference,

            string lookupReferenceString,

            string maxMatches,

            string @namespace,

            ImmutableArray<Outputs.GetNamespaceLookupReferringSourceResult> referringSources,

            string registerLookupFile,

            ImmutableArray<Outputs.GetNamespaceLookupStatusSummaryResult> statusSummaries,

            string timeUpdated,

            string type)
        {
            ActiveEditVersion = activeEditVersion;
            CanonicalLink = canonicalLink;
            Categories = categories;
            CharEncoding = charEncoding;
            CompartmentId = compartmentId;
            DefaultMatchValue = defaultMatchValue;
            DefinedTags = definedTags;
            Description = description;
            EditVersion = editVersion;
            Fields = fields;
            FreeformTags = freeformTags;
            Id = id;
            IsBuiltIn = isBuiltIn;
            IsHidden = isHidden;
            LookupDisplayName = lookupDisplayName;
            LookupId = lookupId;
            LookupName = lookupName;
            LookupReference = lookupReference;
            LookupReferenceString = lookupReferenceString;
            MaxMatches = maxMatches;
            Namespace = @namespace;
            ReferringSources = referringSources;
            RegisterLookupFile = registerLookupFile;
            StatusSummaries = statusSummaries;
            TimeUpdated = timeUpdated;
            Type = type;
        }
    }
}
