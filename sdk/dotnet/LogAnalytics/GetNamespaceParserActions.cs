// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.LogAnalytics
{
    public static class GetNamespaceParserActions
    {
        /// <summary>
        /// This data source provides the list of Namespace Parser Actions in Oracle Cloud Infrastructure Log Analytics service.
        /// 
        /// Returns a list of parser actions. You may limit the number of results and provide sorting order.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testNamespaceParserActions = Oci.LogAnalytics.GetNamespaceParserActions.Invoke(new()
        ///     {
        ///         Namespace = namespaceParserActionNamespace,
        ///         ActionDisplayText = namespaceParserActionActionDisplayText,
        ///         Name = namespaceParserActionName,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetNamespaceParserActionsResult> InvokeAsync(GetNamespaceParserActionsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNamespaceParserActionsResult>("oci:LogAnalytics/getNamespaceParserActions:getNamespaceParserActions", args ?? new GetNamespaceParserActionsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Namespace Parser Actions in Oracle Cloud Infrastructure Log Analytics service.
        /// 
        /// Returns a list of parser actions. You may limit the number of results and provide sorting order.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testNamespaceParserActions = Oci.LogAnalytics.GetNamespaceParserActions.Invoke(new()
        ///     {
        ///         Namespace = namespaceParserActionNamespace,
        ///         ActionDisplayText = namespaceParserActionActionDisplayText,
        ///         Name = namespaceParserActionName,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNamespaceParserActionsResult> Invoke(GetNamespaceParserActionsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNamespaceParserActionsResult>("oci:LogAnalytics/getNamespaceParserActions:getNamespaceParserActions", args ?? new GetNamespaceParserActionsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Namespace Parser Actions in Oracle Cloud Infrastructure Log Analytics service.
        /// 
        /// Returns a list of parser actions. You may limit the number of results and provide sorting order.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testNamespaceParserActions = Oci.LogAnalytics.GetNamespaceParserActions.Invoke(new()
        ///     {
        ///         Namespace = namespaceParserActionNamespace,
        ///         ActionDisplayText = namespaceParserActionActionDisplayText,
        ///         Name = namespaceParserActionName,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNamespaceParserActionsResult> Invoke(GetNamespaceParserActionsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNamespaceParserActionsResult>("oci:LogAnalytics/getNamespaceParserActions:getNamespaceParserActions", args ?? new GetNamespaceParserActionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNamespaceParserActionsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The parser action display text used for filtering.
        /// </summary>
        [Input("actionDisplayText")]
        public string? ActionDisplayText { get; set; }

        [Input("filters")]
        private List<Inputs.GetNamespaceParserActionsFilterArgs>? _filters;
        public List<Inputs.GetNamespaceParserActionsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetNamespaceParserActionsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The parser action name used for filtering.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// The Logging Analytics namespace used for the request.
        /// </summary>
        [Input("namespace", required: true)]
        public string Namespace { get; set; } = null!;

        public GetNamespaceParserActionsArgs()
        {
        }
        public static new GetNamespaceParserActionsArgs Empty => new GetNamespaceParserActionsArgs();
    }

    public sealed class GetNamespaceParserActionsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The parser action display text used for filtering.
        /// </summary>
        [Input("actionDisplayText")]
        public Input<string>? ActionDisplayText { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetNamespaceParserActionsFilterInputArgs>? _filters;
        public InputList<Inputs.GetNamespaceParserActionsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetNamespaceParserActionsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The parser action name used for filtering.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The Logging Analytics namespace used for the request.
        /// </summary>
        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        public GetNamespaceParserActionsInvokeArgs()
        {
        }
        public static new GetNamespaceParserActionsInvokeArgs Empty => new GetNamespaceParserActionsInvokeArgs();
    }


    [OutputType]
    public sealed class GetNamespaceParserActionsResult
    {
        public readonly string? ActionDisplayText;
        public readonly ImmutableArray<Outputs.GetNamespaceParserActionsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The parser action name.
        /// </summary>
        public readonly string? Name;
        public readonly string Namespace;
        /// <summary>
        /// The list of parser_action_summary_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNamespaceParserActionsParserActionSummaryCollectionResult> ParserActionSummaryCollections;

        [OutputConstructor]
        private GetNamespaceParserActionsResult(
            string? actionDisplayText,

            ImmutableArray<Outputs.GetNamespaceParserActionsFilterResult> filters,

            string id,

            string? name,

            string @namespace,

            ImmutableArray<Outputs.GetNamespaceParserActionsParserActionSummaryCollectionResult> parserActionSummaryCollections)
        {
            ActionDisplayText = actionDisplayText;
            Filters = filters;
            Id = id;
            Name = name;
            Namespace = @namespace;
            ParserActionSummaryCollections = parserActionSummaryCollections;
        }
    }
}
