// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.LogAnalytics
{
    public static class GetNamespacePropertiesMetadata
    {
        /// <summary>
        /// This data source provides the list of Namespace Properties Metadata in Oracle Cloud Infrastructure Log Analytics service.
        /// 
        /// Returns a list of properties along with their metadata.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testNamespacePropertiesMetadata = Oci.LogAnalytics.GetNamespacePropertiesMetadata.Invoke(new()
        ///     {
        ///         Namespace = @var.Namespace_properties_metadata_namespace,
        ///         Constraints = @var.Namespace_properties_metadata_constraints,
        ///         DisplayText = @var.Namespace_properties_metadata_display_text,
        ///         Level = @var.Namespace_properties_metadata_level,
        ///         Name = @var.Namespace_properties_metadata_name,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetNamespacePropertiesMetadataResult> InvokeAsync(GetNamespacePropertiesMetadataArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNamespacePropertiesMetadataResult>("oci:LogAnalytics/getNamespacePropertiesMetadata:getNamespacePropertiesMetadata", args ?? new GetNamespacePropertiesMetadataArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Namespace Properties Metadata in Oracle Cloud Infrastructure Log Analytics service.
        /// 
        /// Returns a list of properties along with their metadata.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testNamespacePropertiesMetadata = Oci.LogAnalytics.GetNamespacePropertiesMetadata.Invoke(new()
        ///     {
        ///         Namespace = @var.Namespace_properties_metadata_namespace,
        ///         Constraints = @var.Namespace_properties_metadata_constraints,
        ///         DisplayText = @var.Namespace_properties_metadata_display_text,
        ///         Level = @var.Namespace_properties_metadata_level,
        ///         Name = @var.Namespace_properties_metadata_name,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetNamespacePropertiesMetadataResult> Invoke(GetNamespacePropertiesMetadataInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNamespacePropertiesMetadataResult>("oci:LogAnalytics/getNamespacePropertiesMetadata:getNamespacePropertiesMetadata", args ?? new GetNamespacePropertiesMetadataInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNamespacePropertiesMetadataArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The constraints that apply to the properties at a certain level.
        /// </summary>
        [Input("constraints")]
        public string? Constraints { get; set; }

        /// <summary>
        /// The property display text used for filtering. Only properties matching the specified display name or description will be returned.
        /// </summary>
        [Input("displayText")]
        public string? DisplayText { get; set; }

        [Input("filters")]
        private List<Inputs.GetNamespacePropertiesMetadataFilterArgs>? _filters;
        public List<Inputs.GetNamespacePropertiesMetadataFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetNamespacePropertiesMetadataFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The level for which applicable properties are to be listed.
        /// </summary>
        [Input("level")]
        public string? Level { get; set; }

        /// <summary>
        /// The property name used for filtering.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// The Logging Analytics namespace used for the request.
        /// </summary>
        [Input("namespace", required: true)]
        public string Namespace { get; set; } = null!;

        public GetNamespacePropertiesMetadataArgs()
        {
        }
        public static new GetNamespacePropertiesMetadataArgs Empty => new GetNamespacePropertiesMetadataArgs();
    }

    public sealed class GetNamespacePropertiesMetadataInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The constraints that apply to the properties at a certain level.
        /// </summary>
        [Input("constraints")]
        public Input<string>? Constraints { get; set; }

        /// <summary>
        /// The property display text used for filtering. Only properties matching the specified display name or description will be returned.
        /// </summary>
        [Input("displayText")]
        public Input<string>? DisplayText { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetNamespacePropertiesMetadataFilterInputArgs>? _filters;
        public InputList<Inputs.GetNamespacePropertiesMetadataFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetNamespacePropertiesMetadataFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The level for which applicable properties are to be listed.
        /// </summary>
        [Input("level")]
        public Input<string>? Level { get; set; }

        /// <summary>
        /// The property name used for filtering.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The Logging Analytics namespace used for the request.
        /// </summary>
        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        public GetNamespacePropertiesMetadataInvokeArgs()
        {
        }
        public static new GetNamespacePropertiesMetadataInvokeArgs Empty => new GetNamespacePropertiesMetadataInvokeArgs();
    }


    [OutputType]
    public sealed class GetNamespacePropertiesMetadataResult
    {
        /// <summary>
        /// A string representation of constraints that apply at this level. For example, a property defined at SOURCE level could further be applicable only for SOURCE_TYPE:database_sql.
        /// </summary>
        public readonly string? Constraints;
        public readonly string? DisplayText;
        public readonly ImmutableArray<Outputs.GetNamespacePropertiesMetadataFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? Level;
        /// <summary>
        /// The property name.
        /// </summary>
        public readonly string? Name;
        public readonly string Namespace;
        /// <summary>
        /// The list of property_metadata_summary_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNamespacePropertiesMetadataPropertyMetadataSummaryCollectionResult> PropertyMetadataSummaryCollections;

        [OutputConstructor]
        private GetNamespacePropertiesMetadataResult(
            string? constraints,

            string? displayText,

            ImmutableArray<Outputs.GetNamespacePropertiesMetadataFilterResult> filters,

            string id,

            string? level,

            string? name,

            string @namespace,

            ImmutableArray<Outputs.GetNamespacePropertiesMetadataPropertyMetadataSummaryCollectionResult> propertyMetadataSummaryCollections)
        {
            Constraints = constraints;
            DisplayText = displayText;
            Filters = filters;
            Id = id;
            Level = level;
            Name = name;
            Namespace = @namespace;
            PropertyMetadataSummaryCollections = propertyMetadataSummaryCollections;
        }
    }
}
