// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.LogAnalytics
{
    public static class GetNamespaceRules
    {
        /// <summary>
        /// This data source provides the list of Namespace Rules in Oracle Cloud Infrastructure Log Analytics service.
        /// 
        /// Returns a list of ingest time rules and scheduled tasks in a compartment. You may limit the number of items returned, provide sorting options, and filter the results.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testNamespaceRules = Oci.LogAnalytics.GetNamespaceRules.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         Namespace = namespaceRuleNamespace,
        ///         DisplayName = namespaceRuleDisplayName,
        ///         Kind = namespaceRuleKind,
        ///         State = namespaceRuleState,
        ///         TargetService = namespaceRuleTargetService,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetNamespaceRulesResult> InvokeAsync(GetNamespaceRulesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNamespaceRulesResult>("oci:LogAnalytics/getNamespaceRules:getNamespaceRules", args ?? new GetNamespaceRulesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Namespace Rules in Oracle Cloud Infrastructure Log Analytics service.
        /// 
        /// Returns a list of ingest time rules and scheduled tasks in a compartment. You may limit the number of items returned, provide sorting options, and filter the results.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testNamespaceRules = Oci.LogAnalytics.GetNamespaceRules.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         Namespace = namespaceRuleNamespace,
        ///         DisplayName = namespaceRuleDisplayName,
        ///         Kind = namespaceRuleKind,
        ///         State = namespaceRuleState,
        ///         TargetService = namespaceRuleTargetService,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNamespaceRulesResult> Invoke(GetNamespaceRulesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNamespaceRulesResult>("oci:LogAnalytics/getNamespaceRules:getNamespaceRules", args ?? new GetNamespaceRulesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNamespaceRulesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return rules whose displayName matches in whole or in part the specified value. The match is case-insensitive.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetNamespaceRulesFilterArgs>? _filters;
        public List<Inputs.GetNamespaceRulesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetNamespaceRulesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The rule kind used for filtering. Only rules of the specified kind will be returned.
        /// </summary>
        [Input("kind")]
        public string? Kind { get; set; }

        /// <summary>
        /// The Logging Analytics namespace used for the request.
        /// </summary>
        [Input("namespace", required: true)]
        public string Namespace { get; set; } = null!;

        /// <summary>
        /// The rule lifecycle state used for filtering. Currently supported values are ACTIVE and DELETED.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        /// <summary>
        /// The target service to use for filtering.
        /// </summary>
        [Input("targetService")]
        public string? TargetService { get; set; }

        public GetNamespaceRulesArgs()
        {
        }
        public static new GetNamespaceRulesArgs Empty => new GetNamespaceRulesArgs();
    }

    public sealed class GetNamespaceRulesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return rules whose displayName matches in whole or in part the specified value. The match is case-insensitive.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetNamespaceRulesFilterInputArgs>? _filters;
        public InputList<Inputs.GetNamespaceRulesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetNamespaceRulesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The rule kind used for filtering. Only rules of the specified kind will be returned.
        /// </summary>
        [Input("kind")]
        public Input<string>? Kind { get; set; }

        /// <summary>
        /// The Logging Analytics namespace used for the request.
        /// </summary>
        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        /// <summary>
        /// The rule lifecycle state used for filtering. Currently supported values are ACTIVE and DELETED.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The target service to use for filtering.
        /// </summary>
        [Input("targetService")]
        public Input<string>? TargetService { get; set; }

        public GetNamespaceRulesInvokeArgs()
        {
        }
        public static new GetNamespaceRulesInvokeArgs Empty => new GetNamespaceRulesInvokeArgs();
    }


    [OutputType]
    public sealed class GetNamespaceRulesResult
    {
        /// <summary>
        /// Compartment Identifier [OCID] (&lt;https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)&gt;.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The ingest time rule or scheduled task display name.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetNamespaceRulesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The kind of rule - either an ingest time rule or a scheduled task.
        /// </summary>
        public readonly string? Kind;
        public readonly string Namespace;
        /// <summary>
        /// The list of rule_summary_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNamespaceRulesRuleSummaryCollectionResult> RuleSummaryCollections;
        /// <summary>
        /// The current state of the logging analytics rule.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// The target service.
        /// </summary>
        public readonly string? TargetService;

        [OutputConstructor]
        private GetNamespaceRulesResult(
            string compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetNamespaceRulesFilterResult> filters,

            string id,

            string? kind,

            string @namespace,

            ImmutableArray<Outputs.GetNamespaceRulesRuleSummaryCollectionResult> ruleSummaryCollections,

            string? state,

            string? targetService)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            Kind = kind;
            Namespace = @namespace;
            RuleSummaryCollections = ruleSummaryCollections;
            State = state;
            TargetService = targetService;
        }
    }
}
