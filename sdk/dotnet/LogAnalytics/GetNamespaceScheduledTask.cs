// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.LogAnalytics
{
    public static class GetNamespaceScheduledTask
    {
        /// <summary>
        /// This data source provides details about a specific Namespace Scheduled Task resource in Oracle Cloud Infrastructure Log Analytics service.
        /// 
        /// Get the scheduled task for the specified task identifier.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testNamespaceScheduledTask = Oci.LogAnalytics.GetNamespaceScheduledTask.Invoke(new()
        ///     {
        ///         Namespace = namespaceScheduledTaskNamespace,
        ///         ScheduledTaskId = testScheduledTask.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetNamespaceScheduledTaskResult> InvokeAsync(GetNamespaceScheduledTaskArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNamespaceScheduledTaskResult>("oci:LogAnalytics/getNamespaceScheduledTask:getNamespaceScheduledTask", args ?? new GetNamespaceScheduledTaskArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Namespace Scheduled Task resource in Oracle Cloud Infrastructure Log Analytics service.
        /// 
        /// Get the scheduled task for the specified task identifier.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testNamespaceScheduledTask = Oci.LogAnalytics.GetNamespaceScheduledTask.Invoke(new()
        ///     {
        ///         Namespace = namespaceScheduledTaskNamespace,
        ///         ScheduledTaskId = testScheduledTask.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNamespaceScheduledTaskResult> Invoke(GetNamespaceScheduledTaskInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNamespaceScheduledTaskResult>("oci:LogAnalytics/getNamespaceScheduledTask:getNamespaceScheduledTask", args ?? new GetNamespaceScheduledTaskInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNamespaceScheduledTaskArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Logging Analytics namespace used for the request.
        /// </summary>
        [Input("namespace", required: true)]
        public string Namespace { get; set; } = null!;

        /// <summary>
        /// Unique scheduledTask id returned from task create. If invalid will lead to a 404 not found.
        /// </summary>
        [Input("scheduledTaskId", required: true)]
        public string ScheduledTaskId { get; set; } = null!;

        public GetNamespaceScheduledTaskArgs()
        {
        }
        public static new GetNamespaceScheduledTaskArgs Empty => new GetNamespaceScheduledTaskArgs();
    }

    public sealed class GetNamespaceScheduledTaskInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Logging Analytics namespace used for the request.
        /// </summary>
        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        /// <summary>
        /// Unique scheduledTask id returned from task create. If invalid will lead to a 404 not found.
        /// </summary>
        [Input("scheduledTaskId", required: true)]
        public Input<string> ScheduledTaskId { get; set; } = null!;

        public GetNamespaceScheduledTaskInvokeArgs()
        {
        }
        public static new GetNamespaceScheduledTaskInvokeArgs Empty => new GetNamespaceScheduledTaskInvokeArgs();
    }


    [OutputType]
    public sealed class GetNamespaceScheduledTaskResult
    {
        /// <summary>
        /// Action for scheduled task.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNamespaceScheduledTaskActionResult> Actions;
        /// <summary>
        /// Compartment Identifier [OCID] (&lt;https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)&gt;.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// A user-friendly name that is changeable and that does not have to be unique. Format: a leading alphanumeric, followed by zero or more alphanumerics, underscores, spaces, backslashes, or hyphens in any order). No trailing spaces allowed.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the data plane resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Discriminator.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// The namespace of the extracted metric. A valid value starts with an alphabetical character and includes only alphanumeric characters and underscores (_).
        /// </summary>
        public readonly string Namespace;
        /// <summary>
        /// Number of execution occurrences.
        /// </summary>
        public readonly string NumOccurrences;
        /// <summary>
        /// The ManagementSavedSearch id [OCID] utilized in the action.
        /// </summary>
        public readonly string SavedSearchId;
        public readonly string ScheduledTaskId;
        /// <summary>
        /// Schedules.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNamespaceScheduledTaskScheduleResult> Schedules;
        /// <summary>
        /// The current state of the scheduled task.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Status of the scheduled task. - PURGE_RESOURCE_NOT_FOUND
        /// </summary>
        public readonly string TaskStatus;
        /// <summary>
        /// Task type.
        /// </summary>
        public readonly string TaskType;
        /// <summary>
        /// The date and time the scheduled task was created, in the format defined by RFC3339.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The date and time the scheduled task was last updated, in the format defined by RFC3339.
        /// </summary>
        public readonly string TimeUpdated;
        /// <summary>
        /// most recent Work Request Identifier [OCID] (&lt;https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm&gt;) for the asynchronous request.
        /// </summary>
        public readonly string WorkRequestId;

        [OutputConstructor]
        private GetNamespaceScheduledTaskResult(
            ImmutableArray<Outputs.GetNamespaceScheduledTaskActionResult> actions,

            string compartmentId,

            ImmutableDictionary<string, string> definedTags,

            string displayName,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            string kind,

            string @namespace,

            string numOccurrences,

            string savedSearchId,

            string scheduledTaskId,

            ImmutableArray<Outputs.GetNamespaceScheduledTaskScheduleResult> schedules,

            string state,

            string taskStatus,

            string taskType,

            string timeCreated,

            string timeUpdated,

            string workRequestId)
        {
            Actions = actions;
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            Kind = kind;
            Namespace = @namespace;
            NumOccurrences = numOccurrences;
            SavedSearchId = savedSearchId;
            ScheduledTaskId = scheduledTaskId;
            Schedules = schedules;
            State = state;
            TaskStatus = taskStatus;
            TaskType = taskType;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            WorkRequestId = workRequestId;
        }
    }
}
