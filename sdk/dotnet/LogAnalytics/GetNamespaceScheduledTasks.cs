// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.LogAnalytics
{
    public static class GetNamespaceScheduledTasks
    {
        /// <summary>
        /// This data source provides the list of Namespace Scheduled Tasks in Oracle Cloud Infrastructure Log Analytics service.
        /// 
        /// Lists scheduled tasks.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testNamespaceScheduledTasks = Oci.LogAnalytics.GetNamespaceScheduledTasks.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         Namespace = @var.Namespace_scheduled_task_namespace,
        ///         DisplayName = @var.Namespace_scheduled_task_display_name,
        ///         TaskType = @var.Namespace_scheduled_task_task_type,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetNamespaceScheduledTasksResult> InvokeAsync(GetNamespaceScheduledTasksArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNamespaceScheduledTasksResult>("oci:LogAnalytics/getNamespaceScheduledTasks:getNamespaceScheduledTasks", args ?? new GetNamespaceScheduledTasksArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Namespace Scheduled Tasks in Oracle Cloud Infrastructure Log Analytics service.
        /// 
        /// Lists scheduled tasks.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testNamespaceScheduledTasks = Oci.LogAnalytics.GetNamespaceScheduledTasks.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         Namespace = @var.Namespace_scheduled_task_namespace,
        ///         DisplayName = @var.Namespace_scheduled_task_display_name,
        ///         TaskType = @var.Namespace_scheduled_task_task_type,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetNamespaceScheduledTasksResult> Invoke(GetNamespaceScheduledTasksInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNamespaceScheduledTasksResult>("oci:LogAnalytics/getNamespaceScheduledTasks:getNamespaceScheduledTasks", args ?? new GetNamespaceScheduledTasksInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNamespaceScheduledTasksArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the given display name exactly.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetNamespaceScheduledTasksFilterArgs>? _filters;
        public List<Inputs.GetNamespaceScheduledTasksFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetNamespaceScheduledTasksFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The Logging Analytics namespace used for the request.
        /// </summary>
        [Input("namespace", required: true)]
        public string Namespace { get; set; } = null!;

        /// <summary>
        /// Required parameter to specify schedule task type.
        /// </summary>
        [Input("taskType", required: true)]
        public string TaskType { get; set; } = null!;

        public GetNamespaceScheduledTasksArgs()
        {
        }
        public static new GetNamespaceScheduledTasksArgs Empty => new GetNamespaceScheduledTasksArgs();
    }

    public sealed class GetNamespaceScheduledTasksInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the given display name exactly.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetNamespaceScheduledTasksFilterInputArgs>? _filters;
        public InputList<Inputs.GetNamespaceScheduledTasksFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetNamespaceScheduledTasksFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The Logging Analytics namespace used for the request.
        /// </summary>
        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        /// <summary>
        /// Required parameter to specify schedule task type.
        /// </summary>
        [Input("taskType", required: true)]
        public Input<string> TaskType { get; set; } = null!;

        public GetNamespaceScheduledTasksInvokeArgs()
        {
        }
        public static new GetNamespaceScheduledTasksInvokeArgs Empty => new GetNamespaceScheduledTasksInvokeArgs();
    }


    [OutputType]
    public sealed class GetNamespaceScheduledTasksResult
    {
        /// <summary>
        /// Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// A user-friendly name that is changeable and that does not have to be unique. Format: a leading alphanumeric, followed by zero or more alphanumerics, underscores, spaces, backslashes, or hyphens in any order). No trailing spaces allowed.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetNamespaceScheduledTasksFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Namespace;
        /// <summary>
        /// The list of scheduled_task_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNamespaceScheduledTasksScheduledTaskCollectionResult> ScheduledTaskCollections;
        /// <summary>
        /// Task type.
        /// </summary>
        public readonly string TaskType;

        [OutputConstructor]
        private GetNamespaceScheduledTasksResult(
            string compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetNamespaceScheduledTasksFilterResult> filters,

            string id,

            string @namespace,

            ImmutableArray<Outputs.GetNamespaceScheduledTasksScheduledTaskCollectionResult> scheduledTaskCollections,

            string taskType)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            Namespace = @namespace;
            ScheduledTaskCollections = scheduledTaskCollections;
            TaskType = taskType;
        }
    }
}
