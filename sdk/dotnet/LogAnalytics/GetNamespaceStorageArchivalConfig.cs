// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.LogAnalytics
{
    public static class GetNamespaceStorageArchivalConfig
    {
        /// <summary>
        /// This data source provides details about a specific Namespace Storage Archival Config resource in Oracle Cloud Infrastructure Log Analytics service.
        /// 
        /// This API gets the storage configuration of a tenancy
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testNamespaceStorageArchivalConfig = Oci.LogAnalytics.GetNamespaceStorageArchivalConfig.Invoke(new()
        ///     {
        ///         Namespace = namespaceStorageArchivalConfigNamespace,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetNamespaceStorageArchivalConfigResult> InvokeAsync(GetNamespaceStorageArchivalConfigArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNamespaceStorageArchivalConfigResult>("oci:LogAnalytics/getNamespaceStorageArchivalConfig:getNamespaceStorageArchivalConfig", args ?? new GetNamespaceStorageArchivalConfigArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Namespace Storage Archival Config resource in Oracle Cloud Infrastructure Log Analytics service.
        /// 
        /// This API gets the storage configuration of a tenancy
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testNamespaceStorageArchivalConfig = Oci.LogAnalytics.GetNamespaceStorageArchivalConfig.Invoke(new()
        ///     {
        ///         Namespace = namespaceStorageArchivalConfigNamespace,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNamespaceStorageArchivalConfigResult> Invoke(GetNamespaceStorageArchivalConfigInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNamespaceStorageArchivalConfigResult>("oci:LogAnalytics/getNamespaceStorageArchivalConfig:getNamespaceStorageArchivalConfig", args ?? new GetNamespaceStorageArchivalConfigInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Namespace Storage Archival Config resource in Oracle Cloud Infrastructure Log Analytics service.
        /// 
        /// This API gets the storage configuration of a tenancy
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testNamespaceStorageArchivalConfig = Oci.LogAnalytics.GetNamespaceStorageArchivalConfig.Invoke(new()
        ///     {
        ///         Namespace = namespaceStorageArchivalConfigNamespace,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNamespaceStorageArchivalConfigResult> Invoke(GetNamespaceStorageArchivalConfigInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNamespaceStorageArchivalConfigResult>("oci:LogAnalytics/getNamespaceStorageArchivalConfig:getNamespaceStorageArchivalConfig", args ?? new GetNamespaceStorageArchivalConfigInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNamespaceStorageArchivalConfigArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Logging Analytics namespace used for the request.
        /// </summary>
        [Input("namespace", required: true)]
        public string Namespace { get; set; } = null!;

        public GetNamespaceStorageArchivalConfigArgs()
        {
        }
        public static new GetNamespaceStorageArchivalConfigArgs Empty => new GetNamespaceStorageArchivalConfigArgs();
    }

    public sealed class GetNamespaceStorageArchivalConfigInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Logging Analytics namespace used for the request.
        /// </summary>
        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        public GetNamespaceStorageArchivalConfigInvokeArgs()
        {
        }
        public static new GetNamespaceStorageArchivalConfigInvokeArgs Empty => new GetNamespaceStorageArchivalConfigInvokeArgs();
    }


    [OutputType]
    public sealed class GetNamespaceStorageArchivalConfigResult
    {
        /// <summary>
        /// This is the configuration for data archiving in object storage
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNamespaceStorageArchivalConfigArchivingConfigurationResult> ArchivingConfigurations;
        public readonly string Id;
        /// <summary>
        /// This indicates if old data can be archived for a tenancy
        /// </summary>
        public readonly bool IsArchivingEnabled;
        public readonly string Namespace;

        [OutputConstructor]
        private GetNamespaceStorageArchivalConfigResult(
            ImmutableArray<Outputs.GetNamespaceStorageArchivalConfigArchivingConfigurationResult> archivingConfigurations,

            string id,

            bool isArchivingEnabled,

            string @namespace)
        {
            ArchivingConfigurations = archivingConfigurations;
            Id = id;
            IsArchivingEnabled = isArchivingEnabled;
            Namespace = @namespace;
        }
    }
}
