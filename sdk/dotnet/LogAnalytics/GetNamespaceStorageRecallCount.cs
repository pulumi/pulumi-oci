// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.LogAnalytics
{
    public static class GetNamespaceStorageRecallCount
    {
        /// <summary>
        /// This data source provides details about a specific Namespace Storage Recall Count resource in Oracle Cloud Infrastructure Log Analytics service.
        /// 
        /// This API gets the number of recalls made and the maximum recalls that can be made
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testNamespaceStorageRecallCount = Oci.LogAnalytics.GetNamespaceStorageRecallCount.Invoke(new()
        ///     {
        ///         Namespace = namespaceStorageRecallCountNamespace,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetNamespaceStorageRecallCountResult> InvokeAsync(GetNamespaceStorageRecallCountArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNamespaceStorageRecallCountResult>("oci:LogAnalytics/getNamespaceStorageRecallCount:getNamespaceStorageRecallCount", args ?? new GetNamespaceStorageRecallCountArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Namespace Storage Recall Count resource in Oracle Cloud Infrastructure Log Analytics service.
        /// 
        /// This API gets the number of recalls made and the maximum recalls that can be made
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testNamespaceStorageRecallCount = Oci.LogAnalytics.GetNamespaceStorageRecallCount.Invoke(new()
        ///     {
        ///         Namespace = namespaceStorageRecallCountNamespace,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetNamespaceStorageRecallCountResult> Invoke(GetNamespaceStorageRecallCountInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNamespaceStorageRecallCountResult>("oci:LogAnalytics/getNamespaceStorageRecallCount:getNamespaceStorageRecallCount", args ?? new GetNamespaceStorageRecallCountInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNamespaceStorageRecallCountArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Logging Analytics namespace used for the request.
        /// </summary>
        [Input("namespace", required: true)]
        public string Namespace { get; set; } = null!;

        public GetNamespaceStorageRecallCountArgs()
        {
        }
        public static new GetNamespaceStorageRecallCountArgs Empty => new GetNamespaceStorageRecallCountArgs();
    }

    public sealed class GetNamespaceStorageRecallCountInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Logging Analytics namespace used for the request.
        /// </summary>
        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        public GetNamespaceStorageRecallCountInvokeArgs()
        {
        }
        public static new GetNamespaceStorageRecallCountInvokeArgs Empty => new GetNamespaceStorageRecallCountInvokeArgs();
    }


    [OutputType]
    public sealed class GetNamespaceStorageRecallCountResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Namespace;
        /// <summary>
        /// This is the total number of recalls made so far
        /// </summary>
        public readonly int RecallCount;
        /// <summary>
        /// This is the number of recalls that failed
        /// </summary>
        public readonly int RecallFailed;
        /// <summary>
        /// This is the maximum number of recalls (including successful and pending recalls) allowed
        /// </summary>
        public readonly int RecallLimit;
        /// <summary>
        /// This is the number of recalls in pending state
        /// </summary>
        public readonly int RecallPending;
        /// <summary>
        /// This is the number of recalls that succeeded
        /// </summary>
        public readonly int RecallSucceeded;

        [OutputConstructor]
        private GetNamespaceStorageRecallCountResult(
            string id,

            string @namespace,

            int recallCount,

            int recallFailed,

            int recallLimit,

            int recallPending,

            int recallSucceeded)
        {
            Id = id;
            Namespace = @namespace;
            RecallCount = recallCount;
            RecallFailed = recallFailed;
            RecallLimit = recallLimit;
            RecallPending = recallPending;
            RecallSucceeded = recallSucceeded;
        }
    }
}
