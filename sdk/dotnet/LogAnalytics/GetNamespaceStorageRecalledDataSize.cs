// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.LogAnalytics
{
    public static class GetNamespaceStorageRecalledDataSize
    {
        /// <summary>
        /// This data source provides details about a specific Namespace Storage Recalled Data Size resource in Oracle Cloud Infrastructure Log Analytics service.
        /// 
        /// This API gets the datasize of recalls for a given timeframe
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testNamespaceStorageRecalledDataSize = Oci.LogAnalytics.GetNamespaceStorageRecalledDataSize.Invoke(new()
        ///     {
        ///         Namespace = namespaceStorageRecalledDataSizeNamespace,
        ///         TimeDataEnded = namespaceStorageRecalledDataSizeTimeDataEnded,
        ///         TimeDataStarted = namespaceStorageRecalledDataSizeTimeDataStarted,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetNamespaceStorageRecalledDataSizeResult> InvokeAsync(GetNamespaceStorageRecalledDataSizeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNamespaceStorageRecalledDataSizeResult>("oci:LogAnalytics/getNamespaceStorageRecalledDataSize:getNamespaceStorageRecalledDataSize", args ?? new GetNamespaceStorageRecalledDataSizeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Namespace Storage Recalled Data Size resource in Oracle Cloud Infrastructure Log Analytics service.
        /// 
        /// This API gets the datasize of recalls for a given timeframe
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testNamespaceStorageRecalledDataSize = Oci.LogAnalytics.GetNamespaceStorageRecalledDataSize.Invoke(new()
        ///     {
        ///         Namespace = namespaceStorageRecalledDataSizeNamespace,
        ///         TimeDataEnded = namespaceStorageRecalledDataSizeTimeDataEnded,
        ///         TimeDataStarted = namespaceStorageRecalledDataSizeTimeDataStarted,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNamespaceStorageRecalledDataSizeResult> Invoke(GetNamespaceStorageRecalledDataSizeInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNamespaceStorageRecalledDataSizeResult>("oci:LogAnalytics/getNamespaceStorageRecalledDataSize:getNamespaceStorageRecalledDataSize", args ?? new GetNamespaceStorageRecalledDataSizeInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Namespace Storage Recalled Data Size resource in Oracle Cloud Infrastructure Log Analytics service.
        /// 
        /// This API gets the datasize of recalls for a given timeframe
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testNamespaceStorageRecalledDataSize = Oci.LogAnalytics.GetNamespaceStorageRecalledDataSize.Invoke(new()
        ///     {
        ///         Namespace = namespaceStorageRecalledDataSizeNamespace,
        ///         TimeDataEnded = namespaceStorageRecalledDataSizeTimeDataEnded,
        ///         TimeDataStarted = namespaceStorageRecalledDataSizeTimeDataStarted,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNamespaceStorageRecalledDataSizeResult> Invoke(GetNamespaceStorageRecalledDataSizeInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNamespaceStorageRecalledDataSizeResult>("oci:LogAnalytics/getNamespaceStorageRecalledDataSize:getNamespaceStorageRecalledDataSize", args ?? new GetNamespaceStorageRecalledDataSizeInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNamespaceStorageRecalledDataSizeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Logging Analytics namespace used for the request.
        /// </summary>
        [Input("namespace", required: true)]
        public string Namespace { get; set; } = null!;

        /// <summary>
        /// This is the end of the time range for recalled data
        /// </summary>
        [Input("timeDataEnded")]
        public string? TimeDataEnded { get; set; }

        /// <summary>
        /// This is the start of the time range for recalled data
        /// </summary>
        [Input("timeDataStarted")]
        public string? TimeDataStarted { get; set; }

        public GetNamespaceStorageRecalledDataSizeArgs()
        {
        }
        public static new GetNamespaceStorageRecalledDataSizeArgs Empty => new GetNamespaceStorageRecalledDataSizeArgs();
    }

    public sealed class GetNamespaceStorageRecalledDataSizeInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Logging Analytics namespace used for the request.
        /// </summary>
        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        /// <summary>
        /// This is the end of the time range for recalled data
        /// </summary>
        [Input("timeDataEnded")]
        public Input<string>? TimeDataEnded { get; set; }

        /// <summary>
        /// This is the start of the time range for recalled data
        /// </summary>
        [Input("timeDataStarted")]
        public Input<string>? TimeDataStarted { get; set; }

        public GetNamespaceStorageRecalledDataSizeInvokeArgs()
        {
        }
        public static new GetNamespaceStorageRecalledDataSizeInvokeArgs Empty => new GetNamespaceStorageRecalledDataSizeInvokeArgs();
    }


    [OutputType]
    public sealed class GetNamespaceStorageRecalledDataSizeResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Namespace;
        /// <summary>
        /// This is the size of the archival data not recalled yet
        /// </summary>
        public readonly string NotRecalledDataInBytes;
        /// <summary>
        /// This is the size of the recalled data
        /// </summary>
        public readonly string RecalledDataInBytes;
        /// <summary>
        /// This is the end of the time range of the archival data
        /// </summary>
        public readonly string TimeDataEnded;
        /// <summary>
        /// This is the start of the time range of the archival data
        /// </summary>
        public readonly string TimeDataStarted;

        [OutputConstructor]
        private GetNamespaceStorageRecalledDataSizeResult(
            string id,

            string @namespace,

            string notRecalledDataInBytes,

            string recalledDataInBytes,

            string timeDataEnded,

            string timeDataStarted)
        {
            Id = id;
            Namespace = @namespace;
            NotRecalledDataInBytes = notRecalledDataInBytes;
            RecalledDataInBytes = recalledDataInBytes;
            TimeDataEnded = timeDataEnded;
            TimeDataStarted = timeDataStarted;
        }
    }
}
