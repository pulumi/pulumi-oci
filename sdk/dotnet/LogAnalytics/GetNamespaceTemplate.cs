// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.LogAnalytics
{
    public static class GetNamespaceTemplate
    {
        /// <summary>
        /// This data source provides details about a specific Namespace Template resource in Oracle Cloud Infrastructure Log Analytics service.
        /// 
        /// Gets detailed information about the template with the specified ocid.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testNamespaceTemplate = Oci.LogAnalytics.GetNamespaceTemplate.Invoke(new()
        ///     {
        ///         Namespace = namespaceTemplateNamespace,
        ///         TemplateId = testTemplate.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetNamespaceTemplateResult> InvokeAsync(GetNamespaceTemplateArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNamespaceTemplateResult>("oci:LogAnalytics/getNamespaceTemplate:getNamespaceTemplate", args ?? new GetNamespaceTemplateArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Namespace Template resource in Oracle Cloud Infrastructure Log Analytics service.
        /// 
        /// Gets detailed information about the template with the specified ocid.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testNamespaceTemplate = Oci.LogAnalytics.GetNamespaceTemplate.Invoke(new()
        ///     {
        ///         Namespace = namespaceTemplateNamespace,
        ///         TemplateId = testTemplate.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNamespaceTemplateResult> Invoke(GetNamespaceTemplateInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNamespaceTemplateResult>("oci:LogAnalytics/getNamespaceTemplate:getNamespaceTemplate", args ?? new GetNamespaceTemplateInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Namespace Template resource in Oracle Cloud Infrastructure Log Analytics service.
        /// 
        /// Gets detailed information about the template with the specified ocid.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testNamespaceTemplate = Oci.LogAnalytics.GetNamespaceTemplate.Invoke(new()
        ///     {
        ///         Namespace = namespaceTemplateNamespace,
        ///         TemplateId = testTemplate.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNamespaceTemplateResult> Invoke(GetNamespaceTemplateInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNamespaceTemplateResult>("oci:LogAnalytics/getNamespaceTemplate:getNamespaceTemplate", args ?? new GetNamespaceTemplateInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNamespaceTemplateArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Logging Analytics namespace used for the request.
        /// </summary>
        [Input("namespace", required: true)]
        public string Namespace { get; set; } = null!;

        /// <summary>
        /// Unique ocid of the template.
        /// </summary>
        [Input("templateId", required: true)]
        public string TemplateId { get; set; } = null!;

        public GetNamespaceTemplateArgs()
        {
        }
        public static new GetNamespaceTemplateArgs Empty => new GetNamespaceTemplateArgs();
    }

    public sealed class GetNamespaceTemplateInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Logging Analytics namespace used for the request.
        /// </summary>
        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        /// <summary>
        /// Unique ocid of the template.
        /// </summary>
        [Input("templateId", required: true)]
        public Input<string> TemplateId { get; set; } = null!;

        public GetNamespaceTemplateInvokeArgs()
        {
        }
        public static new GetNamespaceTemplateInvokeArgs Empty => new GetNamespaceTemplateInvokeArgs();
    }


    [OutputType]
    public sealed class GetNamespaceTemplateResult
    {
        /// <summary>
        /// Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Base64 encoded template content.
        /// </summary>
        public readonly string Content;
        /// <summary>
        /// Content format. For example - XML.
        /// </summary>
        public readonly string ContentFormat;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// Description for this resource.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Facets of the template
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNamespaceTemplateFacetResult> Facets;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The system flag.  A value of false denotes a custom, or user defined object.  A value of true denotes a built in object.
        /// </summary>
        public readonly bool IsSystem;
        /// <summary>
        /// The template name.
        /// </summary>
        public readonly string Name;
        public readonly string Namespace;
        /// <summary>
        /// Base64 encoded template parameters.
        /// </summary>
        public readonly string Parameters;
        /// <summary>
        /// Parameters format.  For example - NAME_VALUE_PAIR.
        /// </summary>
        public readonly string ParametersFormat;
        /// <summary>
        /// Base64 encoded parameters metadata definition.
        /// </summary>
        public readonly string ParametersMetadata;
        /// <summary>
        /// The current state of the template.
        /// </summary>
        public readonly string State;
        public readonly string TemplateId;
        /// <summary>
        /// The date and time the resource was created, in the format defined by RFC3339.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The date and time the resource was last updated, in the format defined by RFC3339.
        /// </summary>
        public readonly string TimeUpdated;
        /// <summary>
        /// The template type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetNamespaceTemplateResult(
            string compartmentId,

            string content,

            string contentFormat,

            ImmutableDictionary<string, string> definedTags,

            string description,

            ImmutableArray<Outputs.GetNamespaceTemplateFacetResult> facets,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            bool isSystem,

            string name,

            string @namespace,

            string parameters,

            string parametersFormat,

            string parametersMetadata,

            string state,

            string templateId,

            string timeCreated,

            string timeUpdated,

            string type)
        {
            CompartmentId = compartmentId;
            Content = content;
            ContentFormat = contentFormat;
            DefinedTags = definedTags;
            Description = description;
            Facets = facets;
            FreeformTags = freeformTags;
            Id = id;
            IsSystem = isSystem;
            Name = name;
            Namespace = @namespace;
            Parameters = parameters;
            ParametersFormat = parametersFormat;
            ParametersMetadata = parametersMetadata;
            State = state;
            TemplateId = templateId;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            Type = type;
        }
    }
}
