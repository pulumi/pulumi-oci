// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.LogAnalytics
{
    /// <summary>
    /// This resource provides the Log Analytics Entity resource in Oracle Cloud Infrastructure Log Analytics service.
    /// 
    /// Create a new log analytics entity.
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testLogAnalyticsEntity = new Oci.LogAnalytics.LogAnalyticsEntity("test_log_analytics_entity", new()
    ///     {
    ///         CompartmentId = compartmentId,
    ///         EntityTypeName = logAnalyticsEntityEntityTypeName,
    ///         Name = logAnalyticsEntityName,
    ///         Namespace = logAnalyticsEntityNamespace,
    ///         CloudResourceId = testCloudResource.Id,
    ///         DefinedTags = 
    ///         {
    ///             { "foo-namespace.bar-key", "value" },
    ///         },
    ///         FreeformTags = 
    ///         {
    ///             { "bar-key", "value" },
    ///         },
    ///         Hostname = logAnalyticsEntityHostname,
    ///         ManagementAgentId = testManagementAgent.Id,
    ///         Metadata = new Oci.LogAnalytics.Inputs.LogAnalyticsEntityMetadataArgs
    ///         {
    ///             Items = new[]
    ///             {
    ///                 new Oci.LogAnalytics.Inputs.LogAnalyticsEntityMetadataItemArgs
    ///                 {
    ///                     Name = logAnalyticsEntityMetadataItemsName,
    ///                     Type = logAnalyticsEntityMetadataItemsType,
    ///                     Value = logAnalyticsEntityMetadataItemsValue,
    ///                 },
    ///             },
    ///         },
    ///         Properties = logAnalyticsEntityProperties,
    ///         SourceId = testSource.Id,
    ///         TimeLastDiscovered = logAnalyticsEntityTimeLastDiscovered,
    ///         TimezoneRegion = logAnalyticsEntityTimezoneRegion,
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// LogAnalyticsEntities can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:LogAnalytics/logAnalyticsEntity:LogAnalyticsEntity test_log_analytics_entity "namespaces/{namespaceName}/logAnalyticsEntities/{logAnalyticsEntityId}"
    /// ```
    /// </summary>
    [OciResourceType("oci:LogAnalytics/logAnalyticsEntity:LogAnalyticsEntity")]
    public partial class LogAnalyticsEntity : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Boolean flag to indicate if logs are collected for an entity for log analytics usage.
        /// </summary>
        [Output("areLogsCollected")]
        public Output<bool> AreLogsCollected { get; private set; } = null!;

        /// <summary>
        /// The OCID of the Cloud resource which this entity is a representation of. This may be blank when the entity represents a non-cloud resource that the customer may have on their premises.
        /// </summary>
        [Output("cloudResourceId")]
        public Output<string> CloudResourceId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, object>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// Internal name for the log analytics entity type.
        /// </summary>
        [Output("entityTypeInternalName")]
        public Output<string> EntityTypeInternalName { get; private set; } = null!;

        /// <summary>
        /// Log analytics entity type name.
        /// </summary>
        [Output("entityTypeName")]
        public Output<string> EntityTypeName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, object>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The hostname where the entity represented here is actually present. This would be the output one would get if they run `echo $HOSTNAME` on Linux or an equivalent OS command. This may be different from management agents host since logs may be collected remotely.
        /// </summary>
        [Output("hostname")]
        public Output<string> Hostname { get; private set; } = null!;

        /// <summary>
        /// lifecycleDetails has additional information regarding substeps such as management agent plugin deployment.
        /// </summary>
        [Output("lifecycleDetails")]
        public Output<string> LifecycleDetails { get; private set; } = null!;

        /// <summary>
        /// Management agent (management-agents resource kind) compartment OCID
        /// </summary>
        [Output("managementAgentCompartmentId")]
        public Output<string> ManagementAgentCompartmentId { get; private set; } = null!;

        /// <summary>
        /// Management agent (management-agents resource kind) display name
        /// </summary>
        [Output("managementAgentDisplayName")]
        public Output<string> ManagementAgentDisplayName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The OCID of the Management Agent.
        /// </summary>
        [Output("managementAgentId")]
        public Output<string> ManagementAgentId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Details of Entity Metadata.
        /// </summary>
        [Output("metadata")]
        public Output<Outputs.LogAnalyticsEntityMetadata> Metadata { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Log analytics entity name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The Logging Analytics namespace used for the request.
        /// </summary>
        [Output("namespace")]
        public Output<string> Namespace { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The name/value pairs for parameter values to be used in file patterns specified in log sources.
        /// </summary>
        [Output("properties")]
        public Output<ImmutableDictionary<string, object>> Properties { get; private set; } = null!;

        /// <summary>
        /// This indicates the type of source. It is primarily for Enterprise Manager Repository ID.
        /// </summary>
        [Output("sourceId")]
        public Output<string> SourceId { get; private set; } = null!;

        /// <summary>
        /// The current state of the log analytics entity.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The date and time the resource was created, in the format defined by RFC3339.
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The date and time the resource was last discovered, in the format defined by RFC3339.
        /// </summary>
        [Output("timeLastDiscovered")]
        public Output<string> TimeLastDiscovered { get; private set; } = null!;

        /// <summary>
        /// The date and time the resource was last updated, in the format defined by RFC3339.
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The timezone region of the log analytics entity. 
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("timezoneRegion")]
        public Output<string> TimezoneRegion { get; private set; } = null!;


        /// <summary>
        /// Create a LogAnalyticsEntity resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LogAnalyticsEntity(string name, LogAnalyticsEntityArgs args, CustomResourceOptions? options = null)
            : base("oci:LogAnalytics/logAnalyticsEntity:LogAnalyticsEntity", name, args ?? new LogAnalyticsEntityArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LogAnalyticsEntity(string name, Input<string> id, LogAnalyticsEntityState? state = null, CustomResourceOptions? options = null)
            : base("oci:LogAnalytics/logAnalyticsEntity:LogAnalyticsEntity", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LogAnalyticsEntity resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LogAnalyticsEntity Get(string name, Input<string> id, LogAnalyticsEntityState? state = null, CustomResourceOptions? options = null)
        {
            return new LogAnalyticsEntity(name, id, state, options);
        }
    }

    public sealed class LogAnalyticsEntityArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The OCID of the Cloud resource which this entity is a representation of. This may be blank when the entity represents a non-cloud resource that the customer may have on their premises.
        /// </summary>
        [Input("cloudResourceId")]
        public Input<string>? CloudResourceId { get; set; }

        /// <summary>
        /// (Updatable) Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// Log analytics entity type name.
        /// </summary>
        [Input("entityTypeName", required: true)]
        public Input<string> EntityTypeName { get; set; } = null!;

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) The hostname where the entity represented here is actually present. This would be the output one would get if they run `echo $HOSTNAME` on Linux or an equivalent OS command. This may be different from management agents host since logs may be collected remotely.
        /// </summary>
        [Input("hostname")]
        public Input<string>? Hostname { get; set; }

        /// <summary>
        /// (Updatable) The OCID of the Management Agent.
        /// </summary>
        [Input("managementAgentId")]
        public Input<string>? ManagementAgentId { get; set; }

        /// <summary>
        /// (Updatable) Details of Entity Metadata.
        /// </summary>
        [Input("metadata")]
        public Input<Inputs.LogAnalyticsEntityMetadataArgs>? Metadata { get; set; }

        /// <summary>
        /// (Updatable) Log analytics entity name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The Logging Analytics namespace used for the request.
        /// </summary>
        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        [Input("properties")]
        private InputMap<object>? _properties;

        /// <summary>
        /// (Updatable) The name/value pairs for parameter values to be used in file patterns specified in log sources.
        /// </summary>
        public InputMap<object> Properties
        {
            get => _properties ?? (_properties = new InputMap<object>());
            set => _properties = value;
        }

        /// <summary>
        /// This indicates the type of source. It is primarily for Enterprise Manager Repository ID.
        /// </summary>
        [Input("sourceId")]
        public Input<string>? SourceId { get; set; }

        /// <summary>
        /// (Updatable) The date and time the resource was last discovered, in the format defined by RFC3339.
        /// </summary>
        [Input("timeLastDiscovered")]
        public Input<string>? TimeLastDiscovered { get; set; }

        /// <summary>
        /// (Updatable) The timezone region of the log analytics entity. 
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("timezoneRegion")]
        public Input<string>? TimezoneRegion { get; set; }

        public LogAnalyticsEntityArgs()
        {
        }
        public static new LogAnalyticsEntityArgs Empty => new LogAnalyticsEntityArgs();
    }

    public sealed class LogAnalyticsEntityState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Boolean flag to indicate if logs are collected for an entity for log analytics usage.
        /// </summary>
        [Input("areLogsCollected")]
        public Input<bool>? AreLogsCollected { get; set; }

        /// <summary>
        /// The OCID of the Cloud resource which this entity is a representation of. This may be blank when the entity represents a non-cloud resource that the customer may have on their premises.
        /// </summary>
        [Input("cloudResourceId")]
        public Input<string>? CloudResourceId { get; set; }

        /// <summary>
        /// (Updatable) Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// Internal name for the log analytics entity type.
        /// </summary>
        [Input("entityTypeInternalName")]
        public Input<string>? EntityTypeInternalName { get; set; }

        /// <summary>
        /// Log analytics entity type name.
        /// </summary>
        [Input("entityTypeName")]
        public Input<string>? EntityTypeName { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) The hostname where the entity represented here is actually present. This would be the output one would get if they run `echo $HOSTNAME` on Linux or an equivalent OS command. This may be different from management agents host since logs may be collected remotely.
        /// </summary>
        [Input("hostname")]
        public Input<string>? Hostname { get; set; }

        /// <summary>
        /// lifecycleDetails has additional information regarding substeps such as management agent plugin deployment.
        /// </summary>
        [Input("lifecycleDetails")]
        public Input<string>? LifecycleDetails { get; set; }

        /// <summary>
        /// Management agent (management-agents resource kind) compartment OCID
        /// </summary>
        [Input("managementAgentCompartmentId")]
        public Input<string>? ManagementAgentCompartmentId { get; set; }

        /// <summary>
        /// Management agent (management-agents resource kind) display name
        /// </summary>
        [Input("managementAgentDisplayName")]
        public Input<string>? ManagementAgentDisplayName { get; set; }

        /// <summary>
        /// (Updatable) The OCID of the Management Agent.
        /// </summary>
        [Input("managementAgentId")]
        public Input<string>? ManagementAgentId { get; set; }

        /// <summary>
        /// (Updatable) Details of Entity Metadata.
        /// </summary>
        [Input("metadata")]
        public Input<Inputs.LogAnalyticsEntityMetadataGetArgs>? Metadata { get; set; }

        /// <summary>
        /// (Updatable) Log analytics entity name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The Logging Analytics namespace used for the request.
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        [Input("properties")]
        private InputMap<object>? _properties;

        /// <summary>
        /// (Updatable) The name/value pairs for parameter values to be used in file patterns specified in log sources.
        /// </summary>
        public InputMap<object> Properties
        {
            get => _properties ?? (_properties = new InputMap<object>());
            set => _properties = value;
        }

        /// <summary>
        /// This indicates the type of source. It is primarily for Enterprise Manager Repository ID.
        /// </summary>
        [Input("sourceId")]
        public Input<string>? SourceId { get; set; }

        /// <summary>
        /// The current state of the log analytics entity.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The date and time the resource was created, in the format defined by RFC3339.
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// (Updatable) The date and time the resource was last discovered, in the format defined by RFC3339.
        /// </summary>
        [Input("timeLastDiscovered")]
        public Input<string>? TimeLastDiscovered { get; set; }

        /// <summary>
        /// The date and time the resource was last updated, in the format defined by RFC3339.
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        /// <summary>
        /// (Updatable) The timezone region of the log analytics entity. 
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("timezoneRegion")]
        public Input<string>? TimezoneRegion { get; set; }

        public LogAnalyticsEntityState()
        {
        }
        public static new LogAnalyticsEntityState Empty => new LogAnalyticsEntityState();
    }
}
