// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.LogAnalytics
{
    /// <summary>
    /// This resource provides the Log Analytics Entity Type resource in Oracle Cloud Infrastructure Log Analytics service.
    /// 
    /// Add custom log analytics entity type.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testLogAnalyticsEntityType = new Oci.LogAnalytics.LogAnalyticsEntityType("test_log_analytics_entity_type", new()
    ///     {
    ///         Name = logAnalyticsEntityTypeName,
    ///         Namespace = logAnalyticsEntityTypeNamespace,
    ///         Category = logAnalyticsEntityTypeCategory,
    ///         Properties = new[]
    ///         {
    ///             new Oci.LogAnalytics.Inputs.LogAnalyticsEntityTypePropertyArgs
    ///             {
    ///                 Name = logAnalyticsEntityTypePropertiesName,
    ///                 Description = logAnalyticsEntityTypePropertiesDescription,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// LogAnalyticsEntityTypes can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:LogAnalytics/logAnalyticsEntityType:LogAnalyticsEntityType test_log_analytics_entity_type "namespaces/{namespaceName}/logAnalyticsEntityTypes"
    /// ```
    /// </summary>
    [OciResourceType("oci:LogAnalytics/logAnalyticsEntityType:LogAnalyticsEntityType")]
    public partial class LogAnalyticsEntityType : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Log analytics entity type category. Category will be used for grouping and filtering.
        /// </summary>
        [Output("category")]
        public Output<string> Category { get; private set; } = null!;

        /// <summary>
        /// Log analytics entity type group. This can be CLOUD (OCI) or NON_CLOUD otherwise.
        /// </summary>
        [Output("cloudType")]
        public Output<string> CloudType { get; private set; } = null!;

        /// <summary>
        /// Internal name for the log analytics entity type.
        /// </summary>
        [Output("internalName")]
        public Output<string> InternalName { get; private set; } = null!;

        [Output("managementAgentEligibilityStatus")]
        public Output<string> ManagementAgentEligibilityStatus { get; private set; } = null!;

        /// <summary>
        /// Log analytics entity type name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The Logging Analytics namespace used for the request.
        /// </summary>
        [Output("namespace")]
        public Output<string> Namespace { get; private set; } = null!;

        /// <summary>
        /// Log analytics entity type property definition.
        /// </summary>
        [Output("properties")]
        public Output<ImmutableArray<Outputs.LogAnalyticsEntityTypeProperty>> Properties { get; private set; } = null!;

        /// <summary>
        /// The current lifecycle state of the log analytics entity type.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// Time the log analytics entity type was created. An RFC3339 formatted datetime string.
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// Time the log analytics entity type was updated. An RFC3339 formatted datetime string.
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;


        /// <summary>
        /// Create a LogAnalyticsEntityType resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LogAnalyticsEntityType(string name, LogAnalyticsEntityTypeArgs args, CustomResourceOptions? options = null)
            : base("oci:LogAnalytics/logAnalyticsEntityType:LogAnalyticsEntityType", name, args ?? new LogAnalyticsEntityTypeArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LogAnalyticsEntityType(string name, Input<string> id, LogAnalyticsEntityTypeState? state = null, CustomResourceOptions? options = null)
            : base("oci:LogAnalytics/logAnalyticsEntityType:LogAnalyticsEntityType", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LogAnalyticsEntityType resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LogAnalyticsEntityType Get(string name, Input<string> id, LogAnalyticsEntityTypeState? state = null, CustomResourceOptions? options = null)
        {
            return new LogAnalyticsEntityType(name, id, state, options);
        }
    }

    public sealed class LogAnalyticsEntityTypeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Log analytics entity type category. Category will be used for grouping and filtering.
        /// </summary>
        [Input("category")]
        public Input<string>? Category { get; set; }

        /// <summary>
        /// Log analytics entity type name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The Logging Analytics namespace used for the request.
        /// </summary>
        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        [Input("properties")]
        private InputList<Inputs.LogAnalyticsEntityTypePropertyArgs>? _properties;

        /// <summary>
        /// Log analytics entity type property definition.
        /// </summary>
        public InputList<Inputs.LogAnalyticsEntityTypePropertyArgs> Properties
        {
            get => _properties ?? (_properties = new InputList<Inputs.LogAnalyticsEntityTypePropertyArgs>());
            set => _properties = value;
        }

        public LogAnalyticsEntityTypeArgs()
        {
        }
        public static new LogAnalyticsEntityTypeArgs Empty => new LogAnalyticsEntityTypeArgs();
    }

    public sealed class LogAnalyticsEntityTypeState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Log analytics entity type category. Category will be used for grouping and filtering.
        /// </summary>
        [Input("category")]
        public Input<string>? Category { get; set; }

        /// <summary>
        /// Log analytics entity type group. This can be CLOUD (OCI) or NON_CLOUD otherwise.
        /// </summary>
        [Input("cloudType")]
        public Input<string>? CloudType { get; set; }

        /// <summary>
        /// Internal name for the log analytics entity type.
        /// </summary>
        [Input("internalName")]
        public Input<string>? InternalName { get; set; }

        [Input("managementAgentEligibilityStatus")]
        public Input<string>? ManagementAgentEligibilityStatus { get; set; }

        /// <summary>
        /// Log analytics entity type name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The Logging Analytics namespace used for the request.
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        [Input("properties")]
        private InputList<Inputs.LogAnalyticsEntityTypePropertyGetArgs>? _properties;

        /// <summary>
        /// Log analytics entity type property definition.
        /// </summary>
        public InputList<Inputs.LogAnalyticsEntityTypePropertyGetArgs> Properties
        {
            get => _properties ?? (_properties = new InputList<Inputs.LogAnalyticsEntityTypePropertyGetArgs>());
            set => _properties = value;
        }

        /// <summary>
        /// The current lifecycle state of the log analytics entity type.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// Time the log analytics entity type was created. An RFC3339 formatted datetime string.
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// Time the log analytics entity type was updated. An RFC3339 formatted datetime string.
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        public LogAnalyticsEntityTypeState()
        {
        }
        public static new LogAnalyticsEntityTypeState Empty => new LogAnalyticsEntityTypeState();
    }
}
