// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.LogAnalytics
{
    /// <summary>
    /// This resource provides the Log Analytics Object Collection Rule resource in Oracle Cloud Infrastructure Log Analytics service.
    /// 
    /// Create a configuration to collect logs from object storage bucket.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var testLogAnalyticsObjectCollectionRule = new Oci.LogAnalytics.LogAnalyticsObjectCollectionRule("testLogAnalyticsObjectCollectionRule", new Oci.LogAnalytics.LogAnalyticsObjectCollectionRuleArgs
    ///         {
    ///             CompartmentId = @var.Compartment_id,
    ///             LogGroupId = oci_logging_log_group.Test_log_group.Id,
    ///             LogSourceName = @var.Log_analytics_object_collection_rule_log_source_name,
    ///             Namespace = @var.Log_analytics_object_collection_rule_namespace,
    ///             OsBucketName = oci_objectstorage_bucket.Test_bucket.Name,
    ///             OsNamespace = @var.Log_analytics_object_collection_rule_os_namespace,
    ///             CharEncoding = @var.Log_analytics_object_collection_rule_char_encoding,
    ///             CollectionType = @var.Log_analytics_object_collection_rule_collection_type,
    ///             DefinedTags = 
    ///             {
    ///                 { "foo-namespace.bar-key", "value" },
    ///             },
    ///             Description = @var.Log_analytics_object_collection_rule_description,
    ///             EntityId = oci_log_analytics_entity.Test_entity.Id,
    ///             FreeformTags = 
    ///             {
    ///                 { "bar-key", "value" },
    ///             },
    ///             ObjectNameFilters = @var.Log_analytics_object_collection_rule_object_name_filters,
    ///             Overrides = @var.Log_analytics_object_collection_rule_overrides,
    ///             PollSince = @var.Log_analytics_object_collection_rule_poll_since,
    ///             PollTill = @var.Log_analytics_object_collection_rule_poll_till,
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// LogAnalyticsObjectCollectionRules can be imported using the `id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import oci:LogAnalytics/logAnalyticsObjectCollectionRule:LogAnalyticsObjectCollectionRule test_log_analytics_object_collection_rule "namespaces/{namespaceName}/logAnalyticsObjectCollectionRules/{logAnalyticsObjectCollectionRuleId}"
    /// ```
    /// </summary>
    [OciResourceType("oci:LogAnalytics/logAnalyticsObjectCollectionRule:LogAnalyticsObjectCollectionRule")]
    public partial class LogAnalyticsObjectCollectionRule : Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) An optional character encoding to aid in detecting the character encoding of the contents of the objects while processing. It is recommended to set this value as ISO_8589_1 when configuring content of the objects having more numeric characters, and very few alphabets. For e.g. this applies when configuring VCN Flow Logs.
        /// </summary>
        [Output("charEncoding")]
        public Output<string> CharEncoding { get; private set; } = null!;

        /// <summary>
        /// The type of collection. Supported collection types: LIVE, HISTORIC, HISTORIC_LIVE
        /// </summary>
        [Output("collectionType")]
        public Output<string> CollectionType { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to which this rule belongs.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, object>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A string that describes the details of the rule. It does not have to be unique, and can be changed. Avoid entering confidential information.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Logging Analytics entity OCID. Associates the processed logs with the given entity (optional).
        /// </summary>
        [Output("entityId")]
        public Output<string> EntityId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, object>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// A detailed status of the life cycle state.
        /// </summary>
        [Output("lifecycleDetails")]
        public Output<string> LifecycleDetails { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Logging Analytics Log group OCID to associate the processed logs with.
        /// </summary>
        [Output("logGroupId")]
        public Output<string> LogGroupId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Name of the Logging Analytics Source to use for the processing.
        /// </summary>
        [Output("logSourceName")]
        public Output<string> LogSourceName { get; private set; } = null!;

        /// <summary>
        /// A unique name given to the rule. The name must be unique within the tenancy, and cannot be modified.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The Logging Analytics namespace used for the request.
        /// </summary>
        [Output("namespace")]
        public Output<string> Namespace { get; private set; } = null!;

        /// <summary>
        /// (Updatable) When the filters are provided, only the objects matching the filters are picked up for processing. The matchType supported is exact match and accommodates wildcard "*". For more information on filters, see [Event Filters](https://docs.oracle.com/en-us/iaas/Content/Events/Concepts/filterevents.htm).
        /// </summary>
        [Output("objectNameFilters")]
        public Output<ImmutableArray<string>> ObjectNameFilters { get; private set; } = null!;

        /// <summary>
        /// Name of the Object Storage bucket.
        /// </summary>
        [Output("osBucketName")]
        public Output<string> OsBucketName { get; private set; } = null!;

        /// <summary>
        /// Object Storage namespace.
        /// </summary>
        [Output("osNamespace")]
        public Output<string> OsNamespace { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The override is used to modify some important configuration properties for objects matching a specific pattern inside the bucket. Supported propeties for override are - logSourceName, charEncoding. Supported matchType for override are "contains".
        /// </summary>
        [Output("overrides")]
        public Output<ImmutableArray<Outputs.LogAnalyticsObjectCollectionRuleOverride>> Overrides { get; private set; } = null!;

        /// <summary>
        /// The oldest time of the file in the bucket to consider for collection. Accepted values are: BEGINNING or CURRENT_TIME or RFC3339 formatted datetime string. When collectionType is LIVE, specifying pollSince value other than CURRENT_TIME will result in error.
        /// </summary>
        [Output("pollSince")]
        public Output<string> PollSince { get; private set; } = null!;

        /// <summary>
        /// The oldest time of the file in the bucket to consider for collection. Accepted values are: CURRENT_TIME or RFC3339 formatted datetime string. When collectionType is LIVE, specifying pollTill will result in error.
        /// </summary>
        [Output("pollTill")]
        public Output<string> PollTill { get; private set; } = null!;

        /// <summary>
        /// The current state of the rule.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The time when this rule was created. An RFC3339 formatted datetime string.
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The time when this rule was last updated. An RFC3339 formatted datetime string.
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;


        /// <summary>
        /// Create a LogAnalyticsObjectCollectionRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LogAnalyticsObjectCollectionRule(string name, LogAnalyticsObjectCollectionRuleArgs args, CustomResourceOptions? options = null)
            : base("oci:LogAnalytics/logAnalyticsObjectCollectionRule:LogAnalyticsObjectCollectionRule", name, args ?? new LogAnalyticsObjectCollectionRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LogAnalyticsObjectCollectionRule(string name, Input<string> id, LogAnalyticsObjectCollectionRuleState? state = null, CustomResourceOptions? options = null)
            : base("oci:LogAnalytics/logAnalyticsObjectCollectionRule:LogAnalyticsObjectCollectionRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LogAnalyticsObjectCollectionRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LogAnalyticsObjectCollectionRule Get(string name, Input<string> id, LogAnalyticsObjectCollectionRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new LogAnalyticsObjectCollectionRule(name, id, state, options);
        }
    }

    public sealed class LogAnalyticsObjectCollectionRuleArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) An optional character encoding to aid in detecting the character encoding of the contents of the objects while processing. It is recommended to set this value as ISO_8589_1 when configuring content of the objects having more numeric characters, and very few alphabets. For e.g. this applies when configuring VCN Flow Logs.
        /// </summary>
        [Input("charEncoding")]
        public Input<string>? CharEncoding { get; set; }

        /// <summary>
        /// The type of collection. Supported collection types: LIVE, HISTORIC, HISTORIC_LIVE
        /// </summary>
        [Input("collectionType")]
        public Input<string>? CollectionType { get; set; }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to which this rule belongs.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) A string that describes the details of the rule. It does not have to be unique, and can be changed. Avoid entering confidential information.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) Logging Analytics entity OCID. Associates the processed logs with the given entity (optional).
        /// </summary>
        [Input("entityId")]
        public Input<string>? EntityId { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) Logging Analytics Log group OCID to associate the processed logs with.
        /// </summary>
        [Input("logGroupId", required: true)]
        public Input<string> LogGroupId { get; set; } = null!;

        /// <summary>
        /// (Updatable) Name of the Logging Analytics Source to use for the processing.
        /// </summary>
        [Input("logSourceName", required: true)]
        public Input<string> LogSourceName { get; set; } = null!;

        /// <summary>
        /// A unique name given to the rule. The name must be unique within the tenancy, and cannot be modified.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The Logging Analytics namespace used for the request.
        /// </summary>
        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        [Input("objectNameFilters")]
        private InputList<string>? _objectNameFilters;

        /// <summary>
        /// (Updatable) When the filters are provided, only the objects matching the filters are picked up for processing. The matchType supported is exact match and accommodates wildcard "*". For more information on filters, see [Event Filters](https://docs.oracle.com/en-us/iaas/Content/Events/Concepts/filterevents.htm).
        /// </summary>
        public InputList<string> ObjectNameFilters
        {
            get => _objectNameFilters ?? (_objectNameFilters = new InputList<string>());
            set => _objectNameFilters = value;
        }

        /// <summary>
        /// Name of the Object Storage bucket.
        /// </summary>
        [Input("osBucketName", required: true)]
        public Input<string> OsBucketName { get; set; } = null!;

        /// <summary>
        /// Object Storage namespace.
        /// </summary>
        [Input("osNamespace", required: true)]
        public Input<string> OsNamespace { get; set; } = null!;

        [Input("overrides")]
        private InputList<Inputs.LogAnalyticsObjectCollectionRuleOverrideArgs>? _overrides;

        /// <summary>
        /// (Updatable) The override is used to modify some important configuration properties for objects matching a specific pattern inside the bucket. Supported propeties for override are - logSourceName, charEncoding. Supported matchType for override are "contains".
        /// </summary>
        public InputList<Inputs.LogAnalyticsObjectCollectionRuleOverrideArgs> Overrides
        {
            get => _overrides ?? (_overrides = new InputList<Inputs.LogAnalyticsObjectCollectionRuleOverrideArgs>());
            set => _overrides = value;
        }

        /// <summary>
        /// The oldest time of the file in the bucket to consider for collection. Accepted values are: BEGINNING or CURRENT_TIME or RFC3339 formatted datetime string. When collectionType is LIVE, specifying pollSince value other than CURRENT_TIME will result in error.
        /// </summary>
        [Input("pollSince")]
        public Input<string>? PollSince { get; set; }

        /// <summary>
        /// The oldest time of the file in the bucket to consider for collection. Accepted values are: CURRENT_TIME or RFC3339 formatted datetime string. When collectionType is LIVE, specifying pollTill will result in error.
        /// </summary>
        [Input("pollTill")]
        public Input<string>? PollTill { get; set; }

        public LogAnalyticsObjectCollectionRuleArgs()
        {
        }
    }

    public sealed class LogAnalyticsObjectCollectionRuleState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) An optional character encoding to aid in detecting the character encoding of the contents of the objects while processing. It is recommended to set this value as ISO_8589_1 when configuring content of the objects having more numeric characters, and very few alphabets. For e.g. this applies when configuring VCN Flow Logs.
        /// </summary>
        [Input("charEncoding")]
        public Input<string>? CharEncoding { get; set; }

        /// <summary>
        /// The type of collection. Supported collection types: LIVE, HISTORIC, HISTORIC_LIVE
        /// </summary>
        [Input("collectionType")]
        public Input<string>? CollectionType { get; set; }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to which this rule belongs.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) A string that describes the details of the rule. It does not have to be unique, and can be changed. Avoid entering confidential information.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) Logging Analytics entity OCID. Associates the processed logs with the given entity (optional).
        /// </summary>
        [Input("entityId")]
        public Input<string>? EntityId { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// A detailed status of the life cycle state.
        /// </summary>
        [Input("lifecycleDetails")]
        public Input<string>? LifecycleDetails { get; set; }

        /// <summary>
        /// (Updatable) Logging Analytics Log group OCID to associate the processed logs with.
        /// </summary>
        [Input("logGroupId")]
        public Input<string>? LogGroupId { get; set; }

        /// <summary>
        /// (Updatable) Name of the Logging Analytics Source to use for the processing.
        /// </summary>
        [Input("logSourceName")]
        public Input<string>? LogSourceName { get; set; }

        /// <summary>
        /// A unique name given to the rule. The name must be unique within the tenancy, and cannot be modified.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The Logging Analytics namespace used for the request.
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        [Input("objectNameFilters")]
        private InputList<string>? _objectNameFilters;

        /// <summary>
        /// (Updatable) When the filters are provided, only the objects matching the filters are picked up for processing. The matchType supported is exact match and accommodates wildcard "*". For more information on filters, see [Event Filters](https://docs.oracle.com/en-us/iaas/Content/Events/Concepts/filterevents.htm).
        /// </summary>
        public InputList<string> ObjectNameFilters
        {
            get => _objectNameFilters ?? (_objectNameFilters = new InputList<string>());
            set => _objectNameFilters = value;
        }

        /// <summary>
        /// Name of the Object Storage bucket.
        /// </summary>
        [Input("osBucketName")]
        public Input<string>? OsBucketName { get; set; }

        /// <summary>
        /// Object Storage namespace.
        /// </summary>
        [Input("osNamespace")]
        public Input<string>? OsNamespace { get; set; }

        [Input("overrides")]
        private InputList<Inputs.LogAnalyticsObjectCollectionRuleOverrideGetArgs>? _overrides;

        /// <summary>
        /// (Updatable) The override is used to modify some important configuration properties for objects matching a specific pattern inside the bucket. Supported propeties for override are - logSourceName, charEncoding. Supported matchType for override are "contains".
        /// </summary>
        public InputList<Inputs.LogAnalyticsObjectCollectionRuleOverrideGetArgs> Overrides
        {
            get => _overrides ?? (_overrides = new InputList<Inputs.LogAnalyticsObjectCollectionRuleOverrideGetArgs>());
            set => _overrides = value;
        }

        /// <summary>
        /// The oldest time of the file in the bucket to consider for collection. Accepted values are: BEGINNING or CURRENT_TIME or RFC3339 formatted datetime string. When collectionType is LIVE, specifying pollSince value other than CURRENT_TIME will result in error.
        /// </summary>
        [Input("pollSince")]
        public Input<string>? PollSince { get; set; }

        /// <summary>
        /// The oldest time of the file in the bucket to consider for collection. Accepted values are: CURRENT_TIME or RFC3339 formatted datetime string. When collectionType is LIVE, specifying pollTill will result in error.
        /// </summary>
        [Input("pollTill")]
        public Input<string>? PollTill { get; set; }

        /// <summary>
        /// The current state of the rule.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The time when this rule was created. An RFC3339 formatted datetime string.
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The time when this rule was last updated. An RFC3339 formatted datetime string.
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        public LogAnalyticsObjectCollectionRuleState()
        {
        }
    }
}
