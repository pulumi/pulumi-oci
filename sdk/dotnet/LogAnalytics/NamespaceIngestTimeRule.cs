// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.LogAnalytics
{
    /// <summary>
    /// This resource provides the Namespace Ingest Time Rule resource in Oracle Cloud Infrastructure Log Analytics service.
    /// 
    /// Creates a new ingest time rule in the specified compartment. You may also specify optional information such as description, defined tags, and free-form tags.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testNamespaceIngestTimeRule = new Oci.LogAnalytics.NamespaceIngestTimeRule("testNamespaceIngestTimeRule", new()
    ///     {
    ///         Actions = new[]
    ///         {
    ///             new Oci.LogAnalytics.Inputs.NamespaceIngestTimeRuleActionArgs
    ///             {
    ///                 CompartmentId = @var.Compartment_id,
    ///                 MetricName = oci_monitoring_metric.Test_metric.Name,
    ///                 Namespace = @var.Namespace_ingest_time_rule_actions_namespace,
    ///                 Type = @var.Namespace_ingest_time_rule_actions_type,
    ///                 Dimensions = @var.Namespace_ingest_time_rule_actions_dimensions,
    ///                 ResourceGroup = @var.Namespace_ingest_time_rule_actions_resource_group,
    ///             },
    ///         },
    ///         CompartmentId = @var.Compartment_id,
    ///         Conditions = new Oci.LogAnalytics.Inputs.NamespaceIngestTimeRuleConditionsArgs
    ///         {
    ///             FieldName = @var.Namespace_ingest_time_rule_conditions_field_name,
    ///             FieldOperator = @var.Namespace_ingest_time_rule_conditions_field_operator,
    ///             FieldValue = @var.Namespace_ingest_time_rule_conditions_field_value,
    ///             Kind = @var.Namespace_ingest_time_rule_conditions_kind,
    ///             AdditionalConditions = new[]
    ///             {
    ///                 new Oci.LogAnalytics.Inputs.NamespaceIngestTimeRuleConditionsAdditionalConditionArgs
    ///                 {
    ///                     ConditionField = @var.Namespace_ingest_time_rule_conditions_additional_conditions_condition_field,
    ///                     ConditionOperator = @var.Namespace_ingest_time_rule_conditions_additional_conditions_condition_operator,
    ///                     ConditionValue = @var.Namespace_ingest_time_rule_conditions_additional_conditions_condition_value,
    ///                 },
    ///             },
    ///         },
    ///         DisplayName = @var.Namespace_ingest_time_rule_display_name,
    ///         Namespace = @var.Namespace_ingest_time_rule_namespace,
    ///         DefinedTags = 
    ///         {
    ///             { "foo-namespace.bar-key", "value" },
    ///         },
    ///         Description = @var.Namespace_ingest_time_rule_description,
    ///         FreeformTags = 
    ///         {
    ///             { "bar-key", "value" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// NamespaceIngestTimeRules can be imported using the `id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import oci:LogAnalytics/namespaceIngestTimeRule:NamespaceIngestTimeRule test_namespace_ingest_time_rule "namespaces/{namespaceName}/ingestTimeRules/{ingestTimeRuleId}"
    /// ```
    /// </summary>
    [OciResourceType("oci:LogAnalytics/namespaceIngestTimeRule:NamespaceIngestTimeRule")]
    public partial class NamespaceIngestTimeRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) The action(s) to be performed if the ingest time rule condition(s) are satisfied.
        /// </summary>
        [Output("actions")]
        public Output<ImmutableArray<Outputs.NamespaceIngestTimeRuleAction>> Actions { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The condition(s) to evaluate for an ingest time rule.
        /// </summary>
        [Output("conditions")]
        public Output<Outputs.NamespaceIngestTimeRuleConditions> Conditions { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, object>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Description for this resource.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The ingest time rule display name.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, object>> FreeformTags { get; private set; } = null!;

        [Output("ingestTimeRuleId")]
        public Output<string> IngestTimeRuleId { get; private set; } = null!;

        /// <summary>
        /// A flag indicating whether or not the ingest time rule is enabled.
        /// </summary>
        [Output("isEnabled")]
        public Output<bool> IsEnabled { get; private set; } = null!;

        /// <summary>
        /// The Logging Analytics namespace used for the request.
        /// </summary>
        [Output("namespace")]
        public Output<string> Namespace { get; private set; } = null!;

        /// <summary>
        /// The current state of the ingest time rule.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The date and time the resource was created, in the format defined by RFC3339.
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The date and time the resource was last updated, in the format defined by RFC3339.
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;


        /// <summary>
        /// Create a NamespaceIngestTimeRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NamespaceIngestTimeRule(string name, NamespaceIngestTimeRuleArgs args, CustomResourceOptions? options = null)
            : base("oci:LogAnalytics/namespaceIngestTimeRule:NamespaceIngestTimeRule", name, args ?? new NamespaceIngestTimeRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NamespaceIngestTimeRule(string name, Input<string> id, NamespaceIngestTimeRuleState? state = null, CustomResourceOptions? options = null)
            : base("oci:LogAnalytics/namespaceIngestTimeRule:NamespaceIngestTimeRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NamespaceIngestTimeRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NamespaceIngestTimeRule Get(string name, Input<string> id, NamespaceIngestTimeRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new NamespaceIngestTimeRule(name, id, state, options);
        }
    }

    public sealed class NamespaceIngestTimeRuleArgs : global::Pulumi.ResourceArgs
    {
        [Input("actions", required: true)]
        private InputList<Inputs.NamespaceIngestTimeRuleActionArgs>? _actions;

        /// <summary>
        /// (Updatable) The action(s) to be performed if the ingest time rule condition(s) are satisfied.
        /// </summary>
        public InputList<Inputs.NamespaceIngestTimeRuleActionArgs> Actions
        {
            get => _actions ?? (_actions = new InputList<Inputs.NamespaceIngestTimeRuleActionArgs>());
            set => _actions = value;
        }

        /// <summary>
        /// (Updatable) Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// (Updatable) The condition(s) to evaluate for an ingest time rule.
        /// </summary>
        [Input("conditions", required: true)]
        public Input<Inputs.NamespaceIngestTimeRuleConditionsArgs> Conditions { get; set; } = null!;

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) Description for this resource.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) The ingest time rule display name.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// The Logging Analytics namespace used for the request.
        /// </summary>
        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        public NamespaceIngestTimeRuleArgs()
        {
        }
        public static new NamespaceIngestTimeRuleArgs Empty => new NamespaceIngestTimeRuleArgs();
    }

    public sealed class NamespaceIngestTimeRuleState : global::Pulumi.ResourceArgs
    {
        [Input("actions")]
        private InputList<Inputs.NamespaceIngestTimeRuleActionGetArgs>? _actions;

        /// <summary>
        /// (Updatable) The action(s) to be performed if the ingest time rule condition(s) are satisfied.
        /// </summary>
        public InputList<Inputs.NamespaceIngestTimeRuleActionGetArgs> Actions
        {
            get => _actions ?? (_actions = new InputList<Inputs.NamespaceIngestTimeRuleActionGetArgs>());
            set => _actions = value;
        }

        /// <summary>
        /// (Updatable) Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// (Updatable) The condition(s) to evaluate for an ingest time rule.
        /// </summary>
        [Input("conditions")]
        public Input<Inputs.NamespaceIngestTimeRuleConditionsGetArgs>? Conditions { get; set; }

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) Description for this resource.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) The ingest time rule display name.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        [Input("ingestTimeRuleId")]
        public Input<string>? IngestTimeRuleId { get; set; }

        /// <summary>
        /// A flag indicating whether or not the ingest time rule is enabled.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// The Logging Analytics namespace used for the request.
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        /// <summary>
        /// The current state of the ingest time rule.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The date and time the resource was created, in the format defined by RFC3339.
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The date and time the resource was last updated, in the format defined by RFC3339.
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        public NamespaceIngestTimeRuleState()
        {
        }
        public static new NamespaceIngestTimeRuleState Empty => new NamespaceIngestTimeRuleState();
    }
}
