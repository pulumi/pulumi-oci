// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.LogAnalytics
{
    /// <summary>
    /// This resource provides the Namespace Lookups Append Data Management resource in Oracle Cloud Infrastructure Log Analytics service.
    /// 
    /// Appends data to the lookup content. The csv file containing the content to be appended is passed in as binary data in the request.
    /// 
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// Import is not supported for NamespaceLookupsAppendDataManagement
    /// </summary>
    [OciResourceType("oci:LogAnalytics/namespaceLookupsAppendDataManagement:NamespaceLookupsAppendDataManagement")]
    public partial class NamespaceLookupsAppendDataManagement : global::Pulumi.CustomResource
    {
        [Output("appendLookupFile")]
        public Output<string> AppendLookupFile { get; private set; } = null!;

        /// <summary>
        /// The character encoding of the uploaded file.
        /// </summary>
        [Output("charEncoding")]
        public Output<string> CharEncoding { get; private set; } = null!;

        /// <summary>
        /// A value of `100-continue` requests preliminary verification of the request method, path, and headers before the request body is sent. If no error results from such verification, the server will send a 100 (Continue) interim response to indicate readiness for the request body. The only allowed value for this parameter is "100-Continue" (case-insensitive).
        /// </summary>
        [Output("expect")]
        public Output<string> Expect { get; private set; } = null!;

        /// <summary>
        /// is force
        /// </summary>
        [Output("isForce")]
        public Output<bool> IsForce { get; private set; } = null!;

        /// <summary>
        /// The name of the lookup to operate on.
        /// </summary>
        [Output("lookupName")]
        public Output<string> LookupName { get; private set; } = null!;

        /// <summary>
        /// The Logging Analytics namespace used for the request. 
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("namespace")]
        public Output<string> Namespace { get; private set; } = null!;


        /// <summary>
        /// Create a NamespaceLookupsAppendDataManagement resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NamespaceLookupsAppendDataManagement(string name, NamespaceLookupsAppendDataManagementArgs args, CustomResourceOptions? options = null)
            : base("oci:LogAnalytics/namespaceLookupsAppendDataManagement:NamespaceLookupsAppendDataManagement", name, args ?? new NamespaceLookupsAppendDataManagementArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NamespaceLookupsAppendDataManagement(string name, Input<string> id, NamespaceLookupsAppendDataManagementState? state = null, CustomResourceOptions? options = null)
            : base("oci:LogAnalytics/namespaceLookupsAppendDataManagement:NamespaceLookupsAppendDataManagement", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NamespaceLookupsAppendDataManagement resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NamespaceLookupsAppendDataManagement Get(string name, Input<string> id, NamespaceLookupsAppendDataManagementState? state = null, CustomResourceOptions? options = null)
        {
            return new NamespaceLookupsAppendDataManagement(name, id, state, options);
        }
    }

    public sealed class NamespaceLookupsAppendDataManagementArgs : global::Pulumi.ResourceArgs
    {
        [Input("appendLookupFile", required: true)]
        public Input<string> AppendLookupFile { get; set; } = null!;

        /// <summary>
        /// The character encoding of the uploaded file.
        /// </summary>
        [Input("charEncoding")]
        public Input<string>? CharEncoding { get; set; }

        /// <summary>
        /// A value of `100-continue` requests preliminary verification of the request method, path, and headers before the request body is sent. If no error results from such verification, the server will send a 100 (Continue) interim response to indicate readiness for the request body. The only allowed value for this parameter is "100-Continue" (case-insensitive).
        /// </summary>
        [Input("expect")]
        public Input<string>? Expect { get; set; }

        /// <summary>
        /// is force
        /// </summary>
        [Input("isForce")]
        public Input<bool>? IsForce { get; set; }

        /// <summary>
        /// The name of the lookup to operate on.
        /// </summary>
        [Input("lookupName", required: true)]
        public Input<string> LookupName { get; set; } = null!;

        /// <summary>
        /// The Logging Analytics namespace used for the request. 
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        public NamespaceLookupsAppendDataManagementArgs()
        {
        }
        public static new NamespaceLookupsAppendDataManagementArgs Empty => new NamespaceLookupsAppendDataManagementArgs();
    }

    public sealed class NamespaceLookupsAppendDataManagementState : global::Pulumi.ResourceArgs
    {
        [Input("appendLookupFile")]
        public Input<string>? AppendLookupFile { get; set; }

        /// <summary>
        /// The character encoding of the uploaded file.
        /// </summary>
        [Input("charEncoding")]
        public Input<string>? CharEncoding { get; set; }

        /// <summary>
        /// A value of `100-continue` requests preliminary verification of the request method, path, and headers before the request body is sent. If no error results from such verification, the server will send a 100 (Continue) interim response to indicate readiness for the request body. The only allowed value for this parameter is "100-Continue" (case-insensitive).
        /// </summary>
        [Input("expect")]
        public Input<string>? Expect { get; set; }

        /// <summary>
        /// is force
        /// </summary>
        [Input("isForce")]
        public Input<bool>? IsForce { get; set; }

        /// <summary>
        /// The name of the lookup to operate on.
        /// </summary>
        [Input("lookupName")]
        public Input<string>? LookupName { get; set; }

        /// <summary>
        /// The Logging Analytics namespace used for the request. 
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        public NamespaceLookupsAppendDataManagementState()
        {
        }
        public static new NamespaceLookupsAppendDataManagementState Empty => new NamespaceLookupsAppendDataManagementState();
    }
}
