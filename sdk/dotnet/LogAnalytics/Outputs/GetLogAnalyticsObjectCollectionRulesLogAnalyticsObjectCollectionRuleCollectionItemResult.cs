// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.LogAnalytics.Outputs
{

    [OutputType]
    public sealed class GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemResult
    {
        /// <summary>
        /// An optional character encoding to aid in detecting the character encoding of the contents of the objects while processing. It is recommended to set this value as ISO_8589_1 when configuring content of the objects having more numeric characters, and very few alphabets. For e.g. this applies when configuring VCN Flow Logs.
        /// </summary>
        public readonly string CharEncoding;
        /// <summary>
        /// The type of collection. Supported collection types: LIVE, HISTORIC, HISTORIC_LIVE
        /// </summary>
        public readonly string CollectionType;
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// A string that describes the details of the rule. It does not have to be unique, and can be changed. Avoid entering confidential information.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Logging Analytics entity OCID to associate the processed logs with.
        /// </summary>
        public readonly string EntityId;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this rule.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Whether or not this rule is currently enabled.
        /// </summary>
        public readonly bool IsEnabled;
        /// <summary>
        /// Flag to allow historic collection if poll period overlaps with existing ACTIVE collection rule
        /// </summary>
        public readonly bool IsForceHistoricCollection;
        /// <summary>
        /// Last Collected Object for the rule
        /// </summary>
        public readonly string LastCollectedObject;
        /// <summary>
        /// A detailed status of the life cycle state.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// Logging Analytics Log group OCID to associate the processed logs with.
        /// </summary>
        public readonly string LogGroupId;
        /// <summary>
        /// The logSet to be associated with the processed logs. The logSet feature can be used by customers with high volume of data  and this feature has to be enabled for a given tenancy prior to its usage. When logSetExtRegex value is provided, it will take precedence over this logSet value and logSet will be computed dynamically  using logSetKey and logSetExtRegex.
        /// </summary>
        public readonly string LogSet;
        /// <summary>
        /// The regex to be applied against given logSetKey. Regex has to be in string escaped format.
        /// </summary>
        public readonly string LogSetExtRegex;
        /// <summary>
        /// An optional parameter to indicate from where the logSet to be extracted using logSetExtRegex. Default value is OBJECT_PATH (e.g. /n/&lt;namespace&gt;/b/&lt;bucketname&gt;/o/&lt;objectname&gt;).
        /// </summary>
        public readonly string LogSetKey;
        /// <summary>
        /// Name of the Logging Analytics Source to use for the processing.
        /// </summary>
        public readonly string LogSourceName;
        /// <summary>
        /// Type of files/objects in this object collection rule.
        /// </summary>
        public readonly string LogType;
        /// <summary>
        /// A filter to return rules only matching with this name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The Logging Analytics namespace used for the request.
        /// </summary>
        public readonly string Namespace;
        /// <summary>
        /// When the filters are provided, only the objects matching the filters are picked up for processing. The matchType supported is exact match and accommodates wildcard "*". For more information on filters, see [Event Filters](https://docs.oracle.com/en-us/iaas/Content/Events/Concepts/filterevents.htm).
        /// </summary>
        public readonly ImmutableArray<string> ObjectNameFilters;
        /// <summary>
        /// Name of the Object Storage bucket.
        /// </summary>
        public readonly string OsBucketName;
        /// <summary>
        /// Object Storage namespace.
        /// </summary>
        public readonly string OsNamespace;
        /// <summary>
        /// Use this to override some property values which are defined at bucket level to the scope of object. Supported propeties for override are, logSourceName, charEncoding. Supported matchType for override are "contains".
        /// </summary>
        public readonly ImmutableArray<Outputs.GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideResult> Overrides;
        /// <summary>
        /// The oldest time of the file in the bucket to consider for collection. Accepted values are: BEGINNING or CURRENT_TIME or RFC3339 formatted datetime string. When collectionType is LIVE, specifying pollSince value other than CURRENT_TIME will result in error.
        /// </summary>
        public readonly string PollSince;
        /// <summary>
        /// The oldest time of the file in the bucket to consider for collection. Accepted values are: CURRENT_TIME or RFC3339 formatted datetime string. When collectionType is LIVE, specifying pollTill will result in error.
        /// </summary>
        public readonly string PollTill;
        /// <summary>
        /// Lifecycle state filter.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The time from which to consume the objects, if streamCursorType is AT_TIME.
        /// </summary>
        public readonly string StreamCursorTime;
        /// <summary>
        /// Cursor type used to fetch messages from stream. When the streamCursorType is set to DEFAULT, the existing cursor position will be used if already set by any previous objection collection rule(s) using the same stream.  Otherwise, the behaviour is to consume from the oldest available message in the stream.  When the streamCursorType is set to TRIM_HORIZON, the behaviour is to start consuming from the oldest available message in the stream.  When the streamCursorType is set to LATEST, the behavior is to start consuming messages that were published after the creation of this rule.  When the streamCursorType is set to AT_TIME, the behavior is to start consuming from a given time.  For more information on cursor types, see [Stream Consumer Groups](https://docs.oracle.com/en-us/iaas/Content/Streaming/Tasks/using_consumer_groups.htm).
        /// </summary>
        public readonly string StreamCursorType;
        /// <summary>
        /// A Stream OCID is required for Object Collection rules of type LIVE or HISTORIC_LIVE, which will be used by Logging Analytics while creating Event Rule and consume the event notifications created by the Object Storage.
        /// </summary>
        public readonly string StreamId;
        /// <summary>
        /// The time when this rule was created. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time when this rule was last updated. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeUpdated;
        /// <summary>
        /// Timezone to be used when processing log entries whose timestamps do not include an explicit timezone.  When this property is not specified, the timezone of the entity specified is used.  If the entity is also not specified or do not have a valid timezone then UTC is used.
        /// </summary>
        public readonly string Timezone;

        [OutputConstructor]
        private GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemResult(
            string charEncoding,

            string collectionType,

            string compartmentId,

            ImmutableDictionary<string, string> definedTags,

            string description,

            string entityId,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            bool isEnabled,

            bool isForceHistoricCollection,

            string lastCollectedObject,

            string lifecycleDetails,

            string logGroupId,

            string logSet,

            string logSetExtRegex,

            string logSetKey,

            string logSourceName,

            string logType,

            string name,

            string @namespace,

            ImmutableArray<string> objectNameFilters,

            string osBucketName,

            string osNamespace,

            ImmutableArray<Outputs.GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideResult> overrides,

            string pollSince,

            string pollTill,

            string state,

            string streamCursorTime,

            string streamCursorType,

            string streamId,

            string timeCreated,

            string timeUpdated,

            string timezone)
        {
            CharEncoding = charEncoding;
            CollectionType = collectionType;
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            Description = description;
            EntityId = entityId;
            FreeformTags = freeformTags;
            Id = id;
            IsEnabled = isEnabled;
            IsForceHistoricCollection = isForceHistoricCollection;
            LastCollectedObject = lastCollectedObject;
            LifecycleDetails = lifecycleDetails;
            LogGroupId = logGroupId;
            LogSet = logSet;
            LogSetExtRegex = logSetExtRegex;
            LogSetKey = logSetKey;
            LogSourceName = logSourceName;
            LogType = logType;
            Name = name;
            Namespace = @namespace;
            ObjectNameFilters = objectNameFilters;
            OsBucketName = osBucketName;
            OsNamespace = osNamespace;
            Overrides = overrides;
            PollSince = pollSince;
            PollTill = pollTill;
            State = state;
            StreamCursorTime = streamCursorTime;
            StreamCursorType = streamCursorType;
            StreamId = streamId;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            Timezone = timezone;
        }
    }
}
