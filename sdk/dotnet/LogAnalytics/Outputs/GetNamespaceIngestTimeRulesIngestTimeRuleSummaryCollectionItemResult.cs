// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.LogAnalytics.Outputs
{

    [OutputType]
    public sealed class GetNamespaceIngestTimeRulesIngestTimeRuleSummaryCollectionItemResult
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// The ingest time rule condition kind used for filtering. Only rules with conditions of the specified kind will be returned.
        /// </summary>
        public readonly string? ConditionKind;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? DefinedTags;
        /// <summary>
        /// Description for this resource.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// A filter to return rules whose displayName matches in whole or in part the specified value. The match is case-insensitive.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// The field name used for filtering. Only rules using the specified field name will be returned.
        /// </summary>
        public readonly string? FieldName;
        /// <summary>
        /// The field value used for filtering. Only rules using the specified field value will be returned.
        /// </summary>
        public readonly string? FieldValue;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? FreeformTags;
        /// <summary>
        /// The log analytics entity OCID. This ID is a reference used by log analytics features and it represents a resource that is provisioned and managed by the customer on their premises or on the cloud.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// A flag indicating whether or not the ingest time rule is enabled.
        /// </summary>
        public readonly bool? IsEnabled;
        /// <summary>
        /// The rule lifecycle state used for filtering. Currently supported values are ACTIVE and DELETED.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// The date and time the resource was created, in the format defined by RFC3339.
        /// </summary>
        public readonly string? TimeCreated;
        /// <summary>
        /// The date and time the resource was last updated, in the format defined by RFC3339.
        /// </summary>
        public readonly string? TimeUpdated;

        [OutputConstructor]
        private GetNamespaceIngestTimeRulesIngestTimeRuleSummaryCollectionItemResult(
            string? compartmentId,

            string? conditionKind,

            ImmutableDictionary<string, object>? definedTags,

            string? description,

            string? displayName,

            string? fieldName,

            string? fieldValue,

            ImmutableDictionary<string, object>? freeformTags,

            string? id,

            bool? isEnabled,

            string? state,

            string? timeCreated,

            string? timeUpdated)
        {
            CompartmentId = compartmentId;
            ConditionKind = conditionKind;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            FieldName = fieldName;
            FieldValue = fieldValue;
            FreeformTags = freeformTags;
            Id = id;
            IsEnabled = isEnabled;
            State = state;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
