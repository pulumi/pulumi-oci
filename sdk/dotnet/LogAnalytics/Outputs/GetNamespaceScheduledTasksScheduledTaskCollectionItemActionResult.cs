// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.LogAnalytics.Outputs
{

    [OutputType]
    public sealed class GetNamespaceScheduledTasksScheduledTaskCollectionItemActionResult
    {
        /// <summary>
        /// if true, purge child compartments data
        /// </summary>
        public readonly bool CompartmentIdInSubtree;
        /// <summary>
        /// the type of the log data to be purged
        /// </summary>
        public readonly string DataType;
        public readonly ImmutableArray<Outputs.GetNamespaceScheduledTasksScheduledTaskCollectionItemActionMetricExtractionResult> MetricExtractions;
        /// <summary>
        /// the compartment OCID under which the data will be purged
        /// </summary>
        public readonly string PurgeCompartmentId;
        /// <summary>
        /// The duration of data to be retained, which is used to calculate the timeDataEnded when the task fires. The value should be negative. Purge duration in ISO 8601 extended format as described in https://en.wikipedia.org/wiki/ISO_8601#Durations. The largest supported unit is D, e.g. -P365D (not -P1Y) or -P14D (not -P2W).
        /// </summary>
        public readonly string PurgeDuration;
        /// <summary>
        /// Purge query string.
        /// </summary>
        public readonly string QueryString;
        /// <summary>
        /// The ManagementSavedSearch id [OCID] utilized in the action.
        /// </summary>
        public readonly string SavedSearchId;
        /// <summary>
        /// details for scheduled task using template
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNamespaceScheduledTasksScheduledTaskCollectionItemActionTemplateDetailResult> TemplateDetails;
        /// <summary>
        /// Schedule type discriminator.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetNamespaceScheduledTasksScheduledTaskCollectionItemActionResult(
            bool compartmentIdInSubtree,

            string dataType,

            ImmutableArray<Outputs.GetNamespaceScheduledTasksScheduledTaskCollectionItemActionMetricExtractionResult> metricExtractions,

            string purgeCompartmentId,

            string purgeDuration,

            string queryString,

            string savedSearchId,

            ImmutableArray<Outputs.GetNamespaceScheduledTasksScheduledTaskCollectionItemActionTemplateDetailResult> templateDetails,

            string type)
        {
            CompartmentIdInSubtree = compartmentIdInSubtree;
            DataType = dataType;
            MetricExtractions = metricExtractions;
            PurgeCompartmentId = purgeCompartmentId;
            PurgeDuration = purgeDuration;
            QueryString = queryString;
            SavedSearchId = savedSearchId;
            TemplateDetails = templateDetails;
            Type = type;
        }
    }
}
