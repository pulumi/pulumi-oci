// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.LogAnalytics.Outputs
{

    [OutputType]
    public sealed class GetNamespaceStorageOverlappingRecallsOverlappingRecallCollectionItemResult
    {
        /// <summary>
        /// This is the id of the associated recalled data collection
        /// </summary>
        public readonly string CollectionId;
        /// <summary>
        /// This is the user who initiated the recall request
        /// </summary>
        public readonly string CreatedBy;
        /// <summary>
        /// This is the list of logsets associated with this recall
        /// </summary>
        public readonly string LogSets;
        /// <summary>
        /// This is the purpose of the recall
        /// </summary>
        public readonly string Purpose;
        /// <summary>
        /// This is the query associated with the recall
        /// </summary>
        public readonly string QueryString;
        /// <summary>
        /// This is the id for the recall request
        /// </summary>
        public readonly string RecallId;
        /// <summary>
        /// This is the status of the recall
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// This is the end of the time range for recalled data
        /// </summary>
        public readonly string TimeDataEnded;
        /// <summary>
        /// This is the start of the time range for recalled data
        /// </summary>
        public readonly string TimeDataStarted;
        /// <summary>
        /// This is the time when the recall operation was started for this recall request
        /// </summary>
        public readonly string TimeStarted;

        [OutputConstructor]
        private GetNamespaceStorageOverlappingRecallsOverlappingRecallCollectionItemResult(
            string collectionId,

            string createdBy,

            string logSets,

            string purpose,

            string queryString,

            string recallId,

            string status,

            string timeDataEnded,

            string timeDataStarted,

            string timeStarted)
        {
            CollectionId = collectionId;
            CreatedBy = createdBy;
            LogSets = logSets;
            Purpose = purpose;
            QueryString = queryString;
            RecallId = recallId;
            Status = status;
            TimeDataEnded = timeDataEnded;
            TimeDataStarted = timeDataStarted;
            TimeStarted = timeStarted;
        }
    }
}
