// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.LogAnalytics.Outputs
{

    [OutputType]
    public sealed class GetNamespaceTemplatesLogAnalyticsTemplateCollectionItemResult
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Base64 encoded template content.
        /// </summary>
        public readonly string Content;
        /// <summary>
        /// Content format. For example - XML.
        /// </summary>
        public readonly string ContentFormat;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// Description for this resource.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Facets of the template
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNamespaceTemplatesLogAnalyticsTemplateCollectionItemFacetResult> Facets;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The log analytics entity OCID. This ID is a reference used by log analytics features and it represents a resource that is provisioned and managed by the customer on their premises or on the cloud.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The system flag.  A value of false denotes a custom, or user defined object.  A value of true denotes a built in object.
        /// </summary>
        public readonly bool IsSystem;
        /// <summary>
        /// The template name used for filtering.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Base64 encoded template parameters.
        /// </summary>
        public readonly string Parameters;
        /// <summary>
        /// Parameters format.  For example - NAME_VALUE_PAIR.
        /// </summary>
        public readonly string ParametersFormat;
        /// <summary>
        /// Base64 encoded parameters metadata definition.
        /// </summary>
        public readonly string ParametersMetadata;
        /// <summary>
        /// The template lifecycle state used for filtering. Currently supported values are ACTIVE and DELETED.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The date and time the resource was created, in the format defined by RFC3339.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The date and time the resource was last updated, in the format defined by RFC3339.
        /// </summary>
        public readonly string TimeUpdated;
        /// <summary>
        /// The template type used for filtering. Only templates of the specified type will be returned.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetNamespaceTemplatesLogAnalyticsTemplateCollectionItemResult(
            string compartmentId,

            string content,

            string contentFormat,

            ImmutableDictionary<string, string> definedTags,

            string description,

            ImmutableArray<Outputs.GetNamespaceTemplatesLogAnalyticsTemplateCollectionItemFacetResult> facets,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            bool isSystem,

            string name,

            string parameters,

            string parametersFormat,

            string parametersMetadata,

            string state,

            string timeCreated,

            string timeUpdated,

            string type)
        {
            CompartmentId = compartmentId;
            Content = content;
            ContentFormat = contentFormat;
            DefinedTags = definedTags;
            Description = description;
            Facets = facets;
            FreeformTags = freeformTags;
            Id = id;
            IsSystem = isSystem;
            Name = name;
            Parameters = parameters;
            ParametersFormat = parametersFormat;
            ParametersMetadata = parametersMetadata;
            State = state;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            Type = type;
        }
    }
}
