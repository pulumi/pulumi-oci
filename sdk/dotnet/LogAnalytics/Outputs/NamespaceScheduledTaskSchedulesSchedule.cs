// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.LogAnalytics.Outputs
{

    [OutputType]
    public sealed class NamespaceScheduledTaskSchedulesSchedule
    {
        /// <summary>
        /// Value in cron format.
        /// </summary>
        public readonly string? Expression;
        /// <summary>
        /// Schedule misfire retry policy.
        /// </summary>
        public readonly string? MisfirePolicy;
        /// <summary>
        /// Recurring interval in ISO 8601 extended format as described in https://en.wikipedia.org/wiki/ISO_8601#Durations. The largest supported unit is D, e.g. P14D (not P2W). The value must be at least 5 minutes (PT5M) and at most 3 weeks (P21D or PT30240M).
        /// </summary>
        public readonly string? RecurringInterval;
        /// <summary>
        /// Number of times (0-based) to execute until auto-stop. Default value -1 will execute indefinitely. Value 0 will execute once.
        /// </summary>
        public readonly int? RepeatCount;
        /// <summary>
        /// Time zone, by default UTC.
        /// </summary>
        public readonly string? TimeZone;
        /// <summary>
        /// Schedule type discriminator.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private NamespaceScheduledTaskSchedulesSchedule(
            string? expression,

            string? misfirePolicy,

            string? recurringInterval,

            int? repeatCount,

            string? timeZone,

            string type)
        {
            Expression = expression;
            MisfirePolicy = misfirePolicy;
            RecurringInterval = recurringInterval;
            RepeatCount = repeatCount;
            TimeZone = timeZone;
            Type = type;
        }
    }
}
