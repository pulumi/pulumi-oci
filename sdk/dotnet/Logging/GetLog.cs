// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Logging
{
    public static class GetLog
    {
        /// <summary>
        /// This data source provides details about a specific Log resource in Oracle Cloud Infrastructure Logging service.
        /// 
        /// Gets the log object configuration for the log object OCID.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testLog = Oci.Logging.GetLog.Invoke(new()
        ///     {
        ///         LogGroupId = testLogGroup.Id,
        ///         LogId = testLogOciLoggingLog.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetLogResult> InvokeAsync(GetLogArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLogResult>("oci:Logging/getLog:getLog", args ?? new GetLogArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Log resource in Oracle Cloud Infrastructure Logging service.
        /// 
        /// Gets the log object configuration for the log object OCID.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testLog = Oci.Logging.GetLog.Invoke(new()
        ///     {
        ///         LogGroupId = testLogGroup.Id,
        ///         LogId = testLogOciLoggingLog.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetLogResult> Invoke(GetLogInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLogResult>("oci:Logging/getLog:getLog", args ?? new GetLogInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLogArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// OCID of a log group to work with.
        /// </summary>
        [Input("logGroupId", required: true)]
        public string LogGroupId { get; set; } = null!;

        /// <summary>
        /// OCID of a log to work with.
        /// </summary>
        [Input("logId", required: true)]
        public string LogId { get; set; } = null!;

        public GetLogArgs()
        {
        }
        public static new GetLogArgs Empty => new GetLogArgs();
    }

    public sealed class GetLogInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// OCID of a log group to work with.
        /// </summary>
        [Input("logGroupId", required: true)]
        public Input<string> LogGroupId { get; set; } = null!;

        /// <summary>
        /// OCID of a log to work with.
        /// </summary>
        [Input("logId", required: true)]
        public Input<string> LogId { get; set; } = null!;

        public GetLogInvokeArgs()
        {
        }
        public static new GetLogInvokeArgs Empty => new GetLogInvokeArgs();
    }


    [OutputType]
    public sealed class GetLogResult
    {
        /// <summary>
        /// The OCID of the compartment that the resource belongs to.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Log object configuration.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetLogConfigurationResult> Configurations;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// The user-friendly display name. This must be unique within the enclosing resource, and it's changeable. Avoid entering confidential information.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// The OCID of the resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Whether or not this resource is currently enabled.
        /// </summary>
        public readonly bool IsEnabled;
        /// <summary>
        /// Log group OCID.
        /// </summary>
        public readonly string LogGroupId;
        public readonly string LogId;
        /// <summary>
        /// The logType that the log object is for, whether custom or service.
        /// </summary>
        public readonly string LogType;
        /// <summary>
        /// Log retention duration in 30-day increments (30, 60, 90 and so on until 180).
        /// </summary>
        public readonly int RetentionDuration;
        /// <summary>
        /// The pipeline state.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The OCID of the tenancy.
        /// </summary>
        public readonly string TenancyId;
        /// <summary>
        /// Time the resource was created.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// Time the resource was last modified.
        /// </summary>
        public readonly string TimeLastModified;

        [OutputConstructor]
        private GetLogResult(
            string compartmentId,

            ImmutableArray<Outputs.GetLogConfigurationResult> configurations,

            ImmutableDictionary<string, object> definedTags,

            string displayName,

            ImmutableDictionary<string, object> freeformTags,

            string id,

            bool isEnabled,

            string logGroupId,

            string logId,

            string logType,

            int retentionDuration,

            string state,

            string tenancyId,

            string timeCreated,

            string timeLastModified)
        {
            CompartmentId = compartmentId;
            Configurations = configurations;
            DefinedTags = definedTags;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            IsEnabled = isEnabled;
            LogGroupId = logGroupId;
            LogId = logId;
            LogType = logType;
            RetentionDuration = retentionDuration;
            State = state;
            TenancyId = tenancyId;
            TimeCreated = timeCreated;
            TimeLastModified = timeLastModified;
        }
    }
}
