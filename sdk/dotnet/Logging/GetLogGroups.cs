// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Logging
{
    public static class GetLogGroups
    {
        /// <summary>
        /// This data source provides the list of Log Groups in Oracle Cloud Infrastructure Logging service.
        /// 
        /// Lists all log groups for the specified compartment or tenancy.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testLogGroups = Oci.Logging.GetLogGroups.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         DisplayName = @var.Log_group_display_name,
        ///         IsCompartmentIdInSubtree = @var.Log_group_is_compartment_id_in_subtree,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetLogGroupsResult> InvokeAsync(GetLogGroupsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLogGroupsResult>("oci:Logging/getLogGroups:getLogGroups", args ?? new GetLogGroupsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Log Groups in Oracle Cloud Infrastructure Logging service.
        /// 
        /// Lists all log groups for the specified compartment or tenancy.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testLogGroups = Oci.Logging.GetLogGroups.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         DisplayName = @var.Log_group_display_name,
        ///         IsCompartmentIdInSubtree = @var.Log_group_is_compartment_id_in_subtree,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetLogGroupsResult> Invoke(GetLogGroupsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLogGroupsResult>("oci:Logging/getLogGroups:getLogGroups", args ?? new GetLogGroupsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLogGroupsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Compartment OCID to list resources in. See compartmentIdInSubtree for nested compartments traversal.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// Resource name.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetLogGroupsFilterArgs>? _filters;
        public List<Inputs.GetLogGroupsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetLogGroupsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Specifies whether or not nested compartments should be traversed. Defaults to false.
        /// </summary>
        [Input("isCompartmentIdInSubtree")]
        public bool? IsCompartmentIdInSubtree { get; set; }

        public GetLogGroupsArgs()
        {
        }
        public static new GetLogGroupsArgs Empty => new GetLogGroupsArgs();
    }

    public sealed class GetLogGroupsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Compartment OCID to list resources in. See compartmentIdInSubtree for nested compartments traversal.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// Resource name.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetLogGroupsFilterInputArgs>? _filters;
        public InputList<Inputs.GetLogGroupsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetLogGroupsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Specifies whether or not nested compartments should be traversed. Defaults to false.
        /// </summary>
        [Input("isCompartmentIdInSubtree")]
        public Input<bool>? IsCompartmentIdInSubtree { get; set; }

        public GetLogGroupsInvokeArgs()
        {
        }
        public static new GetLogGroupsInvokeArgs Empty => new GetLogGroupsInvokeArgs();
    }


    [OutputType]
    public sealed class GetLogGroupsResult
    {
        /// <summary>
        /// The OCID of the compartment that the resource belongs to.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The user-friendly display name. This must be unique within the enclosing resource, and it's changeable. Avoid entering confidential information.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetLogGroupsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool? IsCompartmentIdInSubtree;
        /// <summary>
        /// The list of log_groups.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetLogGroupsLogGroupResult> LogGroups;

        [OutputConstructor]
        private GetLogGroupsResult(
            string compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetLogGroupsFilterResult> filters,

            string id,

            bool? isCompartmentIdInSubtree,

            ImmutableArray<Outputs.GetLogGroupsLogGroupResult> logGroups)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            IsCompartmentIdInSubtree = isCompartmentIdInSubtree;
            LogGroups = logGroups;
        }
    }
}
