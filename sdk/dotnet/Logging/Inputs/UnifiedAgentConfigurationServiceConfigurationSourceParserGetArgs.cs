// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Logging.Inputs
{

    public sealed class UnifiedAgentConfigurationServiceConfigurationSourceParserGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) CSV delimiter.
        /// </summary>
        [Input("delimiter")]
        public Input<string>? Delimiter { get; set; }

        /// <summary>
        /// (Updatable) Regex pattern.
        /// </summary>
        [Input("expression")]
        public Input<string>? Expression { get; set; }

        /// <summary>
        /// (Updatable) Specifies the time field for the event time. If the event doesn't have this field, the current time is used.
        /// </summary>
        [Input("fieldTimeKey")]
        public Input<string>? FieldTimeKey { get; set; }

        /// <summary>
        /// (Updatable) First line pattern format.
        /// </summary>
        [Input("formatFirstline")]
        public Input<string>? FormatFirstline { get; set; }

        [Input("formats")]
        private InputList<string>? _formats;

        /// <summary>
        /// (Updatable) Mutiline pattern format.
        /// </summary>
        public InputList<string> Formats
        {
            get => _formats ?? (_formats = new InputList<string>());
            set => _formats = value;
        }

        /// <summary>
        /// (Updatable) Grok failure key.
        /// </summary>
        [Input("grokFailureKey")]
        public Input<string>? GrokFailureKey { get; set; }

        /// <summary>
        /// (Updatable) Grok name key.
        /// </summary>
        [Input("grokNameKey")]
        public Input<string>? GrokNameKey { get; set; }

        /// <summary>
        /// (Updatable) If true, use Fluent::EventTime.now(current time) as a timestamp when the time_key is specified.
        /// </summary>
        [Input("isEstimateCurrentEvent")]
        public Input<bool>? IsEstimateCurrentEvent { get; set; }

        /// <summary>
        /// (Updatable) If true, keep the time field in the record.
        /// </summary>
        [Input("isKeepTimeKey")]
        public Input<bool>? IsKeepTimeKey { get; set; }

        /// <summary>
        /// (Updatable) If you don't need stream or logtag fields, set this to false.
        /// </summary>
        [Input("isMergeCriFields")]
        public Input<bool>? IsMergeCriFields { get; set; }

        /// <summary>
        /// (Updatable) If true, an empty string field is replaced with a null value.
        /// </summary>
        [Input("isNullEmptyString")]
        public Input<bool>? IsNullEmptyString { get; set; }

        /// <summary>
        /// (Updatable) Specifies whether or not to support colonless ident. Corresponds to the Fluentd support_colonless_ident parameter.
        /// </summary>
        [Input("isSupportColonlessIdent")]
        public Input<bool>? IsSupportColonlessIdent { get; set; }

        /// <summary>
        /// (Updatable) Specifies with priority or not. Corresponds to the Fluentd with_priority parameter.
        /// </summary>
        [Input("isWithPriority")]
        public Input<bool>? IsWithPriority { get; set; }

        [Input("keys")]
        private InputList<string>? _keys;

        /// <summary>
        /// (Updatable) CSV keys.
        /// </summary>
        public InputList<string> Keys
        {
            get => _keys ?? (_keys = new InputList<string>());
            set => _keys = value;
        }

        /// <summary>
        /// (Updatable) Syslog message format.
        /// </summary>
        [Input("messageFormat")]
        public Input<string>? MessageFormat { get; set; }

        /// <summary>
        /// (Updatable) Specifies the field name to contain logs.
        /// </summary>
        [Input("messageKey")]
        public Input<string>? MessageKey { get; set; }

        /// <summary>
        /// (Updatable) Multiline start regexp pattern.
        /// </summary>
        [Input("multiLineStartRegexp")]
        public Input<string>? MultiLineStartRegexp { get; set; }

        /// <summary>
        /// (Updatable) Optional nested JSON Parser for CRI. Supported fields are fieldTimeKey, timeFormat, and isKeepTimeKey.
        /// </summary>
        [Input("nestedParser")]
        public Input<Inputs.UnifiedAgentConfigurationServiceConfigurationSourceParserNestedParserGetArgs>? NestedParser { get; set; }

        /// <summary>
        /// (Updatable) Specify the null value pattern.
        /// </summary>
        [Input("nullValuePattern")]
        public Input<string>? NullValuePattern { get; set; }

        /// <summary>
        /// (Updatable) If true, a separator parameter can be further defined.
        /// </summary>
        [Input("parseNested")]
        public Input<bool>? ParseNested { get; set; }

        /// <summary>
        /// (Updatable) Type of fluent parser.
        /// </summary>
        [Input("parserType", required: true)]
        public Input<string> ParserType { get; set; } = null!;

        [Input("patterns")]
        private InputList<Inputs.UnifiedAgentConfigurationServiceConfigurationSourceParserPatternGetArgs>? _patterns;

        /// <summary>
        /// (Updatable) Grok pattern object.
        /// </summary>
        public InputList<Inputs.UnifiedAgentConfigurationServiceConfigurationSourceParserPatternGetArgs> Patterns
        {
            get => _patterns ?? (_patterns = new InputList<Inputs.UnifiedAgentConfigurationServiceConfigurationSourceParserPatternGetArgs>());
            set => _patterns = value;
        }

        /// <summary>
        /// (Updatable) record section of openmetrics parser.
        /// </summary>
        [Input("recordInput")]
        public Input<Inputs.UnifiedAgentConfigurationServiceConfigurationSourceParserRecordInputGetArgs>? RecordInput { get; set; }

        /// <summary>
        /// (Updatable) RFC 5424 time format.
        /// </summary>
        [Input("rfc5424timeFormat")]
        public Input<string>? Rfc5424timeFormat { get; set; }

        /// <summary>
        /// (Updatable) Keys of adjacent levels are joined by the separator.
        /// </summary>
        [Input("separator")]
        public Input<string>? Separator { get; set; }

        /// <summary>
        /// (Updatable) Syslog parser type.
        /// </summary>
        [Input("syslogParserType")]
        public Input<string>? SyslogParserType { get; set; }

        /// <summary>
        /// (Updatable) Process time value using the specified format.
        /// </summary>
        [Input("timeFormat")]
        public Input<string>? TimeFormat { get; set; }

        /// <summary>
        /// (Updatable) JSON parser time type.
        /// </summary>
        [Input("timeType")]
        public Input<string>? TimeType { get; set; }

        /// <summary>
        /// (Updatable) Specify the timeout for parse processing. This is mainly for detecting an incorrect regexp pattern.
        /// </summary>
        [Input("timeoutInMilliseconds")]
        public Input<int>? TimeoutInMilliseconds { get; set; }

        [Input("types")]
        private InputMap<string>? _types;

        /// <summary>
        /// (Updatable) Specify types for converting a field into another type. For example, With this configuration: &lt;parse&gt; @type csv keys time,host,req_id,user time_key time &lt;/parse&gt;
        /// 
        /// This incoming event: "2013/02/28 12:00:00,192.168.0.1,111,-"
        /// 
        /// is parsed as: 1362020400 (2013/02/28/ 12:00:00)
        /// 
        /// record: { "host"   : "192.168.0.1", "req_id" : "111", "user"   : "-" }
        /// </summary>
        public InputMap<string> Types
        {
            get => _types ?? (_types = new InputMap<string>());
            set => _types = value;
        }

        public UnifiedAgentConfigurationServiceConfigurationSourceParserGetArgs()
        {
        }
        public static new UnifiedAgentConfigurationServiceConfigurationSourceParserGetArgs Empty => new UnifiedAgentConfigurationServiceConfigurationSourceParserGetArgs();
    }
}
