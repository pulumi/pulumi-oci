// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Logging.Outputs
{

    [OutputType]
    public sealed class UnifiedAgentConfigurationServiceConfigurationSource
    {
        /// <summary>
        /// (Updatable) Advanced options for logging configuration
        /// </summary>
        public readonly Outputs.UnifiedAgentConfigurationServiceConfigurationSourceAdvancedOptions? AdvancedOptions;
        /// <summary>
        /// (Updatable) Windows event log channels.
        /// </summary>
        public readonly ImmutableArray<string> Channels;
        /// <summary>
        /// (Updatable) User customized source plugin.
        /// </summary>
        public readonly string? CustomPlugin;
        /// <summary>
        /// (Updatable) Unique name for the source.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// (Updatable) Source parser object.
        /// </summary>
        public readonly Outputs.UnifiedAgentConfigurationServiceConfigurationSourceParser? Parser;
        /// <summary>
        /// (Updatable) Absolute paths for log source files. Wildcards can be used.
        /// </summary>
        public readonly ImmutableArray<string> Paths;
        /// <summary>
        /// (Updatable) Unified schema logging source type.
        /// </summary>
        public readonly string SourceType;

        [OutputConstructor]
        private UnifiedAgentConfigurationServiceConfigurationSource(
            Outputs.UnifiedAgentConfigurationServiceConfigurationSourceAdvancedOptions? advancedOptions,

            ImmutableArray<string> channels,

            string? customPlugin,

            string? name,

            Outputs.UnifiedAgentConfigurationServiceConfigurationSourceParser? parser,

            ImmutableArray<string> paths,

            string sourceType)
        {
            AdvancedOptions = advancedOptions;
            Channels = channels;
            CustomPlugin = customPlugin;
            Name = name;
            Parser = parser;
            Paths = paths;
            SourceType = sourceType;
        }
    }
}
