// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Lustre
{
    public static class GetFileStorageLustreFileSystems
    {
        /// <summary>
        /// This data source provides the list of Lustre File Systems in Oracle Cloud Infrastructure Lustre File Storage service.
        /// 
        /// Gets a list of Lustre file systems.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testLustreFileSystems = Oci.Lustre.GetFileStorageLustreFileSystems.Invoke(new()
        ///     {
        ///         AvailabilityDomain = lustreFileSystemAvailabilityDomain,
        ///         CompartmentId = compartmentId,
        ///         DisplayName = lustreFileSystemDisplayName,
        ///         Id = lustreFileSystemId,
        ///         State = lustreFileSystemState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetFileStorageLustreFileSystemsResult> InvokeAsync(GetFileStorageLustreFileSystemsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFileStorageLustreFileSystemsResult>("oci:Lustre/getFileStorageLustreFileSystems:getFileStorageLustreFileSystems", args ?? new GetFileStorageLustreFileSystemsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Lustre File Systems in Oracle Cloud Infrastructure Lustre File Storage service.
        /// 
        /// Gets a list of Lustre file systems.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testLustreFileSystems = Oci.Lustre.GetFileStorageLustreFileSystems.Invoke(new()
        ///     {
        ///         AvailabilityDomain = lustreFileSystemAvailabilityDomain,
        ///         CompartmentId = compartmentId,
        ///         DisplayName = lustreFileSystemDisplayName,
        ///         Id = lustreFileSystemId,
        ///         State = lustreFileSystemState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetFileStorageLustreFileSystemsResult> Invoke(GetFileStorageLustreFileSystemsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFileStorageLustreFileSystemsResult>("oci:Lustre/getFileStorageLustreFileSystems:getFileStorageLustreFileSystems", args ?? new GetFileStorageLustreFileSystemsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Lustre File Systems in Oracle Cloud Infrastructure Lustre File Storage service.
        /// 
        /// Gets a list of Lustre file systems.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testLustreFileSystems = Oci.Lustre.GetFileStorageLustreFileSystems.Invoke(new()
        ///     {
        ///         AvailabilityDomain = lustreFileSystemAvailabilityDomain,
        ///         CompartmentId = compartmentId,
        ///         DisplayName = lustreFileSystemDisplayName,
        ///         Id = lustreFileSystemId,
        ///         State = lustreFileSystemState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetFileStorageLustreFileSystemsResult> Invoke(GetFileStorageLustreFileSystemsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetFileStorageLustreFileSystemsResult>("oci:Lustre/getFileStorageLustreFileSystems:getFileStorageLustreFileSystems", args ?? new GetFileStorageLustreFileSystemsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFileStorageLustreFileSystemsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the availability domain.  Example: `Uocm:PHX-AD-1`
        /// </summary>
        [Input("availabilityDomain")]
        public string? AvailabilityDomain { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given display name exactly.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetFileStorageLustreFileSystemsFilterArgs>? _filters;
        public List<Inputs.GetFileStorageLustreFileSystemsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetFileStorageLustreFileSystemsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Lustre file system.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetFileStorageLustreFileSystemsArgs()
        {
        }
        public static new GetFileStorageLustreFileSystemsArgs Empty => new GetFileStorageLustreFileSystemsArgs();
    }

    public sealed class GetFileStorageLustreFileSystemsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the availability domain.  Example: `Uocm:PHX-AD-1`
        /// </summary>
        [Input("availabilityDomain")]
        public Input<string>? AvailabilityDomain { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given display name exactly.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetFileStorageLustreFileSystemsFilterInputArgs>? _filters;
        public InputList<Inputs.GetFileStorageLustreFileSystemsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetFileStorageLustreFileSystemsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Lustre file system.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetFileStorageLustreFileSystemsInvokeArgs()
        {
        }
        public static new GetFileStorageLustreFileSystemsInvokeArgs Empty => new GetFileStorageLustreFileSystemsInvokeArgs();
    }


    [OutputType]
    public sealed class GetFileStorageLustreFileSystemsResult
    {
        /// <summary>
        /// The availability domain the file system is in. May be unset as a blank or NULL value.  Example: `Uocm:PHX-AD-1`
        /// </summary>
        public readonly string? AvailabilityDomain;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the Lustre file system.
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// A user-friendly name. It does not have to be unique, and it is changeable. Avoid entering confidential information.  Example: `My Lustre file system`
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetFileStorageLustreFileSystemsFilterResult> Filters;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Lustre file system.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The list of lustre_file_system_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFileStorageLustreFileSystemsLustreFileSystemCollectionResult> LustreFileSystemCollections;
        /// <summary>
        /// The current state of the Lustre file system.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetFileStorageLustreFileSystemsResult(
            string? availabilityDomain,

            string? compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetFileStorageLustreFileSystemsFilterResult> filters,

            string? id,

            ImmutableArray<Outputs.GetFileStorageLustreFileSystemsLustreFileSystemCollectionResult> lustreFileSystemCollections,

            string? state)
        {
            AvailabilityDomain = availabilityDomain;
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            LustreFileSystemCollections = lustreFileSystemCollections;
            State = state;
        }
    }
}
