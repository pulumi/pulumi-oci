// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ManagementAgent
{
    public static class GetManagementAgent
    {
        /// <summary>
        /// This data source provides details about a specific Management Agent resource in Oracle Cloud Infrastructure Management Agent service.
        /// 
        /// Gets complete details of the inventory of a given agent id
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagementAgent = Oci.ManagementAgent.GetManagementAgent.Invoke(new()
        ///     {
        ///         ManagementAgentId = testManagementAgentOciManagementAgentManagementAgent.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetManagementAgentResult> InvokeAsync(GetManagementAgentArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetManagementAgentResult>("oci:ManagementAgent/getManagementAgent:getManagementAgent", args ?? new GetManagementAgentArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Management Agent resource in Oracle Cloud Infrastructure Management Agent service.
        /// 
        /// Gets complete details of the inventory of a given agent id
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagementAgent = Oci.ManagementAgent.GetManagementAgent.Invoke(new()
        ///     {
        ///         ManagementAgentId = testManagementAgentOciManagementAgentManagementAgent.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetManagementAgentResult> Invoke(GetManagementAgentInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagementAgentResult>("oci:ManagementAgent/getManagementAgent:getManagementAgent", args ?? new GetManagementAgentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagementAgentArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique Management Agent identifier
        /// </summary>
        [Input("managementAgentId", required: true)]
        public string ManagementAgentId { get; set; } = null!;

        public GetManagementAgentArgs()
        {
        }
        public static new GetManagementAgentArgs Empty => new GetManagementAgentArgs();
    }

    public sealed class GetManagementAgentInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique Management Agent identifier
        /// </summary>
        [Input("managementAgentId", required: true)]
        public Input<string> ManagementAgentId { get; set; } = null!;

        public GetManagementAgentInvokeArgs()
        {
        }
        public static new GetManagementAgentInvokeArgs Empty => new GetManagementAgentInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagementAgentResult
    {
        /// <summary>
        /// The current availability status of managementAgent
        /// </summary>
        public readonly string AvailabilityStatus;
        /// <summary>
        /// Compartment owning this DataSource.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// list of dataSources associated with the agent
        /// </summary>
        public readonly ImmutableArray<Outputs.GetManagementAgentDataSourceListResult> DataSourceLists;
        public readonly ImmutableArray<Outputs.GetManagementAgentDataSourceSummaryListResult> DataSourceSummaryLists;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        public readonly ImmutableArray<string> DeployPluginsIds;
        /// <summary>
        /// Management Agent Name
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// Management Agent host machine name
        /// </summary>
        public readonly string Host;
        /// <summary>
        /// Host resource ocid
        /// </summary>
        public readonly string HostId;
        /// <summary>
        /// agent identifier
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// agent install key identifier
        /// </summary>
        public readonly string InstallKeyId;
        /// <summary>
        /// Path where Management Agent is installed
        /// </summary>
        public readonly string InstallPath;
        /// <summary>
        /// The install type, either AGENT or GATEWAY
        /// </summary>
        public readonly string InstallType;
        /// <summary>
        /// true if the agent can be upgraded automatically; false if it must be upgraded manually. This flag is derived from the tenancy level auto upgrade preference.
        /// </summary>
        public readonly bool IsAgentAutoUpgradable;
        /// <summary>
        /// true, if the agent image is manually downloaded and installed. false, if the agent is deployed as a plugin in Oracle Cloud Agent.
        /// </summary>
        public readonly bool IsCustomerDeployed;
        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        public readonly string LifecycleDetails;
        public readonly string ManagedAgentId;
        public readonly string ManagementAgentId;
        /// <summary>
        /// Additional properties for this Management Agent
        /// </summary>
        public readonly ImmutableArray<Outputs.GetManagementAgentManagementAgentPropertyResult> ManagementAgentProperties;
        /// <summary>
        /// Platform Name
        /// </summary>
        public readonly string PlatformName;
        /// <summary>
        /// Platform Type
        /// </summary>
        public readonly string PlatformType;
        /// <summary>
        /// Platform Version
        /// </summary>
        public readonly string PlatformVersion;
        /// <summary>
        /// list of managementAgentPlugins associated with the agent
        /// </summary>
        public readonly ImmutableArray<Outputs.GetManagementAgentPluginListResult> PluginLists;
        /// <summary>
        /// Version of the deployment artifact instantiated by this Management Agent. The format for Standalone resourceMode is YYMMDD.HHMM, and the format for other modes (whose artifacts are based upon Standalone but can advance independently) is YYMMDD.HHMM.VVVVVVVVVVVV. VVVVVVVVVVVV is always a numeric value between 000000000000 and 999999999999
        /// </summary>
        public readonly string ResourceArtifactVersion;
        /// <summary>
        /// The current state of managementAgent
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The time the Management Agent was created. An RFC3339 formatted datetime string
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time the Management Agent has last recorded its health status in telemetry. This value will be null if the agent has not recorded its health status in last 7 days. An RFC3339 formatted datetime string
        /// </summary>
        public readonly string TimeLastHeartbeat;
        /// <summary>
        /// The time the Management Agent was last updated. An RFC3339 formatted datetime string
        /// </summary>
        public readonly string TimeUpdated;
        /// <summary>
        /// Management Agent Version
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private GetManagementAgentResult(
            string availabilityStatus,

            string compartmentId,

            ImmutableArray<Outputs.GetManagementAgentDataSourceListResult> dataSourceLists,

            ImmutableArray<Outputs.GetManagementAgentDataSourceSummaryListResult> dataSourceSummaryLists,

            ImmutableDictionary<string, object> definedTags,

            ImmutableArray<string> deployPluginsIds,

            string displayName,

            ImmutableDictionary<string, object> freeformTags,

            string host,

            string hostId,

            string id,

            string installKeyId,

            string installPath,

            string installType,

            bool isAgentAutoUpgradable,

            bool isCustomerDeployed,

            string lifecycleDetails,

            string managedAgentId,

            string managementAgentId,

            ImmutableArray<Outputs.GetManagementAgentManagementAgentPropertyResult> managementAgentProperties,

            string platformName,

            string platformType,

            string platformVersion,

            ImmutableArray<Outputs.GetManagementAgentPluginListResult> pluginLists,

            string resourceArtifactVersion,

            string state,

            string timeCreated,

            string timeLastHeartbeat,

            string timeUpdated,

            string version)
        {
            AvailabilityStatus = availabilityStatus;
            CompartmentId = compartmentId;
            DataSourceLists = dataSourceLists;
            DataSourceSummaryLists = dataSourceSummaryLists;
            DefinedTags = definedTags;
            DeployPluginsIds = deployPluginsIds;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Host = host;
            HostId = hostId;
            Id = id;
            InstallKeyId = installKeyId;
            InstallPath = installPath;
            InstallType = installType;
            IsAgentAutoUpgradable = isAgentAutoUpgradable;
            IsCustomerDeployed = isCustomerDeployed;
            LifecycleDetails = lifecycleDetails;
            ManagedAgentId = managedAgentId;
            ManagementAgentId = managementAgentId;
            ManagementAgentProperties = managementAgentProperties;
            PlatformName = platformName;
            PlatformType = platformType;
            PlatformVersion = platformVersion;
            PluginLists = pluginLists;
            ResourceArtifactVersion = resourceArtifactVersion;
            State = state;
            TimeCreated = timeCreated;
            TimeLastHeartbeat = timeLastHeartbeat;
            TimeUpdated = timeUpdated;
            Version = version;
        }
    }
}
