// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ManagementAgent
{
    public static class GetManagementAgentDataSource
    {
        /// <summary>
        /// This data source provides details about a specific Management Agent Data Source resource in Oracle Cloud Infrastructure Management Agent service.
        /// 
        /// Get Datasource details for given Id and given Management Agent.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagementAgentDataSource = Oci.ManagementAgent.GetManagementAgentDataSource.Invoke(new()
        ///     {
        ///         DataSourceKey = managementAgentDataSourceDataSourceKey,
        ///         ManagementAgentId = testManagementAgent.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetManagementAgentDataSourceResult> InvokeAsync(GetManagementAgentDataSourceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetManagementAgentDataSourceResult>("oci:ManagementAgent/getManagementAgentDataSource:getManagementAgentDataSource", args ?? new GetManagementAgentDataSourceArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Management Agent Data Source resource in Oracle Cloud Infrastructure Management Agent service.
        /// 
        /// Get Datasource details for given Id and given Management Agent.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagementAgentDataSource = Oci.ManagementAgent.GetManagementAgentDataSource.Invoke(new()
        ///     {
        ///         DataSourceKey = managementAgentDataSourceDataSourceKey,
        ///         ManagementAgentId = testManagementAgent.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetManagementAgentDataSourceResult> Invoke(GetManagementAgentDataSourceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagementAgentDataSourceResult>("oci:ManagementAgent/getManagementAgentDataSource:getManagementAgentDataSource", args ?? new GetManagementAgentDataSourceInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Management Agent Data Source resource in Oracle Cloud Infrastructure Management Agent service.
        /// 
        /// Get Datasource details for given Id and given Management Agent.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagementAgentDataSource = Oci.ManagementAgent.GetManagementAgentDataSource.Invoke(new()
        ///     {
        ///         DataSourceKey = managementAgentDataSourceDataSourceKey,
        ///         ManagementAgentId = testManagementAgent.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetManagementAgentDataSourceResult> Invoke(GetManagementAgentDataSourceInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagementAgentDataSourceResult>("oci:ManagementAgent/getManagementAgentDataSource:getManagementAgentDataSource", args ?? new GetManagementAgentDataSourceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagementAgentDataSourceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Data source type and name identifier.
        /// </summary>
        [Input("dataSourceKey", required: true)]
        public string DataSourceKey { get; set; } = null!;

        /// <summary>
        /// Unique Management Agent identifier
        /// </summary>
        [Input("managementAgentId", required: true)]
        public string ManagementAgentId { get; set; } = null!;

        public GetManagementAgentDataSourceArgs()
        {
        }
        public static new GetManagementAgentDataSourceArgs Empty => new GetManagementAgentDataSourceArgs();
    }

    public sealed class GetManagementAgentDataSourceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Data source type and name identifier.
        /// </summary>
        [Input("dataSourceKey", required: true)]
        public Input<string> DataSourceKey { get; set; } = null!;

        /// <summary>
        /// Unique Management Agent identifier
        /// </summary>
        [Input("managementAgentId", required: true)]
        public Input<string> ManagementAgentId { get; set; } = null!;

        public GetManagementAgentDataSourceInvokeArgs()
        {
        }
        public static new GetManagementAgentDataSourceInvokeArgs Empty => new GetManagementAgentDataSourceInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagementAgentDataSourceResult
    {
        /// <summary>
        /// Comma separated metric name list. The complete set of desired scraped metrics. Use this property to limit the set of metrics uploaded if required.
        /// </summary>
        public readonly string AllowMetrics;
        /// <summary>
        /// Compartment owning this DataSource.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Number in milliseconds. The timeout for connecting to the Prometheus Exporter's endpoint.
        /// </summary>
        public readonly int ConnectionTimeout;
        public readonly string DataSourceKey;
        public readonly string Id;
        /// <summary>
        /// If the Kubernetes cluster type is Daemon set then this will be set to true.
        /// </summary>
        public readonly bool IsDaemonSet;
        public readonly string ManagementAgentId;
        /// <summary>
        /// The names of other user-supplied properties expressed as fixed values to be used as dimensions for every uploaded datapoint.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetManagementAgentDataSourceMetricDimensionResult> MetricDimensions;
        /// <summary>
        /// Unique name of the DataSource.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The Oracle Cloud Infrastructure monitoring namespace to which scraped metrics should be uploaded.
        /// </summary>
        public readonly string Namespace;
        /// <summary>
        /// The url of the network proxy that provides access to the Prometheus Exporter's endpoint (url required property).
        /// </summary>
        public readonly string ProxyUrl;
        /// <summary>
        /// Number in kilobytes. The limit on the data being sent, not to exceed the agent's fixed limit of 400 (KB).
        /// </summary>
        public readonly int ReadDataLimit;
        public readonly int ReadDataLimitInKilobytes;
        /// <summary>
        /// Number in milliseconds. The timeout for reading the response from the Prometheus Exporter's endpoint.
        /// </summary>
        public readonly int ReadTimeout;
        /// <summary>
        /// Oracle Cloud Infrastructure monitoring resource group to assign the metric to.
        /// </summary>
        public readonly string ResourceGroup;
        /// <summary>
        /// Number in minutes. The scraping occurs at the specified interval.
        /// </summary>
        public readonly int ScheduleMins;
        /// <summary>
        /// State of the DataSource.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The time the DataSource was created. An RFC3339 formatted datetime string
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time the DataSource data was last received. An RFC3339 formatted datetime string
        /// </summary>
        public readonly string TimeUpdated;
        /// <summary>
        /// The type of the DataSource.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The url through which the Prometheus Exporter publishes its metrics. (http only)
        /// </summary>
        public readonly string Url;

        [OutputConstructor]
        private GetManagementAgentDataSourceResult(
            string allowMetrics,

            string compartmentId,

            int connectionTimeout,

            string dataSourceKey,

            string id,

            bool isDaemonSet,

            string managementAgentId,

            ImmutableArray<Outputs.GetManagementAgentDataSourceMetricDimensionResult> metricDimensions,

            string name,

            string @namespace,

            string proxyUrl,

            int readDataLimit,

            int readDataLimitInKilobytes,

            int readTimeout,

            string resourceGroup,

            int scheduleMins,

            string state,

            string timeCreated,

            string timeUpdated,

            string type,

            string url)
        {
            AllowMetrics = allowMetrics;
            CompartmentId = compartmentId;
            ConnectionTimeout = connectionTimeout;
            DataSourceKey = dataSourceKey;
            Id = id;
            IsDaemonSet = isDaemonSet;
            ManagementAgentId = managementAgentId;
            MetricDimensions = metricDimensions;
            Name = name;
            Namespace = @namespace;
            ProxyUrl = proxyUrl;
            ReadDataLimit = readDataLimit;
            ReadDataLimitInKilobytes = readDataLimitInKilobytes;
            ReadTimeout = readTimeout;
            ResourceGroup = resourceGroup;
            ScheduleMins = scheduleMins;
            State = state;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            Type = type;
            Url = url;
        }
    }
}
