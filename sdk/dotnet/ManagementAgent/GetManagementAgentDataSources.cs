// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ManagementAgent
{
    public static class GetManagementAgentDataSources
    {
        /// <summary>
        /// This data source provides the list of Management Agent Data Sources in Oracle Cloud Infrastructure Management Agent service.
        /// 
        /// A list of Management Agent Data Sources for the given Management Agent Id.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagementAgentDataSources = Oci.ManagementAgent.GetManagementAgentDataSources.Invoke(new()
        ///     {
        ///         ManagementAgentId = testManagementAgent.Id,
        ///         Name = managementAgentDataSourceName,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetManagementAgentDataSourcesResult> InvokeAsync(GetManagementAgentDataSourcesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetManagementAgentDataSourcesResult>("oci:ManagementAgent/getManagementAgentDataSources:getManagementAgentDataSources", args ?? new GetManagementAgentDataSourcesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Management Agent Data Sources in Oracle Cloud Infrastructure Management Agent service.
        /// 
        /// A list of Management Agent Data Sources for the given Management Agent Id.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagementAgentDataSources = Oci.ManagementAgent.GetManagementAgentDataSources.Invoke(new()
        ///     {
        ///         ManagementAgentId = testManagementAgent.Id,
        ///         Name = managementAgentDataSourceName,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetManagementAgentDataSourcesResult> Invoke(GetManagementAgentDataSourcesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagementAgentDataSourcesResult>("oci:ManagementAgent/getManagementAgentDataSources:getManagementAgentDataSources", args ?? new GetManagementAgentDataSourcesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Management Agent Data Sources in Oracle Cloud Infrastructure Management Agent service.
        /// 
        /// A list of Management Agent Data Sources for the given Management Agent Id.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagementAgentDataSources = Oci.ManagementAgent.GetManagementAgentDataSources.Invoke(new()
        ///     {
        ///         ManagementAgentId = testManagementAgent.Id,
        ///         Name = managementAgentDataSourceName,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetManagementAgentDataSourcesResult> Invoke(GetManagementAgentDataSourcesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagementAgentDataSourcesResult>("oci:ManagementAgent/getManagementAgentDataSources:getManagementAgentDataSources", args ?? new GetManagementAgentDataSourcesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagementAgentDataSourcesArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetManagementAgentDataSourcesFilterArgs>? _filters;
        public List<Inputs.GetManagementAgentDataSourcesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetManagementAgentDataSourcesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Unique Management Agent identifier
        /// </summary>
        [Input("managementAgentId", required: true)]
        public string ManagementAgentId { get; set; } = null!;

        /// <summary>
        /// Unique name of the dataSource.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        public GetManagementAgentDataSourcesArgs()
        {
        }
        public static new GetManagementAgentDataSourcesArgs Empty => new GetManagementAgentDataSourcesArgs();
    }

    public sealed class GetManagementAgentDataSourcesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetManagementAgentDataSourcesFilterInputArgs>? _filters;
        public InputList<Inputs.GetManagementAgentDataSourcesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetManagementAgentDataSourcesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Unique Management Agent identifier
        /// </summary>
        [Input("managementAgentId", required: true)]
        public Input<string> ManagementAgentId { get; set; } = null!;

        /// <summary>
        /// Unique name of the dataSource.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetManagementAgentDataSourcesInvokeArgs()
        {
        }
        public static new GetManagementAgentDataSourcesInvokeArgs Empty => new GetManagementAgentDataSourcesInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagementAgentDataSourcesResult
    {
        /// <summary>
        /// The list of data_sources.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetManagementAgentDataSourcesDataSourceResult> DataSources;
        public readonly ImmutableArray<Outputs.GetManagementAgentDataSourcesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string ManagementAgentId;
        /// <summary>
        /// Unique name of the DataSource.
        /// </summary>
        public readonly string? Name;

        [OutputConstructor]
        private GetManagementAgentDataSourcesResult(
            ImmutableArray<Outputs.GetManagementAgentDataSourcesDataSourceResult> dataSources,

            ImmutableArray<Outputs.GetManagementAgentDataSourcesFilterResult> filters,

            string id,

            string managementAgentId,

            string? name)
        {
            DataSources = dataSources;
            Filters = filters;
            Id = id;
            ManagementAgentId = managementAgentId;
            Name = name;
        }
    }
}
