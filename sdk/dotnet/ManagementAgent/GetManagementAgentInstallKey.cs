// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ManagementAgent
{
    public static class GetManagementAgentInstallKey
    {
        /// <summary>
        /// This data source provides details about a specific Management Agent Install Key resource in Oracle Cloud Infrastructure Management Agent service.
        /// 
        /// Gets complete details of the Agent install Key for a given key id
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagementAgentInstallKey = Oci.ManagementAgent.GetManagementAgentInstallKey.Invoke(new()
        ///     {
        ///         ManagementAgentInstallKeyId = testManagementAgentInstallKeyOciManagementAgentManagementAgentInstallKey.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetManagementAgentInstallKeyResult> InvokeAsync(GetManagementAgentInstallKeyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetManagementAgentInstallKeyResult>("oci:ManagementAgent/getManagementAgentInstallKey:getManagementAgentInstallKey", args ?? new GetManagementAgentInstallKeyArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Management Agent Install Key resource in Oracle Cloud Infrastructure Management Agent service.
        /// 
        /// Gets complete details of the Agent install Key for a given key id
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagementAgentInstallKey = Oci.ManagementAgent.GetManagementAgentInstallKey.Invoke(new()
        ///     {
        ///         ManagementAgentInstallKeyId = testManagementAgentInstallKeyOciManagementAgentManagementAgentInstallKey.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetManagementAgentInstallKeyResult> Invoke(GetManagementAgentInstallKeyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagementAgentInstallKeyResult>("oci:ManagementAgent/getManagementAgentInstallKey:getManagementAgentInstallKey", args ?? new GetManagementAgentInstallKeyInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Management Agent Install Key resource in Oracle Cloud Infrastructure Management Agent service.
        /// 
        /// Gets complete details of the Agent install Key for a given key id
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagementAgentInstallKey = Oci.ManagementAgent.GetManagementAgentInstallKey.Invoke(new()
        ///     {
        ///         ManagementAgentInstallKeyId = testManagementAgentInstallKeyOciManagementAgentManagementAgentInstallKey.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetManagementAgentInstallKeyResult> Invoke(GetManagementAgentInstallKeyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagementAgentInstallKeyResult>("oci:ManagementAgent/getManagementAgentInstallKey:getManagementAgentInstallKey", args ?? new GetManagementAgentInstallKeyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagementAgentInstallKeyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique Management Agent Install Key identifier
        /// </summary>
        [Input("managementAgentInstallKeyId", required: true)]
        public string ManagementAgentInstallKeyId { get; set; } = null!;

        public GetManagementAgentInstallKeyArgs()
        {
        }
        public static new GetManagementAgentInstallKeyArgs Empty => new GetManagementAgentInstallKeyArgs();
    }

    public sealed class GetManagementAgentInstallKeyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique Management Agent Install Key identifier
        /// </summary>
        [Input("managementAgentInstallKeyId", required: true)]
        public Input<string> ManagementAgentInstallKeyId { get; set; } = null!;

        public GetManagementAgentInstallKeyInvokeArgs()
        {
        }
        public static new GetManagementAgentInstallKeyInvokeArgs Empty => new GetManagementAgentInstallKeyInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagementAgentInstallKeyResult
    {
        /// <summary>
        /// Total number of install for this keys
        /// </summary>
        public readonly int AllowedKeyInstallCount;
        /// <summary>
        /// Compartment Identifier
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Principal id of user who created the Agent Install key
        /// </summary>
        public readonly string CreatedByPrincipalId;
        /// <summary>
        /// Total number of install for this keys
        /// </summary>
        public readonly int CurrentKeyInstallCount;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// Management Agent Install Key Name
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// Agent install Key identifier
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// If set to true, the install key has no expiration date or usage limit. Properties allowedKeyInstallCount and timeExpires are ignored if set to true. Defaults to false.
        /// </summary>
        public readonly bool IsUnlimited;
        /// <summary>
        /// Management Agent Install Key
        /// </summary>
        public readonly string Key;
        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        public readonly string LifecycleDetails;
        public readonly string ManagementAgentInstallKeyId;
        /// <summary>
        /// Status of Key
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// The time when Management Agent install Key was created. An RFC3339 formatted date time string
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// date after which key would expire after creation
        /// </summary>
        public readonly string TimeExpires;
        /// <summary>
        /// The time when Management Agent install Key was updated. An RFC3339 formatted date time string
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetManagementAgentInstallKeyResult(
            int allowedKeyInstallCount,

            string compartmentId,

            string createdByPrincipalId,

            int currentKeyInstallCount,

            ImmutableDictionary<string, string> definedTags,

            string displayName,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            bool isUnlimited,

            string key,

            string lifecycleDetails,

            string managementAgentInstallKeyId,

            string state,

            ImmutableDictionary<string, string> systemTags,

            string timeCreated,

            string timeExpires,

            string timeUpdated)
        {
            AllowedKeyInstallCount = allowedKeyInstallCount;
            CompartmentId = compartmentId;
            CreatedByPrincipalId = createdByPrincipalId;
            CurrentKeyInstallCount = currentKeyInstallCount;
            DefinedTags = definedTags;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            IsUnlimited = isUnlimited;
            Key = key;
            LifecycleDetails = lifecycleDetails;
            ManagementAgentInstallKeyId = managementAgentInstallKeyId;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeExpires = timeExpires;
            TimeUpdated = timeUpdated;
        }
    }
}
