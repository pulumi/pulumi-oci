// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ManagementAgent
{
    public static class GetManagementAgentNamedCredentialsMetadata
    {
        /// <summary>
        /// This data source provides details about a specific Management Agent Named Credentials Metadata resource in Oracle Cloud Infrastructure Management Agent service.
        /// 
        /// Return the Metadata definition for Named Credentials supported by Management Agent.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagementAgentNamedCredentialsMetadata = Oci.ManagementAgent.GetManagementAgentNamedCredentialsMetadata.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         ManagementAgentId = testManagementAgent.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetManagementAgentNamedCredentialsMetadataResult> InvokeAsync(GetManagementAgentNamedCredentialsMetadataArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetManagementAgentNamedCredentialsMetadataResult>("oci:ManagementAgent/getManagementAgentNamedCredentialsMetadata:getManagementAgentNamedCredentialsMetadata", args ?? new GetManagementAgentNamedCredentialsMetadataArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Management Agent Named Credentials Metadata resource in Oracle Cloud Infrastructure Management Agent service.
        /// 
        /// Return the Metadata definition for Named Credentials supported by Management Agent.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagementAgentNamedCredentialsMetadata = Oci.ManagementAgent.GetManagementAgentNamedCredentialsMetadata.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         ManagementAgentId = testManagementAgent.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetManagementAgentNamedCredentialsMetadataResult> Invoke(GetManagementAgentNamedCredentialsMetadataInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagementAgentNamedCredentialsMetadataResult>("oci:ManagementAgent/getManagementAgentNamedCredentialsMetadata:getManagementAgentNamedCredentialsMetadata", args ?? new GetManagementAgentNamedCredentialsMetadataInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Management Agent Named Credentials Metadata resource in Oracle Cloud Infrastructure Management Agent service.
        /// 
        /// Return the Metadata definition for Named Credentials supported by Management Agent.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagementAgentNamedCredentialsMetadata = Oci.ManagementAgent.GetManagementAgentNamedCredentialsMetadata.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         ManagementAgentId = testManagementAgent.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetManagementAgentNamedCredentialsMetadataResult> Invoke(GetManagementAgentNamedCredentialsMetadataInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagementAgentNamedCredentialsMetadataResult>("oci:ManagementAgent/getManagementAgentNamedCredentialsMetadata:getManagementAgentNamedCredentialsMetadata", args ?? new GetManagementAgentNamedCredentialsMetadataInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagementAgentNamedCredentialsMetadataArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment to which a request will be scoped.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// Filter the named credential metadata which is compatible with the given Management Agent identifier.
        /// </summary>
        [Input("managementAgentId")]
        public string? ManagementAgentId { get; set; }

        public GetManagementAgentNamedCredentialsMetadataArgs()
        {
        }
        public static new GetManagementAgentNamedCredentialsMetadataArgs Empty => new GetManagementAgentNamedCredentialsMetadataArgs();
    }

    public sealed class GetManagementAgentNamedCredentialsMetadataInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment to which a request will be scoped.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// Filter the named credential metadata which is compatible with the given Management Agent identifier.
        /// </summary>
        [Input("managementAgentId")]
        public Input<string>? ManagementAgentId { get; set; }

        public GetManagementAgentNamedCredentialsMetadataInvokeArgs()
        {
        }
        public static new GetManagementAgentNamedCredentialsMetadataInvokeArgs Empty => new GetManagementAgentNamedCredentialsMetadataInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagementAgentNamedCredentialsMetadataResult
    {
        public readonly string CompartmentId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? ManagementAgentId;
        /// <summary>
        /// List of supported metadata definitions.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetManagementAgentNamedCredentialsMetadataMetadataResult> Metadatas;

        [OutputConstructor]
        private GetManagementAgentNamedCredentialsMetadataResult(
            string compartmentId,

            string id,

            string? managementAgentId,

            ImmutableArray<Outputs.GetManagementAgentNamedCredentialsMetadataMetadataResult> metadatas)
        {
            CompartmentId = compartmentId;
            Id = id;
            ManagementAgentId = managementAgentId;
            Metadatas = metadatas;
        }
    }
}
