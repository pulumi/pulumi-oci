// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ManagementAgent
{
    /// <summary>
    /// This resource provides the Management Agent Install Key resource in Oracle Cloud Infrastructure Management Agent service.
    /// 
    /// User creates a new install key as part of this API.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testManagementAgentInstallKey = new Oci.ManagementAgent.ManagementAgentInstallKey("testManagementAgentInstallKey", new()
    ///     {
    ///         CompartmentId = @var.Compartment_id,
    ///         DisplayName = @var.Management_agent_install_key_display_name,
    ///         AllowedKeyInstallCount = @var.Management_agent_install_key_allowed_key_install_count,
    ///         IsUnlimited = @var.Management_agent_install_key_is_unlimited,
    ///         TimeExpires = @var.Management_agent_install_key_time_expires,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ManagementAgentInstallKeys can be imported using the `id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import oci:ManagementAgent/managementAgentInstallKey:ManagementAgentInstallKey test_management_agent_install_key "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:ManagementAgent/managementAgentInstallKey:ManagementAgentInstallKey")]
    public partial class ManagementAgentInstallKey : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Total number of install for this keys
        /// </summary>
        [Output("allowedKeyInstallCount")]
        public Output<int?> AllowedKeyInstallCount { get; private set; } = null!;

        /// <summary>
        /// Compartment Identifier
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// Principal id of user who created the Agent Install key
        /// </summary>
        [Output("createdByPrincipalId")]
        public Output<string?> CreatedByPrincipalId { get; private set; } = null!;

        /// <summary>
        /// Total number of install for this keys
        /// </summary>
        [Output("currentKeyInstallCount")]
        public Output<int?> CurrentKeyInstallCount { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Management Agent install Key Name
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// If set to true, the install key has no expiration date or usage limit. Defaults to false
        /// </summary>
        [Output("isUnlimited")]
        public Output<bool?> IsUnlimited { get; private set; } = null!;

        /// <summary>
        /// Management Agent Install Key
        /// </summary>
        [Output("key")]
        public Output<string?> Key { get; private set; } = null!;

        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        [Output("lifecycleDetails")]
        public Output<string?> LifecycleDetails { get; private set; } = null!;

        /// <summary>
        /// Status of Key
        /// </summary>
        [Output("state")]
        public Output<string?> State { get; private set; } = null!;

        /// <summary>
        /// The time when Management Agent install Key was created. An RFC3339 formatted date time string
        /// </summary>
        [Output("timeCreated")]
        public Output<string?> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// date after which key would expire after creation
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("timeExpires")]
        public Output<string?> TimeExpires { get; private set; } = null!;

        /// <summary>
        /// The time when Management Agent install Key was updated. An RFC3339 formatted date time string
        /// </summary>
        [Output("timeUpdated")]
        public Output<string?> TimeUpdated { get; private set; } = null!;


        /// <summary>
        /// Create a ManagementAgentInstallKey resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ManagementAgentInstallKey(string name, ManagementAgentInstallKeyArgs args, CustomResourceOptions? options = null)
            : base("oci:ManagementAgent/managementAgentInstallKey:ManagementAgentInstallKey", name, args ?? new ManagementAgentInstallKeyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ManagementAgentInstallKey(string name, Input<string> id, ManagementAgentInstallKeyState? state = null, CustomResourceOptions? options = null)
            : base("oci:ManagementAgent/managementAgentInstallKey:ManagementAgentInstallKey", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ManagementAgentInstallKey resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ManagementAgentInstallKey Get(string name, Input<string> id, ManagementAgentInstallKeyState? state = null, CustomResourceOptions? options = null)
        {
            return new ManagementAgentInstallKey(name, id, state, options);
        }
    }

    public sealed class ManagementAgentInstallKeyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Total number of install for this keys
        /// </summary>
        [Input("allowedKeyInstallCount")]
        public Input<int>? AllowedKeyInstallCount { get; set; }

        /// <summary>
        /// Compartment Identifier
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// (Updatable) Management Agent install Key Name
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// If set to true, the install key has no expiration date or usage limit. Defaults to false
        /// </summary>
        [Input("isUnlimited")]
        public Input<bool>? IsUnlimited { get; set; }

        /// <summary>
        /// date after which key would expire after creation
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("timeExpires")]
        public Input<string>? TimeExpires { get; set; }

        public ManagementAgentInstallKeyArgs()
        {
        }
        public static new ManagementAgentInstallKeyArgs Empty => new ManagementAgentInstallKeyArgs();
    }

    public sealed class ManagementAgentInstallKeyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Total number of install for this keys
        /// </summary>
        [Input("allowedKeyInstallCount")]
        public Input<int>? AllowedKeyInstallCount { get; set; }

        /// <summary>
        /// Compartment Identifier
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// Principal id of user who created the Agent Install key
        /// </summary>
        [Input("createdByPrincipalId")]
        public Input<string>? CreatedByPrincipalId { get; set; }

        /// <summary>
        /// Total number of install for this keys
        /// </summary>
        [Input("currentKeyInstallCount")]
        public Input<int>? CurrentKeyInstallCount { get; set; }

        /// <summary>
        /// (Updatable) Management Agent install Key Name
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// If set to true, the install key has no expiration date or usage limit. Defaults to false
        /// </summary>
        [Input("isUnlimited")]
        public Input<bool>? IsUnlimited { get; set; }

        /// <summary>
        /// Management Agent Install Key
        /// </summary>
        [Input("key")]
        public Input<string>? Key { get; set; }

        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        [Input("lifecycleDetails")]
        public Input<string>? LifecycleDetails { get; set; }

        /// <summary>
        /// Status of Key
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The time when Management Agent install Key was created. An RFC3339 formatted date time string
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// date after which key would expire after creation
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("timeExpires")]
        public Input<string>? TimeExpires { get; set; }

        /// <summary>
        /// The time when Management Agent install Key was updated. An RFC3339 formatted date time string
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        public ManagementAgentInstallKeyState()
        {
        }
        public static new ManagementAgentInstallKeyState Empty => new ManagementAgentInstallKeyState();
    }
}
