// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ManagementAgent.Outputs
{

    [OutputType]
    public sealed class ManagementAgentDataSourceList
    {
        /// <summary>
        /// Comma separated metric name list. The complete set of desired scraped metrics. Use this property to limit the set of metrics uploaded if required.
        /// </summary>
        public readonly string? AllowMetrics;
        /// <summary>
        /// Compartment owning this DataSource.
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// Number in milliseconds. The timeout for connecting to the Prometheus Exporter's endpoint.
        /// </summary>
        public readonly int? ConnectionTimeout;
        /// <summary>
        /// If the Kubernetes cluster type is Daemon set then this will be set to true.
        /// </summary>
        public readonly bool? IsDaemonSet;
        /// <summary>
        /// Identifier for DataSource. This represents the type and name for the data source associated with the Management Agent.
        /// </summary>
        public readonly string? Key;
        /// <summary>
        /// The names of other user-supplied properties expressed as fixed values to be used as dimensions for every uploaded datapoint.
        /// </summary>
        public readonly ImmutableArray<Outputs.ManagementAgentDataSourceListMetricDimension> MetricDimensions;
        /// <summary>
        /// Name of the property
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The Oracle Cloud Infrastructure monitoring namespace to which scraped metrics should be uploaded.
        /// </summary>
        public readonly string? Namespace;
        /// <summary>
        /// The url of the network proxy that provides access to the Prometheus Exporter's endpoint (url required property).
        /// </summary>
        public readonly string? ProxyUrl;
        /// <summary>
        /// Number in kilobytes. The limit on the data being sent, not to exceed the agent's fixed limit of 400 (KB).
        /// </summary>
        public readonly int? ReadDataLimit;
        /// <summary>
        /// Number in milliseconds. The timeout for reading the response from the Prometheus Exporter's endpoint.
        /// </summary>
        public readonly int? ReadTimeout;
        /// <summary>
        /// Oracle Cloud Infrastructure monitoring resource group to assign the metric to.
        /// </summary>
        public readonly string? ResourceGroup;
        /// <summary>
        /// Number in minutes. The scraping occurs at the specified interval.
        /// </summary>
        public readonly int? ScheduleMins;
        /// <summary>
        /// The current state of managementAgent
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// The time the Management Agent was created. An RFC3339 formatted datetime string
        /// </summary>
        public readonly string? TimeCreated;
        /// <summary>
        /// The time the Management Agent was last updated. An RFC3339 formatted datetime string
        /// </summary>
        public readonly string? TimeUpdated;
        /// <summary>
        /// The type of the DataSource.
        /// </summary>
        public readonly string? Type;
        /// <summary>
        /// The url through which the Prometheus Exporter publishes its metrics. (http only)
        /// </summary>
        public readonly string? Url;

        [OutputConstructor]
        private ManagementAgentDataSourceList(
            string? allowMetrics,

            string? compartmentId,

            int? connectionTimeout,

            bool? isDaemonSet,

            string? key,

            ImmutableArray<Outputs.ManagementAgentDataSourceListMetricDimension> metricDimensions,

            string? name,

            string? @namespace,

            string? proxyUrl,

            int? readDataLimit,

            int? readTimeout,

            string? resourceGroup,

            int? scheduleMins,

            string? state,

            string? timeCreated,

            string? timeUpdated,

            string? type,

            string? url)
        {
            AllowMetrics = allowMetrics;
            CompartmentId = compartmentId;
            ConnectionTimeout = connectionTimeout;
            IsDaemonSet = isDaemonSet;
            Key = key;
            MetricDimensions = metricDimensions;
            Name = name;
            Namespace = @namespace;
            ProxyUrl = proxyUrl;
            ReadDataLimit = readDataLimit;
            ReadTimeout = readTimeout;
            ResourceGroup = resourceGroup;
            ScheduleMins = scheduleMins;
            State = state;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            Type = type;
            Url = url;
        }
    }
}
