// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ManagementDashboard
{
    /// <summary>
    /// This resource provides the Management Dashboards Import resource in Oracle Cloud Infrastructure Management Dashboard service.
    /// 
    /// Imports an array of dashboards and their saved searches.
    /// Here's an example of how you can use CLI to import a dashboard. For information on the details that must be passed to IMPORT, you can use the EXPORT API to obtain the Import.json file:
    /// `oci management-dashboard dashboard export --query data --export-dashboard-id "{\"dashboardIds\":[\"ocid1.managementdashboard.oc1..dashboardId1\"]}"  &gt; Import.json`.
    /// Note that import API updates the resource if it already exists, and creates a new resource if it does not exist. To import to a different compartment, edit and change the compartmentId to the desired compartment OCID.
    /// Here's an example of how you can use CLI to import:
    /// `oci management-dashboard dashboard import --from-json file://Import.json`
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testManagementDashboardsImport = new Oci.ManagementDashboard.ManagementDashboardsImport("test_management_dashboards_import", new()
    ///     {
    ///         OverrideDashboardCompartmentOcid = managementDashboardsImportOverrideDashboardCompartmentOcid,
    ///         OverrideSameName = managementDashboardsImportOverrideSameName,
    ///         OverrideSavedSearchCompartmentOcid = managementDashboardsImportOverrideSavedSearchCompartmentOcid,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ManagementDashboardsImport can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:ManagementDashboard/managementDashboardsImport:ManagementDashboardsImport test_management_dashboards_import "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:ManagementDashboard/managementDashboardsImport:ManagementDashboardsImport")]
    public partial class ManagementDashboardsImport : global::Pulumi.CustomResource
    {
        [Output("importDetails")]
        public Output<string?> ImportDetails { get; private set; } = null!;

        [Output("importDetailsFile")]
        public Output<string?> ImportDetailsFile { get; private set; } = null!;

        /// <summary>
        /// If this attribute is set, the dashboard resources are created or updated in the compartment specified by OCID. If this attribute is not set, the compartment specified in the JSON metadata is used.
        /// </summary>
        [Output("overrideDashboardCompartmentOcid")]
        public Output<string> OverrideDashboardCompartmentOcid { get; private set; } = null!;

        /// <summary>
        /// By default, if a resource with the same OCID exists in the target compartment, it is updated during the import process, otherwise, a new resource is created. However, if this attribute is set to true, then during the import process if a resource with the same displayName exists in the compartment, then it is updated even if the OCIDs are different. This is useful when importing the same resource multiple times. If the compartment and displayName remain the same, the resource is only updated and multiple copies of a resource are not created.
        /// </summary>
        [Output("overrideSameName")]
        public Output<string> OverrideSameName { get; private set; } = null!;

        /// <summary>
        /// If this attribute is set, the saved search resources are created or updated in the compartment specified by OCID. If this attribute is not set, the compartment specified in the JSON metadata is used. 
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("overrideSavedSearchCompartmentOcid")]
        public Output<string> OverrideSavedSearchCompartmentOcid { get; private set; } = null!;


        /// <summary>
        /// Create a ManagementDashboardsImport resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ManagementDashboardsImport(string name, ManagementDashboardsImportArgs? args = null, CustomResourceOptions? options = null)
            : base("oci:ManagementDashboard/managementDashboardsImport:ManagementDashboardsImport", name, args ?? new ManagementDashboardsImportArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ManagementDashboardsImport(string name, Input<string> id, ManagementDashboardsImportState? state = null, CustomResourceOptions? options = null)
            : base("oci:ManagementDashboard/managementDashboardsImport:ManagementDashboardsImport", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ManagementDashboardsImport resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ManagementDashboardsImport Get(string name, Input<string> id, ManagementDashboardsImportState? state = null, CustomResourceOptions? options = null)
        {
            return new ManagementDashboardsImport(name, id, state, options);
        }
    }

    public sealed class ManagementDashboardsImportArgs : global::Pulumi.ResourceArgs
    {
        [Input("importDetails")]
        public Input<string>? ImportDetails { get; set; }

        [Input("importDetailsFile")]
        public Input<string>? ImportDetailsFile { get; set; }

        /// <summary>
        /// If this attribute is set, the dashboard resources are created or updated in the compartment specified by OCID. If this attribute is not set, the compartment specified in the JSON metadata is used.
        /// </summary>
        [Input("overrideDashboardCompartmentOcid")]
        public Input<string>? OverrideDashboardCompartmentOcid { get; set; }

        /// <summary>
        /// By default, if a resource with the same OCID exists in the target compartment, it is updated during the import process, otherwise, a new resource is created. However, if this attribute is set to true, then during the import process if a resource with the same displayName exists in the compartment, then it is updated even if the OCIDs are different. This is useful when importing the same resource multiple times. If the compartment and displayName remain the same, the resource is only updated and multiple copies of a resource are not created.
        /// </summary>
        [Input("overrideSameName")]
        public Input<string>? OverrideSameName { get; set; }

        /// <summary>
        /// If this attribute is set, the saved search resources are created or updated in the compartment specified by OCID. If this attribute is not set, the compartment specified in the JSON metadata is used. 
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("overrideSavedSearchCompartmentOcid")]
        public Input<string>? OverrideSavedSearchCompartmentOcid { get; set; }

        public ManagementDashboardsImportArgs()
        {
        }
        public static new ManagementDashboardsImportArgs Empty => new ManagementDashboardsImportArgs();
    }

    public sealed class ManagementDashboardsImportState : global::Pulumi.ResourceArgs
    {
        [Input("importDetails")]
        public Input<string>? ImportDetails { get; set; }

        [Input("importDetailsFile")]
        public Input<string>? ImportDetailsFile { get; set; }

        /// <summary>
        /// If this attribute is set, the dashboard resources are created or updated in the compartment specified by OCID. If this attribute is not set, the compartment specified in the JSON metadata is used.
        /// </summary>
        [Input("overrideDashboardCompartmentOcid")]
        public Input<string>? OverrideDashboardCompartmentOcid { get; set; }

        /// <summary>
        /// By default, if a resource with the same OCID exists in the target compartment, it is updated during the import process, otherwise, a new resource is created. However, if this attribute is set to true, then during the import process if a resource with the same displayName exists in the compartment, then it is updated even if the OCIDs are different. This is useful when importing the same resource multiple times. If the compartment and displayName remain the same, the resource is only updated and multiple copies of a resource are not created.
        /// </summary>
        [Input("overrideSameName")]
        public Input<string>? OverrideSameName { get; set; }

        /// <summary>
        /// If this attribute is set, the saved search resources are created or updated in the compartment specified by OCID. If this attribute is not set, the compartment specified in the JSON metadata is used. 
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("overrideSavedSearchCompartmentOcid")]
        public Input<string>? OverrideSavedSearchCompartmentOcid { get; set; }

        public ManagementDashboardsImportState()
        {
        }
        public static new ManagementDashboardsImportState Empty => new ManagementDashboardsImportState();
    }
}
