// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Marketplace
{
    public static class GetPublishers
    {
        /// <summary>
        /// This data source provides the list of Publishers in Oracle Cloud Infrastructure Marketplace service.
        /// 
        /// Gets the list of all the publishers of listings available in Oracle Cloud Infrastructure Marketplace.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testPublishers = Oci.Marketplace.GetPublishers.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         PublisherId = testPublisher.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetPublishersResult> InvokeAsync(GetPublishersArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPublishersResult>("oci:Marketplace/getPublishers:getPublishers", args ?? new GetPublishersArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Publishers in Oracle Cloud Infrastructure Marketplace service.
        /// 
        /// Gets the list of all the publishers of listings available in Oracle Cloud Infrastructure Marketplace.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testPublishers = Oci.Marketplace.GetPublishers.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         PublisherId = testPublisher.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetPublishersResult> Invoke(GetPublishersInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPublishersResult>("oci:Marketplace/getPublishers:getPublishers", args ?? new GetPublishersInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPublishersArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique identifier for the compartment.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        [Input("filters")]
        private List<Inputs.GetPublishersFilterArgs>? _filters;
        public List<Inputs.GetPublishersFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetPublishersFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Limit results to just this publisher.
        /// </summary>
        [Input("publisherId")]
        public string? PublisherId { get; set; }

        public GetPublishersArgs()
        {
        }
        public static new GetPublishersArgs Empty => new GetPublishersArgs();
    }

    public sealed class GetPublishersInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique identifier for the compartment.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetPublishersFilterInputArgs>? _filters;
        public InputList<Inputs.GetPublishersFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetPublishersFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Limit results to just this publisher.
        /// </summary>
        [Input("publisherId")]
        public Input<string>? PublisherId { get; set; }

        public GetPublishersInvokeArgs()
        {
        }
        public static new GetPublishersInvokeArgs Empty => new GetPublishersInvokeArgs();
    }


    [OutputType]
    public sealed class GetPublishersResult
    {
        public readonly string? CompartmentId;
        public readonly ImmutableArray<Outputs.GetPublishersFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? PublisherId;
        /// <summary>
        /// The list of publishers.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPublishersPublisherResult> Publishers;

        [OutputConstructor]
        private GetPublishersResult(
            string? compartmentId,

            ImmutableArray<Outputs.GetPublishersFilterResult> filters,

            string id,

            string? publisherId,

            ImmutableArray<Outputs.GetPublishersPublisherResult> publishers)
        {
            CompartmentId = compartmentId;
            Filters = filters;
            Id = id;
            PublisherId = publisherId;
            Publishers = publishers;
        }
    }
}
