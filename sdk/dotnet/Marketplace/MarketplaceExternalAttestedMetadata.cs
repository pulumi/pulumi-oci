// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Marketplace
{
    /// <summary>
    /// This resource provides the Marketplace External Attested Metadata resource in Oracle Cloud Infrastructure Marketplace service.
    /// 
    /// Generates attested marketplace metadata
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testMarketplaceExternalAttestedMetadata = new Oci.Marketplace.MarketplaceExternalAttestedMetadata("test_marketplace_external_attested_metadata", new()
    ///     {
    ///         CompartmentId = compartmentId,
    ///         InstanceId = testInstance.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// MarketplaceExternalAttestedMetadata can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:Marketplace/marketplaceExternalAttestedMetadata:MarketplaceExternalAttestedMetadata test_marketplace_external_attested_metadata "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:Marketplace/marketplaceExternalAttestedMetadata:MarketplaceExternalAttestedMetadata")]
    public partial class MarketplaceExternalAttestedMetadata : global::Pulumi.CustomResource
    {
        /// <summary>
        /// compartment that associated instance is in
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// unique id that identifies the associated instance
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// The serialized JWT token, containing header, payload, signature
        /// </summary>
        [Output("serializedJwt")]
        public Output<string> SerializedJwt { get; private set; } = null!;


        /// <summary>
        /// Create a MarketplaceExternalAttestedMetadata resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MarketplaceExternalAttestedMetadata(string name, MarketplaceExternalAttestedMetadataArgs args, CustomResourceOptions? options = null)
            : base("oci:Marketplace/marketplaceExternalAttestedMetadata:MarketplaceExternalAttestedMetadata", name, args ?? new MarketplaceExternalAttestedMetadataArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MarketplaceExternalAttestedMetadata(string name, Input<string> id, MarketplaceExternalAttestedMetadataState? state = null, CustomResourceOptions? options = null)
            : base("oci:Marketplace/marketplaceExternalAttestedMetadata:MarketplaceExternalAttestedMetadata", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MarketplaceExternalAttestedMetadata resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MarketplaceExternalAttestedMetadata Get(string name, Input<string> id, MarketplaceExternalAttestedMetadataState? state = null, CustomResourceOptions? options = null)
        {
            return new MarketplaceExternalAttestedMetadata(name, id, state, options);
        }
    }

    public sealed class MarketplaceExternalAttestedMetadataArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// compartment that associated instance is in
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// unique id that identifies the associated instance
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        public MarketplaceExternalAttestedMetadataArgs()
        {
        }
        public static new MarketplaceExternalAttestedMetadataArgs Empty => new MarketplaceExternalAttestedMetadataArgs();
    }

    public sealed class MarketplaceExternalAttestedMetadataState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// compartment that associated instance is in
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// unique id that identifies the associated instance
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// The serialized JWT token, containing header, payload, signature
        /// </summary>
        [Input("serializedJwt")]
        public Input<string>? SerializedJwt { get; set; }

        public MarketplaceExternalAttestedMetadataState()
        {
        }
        public static new MarketplaceExternalAttestedMetadataState Empty => new MarketplaceExternalAttestedMetadataState();
    }
}
