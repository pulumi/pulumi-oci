// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Marketplace
{
    /// <summary>
    /// This resource provides the Publication resource in Oracle Cloud Infrastructure Marketplace service.
    /// 
    /// Creates a publication of the specified listing type with an optional default package.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var testPublication = new Oci.Marketplace.Publication("testPublication", new Oci.Marketplace.PublicationArgs
    ///         {
    ///             CompartmentId = @var.Compartment_id,
    ///             IsAgreementAcknowledged = @var.Publication_is_agreement_acknowledged,
    ///             ListingType = @var.Publication_listing_type,
    ///             PackageDetails = new Oci.Marketplace.Inputs.PublicationPackageDetailsArgs
    ///             {
    ///                 Eulas = 
    ///                 {
    ///                     new Oci.Marketplace.Inputs.PublicationPackageDetailsEulaArgs
    ///                     {
    ///                         EulaType = @var.Publication_package_details_eula_eula_type,
    ///                         LicenseText = @var.Publication_package_details_eula_license_text,
    ///                     },
    ///                 },
    ///                 OperatingSystem = new Oci.Marketplace.Inputs.PublicationPackageDetailsOperatingSystemArgs
    ///                 {
    ///                     Name = @var.Publication_package_details_operating_system_name,
    ///                 },
    ///                 PackageType = @var.Publication_package_details_package_type,
    ///                 PackageVersion = @var.Publication_package_details_package_version,
    ///                 ImageId = oci_core_image.Test_image.Id,
    ///             },
    ///             ShortDescription = @var.Publication_short_description,
    ///             SupportContacts = 
    ///             {
    ///                 new Oci.Marketplace.Inputs.PublicationSupportContactArgs
    ///                 {
    ///                     Email = @var.Publication_support_contacts_email,
    ///                     Name = @var.Publication_support_contacts_name,
    ///                     Phone = @var.Publication_support_contacts_phone,
    ///                     Subject = @var.Publication_support_contacts_subject,
    ///                 },
    ///             },
    ///             DefinedTags = 
    ///             {
    ///                 { "Operations.CostCenter", "42" },
    ///             },
    ///             FreeformTags = 
    ///             {
    ///                 { "Department", "Finance" },
    ///             },
    ///             LongDescription = @var.Publication_long_description,
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// Publications can be imported using the `id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import oci:Marketplace/publication:Publication test_publication "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:Marketplace/publication:Publication")]
    public partial class Publication : Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the publication.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The defined tags associated with this resource, if any. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, object>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The freeform tags associated with this resource, if any. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, object>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// The model for upload data for images and icons.
        /// </summary>
        [Output("icons")]
        public Output<ImmutableArray<Outputs.PublicationIcon>> Icons { get; private set; } = null!;

        /// <summary>
        /// Whether the publisher acknowledged that they have the right and authority to share the contents of the publication and that they accepted the Oracle terms of use agreements required to create a publication.
        /// </summary>
        [Output("isAgreementAcknowledged")]
        public Output<bool> IsAgreementAcknowledged { get; private set; } = null!;

        /// <summary>
        /// The publisher category to which the publication belongs. The publisher category informs where the listing appears for use.
        /// </summary>
        [Output("listingType")]
        public Output<string> ListingType { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A long description of the publication to use in the listing.
        /// </summary>
        [Output("longDescription")]
        public Output<string> LongDescription { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The name of the contact.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// A base object for creating a publication package.
        /// </summary>
        [Output("packageDetails")]
        public Output<Outputs.PublicationPackageDetails> PackageDetails { get; private set; } = null!;

        /// <summary>
        /// The package's type.
        /// </summary>
        [Output("packageType")]
        public Output<string> PackageType { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A short description of the publication to use in the listing.
        /// </summary>
        [Output("shortDescription")]
        public Output<string> ShortDescription { get; private set; } = null!;

        /// <summary>
        /// The lifecycle state of the publication.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Contact information for getting support from the publisher for the listing.
        /// </summary>
        [Output("supportContacts")]
        public Output<ImmutableArray<Outputs.PublicationSupportContact>> SupportContacts { get; private set; } = null!;

        /// <summary>
        /// The list of operating systems supported by the listing.
        /// </summary>
        [Output("supportedOperatingSystems")]
        public Output<ImmutableArray<Outputs.PublicationSupportedOperatingSystem>> SupportedOperatingSystems { get; private set; } = null!;

        /// <summary>
        /// The date and time the publication was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;


        /// <summary>
        /// Create a Publication resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Publication(string name, PublicationArgs args, CustomResourceOptions? options = null)
            : base("oci:Marketplace/publication:Publication", name, args ?? new PublicationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Publication(string name, Input<string> id, PublicationState? state = null, CustomResourceOptions? options = null)
            : base("oci:Marketplace/publication:Publication", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Publication resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Publication Get(string name, Input<string> id, PublicationState? state = null, CustomResourceOptions? options = null)
        {
            return new Publication(name, id, state, options);
        }
    }

    public sealed class PublicationArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the publication.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) The defined tags associated with this resource, if any. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) The freeform tags associated with this resource, if any. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// Whether the publisher acknowledged that they have the right and authority to share the contents of the publication and that they accepted the Oracle terms of use agreements required to create a publication.
        /// </summary>
        [Input("isAgreementAcknowledged", required: true)]
        public Input<bool> IsAgreementAcknowledged { get; set; } = null!;

        /// <summary>
        /// The publisher category to which the publication belongs. The publisher category informs where the listing appears for use.
        /// </summary>
        [Input("listingType", required: true)]
        public Input<string> ListingType { get; set; } = null!;

        /// <summary>
        /// (Updatable) A long description of the publication to use in the listing.
        /// </summary>
        [Input("longDescription")]
        public Input<string>? LongDescription { get; set; }

        /// <summary>
        /// (Updatable) The name of the contact.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A base object for creating a publication package.
        /// </summary>
        [Input("packageDetails", required: true)]
        public Input<Inputs.PublicationPackageDetailsArgs> PackageDetails { get; set; } = null!;

        /// <summary>
        /// (Updatable) A short description of the publication to use in the listing.
        /// </summary>
        [Input("shortDescription", required: true)]
        public Input<string> ShortDescription { get; set; } = null!;

        [Input("supportContacts", required: true)]
        private InputList<Inputs.PublicationSupportContactArgs>? _supportContacts;

        /// <summary>
        /// (Updatable) Contact information for getting support from the publisher for the listing.
        /// </summary>
        public InputList<Inputs.PublicationSupportContactArgs> SupportContacts
        {
            get => _supportContacts ?? (_supportContacts = new InputList<Inputs.PublicationSupportContactArgs>());
            set => _supportContacts = value;
        }

        public PublicationArgs()
        {
        }
    }

    public sealed class PublicationState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the publication.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) The defined tags associated with this resource, if any. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) The freeform tags associated with this resource, if any. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        [Input("icons")]
        private InputList<Inputs.PublicationIconGetArgs>? _icons;

        /// <summary>
        /// The model for upload data for images and icons.
        /// </summary>
        public InputList<Inputs.PublicationIconGetArgs> Icons
        {
            get => _icons ?? (_icons = new InputList<Inputs.PublicationIconGetArgs>());
            set => _icons = value;
        }

        /// <summary>
        /// Whether the publisher acknowledged that they have the right and authority to share the contents of the publication and that they accepted the Oracle terms of use agreements required to create a publication.
        /// </summary>
        [Input("isAgreementAcknowledged")]
        public Input<bool>? IsAgreementAcknowledged { get; set; }

        /// <summary>
        /// The publisher category to which the publication belongs. The publisher category informs where the listing appears for use.
        /// </summary>
        [Input("listingType")]
        public Input<string>? ListingType { get; set; }

        /// <summary>
        /// (Updatable) A long description of the publication to use in the listing.
        /// </summary>
        [Input("longDescription")]
        public Input<string>? LongDescription { get; set; }

        /// <summary>
        /// (Updatable) The name of the contact.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A base object for creating a publication package.
        /// </summary>
        [Input("packageDetails")]
        public Input<Inputs.PublicationPackageDetailsGetArgs>? PackageDetails { get; set; }

        /// <summary>
        /// The package's type.
        /// </summary>
        [Input("packageType")]
        public Input<string>? PackageType { get; set; }

        /// <summary>
        /// (Updatable) A short description of the publication to use in the listing.
        /// </summary>
        [Input("shortDescription")]
        public Input<string>? ShortDescription { get; set; }

        /// <summary>
        /// The lifecycle state of the publication.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("supportContacts")]
        private InputList<Inputs.PublicationSupportContactGetArgs>? _supportContacts;

        /// <summary>
        /// (Updatable) Contact information for getting support from the publisher for the listing.
        /// </summary>
        public InputList<Inputs.PublicationSupportContactGetArgs> SupportContacts
        {
            get => _supportContacts ?? (_supportContacts = new InputList<Inputs.PublicationSupportContactGetArgs>());
            set => _supportContacts = value;
        }

        [Input("supportedOperatingSystems")]
        private InputList<Inputs.PublicationSupportedOperatingSystemGetArgs>? _supportedOperatingSystems;

        /// <summary>
        /// The list of operating systems supported by the listing.
        /// </summary>
        public InputList<Inputs.PublicationSupportedOperatingSystemGetArgs> SupportedOperatingSystems
        {
            get => _supportedOperatingSystems ?? (_supportedOperatingSystems = new InputList<Inputs.PublicationSupportedOperatingSystemGetArgs>());
            set => _supportedOperatingSystems = value;
        }

        /// <summary>
        /// The date and time the publication was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        public PublicationState()
        {
        }
    }
}
