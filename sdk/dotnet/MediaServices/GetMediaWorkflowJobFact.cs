// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.MediaServices
{
    public static class GetMediaWorkflowJobFact
    {
        /// <summary>
        /// &gt; **_NOTE:_** This data source has been deprecated and is no longer supported.
        /// This data source provides details about a specific Media Workflow Job Fact resource in Oracle Cloud Infrastructure Media Services service.
        /// 
        /// Get the MediaWorkflowJobFact identified by the mediaWorkflowJobId and Fact ID.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMediaWorkflowJobFact = Oci.MediaServices.GetMediaWorkflowJobFact.Invoke(new()
        ///     {
        ///         Key = mediaWorkflowJobFactKey,
        ///         MediaWorkflowJobId = testMediaWorkflowJob.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetMediaWorkflowJobFactResult> InvokeAsync(GetMediaWorkflowJobFactArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMediaWorkflowJobFactResult>("oci:MediaServices/getMediaWorkflowJobFact:getMediaWorkflowJobFact", args ?? new GetMediaWorkflowJobFactArgs(), options.WithDefaults());

        /// <summary>
        /// &gt; **_NOTE:_** This data source has been deprecated and is no longer supported.
        /// This data source provides details about a specific Media Workflow Job Fact resource in Oracle Cloud Infrastructure Media Services service.
        /// 
        /// Get the MediaWorkflowJobFact identified by the mediaWorkflowJobId and Fact ID.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMediaWorkflowJobFact = Oci.MediaServices.GetMediaWorkflowJobFact.Invoke(new()
        ///     {
        ///         Key = mediaWorkflowJobFactKey,
        ///         MediaWorkflowJobId = testMediaWorkflowJob.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetMediaWorkflowJobFactResult> Invoke(GetMediaWorkflowJobFactInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMediaWorkflowJobFactResult>("oci:MediaServices/getMediaWorkflowJobFact:getMediaWorkflowJobFact", args ?? new GetMediaWorkflowJobFactInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMediaWorkflowJobFactArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier of the MediaWorkflowJobFact within a MediaWorkflowJob.
        /// </summary>
        [Input("key", required: true)]
        public string Key { get; set; } = null!;

        /// <summary>
        /// Unique MediaWorkflowJob identifier.
        /// </summary>
        [Input("mediaWorkflowJobId", required: true)]
        public string MediaWorkflowJobId { get; set; } = null!;

        public GetMediaWorkflowJobFactArgs()
        {
        }
        public static new GetMediaWorkflowJobFactArgs Empty => new GetMediaWorkflowJobFactArgs();
    }

    public sealed class GetMediaWorkflowJobFactInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier of the MediaWorkflowJobFact within a MediaWorkflowJob.
        /// </summary>
        [Input("key", required: true)]
        public Input<string> Key { get; set; } = null!;

        /// <summary>
        /// Unique MediaWorkflowJob identifier.
        /// </summary>
        [Input("mediaWorkflowJobId", required: true)]
        public Input<string> MediaWorkflowJobId { get; set; } = null!;

        public GetMediaWorkflowJobFactInvokeArgs()
        {
        }
        public static new GetMediaWorkflowJobFactInvokeArgs Empty => new GetMediaWorkflowJobFactInvokeArgs();
    }


    [OutputType]
    public sealed class GetMediaWorkflowJobFactResult
    {
        /// <summary>
        /// The body of the detail captured as JSON.
        /// </summary>
        public readonly string Detail;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// System generated serial number to uniquely identify a detail in order within a MediaWorkflowJob.
        /// </summary>
        public readonly string Key;
        /// <summary>
        /// Reference to the parent job.
        /// </summary>
        public readonly string MediaWorkflowJobId;
        /// <summary>
        /// Unique name. It is read-only and generated for the fact.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The type of information contained in this detail.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetMediaWorkflowJobFactResult(
            string detail,

            string id,

            string key,

            string mediaWorkflowJobId,

            string name,

            string type)
        {
            Detail = detail;
            Id = id;
            Key = key;
            MediaWorkflowJobId = mediaWorkflowJobId;
            Name = name;
            Type = type;
        }
    }
}
