// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.MediaServices
{
    public static class GetMediaWorkflowJobFacts
    {
        public static Task<GetMediaWorkflowJobFactsResult> InvokeAsync(GetMediaWorkflowJobFactsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMediaWorkflowJobFactsResult>("oci:MediaServices/getMediaWorkflowJobFacts:getMediaWorkflowJobFacts", args ?? new GetMediaWorkflowJobFactsArgs(), options.WithDefaults());

        public static Output<GetMediaWorkflowJobFactsResult> Invoke(GetMediaWorkflowJobFactsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMediaWorkflowJobFactsResult>("oci:MediaServices/getMediaWorkflowJobFacts:getMediaWorkflowJobFacts", args ?? new GetMediaWorkflowJobFactsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMediaWorkflowJobFactsArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetMediaWorkflowJobFactsFilterArgs>? _filters;
        public List<Inputs.GetMediaWorkflowJobFactsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetMediaWorkflowJobFactsFilterArgs>());
            set => _filters = value;
        }

        [Input("key")]
        public string? Key { get; set; }

        [Input("mediaWorkflowJobId", required: true)]
        public string MediaWorkflowJobId { get; set; } = null!;

        [Input("type")]
        public string? Type { get; set; }

        public GetMediaWorkflowJobFactsArgs()
        {
        }
        public static new GetMediaWorkflowJobFactsArgs Empty => new GetMediaWorkflowJobFactsArgs();
    }

    public sealed class GetMediaWorkflowJobFactsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetMediaWorkflowJobFactsFilterInputArgs>? _filters;
        public InputList<Inputs.GetMediaWorkflowJobFactsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetMediaWorkflowJobFactsFilterInputArgs>());
            set => _filters = value;
        }

        [Input("key")]
        public Input<string>? Key { get; set; }

        [Input("mediaWorkflowJobId", required: true)]
        public Input<string> MediaWorkflowJobId { get; set; } = null!;

        [Input("type")]
        public Input<string>? Type { get; set; }

        public GetMediaWorkflowJobFactsInvokeArgs()
        {
        }
        public static new GetMediaWorkflowJobFactsInvokeArgs Empty => new GetMediaWorkflowJobFactsInvokeArgs();
    }


    [OutputType]
    public sealed class GetMediaWorkflowJobFactsResult
    {
        public readonly ImmutableArray<Outputs.GetMediaWorkflowJobFactsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? Key;
        public readonly ImmutableArray<Outputs.GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionResult> MediaWorkflowJobFactCollections;
        public readonly string MediaWorkflowJobId;
        public readonly string? Type;

        [OutputConstructor]
        private GetMediaWorkflowJobFactsResult(
            ImmutableArray<Outputs.GetMediaWorkflowJobFactsFilterResult> filters,

            string id,

            string? key,

            ImmutableArray<Outputs.GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionResult> mediaWorkflowJobFactCollections,

            string mediaWorkflowJobId,

            string? type)
        {
            Filters = filters;
            Id = id;
            Key = key;
            MediaWorkflowJobFactCollections = mediaWorkflowJobFactCollections;
            MediaWorkflowJobId = mediaWorkflowJobId;
            Type = type;
        }
    }
}
