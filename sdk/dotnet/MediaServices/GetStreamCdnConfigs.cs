// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.MediaServices
{
    public static class GetStreamCdnConfigs
    {
        /// <summary>
        /// This data source provides the list of Stream Cdn Configs in Oracle Cloud Infrastructure Media Services service.
        /// 
        /// Lists the StreamCdnConfig.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testStreamCdnConfigs = Oci.MediaServices.GetStreamCdnConfigs.Invoke(new()
        ///     {
        ///         DistributionChannelId = oci_mysql_channel.Test_channel.Id,
        ///         DisplayName = @var.Stream_cdn_config_display_name,
        ///         Id = @var.Stream_cdn_config_id,
        ///         State = @var.Stream_cdn_config_state,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetStreamCdnConfigsResult> InvokeAsync(GetStreamCdnConfigsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetStreamCdnConfigsResult>("oci:MediaServices/getStreamCdnConfigs:getStreamCdnConfigs", args ?? new GetStreamCdnConfigsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Stream Cdn Configs in Oracle Cloud Infrastructure Media Services service.
        /// 
        /// Lists the StreamCdnConfig.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testStreamCdnConfigs = Oci.MediaServices.GetStreamCdnConfigs.Invoke(new()
        ///     {
        ///         DistributionChannelId = oci_mysql_channel.Test_channel.Id,
        ///         DisplayName = @var.Stream_cdn_config_display_name,
        ///         Id = @var.Stream_cdn_config_id,
        ///         State = @var.Stream_cdn_config_state,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetStreamCdnConfigsResult> Invoke(GetStreamCdnConfigsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetStreamCdnConfigsResult>("oci:MediaServices/getStreamCdnConfigs:getStreamCdnConfigs", args ?? new GetStreamCdnConfigsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetStreamCdnConfigsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A filter to return only the resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        /// <summary>
        /// The Stream Distribution Channel identifier this CdnConfig belongs to.
        /// </summary>
        [Input("distributionChannelId", required: true)]
        public string DistributionChannelId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetStreamCdnConfigsFilterArgs>? _filters;
        public List<Inputs.GetStreamCdnConfigsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetStreamCdnConfigsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Unique StreamCdnConfig identifier.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// A filter to return only the resources with lifecycleState matching the given lifecycleState.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetStreamCdnConfigsArgs()
        {
        }
        public static new GetStreamCdnConfigsArgs Empty => new GetStreamCdnConfigsArgs();
    }

    public sealed class GetStreamCdnConfigsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A filter to return only the resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// The Stream Distribution Channel identifier this CdnConfig belongs to.
        /// </summary>
        [Input("distributionChannelId", required: true)]
        public Input<string> DistributionChannelId { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetStreamCdnConfigsFilterInputArgs>? _filters;
        public InputList<Inputs.GetStreamCdnConfigsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetStreamCdnConfigsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Unique StreamCdnConfig identifier.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// A filter to return only the resources with lifecycleState matching the given lifecycleState.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetStreamCdnConfigsInvokeArgs()
        {
        }
        public static new GetStreamCdnConfigsInvokeArgs Empty => new GetStreamCdnConfigsInvokeArgs();
    }


    [OutputType]
    public sealed class GetStreamCdnConfigsResult
    {
        /// <summary>
        /// The CDN Configuration identifier or display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// Distribution Channel Identifier.
        /// </summary>
        public readonly string DistributionChannelId;
        public readonly ImmutableArray<Outputs.GetStreamCdnConfigsFilterResult> Filters;
        /// <summary>
        /// Unique identifier that is immutable on creation.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The current state of the CDN Configuration.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// The list of stream_cdn_config_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetStreamCdnConfigsStreamCdnConfigCollectionResult> StreamCdnConfigCollections;

        [OutputConstructor]
        private GetStreamCdnConfigsResult(
            string? displayName,

            string distributionChannelId,

            ImmutableArray<Outputs.GetStreamCdnConfigsFilterResult> filters,

            string? id,

            string? state,

            ImmutableArray<Outputs.GetStreamCdnConfigsStreamCdnConfigCollectionResult> streamCdnConfigCollections)
        {
            DisplayName = displayName;
            DistributionChannelId = distributionChannelId;
            Filters = filters;
            Id = id;
            State = state;
            StreamCdnConfigCollections = streamCdnConfigCollections;
        }
    }
}
