// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.MediaServices
{
    public static class GetStreamDistributionChannel
    {
        /// <summary>
        /// This data source provides details about a specific Stream Distribution Channel resource in Oracle Cloud Infrastructure Media Services service.
        /// 
        /// Gets a Stream Distribution Channel by identifier.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testStreamDistributionChannel = Oci.MediaServices.GetStreamDistributionChannel.Invoke(new()
        ///     {
        ///         StreamDistributionChannelId = testStreamDistributionChannelOciMediaServicesStreamDistributionChannel.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetStreamDistributionChannelResult> InvokeAsync(GetStreamDistributionChannelArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetStreamDistributionChannelResult>("oci:MediaServices/getStreamDistributionChannel:getStreamDistributionChannel", args ?? new GetStreamDistributionChannelArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Stream Distribution Channel resource in Oracle Cloud Infrastructure Media Services service.
        /// 
        /// Gets a Stream Distribution Channel by identifier.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testStreamDistributionChannel = Oci.MediaServices.GetStreamDistributionChannel.Invoke(new()
        ///     {
        ///         StreamDistributionChannelId = testStreamDistributionChannelOciMediaServicesStreamDistributionChannel.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetStreamDistributionChannelResult> Invoke(GetStreamDistributionChannelInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetStreamDistributionChannelResult>("oci:MediaServices/getStreamDistributionChannel:getStreamDistributionChannel", args ?? new GetStreamDistributionChannelInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetStreamDistributionChannelArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique Stream Distribution Channel path identifier.
        /// </summary>
        [Input("streamDistributionChannelId", required: true)]
        public string StreamDistributionChannelId { get; set; } = null!;

        public GetStreamDistributionChannelArgs()
        {
        }
        public static new GetStreamDistributionChannelArgs Empty => new GetStreamDistributionChannelArgs();
    }

    public sealed class GetStreamDistributionChannelInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique Stream Distribution Channel path identifier.
        /// </summary>
        [Input("streamDistributionChannelId", required: true)]
        public Input<string> StreamDistributionChannelId { get; set; } = null!;

        public GetStreamDistributionChannelInvokeArgs()
        {
        }
        public static new GetStreamDistributionChannelInvokeArgs Empty => new GetStreamDistributionChannelInvokeArgs();
    }


    [OutputType]
    public sealed class GetStreamDistributionChannelResult
    {
        /// <summary>
        /// The compartment ID of the lock.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// Stream Distribution Channel display name. Avoid entering confidential information.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Unique domain name of the Distribution Channel.
        /// </summary>
        public readonly string DomainName;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// Unique identifier that is immutable on creation.
        /// </summary>
        public readonly string Id;
        public readonly bool IsLockOverride;
        /// <summary>
        /// Locks associated with this resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetStreamDistributionChannelLockResult> Locks;
        /// <summary>
        /// The current state of the Stream Distribution Channel.
        /// </summary>
        public readonly string State;
        public readonly string StreamDistributionChannelId;
        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> SystemTags;
        /// <summary>
        /// The time when the Stream Distribution Channel was created. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time when the Stream Distribution Channel was updated. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetStreamDistributionChannelResult(
            string compartmentId,

            ImmutableDictionary<string, object> definedTags,

            string displayName,

            string domainName,

            ImmutableDictionary<string, object> freeformTags,

            string id,

            bool isLockOverride,

            ImmutableArray<Outputs.GetStreamDistributionChannelLockResult> locks,

            string state,

            string streamDistributionChannelId,

            ImmutableDictionary<string, object> systemTags,

            string timeCreated,

            string timeUpdated)
        {
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            DisplayName = displayName;
            DomainName = domainName;
            FreeformTags = freeformTags;
            Id = id;
            IsLockOverride = isLockOverride;
            Locks = locks;
            State = state;
            StreamDistributionChannelId = streamDistributionChannelId;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
