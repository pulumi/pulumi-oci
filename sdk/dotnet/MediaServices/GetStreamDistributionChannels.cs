// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.MediaServices
{
    public static class GetStreamDistributionChannels
    {
        /// <summary>
        /// This data source provides the list of Stream Distribution Channels in Oracle Cloud Infrastructure Media Services service.
        /// 
        /// Lists the Stream Distribution Channels.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testStreamDistributionChannels = Oci.MediaServices.GetStreamDistributionChannels.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = streamDistributionChannelDisplayName,
        ///         Id = streamDistributionChannelId,
        ///         State = streamDistributionChannelState,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetStreamDistributionChannelsResult> InvokeAsync(GetStreamDistributionChannelsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetStreamDistributionChannelsResult>("oci:MediaServices/getStreamDistributionChannels:getStreamDistributionChannels", args ?? new GetStreamDistributionChannelsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Stream Distribution Channels in Oracle Cloud Infrastructure Media Services service.
        /// 
        /// Lists the Stream Distribution Channels.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testStreamDistributionChannels = Oci.MediaServices.GetStreamDistributionChannels.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = streamDistributionChannelDisplayName,
        ///         Id = streamDistributionChannelId,
        ///         State = streamDistributionChannelState,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetStreamDistributionChannelsResult> Invoke(GetStreamDistributionChannelsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetStreamDistributionChannelsResult>("oci:MediaServices/getStreamDistributionChannels:getStreamDistributionChannels", args ?? new GetStreamDistributionChannelsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetStreamDistributionChannelsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return only the resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetStreamDistributionChannelsFilterArgs>? _filters;
        public List<Inputs.GetStreamDistributionChannelsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetStreamDistributionChannelsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Unique Stream Distribution Channel identifier.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// A filter to return only the resources with lifecycleState matching the given lifecycleState.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetStreamDistributionChannelsArgs()
        {
        }
        public static new GetStreamDistributionChannelsArgs Empty => new GetStreamDistributionChannelsArgs();
    }

    public sealed class GetStreamDistributionChannelsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return only the resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetStreamDistributionChannelsFilterInputArgs>? _filters;
        public InputList<Inputs.GetStreamDistributionChannelsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetStreamDistributionChannelsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Unique Stream Distribution Channel identifier.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// A filter to return only the resources with lifecycleState matching the given lifecycleState.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetStreamDistributionChannelsInvokeArgs()
        {
        }
        public static new GetStreamDistributionChannelsInvokeArgs Empty => new GetStreamDistributionChannelsInvokeArgs();
    }


    [OutputType]
    public sealed class GetStreamDistributionChannelsResult
    {
        /// <summary>
        /// The compartment ID of the lock.
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// Stream Distribution Channel display name. Avoid entering confidential information.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetStreamDistributionChannelsFilterResult> Filters;
        /// <summary>
        /// Unique identifier that is immutable on creation.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The current state of the Stream Distribution Channel.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// The list of stream_distribution_channel_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetStreamDistributionChannelsStreamDistributionChannelCollectionResult> StreamDistributionChannelCollections;

        [OutputConstructor]
        private GetStreamDistributionChannelsResult(
            string? compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetStreamDistributionChannelsFilterResult> filters,

            string? id,

            string? state,

            ImmutableArray<Outputs.GetStreamDistributionChannelsStreamDistributionChannelCollectionResult> streamDistributionChannelCollections)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            State = state;
            StreamDistributionChannelCollections = streamDistributionChannelCollections;
        }
    }
}
