// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.MediaServices
{
    public static class GetSystemMediaWorkflow
    {
        /// <summary>
        /// This data source provides details about a specific System Media Workflow resource in Oracle Cloud Infrastructure Media Services service.
        /// 
        /// Lists the SystemMediaWorkflows that can be used to run a job by name or as a template to create a MediaWorkflow.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSystemMediaWorkflow = Oci.MediaServices.GetSystemMediaWorkflow.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         Name = @var.System_media_workflow_name,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetSystemMediaWorkflowResult> InvokeAsync(GetSystemMediaWorkflowArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSystemMediaWorkflowResult>("oci:MediaServices/getSystemMediaWorkflow:getSystemMediaWorkflow", args ?? new GetSystemMediaWorkflowArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific System Media Workflow resource in Oracle Cloud Infrastructure Media Services service.
        /// 
        /// Lists the SystemMediaWorkflows that can be used to run a job by name or as a template to create a MediaWorkflow.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSystemMediaWorkflow = Oci.MediaServices.GetSystemMediaWorkflow.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         Name = @var.System_media_workflow_name,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetSystemMediaWorkflowResult> Invoke(GetSystemMediaWorkflowInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSystemMediaWorkflowResult>("oci:MediaServices/getSystemMediaWorkflow:getSystemMediaWorkflow", args ?? new GetSystemMediaWorkflowInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSystemMediaWorkflowArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return only the resources with their system defined, unique name matching the given name.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        public GetSystemMediaWorkflowArgs()
        {
        }
        public static new GetSystemMediaWorkflowArgs Empty => new GetSystemMediaWorkflowArgs();
    }

    public sealed class GetSystemMediaWorkflowInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return only the resources with their system defined, unique name matching the given name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetSystemMediaWorkflowInvokeArgs()
        {
        }
        public static new GetSystemMediaWorkflowInvokeArgs Empty => new GetSystemMediaWorkflowInvokeArgs();
    }


    [OutputType]
    public sealed class GetSystemMediaWorkflowResult
    {
        public readonly string? CompartmentId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// List of SytemMediaWorkflow items.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSystemMediaWorkflowItemResult> Items;
        /// <summary>
        /// System provided unique identifier for this static media workflow.
        /// </summary>
        public readonly string? Name;

        [OutputConstructor]
        private GetSystemMediaWorkflowResult(
            string? compartmentId,

            string id,

            ImmutableArray<Outputs.GetSystemMediaWorkflowItemResult> items,

            string? name)
        {
            CompartmentId = compartmentId;
            Id = id;
            Items = items;
            Name = name;
        }
    }
}
