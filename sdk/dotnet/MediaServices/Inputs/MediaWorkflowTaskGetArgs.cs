// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.MediaServices.Inputs
{

    public sealed class MediaWorkflowTaskGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) Allows this task to be conditionally enabled.  If no value or a blank value is given, the task is unconditionally enbled.  Otherwise the given string specifies a parameter of the job created for this task's workflow using the JSON pointer syntax. The JSON pointer is validated when a job is created from the workflow of this task.
        /// </summary>
        [Input("enableParameterReference")]
        public Input<string>? EnableParameterReference { get; set; }

        [Input("enableWhenReferencedParameterEquals")]
        private InputMap<string>? _enableWhenReferencedParameterEquals;

        /// <summary>
        /// (Updatable) Used in conjunction with enableParameterReference to conditionally enable a task.  When a job is created from the workflow of this task, the task will only be enabled if the value of the parameter specified by enableParameterReference is equal to the value of this property. This property must be prenset if and only if a enableParameterReference is given. The value is a JSON node.
        /// </summary>
        public InputMap<string> EnableWhenReferencedParameterEquals
        {
            get => _enableWhenReferencedParameterEquals ?? (_enableWhenReferencedParameterEquals = new InputMap<string>());
            set => _enableWhenReferencedParameterEquals = value;
        }

        /// <summary>
        /// (Updatable) A unique identifier for this task within its workflow. Keys are used to reference a task within workflows and MediaWorkflowJobs. Tasks are referenced as prerequisites and to track output and state.
        /// </summary>
        [Input("key", required: true)]
        public Input<string> Key { get; set; } = null!;

        /// <summary>
        /// (Updatable) Data specifiying how this task is to be run. The data is a JSON object that must conform to the JSON Schema specified by the parameters of the MediaWorkflowTaskDeclaration this task references. The parameters may contain values or references to other parameters.
        /// </summary>
        [Input("parameters", required: true)]
        public Input<string> Parameters { get; set; } = null!;

        [Input("prerequisites")]
        private InputList<string>? _prerequisites;

        /// <summary>
        /// (Updatable) Keys to the other tasks in this workflow that must be completed before execution of this task can begin.
        /// </summary>
        public InputList<string> Prerequisites
        {
            get => _prerequisites ?? (_prerequisites = new InputList<string>());
            set => _prerequisites = value;
        }

        /// <summary>
        /// (Updatable) The type of process to run at this task. Refers to the name of a MediaWorkflowTaskDeclaration.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        /// <summary>
        /// (Updatable) The version of the MediaWorkflowTaskDeclaration.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("version", required: true)]
        public Input<string> Version { get; set; } = null!;

        public MediaWorkflowTaskGetArgs()
        {
        }
        public static new MediaWorkflowTaskGetArgs Empty => new MediaWorkflowTaskGetArgs();
    }
}
