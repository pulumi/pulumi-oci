// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.MediaServices.Outputs
{

    [OutputType]
    public sealed class GetMediaWorkflowJobsMediaWorkflowJobCollectionItemResult
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// A filter to return only the resources that match the entire display name given.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// unique MediaWorkflowJob identifier
        /// </summary>
        public readonly string Id;
        public readonly bool IsLockOverride;
        /// <summary>
        /// The lifecycle details of MediaWorkflowJob task.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// Locks associated with this resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockResult> Locks;
        /// <summary>
        /// Configurations to be applied to this run of the workflow.
        /// </summary>
        public readonly ImmutableArray<string> MediaWorkflowConfigurationIds;
        /// <summary>
        /// Unique MediaWorkflow identifier.
        /// </summary>
        public readonly string MediaWorkflowId;
        public readonly string MediaWorkflowName;
        /// <summary>
        /// A list of JobOutput for the workflowJob.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputResult> Outputs;
        /// <summary>
        /// Parameters that override parameters specified in MediaWorkflowTaskDeclarations, the MediaWorkflow, the MediaWorkflow's MediaWorkflowConfigurations and the MediaWorkflowConfigurations of this MediaWorkflowJob. The parameters are given as JSON.  The top level and 2nd level elements must be JSON objects (vs arrays, scalars, etc). The top level keys refer to a task's key and the 2nd level keys refer to a parameter's name.
        /// </summary>
        public readonly string Parameters;
        /// <summary>
        /// A JSON representation of the job as it will be run by the system. All the task declarations, configurations and parameters are merged. Parameter values are all fully resolved.
        /// </summary>
        public readonly string Runnable;
        /// <summary>
        /// A filter to return only the resources with lifecycleState matching the given lifecycleState.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> SystemTags;
        /// <summary>
        /// Status of each task.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateResult> TaskLifecycleStates;
        /// <summary>
        /// Creation time of the job. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// Time when the job finished. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeEnded;
        /// <summary>
        /// Time when the job started to execute. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeStarted;
        /// <summary>
        /// Updated time of the job. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeUpdated;
        public readonly string WorkflowIdentifierType;

        [OutputConstructor]
        private GetMediaWorkflowJobsMediaWorkflowJobCollectionItemResult(
            string compartmentId,

            ImmutableDictionary<string, object> definedTags,

            string displayName,

            ImmutableDictionary<string, object> freeformTags,

            string id,

            bool isLockOverride,

            string lifecycleDetails,

            ImmutableArray<Outputs.GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockResult> locks,

            ImmutableArray<string> mediaWorkflowConfigurationIds,

            string mediaWorkflowId,

            string mediaWorkflowName,

            ImmutableArray<Outputs.GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputResult> outputs,

            string parameters,

            string runnable,

            string state,

            ImmutableDictionary<string, object> systemTags,

            ImmutableArray<Outputs.GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateResult> taskLifecycleStates,

            string timeCreated,

            string timeEnded,

            string timeStarted,

            string timeUpdated,

            string workflowIdentifierType)
        {
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            IsLockOverride = isLockOverride;
            LifecycleDetails = lifecycleDetails;
            Locks = locks;
            MediaWorkflowConfigurationIds = mediaWorkflowConfigurationIds;
            MediaWorkflowId = mediaWorkflowId;
            MediaWorkflowName = mediaWorkflowName;
            Outputs = outputs;
            Parameters = parameters;
            Runnable = runnable;
            State = state;
            SystemTags = systemTags;
            TaskLifecycleStates = taskLifecycleStates;
            TimeCreated = timeCreated;
            TimeEnded = timeEnded;
            TimeStarted = timeStarted;
            TimeUpdated = timeUpdated;
            WorkflowIdentifierType = workflowIdentifierType;
        }
    }
}
