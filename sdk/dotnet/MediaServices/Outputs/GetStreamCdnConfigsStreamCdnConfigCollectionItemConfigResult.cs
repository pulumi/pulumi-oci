// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.MediaServices.Outputs
{

    [OutputType]
    public sealed class GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigResult
    {
        /// <summary>
        /// The hostname of the CDN edge server to use when building CDN URLs.
        /// </summary>
        public readonly string EdgeHostname;
        /// <summary>
        /// The path to prepend when building CDN URLs.
        /// </summary>
        public readonly string EdgePathPrefix;
        /// <summary>
        /// The encryption key to use for edge token authentication.
        /// </summary>
        public readonly string EdgeTokenKey;
        /// <summary>
        /// Salt to use when encrypting authentication token.
        /// </summary>
        public readonly string EdgeTokenSalt;
        /// <summary>
        /// Whether token authentication should be used at the CDN edge.
        /// </summary>
        public readonly bool IsEdgeTokenAuth;
        /// <summary>
        /// The shared secret key A, two for errorless key rotation.
        /// </summary>
        public readonly string OriginAuthSecretKeyA;
        /// <summary>
        /// The shared secret key B, two for errorless key rotation.
        /// </summary>
        public readonly string OriginAuthSecretKeyB;
        /// <summary>
        /// Nonce identifier for originAuthSecretKeyA (used to determine key used to sign).
        /// </summary>
        public readonly string OriginAuthSecretKeyNonceA;
        /// <summary>
        /// Nonce identifier for originAuthSecretKeyB (used to determine key used to sign).
        /// </summary>
        public readonly string OriginAuthSecretKeyNonceB;
        /// <summary>
        /// The type of encryption used to compute the signature.
        /// </summary>
        public readonly string OriginAuthSignEncryption;
        /// <summary>
        /// The type of data used to compute the signature.
        /// </summary>
        public readonly string OriginAuthSignType;
        /// <summary>
        /// Type of the lock.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigResult(
            string edgeHostname,

            string edgePathPrefix,

            string edgeTokenKey,

            string edgeTokenSalt,

            bool isEdgeTokenAuth,

            string originAuthSecretKeyA,

            string originAuthSecretKeyB,

            string originAuthSecretKeyNonceA,

            string originAuthSecretKeyNonceB,

            string originAuthSignEncryption,

            string originAuthSignType,

            string type)
        {
            EdgeHostname = edgeHostname;
            EdgePathPrefix = edgePathPrefix;
            EdgeTokenKey = edgeTokenKey;
            EdgeTokenSalt = edgeTokenSalt;
            IsEdgeTokenAuth = isEdgeTokenAuth;
            OriginAuthSecretKeyA = originAuthSecretKeyA;
            OriginAuthSecretKeyB = originAuthSecretKeyB;
            OriginAuthSecretKeyNonceA = originAuthSecretKeyNonceA;
            OriginAuthSecretKeyNonceB = originAuthSecretKeyNonceB;
            OriginAuthSignEncryption = originAuthSignEncryption;
            OriginAuthSignType = originAuthSignType;
            Type = type;
        }
    }
}
