// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.MediaServices.Outputs
{

    [OutputType]
    public sealed class GetStreamPackagingConfigsStreamPackagingConfigCollectionItemResult
    {
        /// <summary>
        /// Compartment Identifier
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// A filter to return only the resources that match the entire display name given.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Unique Stream Distribution Channel identifier.
        /// </summary>
        public readonly string DistributionChannelId;
        /// <summary>
        /// The encryption used by the stream packaging configuration.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionResult> Encryptions;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// Unique identifier that is immutable on creation.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The duration in seconds for each fragment.
        /// </summary>
        public readonly int SegmentTimeInSeconds;
        /// <summary>
        /// A filter to return only the resources with lifecycleState matching the given lifecycleState.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The output format for the package.
        /// </summary>
        public readonly string StreamPackagingFormat;
        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> SystemTags;
        /// <summary>
        /// The time when the Packaging Configuration was created. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time when the Packaging Configuration was updated. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetStreamPackagingConfigsStreamPackagingConfigCollectionItemResult(
            string compartmentId,

            ImmutableDictionary<string, object> definedTags,

            string displayName,

            string distributionChannelId,

            ImmutableArray<Outputs.GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionResult> encryptions,

            ImmutableDictionary<string, object> freeformTags,

            string id,

            int segmentTimeInSeconds,

            string state,

            string streamPackagingFormat,

            ImmutableDictionary<string, object> systemTags,

            string timeCreated,

            string timeUpdated)
        {
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            DisplayName = displayName;
            DistributionChannelId = distributionChannelId;
            Encryptions = encryptions;
            FreeformTags = freeformTags;
            Id = id;
            SegmentTimeInSeconds = segmentTimeInSeconds;
            State = state;
            StreamPackagingFormat = streamPackagingFormat;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
