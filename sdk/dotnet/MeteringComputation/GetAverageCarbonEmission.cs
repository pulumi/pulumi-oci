// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.MeteringComputation
{
    public static class GetAverageCarbonEmission
    {
        /// <summary>
        /// This data source provides details about a specific Average Carbon Emission resource in Oracle Cloud Infrastructure Metering Computation service.
        /// 
        /// Returns the average carbon emissions summary by SKU.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAverageCarbonEmission = Oci.MeteringComputation.GetAverageCarbonEmission.Invoke(new()
        ///     {
        ///         SkuPartNumber = averageCarbonEmissionSkuPartNumber,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetAverageCarbonEmissionResult> InvokeAsync(GetAverageCarbonEmissionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAverageCarbonEmissionResult>("oci:MeteringComputation/getAverageCarbonEmission:getAverageCarbonEmission", args ?? new GetAverageCarbonEmissionArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Average Carbon Emission resource in Oracle Cloud Infrastructure Metering Computation service.
        /// 
        /// Returns the average carbon emissions summary by SKU.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAverageCarbonEmission = Oci.MeteringComputation.GetAverageCarbonEmission.Invoke(new()
        ///     {
        ///         SkuPartNumber = averageCarbonEmissionSkuPartNumber,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAverageCarbonEmissionResult> Invoke(GetAverageCarbonEmissionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAverageCarbonEmissionResult>("oci:MeteringComputation/getAverageCarbonEmission:getAverageCarbonEmission", args ?? new GetAverageCarbonEmissionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAverageCarbonEmissionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The SKU part number.
        /// </summary>
        [Input("skuPartNumber", required: true)]
        public string SkuPartNumber { get; set; } = null!;

        public GetAverageCarbonEmissionArgs()
        {
        }
        public static new GetAverageCarbonEmissionArgs Empty => new GetAverageCarbonEmissionArgs();
    }

    public sealed class GetAverageCarbonEmissionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The SKU part number.
        /// </summary>
        [Input("skuPartNumber", required: true)]
        public Input<string> SkuPartNumber { get; set; } = null!;

        public GetAverageCarbonEmissionInvokeArgs()
        {
        }
        public static new GetAverageCarbonEmissionInvokeArgs Empty => new GetAverageCarbonEmissionInvokeArgs();
    }


    [OutputType]
    public sealed class GetAverageCarbonEmissionResult
    {
        /// <summary>
        /// The average carbon emissions by SKU.
        /// </summary>
        public readonly double AverageCarbonEmission;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The sku part number.
        /// </summary>
        public readonly string SkuPartNumber;

        [OutputConstructor]
        private GetAverageCarbonEmissionResult(
            double averageCarbonEmission,

            string id,

            string skuPartNumber)
        {
            AverageCarbonEmission = averageCarbonEmission;
            Id = id;
            SkuPartNumber = skuPartNumber;
        }
    }
}
