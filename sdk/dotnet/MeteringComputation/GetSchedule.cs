// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.MeteringComputation
{
    public static class GetSchedule
    {
        /// <summary>
        /// This data source provides details about a specific Schedule resource in Oracle Cloud Infrastructure Metering Computation service.
        /// 
        /// Returns the saved schedule.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSchedule = Oci.MeteringComputation.GetSchedule.Invoke(new()
        ///     {
        ///         ScheduleId = oci_metering_computation_schedule.Test_schedule.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetScheduleResult> InvokeAsync(GetScheduleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetScheduleResult>("oci:MeteringComputation/getSchedule:getSchedule", args ?? new GetScheduleArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Schedule resource in Oracle Cloud Infrastructure Metering Computation service.
        /// 
        /// Returns the saved schedule.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSchedule = Oci.MeteringComputation.GetSchedule.Invoke(new()
        ///     {
        ///         ScheduleId = oci_metering_computation_schedule.Test_schedule.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetScheduleResult> Invoke(GetScheduleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetScheduleResult>("oci:MeteringComputation/getSchedule:getSchedule", args ?? new GetScheduleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetScheduleArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The schedule unique OCID.
        /// </summary>
        [Input("scheduleId", required: true)]
        public string ScheduleId { get; set; } = null!;

        public GetScheduleArgs()
        {
        }
        public static new GetScheduleArgs Empty => new GetScheduleArgs();
    }

    public sealed class GetScheduleInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The schedule unique OCID.
        /// </summary>
        [Input("scheduleId", required: true)]
        public Input<string> ScheduleId { get; set; } = null!;

        public GetScheduleInvokeArgs()
        {
        }
        public static new GetScheduleInvokeArgs Empty => new GetScheduleInvokeArgs();
    }


    [OutputType]
    public sealed class GetScheduleResult
    {
        /// <summary>
        /// The customer tenancy.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// The description of the schedule.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// The OCID representing a unique shedule.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The unique name of the schedule created by the user.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Specifies the supported output file format.
        /// </summary>
        public readonly string OutputFileFormat;
        /// <summary>
        /// The query properties.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetScheduleQueryPropertyResult> QueryProperties;
        /// <summary>
        /// The location where usage or cost CSVs will be uploaded defined by `locationType`, which corresponds with type-specific characteristics.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetScheduleResultLocationResult> ResultLocations;
        /// <summary>
        /// The saved report ID which can also be used to generate a query.
        /// </summary>
        public readonly string SavedReportId;
        public readonly string ScheduleId;
        /// <summary>
        /// Specifies the frequency according to when the schedule will be run, in the x-obmcs-recurring-time format described in [RFC 5545 section 3.3.10](https://datatracker.ietf.org/doc/html/rfc5545#section-3.3.10). Supported values are : ONE_TIME, DAILY, WEEKLY and MONTHLY.
        /// </summary>
        public readonly string ScheduleRecurrences;
        /// <summary>
        /// The schedule lifecycle state.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> SystemTags;
        /// <summary>
        /// The date and time the schedule was created.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The date and time of the next job execution.
        /// </summary>
        public readonly string TimeNextRun;
        /// <summary>
        /// The date and time of the first time job execution.
        /// </summary>
        public readonly string TimeScheduled;

        [OutputConstructor]
        private GetScheduleResult(
            string compartmentId,

            ImmutableDictionary<string, object> definedTags,

            string description,

            ImmutableDictionary<string, object> freeformTags,

            string id,

            string name,

            string outputFileFormat,

            ImmutableArray<Outputs.GetScheduleQueryPropertyResult> queryProperties,

            ImmutableArray<Outputs.GetScheduleResultLocationResult> resultLocations,

            string savedReportId,

            string scheduleId,

            string scheduleRecurrences,

            string state,

            ImmutableDictionary<string, object> systemTags,

            string timeCreated,

            string timeNextRun,

            string timeScheduled)
        {
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            Description = description;
            FreeformTags = freeformTags;
            Id = id;
            Name = name;
            OutputFileFormat = outputFileFormat;
            QueryProperties = queryProperties;
            ResultLocations = resultLocations;
            SavedReportId = savedReportId;
            ScheduleId = scheduleId;
            ScheduleRecurrences = scheduleRecurrences;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeNextRun = timeNextRun;
            TimeScheduled = timeScheduled;
        }
    }
}
