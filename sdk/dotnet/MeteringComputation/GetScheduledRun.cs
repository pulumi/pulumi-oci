// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.MeteringComputation
{
    public static class GetScheduledRun
    {
        /// <summary>
        /// This data source provides details about a specific Scheduled Run resource in Oracle Cloud Infrastructure Metering Computation service.
        /// 
        /// Returns the saved schedule run.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testScheduledRun = Oci.MeteringComputation.GetScheduledRun.Invoke(new()
        ///     {
        ///         ScheduledRunId = testScheduledRunOciMeteringComputationScheduledRun.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetScheduledRunResult> InvokeAsync(GetScheduledRunArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetScheduledRunResult>("oci:MeteringComputation/getScheduledRun:getScheduledRun", args ?? new GetScheduledRunArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Scheduled Run resource in Oracle Cloud Infrastructure Metering Computation service.
        /// 
        /// Returns the saved schedule run.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testScheduledRun = Oci.MeteringComputation.GetScheduledRun.Invoke(new()
        ///     {
        ///         ScheduledRunId = testScheduledRunOciMeteringComputationScheduledRun.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetScheduledRunResult> Invoke(GetScheduledRunInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetScheduledRunResult>("oci:MeteringComputation/getScheduledRun:getScheduledRun", args ?? new GetScheduledRunInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetScheduledRunArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The scheduledRun unique OCID
        /// </summary>
        [Input("scheduledRunId", required: true)]
        public string ScheduledRunId { get; set; } = null!;

        public GetScheduledRunArgs()
        {
        }
        public static new GetScheduledRunArgs Empty => new GetScheduledRunArgs();
    }

    public sealed class GetScheduledRunInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The scheduledRun unique OCID
        /// </summary>
        [Input("scheduledRunId", required: true)]
        public Input<string> ScheduledRunId { get; set; } = null!;

        public GetScheduledRunInvokeArgs()
        {
        }
        public static new GetScheduledRunInvokeArgs Empty => new GetScheduledRunInvokeArgs();
    }


    [OutputType]
    public sealed class GetScheduledRunResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Additional details about scheduled run failure
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// The ocid representing unique shedule
        /// </summary>
        public readonly string ScheduleId;
        public readonly string ScheduledRunId;
        /// <summary>
        /// Specifies if the schedule job was run successfully or not.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The time when schedule started executing
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time when schedule finished executing
        /// </summary>
        public readonly string TimeFinished;

        [OutputConstructor]
        private GetScheduledRunResult(
            string id,

            string lifecycleDetails,

            string scheduleId,

            string scheduledRunId,

            string state,

            string timeCreated,

            string timeFinished)
        {
            Id = id;
            LifecycleDetails = lifecycleDetails;
            ScheduleId = scheduleId;
            ScheduledRunId = scheduledRunId;
            State = state;
            TimeCreated = timeCreated;
            TimeFinished = timeFinished;
        }
    }
}
