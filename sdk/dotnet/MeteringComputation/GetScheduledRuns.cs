// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.MeteringComputation
{
    public static class GetScheduledRuns
    {
        /// <summary>
        /// This data source provides the list of Scheduled Runs in Oracle Cloud Infrastructure Metering Computation service.
        /// 
        /// Returns schedule history list.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testScheduledRuns = Output.Create(Oci.MeteringComputation.GetScheduledRuns.InvokeAsync(new Oci.MeteringComputation.GetScheduledRunsArgs
        ///         {
        ///             ScheduleId = oci_metering_computation_schedule.Test_schedule.Id,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetScheduledRunsResult> InvokeAsync(GetScheduledRunsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetScheduledRunsResult>("oci:MeteringComputation/getScheduledRuns:getScheduledRuns", args ?? new GetScheduledRunsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Scheduled Runs in Oracle Cloud Infrastructure Metering Computation service.
        /// 
        /// Returns schedule history list.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testScheduledRuns = Output.Create(Oci.MeteringComputation.GetScheduledRuns.InvokeAsync(new Oci.MeteringComputation.GetScheduledRunsArgs
        ///         {
        ///             ScheduleId = oci_metering_computation_schedule.Test_schedule.Id,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetScheduledRunsResult> Invoke(GetScheduledRunsInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetScheduledRunsResult>("oci:MeteringComputation/getScheduledRuns:getScheduledRuns", args ?? new GetScheduledRunsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetScheduledRunsArgs : Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetScheduledRunsFilterArgs>? _filters;
        public List<Inputs.GetScheduledRunsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetScheduledRunsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The unique ID of a schedule.
        /// </summary>
        [Input("scheduleId", required: true)]
        public string ScheduleId { get; set; } = null!;

        public GetScheduledRunsArgs()
        {
        }
    }

    public sealed class GetScheduledRunsInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetScheduledRunsFilterInputArgs>? _filters;
        public InputList<Inputs.GetScheduledRunsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetScheduledRunsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The unique ID of a schedule.
        /// </summary>
        [Input("scheduleId", required: true)]
        public Input<string> ScheduleId { get; set; } = null!;

        public GetScheduledRunsInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetScheduledRunsResult
    {
        public readonly ImmutableArray<Outputs.GetScheduledRunsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The ocid representing unique shedule
        /// </summary>
        public readonly string ScheduleId;
        /// <summary>
        /// The list of scheduled_run_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetScheduledRunsScheduledRunCollectionResult> ScheduledRunCollections;

        [OutputConstructor]
        private GetScheduledRunsResult(
            ImmutableArray<Outputs.GetScheduledRunsFilterResult> filters,

            string id,

            string scheduleId,

            ImmutableArray<Outputs.GetScheduledRunsScheduledRunCollectionResult> scheduledRunCollections)
        {
            Filters = filters;
            Id = id;
            ScheduleId = scheduleId;
            ScheduledRunCollections = scheduledRunCollections;
        }
    }
}
