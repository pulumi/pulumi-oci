// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.MeteringComputation
{
    public static class GetUsageCarbonEmissionsConfig
    {
        /// <summary>
        /// This data source provides details about a specific Usage Carbon Emissions Config resource in Oracle Cloud Infrastructure Metering Computation service.
        /// 
        /// Returns the configuration list for the UI drop-down list of carbon emission console.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testUsageCarbonEmissionsConfig = Oci.MeteringComputation.GetUsageCarbonEmissionsConfig.Invoke(new()
        ///     {
        ///         TenantId = testTenant.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetUsageCarbonEmissionsConfigResult> InvokeAsync(GetUsageCarbonEmissionsConfigArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetUsageCarbonEmissionsConfigResult>("oci:MeteringComputation/getUsageCarbonEmissionsConfig:getUsageCarbonEmissionsConfig", args ?? new GetUsageCarbonEmissionsConfigArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Usage Carbon Emissions Config resource in Oracle Cloud Infrastructure Metering Computation service.
        /// 
        /// Returns the configuration list for the UI drop-down list of carbon emission console.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testUsageCarbonEmissionsConfig = Oci.MeteringComputation.GetUsageCarbonEmissionsConfig.Invoke(new()
        ///     {
        ///         TenantId = testTenant.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetUsageCarbonEmissionsConfigResult> Invoke(GetUsageCarbonEmissionsConfigInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetUsageCarbonEmissionsConfigResult>("oci:MeteringComputation/getUsageCarbonEmissionsConfig:getUsageCarbonEmissionsConfig", args ?? new GetUsageCarbonEmissionsConfigInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Usage Carbon Emissions Config resource in Oracle Cloud Infrastructure Metering Computation service.
        /// 
        /// Returns the configuration list for the UI drop-down list of carbon emission console.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testUsageCarbonEmissionsConfig = Oci.MeteringComputation.GetUsageCarbonEmissionsConfig.Invoke(new()
        ///     {
        ///         TenantId = testTenant.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetUsageCarbonEmissionsConfigResult> Invoke(GetUsageCarbonEmissionsConfigInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetUsageCarbonEmissionsConfigResult>("oci:MeteringComputation/getUsageCarbonEmissionsConfig:getUsageCarbonEmissionsConfig", args ?? new GetUsageCarbonEmissionsConfigInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetUsageCarbonEmissionsConfigArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// tenant id
        /// </summary>
        [Input("tenantId", required: true)]
        public string TenantId { get; set; } = null!;

        public GetUsageCarbonEmissionsConfigArgs()
        {
        }
        public static new GetUsageCarbonEmissionsConfigArgs Empty => new GetUsageCarbonEmissionsConfigArgs();
    }

    public sealed class GetUsageCarbonEmissionsConfigInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// tenant id
        /// </summary>
        [Input("tenantId", required: true)]
        public Input<string> TenantId { get; set; } = null!;

        public GetUsageCarbonEmissionsConfigInvokeArgs()
        {
        }
        public static new GetUsageCarbonEmissionsConfigInvokeArgs Empty => new GetUsageCarbonEmissionsConfigInvokeArgs();
    }


    [OutputType]
    public sealed class GetUsageCarbonEmissionsConfigResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of available configurations.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetUsageCarbonEmissionsConfigItemResult> Items;
        public readonly string TenantId;

        [OutputConstructor]
        private GetUsageCarbonEmissionsConfigResult(
            string id,

            ImmutableArray<Outputs.GetUsageCarbonEmissionsConfigItemResult> items,

            string tenantId)
        {
            Id = id;
            Items = items;
            TenantId = tenantId;
        }
    }
}
