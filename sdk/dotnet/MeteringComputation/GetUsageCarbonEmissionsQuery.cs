// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.MeteringComputation
{
    public static class GetUsageCarbonEmissionsQuery
    {
        /// <summary>
        /// This data source provides details about a specific Usage Carbon Emissions Query resource in Oracle Cloud Infrastructure Metering Computation service.
        /// 
        /// Returns the usage carbon emissions saved query.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testUsageCarbonEmissionsQuery = Oci.MeteringComputation.GetUsageCarbonEmissionsQuery.Invoke(new()
        ///     {
        ///         UsageCarbonEmissionsQueryId = testUsageCarbonEmissionsQueryOciMeteringComputationUsageCarbonEmissionsQuery.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetUsageCarbonEmissionsQueryResult> InvokeAsync(GetUsageCarbonEmissionsQueryArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetUsageCarbonEmissionsQueryResult>("oci:MeteringComputation/getUsageCarbonEmissionsQuery:getUsageCarbonEmissionsQuery", args ?? new GetUsageCarbonEmissionsQueryArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Usage Carbon Emissions Query resource in Oracle Cloud Infrastructure Metering Computation service.
        /// 
        /// Returns the usage carbon emissions saved query.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testUsageCarbonEmissionsQuery = Oci.MeteringComputation.GetUsageCarbonEmissionsQuery.Invoke(new()
        ///     {
        ///         UsageCarbonEmissionsQueryId = testUsageCarbonEmissionsQueryOciMeteringComputationUsageCarbonEmissionsQuery.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetUsageCarbonEmissionsQueryResult> Invoke(GetUsageCarbonEmissionsQueryInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetUsageCarbonEmissionsQueryResult>("oci:MeteringComputation/getUsageCarbonEmissionsQuery:getUsageCarbonEmissionsQuery", args ?? new GetUsageCarbonEmissionsQueryInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Usage Carbon Emissions Query resource in Oracle Cloud Infrastructure Metering Computation service.
        /// 
        /// Returns the usage carbon emissions saved query.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testUsageCarbonEmissionsQuery = Oci.MeteringComputation.GetUsageCarbonEmissionsQuery.Invoke(new()
        ///     {
        ///         UsageCarbonEmissionsQueryId = testUsageCarbonEmissionsQueryOciMeteringComputationUsageCarbonEmissionsQuery.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetUsageCarbonEmissionsQueryResult> Invoke(GetUsageCarbonEmissionsQueryInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetUsageCarbonEmissionsQueryResult>("oci:MeteringComputation/getUsageCarbonEmissionsQuery:getUsageCarbonEmissionsQuery", args ?? new GetUsageCarbonEmissionsQueryInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetUsageCarbonEmissionsQueryArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The query unique OCID.
        /// </summary>
        [Input("usageCarbonEmissionsQueryId", required: true)]
        public string UsageCarbonEmissionsQueryId { get; set; } = null!;

        public GetUsageCarbonEmissionsQueryArgs()
        {
        }
        public static new GetUsageCarbonEmissionsQueryArgs Empty => new GetUsageCarbonEmissionsQueryArgs();
    }

    public sealed class GetUsageCarbonEmissionsQueryInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The query unique OCID.
        /// </summary>
        [Input("usageCarbonEmissionsQueryId", required: true)]
        public Input<string> UsageCarbonEmissionsQueryId { get; set; } = null!;

        public GetUsageCarbonEmissionsQueryInvokeArgs()
        {
        }
        public static new GetUsageCarbonEmissionsQueryInvokeArgs Empty => new GetUsageCarbonEmissionsQueryInvokeArgs();
    }


    [OutputType]
    public sealed class GetUsageCarbonEmissionsQueryResult
    {
        /// <summary>
        /// The compartment OCID.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The query OCID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The common fields for queries.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetUsageCarbonEmissionsQueryQueryDefinitionResult> QueryDefinitions;
        public readonly string UsageCarbonEmissionsQueryId;

        [OutputConstructor]
        private GetUsageCarbonEmissionsQueryResult(
            string compartmentId,

            string id,

            ImmutableArray<Outputs.GetUsageCarbonEmissionsQueryQueryDefinitionResult> queryDefinitions,

            string usageCarbonEmissionsQueryId)
        {
            CompartmentId = compartmentId;
            Id = id;
            QueryDefinitions = queryDefinitions;
            UsageCarbonEmissionsQueryId = usageCarbonEmissionsQueryId;
        }
    }
}
