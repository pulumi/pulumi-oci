// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.MeteringComputation
{
    public static class GetUsageStatementEmailRecipientsGroups
    {
        /// <summary>
        /// This data source provides the list of Usage Statement Email Recipients Groups in Oracle Cloud Infrastructure Metering Computation service.
        /// 
        /// Return the saved usage statement email recipient group.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testUsageStatementEmailRecipientsGroups = Oci.MeteringComputation.GetUsageStatementEmailRecipientsGroups.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         SubscriptionId = testSubscription.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetUsageStatementEmailRecipientsGroupsResult> InvokeAsync(GetUsageStatementEmailRecipientsGroupsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetUsageStatementEmailRecipientsGroupsResult>("oci:MeteringComputation/getUsageStatementEmailRecipientsGroups:getUsageStatementEmailRecipientsGroups", args ?? new GetUsageStatementEmailRecipientsGroupsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Usage Statement Email Recipients Groups in Oracle Cloud Infrastructure Metering Computation service.
        /// 
        /// Return the saved usage statement email recipient group.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testUsageStatementEmailRecipientsGroups = Oci.MeteringComputation.GetUsageStatementEmailRecipientsGroups.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         SubscriptionId = testSubscription.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetUsageStatementEmailRecipientsGroupsResult> Invoke(GetUsageStatementEmailRecipientsGroupsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetUsageStatementEmailRecipientsGroupsResult>("oci:MeteringComputation/getUsageStatementEmailRecipientsGroups:getUsageStatementEmailRecipientsGroups", args ?? new GetUsageStatementEmailRecipientsGroupsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Usage Statement Email Recipients Groups in Oracle Cloud Infrastructure Metering Computation service.
        /// 
        /// Return the saved usage statement email recipient group.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testUsageStatementEmailRecipientsGroups = Oci.MeteringComputation.GetUsageStatementEmailRecipientsGroups.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         SubscriptionId = testSubscription.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetUsageStatementEmailRecipientsGroupsResult> Invoke(GetUsageStatementEmailRecipientsGroupsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetUsageStatementEmailRecipientsGroupsResult>("oci:MeteringComputation/getUsageStatementEmailRecipientsGroups:getUsageStatementEmailRecipientsGroups", args ?? new GetUsageStatementEmailRecipientsGroupsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetUsageStatementEmailRecipientsGroupsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The compartment ID in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetUsageStatementEmailRecipientsGroupsFilterArgs>? _filters;
        public List<Inputs.GetUsageStatementEmailRecipientsGroupsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetUsageStatementEmailRecipientsGroupsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The UsageStatement Subscription unique OCID.
        /// </summary>
        [Input("subscriptionId", required: true)]
        public string SubscriptionId { get; set; } = null!;

        public GetUsageStatementEmailRecipientsGroupsArgs()
        {
        }
        public static new GetUsageStatementEmailRecipientsGroupsArgs Empty => new GetUsageStatementEmailRecipientsGroupsArgs();
    }

    public sealed class GetUsageStatementEmailRecipientsGroupsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The compartment ID in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetUsageStatementEmailRecipientsGroupsFilterInputArgs>? _filters;
        public InputList<Inputs.GetUsageStatementEmailRecipientsGroupsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetUsageStatementEmailRecipientsGroupsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The UsageStatement Subscription unique OCID.
        /// </summary>
        [Input("subscriptionId", required: true)]
        public Input<string> SubscriptionId { get; set; } = null!;

        public GetUsageStatementEmailRecipientsGroupsInvokeArgs()
        {
        }
        public static new GetUsageStatementEmailRecipientsGroupsInvokeArgs Empty => new GetUsageStatementEmailRecipientsGroupsInvokeArgs();
    }


    [OutputType]
    public sealed class GetUsageStatementEmailRecipientsGroupsResult
    {
        /// <summary>
        /// The customer tenancy OCID.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The list of email_recipients_group_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetUsageStatementEmailRecipientsGroupsEmailRecipientsGroupCollectionResult> EmailRecipientsGroupCollections;
        public readonly ImmutableArray<Outputs.GetUsageStatementEmailRecipientsGroupsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string SubscriptionId;

        [OutputConstructor]
        private GetUsageStatementEmailRecipientsGroupsResult(
            string compartmentId,

            ImmutableArray<Outputs.GetUsageStatementEmailRecipientsGroupsEmailRecipientsGroupCollectionResult> emailRecipientsGroupCollections,

            ImmutableArray<Outputs.GetUsageStatementEmailRecipientsGroupsFilterResult> filters,

            string id,

            string subscriptionId)
        {
            CompartmentId = compartmentId;
            EmailRecipientsGroupCollections = emailRecipientsGroupCollections;
            Filters = filters;
            Id = id;
            SubscriptionId = subscriptionId;
        }
    }
}
