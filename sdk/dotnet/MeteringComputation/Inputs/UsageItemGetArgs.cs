// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.MeteringComputation.Inputs
{

    public sealed class UsageItemGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The availability domain of the usage.
        /// </summary>
        [Input("ad")]
        public Input<string>? Ad { get; set; }

        /// <summary>
        /// The compartment OCID.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// The compartment name.
        /// </summary>
        [Input("compartmentName")]
        public Input<string>? CompartmentName { get; set; }

        /// <summary>
        /// The compartment path, starting from root.
        /// </summary>
        [Input("compartmentPath")]
        public Input<string>? CompartmentPath { get; set; }

        /// <summary>
        /// The computed cost.
        /// </summary>
        [Input("computedAmount")]
        public Input<double>? ComputedAmount { get; set; }

        /// <summary>
        /// The usage number.
        /// </summary>
        [Input("computedQuantity")]
        public Input<double>? ComputedQuantity { get; set; }

        /// <summary>
        /// The price currency.
        /// </summary>
        [Input("currency")]
        public Input<string>? Currency { get; set; }

        /// <summary>
        /// The discretionary discount applied to the SKU.
        /// </summary>
        [Input("discount")]
        public Input<double>? Discount { get; set; }

        /// <summary>
        /// The forecasted data.
        /// </summary>
        [Input("isForecast")]
        public Input<bool>? IsForecast { get; set; }

        /// <summary>
        /// The SKU list rate (not discount).
        /// </summary>
        [Input("listRate")]
        public Input<double>? ListRate { get; set; }

        /// <summary>
        /// The overage usage.
        /// </summary>
        [Input("overage")]
        public Input<string>? Overage { get; set; }

        /// <summary>
        /// The SPM OverageFlag.
        /// </summary>
        [Input("overagesFlag")]
        public Input<string>? OveragesFlag { get; set; }

        /// <summary>
        /// Platform for the cost.
        /// </summary>
        [Input("platform")]
        public Input<string>? Platform { get; set; }

        /// <summary>
        /// The region of the usage.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The resource OCID that is incurring the cost.
        /// </summary>
        [Input("resourceId")]
        public Input<string>? ResourceId { get; set; }

        /// <summary>
        /// The resource name that is incurring the cost.
        /// </summary>
        [Input("resourceName")]
        public Input<string>? ResourceName { get; set; }

        /// <summary>
        /// The service name that is incurring the cost.
        /// </summary>
        [Input("service")]
        public Input<string>? Service { get; set; }

        /// <summary>
        /// The resource shape.
        /// </summary>
        [Input("shape")]
        public Input<string>? Shape { get; set; }

        /// <summary>
        /// The SKU friendly name.
        /// </summary>
        [Input("skuName")]
        public Input<string>? SkuName { get; set; }

        /// <summary>
        /// The SKU part number.
        /// </summary>
        [Input("skuPartNumber")]
        public Input<string>? SkuPartNumber { get; set; }

        /// <summary>
        /// The subscription ID.
        /// </summary>
        [Input("subscriptionId")]
        public Input<string>? SubscriptionId { get; set; }

        [Input("tags")]
        private InputList<Inputs.UsageItemTagGetArgs>? _tags;

        /// <summary>
        /// For grouping, a tag definition. For filtering, a definition and key.
        /// </summary>
        public InputList<Inputs.UsageItemTagGetArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.UsageItemTagGetArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// Tenant ID.
        /// </summary>
        [Input("tenantId")]
        public Input<string>? TenantId { get; set; }

        /// <summary>
        /// The tenancy name.
        /// </summary>
        [Input("tenantName")]
        public Input<string>? TenantName { get; set; }

        /// <summary>
        /// The usage end time.
        /// </summary>
        [Input("timeUsageEnded")]
        public Input<string>? TimeUsageEnded { get; set; }

        /// <summary>
        /// The usage start time.
        /// </summary>
        [Input("timeUsageStarted")]
        public Input<string>? TimeUsageStarted { get; set; }

        /// <summary>
        /// The usage unit.
        /// </summary>
        [Input("unit")]
        public Input<string>? Unit { get; set; }

        /// <summary>
        /// The price per unit.
        /// </summary>
        [Input("unitPrice")]
        public Input<double>? UnitPrice { get; set; }

        /// <summary>
        /// The resource size being metered.
        /// </summary>
        [Input("weight")]
        public Input<double>? Weight { get; set; }

        public UsageItemGetArgs()
        {
        }
    }
}
