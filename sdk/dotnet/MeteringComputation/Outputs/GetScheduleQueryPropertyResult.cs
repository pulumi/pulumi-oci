// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.MeteringComputation.Outputs
{

    [OutputType]
    public sealed class GetScheduleQueryPropertyResult
    {
        /// <summary>
        /// The depth level of the compartment.
        /// </summary>
        public readonly double? CompartmentDepth;
        /// <summary>
        /// Static or dynamic date range `dateRangeType`, which corresponds with type-specific characteristics.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetScheduleQueryPropertyDateRangeResult> DateRanges;
        /// <summary>
        /// The filter object for query usage.
        /// </summary>
        public readonly string? Filter;
        /// <summary>
        /// The usage granularity. DAILY - Daily data aggregation. MONTHLY - Monthly data aggregation. Allowed values are: DAILY MONTHLY
        /// </summary>
        public readonly string? Granularity;
        /// <summary>
        /// Aggregate the result by. For example: [ "tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName" ]
        /// </summary>
        public readonly ImmutableArray<string> GroupBies;
        /// <summary>
        /// GroupBy a specific tagKey. Provide the tagNamespace and tagKey in the tag object. Only supports one tag in the list. For example: [ { "namespace": "oracle", "key": "createdBy" ]
        /// </summary>
        public readonly ImmutableArray<Outputs.GetScheduleQueryPropertyGroupByTagResult> GroupByTags;
        /// <summary>
        /// Specifies whether aggregated by time. If isAggregateByTime is true, all usage or cost over the query time period will be added up.
        /// </summary>
        public readonly bool? IsAggregateByTime;
        /// <summary>
        /// The query usage type. COST by default if it is missing. Usage - Query the usage data. Cost - Query the cost/billing data. Allowed values are: USAGE COST USAGE_AND_COST
        /// </summary>
        public readonly string? QueryType;

        [OutputConstructor]
        private GetScheduleQueryPropertyResult(
            double? compartmentDepth,

            ImmutableArray<Outputs.GetScheduleQueryPropertyDateRangeResult> dateRanges,

            string? filter,

            string? granularity,

            ImmutableArray<string> groupBies,

            ImmutableArray<Outputs.GetScheduleQueryPropertyGroupByTagResult> groupByTags,

            bool? isAggregateByTime,

            string? queryType)
        {
            CompartmentDepth = compartmentDepth;
            DateRanges = dateRanges;
            Filter = filter;
            Granularity = granularity;
            GroupBies = groupBies;
            GroupByTags = groupByTags;
            IsAggregateByTime = isAggregateByTime;
            QueryType = queryType;
        }
    }
}
