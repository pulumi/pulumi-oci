// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.MeteringComputation.Outputs
{

    [OutputType]
    public sealed class GetScheduledRunsScheduledRunCollectionItemResult
    {
        /// <summary>
        /// The OCID representing a unique shedule run.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Additional details about the scheduled run.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// The schedule unique ID.
        /// </summary>
        public readonly string ScheduleId;
        /// <summary>
        /// Specifies whether or not the schedule job was successfully run.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The time the schedule started executing.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time the schedule finished executing.
        /// </summary>
        public readonly string TimeFinished;

        [OutputConstructor]
        private GetScheduledRunsScheduledRunCollectionItemResult(
            string id,

            string lifecycleDetails,

            string scheduleId,

            string state,

            string timeCreated,

            string timeFinished)
        {
            Id = id;
            LifecycleDetails = lifecycleDetails;
            ScheduleId = scheduleId;
            State = state;
            TimeCreated = timeCreated;
            TimeFinished = timeFinished;
        }
    }
}
