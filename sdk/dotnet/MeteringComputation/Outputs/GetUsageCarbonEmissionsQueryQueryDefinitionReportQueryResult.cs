// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.MeteringComputation.Outputs
{

    [OutputType]
    public sealed class GetUsageCarbonEmissionsQueryQueryDefinitionReportQueryResult
    {
        /// <summary>
        /// The compartment depth level.
        /// </summary>
        public readonly int CompartmentDepth;
        /// <summary>
        /// The user interface date range, for example, LAST_THREE_MONTHS. Overrides the timeUsageStarted and timeUsageEnded properties.
        /// </summary>
        public readonly string DateRangeName;
        /// <summary>
        /// Specifies the method used for emission calculation, such as POWER_BASED or SPEND_BASED
        /// </summary>
        public readonly string EmissionCalculationMethod;
        /// <summary>
        /// Specifies the type of emission, such as MARKET_BASED or LOCATION_BASED.
        /// </summary>
        public readonly string EmissionType;
        /// <summary>
        /// The carbon emission granularity. DAILY - Daily data aggregation. MONTHLY - Monthly data aggregation.
        /// </summary>
        public readonly string Granularity;
        /// <summary>
        /// Specifies what to aggregate the result by. For example: `["tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName"]`
        /// </summary>
        public readonly ImmutableArray<string> GroupBies;
        /// <summary>
        /// GroupBy a specific tagKey. Provide the tagNamespace and tagKey in the tag object. Only supports one tag in the list. For example: `[{"namespace":"oracle", "key":"createdBy"]`
        /// </summary>
        public readonly ImmutableArray<Outputs.GetUsageCarbonEmissionsQueryQueryDefinitionReportQueryGroupByTagResult> GroupByTags;
        /// <summary>
        /// Specifies whether aggregated by time. If isAggregateByTime is true, all usage or costs over the query time period are summed.
        /// </summary>
        public readonly bool IsAggregateByTime;
        /// <summary>
        /// Tenant ID.
        /// </summary>
        public readonly string TenantId;
        /// <summary>
        /// The usage end time.
        /// </summary>
        public readonly string TimeUsageEnded;
        /// <summary>
        /// The usage start time.
        /// </summary>
        public readonly string TimeUsageStarted;
        /// <summary>
        /// The filter object for query usage.
        /// </summary>
        public readonly string UsageCarbonEmissionsQueryFilter;

        [OutputConstructor]
        private GetUsageCarbonEmissionsQueryQueryDefinitionReportQueryResult(
            int compartmentDepth,

            string dateRangeName,

            string emissionCalculationMethod,

            string emissionType,

            string granularity,

            ImmutableArray<string> groupBies,

            ImmutableArray<Outputs.GetUsageCarbonEmissionsQueryQueryDefinitionReportQueryGroupByTagResult> groupByTags,

            bool isAggregateByTime,

            string tenantId,

            string timeUsageEnded,

            string timeUsageStarted,

            string usageCarbonEmissionsQueryFilter)
        {
            CompartmentDepth = compartmentDepth;
            DateRangeName = dateRangeName;
            EmissionCalculationMethod = emissionCalculationMethod;
            EmissionType = emissionType;
            Granularity = granularity;
            GroupBies = groupBies;
            GroupByTags = groupByTags;
            IsAggregateByTime = isAggregateByTime;
            TenantId = tenantId;
            TimeUsageEnded = timeUsageEnded;
            TimeUsageStarted = timeUsageStarted;
            UsageCarbonEmissionsQueryFilter = usageCarbonEmissionsQueryFilter;
        }
    }
}
