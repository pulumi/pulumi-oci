// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.MeteringComputation.Outputs
{

    [OutputType]
    public sealed class UsageCarbonEmissionsQueryQueryDefinitionReportQuery
    {
        /// <summary>
        /// (Updatable) The compartment depth level.
        /// </summary>
        public readonly int? CompartmentDepth;
        /// <summary>
        /// (Updatable) The UI date range, for example, LAST_THREE_MONTHS. It will override timeUsageStarted and timeUsageEnded properties.
        /// </summary>
        public readonly string? DateRangeName;
        /// <summary>
        /// (Updatable) Specifies what to aggregate the result by. For example: `["tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName"]`
        /// </summary>
        public readonly ImmutableArray<string> GroupBies;
        /// <summary>
        /// (Updatable) GroupBy a specific tagKey. Provide the tagNamespace and tagKey in the tag object. Only supports one tag in the list. For example: `[{"namespace":"oracle", "key":"createdBy"]`
        /// </summary>
        public readonly ImmutableArray<Outputs.UsageCarbonEmissionsQueryQueryDefinitionReportQueryGroupByTag> GroupByTags;
        /// <summary>
        /// (Updatable) Specifies whether aggregated by time. If isAggregateByTime is true, all usage or cost over the query time period will be added up.
        /// </summary>
        public readonly bool? IsAggregateByTime;
        /// <summary>
        /// (Updatable) Tenant ID.
        /// </summary>
        public readonly string TenantId;
        /// <summary>
        /// (Updatable) The usage end time.
        /// </summary>
        public readonly string? TimeUsageEnded;
        /// <summary>
        /// (Updatable) The usage start time.
        /// </summary>
        public readonly string? TimeUsageStarted;
        /// <summary>
        /// (Updatable) The filter object for query usage.
        /// </summary>
        public readonly string? UsageCarbonEmissionsQueryFilter;

        [OutputConstructor]
        private UsageCarbonEmissionsQueryQueryDefinitionReportQuery(
            int? compartmentDepth,

            string? dateRangeName,

            ImmutableArray<string> groupBies,

            ImmutableArray<Outputs.UsageCarbonEmissionsQueryQueryDefinitionReportQueryGroupByTag> groupByTags,

            bool? isAggregateByTime,

            string tenantId,

            string? timeUsageEnded,

            string? timeUsageStarted,

            string? usageCarbonEmissionsQueryFilter)
        {
            CompartmentDepth = compartmentDepth;
            DateRangeName = dateRangeName;
            GroupBies = groupBies;
            GroupByTags = groupByTags;
            IsAggregateByTime = isAggregateByTime;
            TenantId = tenantId;
            TimeUsageEnded = timeUsageEnded;
            TimeUsageStarted = timeUsageStarted;
            UsageCarbonEmissionsQueryFilter = usageCarbonEmissionsQueryFilter;
        }
    }
}
