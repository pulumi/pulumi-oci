// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.MeteringComputation
{
    /// <summary>
    /// This resource provides the Schedule resource in Oracle Cloud Infrastructure Metering Computation service.
    /// 
    /// Returns the created schedule.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var testSchedule = new Oci.MeteringComputation.Schedule("testSchedule", new Oci.MeteringComputation.ScheduleArgs
    ///         {
    ///             CompartmentId = @var.Compartment_id,
    ///             QueryProperties = new Oci.MeteringComputation.Inputs.ScheduleQueryPropertiesArgs
    ///             {
    ///                 DateRange = new Oci.MeteringComputation.Inputs.ScheduleQueryPropertiesDateRangeArgs
    ///                 {
    ///                     DateRangeType = @var.Schedule_query_properties_date_range_date_range_type,
    ///                     DynamicDateRangeType = @var.Schedule_query_properties_date_range_dynamic_date_range_type,
    ///                     TimeUsageEnded = @var.Schedule_query_properties_date_range_time_usage_ended,
    ///                     TimeUsageStarted = @var.Schedule_query_properties_date_range_time_usage_started,
    ///                 },
    ///                 Granularity = @var.Schedule_query_properties_granularity,
    ///                 CompartmentDepth = @var.Schedule_query_properties_compartment_depth,
    ///                 Filter = @var.Schedule_query_properties_filter,
    ///                 GroupBies = @var.Schedule_query_properties_group_by,
    ///                 GroupByTags = 
    ///                 {
    ///                     new Oci.MeteringComputation.Inputs.ScheduleQueryPropertiesGroupByTagArgs
    ///                     {
    ///                         Key = @var.Schedule_query_properties_group_by_tag_key,
    ///                         Namespace = @var.Schedule_query_properties_group_by_tag_namespace,
    ///                         Value = @var.Schedule_query_properties_group_by_tag_value,
    ///                     },
    ///                 },
    ///                 IsAggregateByTime = @var.Schedule_query_properties_is_aggregate_by_time,
    ///                 QueryType = @var.Schedule_query_properties_query_type,
    ///             },
    ///             ResultLocation = new Oci.MeteringComputation.Inputs.ScheduleResultLocationArgs
    ///             {
    ///                 Bucket = @var.Schedule_result_location_bucket,
    ///                 LocationType = @var.Schedule_result_location_location_type,
    ///                 Namespace = @var.Schedule_result_location_namespace,
    ///                 Region = @var.Schedule_result_location_region,
    ///             },
    ///             ScheduleRecurrences = @var.Schedule_schedule_recurrences,
    ///             TimeScheduled = @var.Schedule_time_scheduled,
    ///             DefinedTags = 
    ///             {
    ///                 { "foo-namespace.bar-key", "value" },
    ///             },
    ///             FreeformTags = 
    ///             {
    ///                 { "bar-key", "value" },
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// Schedules can be imported using the `id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import oci:MeteringComputation/schedule:Schedule test_schedule "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:MeteringComputation/schedule:Schedule")]
    public partial class Schedule : Pulumi.CustomResource
    {
        /// <summary>
        /// The tenancy of the customer
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, object>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, object>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// The unique name of the schedule created by the user
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The query properties.
        /// </summary>
        [Output("queryProperties")]
        public Output<Outputs.ScheduleQueryProperties> QueryProperties { get; private set; } = null!;

        /// <summary>
        /// The location where usage/cost CSVs will be uploaded defined by `locationType`, which corresponds with type-specific characteristics.
        /// </summary>
        [Output("resultLocation")]
        public Output<Outputs.ScheduleResultLocation> ResultLocation { get; private set; } = null!;

        /// <summary>
        /// In x-obmcs-recurring-time format shown here: https://datatracker.ietf.org/doc/html/rfc5545#section-3.3.10 Describes the frequency of when the schedule will be run
        /// </summary>
        [Output("scheduleRecurrences")]
        public Output<string> ScheduleRecurrences { get; private set; } = null!;

        /// <summary>
        /// The lifecycle state of the schedule
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        [Output("systemTags")]
        public Output<ImmutableDictionary<string, object>> SystemTags { get; private set; } = null!;

        /// <summary>
        /// The date and time of when the schedule was created
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The date and time of the first time job execution
        /// </summary>
        [Output("timeScheduled")]
        public Output<string> TimeScheduled { get; private set; } = null!;


        /// <summary>
        /// Create a Schedule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Schedule(string name, ScheduleArgs args, CustomResourceOptions? options = null)
            : base("oci:MeteringComputation/schedule:Schedule", name, args ?? new ScheduleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Schedule(string name, Input<string> id, ScheduleState? state = null, CustomResourceOptions? options = null)
            : base("oci:MeteringComputation/schedule:Schedule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Schedule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Schedule Get(string name, Input<string> id, ScheduleState? state = null, CustomResourceOptions? options = null)
        {
            return new Schedule(name, id, state, options);
        }
    }

    public sealed class ScheduleArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The tenancy of the customer
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// The unique name of the schedule created by the user
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The query properties.
        /// </summary>
        [Input("queryProperties", required: true)]
        public Input<Inputs.ScheduleQueryPropertiesArgs> QueryProperties { get; set; } = null!;

        /// <summary>
        /// The location where usage/cost CSVs will be uploaded defined by `locationType`, which corresponds with type-specific characteristics.
        /// </summary>
        [Input("resultLocation", required: true)]
        public Input<Inputs.ScheduleResultLocationArgs> ResultLocation { get; set; } = null!;

        /// <summary>
        /// In x-obmcs-recurring-time format shown here: https://datatracker.ietf.org/doc/html/rfc5545#section-3.3.10 Describes the frequency of when the schedule will be run
        /// </summary>
        [Input("scheduleRecurrences", required: true)]
        public Input<string> ScheduleRecurrences { get; set; } = null!;

        /// <summary>
        /// The date and time of the first time job execution
        /// </summary>
        [Input("timeScheduled", required: true)]
        public Input<string> TimeScheduled { get; set; } = null!;

        public ScheduleArgs()
        {
        }
    }

    public sealed class ScheduleState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The tenancy of the customer
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// The unique name of the schedule created by the user
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The query properties.
        /// </summary>
        [Input("queryProperties")]
        public Input<Inputs.ScheduleQueryPropertiesGetArgs>? QueryProperties { get; set; }

        /// <summary>
        /// The location where usage/cost CSVs will be uploaded defined by `locationType`, which corresponds with type-specific characteristics.
        /// </summary>
        [Input("resultLocation")]
        public Input<Inputs.ScheduleResultLocationGetArgs>? ResultLocation { get; set; }

        /// <summary>
        /// In x-obmcs-recurring-time format shown here: https://datatracker.ietf.org/doc/html/rfc5545#section-3.3.10 Describes the frequency of when the schedule will be run
        /// </summary>
        [Input("scheduleRecurrences")]
        public Input<string>? ScheduleRecurrences { get; set; }

        /// <summary>
        /// The lifecycle state of the schedule
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("systemTags")]
        private InputMap<object>? _systemTags;

        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public InputMap<object> SystemTags
        {
            get => _systemTags ?? (_systemTags = new InputMap<object>());
            set => _systemTags = value;
        }

        /// <summary>
        /// The date and time of when the schedule was created
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The date and time of the first time job execution
        /// </summary>
        [Input("timeScheduled")]
        public Input<string>? TimeScheduled { get; set; }

        public ScheduleState()
        {
        }
    }
}
