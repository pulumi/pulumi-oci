// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.MeteringComputation
{
    /// <summary>
    /// This resource provides the Usage Statement Email Recipients Group resource in Oracle Cloud Infrastructure Metering Computation service.
    /// 
    /// Add a list of email recipients that can receive usage statements for the subscription.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testUsageStatementEmailRecipientsGroup = new Oci.MeteringComputation.UsageStatementEmailRecipientsGroup("test_usage_statement_email_recipients_group", new()
    ///     {
    ///         CompartmentId = compartmentId,
    ///         RecipientsLists = new[]
    ///         {
    ///             new Oci.MeteringComputation.Inputs.UsageStatementEmailRecipientsGroupRecipientsListArgs
    ///             {
    ///                 EmailId = testEmail.Id,
    ///                 State = usageStatementEmailRecipientsGroupRecipientsListState,
    ///                 FirstName = usageStatementEmailRecipientsGroupRecipientsListFirstName,
    ///                 LastName = usageStatementEmailRecipientsGroupRecipientsListLastName,
    ///             },
    ///         },
    ///         SubscriptionId = testSubscription.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// UsageStatementEmailRecipientsGroups can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:MeteringComputation/usageStatementEmailRecipientsGroup:UsageStatementEmailRecipientsGroup test_usage_statement_email_recipients_group "usageStatements/{subscriptionId}/emailRecipientsGroups/{emailRecipientsGroupId}/compartmentId/{compartmentId}"
    /// ```
    /// </summary>
    [OciResourceType("oci:MeteringComputation/usageStatementEmailRecipientsGroup:UsageStatementEmailRecipientsGroup")]
    public partial class UsageStatementEmailRecipientsGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) The customer tenancy.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        [Output("emailRecipientsGroupId")]
        public Output<string> EmailRecipientsGroupId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The list of recipient will receive the usage statement email.
        /// </summary>
        [Output("recipientsLists")]
        public Output<ImmutableArray<Outputs.UsageStatementEmailRecipientsGroupRecipientsList>> RecipientsLists { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The email recipient lifecycle state.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The UsageStatement Subscription unique OCID.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("subscriptionId")]
        public Output<string> SubscriptionId { get; private set; } = null!;


        /// <summary>
        /// Create a UsageStatementEmailRecipientsGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public UsageStatementEmailRecipientsGroup(string name, UsageStatementEmailRecipientsGroupArgs args, CustomResourceOptions? options = null)
            : base("oci:MeteringComputation/usageStatementEmailRecipientsGroup:UsageStatementEmailRecipientsGroup", name, args ?? new UsageStatementEmailRecipientsGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private UsageStatementEmailRecipientsGroup(string name, Input<string> id, UsageStatementEmailRecipientsGroupState? state = null, CustomResourceOptions? options = null)
            : base("oci:MeteringComputation/usageStatementEmailRecipientsGroup:UsageStatementEmailRecipientsGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing UsageStatementEmailRecipientsGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static UsageStatementEmailRecipientsGroup Get(string name, Input<string> id, UsageStatementEmailRecipientsGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new UsageStatementEmailRecipientsGroup(name, id, state, options);
        }
    }

    public sealed class UsageStatementEmailRecipientsGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The customer tenancy.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("emailRecipientsGroupId")]
        public Input<string>? EmailRecipientsGroupId { get; set; }

        [Input("recipientsLists", required: true)]
        private InputList<Inputs.UsageStatementEmailRecipientsGroupRecipientsListArgs>? _recipientsLists;

        /// <summary>
        /// (Updatable) The list of recipient will receive the usage statement email.
        /// </summary>
        public InputList<Inputs.UsageStatementEmailRecipientsGroupRecipientsListArgs> RecipientsLists
        {
            get => _recipientsLists ?? (_recipientsLists = new InputList<Inputs.UsageStatementEmailRecipientsGroupRecipientsListArgs>());
            set => _recipientsLists = value;
        }

        /// <summary>
        /// The UsageStatement Subscription unique OCID.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("subscriptionId", required: true)]
        public Input<string> SubscriptionId { get; set; } = null!;

        public UsageStatementEmailRecipientsGroupArgs()
        {
        }
        public static new UsageStatementEmailRecipientsGroupArgs Empty => new UsageStatementEmailRecipientsGroupArgs();
    }

    public sealed class UsageStatementEmailRecipientsGroupState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The customer tenancy.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("emailRecipientsGroupId")]
        public Input<string>? EmailRecipientsGroupId { get; set; }

        [Input("recipientsLists")]
        private InputList<Inputs.UsageStatementEmailRecipientsGroupRecipientsListGetArgs>? _recipientsLists;

        /// <summary>
        /// (Updatable) The list of recipient will receive the usage statement email.
        /// </summary>
        public InputList<Inputs.UsageStatementEmailRecipientsGroupRecipientsListGetArgs> RecipientsLists
        {
            get => _recipientsLists ?? (_recipientsLists = new InputList<Inputs.UsageStatementEmailRecipientsGroupRecipientsListGetArgs>());
            set => _recipientsLists = value;
        }

        /// <summary>
        /// (Updatable) The email recipient lifecycle state.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The UsageStatement Subscription unique OCID.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("subscriptionId")]
        public Input<string>? SubscriptionId { get; set; }

        public UsageStatementEmailRecipientsGroupState()
        {
        }
        public static new UsageStatementEmailRecipientsGroupState Empty => new UsageStatementEmailRecipientsGroupState();
    }
}
