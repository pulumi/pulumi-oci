// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Monitoring
{
    public static class GetAlarm
    {
        /// <summary>
        /// This data source provides details about a specific Alarm resource in Oracle Cloud Infrastructure Monitoring service.
        /// 
        /// Gets the specified alarm.
        /// For more information, see
        /// [Getting an Alarm](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Tasks/get-alarm.htm).
        /// For important limits information, see
        /// [Limits on Monitoring](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Concepts/monitoringoverview.htm#limits).
        /// 
        /// This call is subject to a Monitoring limit that applies to the total number of requests across all alarm operations.
        /// Monitoring might throttle this call to reject an otherwise valid request when the total rate of alarm operations exceeds 10 requests,
        /// or transactions, per second (TPS) for a given tenancy.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAlarm = Oci.Monitoring.GetAlarm.Invoke(new()
        ///     {
        ///         AlarmId = testAlarmOciMonitoringAlarm.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetAlarmResult> InvokeAsync(GetAlarmArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAlarmResult>("oci:Monitoring/getAlarm:getAlarm", args ?? new GetAlarmArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Alarm resource in Oracle Cloud Infrastructure Monitoring service.
        /// 
        /// Gets the specified alarm.
        /// For more information, see
        /// [Getting an Alarm](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Tasks/get-alarm.htm).
        /// For important limits information, see
        /// [Limits on Monitoring](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Concepts/monitoringoverview.htm#limits).
        /// 
        /// This call is subject to a Monitoring limit that applies to the total number of requests across all alarm operations.
        /// Monitoring might throttle this call to reject an otherwise valid request when the total rate of alarm operations exceeds 10 requests,
        /// or transactions, per second (TPS) for a given tenancy.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAlarm = Oci.Monitoring.GetAlarm.Invoke(new()
        ///     {
        ///         AlarmId = testAlarmOciMonitoringAlarm.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAlarmResult> Invoke(GetAlarmInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAlarmResult>("oci:Monitoring/getAlarm:getAlarm", args ?? new GetAlarmInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Alarm resource in Oracle Cloud Infrastructure Monitoring service.
        /// 
        /// Gets the specified alarm.
        /// For more information, see
        /// [Getting an Alarm](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Tasks/get-alarm.htm).
        /// For important limits information, see
        /// [Limits on Monitoring](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Concepts/monitoringoverview.htm#limits).
        /// 
        /// This call is subject to a Monitoring limit that applies to the total number of requests across all alarm operations.
        /// Monitoring might throttle this call to reject an otherwise valid request when the total rate of alarm operations exceeds 10 requests,
        /// or transactions, per second (TPS) for a given tenancy.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAlarm = Oci.Monitoring.GetAlarm.Invoke(new()
        ///     {
        ///         AlarmId = testAlarmOciMonitoringAlarm.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAlarmResult> Invoke(GetAlarmInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAlarmResult>("oci:Monitoring/getAlarm:getAlarm", args ?? new GetAlarmInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAlarmArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of an alarm.
        /// </summary>
        [Input("alarmId", required: true)]
        public string AlarmId { get; set; } = null!;

        public GetAlarmArgs()
        {
        }
        public static new GetAlarmArgs Empty => new GetAlarmArgs();
    }

    public sealed class GetAlarmInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of an alarm.
        /// </summary>
        [Input("alarmId", required: true)]
        public Input<string> AlarmId { get; set; } = null!;

        public GetAlarmInvokeArgs()
        {
        }
        public static new GetAlarmInvokeArgs Empty => new GetAlarmInvokeArgs();
    }


    [OutputType]
    public sealed class GetAlarmResult
    {
        public readonly string AlarmId;
        /// <summary>
        /// Customizable alarm summary (`alarmSummary` [alarm message parameter](https://docs.cloud.oracle.com/iaas/Content/Monitoring/alarm-message-format.htm)). Optionally include [dynamic variables](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Tasks/update-alarm-dynamic-variables.htm). The alarm summary appears within the body of the alarm message and in responses to  [ListAlarmStatus](https://docs.cloud.oracle.com/iaas/api/#/en/monitoring/latest/AlarmStatusSummary/ListAlarmsStatus)  [GetAlarmHistory](https://docs.cloud.oracle.com/iaas/api/#/en/monitoring/latest/AlarmHistoryCollection/GetAlarmHistory) and [RetrieveDimensionStates](https://docs.cloud.oracle.com/iaas/api/#/en/monitoring/latest/AlarmDimensionStatesCollection/RetrieveDimensionStates).
        /// </summary>
        public readonly string AlarmSummary;
        /// <summary>
        /// The human-readable content of the delivered alarm notification. Optionally include [dynamic variables](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Tasks/update-alarm-dynamic-variables.htm). Oracle recommends providing guidance to operators for resolving the alarm condition. Consider adding links to standard runbook practices. Avoid entering confidential information.  Example: `High CPU usage alert. Follow runbook instructions for resolution.`
        /// </summary>
        public readonly string Body;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the alarm.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// A list of destinations for alarm notifications. Each destination is represented by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a related resource, such as a [topic](https://docs.cloud.oracle.com/iaas/api/#/en/notification/latest/NotificationTopic). Supported destination services: Notifications, Streaming. Limit: One destination per supported destination service.
        /// </summary>
        public readonly ImmutableArray<string> Destinations;
        /// <summary>
        /// A user-friendly name for the alarm. It does not have to be unique, and it's changeable.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Customizable slack period to wait for metric ingestion before evaluating the alarm. Specify a string in ISO 8601 format (`PT10M` for ten minutes or `PT1H` for one hour). Minimum: PT3M. Maximum: PT2H. Default: PT3M. For more information about the slack period, see [About the Internal Reset Period](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Concepts/monitoringoverview.htm#reset).
        /// </summary>
        public readonly string EvaluationSlackDuration;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the alarm.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Whether the alarm is enabled.  Example: `True`
        /// </summary>
        public readonly bool IsEnabled;
        /// <summary>
        /// Whether the alarm sends a separate message for each metric stream. See [Creating an Alarm That Splits Messages by Metric Stream](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Tasks/create-alarm-split.htm). Example: `True`
        /// </summary>
        public readonly bool IsNotificationsPerMetricDimensionEnabled;
        /// <summary>
        /// The format to use for alarm notifications. The formats are:
        /// * `RAW` - Raw JSON blob. Default value. When the `Destinations` attribute specifies `Streaming`, all alarm notifications use this format.
        /// * `PRETTY_JSON`: JSON with new lines and indents. Available when the `Destinations` attribute specifies `Notifications` only.
        /// * `ONS_OPTIMIZED`: Simplified, user-friendly layout. Available when the `Destinations` attribute specifies `Notifications` only. Applies to Email subscription types only.
        /// </summary>
        public readonly string MessageFormat;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the metric being evaluated by the alarm.
        /// </summary>
        public readonly string MetricCompartmentId;
        /// <summary>
        /// When true, the alarm evaluates metrics from all compartments and subcompartments. The parameter can only be set to true when metricCompartmentId is the tenancy OCID (the tenancy is the root compartment). A true value requires the user to have tenancy-level permissions. If this requirement is not met, then the call is rejected. When false, the alarm evaluates metrics from only the compartment specified in metricCompartmentId. Default is false.  Example: `True`
        /// </summary>
        public readonly bool MetricCompartmentIdInSubtree;
        /// <summary>
        /// The source service or application emitting the metric that is evaluated by the alarm.  Example: `OciComputeagent`
        /// </summary>
        public readonly string Namespace;
        /// <summary>
        /// Customizable notification title (`Title` [alarm message parameter](https://docs.cloud.oracle.com/iaas/Content/Monitoring/alarm-message-format.htm)). Optionally include [dynamic variables](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Tasks/update-alarm-dynamic-variables.htm). The notification title appears as the subject line in a formatted email message and as the title in a Slack message.
        /// </summary>
        public readonly string NotificationTitle;
        /// <summary>
        /// The version of the alarm notification to be delivered. Allowed value: `1.X` The value must start with a number (up to four digits), followed by a period and an uppercase X.
        /// </summary>
        public readonly string NotificationVersion;
        /// <summary>
        /// A set of overrides that control evaluations of the alarm.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAlarmOverrideResult> Overrides;
        /// <summary>
        /// The period of time that the condition defined in the alarm must persist before the alarm state changes from "OK" to "FIRING". For example, a value of 5 minutes means that the alarm must persist in breaching the condition for five minutes before the alarm updates its state to "FIRING".
        /// </summary>
        public readonly string PendingDuration;
        /// <summary>
        /// The Monitoring Query Language (MQL) expression to evaluate for the alarm. The Alarms feature of the Monitoring service interprets results for each returned time series as Boolean values, where zero represents false and a non-zero value represents true. A true value means that the trigger rule condition has been met. The query must specify a metric, statistic, interval, and trigger rule (threshold or absence). Supported values for interval depend on the specified time range. More interval values are supported for smaller time ranges. You can optionally specify dimensions and grouping functions. Also, you can customize the  [absence detection period](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Tasks/create-edit-alarm-query-absence-detection-period.htm). Supported grouping functions: `grouping()`, `groupBy()`. For information about writing MQL expressions, see [Editing the MQL Expression for a Query](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Tasks/query-metric-mql.htm). For details about MQL, see [Monitoring Query Language (MQL) Reference](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Reference/mql.htm). For available dimensions, review the metric definition for the supported service. See [Supported Services](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Concepts/monitoringoverview.htm#SupportedServices).
        /// </summary>
        public readonly string Query;
        /// <summary>
        /// The frequency for re-submitting alarm notifications, if the alarm keeps firing without interruption. Format defined by ISO 8601. For example, `PT4H` indicates four hours. Minimum: PT1M. Maximum: P30D.
        /// </summary>
        public readonly string RepeatNotificationDuration;
        /// <summary>
        /// The time between calculated aggregation windows for the alarm. Supported value: `1m`
        /// </summary>
        public readonly string Resolution;
        /// <summary>
        /// Resource group that you want to match. A null value returns only metric data that has no resource groups. The specified resource group must exist in the definition of the posted metric. Only one resource group can be applied per metric. A valid resourceGroup value starts with an alphabetical character and includes only alphanumeric characters, periods (.), underscores (_), hyphens (-), and dollar signs ($).  Example: `frontend-fleet`
        /// </summary>
        public readonly string ResourceGroup;
        /// <summary>
        /// Identifier of the alarm's base values for alarm evaluation, for use when the alarm contains overrides.  Default value is `BASE`. For information about alarm overrides, see [AlarmOverride](https://docs.cloud.oracle.com/iaas/api/#/en/monitoring/latest/datatypes/AlarmOverride).
        /// </summary>
        public readonly string RuleName;
        /// <summary>
        /// The perceived type of response required when the alarm is in the "FIRING" state.  Example: `CRITICAL`
        /// </summary>
        public readonly string Severity;
        /// <summary>
        /// The current lifecycle state of the alarm.  Example: `DELETED`
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The configuration details for suppressing an alarm.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAlarmSuppressionResult> Suppressions;
        /// <summary>
        /// The date and time the alarm was created. Format defined by RFC3339.  Example: `2023-02-01T01:02:29.600Z`
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The date and time the alarm was last updated. Format defined by RFC3339.  Example: `2023-02-03T01:02:29.600Z`
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetAlarmResult(
            string alarmId,

            string alarmSummary,

            string body,

            string compartmentId,

            ImmutableDictionary<string, string> definedTags,

            ImmutableArray<string> destinations,

            string displayName,

            string evaluationSlackDuration,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            bool isEnabled,

            bool isNotificationsPerMetricDimensionEnabled,

            string messageFormat,

            string metricCompartmentId,

            bool metricCompartmentIdInSubtree,

            string @namespace,

            string notificationTitle,

            string notificationVersion,

            ImmutableArray<Outputs.GetAlarmOverrideResult> overrides,

            string pendingDuration,

            string query,

            string repeatNotificationDuration,

            string resolution,

            string resourceGroup,

            string ruleName,

            string severity,

            string state,

            ImmutableArray<Outputs.GetAlarmSuppressionResult> suppressions,

            string timeCreated,

            string timeUpdated)
        {
            AlarmId = alarmId;
            AlarmSummary = alarmSummary;
            Body = body;
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            Destinations = destinations;
            DisplayName = displayName;
            EvaluationSlackDuration = evaluationSlackDuration;
            FreeformTags = freeformTags;
            Id = id;
            IsEnabled = isEnabled;
            IsNotificationsPerMetricDimensionEnabled = isNotificationsPerMetricDimensionEnabled;
            MessageFormat = messageFormat;
            MetricCompartmentId = metricCompartmentId;
            MetricCompartmentIdInSubtree = metricCompartmentIdInSubtree;
            Namespace = @namespace;
            NotificationTitle = notificationTitle;
            NotificationVersion = notificationVersion;
            Overrides = overrides;
            PendingDuration = pendingDuration;
            Query = query;
            RepeatNotificationDuration = repeatNotificationDuration;
            Resolution = resolution;
            ResourceGroup = resourceGroup;
            RuleName = ruleName;
            Severity = severity;
            State = state;
            Suppressions = suppressions;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
