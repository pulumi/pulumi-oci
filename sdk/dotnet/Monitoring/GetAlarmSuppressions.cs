// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Monitoring
{
    public static class GetAlarmSuppressions
    {
        /// <summary>
        /// This data source provides the list of Alarm Suppressions in Oracle Cloud Infrastructure Monitoring service.
        /// 
        /// Lists alarm suppressions for the specified alarm. For more information, see
        /// [Listing Alarm Suppressions](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Tasks/list-alarm-suppression.htm).
        /// 
        /// For important limits information, see
        /// [Limits on Monitoring](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Concepts/monitoringoverview.htm#limits).
        /// 
        /// This call is subject to a Monitoring limit that applies to the total number of requests across all alarm operations.
        /// Monitoring might throttle this call to reject an otherwise valid request when the total rate of alarm operations exceeds 10 requests,
        /// or transactions, per second (TPS) for a given tenancy.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAlarmSuppressions = Oci.Monitoring.GetAlarmSuppressions.Invoke(new()
        ///     {
        ///         AlarmId = testAlarm.Id,
        ///         CompartmentId = compartmentId,
        ///         CompartmentIdInSubtree = alarmSuppressionCompartmentIdInSubtree,
        ///         DisplayName = alarmSuppressionDisplayName,
        ///         IsAllSuppressions = alarmSuppressionIsAllSuppressions,
        ///         Level = alarmSuppressionLevel,
        ///         State = alarmSuppressionState,
        ///         TargetType = alarmSuppressionTargetType,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetAlarmSuppressionsResult> InvokeAsync(GetAlarmSuppressionsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAlarmSuppressionsResult>("oci:Monitoring/getAlarmSuppressions:getAlarmSuppressions", args ?? new GetAlarmSuppressionsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Alarm Suppressions in Oracle Cloud Infrastructure Monitoring service.
        /// 
        /// Lists alarm suppressions for the specified alarm. For more information, see
        /// [Listing Alarm Suppressions](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Tasks/list-alarm-suppression.htm).
        /// 
        /// For important limits information, see
        /// [Limits on Monitoring](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Concepts/monitoringoverview.htm#limits).
        /// 
        /// This call is subject to a Monitoring limit that applies to the total number of requests across all alarm operations.
        /// Monitoring might throttle this call to reject an otherwise valid request when the total rate of alarm operations exceeds 10 requests,
        /// or transactions, per second (TPS) for a given tenancy.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAlarmSuppressions = Oci.Monitoring.GetAlarmSuppressions.Invoke(new()
        ///     {
        ///         AlarmId = testAlarm.Id,
        ///         CompartmentId = compartmentId,
        ///         CompartmentIdInSubtree = alarmSuppressionCompartmentIdInSubtree,
        ///         DisplayName = alarmSuppressionDisplayName,
        ///         IsAllSuppressions = alarmSuppressionIsAllSuppressions,
        ///         Level = alarmSuppressionLevel,
        ///         State = alarmSuppressionState,
        ///         TargetType = alarmSuppressionTargetType,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAlarmSuppressionsResult> Invoke(GetAlarmSuppressionsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAlarmSuppressionsResult>("oci:Monitoring/getAlarmSuppressions:getAlarmSuppressions", args ?? new GetAlarmSuppressionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAlarmSuppressionsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the alarm that is the target of the alarm suppression.
        /// </summary>
        [Input("alarmId")]
        public string? AlarmId { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for searching.  Use the tenancy OCID to search in the root compartment.
        /// 
        /// If targetType is not specified, searches all suppressions defined under the compartment.  If targetType is `COMPARTMENT`, searches suppressions in the specified compartment only.
        /// 
        /// Example: `ocid1.compartment.oc1..exampleuniqueID`
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        /// <summary>
        /// When true, returns resources from all compartments and subcompartments. The parameter can only be set to true when compartmentId is the tenancy OCID (the tenancy is the root compartment). A true value requires the user to have tenancy-level permissions. If this requirement is not met, then the call is rejected. When false, returns resources from only the compartment specified in compartmentId. Default is false.
        /// </summary>
        [Input("compartmentIdInSubtree")]
        public bool? CompartmentIdInSubtree { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given display name exactly. Use this filter to list an alarm suppression by name. Alternatively, when you know the alarm suppression OCID, use the GetAlarmSuppression operation.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetAlarmSuppressionsFilterArgs>? _filters;
        public List<Inputs.GetAlarmSuppressionsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetAlarmSuppressionsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Setting this parameter to true requires the query to specify the alarm (`alarmId`).
        /// 
        /// When true, lists all alarm suppressions that affect the specified alarm, including suppressions that target the corresponding compartment or tenancy. When false, lists only the alarm suppressions that target the specified alarm.
        /// 
        /// Default is false.
        /// </summary>
        [Input("isAllSuppressions")]
        public bool? IsAllSuppressions { get; set; }

        /// <summary>
        /// The level of this alarm suppression. `ALARM` indicates a suppression of the entire alarm, regardless of dimension. `DIMENSION` indicates a suppression configured for specified dimensions.
        /// </summary>
        [Input("level")]
        public string? Level { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given lifecycle state exactly. When not specified, only resources in the ACTIVE lifecycle state are listed.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        /// <summary>
        /// The target type to use when listing alarm suppressions.     `ALARM` lists all suppression records for the specified alarm. `COMPARTMENT` lists all suppression records for the specified compartment or tenancy.
        /// </summary>
        [Input("targetType")]
        public string? TargetType { get; set; }

        public GetAlarmSuppressionsArgs()
        {
        }
        public static new GetAlarmSuppressionsArgs Empty => new GetAlarmSuppressionsArgs();
    }

    public sealed class GetAlarmSuppressionsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the alarm that is the target of the alarm suppression.
        /// </summary>
        [Input("alarmId")]
        public Input<string>? AlarmId { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for searching.  Use the tenancy OCID to search in the root compartment.
        /// 
        /// If targetType is not specified, searches all suppressions defined under the compartment.  If targetType is `COMPARTMENT`, searches suppressions in the specified compartment only.
        /// 
        /// Example: `ocid1.compartment.oc1..exampleuniqueID`
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// When true, returns resources from all compartments and subcompartments. The parameter can only be set to true when compartmentId is the tenancy OCID (the tenancy is the root compartment). A true value requires the user to have tenancy-level permissions. If this requirement is not met, then the call is rejected. When false, returns resources from only the compartment specified in compartmentId. Default is false.
        /// </summary>
        [Input("compartmentIdInSubtree")]
        public Input<bool>? CompartmentIdInSubtree { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given display name exactly. Use this filter to list an alarm suppression by name. Alternatively, when you know the alarm suppression OCID, use the GetAlarmSuppression operation.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetAlarmSuppressionsFilterInputArgs>? _filters;
        public InputList<Inputs.GetAlarmSuppressionsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetAlarmSuppressionsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Setting this parameter to true requires the query to specify the alarm (`alarmId`).
        /// 
        /// When true, lists all alarm suppressions that affect the specified alarm, including suppressions that target the corresponding compartment or tenancy. When false, lists only the alarm suppressions that target the specified alarm.
        /// 
        /// Default is false.
        /// </summary>
        [Input("isAllSuppressions")]
        public Input<bool>? IsAllSuppressions { get; set; }

        /// <summary>
        /// The level of this alarm suppression. `ALARM` indicates a suppression of the entire alarm, regardless of dimension. `DIMENSION` indicates a suppression configured for specified dimensions.
        /// </summary>
        [Input("level")]
        public Input<string>? Level { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given lifecycle state exactly. When not specified, only resources in the ACTIVE lifecycle state are listed.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The target type to use when listing alarm suppressions.     `ALARM` lists all suppression records for the specified alarm. `COMPARTMENT` lists all suppression records for the specified compartment or tenancy.
        /// </summary>
        [Input("targetType")]
        public Input<string>? TargetType { get; set; }

        public GetAlarmSuppressionsInvokeArgs()
        {
        }
        public static new GetAlarmSuppressionsInvokeArgs Empty => new GetAlarmSuppressionsInvokeArgs();
    }


    [OutputType]
    public sealed class GetAlarmSuppressionsResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the alarm that is the target of the alarm suppression.
        /// </summary>
        public readonly string? AlarmId;
        /// <summary>
        /// The list of alarm_suppression_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAlarmSuppressionsAlarmSuppressionCollectionResult> AlarmSuppressionCollections;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the alarm suppression.
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// When true, the alarm suppression targets all alarms under all compartments and subcompartments of  the tenancy specified. The parameter can only be set to true when compartmentId is the tenancy OCID  (the tenancy is the root compartment). When false, the alarm suppression targets only the alarms under the specified compartment.
        /// </summary>
        public readonly bool? CompartmentIdInSubtree;
        /// <summary>
        /// A user-friendly name for the alarm suppression. It does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetAlarmSuppressionsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool? IsAllSuppressions;
        /// <summary>
        /// The level of this alarm suppression. `ALARM` indicates a suppression of the entire alarm, regardless of dimension. `DIMENSION` indicates a suppression configured for specified dimensions.
        /// </summary>
        public readonly string? Level;
        /// <summary>
        /// The current lifecycle state of the alarm suppression.  Example: `DELETED`
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// The type of the alarm suppression target.
        /// </summary>
        public readonly string? TargetType;

        [OutputConstructor]
        private GetAlarmSuppressionsResult(
            string? alarmId,

            ImmutableArray<Outputs.GetAlarmSuppressionsAlarmSuppressionCollectionResult> alarmSuppressionCollections,

            string? compartmentId,

            bool? compartmentIdInSubtree,

            string? displayName,

            ImmutableArray<Outputs.GetAlarmSuppressionsFilterResult> filters,

            string id,

            bool? isAllSuppressions,

            string? level,

            string? state,

            string? targetType)
        {
            AlarmId = alarmId;
            AlarmSuppressionCollections = alarmSuppressionCollections;
            CompartmentId = compartmentId;
            CompartmentIdInSubtree = compartmentIdInSubtree;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            IsAllSuppressions = isAllSuppressions;
            Level = level;
            State = state;
            TargetType = targetType;
        }
    }
}
