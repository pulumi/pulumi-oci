// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Monitoring
{
    public static class GetAlarms
    {
        /// <summary>
        /// This data source provides the list of Alarms in Oracle Cloud Infrastructure Monitoring service.
        /// 
        /// Lists the alarms for the specified compartment.
        /// For more information, see
        /// [Listing Alarms](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Tasks/list-alarm.htm).
        /// For important limits information, see
        /// [Limits on Monitoring](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Concepts/monitoringoverview.htm#limits).
        /// 
        /// This call is subject to a Monitoring limit that applies to the total number of requests across all alarm operations.
        /// Monitoring might throttle this call to reject an otherwise valid request when the total rate of alarm operations exceeds 10 requests,
        /// or transactions, per second (TPS) for a given tenancy.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAlarms = Oci.Monitoring.GetAlarms.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         CompartmentIdInSubtree = alarmCompartmentIdInSubtree,
        ///         DisplayName = alarmDisplayName,
        ///         State = alarmState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetAlarmsResult> InvokeAsync(GetAlarmsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAlarmsResult>("oci:Monitoring/getAlarms:getAlarms", args ?? new GetAlarmsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Alarms in Oracle Cloud Infrastructure Monitoring service.
        /// 
        /// Lists the alarms for the specified compartment.
        /// For more information, see
        /// [Listing Alarms](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Tasks/list-alarm.htm).
        /// For important limits information, see
        /// [Limits on Monitoring](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Concepts/monitoringoverview.htm#limits).
        /// 
        /// This call is subject to a Monitoring limit that applies to the total number of requests across all alarm operations.
        /// Monitoring might throttle this call to reject an otherwise valid request when the total rate of alarm operations exceeds 10 requests,
        /// or transactions, per second (TPS) for a given tenancy.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAlarms = Oci.Monitoring.GetAlarms.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         CompartmentIdInSubtree = alarmCompartmentIdInSubtree,
        ///         DisplayName = alarmDisplayName,
        ///         State = alarmState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAlarmsResult> Invoke(GetAlarmsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAlarmsResult>("oci:Monitoring/getAlarms:getAlarms", args ?? new GetAlarmsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAlarmsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the resources monitored by the metric that you are searching for. Use tenancyId to search in the root compartment.  Example: `ocid1.compartment.oc1..exampleuniqueID`
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// When true, returns resources from all compartments and subcompartments. The parameter can only be set to true when compartmentId is the tenancy OCID (the tenancy is the root compartment). A true value requires the user to have tenancy-level permissions. If this requirement is not met, then the call is rejected. When false, returns resources from only the compartment specified in compartmentId. Default is false.
        /// </summary>
        [Input("compartmentIdInSubtree")]
        public bool? CompartmentIdInSubtree { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given display name exactly. Use this filter to list an alarm by name. Alternatively, when you know the alarm OCID, use the GetAlarm operation.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetAlarmsFilterArgs>? _filters;
        public List<Inputs.GetAlarmsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetAlarmsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only alarms that match the given lifecycle state exactly. When not specified, only alarms in the ACTIVE lifecycle state are listed.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetAlarmsArgs()
        {
        }
        public static new GetAlarmsArgs Empty => new GetAlarmsArgs();
    }

    public sealed class GetAlarmsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the resources monitored by the metric that you are searching for. Use tenancyId to search in the root compartment.  Example: `ocid1.compartment.oc1..exampleuniqueID`
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// When true, returns resources from all compartments and subcompartments. The parameter can only be set to true when compartmentId is the tenancy OCID (the tenancy is the root compartment). A true value requires the user to have tenancy-level permissions. If this requirement is not met, then the call is rejected. When false, returns resources from only the compartment specified in compartmentId. Default is false.
        /// </summary>
        [Input("compartmentIdInSubtree")]
        public Input<bool>? CompartmentIdInSubtree { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given display name exactly. Use this filter to list an alarm by name. Alternatively, when you know the alarm OCID, use the GetAlarm operation.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetAlarmsFilterInputArgs>? _filters;
        public InputList<Inputs.GetAlarmsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetAlarmsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only alarms that match the given lifecycle state exactly. When not specified, only alarms in the ACTIVE lifecycle state are listed.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetAlarmsInvokeArgs()
        {
        }
        public static new GetAlarmsInvokeArgs Empty => new GetAlarmsInvokeArgs();
    }


    [OutputType]
    public sealed class GetAlarmsResult
    {
        /// <summary>
        /// The list of alarms.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAlarmsAlarmResult> Alarms;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the alarm.
        /// </summary>
        public readonly string CompartmentId;
        public readonly bool? CompartmentIdInSubtree;
        /// <summary>
        /// A user-friendly name for the alarm. It does not have to be unique, and it's changeable.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetAlarmsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The current lifecycle state of the alarm.  Example: `DELETED`
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetAlarmsResult(
            ImmutableArray<Outputs.GetAlarmsAlarmResult> alarms,

            string compartmentId,

            bool? compartmentIdInSubtree,

            string? displayName,

            ImmutableArray<Outputs.GetAlarmsFilterResult> filters,

            string id,

            string? state)
        {
            Alarms = alarms;
            CompartmentId = compartmentId;
            CompartmentIdInSubtree = compartmentIdInSubtree;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            State = state;
        }
    }
}
