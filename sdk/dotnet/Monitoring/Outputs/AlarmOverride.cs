// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Monitoring.Outputs
{

    [OutputType]
    public sealed class AlarmOverride
    {
        /// <summary>
        /// (Updatable) The human-readable content of the delivered alarm notification. Oracle recommends providing guidance to operators for resolving the alarm condition. Consider adding links to standard runbook practices. Avoid entering confidential information.  Example: `High CPU usage alert. Follow runbook instructions for resolution.`
        /// </summary>
        public readonly string? Body;
        /// <summary>
        /// (Updatable) The period of time that the condition defined in the alarm must persist before the alarm state changes from "OK" to "FIRING". For example, a value of 5 minutes means that the alarm must persist in breaching the condition for five minutes before the alarm updates its state to "FIRING".
        /// 
        /// The duration is specified as a string in ISO 8601 format (`PT10M` for ten minutes or `PT1H` for one hour). Minimum: PT1M. Maximum: PT1H. Default: PT1M.
        /// 
        /// Under the default value of PT1M, the first evaluation that breaches the alarm updates the state to "FIRING".
        /// 
        /// The alarm updates its status to "OK" when the breaching condition has been clear for the most recent minute.
        /// 
        /// Example: `PT5M`
        /// </summary>
        public readonly string? PendingDuration;
        /// <summary>
        /// (Updatable) The Monitoring Query Language (MQL) expression to evaluate for the alarm. The Alarms feature of the Monitoring service interprets results for each returned time series as Boolean values, where zero represents false and a non-zero value represents true. A true value means that the trigger rule condition has been met. The query must specify a metric, statistic, interval, and trigger rule (threshold or absence). Supported values for interval depend on the specified time range. More interval values are supported for smaller time ranges. You can optionally specify dimensions and grouping functions. Supported grouping functions: `grouping()`, `groupBy()`. For information about writing MQL expressions, see [Editing the MQL Expression for a Query](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Tasks/query-metric-mql.htm). For details about MQL, see [Monitoring Query Language (MQL) Reference](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Reference/mql.htm). For available dimensions, review the metric definition for the supported service. See [Supported Services](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Concepts/monitoringoverview.htm#SupportedServices).
        /// 
        /// Example of threshold alarm:
        /// 
        /// -----
        /// 
        /// CpuUtilization[1m]{availabilityDomain="cumS:PHX-AD-1"}.groupBy(availabilityDomain).percentile(0.9) &gt; 85
        /// 
        /// -----
        /// 
        /// Example of absence alarm:
        /// 
        /// -----
        /// 
        /// CpuUtilization[1m]{availabilityDomain="cumS:PHX-AD-1"}.absent()
        /// 
        /// -----
        /// </summary>
        public readonly string? Query;
        /// <summary>
        /// (Updatable) Identifier of the alarm's base values for alarm evaluation, for use when the alarm contains overrides.  A valid ruleName value starts with an alphabetic character and includes only alphanumeric characters, underscores and square brackets.  Minimum number of characters: 3. Default value is `BASE`. For information about alarm overrides, see [AlarmOverride](https://docs.cloud.oracle.com/iaas/api/#/en/monitoring/latest/datatypes/AlarmOverride).
        /// </summary>
        public readonly string? RuleName;
        /// <summary>
        /// (Updatable) The perceived type of response required when the alarm is in the "FIRING" state.  Example: `CRITICAL`
        /// </summary>
        public readonly string? Severity;

        [OutputConstructor]
        private AlarmOverride(
            string? body,

            string? pendingDuration,

            string? query,

            string? ruleName,

            string? severity)
        {
            Body = body;
            PendingDuration = pendingDuration;
            Query = query;
            RuleName = ruleName;
            Severity = severity;
        }
    }
}
