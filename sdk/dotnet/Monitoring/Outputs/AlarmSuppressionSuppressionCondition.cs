// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Monitoring.Outputs
{

    [OutputType]
    public sealed class AlarmSuppressionSuppressionCondition
    {
        /// <summary>
        /// Type of suppression condition.
        /// </summary>
        public readonly string ConditionType;
        /// <summary>
        /// Duration of the recurring suppression. Specified as a string in ISO 8601 format. Minimum: `PT1M` (1 minute). Maximum: `PT24H` (24 hours).
        /// </summary>
        public readonly string SuppressionDuration;
        /// <summary>
        /// Frequency and start time of the recurring suppression. The format follows [the iCalendar specification (RFC 5545, section 3.3.10)](https://datatracker.ietf.org/doc/html/rfc5545#section-3.3.10). Supported rule parts:
        /// * `FREQ`: Frequency of the recurring suppression: `WEEKLY` or `DAILY` only.
        /// * `BYDAY`: Comma separated days. Use with weekly suppressions only. Supported values: `MO`, `TU`, `WE`, `TH`, `FR`, `SA` ,`SU`.
        /// * `BYHOUR`, `BYMINUTE`, `BYSECOND`: Start time in UTC, after `timeSuppressFrom` value. Default is 00:00:00 UTC after `timeSuppressFrom`.
        /// </summary>
        public readonly string SuppressionRecurrence;

        [OutputConstructor]
        private AlarmSuppressionSuppressionCondition(
            string conditionType,

            string suppressionDuration,

            string suppressionRecurrence)
        {
            ConditionType = conditionType;
            SuppressionDuration = suppressionDuration;
            SuppressionRecurrence = suppressionRecurrence;
        }
    }
}
