// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Monitoring.Outputs
{

    [OutputType]
    public sealed class GetAlarmStatusesAlarmStatusResult
    {
        /// <summary>
        /// A filter to return only resources that match the given display name exactly. Use this filter to list an alarm by name. Alternatively, when you know the alarm OCID, use the GetAlarm operation.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the alarm.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The perceived type of response required when the alarm is in the "FIRING" state.  Example: `CRITICAL`
        /// </summary>
        public readonly string Severity;
        /// <summary>
        /// The status of the metric stream to use for alarm filtering. For example, set `StatusQueryParam` to "FIRING" to filter results to metric streams of the alarm with that status. Default behaviour is to return alarms irrespective of metric streams' status.  Example: `FIRING`
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The configuration details for suppressing an alarm.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAlarmStatusesAlarmStatusSuppressionResult> Suppressions;
        /// <summary>
        /// Timestamp for the transition of the alarm state. For example, the time when the alarm transitioned from OK to Firing. Note: A three-minute lag for this value accounts for any late-arriving metrics.  Example: `2023-02-01T01:02:29.600Z`
        /// </summary>
        public readonly string TimestampTriggered;

        [OutputConstructor]
        private GetAlarmStatusesAlarmStatusResult(
            string displayName,

            string id,

            string severity,

            string status,

            ImmutableArray<Outputs.GetAlarmStatusesAlarmStatusSuppressionResult> suppressions,

            string timestampTriggered)
        {
            DisplayName = displayName;
            Id = id;
            Severity = severity;
            Status = status;
            Suppressions = suppressions;
            TimestampTriggered = timestampTriggered;
        }
    }
}
