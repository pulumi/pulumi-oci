// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Monitoring.Outputs
{

    [OutputType]
    public sealed class GetMetricDataMetricDataResult
    {
        /// <summary>
        /// The list of timestamp-value pairs returned for the specified request. Metric values are rolled up to the start time specified in the request. For important limits information related to data points, see MetricData Reference at the top of this page.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMetricDataMetricDataAggregatedDatapointResult> AggregatedDatapoints;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the resources monitored by the metric that you are searching for. Use tenancyId to search in the root compartment.  Example: `ocid1.compartment.oc1..exampleuniqueID`
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// When true, returns resources from all compartments and subcompartments. The parameter can only be set to true when compartmentId is the tenancy OCID (the tenancy is the root compartment). A true value requires the user to have tenancy-level permissions. If this requirement is not met, then the call is rejected. When false, returns resources from only the compartment specified in compartmentId. Default is false.
        /// </summary>
        public readonly bool CompartmentIdInSubtree;
        /// <summary>
        /// Qualifiers provided in the definition of the returned metric. Available dimensions vary by metric namespace. Each dimension takes the form of a key-value pair.  Example: `"resourceId": "ocid1.instance.region1.phx.exampleuniqueID"`
        /// </summary>
        public readonly ImmutableDictionary<string, object> Dimensions;
        /// <summary>
        /// The end of the time range to use when searching for metric data points. Format is defined by RFC3339. The response excludes metric data points for the endTime. Default value: the timestamp representing when the call was sent.  Example: `2019-02-01T02:02:29.600Z`
        /// </summary>
        public readonly string EndTime;
        /// <summary>
        /// The references provided in a metric definition to indicate extra information about the metric.  Example: `"unit": "bytes"`
        /// </summary>
        public readonly ImmutableDictionary<string, object> Metadata;
        /// <summary>
        /// The name of the metric.  Example: `CpuUtilization`
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The source service or application to use when searching for metric data points to aggregate.  Example: `oci_computeagent`
        /// </summary>
        public readonly string Namespace;
        /// <summary>
        /// The Monitoring Query Language (MQL) expression to use when searching for metric data points to aggregate. The query must specify a metric, statistic, and interval. Supported values for interval depend on the specified time range. More interval values are supported for smaller time ranges. You can optionally specify dimensions and grouping functions. Supported grouping functions: `grouping()`, `groupBy()`.
        /// 
        /// Construct your query to avoid exceeding limits on returned data. See [MetricData Reference](https://docs.cloud.oracle.com/iaas/api/#/en/monitoring/20180401/MetricData).
        /// 
        /// For details about Monitoring Query Language (MQL), see [Monitoring Query Language (MQL) Reference](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Reference/mql.htm). For available dimensions, review the metric definition for the supported service. See [Supported Services](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Concepts/monitoringoverview.htm#SupportedServices).
        /// 
        /// Example: `CpuUtilization[1m].sum()`
        /// </summary>
        public readonly string Query;
        /// <summary>
        /// The time between calculated aggregation windows. Use with the query interval to vary the frequency at which aggregated data points are returned. For example, use a query interval of 5 minutes with a resolution of 1 minute to retrieve five-minute aggregations at a one-minute frequency. The resolution must be equal or less than the interval in the query. The default resolution is 1m (one minute). Supported values: `1m`-`60m`, `1h`-`24h`, `1d`.  Example: `5m`
        /// </summary>
        public readonly string Resolution;
        /// <summary>
        /// Resource group that you want to match. A null value returns only metric data that has no resource groups. The specified resource group must exist in the definition of the posted metric. Only one resource group can be applied per metric. A valid resourceGroup value starts with an alphabetical character and includes only alphanumeric characters, periods (.), underscores (_), hyphens (-), and dollar signs ($).  Example: `frontend-fleet`
        /// </summary>
        public readonly string ResourceGroup;
        /// <summary>
        /// The beginning of the time range to use when searching for metric data points. Format is defined by RFC3339. The response includes metric data points for the startTime. Default value: the timestamp 3 hours before the call was sent.  Example: `2019-02-01T01:02:29.600Z`
        /// </summary>
        public readonly string StartTime;

        [OutputConstructor]
        private GetMetricDataMetricDataResult(
            ImmutableArray<Outputs.GetMetricDataMetricDataAggregatedDatapointResult> aggregatedDatapoints,

            string compartmentId,

            bool compartmentIdInSubtree,

            ImmutableDictionary<string, object> dimensions,

            string endTime,

            ImmutableDictionary<string, object> metadata,

            string name,

            string @namespace,

            string query,

            string resolution,

            string resourceGroup,

            string startTime)
        {
            AggregatedDatapoints = aggregatedDatapoints;
            CompartmentId = compartmentId;
            CompartmentIdInSubtree = compartmentIdInSubtree;
            Dimensions = dimensions;
            EndTime = endTime;
            Metadata = metadata;
            Name = name;
            Namespace = @namespace;
            Query = query;
            Resolution = resolution;
            ResourceGroup = resourceGroup;
            StartTime = startTime;
        }
    }
}
