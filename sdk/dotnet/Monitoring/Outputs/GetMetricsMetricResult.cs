// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Monitoring.Outputs
{

    [OutputType]
    public sealed class GetMetricsMetricResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the resources monitored by the metric that you are searching for. Use tenancyId to search in the root compartment.  Example: `ocid1.compartment.oc1..exampleuniqueID`
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// When true, returns resources from all compartments and subcompartments. The parameter can only be set to true when compartmentId is the tenancy OCID (the tenancy is the root compartment). A true value requires the user to have tenancy-level permissions. If this requirement is not met, then the call is rejected. When false, returns resources from only the compartment specified in compartmentId. Default is false.
        /// </summary>
        public readonly bool CompartmentIdInSubtree;
        /// <summary>
        /// Qualifiers that you want to use when searching for metric definitions. Available dimensions vary by metric namespace. Each dimension takes the form of a key-value pair.  Example: `"resourceId": "ocid1.instance.region1.phx.exampleuniqueID"`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DimensionFilters;
        /// <summary>
        /// Qualifiers provided in a metric definition. Available dimensions vary by metric namespace. Each dimension takes the form of a key-value pair.  Example: `"resourceId": "ocid1.instance.region1.phx.exampleuniqueID"`
        /// </summary>
        public readonly ImmutableDictionary<string, object> Dimensions;
        /// <summary>
        /// Group metrics by these fields in the response. For example, to list all metric namespaces available in a compartment, groupBy the "namespace" field. Supported fields: namespace, name, resourceGroup.
        /// 
        /// Example - group by namespace: `[ "namespace" ]`
        /// </summary>
        public readonly ImmutableArray<string> GroupBies;
        /// <summary>
        /// The metric name to use when searching for metric definitions.  Example: `CpuUtilization`
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The source service or application to use when searching for metric definitions.  Example: `oci_computeagent`
        /// </summary>
        public readonly string Namespace;
        /// <summary>
        /// Resource group that you want to match. A null value returns only metric data that has no resource groups. The specified resource group must exist in the definition of the posted metric. Only one resource group can be applied per metric. A valid resourceGroup value starts with an alphabetical character and includes only alphanumeric characters, periods (.), underscores (_), hyphens (-), and dollar signs ($).  Example: `frontend-fleet`
        /// </summary>
        public readonly string ResourceGroup;

        [OutputConstructor]
        private GetMetricsMetricResult(
            string compartmentId,

            bool compartmentIdInSubtree,

            ImmutableDictionary<string, object> dimensionFilters,

            ImmutableDictionary<string, object> dimensions,

            ImmutableArray<string> groupBies,

            string name,

            string @namespace,

            string resourceGroup)
        {
            CompartmentId = compartmentId;
            CompartmentIdInSubtree = compartmentIdInSubtree;
            DimensionFilters = dimensionFilters;
            Dimensions = dimensions;
            GroupBies = groupBies;
            Name = name;
            Namespace = @namespace;
            ResourceGroup = resourceGroup;
        }
    }
}
