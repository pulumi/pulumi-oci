// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Mysql
{
    public static class GetChannel
    {
        /// <summary>
        /// This data source provides details about a specific Channel resource in Oracle Cloud Infrastructure MySQL Database service.
        /// 
        /// Gets the full details of the specified Channel, including the user-specified
        /// configuration parameters (passwords are omitted), as well as information about
        /// the state of the Channel, its sources and targets.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testChannel = Oci.Mysql.GetChannel.Invoke(new()
        ///     {
        ///         ChannelId = testChannelOciMysqlChannel.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetChannelResult> InvokeAsync(GetChannelArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetChannelResult>("oci:Mysql/getChannel:getChannel", args ?? new GetChannelArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Channel resource in Oracle Cloud Infrastructure MySQL Database service.
        /// 
        /// Gets the full details of the specified Channel, including the user-specified
        /// configuration parameters (passwords are omitted), as well as information about
        /// the state of the Channel, its sources and targets.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testChannel = Oci.Mysql.GetChannel.Invoke(new()
        ///     {
        ///         ChannelId = testChannelOciMysqlChannel.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetChannelResult> Invoke(GetChannelInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetChannelResult>("oci:Mysql/getChannel:getChannel", args ?? new GetChannelInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Channel resource in Oracle Cloud Infrastructure MySQL Database service.
        /// 
        /// Gets the full details of the specified Channel, including the user-specified
        /// configuration parameters (passwords are omitted), as well as information about
        /// the state of the Channel, its sources and targets.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testChannel = Oci.Mysql.GetChannel.Invoke(new()
        ///     {
        ///         ChannelId = testChannelOciMysqlChannel.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetChannelResult> Invoke(GetChannelInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetChannelResult>("oci:Mysql/getChannel:getChannel", args ?? new GetChannelInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetChannelArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Channel [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("channelId", required: true)]
        public string ChannelId { get; set; } = null!;

        public GetChannelArgs()
        {
        }
        public static new GetChannelArgs Empty => new GetChannelArgs();
    }

    public sealed class GetChannelInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Channel [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("channelId", required: true)]
        public Input<string> ChannelId { get; set; } = null!;

        public GetChannelInvokeArgs()
        {
        }
        public static new GetChannelInvokeArgs Empty => new GetChannelInvokeArgs();
    }


    [OutputType]
    public sealed class GetChannelResult
    {
        public readonly string ChannelId;
        /// <summary>
        /// The OCID of the compartment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// User provided description of the Channel.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The user-friendly name for the Channel. It does not have to be unique.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Simple key-value pair applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        public readonly string Id;
        /// <summary>
        /// Whether the Channel has been enabled by the user.
        /// </summary>
        public readonly bool IsEnabled;
        /// <summary>
        /// A message describing the state of the Channel.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// Parameters detailing how to provision the source for the given Channel.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetChannelSourceResult> Sources;
        /// <summary>
        /// The state of the Channel.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// Details about the Channel target.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetChannelTargetResult> Targets;
        /// <summary>
        /// The date and time the Channel was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time the Channel was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetChannelResult(
            string channelId,

            string compartmentId,

            ImmutableDictionary<string, string> definedTags,

            string description,

            string displayName,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            bool isEnabled,

            string lifecycleDetails,

            ImmutableArray<Outputs.GetChannelSourceResult> sources,

            string state,

            ImmutableDictionary<string, string> systemTags,

            ImmutableArray<Outputs.GetChannelTargetResult> targets,

            string timeCreated,

            string timeUpdated)
        {
            ChannelId = channelId;
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            IsEnabled = isEnabled;
            LifecycleDetails = lifecycleDetails;
            Sources = sources;
            State = state;
            SystemTags = systemTags;
            Targets = targets;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
