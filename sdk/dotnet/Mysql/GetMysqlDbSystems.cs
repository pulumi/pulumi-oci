// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Mysql
{
    public static class GetMysqlDbSystems
    {
        /// <summary>
        /// This data source provides the list of Mysql Db Systems in Oracle Cloud Infrastructure MySQL Database service.
        /// 
        /// Get a list of DB Systems in the specified compartment.
        /// The default sort order is by timeUpdated, descending.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testMysqlDbSystems = Output.Create(Oci.Mysql.GetMysqlDbSystems.InvokeAsync(new Oci.Mysql.GetMysqlDbSystemsArgs
        ///         {
        ///             CompartmentId = @var.Compartment_id,
        ///             ConfigurationId = @var.Mysql_configuration_id,
        ///             DbSystemId = oci_mysql_mysql_db_system.Test_db_system.Id,
        ///             DisplayName = @var.Mysql_db_system_display_name,
        ///             IsAnalyticsClusterAttached = @var.Mysql_db_system_is_analytics_cluster_attached,
        ///             IsHeatWaveClusterAttached = @var.Mysql_db_system_is_heat_wave_cluster_attached,
        ///             IsUpToDate = @var.Mysql_db_system_is_up_to_date,
        ///             State = @var.Mysql_db_system_state,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetMysqlDbSystemsResult> InvokeAsync(GetMysqlDbSystemsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetMysqlDbSystemsResult>("oci:Mysql/getMysqlDbSystems:getMysqlDbSystems", args ?? new GetMysqlDbSystemsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Mysql Db Systems in Oracle Cloud Infrastructure MySQL Database service.
        /// 
        /// Get a list of DB Systems in the specified compartment.
        /// The default sort order is by timeUpdated, descending.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testMysqlDbSystems = Output.Create(Oci.Mysql.GetMysqlDbSystems.InvokeAsync(new Oci.Mysql.GetMysqlDbSystemsArgs
        ///         {
        ///             CompartmentId = @var.Compartment_id,
        ///             ConfigurationId = @var.Mysql_configuration_id,
        ///             DbSystemId = oci_mysql_mysql_db_system.Test_db_system.Id,
        ///             DisplayName = @var.Mysql_db_system_display_name,
        ///             IsAnalyticsClusterAttached = @var.Mysql_db_system_is_analytics_cluster_attached,
        ///             IsHeatWaveClusterAttached = @var.Mysql_db_system_is_heat_wave_cluster_attached,
        ///             IsUpToDate = @var.Mysql_db_system_is_up_to_date,
        ///             State = @var.Mysql_db_system_state,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetMysqlDbSystemsResult> Invoke(GetMysqlDbSystemsInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetMysqlDbSystemsResult>("oci:Mysql/getMysqlDbSystems:getMysqlDbSystems", args ?? new GetMysqlDbSystemsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMysqlDbSystemsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// The requested Configuration instance.
        /// </summary>
        [Input("configurationId")]
        public string? ConfigurationId { get; set; }

        /// <summary>
        /// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("dbSystemId")]
        public string? DbSystemId { get; set; }

        /// <summary>
        /// A filter to return only the resource matching the given display name exactly.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetMysqlDbSystemsFilterArgs>? _filters;
        public List<Inputs.GetMysqlDbSystemsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetMysqlDbSystemsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// DEPRECATED -- please use HeatWave API instead. If true, return only DB Systems with an Analytics Cluster attached, if false return only DB Systems with no Analytics Cluster attached. If not present, return all DB Systems.
        /// </summary>
        [Input("isAnalyticsClusterAttached")]
        public bool? IsAnalyticsClusterAttached { get; set; }

        /// <summary>
        /// If true, return only DB Systems with a HeatWave cluster attached, if false return only DB Systems with no HeatWave cluster attached. If not present, return all DB Systems.
        /// </summary>
        [Input("isHeatWaveClusterAttached")]
        public bool? IsHeatWaveClusterAttached { get; set; }

        /// <summary>
        /// Filter instances if they are using the latest revision of the Configuration they are associated with.
        /// </summary>
        [Input("isUpToDate")]
        public bool? IsUpToDate { get; set; }

        /// <summary>
        /// DbSystem Lifecycle State
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetMysqlDbSystemsArgs()
        {
        }
    }

    public sealed class GetMysqlDbSystemsInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// The requested Configuration instance.
        /// </summary>
        [Input("configurationId")]
        public Input<string>? ConfigurationId { get; set; }

        /// <summary>
        /// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("dbSystemId")]
        public Input<string>? DbSystemId { get; set; }

        /// <summary>
        /// A filter to return only the resource matching the given display name exactly.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetMysqlDbSystemsFilterInputArgs>? _filters;
        public InputList<Inputs.GetMysqlDbSystemsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetMysqlDbSystemsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// DEPRECATED -- please use HeatWave API instead. If true, return only DB Systems with an Analytics Cluster attached, if false return only DB Systems with no Analytics Cluster attached. If not present, return all DB Systems.
        /// </summary>
        [Input("isAnalyticsClusterAttached")]
        public Input<bool>? IsAnalyticsClusterAttached { get; set; }

        /// <summary>
        /// If true, return only DB Systems with a HeatWave cluster attached, if false return only DB Systems with no HeatWave cluster attached. If not present, return all DB Systems.
        /// </summary>
        [Input("isHeatWaveClusterAttached")]
        public Input<bool>? IsHeatWaveClusterAttached { get; set; }

        /// <summary>
        /// Filter instances if they are using the latest revision of the Configuration they are associated with.
        /// </summary>
        [Input("isUpToDate")]
        public Input<bool>? IsUpToDate { get; set; }

        /// <summary>
        /// DbSystem Lifecycle State
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetMysqlDbSystemsInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetMysqlDbSystemsResult
    {
        /// <summary>
        /// The OCID of the compartment the DB System belongs in.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The OCID of the Configuration to be used for Instances in this DB System.
        /// </summary>
        public readonly string? ConfigurationId;
        /// <summary>
        /// The OCID of the source DB System.
        /// </summary>
        public readonly string? DbSystemId;
        /// <summary>
        /// The list of db_systems.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMysqlDbSystemsDbSystemResult> DbSystems;
        /// <summary>
        /// The user-friendly name for the DB System. It does not have to be unique.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetMysqlDbSystemsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// DEPRECATED -- please use `isHeatWaveClusterAttached` instead. If the DB System has an Analytics Cluster attached.
        /// </summary>
        public readonly bool? IsAnalyticsClusterAttached;
        /// <summary>
        /// If the DB System has a HeatWave Cluster attached.
        /// </summary>
        public readonly bool? IsHeatWaveClusterAttached;
        public readonly bool? IsUpToDate;
        /// <summary>
        /// The current state of the DB System.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetMysqlDbSystemsResult(
            string compartmentId,

            string? configurationId,

            string? dbSystemId,

            ImmutableArray<Outputs.GetMysqlDbSystemsDbSystemResult> dbSystems,

            string? displayName,

            ImmutableArray<Outputs.GetMysqlDbSystemsFilterResult> filters,

            string id,

            bool? isAnalyticsClusterAttached,

            bool? isHeatWaveClusterAttached,

            bool? isUpToDate,

            string? state)
        {
            CompartmentId = compartmentId;
            ConfigurationId = configurationId;
            DbSystemId = dbSystemId;
            DbSystems = dbSystems;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            IsAnalyticsClusterAttached = isAnalyticsClusterAttached;
            IsHeatWaveClusterAttached = isHeatWaveClusterAttached;
            IsUpToDate = isUpToDate;
            State = state;
        }
    }
}
