// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Mysql
{
    public static class GetReplicas
    {
        /// <summary>
        /// This data source provides the list of Replicas in Oracle Cloud Infrastructure MySQL Database service.
        /// 
        /// Lists all the read replicas that match the specified filters.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testReplicas = Oci.Mysql.GetReplicas.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         ConfigurationId = oci_mysql_mysql_configuration.Test_mysql_configuration.Id,
        ///         DbSystemId = oci_mysql_mysql_db_system.Test_mysql_db_system.Id,
        ///         DisplayName = @var.Replica_display_name,
        ///         IsUpToDate = @var.Replica_is_up_to_date,
        ///         ReplicaId = oci_mysql_replica.Test_replica.Id,
        ///         State = @var.Replica_state,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetReplicasResult> InvokeAsync(GetReplicasArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetReplicasResult>("oci:Mysql/getReplicas:getReplicas", args ?? new GetReplicasArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Replicas in Oracle Cloud Infrastructure MySQL Database service.
        /// 
        /// Lists all the read replicas that match the specified filters.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testReplicas = Oci.Mysql.GetReplicas.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         ConfigurationId = oci_mysql_mysql_configuration.Test_mysql_configuration.Id,
        ///         DbSystemId = oci_mysql_mysql_db_system.Test_mysql_db_system.Id,
        ///         DisplayName = @var.Replica_display_name,
        ///         IsUpToDate = @var.Replica_is_up_to_date,
        ///         ReplicaId = oci_mysql_replica.Test_replica.Id,
        ///         State = @var.Replica_state,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetReplicasResult> Invoke(GetReplicasInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetReplicasResult>("oci:Mysql/getReplicas:getReplicas", args ?? new GetReplicasInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetReplicasArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// The requested Configuration instance.
        /// </summary>
        [Input("configurationId")]
        public string? ConfigurationId { get; set; }

        /// <summary>
        /// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("dbSystemId")]
        public string? DbSystemId { get; set; }

        /// <summary>
        /// A filter to return only the resource matching the given display name exactly.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetReplicasFilterArgs>? _filters;
        public List<Inputs.GetReplicasFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetReplicasFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Filter instances if they are using the latest revision of the Configuration they are associated with.
        /// </summary>
        [Input("isUpToDate")]
        public bool? IsUpToDate { get; set; }

        /// <summary>
        /// The read replica [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("replicaId")]
        public string? ReplicaId { get; set; }

        /// <summary>
        /// The LifecycleState of the read replica.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetReplicasArgs()
        {
        }
        public static new GetReplicasArgs Empty => new GetReplicasArgs();
    }

    public sealed class GetReplicasInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// The requested Configuration instance.
        /// </summary>
        [Input("configurationId")]
        public Input<string>? ConfigurationId { get; set; }

        /// <summary>
        /// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("dbSystemId")]
        public Input<string>? DbSystemId { get; set; }

        /// <summary>
        /// A filter to return only the resource matching the given display name exactly.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetReplicasFilterInputArgs>? _filters;
        public InputList<Inputs.GetReplicasFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetReplicasFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Filter instances if they are using the latest revision of the Configuration they are associated with.
        /// </summary>
        [Input("isUpToDate")]
        public Input<bool>? IsUpToDate { get; set; }

        /// <summary>
        /// The read replica [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("replicaId")]
        public Input<string>? ReplicaId { get; set; }

        /// <summary>
        /// The LifecycleState of the read replica.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetReplicasInvokeArgs()
        {
        }
        public static new GetReplicasInvokeArgs Empty => new GetReplicasInvokeArgs();
    }


    [OutputType]
    public sealed class GetReplicasResult
    {
        /// <summary>
        /// The OCID of the compartment that contains the read replica.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The OCID of the Configuration to be used by the read replica.
        /// </summary>
        public readonly string? ConfigurationId;
        /// <summary>
        /// The OCID of the DB System the read replica is associated with.
        /// </summary>
        public readonly string? DbSystemId;
        /// <summary>
        /// The user-friendly name for the read replica. It does not have to be unique.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetReplicasFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool? IsUpToDate;
        public readonly string? ReplicaId;
        /// <summary>
        /// The list of replicas.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetReplicasReplicaResult> Replicas;
        /// <summary>
        /// The state of the read replica.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetReplicasResult(
            string compartmentId,

            string? configurationId,

            string? dbSystemId,

            string? displayName,

            ImmutableArray<Outputs.GetReplicasFilterResult> filters,

            string id,

            bool? isUpToDate,

            string? replicaId,

            ImmutableArray<Outputs.GetReplicasReplicaResult> replicas,

            string? state)
        {
            CompartmentId = compartmentId;
            ConfigurationId = configurationId;
            DbSystemId = dbSystemId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            IsUpToDate = isUpToDate;
            ReplicaId = replicaId;
            Replicas = replicas;
            State = state;
        }
    }
}
