// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Mysql
{
    public static class GetShapes
    {
        /// <summary>
        /// This data source provides the list of Shapes in Oracle Cloud Infrastructure MySQL Database service.
        /// 
        /// Gets a list of the shapes you can use to create a new MySQL DB System.
        /// The shape determines the resources allocated to the DB System:
        /// CPU cores and memory for VM shapes; CPU cores, memory and
        /// storage for non-VM (or bare metal) shapes.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testShapes = Oci.Mysql.GetShapes.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         AvailabilityDomain = @var.Shape_availability_domain,
        ///         IsSupportedFors = @var.Shape_is_supported_for,
        ///         Name = @var.Shape_name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetShapesResult> InvokeAsync(GetShapesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetShapesResult>("oci:Mysql/getShapes:getShapes", args ?? new GetShapesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Shapes in Oracle Cloud Infrastructure MySQL Database service.
        /// 
        /// Gets a list of the shapes you can use to create a new MySQL DB System.
        /// The shape determines the resources allocated to the DB System:
        /// CPU cores and memory for VM shapes; CPU cores, memory and
        /// storage for non-VM (or bare metal) shapes.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testShapes = Oci.Mysql.GetShapes.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         AvailabilityDomain = @var.Shape_availability_domain,
        ///         IsSupportedFors = @var.Shape_is_supported_for,
        ///         Name = @var.Shape_name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetShapesResult> Invoke(GetShapesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetShapesResult>("oci:Mysql/getShapes:getShapes", args ?? new GetShapesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetShapesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Availability Domain.
        /// </summary>
        [Input("availabilityDomain")]
        public string? AvailabilityDomain { get; set; }

        /// <summary>
        /// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetShapesFilterArgs>? _filters;
        public List<Inputs.GetShapesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetShapesFilterArgs>());
            set => _filters = value;
        }

        [Input("isSupportedFors")]
        private List<string>? _isSupportedFors;

        /// <summary>
        /// Return shapes that are supported by the service feature.
        /// </summary>
        public List<string> IsSupportedFors
        {
            get => _isSupportedFors ?? (_isSupportedFors = new List<string>());
            set => _isSupportedFors = value;
        }

        /// <summary>
        /// Name
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        public GetShapesArgs()
        {
        }
        public static new GetShapesArgs Empty => new GetShapesArgs();
    }

    public sealed class GetShapesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Availability Domain.
        /// </summary>
        [Input("availabilityDomain")]
        public Input<string>? AvailabilityDomain { get; set; }

        /// <summary>
        /// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetShapesFilterInputArgs>? _filters;
        public InputList<Inputs.GetShapesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetShapesFilterInputArgs>());
            set => _filters = value;
        }

        [Input("isSupportedFors")]
        private InputList<string>? _isSupportedFors;

        /// <summary>
        /// Return shapes that are supported by the service feature.
        /// </summary>
        public InputList<string> IsSupportedFors
        {
            get => _isSupportedFors ?? (_isSupportedFors = new InputList<string>());
            set => _isSupportedFors = value;
        }

        /// <summary>
        /// Name
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetShapesInvokeArgs()
        {
        }
        public static new GetShapesInvokeArgs Empty => new GetShapesInvokeArgs();
    }


    [OutputType]
    public sealed class GetShapesResult
    {
        public readonly string? AvailabilityDomain;
        public readonly string CompartmentId;
        public readonly ImmutableArray<Outputs.GetShapesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// What service features the shape is supported for.
        /// </summary>
        public readonly ImmutableArray<string> IsSupportedFors;
        /// <summary>
        /// The name of the shape used for the DB System.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The list of shapes.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetShapesShapeResult> Shapes;

        [OutputConstructor]
        private GetShapesResult(
            string? availabilityDomain,

            string compartmentId,

            ImmutableArray<Outputs.GetShapesFilterResult> filters,

            string id,

            ImmutableArray<string> isSupportedFors,

            string? name,

            ImmutableArray<Outputs.GetShapesShapeResult> shapes)
        {
            AvailabilityDomain = availabilityDomain;
            CompartmentId = compartmentId;
            Filters = filters;
            Id = id;
            IsSupportedFors = isSupportedFors;
            Name = name;
            Shapes = shapes;
        }
    }
}
