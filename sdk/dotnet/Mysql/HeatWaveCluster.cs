// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Mysql
{
    /// <summary>
    /// This resource provides the HeatWave cluster resource in Oracle Cloud Infrastructure MySQL Database service.
    /// 
    /// Updates the HeatWave cluster.
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testHeatWaveCluster = new Oci.Mysql.HeatWaveCluster("test_heat_wave_cluster", new()
    ///     {
    ///         DbSystemId = testDbSystem.Id,
    ///         ClusterSize = heatWaveClusterClusterSize,
    ///         IsLakehouseEnabled = heatWaveClusterIsLakehouseEnabled,
    ///         ShapeName = testShape.Name,
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// HeatWaveCluster can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:Mysql/heatWaveCluster:HeatWaveCluster test_heat_wave_cluster "dbSystem/{dbSystemId}/heatWaveCluster"
    /// ```
    /// </summary>
    [OciResourceType("oci:Mysql/heatWaveCluster:HeatWaveCluster")]
    public partial class HeatWaveCluster : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A HeatWave node is a compute host that is part of a HeatWave cluster.
        /// </summary>
        [Output("clusterNodes")]
        public Output<ImmutableArray<Outputs.HeatWaveClusterClusterNode>> ClusterNodes { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A change to the number of nodes in the HeatWave cluster will result in the entire cluster being torn down and re-created with the new cluster of nodes. This may result in a significant downtime for the analytics capability while the HeatWave cluster is re-provisioned.
        /// </summary>
        [Output("clusterSize")]
        public Output<int> ClusterSize { get; private set; } = null!;

        /// <summary>
        /// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Output("dbSystemId")]
        public Output<string> DbSystemId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Enable/disable Lakehouse for the HeatWave cluster.
        /// </summary>
        [Output("isLakehouseEnabled")]
        public Output<bool> IsLakehouseEnabled { get; private set; } = null!;

        /// <summary>
        /// Additional information about the current lifecycleState.
        /// </summary>
        [Output("lifecycleDetails")]
        public Output<string> LifecycleDetails { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A change to the shape of the nodes in the HeatWave cluster will result in the entire cluster being torn down and re-created with Compute instances of the new Shape. This may result in significant downtime for the analytics capability while the HeatWave cluster is re-provisioned.
        /// </summary>
        [Output("shapeName")]
        public Output<string> ShapeName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The target state for the HeatWave cluster. Could be set to `ACTIVE` or `INACTIVE`.
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The date and time the HeatWave cluster was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The time the HeatWave cluster was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;


        /// <summary>
        /// Create a HeatWaveCluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public HeatWaveCluster(string name, HeatWaveClusterArgs args, CustomResourceOptions? options = null)
            : base("oci:Mysql/heatWaveCluster:HeatWaveCluster", name, args ?? new HeatWaveClusterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private HeatWaveCluster(string name, Input<string> id, HeatWaveClusterState? state = null, CustomResourceOptions? options = null)
            : base("oci:Mysql/heatWaveCluster:HeatWaveCluster", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing HeatWaveCluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static HeatWaveCluster Get(string name, Input<string> id, HeatWaveClusterState? state = null, CustomResourceOptions? options = null)
        {
            return new HeatWaveCluster(name, id, state, options);
        }
    }

    public sealed class HeatWaveClusterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) A change to the number of nodes in the HeatWave cluster will result in the entire cluster being torn down and re-created with the new cluster of nodes. This may result in a significant downtime for the analytics capability while the HeatWave cluster is re-provisioned.
        /// </summary>
        [Input("clusterSize", required: true)]
        public Input<int> ClusterSize { get; set; } = null!;

        /// <summary>
        /// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("dbSystemId", required: true)]
        public Input<string> DbSystemId { get; set; } = null!;

        /// <summary>
        /// (Updatable) Enable/disable Lakehouse for the HeatWave cluster.
        /// </summary>
        [Input("isLakehouseEnabled")]
        public Input<bool>? IsLakehouseEnabled { get; set; }

        /// <summary>
        /// (Updatable) A change to the shape of the nodes in the HeatWave cluster will result in the entire cluster being torn down and re-created with Compute instances of the new Shape. This may result in significant downtime for the analytics capability while the HeatWave cluster is re-provisioned.
        /// </summary>
        [Input("shapeName", required: true)]
        public Input<string> ShapeName { get; set; } = null!;

        /// <summary>
        /// (Updatable) The target state for the HeatWave cluster. Could be set to `ACTIVE` or `INACTIVE`.
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public HeatWaveClusterArgs()
        {
        }
        public static new HeatWaveClusterArgs Empty => new HeatWaveClusterArgs();
    }

    public sealed class HeatWaveClusterState : global::Pulumi.ResourceArgs
    {
        [Input("clusterNodes")]
        private InputList<Inputs.HeatWaveClusterClusterNodeGetArgs>? _clusterNodes;

        /// <summary>
        /// A HeatWave node is a compute host that is part of a HeatWave cluster.
        /// </summary>
        public InputList<Inputs.HeatWaveClusterClusterNodeGetArgs> ClusterNodes
        {
            get => _clusterNodes ?? (_clusterNodes = new InputList<Inputs.HeatWaveClusterClusterNodeGetArgs>());
            set => _clusterNodes = value;
        }

        /// <summary>
        /// (Updatable) A change to the number of nodes in the HeatWave cluster will result in the entire cluster being torn down and re-created with the new cluster of nodes. This may result in a significant downtime for the analytics capability while the HeatWave cluster is re-provisioned.
        /// </summary>
        [Input("clusterSize")]
        public Input<int>? ClusterSize { get; set; }

        /// <summary>
        /// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("dbSystemId")]
        public Input<string>? DbSystemId { get; set; }

        /// <summary>
        /// (Updatable) Enable/disable Lakehouse for the HeatWave cluster.
        /// </summary>
        [Input("isLakehouseEnabled")]
        public Input<bool>? IsLakehouseEnabled { get; set; }

        /// <summary>
        /// Additional information about the current lifecycleState.
        /// </summary>
        [Input("lifecycleDetails")]
        public Input<string>? LifecycleDetails { get; set; }

        /// <summary>
        /// (Updatable) A change to the shape of the nodes in the HeatWave cluster will result in the entire cluster being torn down and re-created with Compute instances of the new Shape. This may result in significant downtime for the analytics capability while the HeatWave cluster is re-provisioned.
        /// </summary>
        [Input("shapeName")]
        public Input<string>? ShapeName { get; set; }

        /// <summary>
        /// (Updatable) The target state for the HeatWave cluster. Could be set to `ACTIVE` or `INACTIVE`.
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The date and time the HeatWave cluster was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The time the HeatWave cluster was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        public HeatWaveClusterState()
        {
        }
        public static new HeatWaveClusterState Empty => new HeatWaveClusterState();
    }
}
