// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Mysql.Inputs
{

    public sealed class MysqlBackupDbSystemSnapshotEndpointArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The network address of the DB System.
        /// </summary>
        [Input("hostname")]
        public Input<string>? Hostname { get; set; }

        /// <summary>
        /// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
        /// </summary>
        [Input("ipAddress")]
        public Input<string>? IpAddress { get; set; }

        [Input("modes")]
        private InputList<string>? _modes;

        /// <summary>
        /// The access modes from the client that this endpoint supports.
        /// </summary>
        public InputList<string> Modes
        {
            get => _modes ?? (_modes = new InputList<string>());
            set => _modes = value;
        }

        /// <summary>
        /// The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
        /// </summary>
        [Input("port")]
        public Input<int>? Port { get; set; }

        /// <summary>
        /// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
        /// </summary>
        [Input("portX")]
        public Input<int>? PortX { get; set; }

        /// <summary>
        /// The OCID of the resource that this endpoint is attached to.
        /// </summary>
        [Input("resourceId")]
        public Input<string>? ResourceId { get; set; }

        /// <summary>
        /// The type of endpoint that clients and connectors can connect to.
        /// </summary>
        [Input("resourceType")]
        public Input<string>? ResourceType { get; set; }

        /// <summary>
        /// The state of the endpoints, as far as it can seen from the DB System. There may be some inconsistency with the actual state of the MySQL service.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Additional information about the current endpoint status.
        /// </summary>
        [Input("statusDetails")]
        public Input<string>? StatusDetails { get; set; }

        public MysqlBackupDbSystemSnapshotEndpointArgs()
        {
        }
        public static new MysqlBackupDbSystemSnapshotEndpointArgs Empty => new MysqlBackupDbSystemSnapshotEndpointArgs();
    }
}
