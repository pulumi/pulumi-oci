// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Mysql.Inputs
{

    public sealed class MysqlDbSystemChannelGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The OCID of the compartment.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) The user-friendly name for the DB System. It does not have to be unique.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// The OCID of the DB System.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// (Updatable) Specifies if PITR is enabled or disabled.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// Additional information about the current lifecycleState.
        /// </summary>
        [Input("lifecycleDetails")]
        public Input<string>? LifecycleDetails { get; set; }

        [Input("sources")]
        private InputList<Inputs.MysqlDbSystemChannelSourceGetArgs>? _sources;

        /// <summary>
        /// Parameters detailing how to provision the initial data of the system.
        /// </summary>
        public InputList<Inputs.MysqlDbSystemChannelSourceGetArgs> Sources
        {
            get => _sources ?? (_sources = new InputList<Inputs.MysqlDbSystemChannelSourceGetArgs>());
            set => _sources = value;
        }

        /// <summary>
        /// (Updatable) The target state for the DB System. Could be set to `ACTIVE` or `INACTIVE`.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("targets")]
        private InputList<Inputs.MysqlDbSystemChannelTargetGetArgs>? _targets;

        /// <summary>
        /// Details about the Channel target.
        /// </summary>
        public InputList<Inputs.MysqlDbSystemChannelTargetGetArgs> Targets
        {
            get => _targets ?? (_targets = new InputList<Inputs.MysqlDbSystemChannelTargetGetArgs>());
            set => _targets = value;
        }

        /// <summary>
        /// The date and time the DB System was created.
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The time the DB System was last updated.
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        public MysqlDbSystemChannelGetArgs()
        {
        }
        public static new MysqlDbSystemChannelGetArgs Empty => new MysqlDbSystemChannelGetArgs();
    }
}
