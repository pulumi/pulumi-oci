// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Mysql.Outputs
{

    [OutputType]
    public sealed class GetChannelsChannelSourceResult
    {
        /// <summary>
        /// Specifies how the replication channel handles replicated transactions without an identifier, enabling replication from a source that does not use transaction-id-based replication to a replica that does.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetChannelsChannelSourceAnonymousTransactionsHandlingResult> AnonymousTransactionsHandlings;
        /// <summary>
        /// The network address of the MySQL instance.
        /// </summary>
        public readonly string Hostname;
        public readonly string Password;
        /// <summary>
        /// The port the source MySQL instance listens on.
        /// </summary>
        public readonly int Port;
        /// <summary>
        /// The specific source identifier.
        /// </summary>
        public readonly string SourceType;
        /// <summary>
        /// The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetChannelsChannelSourceSslCaCertificateResult> SslCaCertificates;
        /// <summary>
        /// The SSL mode of the Channel.
        /// </summary>
        public readonly string SslMode;
        /// <summary>
        /// The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
        /// </summary>
        public readonly string Username;

        [OutputConstructor]
        private GetChannelsChannelSourceResult(
            ImmutableArray<Outputs.GetChannelsChannelSourceAnonymousTransactionsHandlingResult> anonymousTransactionsHandlings,

            string hostname,

            string password,

            int port,

            string sourceType,

            ImmutableArray<Outputs.GetChannelsChannelSourceSslCaCertificateResult> sslCaCertificates,

            string sslMode,

            string username)
        {
            AnonymousTransactionsHandlings = anonymousTransactionsHandlings;
            Hostname = hostname;
            Password = password;
            Port = port;
            SourceType = sourceType;
            SslCaCertificates = sslCaCertificates;
            SslMode = sslMode;
            Username = username;
        }
    }
}
