// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Mysql.Outputs
{

    [OutputType]
    public sealed class GetMysqlBackupDbSystemSnapshotResult
    {
        /// <summary>
        /// The username for the administrative user.
        /// </summary>
        public readonly string AdminUsername;
        /// <summary>
        /// The Availability Domain where the primary DB System should be located.
        /// </summary>
        public readonly string AvailabilityDomain;
        /// <summary>
        /// The Backup policy for the DB System.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMysqlBackupDbSystemSnapshotBackupPolicyResult> BackupPolicies;
        /// <summary>
        /// The OCID of the compartment the DB System belongs in.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The OCID of the Configuration to be used for Instances in this DB System.
        /// </summary>
        public readonly string ConfigurationId;
        /// <summary>
        /// Whether to run the DB System with InnoDB Redo Logs and the Double Write Buffer enabled or disabled, and whether to enable or disable syncing of the Binary Logs.
        /// </summary>
        public readonly string CrashRecovery;
        /// <summary>
        /// DEPRECATED: User specified size of the data volume. May be less than current allocatedStorageSizeInGBs. Replaced by dataStorage.dataStorageSizeInGBs.
        /// </summary>
        public readonly int DataStorageSizeInGb;
        /// <summary>
        /// Data Storage information.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMysqlBackupDbSystemSnapshotDataStorageResult> DataStorages;
        /// <summary>
        /// Whether to enable monitoring via the Database Management service.
        /// </summary>
        public readonly string DatabaseManagement;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// The Deletion policy for the DB System.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMysqlBackupDbSystemSnapshotDeletionPolicyResult> DeletionPolicies;
        /// <summary>
        /// A user-supplied description for the backup.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// A user-supplied display name for the backup.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// The network endpoints available for this DB System.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMysqlBackupDbSystemSnapshotEndpointResult> Endpoints;
        /// <summary>
        /// The name of the Fault Domain the DB System is located in.
        /// </summary>
        public readonly string FaultDomain;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The hostname for the primary endpoint of the DB System. Used for DNS. The value is the hostname portion of the primary private IP's fully qualified domain name (FQDN) (for example, "dbsystem-1" in FQDN "dbsystem-1.subnet123.vcn1.oraclevcn.com"). Must be unique across all VNICs in the subnet and comply with RFC 952 and RFC 1123.
        /// </summary>
        public readonly string HostnameLabel;
        /// <summary>
        /// OCID of the backup itself
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
        /// </summary>
        public readonly string IpAddress;
        /// <summary>
        /// Specifies if the DB System is highly available.
        /// </summary>
        public readonly bool IsHighlyAvailable;
        /// <summary>
        /// The Maintenance Policy for the DB System or Read Replica that this model is included in.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMysqlBackupDbSystemSnapshotMaintenanceResult> Maintenances;
        /// <summary>
        /// The MySQL server version of the DB System used for backup.
        /// </summary>
        public readonly string MysqlVersion;
        /// <summary>
        /// Network Security Group OCIDs used for the VNIC attachment.
        /// </summary>
        public readonly ImmutableArray<string> NsgIds;
        /// <summary>
        /// The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
        /// </summary>
        public readonly int Port;
        /// <summary>
        /// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
        /// </summary>
        public readonly int PortX;
        /// <summary>
        /// The read endpoint of a DB System.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMysqlBackupDbSystemSnapshotReadEndpointResult> ReadEndpoints;
        /// <summary>
        /// The region identifier of the region where the DB system exists. For more information, please see [Regions and Availability Domains](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm).
        /// </summary>
        public readonly string Region;
        /// <summary>
        /// REST configuration details.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMysqlBackupDbSystemSnapshotRestResult> Rests;
        /// <summary>
        /// Secure connection configuration details.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMysqlBackupDbSystemSnapshotSecureConnectionResult> SecureConnections;
        /// <summary>
        /// The shape of the DB System instance used for backup.
        /// </summary>
        public readonly string ShapeName;
        /// <summary>
        /// The OCID of the subnet the DB System is associated with.
        /// </summary>
        public readonly string SubnetId;

        [OutputConstructor]
        private GetMysqlBackupDbSystemSnapshotResult(
            string adminUsername,

            string availabilityDomain,

            ImmutableArray<Outputs.GetMysqlBackupDbSystemSnapshotBackupPolicyResult> backupPolicies,

            string compartmentId,

            string configurationId,

            string crashRecovery,

            int dataStorageSizeInGb,

            ImmutableArray<Outputs.GetMysqlBackupDbSystemSnapshotDataStorageResult> dataStorages,

            string databaseManagement,

            ImmutableDictionary<string, string> definedTags,

            ImmutableArray<Outputs.GetMysqlBackupDbSystemSnapshotDeletionPolicyResult> deletionPolicies,

            string description,

            string displayName,

            ImmutableArray<Outputs.GetMysqlBackupDbSystemSnapshotEndpointResult> endpoints,

            string faultDomain,

            ImmutableDictionary<string, string> freeformTags,

            string hostnameLabel,

            string id,

            string ipAddress,

            bool isHighlyAvailable,

            ImmutableArray<Outputs.GetMysqlBackupDbSystemSnapshotMaintenanceResult> maintenances,

            string mysqlVersion,

            ImmutableArray<string> nsgIds,

            int port,

            int portX,

            ImmutableArray<Outputs.GetMysqlBackupDbSystemSnapshotReadEndpointResult> readEndpoints,

            string region,

            ImmutableArray<Outputs.GetMysqlBackupDbSystemSnapshotRestResult> rests,

            ImmutableArray<Outputs.GetMysqlBackupDbSystemSnapshotSecureConnectionResult> secureConnections,

            string shapeName,

            string subnetId)
        {
            AdminUsername = adminUsername;
            AvailabilityDomain = availabilityDomain;
            BackupPolicies = backupPolicies;
            CompartmentId = compartmentId;
            ConfigurationId = configurationId;
            CrashRecovery = crashRecovery;
            DataStorageSizeInGb = dataStorageSizeInGb;
            DataStorages = dataStorages;
            DatabaseManagement = databaseManagement;
            DefinedTags = definedTags;
            DeletionPolicies = deletionPolicies;
            Description = description;
            DisplayName = displayName;
            Endpoints = endpoints;
            FaultDomain = faultDomain;
            FreeformTags = freeformTags;
            HostnameLabel = hostnameLabel;
            Id = id;
            IpAddress = ipAddress;
            IsHighlyAvailable = isHighlyAvailable;
            Maintenances = maintenances;
            MysqlVersion = mysqlVersion;
            NsgIds = nsgIds;
            Port = port;
            PortX = portX;
            ReadEndpoints = readEndpoints;
            Region = region;
            Rests = rests;
            SecureConnections = secureConnections;
            ShapeName = shapeName;
            SubnetId = subnetId;
        }
    }
}
