// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Mysql.Outputs
{

    [OutputType]
    public sealed class GetMysqlConfigurationsConfigurationResult
    {
        /// <summary>
        /// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// User-provided data about the Configuration.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// A filter to return only the resource matching the given display name exactly.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// The OCID of the Configuration.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The OCID of the Configuration from which this Configuration is "derived". This is entirely a metadata relationship. There is no relation between the values in this Configuration and its parent.
        /// </summary>
        public readonly string ParentConfigurationId;
        /// <summary>
        /// The requested Shape name.
        /// </summary>
        public readonly string ShapeName;
        /// <summary>
        /// Configuration Lifecycle State
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The date and time the Configuration was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The date and time the Configuration was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
        /// </summary>
        public readonly string TimeUpdated;
        /// <summary>
        /// The requested Configuration types.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// User controllable service variables.
        /// </summary>
        public readonly Outputs.GetMysqlConfigurationsConfigurationVariablesResult Variables;

        [OutputConstructor]
        private GetMysqlConfigurationsConfigurationResult(
            string compartmentId,

            ImmutableDictionary<string, object> definedTags,

            string description,

            string displayName,

            ImmutableDictionary<string, object> freeformTags,

            string id,

            string parentConfigurationId,

            string shapeName,

            string state,

            string timeCreated,

            string timeUpdated,

            string type,

            Outputs.GetMysqlConfigurationsConfigurationVariablesResult variables)
        {
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            ParentConfigurationId = parentConfigurationId;
            ShapeName = shapeName;
            State = state;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            Type = type;
            Variables = variables;
        }
    }
}
