// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Mysql.Outputs
{

    [OutputType]
    public sealed class GetMysqlDbSystemsDbSystemResult
    {
        /// <summary>
        /// The access mode indicating if the database access is unrestricted (to all MySQL user accounts),  or restricted (to only certain users with specific privileges):
        /// * UNRESTRICTED: the access to the database is not restricted;
        /// * RESTRICTED: the access is allowed only to users with specific privileges;  RESTRICTED will correspond to setting the MySQL system variable  [offline_mode](https://dev.mysql.com/doc/en/server-system-variables.html#sysvar_offline_mode) to ON.
        /// </summary>
        public readonly string AccessMode;
        public readonly string AdminPassword;
        public readonly string AdminUsername;
        /// <summary>
        /// The availability domain in which the DB System is placed.
        /// </summary>
        public readonly string AvailabilityDomain;
        /// <summary>
        /// The Backup policy for the DB System.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMysqlDbSystemsDbSystemBackupPolicyResult> BackupPolicies;
        /// <summary>
        /// A list with a summary of all the Channels attached to the DB System.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMysqlDbSystemsDbSystemChannelResult> Channels;
        /// <summary>
        /// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The requested Configuration instance.
        /// </summary>
        public readonly string ConfigurationId;
        /// <summary>
        /// Whether to run the DB System with InnoDB Redo Logs and the Double Write Buffer enabled or disabled, and whether to enable or disable syncing of the Binary Logs.
        /// </summary>
        public readonly string CrashRecovery;
        /// <summary>
        /// The availability domain and fault domain a DB System is placed in.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMysqlDbSystemsDbSystemCurrentPlacementResult> CurrentPlacements;
        /// <summary>
        /// The list of customer email addresses that receive information from Oracle about the specified Oracle Cloud Infrastructure DB System resource.  Oracle uses these email addresses to send notifications about planned and unplanned software maintenance updates, information about system hardware, and other information needed by administrators.  Up to 10 email addresses can be added to the customer contacts for a DB System.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMysqlDbSystemsDbSystemCustomerContactResult> CustomerContacts;
        /// <summary>
        /// Initial size of the data volume in GiBs that will be created and attached.
        /// </summary>
        public readonly int DataStorageSizeInGb;
        /// <summary>
        /// Data Storage information.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMysqlDbSystemsDbSystemDataStorageResult> DataStorages;
        /// <summary>
        /// Filter DB Systems by their Database Management configuration.
        /// </summary>
        public readonly string DatabaseManagement;
        /// <summary>
        /// The database mode indicating the types of statements that are allowed to run in the the DB system. This mode applies only to statements run by user connections. Replicated write statements continue  to be allowed regardless of the DatabaseMode.
        /// * READ_WRITE: allow running read and write statements on the DB system;
        /// * READ_ONLY: only allow running read statements on the DB system.
        /// </summary>
        public readonly string DatabaseMode;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// The Deletion policy for the DB System.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMysqlDbSystemsDbSystemDeletionPolicyResult> DeletionPolicies;
        /// <summary>
        /// User-provided data about the DB System.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// A filter to return only the resource matching the given display name exactly.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Encrypt data details.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMysqlDbSystemsDbSystemEncryptDataResult> EncryptDatas;
        /// <summary>
        /// The network endpoints available for this DB System.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMysqlDbSystemsDbSystemEndpointResult> Endpoints;
        /// <summary>
        /// The fault domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
        /// </summary>
        public readonly string FaultDomain;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// A summary of a HeatWave cluster.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMysqlDbSystemsDbSystemHeatWaveClusterResult> HeatWaveClusters;
        /// <summary>
        /// The hostname for the primary endpoint of the DB System. Used for DNS. The value is the hostname portion of the primary private IP's fully qualified domain name (FQDN) (for example, "dbsystem-1" in FQDN "dbsystem-1.subnet123.vcn1.oraclevcn.com"). Must be unique across all VNICs in the subnet and comply with RFC 952 and RFC 1123.
        /// </summary>
        public readonly string HostnameLabel;
        /// <summary>
        /// The OCID of the DB System.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
        /// </summary>
        public readonly string IpAddress;
        /// <summary>
        /// If true, return only DB Systems with a HeatWave cluster attached, if false return only DB Systems with no HeatWave cluster attached. If not present, return all DB Systems.
        /// </summary>
        public readonly bool IsHeatWaveClusterAttached;
        /// <summary>
        /// Specifies if the DB System is highly available.
        /// </summary>
        public readonly bool IsHighlyAvailable;
        /// <summary>
        /// Additional information about the current lifecycleState.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// The Maintenance Policy for the DB System or Read Replica that this model is included in.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMysqlDbSystemsDbSystemMaintenanceResult> Maintenances;
        /// <summary>
        /// Name of the MySQL Version in use for the DB System.
        /// </summary>
        public readonly string MysqlVersion;
        /// <summary>
        /// Network Security Group OCIDs used for the VNIC attachment.
        /// </summary>
        public readonly ImmutableArray<string> NsgIds;
        /// <summary>
        /// Point-in-time Recovery details like earliest and latest recovery time point for the DB System.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailResult> PointInTimeRecoveryDetails;
        /// <summary>
        /// The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
        /// </summary>
        public readonly int Port;
        /// <summary>
        /// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
        /// </summary>
        public readonly int PortX;
        /// <summary>
        /// The read endpoint of a DB System.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMysqlDbSystemsDbSystemReadEndpointResult> ReadEndpoints;
        /// <summary>
        /// REST configuration details.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMysqlDbSystemsDbSystemRestResult> Rests;
        /// <summary>
        /// Secure connection configuration details.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMysqlDbSystemsDbSystemSecureConnectionResult> SecureConnections;
        /// <summary>
        /// The shape of the primary instances of the DB System. The shape determines resources allocated to a DB System - CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use (the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20181021/ShapeSummary/ListShapes) operation.
        /// </summary>
        public readonly string ShapeName;
        public readonly string ShutdownType;
        /// <summary>
        /// Parameters detailing how to provision the initial data of the DB System.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMysqlDbSystemsDbSystemSourceResult> Sources;
        /// <summary>
        /// DbSystem Lifecycle State
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The OCID of the subnet the DB System is associated with.
        /// </summary>
        public readonly string SubnetId;
        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// The date and time the DB System was created.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time the DB System was last updated.
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetMysqlDbSystemsDbSystemResult(
            string accessMode,

            string adminPassword,

            string adminUsername,

            string availabilityDomain,

            ImmutableArray<Outputs.GetMysqlDbSystemsDbSystemBackupPolicyResult> backupPolicies,

            ImmutableArray<Outputs.GetMysqlDbSystemsDbSystemChannelResult> channels,

            string compartmentId,

            string configurationId,

            string crashRecovery,

            ImmutableArray<Outputs.GetMysqlDbSystemsDbSystemCurrentPlacementResult> currentPlacements,

            ImmutableArray<Outputs.GetMysqlDbSystemsDbSystemCustomerContactResult> customerContacts,

            int dataStorageSizeInGb,

            ImmutableArray<Outputs.GetMysqlDbSystemsDbSystemDataStorageResult> dataStorages,

            string databaseManagement,

            string databaseMode,

            ImmutableDictionary<string, string> definedTags,

            ImmutableArray<Outputs.GetMysqlDbSystemsDbSystemDeletionPolicyResult> deletionPolicies,

            string description,

            string displayName,

            ImmutableArray<Outputs.GetMysqlDbSystemsDbSystemEncryptDataResult> encryptDatas,

            ImmutableArray<Outputs.GetMysqlDbSystemsDbSystemEndpointResult> endpoints,

            string faultDomain,

            ImmutableDictionary<string, string> freeformTags,

            ImmutableArray<Outputs.GetMysqlDbSystemsDbSystemHeatWaveClusterResult> heatWaveClusters,

            string hostnameLabel,

            string id,

            string ipAddress,

            bool isHeatWaveClusterAttached,

            bool isHighlyAvailable,

            string lifecycleDetails,

            ImmutableArray<Outputs.GetMysqlDbSystemsDbSystemMaintenanceResult> maintenances,

            string mysqlVersion,

            ImmutableArray<string> nsgIds,

            ImmutableArray<Outputs.GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailResult> pointInTimeRecoveryDetails,

            int port,

            int portX,

            ImmutableArray<Outputs.GetMysqlDbSystemsDbSystemReadEndpointResult> readEndpoints,

            ImmutableArray<Outputs.GetMysqlDbSystemsDbSystemRestResult> rests,

            ImmutableArray<Outputs.GetMysqlDbSystemsDbSystemSecureConnectionResult> secureConnections,

            string shapeName,

            string shutdownType,

            ImmutableArray<Outputs.GetMysqlDbSystemsDbSystemSourceResult> sources,

            string state,

            string subnetId,

            ImmutableDictionary<string, string> systemTags,

            string timeCreated,

            string timeUpdated)
        {
            AccessMode = accessMode;
            AdminPassword = adminPassword;
            AdminUsername = adminUsername;
            AvailabilityDomain = availabilityDomain;
            BackupPolicies = backupPolicies;
            Channels = channels;
            CompartmentId = compartmentId;
            ConfigurationId = configurationId;
            CrashRecovery = crashRecovery;
            CurrentPlacements = currentPlacements;
            CustomerContacts = customerContacts;
            DataStorageSizeInGb = dataStorageSizeInGb;
            DataStorages = dataStorages;
            DatabaseManagement = databaseManagement;
            DatabaseMode = databaseMode;
            DefinedTags = definedTags;
            DeletionPolicies = deletionPolicies;
            Description = description;
            DisplayName = displayName;
            EncryptDatas = encryptDatas;
            Endpoints = endpoints;
            FaultDomain = faultDomain;
            FreeformTags = freeformTags;
            HeatWaveClusters = heatWaveClusters;
            HostnameLabel = hostnameLabel;
            Id = id;
            IpAddress = ipAddress;
            IsHeatWaveClusterAttached = isHeatWaveClusterAttached;
            IsHighlyAvailable = isHighlyAvailable;
            LifecycleDetails = lifecycleDetails;
            Maintenances = maintenances;
            MysqlVersion = mysqlVersion;
            NsgIds = nsgIds;
            PointInTimeRecoveryDetails = pointInTimeRecoveryDetails;
            Port = port;
            PortX = portX;
            ReadEndpoints = readEndpoints;
            Rests = rests;
            SecureConnections = secureConnections;
            ShapeName = shapeName;
            ShutdownType = shutdownType;
            Sources = sources;
            State = state;
            SubnetId = subnetId;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
