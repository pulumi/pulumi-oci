// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Mysql.Outputs
{

    [OutputType]
    public sealed class GetReplicasReplicaResult
    {
        /// <summary>
        /// The name of the Availability Domain the read replica is located in.
        /// </summary>
        public readonly string AvailabilityDomain;
        /// <summary>
        /// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The requested Configuration instance.
        /// </summary>
        public readonly string ConfigurationId;
        /// <summary>
        /// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        public readonly string DbSystemId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// User provided description of the read replica.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// A filter to return only the resource matching the given display name exactly.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// The name of the Fault Domain the read replica is located in.
        /// </summary>
        public readonly string FaultDomain;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The OCID of the read replica.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The IP address the read replica is configured to listen on.
        /// </summary>
        public readonly string IpAddress;
        /// <summary>
        /// Specifies whether the read replica can be deleted. Set to true to prevent deletion, false (default) to allow. Note that if a read replica is delete protected it also prevents the entire DB System from being deleted. If the DB System is delete protected, read replicas can still be deleted individually if they are not delete  protected themselves.
        /// </summary>
        public readonly bool IsDeleteProtected;
        /// <summary>
        /// A message describing the state of the read replica.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// The MySQL version to be used by the read replica.
        /// </summary>
        public readonly string MysqlVersion;
        /// <summary>
        /// The port the read replica is configured to listen on.
        /// </summary>
        public readonly int Port;
        /// <summary>
        /// The TCP network port on which X Plugin listens for connections. This is the X Plugin equivalent of port.
        /// </summary>
        public readonly int PortX;
        /// <summary>
        /// By default a read replica inherits the MySQL version, shape, and configuration of the source DB system.  If you want to override any of these, provide values in the properties, mysqlVersion, shapeName,  and configurationId. If you set a property value to "", then the value is inherited from its  source DB system.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetReplicasReplicaReplicaOverrideResult> ReplicaOverrides;
        /// <summary>
        /// Secure connection configuration details.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetReplicasReplicaSecureConnectionResult> SecureConnections;
        /// <summary>
        /// The shape currently in use by the read replica. The shape determines the resources allocated:  CPU cores and memory for VM shapes, CPU cores, memory and storage for non-VM (bare metal) shapes.  To get a list of shapes, use the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20190415/ShapeSummary/ListShapes) operation.
        /// </summary>
        public readonly string ShapeName;
        /// <summary>
        /// The LifecycleState of the read replica.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The date and time the read replica was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time the read replica was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetReplicasReplicaResult(
            string availabilityDomain,

            string compartmentId,

            string configurationId,

            string dbSystemId,

            ImmutableDictionary<string, string> definedTags,

            string description,

            string displayName,

            string faultDomain,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            string ipAddress,

            bool isDeleteProtected,

            string lifecycleDetails,

            string mysqlVersion,

            int port,

            int portX,

            ImmutableArray<Outputs.GetReplicasReplicaReplicaOverrideResult> replicaOverrides,

            ImmutableArray<Outputs.GetReplicasReplicaSecureConnectionResult> secureConnections,

            string shapeName,

            string state,

            string timeCreated,

            string timeUpdated)
        {
            AvailabilityDomain = availabilityDomain;
            CompartmentId = compartmentId;
            ConfigurationId = configurationId;
            DbSystemId = dbSystemId;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            FaultDomain = faultDomain;
            FreeformTags = freeformTags;
            Id = id;
            IpAddress = ipAddress;
            IsDeleteProtected = isDeleteProtected;
            LifecycleDetails = lifecycleDetails;
            MysqlVersion = mysqlVersion;
            Port = port;
            PortX = portX;
            ReplicaOverrides = replicaOverrides;
            SecureConnections = secureConnections;
            ShapeName = shapeName;
            State = state;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
