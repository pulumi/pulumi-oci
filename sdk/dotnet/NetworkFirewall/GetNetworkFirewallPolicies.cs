// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.NetworkFirewall
{
    public static class GetNetworkFirewallPolicies
    {
        /// <summary>
        /// This data source provides the list of Network Firewall Policies in Oracle Cloud Infrastructure Network Firewall service.
        /// 
        /// Returns a list of Network Firewall Policies.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testNetworkFirewallPolicies = Oci.NetworkFirewall.GetNetworkFirewallPolicies.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = networkFirewallPolicyDisplayName,
        ///         Id = networkFirewallPolicyId,
        ///         State = networkFirewallPolicyState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetNetworkFirewallPoliciesResult> InvokeAsync(GetNetworkFirewallPoliciesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNetworkFirewallPoliciesResult>("oci:NetworkFirewall/getNetworkFirewallPolicies:getNetworkFirewallPolicies", args ?? new GetNetworkFirewallPoliciesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Network Firewall Policies in Oracle Cloud Infrastructure Network Firewall service.
        /// 
        /// Returns a list of Network Firewall Policies.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testNetworkFirewallPolicies = Oci.NetworkFirewall.GetNetworkFirewallPolicies.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = networkFirewallPolicyDisplayName,
        ///         Id = networkFirewallPolicyId,
        ///         State = networkFirewallPolicyState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNetworkFirewallPoliciesResult> Invoke(GetNetworkFirewallPoliciesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNetworkFirewallPoliciesResult>("oci:NetworkFirewall/getNetworkFirewallPolicies:getNetworkFirewallPolicies", args ?? new GetNetworkFirewallPoliciesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNetworkFirewallPoliciesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetNetworkFirewallPoliciesFilterArgs>? _filters;
        public List<Inputs.GetNetworkFirewallPoliciesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetNetworkFirewallPoliciesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Unique Network Firewall Policy identifier
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// A filter to return only resources with a lifecycleState matching the given value.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetNetworkFirewallPoliciesArgs()
        {
        }
        public static new GetNetworkFirewallPoliciesArgs Empty => new GetNetworkFirewallPoliciesArgs();
    }

    public sealed class GetNetworkFirewallPoliciesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetNetworkFirewallPoliciesFilterInputArgs>? _filters;
        public InputList<Inputs.GetNetworkFirewallPoliciesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetNetworkFirewallPoliciesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Unique Network Firewall Policy identifier
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// A filter to return only resources with a lifecycleState matching the given value.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetNetworkFirewallPoliciesInvokeArgs()
        {
        }
        public static new GetNetworkFirewallPoliciesInvokeArgs Empty => new GetNetworkFirewallPoliciesInvokeArgs();
    }


    [OutputType]
    public sealed class GetNetworkFirewallPoliciesResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the NetworkFirewall Policy.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// A user-friendly optional name for the firewall policy. Avoid entering confidential information.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetNetworkFirewallPoliciesFilterResult> Filters;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource - Network Firewall Policy.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The list of network_firewall_policy_summary_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionResult> NetworkFirewallPolicySummaryCollections;
        /// <summary>
        /// The current state of the Network Firewall Policy.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetNetworkFirewallPoliciesResult(
            string compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetNetworkFirewallPoliciesFilterResult> filters,

            string? id,

            ImmutableArray<Outputs.GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionResult> networkFirewallPolicySummaryCollections,

            string? state)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            NetworkFirewallPolicySummaryCollections = networkFirewallPolicySummaryCollections;
            State = state;
        }
    }
}
