// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.NetworkFirewall
{
    public static class GetNetworkFirewallPolicyMappedSecret
    {
        /// <summary>
        /// This data source provides details about a specific Network Firewall Policy Mapped Secret resource in Oracle Cloud Infrastructure Network Firewall service.
        /// 
        /// Get Mapped Secret by the given name in the context of network firewall policy.
        /// </summary>
        public static Task<GetNetworkFirewallPolicyMappedSecretResult> InvokeAsync(GetNetworkFirewallPolicyMappedSecretArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNetworkFirewallPolicyMappedSecretResult>("oci:NetworkFirewall/getNetworkFirewallPolicyMappedSecret:getNetworkFirewallPolicyMappedSecret", args ?? new GetNetworkFirewallPolicyMappedSecretArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Network Firewall Policy Mapped Secret resource in Oracle Cloud Infrastructure Network Firewall service.
        /// 
        /// Get Mapped Secret by the given name in the context of network firewall policy.
        /// </summary>
        public static Output<GetNetworkFirewallPolicyMappedSecretResult> Invoke(GetNetworkFirewallPolicyMappedSecretInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNetworkFirewallPolicyMappedSecretResult>("oci:NetworkFirewall/getNetworkFirewallPolicyMappedSecret:getNetworkFirewallPolicyMappedSecret", args ?? new GetNetworkFirewallPolicyMappedSecretInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Network Firewall Policy Mapped Secret resource in Oracle Cloud Infrastructure Network Firewall service.
        /// 
        /// Get Mapped Secret by the given name in the context of network firewall policy.
        /// </summary>
        public static Output<GetNetworkFirewallPolicyMappedSecretResult> Invoke(GetNetworkFirewallPolicyMappedSecretInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNetworkFirewallPolicyMappedSecretResult>("oci:NetworkFirewall/getNetworkFirewallPolicyMappedSecret:getNetworkFirewallPolicyMappedSecret", args ?? new GetNetworkFirewallPolicyMappedSecretInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNetworkFirewallPolicyMappedSecretArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the secret.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// Unique Network Firewall Policy identifier
        /// </summary>
        [Input("networkFirewallPolicyId", required: true)]
        public string NetworkFirewallPolicyId { get; set; } = null!;

        public GetNetworkFirewallPolicyMappedSecretArgs()
        {
        }
        public static new GetNetworkFirewallPolicyMappedSecretArgs Empty => new GetNetworkFirewallPolicyMappedSecretArgs();
    }

    public sealed class GetNetworkFirewallPolicyMappedSecretInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the secret.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Unique Network Firewall Policy identifier
        /// </summary>
        [Input("networkFirewallPolicyId", required: true)]
        public Input<string> NetworkFirewallPolicyId { get; set; } = null!;

        public GetNetworkFirewallPolicyMappedSecretInvokeArgs()
        {
        }
        public static new GetNetworkFirewallPolicyMappedSecretInvokeArgs Empty => new GetNetworkFirewallPolicyMappedSecretInvokeArgs();
    }


    [OutputType]
    public sealed class GetNetworkFirewallPolicyMappedSecretResult
    {
        public readonly string Id;
        /// <summary>
        /// Name of the secret.
        /// </summary>
        public readonly string Name;
        public readonly string NetworkFirewallPolicyId;
        /// <summary>
        /// OCID of the Network Firewall Policy this Mapped Secret belongs to.
        /// </summary>
        public readonly string ParentResourceId;
        /// <summary>
        /// Source of the secrets, where the secrets are stored.
        /// </summary>
        public readonly string Source;
        /// <summary>
        /// Type of the secrets mapped based on the policy.
        /// * `SSL_INBOUND_INSPECTION`: For Inbound inspection of SSL traffic.
        /// * `SSL_FORWARD_PROXY`: For forward proxy certificates for SSL inspection.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// OCID for the Vault Secret to be used.
        /// </summary>
        public readonly string VaultSecretId;
        /// <summary>
        /// Version number of the secret to be used.
        /// </summary>
        public readonly int VersionNumber;

        [OutputConstructor]
        private GetNetworkFirewallPolicyMappedSecretResult(
            string id,

            string name,

            string networkFirewallPolicyId,

            string parentResourceId,

            string source,

            string type,

            string vaultSecretId,

            int versionNumber)
        {
            Id = id;
            Name = name;
            NetworkFirewallPolicyId = networkFirewallPolicyId;
            ParentResourceId = parentResourceId;
            Source = source;
            Type = type;
            VaultSecretId = vaultSecretId;
            VersionNumber = versionNumber;
        }
    }
}
