// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.NetworkFirewall
{
    public static class GetNetworkFirewallPolicyNatRule
    {
        /// <summary>
        /// This data source provides details about a specific Network Firewall Policy Nat Rule resource in Oracle Cloud Infrastructure Network Firewall service.
        /// 
        /// Get NAT Rule by the given name in the context of network firewall policy.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testNetworkFirewallPolicyNatRule = Oci.NetworkFirewall.GetNetworkFirewallPolicyNatRule.Invoke(new()
        ///     {
        ///         NatRuleName = testRule.Name,
        ///         NetworkFirewallPolicyId = testNetworkFirewallPolicy.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetNetworkFirewallPolicyNatRuleResult> InvokeAsync(GetNetworkFirewallPolicyNatRuleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNetworkFirewallPolicyNatRuleResult>("oci:NetworkFirewall/getNetworkFirewallPolicyNatRule:getNetworkFirewallPolicyNatRule", args ?? new GetNetworkFirewallPolicyNatRuleArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Network Firewall Policy Nat Rule resource in Oracle Cloud Infrastructure Network Firewall service.
        /// 
        /// Get NAT Rule by the given name in the context of network firewall policy.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testNetworkFirewallPolicyNatRule = Oci.NetworkFirewall.GetNetworkFirewallPolicyNatRule.Invoke(new()
        ///     {
        ///         NatRuleName = testRule.Name,
        ///         NetworkFirewallPolicyId = testNetworkFirewallPolicy.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNetworkFirewallPolicyNatRuleResult> Invoke(GetNetworkFirewallPolicyNatRuleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNetworkFirewallPolicyNatRuleResult>("oci:NetworkFirewall/getNetworkFirewallPolicyNatRule:getNetworkFirewallPolicyNatRule", args ?? new GetNetworkFirewallPolicyNatRuleInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Network Firewall Policy Nat Rule resource in Oracle Cloud Infrastructure Network Firewall service.
        /// 
        /// Get NAT Rule by the given name in the context of network firewall policy.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testNetworkFirewallPolicyNatRule = Oci.NetworkFirewall.GetNetworkFirewallPolicyNatRule.Invoke(new()
        ///     {
        ///         NatRuleName = testRule.Name,
        ///         NetworkFirewallPolicyId = testNetworkFirewallPolicy.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNetworkFirewallPolicyNatRuleResult> Invoke(GetNetworkFirewallPolicyNatRuleInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNetworkFirewallPolicyNatRuleResult>("oci:NetworkFirewall/getNetworkFirewallPolicyNatRule:getNetworkFirewallPolicyNatRule", args ?? new GetNetworkFirewallPolicyNatRuleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNetworkFirewallPolicyNatRuleArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique identifier for NAT Rules in the network firewall policy.
        /// </summary>
        [Input("natRuleName", required: true)]
        public string NatRuleName { get; set; } = null!;

        /// <summary>
        /// Unique Network Firewall Policy identifier
        /// </summary>
        [Input("networkFirewallPolicyId", required: true)]
        public string NetworkFirewallPolicyId { get; set; } = null!;

        public GetNetworkFirewallPolicyNatRuleArgs()
        {
        }
        public static new GetNetworkFirewallPolicyNatRuleArgs Empty => new GetNetworkFirewallPolicyNatRuleArgs();
    }

    public sealed class GetNetworkFirewallPolicyNatRuleInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique identifier for NAT Rules in the network firewall policy.
        /// </summary>
        [Input("natRuleName", required: true)]
        public Input<string> NatRuleName { get; set; } = null!;

        /// <summary>
        /// Unique Network Firewall Policy identifier
        /// </summary>
        [Input("networkFirewallPolicyId", required: true)]
        public Input<string> NetworkFirewallPolicyId { get; set; } = null!;

        public GetNetworkFirewallPolicyNatRuleInvokeArgs()
        {
        }
        public static new GetNetworkFirewallPolicyNatRuleInvokeArgs Empty => new GetNetworkFirewallPolicyNatRuleInvokeArgs();
    }


    [OutputType]
    public sealed class GetNetworkFirewallPolicyNatRuleResult
    {
        /// <summary>
        /// action:
        /// * DIPP_SRC_NAT - Dynamic-ip-port source NAT.
        /// </summary>
        public readonly string Action;
        /// <summary>
        /// Match criteria used in NAT Rule used on the firewall policy.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNetworkFirewallPolicyNatRuleConditionResult> Conditions;
        /// <summary>
        /// Description of a NAT rule. This field can be used to add additional info.
        /// </summary>
        public readonly string Description;
        public readonly string Id;
        /// <summary>
        /// Name for the NAT rule, must be unique within the policy.
        /// </summary>
        public readonly string Name;
        public readonly string NatRuleName;
        public readonly string NetworkFirewallPolicyId;
        /// <summary>
        /// OCID of the Network Firewall Policy this decryption profile belongs to.
        /// </summary>
        public readonly string ParentResourceId;
        /// <summary>
        /// An object which defines the position of the rule.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNetworkFirewallPolicyNatRulePositionResult> Positions;
        /// <summary>
        /// The priority order in which this rule should be evaluated
        /// </summary>
        public readonly string PriorityOrder;
        /// <summary>
        /// NAT type:
        /// * NATV4 - NATV4 type NAT.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetNetworkFirewallPolicyNatRuleResult(
            string action,

            ImmutableArray<Outputs.GetNetworkFirewallPolicyNatRuleConditionResult> conditions,

            string description,

            string id,

            string name,

            string natRuleName,

            string networkFirewallPolicyId,

            string parentResourceId,

            ImmutableArray<Outputs.GetNetworkFirewallPolicyNatRulePositionResult> positions,

            string priorityOrder,

            string type)
        {
            Action = action;
            Conditions = conditions;
            Description = description;
            Id = id;
            Name = name;
            NatRuleName = natRuleName;
            NetworkFirewallPolicyId = networkFirewallPolicyId;
            ParentResourceId = parentResourceId;
            Positions = positions;
            PriorityOrder = priorityOrder;
            Type = type;
        }
    }
}
