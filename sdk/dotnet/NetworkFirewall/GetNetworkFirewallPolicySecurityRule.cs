// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.NetworkFirewall
{
    public static class GetNetworkFirewallPolicySecurityRule
    {
        /// <summary>
        /// This data source provides details about a specific Network Firewall Policy Security Rule resource in Oracle Cloud Infrastructure Network Firewall service.
        /// 
        /// Get Security Rule by the given name in the context of network firewall policy.
        /// </summary>
        public static Task<GetNetworkFirewallPolicySecurityRuleResult> InvokeAsync(GetNetworkFirewallPolicySecurityRuleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNetworkFirewallPolicySecurityRuleResult>("oci:NetworkFirewall/getNetworkFirewallPolicySecurityRule:getNetworkFirewallPolicySecurityRule", args ?? new GetNetworkFirewallPolicySecurityRuleArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Network Firewall Policy Security Rule resource in Oracle Cloud Infrastructure Network Firewall service.
        /// 
        /// Get Security Rule by the given name in the context of network firewall policy.
        /// </summary>
        public static Output<GetNetworkFirewallPolicySecurityRuleResult> Invoke(GetNetworkFirewallPolicySecurityRuleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNetworkFirewallPolicySecurityRuleResult>("oci:NetworkFirewall/getNetworkFirewallPolicySecurityRule:getNetworkFirewallPolicySecurityRule", args ?? new GetNetworkFirewallPolicySecurityRuleInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Network Firewall Policy Security Rule resource in Oracle Cloud Infrastructure Network Firewall service.
        /// 
        /// Get Security Rule by the given name in the context of network firewall policy.
        /// </summary>
        public static Output<GetNetworkFirewallPolicySecurityRuleResult> Invoke(GetNetworkFirewallPolicySecurityRuleInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNetworkFirewallPolicySecurityRuleResult>("oci:NetworkFirewall/getNetworkFirewallPolicySecurityRule:getNetworkFirewallPolicySecurityRule", args ?? new GetNetworkFirewallPolicySecurityRuleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNetworkFirewallPolicySecurityRuleArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name for the Security rule, must be unique within the policy.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// Unique Network Firewall Policy identifier
        /// </summary>
        [Input("networkFirewallPolicyId", required: true)]
        public string NetworkFirewallPolicyId { get; set; } = null!;

        public GetNetworkFirewallPolicySecurityRuleArgs()
        {
        }
        public static new GetNetworkFirewallPolicySecurityRuleArgs Empty => new GetNetworkFirewallPolicySecurityRuleArgs();
    }

    public sealed class GetNetworkFirewallPolicySecurityRuleInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name for the Security rule, must be unique within the policy.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Unique Network Firewall Policy identifier
        /// </summary>
        [Input("networkFirewallPolicyId", required: true)]
        public Input<string> NetworkFirewallPolicyId { get; set; } = null!;

        public GetNetworkFirewallPolicySecurityRuleInvokeArgs()
        {
        }
        public static new GetNetworkFirewallPolicySecurityRuleInvokeArgs Empty => new GetNetworkFirewallPolicySecurityRuleInvokeArgs();
    }


    [OutputType]
    public sealed class GetNetworkFirewallPolicySecurityRuleResult
    {
        /// <summary>
        /// Types of Action on the Traffic flow.
        /// * ALLOW - Allows the traffic.
        /// * DROP - Silently drops the traffic, e.g. without sending a TCP reset.
        /// * REJECT - Rejects the traffic, sending a TCP reset to client and/or server as applicable.
        /// * INSPECT - Inspects traffic for vulnerability as specified in `inspection`, which may result in rejection.
        /// </summary>
        public readonly string Action;
        /// <summary>
        /// Criteria to evaluate against network traffic. A match occurs when at least one item in the array associated with each specified property corresponds with the relevant aspect of the traffic.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNetworkFirewallPolicySecurityRuleConditionResult> Conditions;
        public readonly string Id;
        /// <summary>
        /// Type of inspection to affect the Traffic flow. This is only applicable if action is INSPECT.
        /// * INTRUSION_DETECTION - Intrusion Detection.
        /// * INTRUSION_PREVENTION - Intrusion Detection and Prevention. Traffic classified as potentially malicious will be rejected as described in `type`.
        /// </summary>
        public readonly string Inspection;
        /// <summary>
        /// Name for the Security rule, must be unique within the policy.
        /// </summary>
        public readonly string Name;
        public readonly string NetworkFirewallPolicyId;
        /// <summary>
        /// OCID of the Network Firewall Policy this security rule belongs to.
        /// </summary>
        public readonly string ParentResourceId;
        /// <summary>
        /// An object which defines the position of the rule.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNetworkFirewallPolicySecurityRulePositionResult> Positions;
        public readonly string PriorityOrder;

        [OutputConstructor]
        private GetNetworkFirewallPolicySecurityRuleResult(
            string action,

            ImmutableArray<Outputs.GetNetworkFirewallPolicySecurityRuleConditionResult> conditions,

            string id,

            string inspection,

            string name,

            string networkFirewallPolicyId,

            string parentResourceId,

            ImmutableArray<Outputs.GetNetworkFirewallPolicySecurityRulePositionResult> positions,

            string priorityOrder)
        {
            Action = action;
            Conditions = conditions;
            Id = id;
            Inspection = inspection;
            Name = name;
            NetworkFirewallPolicyId = networkFirewallPolicyId;
            ParentResourceId = parentResourceId;
            Positions = positions;
            PriorityOrder = priorityOrder;
        }
    }
}
