// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.NetworkFirewall
{
    public static class GetNetworkFirewallPolicyServices
    {
        /// <summary>
        /// This data source provides the list of Network Firewall Policy Services in Oracle Cloud Infrastructure Network Firewall service.
        /// 
        /// Returns a list of Services for the policy.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testNetworkFirewallPolicyServices = Oci.NetworkFirewall.GetNetworkFirewallPolicyServices.Invoke(new()
        ///     {
        ///         NetworkFirewallPolicyId = oci_network_firewall_network_firewall_policy.Test_network_firewall_policy.Id,
        ///         DisplayName = @var.Network_firewall_policy_service_display_name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetNetworkFirewallPolicyServicesResult> InvokeAsync(GetNetworkFirewallPolicyServicesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNetworkFirewallPolicyServicesResult>("oci:NetworkFirewall/getNetworkFirewallPolicyServices:getNetworkFirewallPolicyServices", args ?? new GetNetworkFirewallPolicyServicesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Network Firewall Policy Services in Oracle Cloud Infrastructure Network Firewall service.
        /// 
        /// Returns a list of Services for the policy.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testNetworkFirewallPolicyServices = Oci.NetworkFirewall.GetNetworkFirewallPolicyServices.Invoke(new()
        ///     {
        ///         NetworkFirewallPolicyId = oci_network_firewall_network_firewall_policy.Test_network_firewall_policy.Id,
        ///         DisplayName = @var.Network_firewall_policy_service_display_name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNetworkFirewallPolicyServicesResult> Invoke(GetNetworkFirewallPolicyServicesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNetworkFirewallPolicyServicesResult>("oci:NetworkFirewall/getNetworkFirewallPolicyServices:getNetworkFirewallPolicyServices", args ?? new GetNetworkFirewallPolicyServicesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNetworkFirewallPolicyServicesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetNetworkFirewallPolicyServicesFilterArgs>? _filters;
        public List<Inputs.GetNetworkFirewallPolicyServicesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetNetworkFirewallPolicyServicesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Unique Network Firewall Policy identifier
        /// </summary>
        [Input("networkFirewallPolicyId", required: true)]
        public string NetworkFirewallPolicyId { get; set; } = null!;

        public GetNetworkFirewallPolicyServicesArgs()
        {
        }
        public static new GetNetworkFirewallPolicyServicesArgs Empty => new GetNetworkFirewallPolicyServicesArgs();
    }

    public sealed class GetNetworkFirewallPolicyServicesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetNetworkFirewallPolicyServicesFilterInputArgs>? _filters;
        public InputList<Inputs.GetNetworkFirewallPolicyServicesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetNetworkFirewallPolicyServicesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Unique Network Firewall Policy identifier
        /// </summary>
        [Input("networkFirewallPolicyId", required: true)]
        public Input<string> NetworkFirewallPolicyId { get; set; } = null!;

        public GetNetworkFirewallPolicyServicesInvokeArgs()
        {
        }
        public static new GetNetworkFirewallPolicyServicesInvokeArgs Empty => new GetNetworkFirewallPolicyServicesInvokeArgs();
    }


    [OutputType]
    public sealed class GetNetworkFirewallPolicyServicesResult
    {
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetNetworkFirewallPolicyServicesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string NetworkFirewallPolicyId;
        /// <summary>
        /// The list of service_summary_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNetworkFirewallPolicyServicesServiceSummaryCollectionResult> ServiceSummaryCollections;

        [OutputConstructor]
        private GetNetworkFirewallPolicyServicesResult(
            string? displayName,

            ImmutableArray<Outputs.GetNetworkFirewallPolicyServicesFilterResult> filters,

            string id,

            string networkFirewallPolicyId,

            ImmutableArray<Outputs.GetNetworkFirewallPolicyServicesServiceSummaryCollectionResult> serviceSummaryCollections)
        {
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            NetworkFirewallPolicyId = networkFirewallPolicyId;
            ServiceSummaryCollections = serviceSummaryCollections;
        }
    }
}
