// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.NetworkFirewall
{
    public static class GetNetworkFirewallPolicyTunnelInspectionRule
    {
        /// <summary>
        /// This data source provides details about a specific Network Firewall Policy Tunnel Inspection Rule resource in Oracle Cloud Infrastructure Network Firewall service.
        /// 
        /// Get tunnel inspection rule by the given name in the context of network firewall policy.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testNetworkFirewallPolicyTunnelInspectionRule = Oci.NetworkFirewall.GetNetworkFirewallPolicyTunnelInspectionRule.Invoke(new()
        ///     {
        ///         NetworkFirewallPolicyId = testNetworkFirewallPolicy.Id,
        ///         TunnelInspectionRuleName = testRule.Name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetNetworkFirewallPolicyTunnelInspectionRuleResult> InvokeAsync(GetNetworkFirewallPolicyTunnelInspectionRuleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNetworkFirewallPolicyTunnelInspectionRuleResult>("oci:NetworkFirewall/getNetworkFirewallPolicyTunnelInspectionRule:getNetworkFirewallPolicyTunnelInspectionRule", args ?? new GetNetworkFirewallPolicyTunnelInspectionRuleArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Network Firewall Policy Tunnel Inspection Rule resource in Oracle Cloud Infrastructure Network Firewall service.
        /// 
        /// Get tunnel inspection rule by the given name in the context of network firewall policy.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testNetworkFirewallPolicyTunnelInspectionRule = Oci.NetworkFirewall.GetNetworkFirewallPolicyTunnelInspectionRule.Invoke(new()
        ///     {
        ///         NetworkFirewallPolicyId = testNetworkFirewallPolicy.Id,
        ///         TunnelInspectionRuleName = testRule.Name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNetworkFirewallPolicyTunnelInspectionRuleResult> Invoke(GetNetworkFirewallPolicyTunnelInspectionRuleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNetworkFirewallPolicyTunnelInspectionRuleResult>("oci:NetworkFirewall/getNetworkFirewallPolicyTunnelInspectionRule:getNetworkFirewallPolicyTunnelInspectionRule", args ?? new GetNetworkFirewallPolicyTunnelInspectionRuleInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Network Firewall Policy Tunnel Inspection Rule resource in Oracle Cloud Infrastructure Network Firewall service.
        /// 
        /// Get tunnel inspection rule by the given name in the context of network firewall policy.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testNetworkFirewallPolicyTunnelInspectionRule = Oci.NetworkFirewall.GetNetworkFirewallPolicyTunnelInspectionRule.Invoke(new()
        ///     {
        ///         NetworkFirewallPolicyId = testNetworkFirewallPolicy.Id,
        ///         TunnelInspectionRuleName = testRule.Name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNetworkFirewallPolicyTunnelInspectionRuleResult> Invoke(GetNetworkFirewallPolicyTunnelInspectionRuleInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNetworkFirewallPolicyTunnelInspectionRuleResult>("oci:NetworkFirewall/getNetworkFirewallPolicyTunnelInspectionRule:getNetworkFirewallPolicyTunnelInspectionRule", args ?? new GetNetworkFirewallPolicyTunnelInspectionRuleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNetworkFirewallPolicyTunnelInspectionRuleArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique Network Firewall Policy identifier
        /// </summary>
        [Input("networkFirewallPolicyId", required: true)]
        public string NetworkFirewallPolicyId { get; set; } = null!;

        /// <summary>
        /// Unique identifier for Tunnel Inspection Rules in the network firewall policy.
        /// </summary>
        [Input("tunnelInspectionRuleName", required: true)]
        public string TunnelInspectionRuleName { get; set; } = null!;

        public GetNetworkFirewallPolicyTunnelInspectionRuleArgs()
        {
        }
        public static new GetNetworkFirewallPolicyTunnelInspectionRuleArgs Empty => new GetNetworkFirewallPolicyTunnelInspectionRuleArgs();
    }

    public sealed class GetNetworkFirewallPolicyTunnelInspectionRuleInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique Network Firewall Policy identifier
        /// </summary>
        [Input("networkFirewallPolicyId", required: true)]
        public Input<string> NetworkFirewallPolicyId { get; set; } = null!;

        /// <summary>
        /// Unique identifier for Tunnel Inspection Rules in the network firewall policy.
        /// </summary>
        [Input("tunnelInspectionRuleName", required: true)]
        public Input<string> TunnelInspectionRuleName { get; set; } = null!;

        public GetNetworkFirewallPolicyTunnelInspectionRuleInvokeArgs()
        {
        }
        public static new GetNetworkFirewallPolicyTunnelInspectionRuleInvokeArgs Empty => new GetNetworkFirewallPolicyTunnelInspectionRuleInvokeArgs();
    }


    [OutputType]
    public sealed class GetNetworkFirewallPolicyTunnelInspectionRuleResult
    {
        /// <summary>
        /// Types of Inspect Action on the Traffic flow.
        /// * INSPECT - Inspect the traffic.
        /// * INSPECT_AND_CAPTURE_LOG - Inspect and capture logs for the traffic.
        /// </summary>
        public readonly string Action;
        /// <summary>
        /// Criteria to evaluate against incoming network traffic. A match occurs when at least one item in the array associated with each specified property corresponds with the relevant aspect of the traffic.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNetworkFirewallPolicyTunnelInspectionRuleConditionResult> Conditions;
        public readonly string Id;
        /// <summary>
        /// Name for the Tunnel Inspection Rule, must be unique within the policy.
        /// </summary>
        public readonly string Name;
        public readonly string NetworkFirewallPolicyId;
        /// <summary>
        /// OCID of the Network Firewall Policy this Tunnel Inspection Rule belongs to.
        /// </summary>
        public readonly string ParentResourceId;
        /// <summary>
        /// An object which defines the position of the rule.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNetworkFirewallPolicyTunnelInspectionRulePositionResult> Positions;
        /// <summary>
        /// The priority order in which this rule should be evaluated
        /// </summary>
        public readonly string PriorityOrder;
        /// <summary>
        /// Vxlan Inspect profile used in Vxlan Tunnel Inspection Rules.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNetworkFirewallPolicyTunnelInspectionRuleProfileResult> Profiles;
        /// <summary>
        /// Types of Tunnel Inspection Protocol to be applied on the traffic.
        /// * VXLAN - VXLAN Tunnel Inspection Protocol will be applied on the traffic.
        /// </summary>
        public readonly string Protocol;
        public readonly string TunnelInspectionRuleName;

        [OutputConstructor]
        private GetNetworkFirewallPolicyTunnelInspectionRuleResult(
            string action,

            ImmutableArray<Outputs.GetNetworkFirewallPolicyTunnelInspectionRuleConditionResult> conditions,

            string id,

            string name,

            string networkFirewallPolicyId,

            string parentResourceId,

            ImmutableArray<Outputs.GetNetworkFirewallPolicyTunnelInspectionRulePositionResult> positions,

            string priorityOrder,

            ImmutableArray<Outputs.GetNetworkFirewallPolicyTunnelInspectionRuleProfileResult> profiles,

            string protocol,

            string tunnelInspectionRuleName)
        {
            Action = action;
            Conditions = conditions;
            Id = id;
            Name = name;
            NetworkFirewallPolicyId = networkFirewallPolicyId;
            ParentResourceId = parentResourceId;
            Positions = positions;
            PriorityOrder = priorityOrder;
            Profiles = profiles;
            Protocol = protocol;
            TunnelInspectionRuleName = tunnelInspectionRuleName;
        }
    }
}
