// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.NetworkFirewall.Inputs
{

    public sealed class NetworkFirewallPolicyDecryptionProfileGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) Whether to block sessions if the server's certificate uses extensions other than key usage and/or extended key usage.
        /// </summary>
        [Input("areCertificateExtensionsRestricted")]
        public Input<bool>? AreCertificateExtensionsRestricted { get; set; }

        /// <summary>
        /// (Updatable) Whether to automatically append SAN to impersonating certificate if server certificate is missing SAN.
        /// </summary>
        [Input("isAutoIncludeAltName")]
        public Input<bool>? IsAutoIncludeAltName { get; set; }

        /// <summary>
        /// (Updatable) Whether to block sessions if server's certificate is expired.
        /// </summary>
        [Input("isExpiredCertificateBlocked")]
        public Input<bool>? IsExpiredCertificateBlocked { get; set; }

        /// <summary>
        /// (Updatable) Whether to block sessions if the firewall is temporarily unable to decrypt their traffic.
        /// </summary>
        [Input("isOutOfCapacityBlocked")]
        public Input<bool>? IsOutOfCapacityBlocked { get; set; }

        /// <summary>
        /// (Updatable) Whether to block sessions if the revocation status check for server's certificate does not succeed within the maximum allowed time (defaulting to 5 seconds).
        /// </summary>
        [Input("isRevocationStatusTimeoutBlocked")]
        public Input<bool>? IsRevocationStatusTimeoutBlocked { get; set; }

        /// <summary>
        /// (Updatable) Whether to block sessions if the revocation status check for server's certificate results in "unknown".
        /// </summary>
        [Input("isUnknownRevocationStatusBlocked")]
        public Input<bool>? IsUnknownRevocationStatusBlocked { get; set; }

        /// <summary>
        /// (Updatable) Whether to block sessions if SSL cipher suite is not supported.
        /// </summary>
        [Input("isUnsupportedCipherBlocked")]
        public Input<bool>? IsUnsupportedCipherBlocked { get; set; }

        /// <summary>
        /// (Updatable) Whether to block sessions if SSL version is not supported.
        /// </summary>
        [Input("isUnsupportedVersionBlocked")]
        public Input<bool>? IsUnsupportedVersionBlocked { get; set; }

        /// <summary>
        /// (Updatable) Whether to block sessions if server's certificate is issued by an untrusted certificate authority (CA).
        /// </summary>
        [Input("isUntrustedIssuerBlocked")]
        public Input<bool>? IsUntrustedIssuerBlocked { get; set; }

        [Input("key", required: true)]
        public Input<string> Key { get; set; } = null!;

        /// <summary>
        /// (Updatable) Type of the secrets mapped based on the policy.
        /// * `SSL_INBOUND_INSPECTION`: For Inbound inspection of SSL traffic.
        /// * `SSL_FORWARD_PROXY`: For forward proxy certificates for SSL inspection.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public NetworkFirewallPolicyDecryptionProfileGetArgs()
        {
        }
        public static new NetworkFirewallPolicyDecryptionProfileGetArgs Empty => new NetworkFirewallPolicyDecryptionProfileGetArgs();
    }
}
