// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.NetworkFirewall
{
    /// <summary>
    /// This resource provides the Network Firewall Policy Decryption Rule resource in Oracle Cloud Infrastructure Network Firewall service.
    /// 
    /// Creates a new Decryption Rule for the Network Firewall Policy.
    /// 
    /// ## Import
    /// 
    /// NetworkFirewallPolicyDecryptionRules can be imported using the `name`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import oci:NetworkFirewall/networkFirewallPolicyDecryptionRule:NetworkFirewallPolicyDecryptionRule test_network_firewall_policy_decryption_rule "networkFirewallPolicies/{networkFirewallPolicyId}/decryptionRules/{decryptionRuleName}"
    /// ```
    /// </summary>
    [OciResourceType("oci:NetworkFirewall/networkFirewallPolicyDecryptionRule:NetworkFirewallPolicyDecryptionRule")]
    public partial class NetworkFirewallPolicyDecryptionRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) Action:
        /// * NO_DECRYPT - Matching traffic is not decrypted.
        /// * DECRYPT - Matching traffic is decrypted with the specified `secret` according to the specified `decryptionProfile`.
        /// </summary>
        [Output("action")]
        public Output<string> Action { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Match criteria used in Decryption Rule used on the firewall policy rules. The resources mentioned must already be present in the policy before being referenced in the rule.
        /// </summary>
        [Output("condition")]
        public Output<Outputs.NetworkFirewallPolicyDecryptionRuleCondition> Condition { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The name of the decryption profile to use.
        /// </summary>
        [Output("decryptionProfile")]
        public Output<string?> DecryptionProfile { get; private set; } = null!;

        /// <summary>
        /// Name for the decryption rule, must be unique within the policy.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Unique Network Firewall Policy identifier
        /// </summary>
        [Output("networkFirewallPolicyId")]
        public Output<string> NetworkFirewallPolicyId { get; private set; } = null!;

        /// <summary>
        /// OCID of the Network Firewall Policy this decryption rule belongs to.
        /// </summary>
        [Output("parentResourceId")]
        public Output<string?> ParentResourceId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) An object which defines the position of the rule. Only one of `after_rule` or `before_rule` should be provided.
        /// </summary>
        [Output("position")]
        public Output<Outputs.NetworkFirewallPolicyDecryptionRulePosition?> Position { get; private set; } = null!;

        [Output("priorityOrder")]
        public Output<string?> PriorityOrder { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The name of a mapped secret. Its `type` must match that of the specified decryption profile.
        /// </summary>
        [Output("secret")]
        public Output<string?> Secret { get; private set; } = null!;


        /// <summary>
        /// Create a NetworkFirewallPolicyDecryptionRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NetworkFirewallPolicyDecryptionRule(string name, NetworkFirewallPolicyDecryptionRuleArgs args, CustomResourceOptions? options = null)
            : base("oci:NetworkFirewall/networkFirewallPolicyDecryptionRule:NetworkFirewallPolicyDecryptionRule", name, args ?? new NetworkFirewallPolicyDecryptionRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NetworkFirewallPolicyDecryptionRule(string name, Input<string> id, NetworkFirewallPolicyDecryptionRuleState? state = null, CustomResourceOptions? options = null)
            : base("oci:NetworkFirewall/networkFirewallPolicyDecryptionRule:NetworkFirewallPolicyDecryptionRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NetworkFirewallPolicyDecryptionRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NetworkFirewallPolicyDecryptionRule Get(string name, Input<string> id, NetworkFirewallPolicyDecryptionRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new NetworkFirewallPolicyDecryptionRule(name, id, state, options);
        }
    }

    public sealed class NetworkFirewallPolicyDecryptionRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) Action:
        /// * NO_DECRYPT - Matching traffic is not decrypted.
        /// * DECRYPT - Matching traffic is decrypted with the specified `secret` according to the specified `decryptionProfile`.
        /// </summary>
        [Input("action", required: true)]
        public Input<string> Action { get; set; } = null!;

        /// <summary>
        /// (Updatable) Match criteria used in Decryption Rule used on the firewall policy rules. The resources mentioned must already be present in the policy before being referenced in the rule.
        /// </summary>
        [Input("condition", required: true)]
        public Input<Inputs.NetworkFirewallPolicyDecryptionRuleConditionArgs> Condition { get; set; } = null!;

        /// <summary>
        /// (Updatable) The name of the decryption profile to use.
        /// </summary>
        [Input("decryptionProfile")]
        public Input<string>? DecryptionProfile { get; set; }

        /// <summary>
        /// Name for the decryption rule, must be unique within the policy.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Unique Network Firewall Policy identifier
        /// </summary>
        [Input("networkFirewallPolicyId", required: true)]
        public Input<string> NetworkFirewallPolicyId { get; set; } = null!;

        /// <summary>
        /// (Updatable) An object which defines the position of the rule. Only one of `after_rule` or `before_rule` should be provided.
        /// </summary>
        [Input("position")]
        public Input<Inputs.NetworkFirewallPolicyDecryptionRulePositionArgs>? Position { get; set; }

        [Input("priorityOrder")]
        public Input<string>? PriorityOrder { get; set; }

        /// <summary>
        /// (Updatable) The name of a mapped secret. Its `type` must match that of the specified decryption profile.
        /// </summary>
        [Input("secret")]
        public Input<string>? Secret { get; set; }

        public NetworkFirewallPolicyDecryptionRuleArgs()
        {
        }
        public static new NetworkFirewallPolicyDecryptionRuleArgs Empty => new NetworkFirewallPolicyDecryptionRuleArgs();
    }

    public sealed class NetworkFirewallPolicyDecryptionRuleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) Action:
        /// * NO_DECRYPT - Matching traffic is not decrypted.
        /// * DECRYPT - Matching traffic is decrypted with the specified `secret` according to the specified `decryptionProfile`.
        /// </summary>
        [Input("action")]
        public Input<string>? Action { get; set; }

        /// <summary>
        /// (Updatable) Match criteria used in Decryption Rule used on the firewall policy rules. The resources mentioned must already be present in the policy before being referenced in the rule.
        /// </summary>
        [Input("condition")]
        public Input<Inputs.NetworkFirewallPolicyDecryptionRuleConditionGetArgs>? Condition { get; set; }

        /// <summary>
        /// (Updatable) The name of the decryption profile to use.
        /// </summary>
        [Input("decryptionProfile")]
        public Input<string>? DecryptionProfile { get; set; }

        /// <summary>
        /// Name for the decryption rule, must be unique within the policy.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Unique Network Firewall Policy identifier
        /// </summary>
        [Input("networkFirewallPolicyId")]
        public Input<string>? NetworkFirewallPolicyId { get; set; }

        /// <summary>
        /// OCID of the Network Firewall Policy this decryption rule belongs to.
        /// </summary>
        [Input("parentResourceId")]
        public Input<string>? ParentResourceId { get; set; }

        /// <summary>
        /// (Updatable) An object which defines the position of the rule. Only one of `after_rule` or `before_rule` should be provided.
        /// </summary>
        [Input("position")]
        public Input<Inputs.NetworkFirewallPolicyDecryptionRulePositionGetArgs>? Position { get; set; }

        [Input("priorityOrder")]
        public Input<string>? PriorityOrder { get; set; }

        /// <summary>
        /// (Updatable) The name of a mapped secret. Its `type` must match that of the specified decryption profile.
        /// </summary>
        [Input("secret")]
        public Input<string>? Secret { get; set; }

        public NetworkFirewallPolicyDecryptionRuleState()
        {
        }
        public static new NetworkFirewallPolicyDecryptionRuleState Empty => new NetworkFirewallPolicyDecryptionRuleState();
    }
}
