// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.NetworkFirewall
{
    /// <summary>
    /// This resource provides the Network Firewall Policy Nat Rule resource in Oracle Cloud Infrastructure Network Firewall service.
    /// 
    /// Creates a new NAT Rule for the Network Firewall Policy.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testNetworkFirewallPolicyNatRule = new Oci.NetworkFirewall.NetworkFirewallPolicyNatRule("test_network_firewall_policy_nat_rule", new()
    ///     {
    ///         Action = networkFirewallPolicyNatRuleAction,
    ///         Condition = new Oci.NetworkFirewall.Inputs.NetworkFirewallPolicyNatRuleConditionArgs
    ///         {
    ///             DestinationAddresses = networkFirewallPolicyNatRuleConditionDestinationAddress,
    ///             Service = networkFirewallPolicyNatRuleConditionService,
    ///             SourceAddresses = networkFirewallPolicyNatRuleConditionSourceAddress,
    ///         },
    ///         Name = networkFirewallPolicyNatRuleName,
    ///         NetworkFirewallPolicyId = testNetworkFirewallPolicy.Id,
    ///         Type = networkFirewallPolicyNatRuleType,
    ///         Description = networkFirewallPolicyNatRuleDescription,
    ///         Position = new Oci.NetworkFirewall.Inputs.NetworkFirewallPolicyNatRulePositionArgs
    ///         {
    ///             AfterRule = networkFirewallPolicyNatRulePositionAfterRule,
    ///             BeforeRule = networkFirewallPolicyNatRulePositionBeforeRule,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// NetworkFirewallPolicyNatRules can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:NetworkFirewall/networkFirewallPolicyNatRule:NetworkFirewallPolicyNatRule test_network_firewall_policy_nat_rule "networkFirewallPolicies/{networkFirewallPolicyId}/natRules/{natRuleName}"
    /// ```
    /// </summary>
    [OciResourceType("oci:NetworkFirewall/networkFirewallPolicyNatRule:NetworkFirewallPolicyNatRule")]
    public partial class NetworkFirewallPolicyNatRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) action:
        /// * DIPP_SRC_NAT - Dynamic-ip-port source NAT.
        /// </summary>
        [Output("action")]
        public Output<string> Action { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Match criteria used in NAT Rule used on the firewall policy.
        /// </summary>
        [Output("condition")]
        public Output<Outputs.NetworkFirewallPolicyNatRuleCondition> Condition { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Description of a NAT rule. This field can be used to add additional info.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Name for the NAT rule, must be unique within the policy.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Unique Network Firewall Policy identifier
        /// </summary>
        [Output("networkFirewallPolicyId")]
        public Output<string> NetworkFirewallPolicyId { get; private set; } = null!;

        /// <summary>
        /// OCID of the Network Firewall Policy this decryption profile belongs to.
        /// </summary>
        [Output("parentResourceId")]
        public Output<string> ParentResourceId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) An object which defines the position of the rule.
        /// </summary>
        [Output("position")]
        public Output<Outputs.NetworkFirewallPolicyNatRulePosition> Position { get; private set; } = null!;

        /// <summary>
        /// The priority order in which this rule should be evaluated
        /// </summary>
        [Output("priorityOrder")]
        public Output<string> PriorityOrder { get; private set; } = null!;

        /// <summary>
        /// (Updatable) NAT type:
        /// * NATV4 - NATV4 type NAT.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a NetworkFirewallPolicyNatRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NetworkFirewallPolicyNatRule(string name, NetworkFirewallPolicyNatRuleArgs args, CustomResourceOptions? options = null)
            : base("oci:NetworkFirewall/networkFirewallPolicyNatRule:NetworkFirewallPolicyNatRule", name, args ?? new NetworkFirewallPolicyNatRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NetworkFirewallPolicyNatRule(string name, Input<string> id, NetworkFirewallPolicyNatRuleState? state = null, CustomResourceOptions? options = null)
            : base("oci:NetworkFirewall/networkFirewallPolicyNatRule:NetworkFirewallPolicyNatRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NetworkFirewallPolicyNatRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NetworkFirewallPolicyNatRule Get(string name, Input<string> id, NetworkFirewallPolicyNatRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new NetworkFirewallPolicyNatRule(name, id, state, options);
        }
    }

    public sealed class NetworkFirewallPolicyNatRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) action:
        /// * DIPP_SRC_NAT - Dynamic-ip-port source NAT.
        /// </summary>
        [Input("action", required: true)]
        public Input<string> Action { get; set; } = null!;

        /// <summary>
        /// (Updatable) Match criteria used in NAT Rule used on the firewall policy.
        /// </summary>
        [Input("condition", required: true)]
        public Input<Inputs.NetworkFirewallPolicyNatRuleConditionArgs> Condition { get; set; } = null!;

        /// <summary>
        /// (Updatable) Description of a NAT rule. This field can be used to add additional info.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Name for the NAT rule, must be unique within the policy.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Unique Network Firewall Policy identifier
        /// </summary>
        [Input("networkFirewallPolicyId", required: true)]
        public Input<string> NetworkFirewallPolicyId { get; set; } = null!;

        /// <summary>
        /// (Updatable) An object which defines the position of the rule.
        /// </summary>
        [Input("position")]
        public Input<Inputs.NetworkFirewallPolicyNatRulePositionArgs>? Position { get; set; }

        /// <summary>
        /// (Updatable) NAT type:
        /// * NATV4 - NATV4 type NAT.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public NetworkFirewallPolicyNatRuleArgs()
        {
        }
        public static new NetworkFirewallPolicyNatRuleArgs Empty => new NetworkFirewallPolicyNatRuleArgs();
    }

    public sealed class NetworkFirewallPolicyNatRuleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) action:
        /// * DIPP_SRC_NAT - Dynamic-ip-port source NAT.
        /// </summary>
        [Input("action")]
        public Input<string>? Action { get; set; }

        /// <summary>
        /// (Updatable) Match criteria used in NAT Rule used on the firewall policy.
        /// </summary>
        [Input("condition")]
        public Input<Inputs.NetworkFirewallPolicyNatRuleConditionGetArgs>? Condition { get; set; }

        /// <summary>
        /// (Updatable) Description of a NAT rule. This field can be used to add additional info.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Name for the NAT rule, must be unique within the policy.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Unique Network Firewall Policy identifier
        /// </summary>
        [Input("networkFirewallPolicyId")]
        public Input<string>? NetworkFirewallPolicyId { get; set; }

        /// <summary>
        /// OCID of the Network Firewall Policy this decryption profile belongs to.
        /// </summary>
        [Input("parentResourceId")]
        public Input<string>? ParentResourceId { get; set; }

        /// <summary>
        /// (Updatable) An object which defines the position of the rule.
        /// </summary>
        [Input("position")]
        public Input<Inputs.NetworkFirewallPolicyNatRulePositionGetArgs>? Position { get; set; }

        /// <summary>
        /// The priority order in which this rule should be evaluated
        /// </summary>
        [Input("priorityOrder")]
        public Input<string>? PriorityOrder { get; set; }

        /// <summary>
        /// (Updatable) NAT type:
        /// * NATV4 - NATV4 type NAT.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public NetworkFirewallPolicyNatRuleState()
        {
        }
        public static new NetworkFirewallPolicyNatRuleState Empty => new NetworkFirewallPolicyNatRuleState();
    }
}
