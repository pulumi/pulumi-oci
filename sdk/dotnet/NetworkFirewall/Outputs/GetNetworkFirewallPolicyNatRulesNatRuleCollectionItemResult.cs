// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.NetworkFirewall.Outputs
{

    [OutputType]
    public sealed class GetNetworkFirewallPolicyNatRulesNatRuleCollectionItemResult
    {
        /// <summary>
        /// action:
        /// * DIPP_SRC_NAT - Dynamic-ip-port source NAT.
        /// </summary>
        public readonly string Action;
        /// <summary>
        /// Match criteria used in NAT Rule used on the firewall policy.
        /// </summary>
        public readonly Outputs.GetNetworkFirewallPolicyNatRulesNatRuleCollectionItemConditionResult Condition;
        /// <summary>
        /// Description of a NAT rule. This field can be used to add additional info.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Name for the NAT rule, must be unique within the policy.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Unique Network Firewall Policy identifier
        /// </summary>
        public readonly string NetworkFirewallPolicyId;
        /// <summary>
        /// OCID of the Network Firewall Policy this decryption profile belongs to.
        /// </summary>
        public readonly string ParentResourceId;
        /// <summary>
        /// An object which defines the position of the rule.
        /// </summary>
        public readonly Outputs.GetNetworkFirewallPolicyNatRulesNatRuleCollectionItemPositionResult Position;
        /// <summary>
        /// The priority order in which this rule should be evaluated
        /// </summary>
        public readonly string PriorityOrder;
        /// <summary>
        /// NAT type:
        /// * NATV4 - NATV4 type NAT.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetNetworkFirewallPolicyNatRulesNatRuleCollectionItemResult(
            string action,

            Outputs.GetNetworkFirewallPolicyNatRulesNatRuleCollectionItemConditionResult condition,

            string? description,

            string name,

            string networkFirewallPolicyId,

            string parentResourceId,

            Outputs.GetNetworkFirewallPolicyNatRulesNatRuleCollectionItemPositionResult position,

            string priorityOrder,

            string type)
        {
            Action = action;
            Condition = condition;
            Description = description;
            Name = name;
            NetworkFirewallPolicyId = networkFirewallPolicyId;
            ParentResourceId = parentResourceId;
            Position = position;
            PriorityOrder = priorityOrder;
            Type = type;
        }
    }
}
