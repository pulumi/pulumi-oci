// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.NetworkFirewall.Outputs
{

    [OutputType]
    public sealed class GetNetworkFirewallPolicySecurityRulesSecurityRuleSummaryCollectionItemConditionResult
    {
        /// <summary>
        /// An array of application list names to be evaluated against the traffic protocol and protocol-specific parameters.
        /// </summary>
        public readonly ImmutableArray<string> Applications;
        /// <summary>
        /// An array of IP address list names to be evaluated against the traffic destination address.
        /// </summary>
        public readonly ImmutableArray<string> DestinationAddresses;
        /// <summary>
        /// An array of service list names to be evaluated against the traffic protocol and protocol-specific parameters.
        /// </summary>
        public readonly ImmutableArray<string> Services;
        /// <summary>
        /// An array of IP address list names to be evaluated against the traffic source address.
        /// </summary>
        public readonly ImmutableArray<string> SourceAddresses;
        /// <summary>
        /// An array of URL pattern list names to be evaluated against the HTTP(S) request target.
        /// </summary>
        public readonly ImmutableArray<string> Urls;

        [OutputConstructor]
        private GetNetworkFirewallPolicySecurityRulesSecurityRuleSummaryCollectionItemConditionResult(
            ImmutableArray<string> applications,

            ImmutableArray<string> destinationAddresses,

            ImmutableArray<string> services,

            ImmutableArray<string> sourceAddresses,

            ImmutableArray<string> urls)
        {
            Applications = applications;
            DestinationAddresses = destinationAddresses;
            Services = services;
            SourceAddresses = sourceAddresses;
            Urls = urls;
        }
    }
}
