// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.NetworkFirewall.Outputs
{

    [OutputType]
    public sealed class GetNetworkFirewallPolicySecurityRulesSecurityRuleSummaryCollectionItemResult
    {
        /// <summary>
        /// Types of Action on the Traffic flow.
        /// * ALLOW - Allows the traffic.
        /// * DROP - Silently drops the traffic, e.g. without sending a TCP reset.
        /// * REJECT - Rejects the traffic, sending a TCP reset to client and/or server as applicable.
        /// * INSPECT - Inspects traffic for vulnerability as specified in `Inspection`, which may result in rejection.
        /// </summary>
        public readonly string Action;
        /// <summary>
        /// Criteria to evaluate against network traffic. A match occurs when at least one item in the array associated with each specified property corresponds with the relevant aspect of the traffic.
        /// </summary>
        public readonly Outputs.GetNetworkFirewallPolicySecurityRulesSecurityRuleSummaryCollectionItemConditionResult Condition;
        /// <summary>
        /// Type of inspection to affect the Traffic flow. This is only applicable if action is INSPECT.
        /// * INTRUSION_DETECTION - Intrusion Detection.
        /// * INTRUSION_PREVENTION - Intrusion Detection and Prevention. Traffic classified as potentially malicious will be rejected as described in `Type`.
        /// </summary>
        public readonly string? Inspection;
        /// <summary>
        /// Name for the Security rule, must be unique within the policy.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Unique Network Firewall Policy identifier
        /// </summary>
        public readonly string NetworkFirewallPolicyId;
        /// <summary>
        /// OCID of the Network Firewall Policy this security rule belongs to.
        /// </summary>
        public readonly string ParentResourceId;
        /// <summary>
        /// An object which defines the position of the rule.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNetworkFirewallPolicySecurityRulesSecurityRuleSummaryCollectionItemPositionResult> Positions;
        public readonly string? PriorityOrder;

        [OutputConstructor]
        private GetNetworkFirewallPolicySecurityRulesSecurityRuleSummaryCollectionItemResult(
            string action,

            Outputs.GetNetworkFirewallPolicySecurityRulesSecurityRuleSummaryCollectionItemConditionResult condition,

            string? inspection,

            string name,

            string networkFirewallPolicyId,

            string parentResourceId,

            ImmutableArray<Outputs.GetNetworkFirewallPolicySecurityRulesSecurityRuleSummaryCollectionItemPositionResult> positions,

            string? priorityOrder)
        {
            Action = action;
            Condition = condition;
            Inspection = inspection;
            Name = name;
            NetworkFirewallPolicyId = networkFirewallPolicyId;
            ParentResourceId = parentResourceId;
            Positions = positions;
            PriorityOrder = priorityOrder;
        }
    }
}
