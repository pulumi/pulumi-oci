// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.NetworkFirewall.Outputs
{

    [OutputType]
    public sealed class GetNetworkFirewallPolicyTunnelInspectionRulesTunnelInspectionRuleSummaryCollectionItemResult
    {
        /// <summary>
        /// Types of Inspect Action on the Traffic flow.
        /// * INSPECT - Inspect the traffic.
        /// * INSPECT_AND_CAPTURE_LOG - Inspect and capture logs for the traffic.
        /// </summary>
        public readonly string Action;
        /// <summary>
        /// Criteria to evaluate against incoming network traffic. A match occurs when at least one item in the array associated with each specified property corresponds with the relevant aspect of the traffic.
        /// </summary>
        public readonly Outputs.GetNetworkFirewallPolicyTunnelInspectionRulesTunnelInspectionRuleSummaryCollectionItemConditionResult Condition;
        /// <summary>
        /// Name for the Tunnel Inspection Rule, must be unique within the policy.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Unique Network Firewall Policy identifier
        /// </summary>
        public readonly string NetworkFirewallPolicyId;
        /// <summary>
        /// OCID of the Network Firewall Policy this Tunnel Inspection Rule belongs to.
        /// </summary>
        public readonly string ParentResourceId;
        /// <summary>
        /// An object which defines the position of the rule.
        /// </summary>
        public readonly Outputs.GetNetworkFirewallPolicyTunnelInspectionRulesTunnelInspectionRuleSummaryCollectionItemPositionResult Position;
        /// <summary>
        /// The priority order in which this rule should be evaluated
        /// </summary>
        public readonly string PriorityOrder;
        /// <summary>
        /// Vxlan Inspect profile used in Vxlan Tunnel Inspection Rules.
        /// </summary>
        public readonly Outputs.GetNetworkFirewallPolicyTunnelInspectionRulesTunnelInspectionRuleSummaryCollectionItemProfileResult Profile;
        /// <summary>
        /// Types of Tunnel Inspection Protocol to be applied on the traffic.
        /// * VXLAN - VXLAN Tunnel Inspection Protocol will be applied on the traffic.
        /// </summary>
        public readonly string Protocol;

        [OutputConstructor]
        private GetNetworkFirewallPolicyTunnelInspectionRulesTunnelInspectionRuleSummaryCollectionItemResult(
            string action,

            Outputs.GetNetworkFirewallPolicyTunnelInspectionRulesTunnelInspectionRuleSummaryCollectionItemConditionResult condition,

            string name,

            string networkFirewallPolicyId,

            string parentResourceId,

            Outputs.GetNetworkFirewallPolicyTunnelInspectionRulesTunnelInspectionRuleSummaryCollectionItemPositionResult position,

            string priorityOrder,

            Outputs.GetNetworkFirewallPolicyTunnelInspectionRulesTunnelInspectionRuleSummaryCollectionItemProfileResult profile,

            string protocol)
        {
            Action = action;
            Condition = condition;
            Name = name;
            NetworkFirewallPolicyId = networkFirewallPolicyId;
            ParentResourceId = parentResourceId;
            Position = position;
            PriorityOrder = priorityOrder;
            Profile = profile;
            Protocol = protocol;
        }
    }
}
