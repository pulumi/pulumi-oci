// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.NetworkFirewall.Outputs
{

    [OutputType]
    public sealed class NetworkFirewallPolicyDecryptionRule
    {
        /// <summary>
        /// (Updatable) Types of Action on the Traffic flow.
        /// * ALLOW - Allows the traffic.
        /// * DROP - Silently drops the traffic, e.g. without sending a TCP reset.
        /// * REJECT - Rejects the traffic, sending a TCP reset to client and/or server as applicable.
        /// * INSPECT - Inspects traffic for vulnerability as specified in `inspection`, which may result in rejection.
        /// </summary>
        public readonly string Action;
        /// <summary>
        /// (Updatable) Criteria to evaluate against network traffic. A match occurs when at least one item in the array associated with each specified property corresponds with the relevant aspect of the traffic.
        /// </summary>
        public readonly Outputs.NetworkFirewallPolicyDecryptionRuleCondition Condition;
        /// <summary>
        /// (Updatable) The name of the decryption profile to use.
        /// </summary>
        public readonly string? DecryptionProfile;
        /// <summary>
        /// (Updatable) Name for the Security rule, must be unique within the policy.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// (Updatable) The name of a mapped secret. Its `type` must match that of the specified decryption profile.
        /// </summary>
        public readonly string? Secret;

        [OutputConstructor]
        private NetworkFirewallPolicyDecryptionRule(
            string action,

            Outputs.NetworkFirewallPolicyDecryptionRuleCondition condition,

            string? decryptionProfile,

            string name,

            string? secret)
        {
            Action = action;
            Condition = condition;
            DecryptionProfile = decryptionProfile;
            Name = name;
            Secret = secret;
        }
    }
}
