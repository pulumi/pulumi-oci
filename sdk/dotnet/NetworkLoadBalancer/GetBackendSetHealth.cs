// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.NetworkLoadBalancer
{
    public static class GetBackendSetHealth
    {
        public static Task<GetBackendSetHealthResult> InvokeAsync(GetBackendSetHealthArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBackendSetHealthResult>("oci:NetworkLoadBalancer/getBackendSetHealth:getBackendSetHealth", args ?? new GetBackendSetHealthArgs(), options.WithDefaults());

        public static Output<GetBackendSetHealthResult> Invoke(GetBackendSetHealthInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBackendSetHealthResult>("oci:NetworkLoadBalancer/getBackendSetHealth:getBackendSetHealth", args ?? new GetBackendSetHealthInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBackendSetHealthArgs : global::Pulumi.InvokeArgs
    {
        [Input("backendSetName", required: true)]
        public string BackendSetName { get; set; } = null!;

        [Input("networkLoadBalancerId", required: true)]
        public string NetworkLoadBalancerId { get; set; } = null!;

        public GetBackendSetHealthArgs()
        {
        }
        public static new GetBackendSetHealthArgs Empty => new GetBackendSetHealthArgs();
    }

    public sealed class GetBackendSetHealthInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("backendSetName", required: true)]
        public Input<string> BackendSetName { get; set; } = null!;

        [Input("networkLoadBalancerId", required: true)]
        public Input<string> NetworkLoadBalancerId { get; set; } = null!;

        public GetBackendSetHealthInvokeArgs()
        {
        }
        public static new GetBackendSetHealthInvokeArgs Empty => new GetBackendSetHealthInvokeArgs();
    }


    [OutputType]
    public sealed class GetBackendSetHealthResult
    {
        public readonly string BackendSetName;
        public readonly ImmutableArray<string> CriticalStateBackendNames;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string NetworkLoadBalancerId;
        public readonly string Status;
        public readonly int TotalBackendCount;
        public readonly ImmutableArray<string> UnknownStateBackendNames;
        public readonly ImmutableArray<string> WarningStateBackendNames;

        [OutputConstructor]
        private GetBackendSetHealthResult(
            string backendSetName,

            ImmutableArray<string> criticalStateBackendNames,

            string id,

            string networkLoadBalancerId,

            string status,

            int totalBackendCount,

            ImmutableArray<string> unknownStateBackendNames,

            ImmutableArray<string> warningStateBackendNames)
        {
            BackendSetName = backendSetName;
            CriticalStateBackendNames = criticalStateBackendNames;
            Id = id;
            NetworkLoadBalancerId = networkLoadBalancerId;
            Status = status;
            TotalBackendCount = totalBackendCount;
            UnknownStateBackendNames = unknownStateBackendNames;
            WarningStateBackendNames = warningStateBackendNames;
        }
    }
}
