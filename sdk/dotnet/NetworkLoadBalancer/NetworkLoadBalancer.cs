// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.NetworkLoadBalancer
{
    /// <summary>
    /// This resource provides the Network Load Balancer resource in Oracle Cloud Infrastructure Network Load Balancer service.
    /// 
    /// Creates a network load balancer.
    /// 
    /// ## Import
    /// 
    /// NetworkLoadBalancers can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:NetworkLoadBalancer/networkLoadBalancer:NetworkLoadBalancer test_network_load_balancer "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:NetworkLoadBalancer/networkLoadBalancer:NetworkLoadBalancer")]
    public partial class NetworkLoadBalancer : global::Pulumi.CustomResource
    {
        /// <summary>
        /// IPv6 address to be assigned to the network load balancer being created. This IP address has to be part of one of the prefixes supported by the subnet. Example: "2607:9b80:9a0a:9a7e:abcd:ef01:2345:6789"
        /// </summary>
        [Output("assignedIpv6")]
        public Output<string?> AssignedIpv6 { get; private set; } = null!;

        /// <summary>
        /// Private IP address to be assigned to the network load balancer being created. This IP address has to be in the CIDR range of the subnet where network load balancer is being created Example: "10.0.0.1"
        /// </summary>
        [Output("assignedPrivateIpv4")]
        public Output<string?> AssignedPrivateIpv4 { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the network load balancer.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, string>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Network load balancer identifier, which can be renamed.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, string>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// An array of IP addresses.
        /// </summary>
        [Output("ipAddresses")]
        public Output<ImmutableArray<Outputs.NetworkLoadBalancerIpAddress>> IpAddresses { get; private set; } = null!;

        /// <summary>
        /// (Updatable) This parameter can be enabled only if backends are compute OCIDs. When enabled, the skipSourceDestinationCheck parameter is automatically enabled on the load balancer VNIC, and packets are sent to the backend with the entire IP header intact.
        /// </summary>
        [Output("isPreserveSourceDestination")]
        public Output<bool> IsPreserveSourceDestination { get; private set; } = null!;

        /// <summary>
        /// Whether the network load balancer has a virtual cloud network-local (private) IP address.
        /// 
        /// If "true", then the service assigns a private IP address to the network load balancer.
        /// 
        /// If "false", then the service assigns a public IP address to the network load balancer.
        /// 
        /// A public network load balancer is accessible from the internet, depending on the [security list rules](https://docs.cloud.oracle.com/iaas/Content/network/Concepts/securitylists.htm) for your virtual cloud network. For more information about public and private network load balancers, see [Network Load Balancer Types](https://docs.cloud.oracle.com/iaas/Content/NetworkLoadBalancer/introduction.htm#NetworkLoadBalancerTypes). This value is true by default.
        /// 
        /// Example: `true`
        /// </summary>
        [Output("isPrivate")]
        public Output<bool> IsPrivate { get; private set; } = null!;

        /// <summary>
        /// (Updatable) This can only be enabled when NLB is working in transparent mode with source destination header preservation enabled.  This removes the additional dependency from NLB backends(like Firewalls) to perform SNAT. 
        /// 
        /// Example: `true`
        /// Example: `true`
        /// </summary>
        [Output("isSymmetricHashEnabled")]
        public Output<bool> IsSymmetricHashEnabled { get; private set; } = null!;

        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        [Output("lifecycleDetails")]
        public Output<string> LifecycleDetails { get; private set; } = null!;

        /// <summary>
        /// (Updatable) An array of network security groups [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with the network load balancer.
        /// 
        /// During the creation of the network load balancer, the service adds the new load balancer to the specified network security groups.
        /// 
        /// The benefits of associating the network load balancer with network security groups include:
        /// *  Network security groups define network security rules to govern ingress and egress traffic for the network load balancer.
        /// *  The network security rules of other resources can reference the network security groups associated with the network load balancer to ensure access.
        /// 
        /// Example: ["ocid1.nsg.oc1.phx.unique_ID"]
        /// </summary>
        [Output("networkSecurityGroupIds")]
        public Output<ImmutableArray<string>> NetworkSecurityGroupIds { get; private set; } = null!;

        /// <summary>
        /// (Updatable) IP version associated with the NLB.
        /// </summary>
        [Output("nlbIpVersion")]
        public Output<string> NlbIpVersion { get; private set; } = null!;

        /// <summary>
        /// An array of reserved Ips.
        /// </summary>
        [Output("reservedIps")]
        public Output<ImmutableArray<Outputs.NetworkLoadBalancerReservedIp>> ReservedIps { get; private set; } = null!;

        /// <summary>
        /// (Updatable) ZPR tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"oracle-zpr": {"td": {"value": "42", "mode": "audit"}}}`
        /// </summary>
        [Output("securityAttributes")]
        public Output<ImmutableDictionary<string, string>> SecurityAttributes { get; private set; } = null!;

        /// <summary>
        /// The current state of the network load balancer.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The subnet in which the network load balancer is spawned [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Output("subnetId")]
        public Output<string> SubnetId { get; private set; } = null!;

        /// <summary>
        /// IPv6 subnet prefix selection. If Ipv6 subnet prefix is passed, Nlb Ipv6 Address would be assign within the cidr block. NLB has to be dual or single stack ipv6 to support this.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("subnetIpv6cidr")]
        public Output<string?> SubnetIpv6cidr { get; private set; } = null!;

        /// <summary>
        /// Key-value pair representing system tags' keys and values scoped to a namespace. Example: `{"bar-key": "value"}`
        /// </summary>
        [Output("systemTags")]
        public Output<ImmutableDictionary<string, string>> SystemTags { get; private set; } = null!;

        /// <summary>
        /// The date and time the network load balancer was created, in the format defined by RFC3339.  Example: `2020-05-01T21:10:29.600Z`
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The time the network load balancer was updated. An RFC3339 formatted date-time string.  Example: `2020-05-01T22:10:29.600Z`
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;


        /// <summary>
        /// Create a NetworkLoadBalancer resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NetworkLoadBalancer(string name, NetworkLoadBalancerArgs args, CustomResourceOptions? options = null)
            : base("oci:NetworkLoadBalancer/networkLoadBalancer:NetworkLoadBalancer", name, args ?? new NetworkLoadBalancerArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NetworkLoadBalancer(string name, Input<string> id, NetworkLoadBalancerState? state = null, CustomResourceOptions? options = null)
            : base("oci:NetworkLoadBalancer/networkLoadBalancer:NetworkLoadBalancer", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NetworkLoadBalancer resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NetworkLoadBalancer Get(string name, Input<string> id, NetworkLoadBalancerState? state = null, CustomResourceOptions? options = null)
        {
            return new NetworkLoadBalancer(name, id, state, options);
        }
    }

    public sealed class NetworkLoadBalancerArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// IPv6 address to be assigned to the network load balancer being created. This IP address has to be part of one of the prefixes supported by the subnet. Example: "2607:9b80:9a0a:9a7e:abcd:ef01:2345:6789"
        /// </summary>
        [Input("assignedIpv6")]
        public Input<string>? AssignedIpv6 { get; set; }

        /// <summary>
        /// Private IP address to be assigned to the network load balancer being created. This IP address has to be in the CIDR range of the subnet where network load balancer is being created Example: "10.0.0.1"
        /// </summary>
        [Input("assignedPrivateIpv4")]
        public Input<string>? AssignedPrivateIpv4 { get; set; }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the network load balancer.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) Network load balancer identifier, which can be renamed.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) This parameter can be enabled only if backends are compute OCIDs. When enabled, the skipSourceDestinationCheck parameter is automatically enabled on the load balancer VNIC, and packets are sent to the backend with the entire IP header intact.
        /// </summary>
        [Input("isPreserveSourceDestination")]
        public Input<bool>? IsPreserveSourceDestination { get; set; }

        /// <summary>
        /// Whether the network load balancer has a virtual cloud network-local (private) IP address.
        /// 
        /// If "true", then the service assigns a private IP address to the network load balancer.
        /// 
        /// If "false", then the service assigns a public IP address to the network load balancer.
        /// 
        /// A public network load balancer is accessible from the internet, depending on the [security list rules](https://docs.cloud.oracle.com/iaas/Content/network/Concepts/securitylists.htm) for your virtual cloud network. For more information about public and private network load balancers, see [Network Load Balancer Types](https://docs.cloud.oracle.com/iaas/Content/NetworkLoadBalancer/introduction.htm#NetworkLoadBalancerTypes). This value is true by default.
        /// 
        /// Example: `true`
        /// </summary>
        [Input("isPrivate")]
        public Input<bool>? IsPrivate { get; set; }

        /// <summary>
        /// (Updatable) This can only be enabled when NLB is working in transparent mode with source destination header preservation enabled.  This removes the additional dependency from NLB backends(like Firewalls) to perform SNAT. 
        /// 
        /// Example: `true`
        /// Example: `true`
        /// </summary>
        [Input("isSymmetricHashEnabled")]
        public Input<bool>? IsSymmetricHashEnabled { get; set; }

        [Input("networkSecurityGroupIds")]
        private InputList<string>? _networkSecurityGroupIds;

        /// <summary>
        /// (Updatable) An array of network security groups [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with the network load balancer.
        /// 
        /// During the creation of the network load balancer, the service adds the new load balancer to the specified network security groups.
        /// 
        /// The benefits of associating the network load balancer with network security groups include:
        /// *  Network security groups define network security rules to govern ingress and egress traffic for the network load balancer.
        /// *  The network security rules of other resources can reference the network security groups associated with the network load balancer to ensure access.
        /// 
        /// Example: ["ocid1.nsg.oc1.phx.unique_ID"]
        /// </summary>
        public InputList<string> NetworkSecurityGroupIds
        {
            get => _networkSecurityGroupIds ?? (_networkSecurityGroupIds = new InputList<string>());
            set => _networkSecurityGroupIds = value;
        }

        /// <summary>
        /// (Updatable) IP version associated with the NLB.
        /// </summary>
        [Input("nlbIpVersion")]
        public Input<string>? NlbIpVersion { get; set; }

        [Input("reservedIps")]
        private InputList<Inputs.NetworkLoadBalancerReservedIpArgs>? _reservedIps;

        /// <summary>
        /// An array of reserved Ips.
        /// </summary>
        public InputList<Inputs.NetworkLoadBalancerReservedIpArgs> ReservedIps
        {
            get => _reservedIps ?? (_reservedIps = new InputList<Inputs.NetworkLoadBalancerReservedIpArgs>());
            set => _reservedIps = value;
        }

        [Input("securityAttributes")]
        private InputMap<string>? _securityAttributes;

        /// <summary>
        /// (Updatable) ZPR tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"oracle-zpr": {"td": {"value": "42", "mode": "audit"}}}`
        /// </summary>
        public InputMap<string> SecurityAttributes
        {
            get => _securityAttributes ?? (_securityAttributes = new InputMap<string>());
            set => _securityAttributes = value;
        }

        /// <summary>
        /// The subnet in which the network load balancer is spawned [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("subnetId", required: true)]
        public Input<string> SubnetId { get; set; } = null!;

        /// <summary>
        /// IPv6 subnet prefix selection. If Ipv6 subnet prefix is passed, Nlb Ipv6 Address would be assign within the cidr block. NLB has to be dual or single stack ipv6 to support this.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("subnetIpv6cidr")]
        public Input<string>? SubnetIpv6cidr { get; set; }

        public NetworkLoadBalancerArgs()
        {
        }
        public static new NetworkLoadBalancerArgs Empty => new NetworkLoadBalancerArgs();
    }

    public sealed class NetworkLoadBalancerState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// IPv6 address to be assigned to the network load balancer being created. This IP address has to be part of one of the prefixes supported by the subnet. Example: "2607:9b80:9a0a:9a7e:abcd:ef01:2345:6789"
        /// </summary>
        [Input("assignedIpv6")]
        public Input<string>? AssignedIpv6 { get; set; }

        /// <summary>
        /// Private IP address to be assigned to the network load balancer being created. This IP address has to be in the CIDR range of the subnet where network load balancer is being created Example: "10.0.0.1"
        /// </summary>
        [Input("assignedPrivateIpv4")]
        public Input<string>? AssignedPrivateIpv4 { get; set; }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the network load balancer.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) Network load balancer identifier, which can be renamed.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        [Input("ipAddresses")]
        private InputList<Inputs.NetworkLoadBalancerIpAddressGetArgs>? _ipAddresses;

        /// <summary>
        /// An array of IP addresses.
        /// </summary>
        public InputList<Inputs.NetworkLoadBalancerIpAddressGetArgs> IpAddresses
        {
            get => _ipAddresses ?? (_ipAddresses = new InputList<Inputs.NetworkLoadBalancerIpAddressGetArgs>());
            set => _ipAddresses = value;
        }

        /// <summary>
        /// (Updatable) This parameter can be enabled only if backends are compute OCIDs. When enabled, the skipSourceDestinationCheck parameter is automatically enabled on the load balancer VNIC, and packets are sent to the backend with the entire IP header intact.
        /// </summary>
        [Input("isPreserveSourceDestination")]
        public Input<bool>? IsPreserveSourceDestination { get; set; }

        /// <summary>
        /// Whether the network load balancer has a virtual cloud network-local (private) IP address.
        /// 
        /// If "true", then the service assigns a private IP address to the network load balancer.
        /// 
        /// If "false", then the service assigns a public IP address to the network load balancer.
        /// 
        /// A public network load balancer is accessible from the internet, depending on the [security list rules](https://docs.cloud.oracle.com/iaas/Content/network/Concepts/securitylists.htm) for your virtual cloud network. For more information about public and private network load balancers, see [Network Load Balancer Types](https://docs.cloud.oracle.com/iaas/Content/NetworkLoadBalancer/introduction.htm#NetworkLoadBalancerTypes). This value is true by default.
        /// 
        /// Example: `true`
        /// </summary>
        [Input("isPrivate")]
        public Input<bool>? IsPrivate { get; set; }

        /// <summary>
        /// (Updatable) This can only be enabled when NLB is working in transparent mode with source destination header preservation enabled.  This removes the additional dependency from NLB backends(like Firewalls) to perform SNAT. 
        /// 
        /// Example: `true`
        /// Example: `true`
        /// </summary>
        [Input("isSymmetricHashEnabled")]
        public Input<bool>? IsSymmetricHashEnabled { get; set; }

        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        [Input("lifecycleDetails")]
        public Input<string>? LifecycleDetails { get; set; }

        [Input("networkSecurityGroupIds")]
        private InputList<string>? _networkSecurityGroupIds;

        /// <summary>
        /// (Updatable) An array of network security groups [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with the network load balancer.
        /// 
        /// During the creation of the network load balancer, the service adds the new load balancer to the specified network security groups.
        /// 
        /// The benefits of associating the network load balancer with network security groups include:
        /// *  Network security groups define network security rules to govern ingress and egress traffic for the network load balancer.
        /// *  The network security rules of other resources can reference the network security groups associated with the network load balancer to ensure access.
        /// 
        /// Example: ["ocid1.nsg.oc1.phx.unique_ID"]
        /// </summary>
        public InputList<string> NetworkSecurityGroupIds
        {
            get => _networkSecurityGroupIds ?? (_networkSecurityGroupIds = new InputList<string>());
            set => _networkSecurityGroupIds = value;
        }

        /// <summary>
        /// (Updatable) IP version associated with the NLB.
        /// </summary>
        [Input("nlbIpVersion")]
        public Input<string>? NlbIpVersion { get; set; }

        [Input("reservedIps")]
        private InputList<Inputs.NetworkLoadBalancerReservedIpGetArgs>? _reservedIps;

        /// <summary>
        /// An array of reserved Ips.
        /// </summary>
        public InputList<Inputs.NetworkLoadBalancerReservedIpGetArgs> ReservedIps
        {
            get => _reservedIps ?? (_reservedIps = new InputList<Inputs.NetworkLoadBalancerReservedIpGetArgs>());
            set => _reservedIps = value;
        }

        [Input("securityAttributes")]
        private InputMap<string>? _securityAttributes;

        /// <summary>
        /// (Updatable) ZPR tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"oracle-zpr": {"td": {"value": "42", "mode": "audit"}}}`
        /// </summary>
        public InputMap<string> SecurityAttributes
        {
            get => _securityAttributes ?? (_securityAttributes = new InputMap<string>());
            set => _securityAttributes = value;
        }

        /// <summary>
        /// The current state of the network load balancer.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The subnet in which the network load balancer is spawned [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        /// <summary>
        /// IPv6 subnet prefix selection. If Ipv6 subnet prefix is passed, Nlb Ipv6 Address would be assign within the cidr block. NLB has to be dual or single stack ipv6 to support this.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("subnetIpv6cidr")]
        public Input<string>? SubnetIpv6cidr { get; set; }

        [Input("systemTags")]
        private InputMap<string>? _systemTags;

        /// <summary>
        /// Key-value pair representing system tags' keys and values scoped to a namespace. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<string> SystemTags
        {
            get => _systemTags ?? (_systemTags = new InputMap<string>());
            set => _systemTags = value;
        }

        /// <summary>
        /// The date and time the network load balancer was created, in the format defined by RFC3339.  Example: `2020-05-01T21:10:29.600Z`
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The time the network load balancer was updated. An RFC3339 formatted date-time string.  Example: `2020-05-01T22:10:29.600Z`
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        public NetworkLoadBalancerState()
        {
        }
        public static new NetworkLoadBalancerState Empty => new NetworkLoadBalancerState();
    }
}
