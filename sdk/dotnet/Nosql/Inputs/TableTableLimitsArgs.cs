// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Nosql.Inputs
{

    public sealed class TableTableLimitsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The capacity mode of the table.  If capacityMode = ON_DEMAND, maxReadUnits and maxWriteUnits are not used, and both will have the value of zero.
        /// </summary>
        [Input("capacityMode")]
        public Input<string>? CapacityMode { get; set; }

        /// <summary>
        /// (Updatable) Maximum sustained read throughput limit for the table.
        /// </summary>
        [Input("maxReadUnits", required: true)]
        public Input<int> MaxReadUnits { get; set; } = null!;

        /// <summary>
        /// (Updatable) Maximum size of storage used by the table.
        /// </summary>
        [Input("maxStorageInGbs", required: true)]
        public Input<int> MaxStorageInGbs { get; set; } = null!;

        /// <summary>
        /// (Updatable) Maximum sustained write throughput limit for the table.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that is not identified as "Updateable" will force the destruction and recreation of the resource with the new property values.
        /// </summary>
        [Input("maxWriteUnits", required: true)]
        public Input<int> MaxWriteUnits { get; set; } = null!;

        public TableTableLimitsArgs()
        {
        }
        public static new TableTableLimitsArgs Empty => new TableTableLimitsArgs();
    }
}
