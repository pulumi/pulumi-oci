// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ObjectStorage
{
    public static class GetObjectLifecyclePolicy
    {
        /// <summary>
        /// This data source provides details about a specific Object Lifecycle Policy resource in Oracle Cloud Infrastructure Object Storage service.
        /// 
        /// Gets the object lifecycle policy for the bucket.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testObjectLifecyclePolicy = Oci.ObjectStorage.GetObjectLifecyclePolicy.Invoke(new()
        ///     {
        ///         Bucket = @var.Object_lifecycle_policy_bucket,
        ///         Namespace = @var.Object_lifecycle_policy_namespace,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetObjectLifecyclePolicyResult> InvokeAsync(GetObjectLifecyclePolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetObjectLifecyclePolicyResult>("oci:ObjectStorage/getObjectLifecyclePolicy:getObjectLifecyclePolicy", args ?? new GetObjectLifecyclePolicyArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Object Lifecycle Policy resource in Oracle Cloud Infrastructure Object Storage service.
        /// 
        /// Gets the object lifecycle policy for the bucket.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testObjectLifecyclePolicy = Oci.ObjectStorage.GetObjectLifecyclePolicy.Invoke(new()
        ///     {
        ///         Bucket = @var.Object_lifecycle_policy_bucket,
        ///         Namespace = @var.Object_lifecycle_policy_namespace,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetObjectLifecyclePolicyResult> Invoke(GetObjectLifecyclePolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetObjectLifecyclePolicyResult>("oci:ObjectStorage/getObjectLifecyclePolicy:getObjectLifecyclePolicy", args ?? new GetObjectLifecyclePolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetObjectLifecyclePolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the bucket. Avoid entering confidential information. Example: `my-new-bucket1`
        /// </summary>
        [Input("bucket", required: true)]
        public string Bucket { get; set; } = null!;

        /// <summary>
        /// The Object Storage namespace used for the request.
        /// </summary>
        [Input("namespace", required: true)]
        public string Namespace { get; set; } = null!;

        public GetObjectLifecyclePolicyArgs()
        {
        }
        public static new GetObjectLifecyclePolicyArgs Empty => new GetObjectLifecyclePolicyArgs();
    }

    public sealed class GetObjectLifecyclePolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the bucket. Avoid entering confidential information. Example: `my-new-bucket1`
        /// </summary>
        [Input("bucket", required: true)]
        public Input<string> Bucket { get; set; } = null!;

        /// <summary>
        /// The Object Storage namespace used for the request.
        /// </summary>
        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        public GetObjectLifecyclePolicyInvokeArgs()
        {
        }
        public static new GetObjectLifecyclePolicyInvokeArgs Empty => new GetObjectLifecyclePolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetObjectLifecyclePolicyResult
    {
        public readonly string Bucket;
        public readonly string? Id;
        public readonly string Namespace;
        /// <summary>
        /// The live lifecycle policy on the bucket.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetObjectLifecyclePolicyRuleResult> Rules;
        /// <summary>
        /// The date and time the object lifecycle policy was created, as described in [RFC 3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        public readonly string? TimeCreated;

        [OutputConstructor]
        private GetObjectLifecyclePolicyResult(
            string bucket,

            string? id,

            string @namespace,

            ImmutableArray<Outputs.GetObjectLifecyclePolicyRuleResult> rules,

            string? timeCreated)
        {
            Bucket = bucket;
            Id = id;
            Namespace = @namespace;
            Rules = rules;
            TimeCreated = timeCreated;
        }
    }
}
