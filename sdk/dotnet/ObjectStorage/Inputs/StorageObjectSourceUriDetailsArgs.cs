// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ObjectStorage.Inputs
{

    public sealed class StorageObjectSourceUriDetailsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the bucket for the source object.
        /// </summary>
        [Input("bucket", required: true)]
        public Input<string> Bucket { get; set; } = null!;

        /// <summary>
        /// The entity tag to match the target object.
        /// </summary>
        [Input("destinationObjectIfMatchEtag")]
        public Input<string>? DestinationObjectIfMatchEtag { get; set; }

        /// <summary>
        /// The entity tag to not match the target object.
        /// </summary>
        [Input("destinationObjectIfNoneMatchEtag")]
        public Input<string>? DestinationObjectIfNoneMatchEtag { get; set; }

        /// <summary>
        /// The top-level namespace of the source object.
        /// </summary>
        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        /// <summary>
        /// The name of the source object.
        /// </summary>
        [Input("object", required: true)]
        public Input<string> Object { get; set; } = null!;

        /// <summary>
        /// The region of the source object.
        /// </summary>
        [Input("region", required: true)]
        public Input<string> Region { get; set; } = null!;

        /// <summary>
        /// The entity tag to match the source object.
        /// </summary>
        [Input("sourceObjectIfMatchEtag")]
        public Input<string>? SourceObjectIfMatchEtag { get; set; }

        /// <summary>
        /// The version id of the object to be restored.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("sourceVersionId")]
        public Input<string>? SourceVersionId { get; set; }

        public StorageObjectSourceUriDetailsArgs()
        {
        }
        public static new StorageObjectSourceUriDetailsArgs Empty => new StorageObjectSourceUriDetailsArgs();
    }
}
