// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ObjectStorage
{
    [OciResourceType("oci:ObjectStorage/privateEndpoint:PrivateEndpoint")]
    public partial class PrivateEndpoint : global::Pulumi.CustomResource
    {
        [Output("accessTargets")]
        public Output<ImmutableArray<Outputs.PrivateEndpointAccessTarget>> AccessTargets { get; private set; } = null!;

        [Output("additionalPrefixes")]
        public Output<ImmutableArray<string>> AdditionalPrefixes { get; private set; } = null!;

        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        [Output("createdBy")]
        public Output<string> CreatedBy { get; private set; } = null!;

        [Output("definedTags")]
        public Output<ImmutableDictionary<string, string>> DefinedTags { get; private set; } = null!;

        [Output("etag")]
        public Output<string> Etag { get; private set; } = null!;

        [Output("fqdns")]
        public Output<ImmutableDictionary<string, ImmutableDictionary<string, ImmutableDictionary<string, string>>>?> Fqdns { get; private set; } = null!;

        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, string>> FreeformTags { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("namespace")]
        public Output<string> Namespace { get; private set; } = null!;

        [Output("nsgIds")]
        public Output<ImmutableArray<string>> NsgIds { get; private set; } = null!;

        [Output("prefix")]
        public Output<string> Prefix { get; private set; } = null!;

        [Output("privateEndpointIp")]
        public Output<string> PrivateEndpointIp { get; private set; } = null!;

        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        [Output("subnetId")]
        public Output<string> SubnetId { get; private set; } = null!;

        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        [Output("timeModified")]
        public Output<string> TimeModified { get; private set; } = null!;


        /// <summary>
        /// Create a PrivateEndpoint resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PrivateEndpoint(string name, PrivateEndpointArgs args, CustomResourceOptions? options = null)
            : base("oci:ObjectStorage/privateEndpoint:PrivateEndpoint", name, args ?? new PrivateEndpointArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PrivateEndpoint(string name, Input<string> id, PrivateEndpointState? state = null, CustomResourceOptions? options = null)
            : base("oci:ObjectStorage/privateEndpoint:PrivateEndpoint", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PrivateEndpoint resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PrivateEndpoint Get(string name, Input<string> id, PrivateEndpointState? state = null, CustomResourceOptions? options = null)
        {
            return new PrivateEndpoint(name, id, state, options);
        }
    }

    public sealed class PrivateEndpointArgs : global::Pulumi.ResourceArgs
    {
        [Input("accessTargets", required: true)]
        private InputList<Inputs.PrivateEndpointAccessTargetArgs>? _accessTargets;
        public InputList<Inputs.PrivateEndpointAccessTargetArgs> AccessTargets
        {
            get => _accessTargets ?? (_accessTargets = new InputList<Inputs.PrivateEndpointAccessTargetArgs>());
            set => _accessTargets = value;
        }

        [Input("additionalPrefixes")]
        private InputList<string>? _additionalPrefixes;
        public InputList<string> AdditionalPrefixes
        {
            get => _additionalPrefixes ?? (_additionalPrefixes = new InputList<string>());
            set => _additionalPrefixes = value;
        }

        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("definedTags")]
        private InputMap<string>? _definedTags;
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        [Input("fqdns")]
        private InputMap<ImmutableDictionary<string, ImmutableDictionary<string, string>>>? _fqdns;
        public InputMap<ImmutableDictionary<string, ImmutableDictionary<string, string>>> Fqdns
        {
            get => _fqdns ?? (_fqdns = new InputMap<ImmutableDictionary<string, ImmutableDictionary<string, string>>>());
            set => _fqdns = value;
        }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        [Input("nsgIds")]
        private InputList<string>? _nsgIds;
        public InputList<string> NsgIds
        {
            get => _nsgIds ?? (_nsgIds = new InputList<string>());
            set => _nsgIds = value;
        }

        [Input("prefix", required: true)]
        public Input<string> Prefix { get; set; } = null!;

        [Input("privateEndpointIp")]
        public Input<string>? PrivateEndpointIp { get; set; }

        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("subnetId", required: true)]
        public Input<string> SubnetId { get; set; } = null!;

        public PrivateEndpointArgs()
        {
        }
        public static new PrivateEndpointArgs Empty => new PrivateEndpointArgs();
    }

    public sealed class PrivateEndpointState : global::Pulumi.ResourceArgs
    {
        [Input("accessTargets")]
        private InputList<Inputs.PrivateEndpointAccessTargetGetArgs>? _accessTargets;
        public InputList<Inputs.PrivateEndpointAccessTargetGetArgs> AccessTargets
        {
            get => _accessTargets ?? (_accessTargets = new InputList<Inputs.PrivateEndpointAccessTargetGetArgs>());
            set => _accessTargets = value;
        }

        [Input("additionalPrefixes")]
        private InputList<string>? _additionalPrefixes;
        public InputList<string> AdditionalPrefixes
        {
            get => _additionalPrefixes ?? (_additionalPrefixes = new InputList<string>());
            set => _additionalPrefixes = value;
        }

        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("createdBy")]
        public Input<string>? CreatedBy { get; set; }

        [Input("definedTags")]
        private InputMap<string>? _definedTags;
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        [Input("etag")]
        public Input<string>? Etag { get; set; }

        [Input("fqdns")]
        private InputMap<ImmutableDictionary<string, ImmutableDictionary<string, string>>>? _fqdns;
        public InputMap<ImmutableDictionary<string, ImmutableDictionary<string, string>>> Fqdns
        {
            get => _fqdns ?? (_fqdns = new InputMap<ImmutableDictionary<string, ImmutableDictionary<string, string>>>());
            set => _fqdns = value;
        }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        [Input("nsgIds")]
        private InputList<string>? _nsgIds;
        public InputList<string> NsgIds
        {
            get => _nsgIds ?? (_nsgIds = new InputList<string>());
            set => _nsgIds = value;
        }

        [Input("prefix")]
        public Input<string>? Prefix { get; set; }

        [Input("privateEndpointIp")]
        public Input<string>? PrivateEndpointIp { get; set; }

        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        [Input("timeModified")]
        public Input<string>? TimeModified { get; set; }

        public PrivateEndpointState()
        {
        }
        public static new PrivateEndpointState Empty => new PrivateEndpointState();
    }
}
