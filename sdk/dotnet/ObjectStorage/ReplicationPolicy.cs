// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ObjectStorage
{
    /// <summary>
    /// This resource provides the Replication Policy resource in Oracle Cloud Infrastructure Object Storage service.
    /// 
    /// Creates a replication policy for the specified bucket.
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testReplicationPolicy = new Oci.ObjectStorage.ReplicationPolicy("test_replication_policy", new()
    ///     {
    ///         Bucket = replicationPolicyBucket,
    ///         DestinationBucketName = testBucket.Name,
    ///         DestinationRegionName = testRegion.Name,
    ///         Name = replicationPolicyName,
    ///         Namespace = replicationPolicyNamespace,
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// ReplicationPolicies can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:ObjectStorage/replicationPolicy:ReplicationPolicy test_replication_policy "n/{namespaceName}/b/{bucketName}/replicationPolicies/{replicationId}"
    /// ```
    /// </summary>
    [OciResourceType("oci:ObjectStorage/replicationPolicy:ReplicationPolicy")]
    public partial class ReplicationPolicy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the bucket. Avoid entering confidential information. Example: `my-new-bucket1`
        /// </summary>
        [Output("bucket")]
        public Output<string> Bucket { get; private set; } = null!;

        [Output("deleteObjectInDestinationBucket")]
        public Output<string?> DeleteObjectInDestinationBucket { get; private set; } = null!;

        /// <summary>
        /// The bucket to replicate to in the destination region. Replication policy creation does not automatically create a destination bucket. Create the destination bucket before creating the policy.
        /// </summary>
        [Output("destinationBucketName")]
        public Output<string> DestinationBucketName { get; private set; } = null!;

        /// <summary>
        /// The destination region to replicate to, for example "us-ashburn-1".
        /// </summary>
        [Output("destinationRegionName")]
        public Output<string> DestinationRegionName { get; private set; } = null!;

        /// <summary>
        /// The name of the policy. Avoid entering confidential information.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The Object Storage namespace used for the request.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("namespace")]
        public Output<string> Namespace { get; private set; } = null!;

        /// <summary>
        /// The replication status of the policy. If the status is CLIENT_ERROR, once the user fixes the issue described in the status message, the status will become ACTIVE.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// A human-readable description of the status.
        /// </summary>
        [Output("statusMessage")]
        public Output<string> StatusMessage { get; private set; } = null!;

        /// <summary>
        /// The date when the replication policy was created as per [RFC 3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// Changes made to the source bucket before this time has been replicated.
        /// </summary>
        [Output("timeLastSync")]
        public Output<string> TimeLastSync { get; private set; } = null!;


        /// <summary>
        /// Create a ReplicationPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ReplicationPolicy(string name, ReplicationPolicyArgs args, CustomResourceOptions? options = null)
            : base("oci:ObjectStorage/replicationPolicy:ReplicationPolicy", name, args ?? new ReplicationPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ReplicationPolicy(string name, Input<string> id, ReplicationPolicyState? state = null, CustomResourceOptions? options = null)
            : base("oci:ObjectStorage/replicationPolicy:ReplicationPolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ReplicationPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ReplicationPolicy Get(string name, Input<string> id, ReplicationPolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new ReplicationPolicy(name, id, state, options);
        }
    }

    public sealed class ReplicationPolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the bucket. Avoid entering confidential information. Example: `my-new-bucket1`
        /// </summary>
        [Input("bucket", required: true)]
        public Input<string> Bucket { get; set; } = null!;

        [Input("deleteObjectInDestinationBucket")]
        public Input<string>? DeleteObjectInDestinationBucket { get; set; }

        /// <summary>
        /// The bucket to replicate to in the destination region. Replication policy creation does not automatically create a destination bucket. Create the destination bucket before creating the policy.
        /// </summary>
        [Input("destinationBucketName", required: true)]
        public Input<string> DestinationBucketName { get; set; } = null!;

        /// <summary>
        /// The destination region to replicate to, for example "us-ashburn-1".
        /// </summary>
        [Input("destinationRegionName", required: true)]
        public Input<string> DestinationRegionName { get; set; } = null!;

        /// <summary>
        /// The name of the policy. Avoid entering confidential information.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The Object Storage namespace used for the request.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        public ReplicationPolicyArgs()
        {
        }
        public static new ReplicationPolicyArgs Empty => new ReplicationPolicyArgs();
    }

    public sealed class ReplicationPolicyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the bucket. Avoid entering confidential information. Example: `my-new-bucket1`
        /// </summary>
        [Input("bucket")]
        public Input<string>? Bucket { get; set; }

        [Input("deleteObjectInDestinationBucket")]
        public Input<string>? DeleteObjectInDestinationBucket { get; set; }

        /// <summary>
        /// The bucket to replicate to in the destination region. Replication policy creation does not automatically create a destination bucket. Create the destination bucket before creating the policy.
        /// </summary>
        [Input("destinationBucketName")]
        public Input<string>? DestinationBucketName { get; set; }

        /// <summary>
        /// The destination region to replicate to, for example "us-ashburn-1".
        /// </summary>
        [Input("destinationRegionName")]
        public Input<string>? DestinationRegionName { get; set; }

        /// <summary>
        /// The name of the policy. Avoid entering confidential information.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The Object Storage namespace used for the request.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        /// <summary>
        /// The replication status of the policy. If the status is CLIENT_ERROR, once the user fixes the issue described in the status message, the status will become ACTIVE.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// A human-readable description of the status.
        /// </summary>
        [Input("statusMessage")]
        public Input<string>? StatusMessage { get; set; }

        /// <summary>
        /// The date when the replication policy was created as per [RFC 3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// Changes made to the source bucket before this time has been replicated.
        /// </summary>
        [Input("timeLastSync")]
        public Input<string>? TimeLastSync { get; set; }

        public ReplicationPolicyState()
        {
        }
        public static new ReplicationPolicyState Empty => new ReplicationPolicyState();
    }
}
