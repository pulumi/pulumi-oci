// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Oce
{
    public static class GetOceInstances
    {
        /// <summary>
        /// This data source provides the list of Oce Instances in Oracle Cloud Infrastructure Content and Experience service.
        /// 
        /// Returns a list of OceInstances.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOceInstances = Oci.Oce.GetOceInstances.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         DisplayName = @var.Oce_instance_display_name,
        ///         State = @var.Oce_instance_state,
        ///         TenancyId = oci_identity_tenancy.Test_tenancy.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetOceInstancesResult> InvokeAsync(GetOceInstancesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOceInstancesResult>("oci:Oce/getOceInstances:getOceInstances", args ?? new GetOceInstancesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Oce Instances in Oracle Cloud Infrastructure Content and Experience service.
        /// 
        /// Returns a list of OceInstances.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOceInstances = Oci.Oce.GetOceInstances.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         DisplayName = @var.Oce_instance_display_name,
        ///         State = @var.Oce_instance_state,
        ///         TenancyId = oci_identity_tenancy.Test_tenancy.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetOceInstancesResult> Invoke(GetOceInstancesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOceInstancesResult>("oci:Oce/getOceInstances:getOceInstances", args ?? new GetOceInstancesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOceInstancesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetOceInstancesFilterArgs>? _filters;
        public List<Inputs.GetOceInstancesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetOceInstancesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Filter results on lifecycleState.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        /// <summary>
        /// The ID of the tenancy in which to list resources.
        /// </summary>
        [Input("tenancyId")]
        public string? TenancyId { get; set; }

        public GetOceInstancesArgs()
        {
        }
        public static new GetOceInstancesArgs Empty => new GetOceInstancesArgs();
    }

    public sealed class GetOceInstancesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetOceInstancesFilterInputArgs>? _filters;
        public InputList<Inputs.GetOceInstancesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetOceInstancesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Filter results on lifecycleState.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The ID of the tenancy in which to list resources.
        /// </summary>
        [Input("tenancyId")]
        public Input<string>? TenancyId { get; set; }

        public GetOceInstancesInvokeArgs()
        {
        }
        public static new GetOceInstancesInvokeArgs Empty => new GetOceInstancesInvokeArgs();
    }


    [OutputType]
    public sealed class GetOceInstancesResult
    {
        /// <summary>
        /// Compartment Identifier
        /// </summary>
        public readonly string CompartmentId;
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetOceInstancesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The list of oce_instances.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetOceInstancesOceInstanceResult> OceInstances;
        /// <summary>
        /// The current state of the instance lifecycle.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// Tenancy Identifier
        /// </summary>
        public readonly string? TenancyId;

        [OutputConstructor]
        private GetOceInstancesResult(
            string compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetOceInstancesFilterResult> filters,

            string? id,

            ImmutableArray<Outputs.GetOceInstancesOceInstanceResult> oceInstances,

            string? state,

            string? tenancyId)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            OceInstances = oceInstances;
            State = state;
            TenancyId = tenancyId;
        }
    }
}
