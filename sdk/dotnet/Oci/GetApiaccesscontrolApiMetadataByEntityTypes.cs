// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Oci
{
    public static class GetApiaccesscontrolApiMetadataByEntityTypes
    {
        /// <summary>
        /// This data source provides the list of Api Metadata By Entity Types in Oracle Cloud Infrastructure Apiaccesscontrol service.
        /// 
        /// Gets a list of ApiMetadata Grouped By Entity Types.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testApiMetadataByEntityTypes = Oci.Oci.GetApiaccesscontrolApiMetadataByEntityTypes.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = apiMetadataByEntityTypeDisplayName,
        ///         ResourceType = apiMetadataByEntityTypeResourceType,
        ///         State = apiMetadataByEntityTypeState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetApiaccesscontrolApiMetadataByEntityTypesResult> InvokeAsync(GetApiaccesscontrolApiMetadataByEntityTypesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetApiaccesscontrolApiMetadataByEntityTypesResult>("oci:oci/getApiaccesscontrolApiMetadataByEntityTypes:getApiaccesscontrolApiMetadataByEntityTypes", args ?? new GetApiaccesscontrolApiMetadataByEntityTypesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Api Metadata By Entity Types in Oracle Cloud Infrastructure Apiaccesscontrol service.
        /// 
        /// Gets a list of ApiMetadata Grouped By Entity Types.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testApiMetadataByEntityTypes = Oci.Oci.GetApiaccesscontrolApiMetadataByEntityTypes.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = apiMetadataByEntityTypeDisplayName,
        ///         ResourceType = apiMetadataByEntityTypeResourceType,
        ///         State = apiMetadataByEntityTypeState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetApiaccesscontrolApiMetadataByEntityTypesResult> Invoke(GetApiaccesscontrolApiMetadataByEntityTypesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetApiaccesscontrolApiMetadataByEntityTypesResult>("oci:oci/getApiaccesscontrolApiMetadataByEntityTypes:getApiaccesscontrolApiMetadataByEntityTypes", args ?? new GetApiaccesscontrolApiMetadataByEntityTypesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Api Metadata By Entity Types in Oracle Cloud Infrastructure Apiaccesscontrol service.
        /// 
        /// Gets a list of ApiMetadata Grouped By Entity Types.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testApiMetadataByEntityTypes = Oci.Oci.GetApiaccesscontrolApiMetadataByEntityTypes.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = apiMetadataByEntityTypeDisplayName,
        ///         ResourceType = apiMetadataByEntityTypeResourceType,
        ///         State = apiMetadataByEntityTypeState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetApiaccesscontrolApiMetadataByEntityTypesResult> Invoke(GetApiaccesscontrolApiMetadataByEntityTypesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetApiaccesscontrolApiMetadataByEntityTypesResult>("oci:oci/getApiaccesscontrolApiMetadataByEntityTypes:getApiaccesscontrolApiMetadataByEntityTypes", args ?? new GetApiaccesscontrolApiMetadataByEntityTypesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApiaccesscontrolApiMetadataByEntityTypesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given display name exactly.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetApiaccesscontrolApiMetadataByEntityTypesFilterArgs>? _filters;
        public List<Inputs.GetApiaccesscontrolApiMetadataByEntityTypesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetApiaccesscontrolApiMetadataByEntityTypesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only lists of resources that match the entire given service type.
        /// </summary>
        [Input("resourceType")]
        public string? ResourceType { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetApiaccesscontrolApiMetadataByEntityTypesArgs()
        {
        }
        public static new GetApiaccesscontrolApiMetadataByEntityTypesArgs Empty => new GetApiaccesscontrolApiMetadataByEntityTypesArgs();
    }

    public sealed class GetApiaccesscontrolApiMetadataByEntityTypesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given display name exactly.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetApiaccesscontrolApiMetadataByEntityTypesFilterInputArgs>? _filters;
        public InputList<Inputs.GetApiaccesscontrolApiMetadataByEntityTypesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetApiaccesscontrolApiMetadataByEntityTypesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only lists of resources that match the entire given service type.
        /// </summary>
        [Input("resourceType")]
        public Input<string>? ResourceType { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetApiaccesscontrolApiMetadataByEntityTypesInvokeArgs()
        {
        }
        public static new GetApiaccesscontrolApiMetadataByEntityTypesInvokeArgs Empty => new GetApiaccesscontrolApiMetadataByEntityTypesInvokeArgs();
    }


    [OutputType]
    public sealed class GetApiaccesscontrolApiMetadataByEntityTypesResult
    {
        /// <summary>
        /// The list of api_metadata_by_entity_type_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetApiaccesscontrolApiMetadataByEntityTypesApiMetadataByEntityTypeCollectionResult> ApiMetadataByEntityTypeCollections;
        public readonly string? CompartmentId;
        /// <summary>
        /// Name of the Api.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetApiaccesscontrolApiMetadataByEntityTypesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? ResourceType;
        /// <summary>
        /// The current state of the ApiMetadata.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetApiaccesscontrolApiMetadataByEntityTypesResult(
            ImmutableArray<Outputs.GetApiaccesscontrolApiMetadataByEntityTypesApiMetadataByEntityTypeCollectionResult> apiMetadataByEntityTypeCollections,

            string? compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetApiaccesscontrolApiMetadataByEntityTypesFilterResult> filters,

            string id,

            string? resourceType,

            string? state)
        {
            ApiMetadataByEntityTypeCollections = apiMetadataByEntityTypeCollections;
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            ResourceType = resourceType;
            State = state;
        }
    }
}
