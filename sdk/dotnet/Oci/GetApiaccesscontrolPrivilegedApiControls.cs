// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Oci
{
    public static class GetApiaccesscontrolPrivilegedApiControls
    {
        /// <summary>
        /// This data source provides the list of Privileged Api Controls in Oracle Cloud Infrastructure Apiaccesscontrol service.
        /// 
        /// Gets a list of PrivilegedApiControls.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testPrivilegedApiControls = Oci.Oci.GetApiaccesscontrolPrivilegedApiControls.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = privilegedApiControlDisplayName,
        ///         Id = privilegedApiControlId,
        ///         ResourceType = privilegedApiControlResourceType,
        ///         State = privilegedApiControlState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetApiaccesscontrolPrivilegedApiControlsResult> InvokeAsync(GetApiaccesscontrolPrivilegedApiControlsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetApiaccesscontrolPrivilegedApiControlsResult>("oci:oci/getApiaccesscontrolPrivilegedApiControls:getApiaccesscontrolPrivilegedApiControls", args ?? new GetApiaccesscontrolPrivilegedApiControlsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Privileged Api Controls in Oracle Cloud Infrastructure Apiaccesscontrol service.
        /// 
        /// Gets a list of PrivilegedApiControls.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testPrivilegedApiControls = Oci.Oci.GetApiaccesscontrolPrivilegedApiControls.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = privilegedApiControlDisplayName,
        ///         Id = privilegedApiControlId,
        ///         ResourceType = privilegedApiControlResourceType,
        ///         State = privilegedApiControlState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetApiaccesscontrolPrivilegedApiControlsResult> Invoke(GetApiaccesscontrolPrivilegedApiControlsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetApiaccesscontrolPrivilegedApiControlsResult>("oci:oci/getApiaccesscontrolPrivilegedApiControls:getApiaccesscontrolPrivilegedApiControls", args ?? new GetApiaccesscontrolPrivilegedApiControlsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Privileged Api Controls in Oracle Cloud Infrastructure Apiaccesscontrol service.
        /// 
        /// Gets a list of PrivilegedApiControls.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testPrivilegedApiControls = Oci.Oci.GetApiaccesscontrolPrivilegedApiControls.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = privilegedApiControlDisplayName,
        ///         Id = privilegedApiControlId,
        ///         ResourceType = privilegedApiControlResourceType,
        ///         State = privilegedApiControlState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetApiaccesscontrolPrivilegedApiControlsResult> Invoke(GetApiaccesscontrolPrivilegedApiControlsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetApiaccesscontrolPrivilegedApiControlsResult>("oci:oci/getApiaccesscontrolPrivilegedApiControls:getApiaccesscontrolPrivilegedApiControls", args ?? new GetApiaccesscontrolPrivilegedApiControlsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApiaccesscontrolPrivilegedApiControlsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given display name exactly.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetApiaccesscontrolPrivilegedApiControlsFilterArgs>? _filters;
        public List<Inputs.GetApiaccesscontrolPrivilegedApiControlsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetApiaccesscontrolPrivilegedApiControlsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the PrivilegedApiControl.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// A filter to return only lists of resources that match the entire given service type.
        /// </summary>
        [Input("resourceType")]
        public string? ResourceType { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetApiaccesscontrolPrivilegedApiControlsArgs()
        {
        }
        public static new GetApiaccesscontrolPrivilegedApiControlsArgs Empty => new GetApiaccesscontrolPrivilegedApiControlsArgs();
    }

    public sealed class GetApiaccesscontrolPrivilegedApiControlsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given display name exactly.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetApiaccesscontrolPrivilegedApiControlsFilterInputArgs>? _filters;
        public InputList<Inputs.GetApiaccesscontrolPrivilegedApiControlsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetApiaccesscontrolPrivilegedApiControlsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the PrivilegedApiControl.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// A filter to return only lists of resources that match the entire given service type.
        /// </summary>
        [Input("resourceType")]
        public Input<string>? ResourceType { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetApiaccesscontrolPrivilegedApiControlsInvokeArgs()
        {
        }
        public static new GetApiaccesscontrolPrivilegedApiControlsInvokeArgs Empty => new GetApiaccesscontrolPrivilegedApiControlsInvokeArgs();
    }


    [OutputType]
    public sealed class GetApiaccesscontrolPrivilegedApiControlsResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// Name of the privilegedApi control. The name must be unique.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetApiaccesscontrolPrivilegedApiControlsFilterResult> Filters;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the PrivilegedApiControl.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The list of privileged_api_control_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetApiaccesscontrolPrivilegedApiControlsPrivilegedApiControlCollectionResult> PrivilegedApiControlCollections;
        /// <summary>
        /// resourceType for which the PrivilegedApiControl is applicable
        /// </summary>
        public readonly string? ResourceType;
        /// <summary>
        /// The current state of the PrivilegedApiControl.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetApiaccesscontrolPrivilegedApiControlsResult(
            string? compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetApiaccesscontrolPrivilegedApiControlsFilterResult> filters,

            string? id,

            ImmutableArray<Outputs.GetApiaccesscontrolPrivilegedApiControlsPrivilegedApiControlCollectionResult> privilegedApiControlCollections,

            string? resourceType,

            string? state)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            PrivilegedApiControlCollections = privilegedApiControlCollections;
            ResourceType = resourceType;
            State = state;
        }
    }
}
