// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Oci
{
    public static class GetDbmulticloudMultiCloudResourceDiscoveries
    {
        /// <summary>
        /// This data source provides the list of Multi Cloud Resource Discoveries in Oracle Cloud Infrastructure Dbmulticloud service.
        /// 
        /// Lists the all Multi Cloud Resource Discovery based on filters.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMultiCloudResourceDiscoveries = Oci.Oci.GetDbmulticloudMultiCloudResourceDiscoveries.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = multiCloudResourceDiscoveryDisplayName,
        ///         MultiCloudResourceDiscoveryId = testMultiCloudResourceDiscovery.Id,
        ///         OracleDbAzureConnectorId = testOracleDbAzureConnector.Id,
        ///         ResourceType = multiCloudResourceDiscoveryResourceType,
        ///         State = multiCloudResourceDiscoveryState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetDbmulticloudMultiCloudResourceDiscoveriesResult> InvokeAsync(GetDbmulticloudMultiCloudResourceDiscoveriesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDbmulticloudMultiCloudResourceDiscoveriesResult>("oci:oci/getDbmulticloudMultiCloudResourceDiscoveries:getDbmulticloudMultiCloudResourceDiscoveries", args ?? new GetDbmulticloudMultiCloudResourceDiscoveriesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Multi Cloud Resource Discoveries in Oracle Cloud Infrastructure Dbmulticloud service.
        /// 
        /// Lists the all Multi Cloud Resource Discovery based on filters.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMultiCloudResourceDiscoveries = Oci.Oci.GetDbmulticloudMultiCloudResourceDiscoveries.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = multiCloudResourceDiscoveryDisplayName,
        ///         MultiCloudResourceDiscoveryId = testMultiCloudResourceDiscovery.Id,
        ///         OracleDbAzureConnectorId = testOracleDbAzureConnector.Id,
        ///         ResourceType = multiCloudResourceDiscoveryResourceType,
        ///         State = multiCloudResourceDiscoveryState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDbmulticloudMultiCloudResourceDiscoveriesResult> Invoke(GetDbmulticloudMultiCloudResourceDiscoveriesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDbmulticloudMultiCloudResourceDiscoveriesResult>("oci:oci/getDbmulticloudMultiCloudResourceDiscoveries:getDbmulticloudMultiCloudResourceDiscoveries", args ?? new GetDbmulticloudMultiCloudResourceDiscoveriesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Multi Cloud Resource Discoveries in Oracle Cloud Infrastructure Dbmulticloud service.
        /// 
        /// Lists the all Multi Cloud Resource Discovery based on filters.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMultiCloudResourceDiscoveries = Oci.Oci.GetDbmulticloudMultiCloudResourceDiscoveries.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = multiCloudResourceDiscoveryDisplayName,
        ///         MultiCloudResourceDiscoveryId = testMultiCloudResourceDiscovery.Id,
        ///         OracleDbAzureConnectorId = testOracleDbAzureConnector.Id,
        ///         ResourceType = multiCloudResourceDiscoveryResourceType,
        ///         State = multiCloudResourceDiscoveryState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDbmulticloudMultiCloudResourceDiscoveriesResult> Invoke(GetDbmulticloudMultiCloudResourceDiscoveriesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDbmulticloudMultiCloudResourceDiscoveriesResult>("oci:oci/getDbmulticloudMultiCloudResourceDiscoveries:getDbmulticloudMultiCloudResourceDiscoveries", args ?? new GetDbmulticloudMultiCloudResourceDiscoveriesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDbmulticloudMultiCloudResourceDiscoveriesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [ID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// Display Name of the Multi Cloud Discovery Resource.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetDbmulticloudMultiCloudResourceDiscoveriesFilterArgs>? _filters;
        public List<Inputs.GetDbmulticloudMultiCloudResourceDiscoveriesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetDbmulticloudMultiCloudResourceDiscoveriesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Multi Cloud Discovery Resource.
        /// </summary>
        [Input("multiCloudResourceDiscoveryId")]
        public string? MultiCloudResourceDiscoveryId { get; set; }

        /// <summary>
        /// A filter to return Oracle DB Azure Blob Mount Resources.
        /// </summary>
        [Input("oracleDbAzureConnectorId")]
        public string? OracleDbAzureConnectorId { get; set; }

        /// <summary>
        /// The type of Multi Cloud Resource.
        /// </summary>
        [Input("resourceType")]
        public string? ResourceType { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetDbmulticloudMultiCloudResourceDiscoveriesArgs()
        {
        }
        public static new GetDbmulticloudMultiCloudResourceDiscoveriesArgs Empty => new GetDbmulticloudMultiCloudResourceDiscoveriesArgs();
    }

    public sealed class GetDbmulticloudMultiCloudResourceDiscoveriesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [ID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// Display Name of the Multi Cloud Discovery Resource.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetDbmulticloudMultiCloudResourceDiscoveriesFilterInputArgs>? _filters;
        public InputList<Inputs.GetDbmulticloudMultiCloudResourceDiscoveriesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetDbmulticloudMultiCloudResourceDiscoveriesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Multi Cloud Discovery Resource.
        /// </summary>
        [Input("multiCloudResourceDiscoveryId")]
        public Input<string>? MultiCloudResourceDiscoveryId { get; set; }

        /// <summary>
        /// A filter to return Oracle DB Azure Blob Mount Resources.
        /// </summary>
        [Input("oracleDbAzureConnectorId")]
        public Input<string>? OracleDbAzureConnectorId { get; set; }

        /// <summary>
        /// The type of Multi Cloud Resource.
        /// </summary>
        [Input("resourceType")]
        public Input<string>? ResourceType { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetDbmulticloudMultiCloudResourceDiscoveriesInvokeArgs()
        {
        }
        public static new GetDbmulticloudMultiCloudResourceDiscoveriesInvokeArgs Empty => new GetDbmulticloudMultiCloudResourceDiscoveriesInvokeArgs();
    }


    [OutputType]
    public sealed class GetDbmulticloudMultiCloudResourceDiscoveriesResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains Multi Cloud Discovery Resource.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Display name of Multi Cloud Discovery Resource.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetDbmulticloudMultiCloudResourceDiscoveriesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? MultiCloudResourceDiscoveryId;
        /// <summary>
        /// The list of multi_cloud_resource_discovery_summary_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDbmulticloudMultiCloudResourceDiscoveriesMultiCloudResourceDiscoverySummaryCollectionResult> MultiCloudResourceDiscoverySummaryCollections;
        public readonly string? OracleDbAzureConnectorId;
        /// <summary>
        /// Resource Type to discover.
        /// </summary>
        public readonly string? ResourceType;
        /// <summary>
        /// The current lifecycle state of the discovered resource.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetDbmulticloudMultiCloudResourceDiscoveriesResult(
            string compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetDbmulticloudMultiCloudResourceDiscoveriesFilterResult> filters,

            string id,

            string? multiCloudResourceDiscoveryId,

            ImmutableArray<Outputs.GetDbmulticloudMultiCloudResourceDiscoveriesMultiCloudResourceDiscoverySummaryCollectionResult> multiCloudResourceDiscoverySummaryCollections,

            string? oracleDbAzureConnectorId,

            string? resourceType,

            string? state)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            MultiCloudResourceDiscoveryId = multiCloudResourceDiscoveryId;
            MultiCloudResourceDiscoverySummaryCollections = multiCloudResourceDiscoverySummaryCollections;
            OracleDbAzureConnectorId = oracleDbAzureConnectorId;
            ResourceType = resourceType;
            State = state;
        }
    }
}
