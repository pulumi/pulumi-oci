// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Oci
{
    public static class GetDbmulticloudOracleDbAzureBlobMounts
    {
        /// <summary>
        /// This data source provides the list of Oracle Db Azure Blob Mounts in Oracle Cloud Infrastructure Dbmulticloud service.
        /// 
        /// Lists all Oracle DB Azure Blob Mount resources based on the specified filters.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOracleDbAzureBlobMounts = Oci.Oci.GetDbmulticloudOracleDbAzureBlobMounts.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = oracleDbAzureBlobMountDisplayName,
        ///         OracleDbAzureBlobContainerId = testOracleDbAzureBlobContainer.Id,
        ///         OracleDbAzureBlobMountId = testOracleDbAzureBlobMount.Id,
        ///         OracleDbAzureConnectorId = testOracleDbAzureConnector.Id,
        ///         State = oracleDbAzureBlobMountState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetDbmulticloudOracleDbAzureBlobMountsResult> InvokeAsync(GetDbmulticloudOracleDbAzureBlobMountsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDbmulticloudOracleDbAzureBlobMountsResult>("oci:oci/getDbmulticloudOracleDbAzureBlobMounts:getDbmulticloudOracleDbAzureBlobMounts", args ?? new GetDbmulticloudOracleDbAzureBlobMountsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Oracle Db Azure Blob Mounts in Oracle Cloud Infrastructure Dbmulticloud service.
        /// 
        /// Lists all Oracle DB Azure Blob Mount resources based on the specified filters.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOracleDbAzureBlobMounts = Oci.Oci.GetDbmulticloudOracleDbAzureBlobMounts.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = oracleDbAzureBlobMountDisplayName,
        ///         OracleDbAzureBlobContainerId = testOracleDbAzureBlobContainer.Id,
        ///         OracleDbAzureBlobMountId = testOracleDbAzureBlobMount.Id,
        ///         OracleDbAzureConnectorId = testOracleDbAzureConnector.Id,
        ///         State = oracleDbAzureBlobMountState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDbmulticloudOracleDbAzureBlobMountsResult> Invoke(GetDbmulticloudOracleDbAzureBlobMountsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDbmulticloudOracleDbAzureBlobMountsResult>("oci:oci/getDbmulticloudOracleDbAzureBlobMounts:getDbmulticloudOracleDbAzureBlobMounts", args ?? new GetDbmulticloudOracleDbAzureBlobMountsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Oracle Db Azure Blob Mounts in Oracle Cloud Infrastructure Dbmulticloud service.
        /// 
        /// Lists all Oracle DB Azure Blob Mount resources based on the specified filters.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOracleDbAzureBlobMounts = Oci.Oci.GetDbmulticloudOracleDbAzureBlobMounts.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = oracleDbAzureBlobMountDisplayName,
        ///         OracleDbAzureBlobContainerId = testOracleDbAzureBlobContainer.Id,
        ///         OracleDbAzureBlobMountId = testOracleDbAzureBlobMount.Id,
        ///         OracleDbAzureConnectorId = testOracleDbAzureConnector.Id,
        ///         State = oracleDbAzureBlobMountState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDbmulticloudOracleDbAzureBlobMountsResult> Invoke(GetDbmulticloudOracleDbAzureBlobMountsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDbmulticloudOracleDbAzureBlobMountsResult>("oci:oci/getDbmulticloudOracleDbAzureBlobMounts:getDbmulticloudOracleDbAzureBlobMounts", args ?? new GetDbmulticloudOracleDbAzureBlobMountsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDbmulticloudOracleDbAzureBlobMountsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [ID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return Oracle DB Azure Blob Mount resources that match the specified display name.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetDbmulticloudOracleDbAzureBlobMountsFilterArgs>? _filters;
        public List<Inputs.GetDbmulticloudOracleDbAzureBlobMountsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetDbmulticloudOracleDbAzureBlobMountsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return Oracle DB Azure Blob Container resource.
        /// </summary>
        [Input("oracleDbAzureBlobContainerId")]
        public string? OracleDbAzureBlobContainerId { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle DB Azure Blob Mount resource.
        /// </summary>
        [Input("oracleDbAzureBlobMountId")]
        public string? OracleDbAzureBlobMountId { get; set; }

        /// <summary>
        /// A filter to return Oracle DB Azure Azure Identity Connector resources.
        /// </summary>
        [Input("oracleDbAzureConnectorId")]
        public string? OracleDbAzureConnectorId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetDbmulticloudOracleDbAzureBlobMountsArgs()
        {
        }
        public static new GetDbmulticloudOracleDbAzureBlobMountsArgs Empty => new GetDbmulticloudOracleDbAzureBlobMountsArgs();
    }

    public sealed class GetDbmulticloudOracleDbAzureBlobMountsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [ID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return Oracle DB Azure Blob Mount resources that match the specified display name.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetDbmulticloudOracleDbAzureBlobMountsFilterInputArgs>? _filters;
        public InputList<Inputs.GetDbmulticloudOracleDbAzureBlobMountsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetDbmulticloudOracleDbAzureBlobMountsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return Oracle DB Azure Blob Container resource.
        /// </summary>
        [Input("oracleDbAzureBlobContainerId")]
        public Input<string>? OracleDbAzureBlobContainerId { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle DB Azure Blob Mount resource.
        /// </summary>
        [Input("oracleDbAzureBlobMountId")]
        public Input<string>? OracleDbAzureBlobMountId { get; set; }

        /// <summary>
        /// A filter to return Oracle DB Azure Azure Identity Connector resources.
        /// </summary>
        [Input("oracleDbAzureConnectorId")]
        public Input<string>? OracleDbAzureConnectorId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetDbmulticloudOracleDbAzureBlobMountsInvokeArgs()
        {
        }
        public static new GetDbmulticloudOracleDbAzureBlobMountsInvokeArgs Empty => new GetDbmulticloudOracleDbAzureBlobMountsInvokeArgs();
    }


    [OutputType]
    public sealed class GetDbmulticloudOracleDbAzureBlobMountsResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains Oracle DB Azure Blob Mount resource.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Oracle DB Azure Blob Mount resource name.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetDbmulticloudOracleDbAzureBlobMountsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle DB Azure Blob Container resource that contains Oracle DB Azure Blob Mount resource.
        /// </summary>
        public readonly string? OracleDbAzureBlobContainerId;
        public readonly string? OracleDbAzureBlobMountId;
        /// <summary>
        /// The list of oracle_db_azure_blob_mount_summary_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDbmulticloudOracleDbAzureBlobMountsOracleDbAzureBlobMountSummaryCollectionResult> OracleDbAzureBlobMountSummaryCollections;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle DB Azure Connector resource that contains Oracle DB Azure Blob Mount resource.
        /// </summary>
        public readonly string? OracleDbAzureConnectorId;
        /// <summary>
        /// The current lifecycle state of the Oracle DB Azure Blob Mount resource.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetDbmulticloudOracleDbAzureBlobMountsResult(
            string compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetDbmulticloudOracleDbAzureBlobMountsFilterResult> filters,

            string id,

            string? oracleDbAzureBlobContainerId,

            string? oracleDbAzureBlobMountId,

            ImmutableArray<Outputs.GetDbmulticloudOracleDbAzureBlobMountsOracleDbAzureBlobMountSummaryCollectionResult> oracleDbAzureBlobMountSummaryCollections,

            string? oracleDbAzureConnectorId,

            string? state)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            OracleDbAzureBlobContainerId = oracleDbAzureBlobContainerId;
            OracleDbAzureBlobMountId = oracleDbAzureBlobMountId;
            OracleDbAzureBlobMountSummaryCollections = oracleDbAzureBlobMountSummaryCollections;
            OracleDbAzureConnectorId = oracleDbAzureConnectorId;
            State = state;
        }
    }
}
