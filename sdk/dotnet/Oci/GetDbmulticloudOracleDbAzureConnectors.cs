// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Oci
{
    public static class GetDbmulticloudOracleDbAzureConnectors
    {
        /// <summary>
        /// This data source provides the list of Oracle Db Azure Connectors in Oracle Cloud Infrastructure Dbmulticloud service.
        /// 
        /// Lists the all Oracle DB Azure Connector Resource based on filters.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOracleDbAzureConnectors = Oci.Oci.GetDbmulticloudOracleDbAzureConnectors.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DbClusterResourceId = testResource.Id,
        ///         DisplayName = oracleDbAzureConnectorDisplayName,
        ///         OracleDbAzureConnectorId = testOracleDbAzureConnector.Id,
        ///         State = oracleDbAzureConnectorState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetDbmulticloudOracleDbAzureConnectorsResult> InvokeAsync(GetDbmulticloudOracleDbAzureConnectorsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDbmulticloudOracleDbAzureConnectorsResult>("oci:oci/getDbmulticloudOracleDbAzureConnectors:getDbmulticloudOracleDbAzureConnectors", args ?? new GetDbmulticloudOracleDbAzureConnectorsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Oracle Db Azure Connectors in Oracle Cloud Infrastructure Dbmulticloud service.
        /// 
        /// Lists the all Oracle DB Azure Connector Resource based on filters.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOracleDbAzureConnectors = Oci.Oci.GetDbmulticloudOracleDbAzureConnectors.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DbClusterResourceId = testResource.Id,
        ///         DisplayName = oracleDbAzureConnectorDisplayName,
        ///         OracleDbAzureConnectorId = testOracleDbAzureConnector.Id,
        ///         State = oracleDbAzureConnectorState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDbmulticloudOracleDbAzureConnectorsResult> Invoke(GetDbmulticloudOracleDbAzureConnectorsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDbmulticloudOracleDbAzureConnectorsResult>("oci:oci/getDbmulticloudOracleDbAzureConnectors:getDbmulticloudOracleDbAzureConnectors", args ?? new GetDbmulticloudOracleDbAzureConnectorsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Oracle Db Azure Connectors in Oracle Cloud Infrastructure Dbmulticloud service.
        /// 
        /// Lists the all Oracle DB Azure Connector Resource based on filters.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOracleDbAzureConnectors = Oci.Oci.GetDbmulticloudOracleDbAzureConnectors.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DbClusterResourceId = testResource.Id,
        ///         DisplayName = oracleDbAzureConnectorDisplayName,
        ///         OracleDbAzureConnectorId = testOracleDbAzureConnector.Id,
        ///         State = oracleDbAzureConnectorState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDbmulticloudOracleDbAzureConnectorsResult> Invoke(GetDbmulticloudOracleDbAzureConnectorsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDbmulticloudOracleDbAzureConnectorsResult>("oci:oci/getDbmulticloudOracleDbAzureConnectors:getDbmulticloudOracleDbAzureConnectors", args ?? new GetDbmulticloudOracleDbAzureConnectorsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDbmulticloudOracleDbAzureConnectorsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [ID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// The [ID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Resource.
        /// </summary>
        [Input("dbClusterResourceId")]
        public string? DbClusterResourceId { get; set; }

        /// <summary>
        /// A filter to return Oracle DB Azure Connector Resource that match the given display name.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetDbmulticloudOracleDbAzureConnectorsFilterArgs>? _filters;
        public List<Inputs.GetDbmulticloudOracleDbAzureConnectorsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetDbmulticloudOracleDbAzureConnectorsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return Oracle DB Azure Blob Mount Resources.
        /// </summary>
        [Input("oracleDbAzureConnectorId")]
        public string? OracleDbAzureConnectorId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetDbmulticloudOracleDbAzureConnectorsArgs()
        {
        }
        public static new GetDbmulticloudOracleDbAzureConnectorsArgs Empty => new GetDbmulticloudOracleDbAzureConnectorsArgs();
    }

    public sealed class GetDbmulticloudOracleDbAzureConnectorsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [ID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// The [ID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Resource.
        /// </summary>
        [Input("dbClusterResourceId")]
        public Input<string>? DbClusterResourceId { get; set; }

        /// <summary>
        /// A filter to return Oracle DB Azure Connector Resource that match the given display name.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetDbmulticloudOracleDbAzureConnectorsFilterInputArgs>? _filters;
        public InputList<Inputs.GetDbmulticloudOracleDbAzureConnectorsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetDbmulticloudOracleDbAzureConnectorsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return Oracle DB Azure Blob Mount Resources.
        /// </summary>
        [Input("oracleDbAzureConnectorId")]
        public Input<string>? OracleDbAzureConnectorId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetDbmulticloudOracleDbAzureConnectorsInvokeArgs()
        {
        }
        public static new GetDbmulticloudOracleDbAzureConnectorsInvokeArgs Empty => new GetDbmulticloudOracleDbAzureConnectorsInvokeArgs();
    }


    [OutputType]
    public sealed class GetDbmulticloudOracleDbAzureConnectorsResult
    {
        /// <summary>
        /// The ID of the compartment that contains Oracle DB Azure Connector resource.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The ID of the DB Cluster Resource where this Azure Arc Agent identity to configure.
        /// </summary>
        public readonly string? DbClusterResourceId;
        /// <summary>
        /// Oracle DB Azure Connector resource name.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetDbmulticloudOracleDbAzureConnectorsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? OracleDbAzureConnectorId;
        /// <summary>
        /// The list of oracle_db_azure_connector_summary_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDbmulticloudOracleDbAzureConnectorsOracleDbAzureConnectorSummaryCollectionResult> OracleDbAzureConnectorSummaryCollections;
        /// <summary>
        /// The current lifecycle state of the Azure Arc Agent Resource.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetDbmulticloudOracleDbAzureConnectorsResult(
            string compartmentId,

            string? dbClusterResourceId,

            string? displayName,

            ImmutableArray<Outputs.GetDbmulticloudOracleDbAzureConnectorsFilterResult> filters,

            string id,

            string? oracleDbAzureConnectorId,

            ImmutableArray<Outputs.GetDbmulticloudOracleDbAzureConnectorsOracleDbAzureConnectorSummaryCollectionResult> oracleDbAzureConnectorSummaryCollections,

            string? state)
        {
            CompartmentId = compartmentId;
            DbClusterResourceId = dbClusterResourceId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            OracleDbAzureConnectorId = oracleDbAzureConnectorId;
            OracleDbAzureConnectorSummaryCollections = oracleDbAzureConnectorSummaryCollections;
            State = state;
        }
    }
}
