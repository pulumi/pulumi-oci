// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Oci
{
    public static class GetWlmsWlsDomain
    {
        /// <summary>
        /// This data source provides details about a specific Wls Domain resource in Oracle Cloud Infrastructure Wlms service.
        /// 
        /// Gets a specific WebLogic domain.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testWlsDomain = Oci.Oci.GetWlmsWlsDomain.Invoke(new()
        ///     {
        ///         WlsDomainId = testWlsDomainOciWlmsWlsDomain.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetWlmsWlsDomainResult> InvokeAsync(GetWlmsWlsDomainArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWlmsWlsDomainResult>("oci:oci/getWlmsWlsDomain:getWlmsWlsDomain", args ?? new GetWlmsWlsDomainArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Wls Domain resource in Oracle Cloud Infrastructure Wlms service.
        /// 
        /// Gets a specific WebLogic domain.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testWlsDomain = Oci.Oci.GetWlmsWlsDomain.Invoke(new()
        ///     {
        ///         WlsDomainId = testWlsDomainOciWlmsWlsDomain.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetWlmsWlsDomainResult> Invoke(GetWlmsWlsDomainInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWlmsWlsDomainResult>("oci:oci/getWlmsWlsDomain:getWlmsWlsDomain", args ?? new GetWlmsWlsDomainInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Wls Domain resource in Oracle Cloud Infrastructure Wlms service.
        /// 
        /// Gets a specific WebLogic domain.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testWlsDomain = Oci.Oci.GetWlmsWlsDomain.Invoke(new()
        ///     {
        ///         WlsDomainId = testWlsDomainOciWlmsWlsDomain.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetWlmsWlsDomainResult> Invoke(GetWlmsWlsDomainInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetWlmsWlsDomainResult>("oci:oci/getWlmsWlsDomain:getWlmsWlsDomain", args ?? new GetWlmsWlsDomainInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWlmsWlsDomainArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the WebLogic domain.
        /// </summary>
        [Input("wlsDomainId", required: true)]
        public string WlsDomainId { get; set; } = null!;

        public GetWlmsWlsDomainArgs()
        {
        }
        public static new GetWlmsWlsDomainArgs Empty => new GetWlmsWlsDomainArgs();
    }

    public sealed class GetWlmsWlsDomainInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the WebLogic domain.
        /// </summary>
        [Input("wlsDomainId", required: true)]
        public Input<string> WlsDomainId { get; set; } = null!;

        public GetWlmsWlsDomainInvokeArgs()
        {
        }
        public static new GetWlmsWlsDomainInvokeArgs Empty => new GetWlmsWlsDomainInvokeArgs();
    }


    [OutputType]
    public sealed class GetWlmsWlsDomainResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The WebLogic domain configuration.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWlmsWlsDomainConfigurationResult> Configurations;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// A user-friendly name that does not have to be unique and is changeable.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Whether or not the terms of use agreement has been accepted for the WebLogic domain.
        /// </summary>
        public readonly bool IsAcceptedTermsAndConditions;
        /// <summary>
        /// A message that describes the current state of the WebLogic domain in more detail. For example, it can be used to provide actionable information for a resource in the Failed state.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// The middleware type on the administration server of the WebLogic domain.
        /// </summary>
        public readonly string MiddlewareType;
        /// <summary>
        /// The patch readiness status of the WebLogic domain.
        /// </summary>
        public readonly string PatchReadinessStatus;
        /// <summary>
        /// The current state of the WebLogic service domain.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// The date and time the WebLogic domain was created (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The date and time the WebLogic domain was updated (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        public readonly string TimeUpdated;
        /// <summary>
        /// The version of the WebLogic domain.
        /// </summary>
        public readonly string WeblogicVersion;
        public readonly string WlsDomainId;

        [OutputConstructor]
        private GetWlmsWlsDomainResult(
            string compartmentId,

            ImmutableArray<Outputs.GetWlmsWlsDomainConfigurationResult> configurations,

            ImmutableDictionary<string, string> definedTags,

            string displayName,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            bool isAcceptedTermsAndConditions,

            string lifecycleDetails,

            string middlewareType,

            string patchReadinessStatus,

            string state,

            ImmutableDictionary<string, string> systemTags,

            string timeCreated,

            string timeUpdated,

            string weblogicVersion,

            string wlsDomainId)
        {
            CompartmentId = compartmentId;
            Configurations = configurations;
            DefinedTags = definedTags;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            IsAcceptedTermsAndConditions = isAcceptedTermsAndConditions;
            LifecycleDetails = lifecycleDetails;
            MiddlewareType = middlewareType;
            PatchReadinessStatus = patchReadinessStatus;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            WeblogicVersion = weblogicVersion;
            WlsDomainId = wlsDomainId;
        }
    }
}
