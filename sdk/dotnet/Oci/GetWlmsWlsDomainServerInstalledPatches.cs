// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Oci
{
    public static class GetWlmsWlsDomainServerInstalledPatches
    {
        /// <summary>
        /// This data source provides the list of Wls Domain Server Installed Patches in Oracle Cloud Infrastructure Wlms service.
        /// 
        /// Gets a list of installed patches on a server for a domain.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testWlsDomainServerInstalledPatches = Oci.Oci.GetWlmsWlsDomainServerInstalledPatches.Invoke(new()
        ///     {
        ///         ServerId = testServer.Id,
        ///         WlsDomainId = testWlsDomain.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetWlmsWlsDomainServerInstalledPatchesResult> InvokeAsync(GetWlmsWlsDomainServerInstalledPatchesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWlmsWlsDomainServerInstalledPatchesResult>("oci:oci/getWlmsWlsDomainServerInstalledPatches:getWlmsWlsDomainServerInstalledPatches", args ?? new GetWlmsWlsDomainServerInstalledPatchesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Wls Domain Server Installed Patches in Oracle Cloud Infrastructure Wlms service.
        /// 
        /// Gets a list of installed patches on a server for a domain.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testWlsDomainServerInstalledPatches = Oci.Oci.GetWlmsWlsDomainServerInstalledPatches.Invoke(new()
        ///     {
        ///         ServerId = testServer.Id,
        ///         WlsDomainId = testWlsDomain.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetWlmsWlsDomainServerInstalledPatchesResult> Invoke(GetWlmsWlsDomainServerInstalledPatchesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWlmsWlsDomainServerInstalledPatchesResult>("oci:oci/getWlmsWlsDomainServerInstalledPatches:getWlmsWlsDomainServerInstalledPatches", args ?? new GetWlmsWlsDomainServerInstalledPatchesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Wls Domain Server Installed Patches in Oracle Cloud Infrastructure Wlms service.
        /// 
        /// Gets a list of installed patches on a server for a domain.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testWlsDomainServerInstalledPatches = Oci.Oci.GetWlmsWlsDomainServerInstalledPatches.Invoke(new()
        ///     {
        ///         ServerId = testServer.Id,
        ///         WlsDomainId = testWlsDomain.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetWlmsWlsDomainServerInstalledPatchesResult> Invoke(GetWlmsWlsDomainServerInstalledPatchesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetWlmsWlsDomainServerInstalledPatchesResult>("oci:oci/getWlmsWlsDomainServerInstalledPatches:getWlmsWlsDomainServerInstalledPatches", args ?? new GetWlmsWlsDomainServerInstalledPatchesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWlmsWlsDomainServerInstalledPatchesArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetWlmsWlsDomainServerInstalledPatchesFilterArgs>? _filters;
        public List<Inputs.GetWlmsWlsDomainServerInstalledPatchesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetWlmsWlsDomainServerInstalledPatchesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The unique identifier of a server.
        /// 
        /// **Note:** Not an [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("serverId", required: true)]
        public string ServerId { get; set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the WebLogic domain.
        /// </summary>
        [Input("wlsDomainId", required: true)]
        public string WlsDomainId { get; set; } = null!;

        public GetWlmsWlsDomainServerInstalledPatchesArgs()
        {
        }
        public static new GetWlmsWlsDomainServerInstalledPatchesArgs Empty => new GetWlmsWlsDomainServerInstalledPatchesArgs();
    }

    public sealed class GetWlmsWlsDomainServerInstalledPatchesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetWlmsWlsDomainServerInstalledPatchesFilterInputArgs>? _filters;
        public InputList<Inputs.GetWlmsWlsDomainServerInstalledPatchesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetWlmsWlsDomainServerInstalledPatchesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The unique identifier of a server.
        /// 
        /// **Note:** Not an [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("serverId", required: true)]
        public Input<string> ServerId { get; set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the WebLogic domain.
        /// </summary>
        [Input("wlsDomainId", required: true)]
        public Input<string> WlsDomainId { get; set; } = null!;

        public GetWlmsWlsDomainServerInstalledPatchesInvokeArgs()
        {
        }
        public static new GetWlmsWlsDomainServerInstalledPatchesInvokeArgs Empty => new GetWlmsWlsDomainServerInstalledPatchesInvokeArgs();
    }


    [OutputType]
    public sealed class GetWlmsWlsDomainServerInstalledPatchesResult
    {
        public readonly ImmutableArray<Outputs.GetWlmsWlsDomainServerInstalledPatchesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of installed_patch_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWlmsWlsDomainServerInstalledPatchesInstalledPatchCollectionResult> InstalledPatchCollections;
        public readonly string ServerId;
        public readonly string WlsDomainId;

        [OutputConstructor]
        private GetWlmsWlsDomainServerInstalledPatchesResult(
            ImmutableArray<Outputs.GetWlmsWlsDomainServerInstalledPatchesFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetWlmsWlsDomainServerInstalledPatchesInstalledPatchCollectionResult> installedPatchCollections,

            string serverId,

            string wlsDomainId)
        {
            Filters = filters;
            Id = id;
            InstalledPatchCollections = installedPatchCollections;
            ServerId = serverId;
            WlsDomainId = wlsDomainId;
        }
    }
}
