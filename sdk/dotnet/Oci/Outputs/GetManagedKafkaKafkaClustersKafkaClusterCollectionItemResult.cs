// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Oci.Outputs
{

    [OutputType]
    public sealed class GetManagedKafkaKafkaClustersKafkaClusterCollectionItemResult
    {
        /// <summary>
        /// Subnets where broker/coordinator VNICs will be created.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetManagedKafkaKafkaClustersKafkaClusterCollectionItemAccessSubnetResult> AccessSubnets;
        /// <summary>
        /// Configuration of the broker node.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetManagedKafkaKafkaClustersKafkaClusterCollectionItemBrokerShapeResult> BrokerShapes;
        /// <summary>
        /// CA certificate bundle for mTLS broker authentication.
        /// </summary>
        public readonly string ClientCertificateBundle;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of Kafka Cluster configuration object
        /// </summary>
        public readonly string ClusterConfigId;
        /// <summary>
        /// The version of configuration object
        /// </summary>
        public readonly int ClusterConfigVersion;
        /// <summary>
        /// Type of the cluster to spin up.  DEVELOPMENT - setting that allows to sacrifice HA and spin up cluster on a single node PRODUCTION - Minimum allowed broker count is 3
        /// </summary>
        public readonly string ClusterType;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Kafka coordination type. Set of available types depends on Kafka version
        /// </summary>
        public readonly string CoordinationType;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// A filter to return only resources that match the given display name exactly.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the KafkaCluster.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Bootstrap URL that can be used to connect to Kafka
        /// </summary>
        public readonly ImmutableArray<Outputs.GetManagedKafkaKafkaClustersKafkaClusterCollectionItemKafkaBootstrapUrlResult> KafkaBootstrapUrls;
        /// <summary>
        /// Version of Kafka to use to spin up the cluster
        /// </summary>
        public readonly string KafkaVersion;
        /// <summary>
        /// A message that describes the current state of the KafkaCluster in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the secret that contains superuser password.
        /// </summary>
        public readonly string SecretId;
        /// <summary>
        /// A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// The date and time the KafkaCluster was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The date and time the KafkaCluster was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetManagedKafkaKafkaClustersKafkaClusterCollectionItemResult(
            ImmutableArray<Outputs.GetManagedKafkaKafkaClustersKafkaClusterCollectionItemAccessSubnetResult> accessSubnets,

            ImmutableArray<Outputs.GetManagedKafkaKafkaClustersKafkaClusterCollectionItemBrokerShapeResult> brokerShapes,

            string clientCertificateBundle,

            string clusterConfigId,

            int clusterConfigVersion,

            string clusterType,

            string compartmentId,

            string coordinationType,

            ImmutableDictionary<string, string> definedTags,

            string displayName,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            ImmutableArray<Outputs.GetManagedKafkaKafkaClustersKafkaClusterCollectionItemKafkaBootstrapUrlResult> kafkaBootstrapUrls,

            string kafkaVersion,

            string lifecycleDetails,

            string secretId,

            string state,

            ImmutableDictionary<string, string> systemTags,

            string timeCreated,

            string timeUpdated)
        {
            AccessSubnets = accessSubnets;
            BrokerShapes = brokerShapes;
            ClientCertificateBundle = clientCertificateBundle;
            ClusterConfigId = clusterConfigId;
            ClusterConfigVersion = clusterConfigVersion;
            ClusterType = clusterType;
            CompartmentId = compartmentId;
            CoordinationType = coordinationType;
            DefinedTags = definedTags;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            KafkaBootstrapUrls = kafkaBootstrapUrls;
            KafkaVersion = kafkaVersion;
            LifecycleDetails = lifecycleDetails;
            SecretId = secretId;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
