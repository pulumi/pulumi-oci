// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Ocvp.Outputs
{

    [OutputType]
    public sealed class GetSddcInitialConfigurationInitialClusterConfigurationResult
    {
        /// <summary>
        /// (**Deprecated**) The number of actual ESXi hosts in the SDDC on the cloud. This attribute will be different when esxi Host is added to an existing SDDC. **Deprecated**. Please use `ActualEsxiHostsCount` of `InitialClusterConfigurations` instead.
        /// </summary>
        public readonly int ActualEsxiHostsCount;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Capacity Reservation.
        /// </summary>
        public readonly string CapacityReservationId;
        /// <summary>
        /// The availability domain to create the Cluster's ESXi hosts in. For multi-AD Cluster deployment, set to `multi-AD`.
        /// </summary>
        public readonly string ComputeAvailabilityDomain;
        /// <summary>
        /// A list of datastore info for the Cluster. This value is required only when `initialHostShapeName` is a standard shape.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSddcInitialConfigurationInitialClusterConfigurationDatastoreResult> Datastores;
        /// <summary>
        /// A descriptive name for the Cluster. Cluster name requirements are 1-16 character length limit, Must start with a letter, Must be English letters, numbers, - only, No repeating hyphens, Must be unique within the region. Avoid entering confidential information.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// The number of ESXi hosts to create in the Cluster. You can add more hosts later (see [CreateEsxiHost](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/EsxiHost/CreateEsxiHost)). Creating a Cluster with a ESXi host count of 1 will be considered a single ESXi host Cluster.
        /// </summary>
        public readonly int EsxiHostsCount;
        /// <summary>
        /// The billing option selected during Cluster creation. [ListSupportedCommitments](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedCommitmentSummary/ListSupportedCommitments).
        /// </summary>
        public readonly string InitialCommitment;
        /// <summary>
        /// (**Deprecated**) The initial OCPU count of the SDDC's ESXi hosts. **Deprecated**. Please use `InitialHostOcpuCount` of `InitialClusterConfigurations` instead.
        /// </summary>
        public readonly double InitialHostOcpuCount;
        /// <summary>
        /// (**Deprecated**) The initial compute shape of the SDDC's ESXi hosts. [ListSupportedHostShapes](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedHostShapes/ListSupportedHostShapes). **Deprecated**. Please use `InitialHostShapeName` of `InitialClusterConfigurations` instead.
        /// </summary>
        public readonly string InitialHostShapeName;
        /// <summary>
        /// (**Deprecated**) A prefix used in the name of each ESXi host and Compute instance in the SDDC. If this isn't set, the SDDC's `displayName` is used as the prefix.
        /// </summary>
        public readonly string InstanceDisplayNamePrefix;
        /// <summary>
        /// (**Deprecated**) Indicates whether shielded instance is enabled at the SDDC level. **Deprecated**. Please use `IsShieldedInstanceEnabled` of `InitialClusterConfigurations` instead.
        /// </summary>
        public readonly bool IsShieldedInstanceEnabled;
        /// <summary>
        /// The network configurations used by Cluster, including [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management subnet and VLANs.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSddcInitialConfigurationInitialClusterConfigurationNetworkConfigurationResult> NetworkConfigurations;
        /// <summary>
        /// vSphere Cluster types.
        /// </summary>
        public readonly string VsphereType;
        /// <summary>
        /// (**Deprecated**) The CIDR block for the IP addresses that VMware VMs in the SDDC use to run application workloads. **Deprecated**. Please use `WorkloadNetworkCidr` of `InitialClusterConfigurations` instead.
        /// </summary>
        public readonly string WorkloadNetworkCidr;

        [OutputConstructor]
        private GetSddcInitialConfigurationInitialClusterConfigurationResult(
            int actualEsxiHostsCount,

            string capacityReservationId,

            string computeAvailabilityDomain,

            ImmutableArray<Outputs.GetSddcInitialConfigurationInitialClusterConfigurationDatastoreResult> datastores,

            string displayName,

            int esxiHostsCount,

            string initialCommitment,

            double initialHostOcpuCount,

            string initialHostShapeName,

            string instanceDisplayNamePrefix,

            bool isShieldedInstanceEnabled,

            ImmutableArray<Outputs.GetSddcInitialConfigurationInitialClusterConfigurationNetworkConfigurationResult> networkConfigurations,

            string vsphereType,

            string workloadNetworkCidr)
        {
            ActualEsxiHostsCount = actualEsxiHostsCount;
            CapacityReservationId = capacityReservationId;
            ComputeAvailabilityDomain = computeAvailabilityDomain;
            Datastores = datastores;
            DisplayName = displayName;
            EsxiHostsCount = esxiHostsCount;
            InitialCommitment = initialCommitment;
            InitialHostOcpuCount = initialHostOcpuCount;
            InitialHostShapeName = initialHostShapeName;
            InstanceDisplayNamePrefix = instanceDisplayNamePrefix;
            IsShieldedInstanceEnabled = isShieldedInstanceEnabled;
            NetworkConfigurations = networkConfigurations;
            VsphereType = vsphereType;
            WorkloadNetworkCidr = workloadNetworkCidr;
        }
    }
}
