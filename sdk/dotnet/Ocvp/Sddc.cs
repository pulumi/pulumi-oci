// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Ocvp
{
    /// <summary>
    /// ## Import
    /// 
    /// Sddcs can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:Ocvp/sddc:Sddc test_sddc "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:Ocvp/sddc:Sddc")]
    public partial class Sddc : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The number of actual ESXi hosts in the SDDC on the cloud. This attribute will be different when esxi Host is added to an existing SDDC. **Deprecated**.
        /// </summary>
        [Output("actualEsxiHostsCount")]
        public Output<int> ActualEsxiHostsCount { get; private set; } = null!;

        /// <summary>
        /// (Optional) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Capacity Reservation. **Deprecated**. Please use `CapacityReservationId` of `InitialClusterConfigurations` instead.
        /// </summary>
        [Output("capacityReservationId")]
        public Output<string> CapacityReservationId { get; private set; } = null!;

        /// <summary>
        /// The number of Clusters in the SDDC.
        /// </summary>
        [Output("clustersCount")]
        public Output<int> ClustersCount { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to contain the SDDC.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// (Required) The availability domain to create the SDDC's ESXi hosts in. For multi-AD SDDC deployment, set to `multi-AD`. **Deprecated**. Please use `ComputeAvailabilityDomain` of `InitialClusterConfigurations` instead.
        /// </summary>
        [Output("computeAvailabilityDomain")]
        public Output<string?> ComputeAvailabilityDomain { get; private set; } = null!;

        /// <summary>
        /// (Optional) A list of datastore info for the SDDC. This value is required only when `initialHostShapeName` is a standard shape. **Deprecated**. Please use `Datastores` of `InitialClusterConfigurations` instead.
        /// </summary>
        [Output("datastores")]
        public Output<ImmutableArray<Outputs.SddcDatastore>> Datastores { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, string>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A descriptive name for the SDDC. SDDC name requirements are 1-16 character length limit, Must start with a letter, Must be English letters, numbers, - only, No repeating hyphens, Must be unique within the region. Avoid entering confidential information.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// (Required) The number of ESXi hosts to create in the SDDC. You can add more hosts later (see [CreateEsxiHost](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/EsxiHost/CreateEsxiHost)). Creating a SDDC with a ESXi host count of 1 will be considered a single ESXi host SDDC. **Deprecated**. Please use `EsxiHostsCount` of `InitialClusterConfigurations` instead.
        /// 
        /// **Note:** If you later delete EXSi hosts from a production SDDC to total less than 3, you are still billed for the 3 minimum recommended ESXi hosts. Also, you cannot add more VMware workloads to the SDDC until it again has at least 3 ESXi hosts.
        /// </summary>
        [Output("esxiHostsCount")]
        public Output<int?> EsxiHostsCount { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The ESXi software bundle to install on the ESXi hosts in the SDDC.  Only versions under the same vmwareSoftwareVersion and have been validate by Oracle Cloud VMware Solution will be accepted. To get a list of the available versions, use [ListSupportedVmwareSoftwareVersions](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20230701/SupportedVmwareSoftwareVersionSummary/ListSupportedVmwareSoftwareVersions).
        /// </summary>
        [Output("esxiSoftwareVersion")]
        public Output<string> EsxiSoftwareVersion { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, string>> FreeformTags { get; private set; } = null!;

        [Output("hcxAction")]
        public Output<string?> HcxAction { get; private set; } = null!;

        /// <summary>
        /// The FQDN for HCX Manager.  Example: `hcx-my-sddc.sddc.us-phoenix-1.oraclecloud.com`
        /// </summary>
        [Output("hcxFqdn")]
        public Output<string> HcxFqdn { get; private set; } = null!;

        /// <summary>
        /// (**Deprecated**) The SDDC includes an administrator username and initial password for HCX Manager. Make sure to change this initial HCX Manager password to a different value. **Deprecated**. Please use the `oci.Ocvp.getRetrievePassword` data source instead.
        /// </summary>
        [Output("hcxInitialPassword")]
        public Output<string> HcxInitialPassword { get; private set; } = null!;

        /// <summary>
        /// HCX configuration of the SDDC.
        /// </summary>
        [Output("hcxMode")]
        public Output<string> HcxMode { get; private set; } = null!;

        /// <summary>
        /// (**Deprecated**) The activation keys to use on the on-premises HCX Enterprise appliances you site pair with HCX Manager in your VMware Solution. The number of keys provided depends on the HCX license type. HCX Advanced provides 3 activation keys. HCX Enterprise provides 10 activation keys. **Deprecated**. Please use `HcxOnPremLicenses` instead.
        /// </summary>
        [Output("hcxOnPremKey")]
        public Output<string> HcxOnPremKey { get; private set; } = null!;

        /// <summary>
        /// The activation licenses to use on the on-premises HCX Enterprise appliance you site pair with HCX Manager in your VMware Solution.
        /// </summary>
        [Output("hcxOnPremLicenses")]
        public Output<ImmutableArray<Outputs.SddcHcxOnPremLicense>> HcxOnPremLicenses { get; private set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for HCX Manager. For information about `PrivateIp` objects, see the Core Services API.
        /// </summary>
        [Output("hcxPrivateIpId")]
        public Output<string> HcxPrivateIpId { get; private set; } = null!;

        /// <summary>
        /// (Optional) (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the HCX component of the VMware environment. This value is required only when `isHcxEnabled` is true. **Deprecated**. Please use `HcxVlanId` of `NetworkConfiguration` instead.
        /// </summary>
        [Output("hcxVlanId")]
        public Output<string> HcxVlanId { get; private set; } = null!;

        /// <summary>
        /// Details of SDDC initial configuration
        /// </summary>
        [Output("initialConfigurations")]
        public Output<ImmutableArray<Outputs.SddcInitialConfiguration>> InitialConfigurations { get; private set; } = null!;

        /// <summary>
        /// (Optional) The initial OCPU count of the SDDC's ESXi hosts. **Deprecated**. Please use `InitialHostOcpuCount` of `InitialClusterConfigurations` instead.
        /// </summary>
        [Output("initialHostOcpuCount")]
        public Output<double> InitialHostOcpuCount { get; private set; } = null!;

        /// <summary>
        /// (Optional) The initial compute shape of the SDDC's ESXi hosts. [ListSupportedHostShapes](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedHostShapes/ListSupportedHostShapes). **Deprecated**. Please use `InitialHostShapeName` of `InitialClusterConfigurations` instead.
        /// </summary>
        [Output("initialHostShapeName")]
        public Output<string> InitialHostShapeName { get; private set; } = null!;

        /// <summary>
        /// (Optional) The billing option selected during SDDC creation. [ListSupportedSkus](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedSkuSummary/ListSupportedSkus). **Deprecated**. Please use  `InitialCommitment` of `InitialClusterConfigurations` instead.
        /// </summary>
        [Output("initialSku")]
        public Output<string> InitialSku { get; private set; } = null!;

        /// <summary>
        /// (Optional) A prefix used in the name of each ESXi host and Compute instance in the SDDC. If this isn't set, the SDDC's `displayName` is used as the prefix. 
        /// 
        /// For example, if the value is `mySDDC`, the ESXi hosts are named `mySDDC-1`, `mySDDC-2`, and so on. **Deprecated**. Please use  `InstanceDisplayNamePrefix` of `InitialClusterConfigurations` instead.
        /// </summary>
        [Output("instanceDisplayNamePrefix")]
        public Output<string> InstanceDisplayNamePrefix { get; private set; } = null!;

        /// <summary>
        /// For SDDC with dense compute shapes, this parameter indicates whether to enable HCX Advanced for this SDDC. For SDDC with standard compute shapes, this parameter is equivalent to `isHcxEnterpriseEnabled`.
        /// </summary>
        [Output("isHcxEnabled")]
        public Output<bool> IsHcxEnabled { get; private set; } = null!;

        /// <summary>
        /// (**Deprecated**) Indicates whether HCX Enterprise is enabled for this SDDC.
        /// </summary>
        [Output("isHcxEnterpriseEnabled")]
        public Output<bool> IsHcxEnterpriseEnabled { get; private set; } = null!;

        /// <summary>
        /// Indicates whether SDDC is pending downgrade from HCX Enterprise to HCX Advanced.
        /// </summary>
        [Output("isHcxPendingDowngrade")]
        public Output<bool> IsHcxPendingDowngrade { get; private set; } = null!;

        /// <summary>
        /// (Optional) Indicates whether shielded instance is enabled for this SDDC. **Deprecated**. Please use `IsShieldedInstanceEnabled` of `InitialClusterConfigurations` instead.
        /// </summary>
        [Output("isShieldedInstanceEnabled")]
        public Output<bool> IsShieldedInstanceEnabled { get; private set; } = null!;

        /// <summary>
        /// Indicates whether this SDDC is designated for only single ESXi host.
        /// </summary>
        [Output("isSingleHostSddc")]
        public Output<bool> IsSingleHostSddc { get; private set; } = null!;

        /// <summary>
        /// (Required) (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the NSX Edge Uplink 1 component of the VMware environment. **Deprecated**. Please use `NsxEdgeUplink1vlanId` of `NetworkConfiguration` instead.
        /// </summary>
        [Output("nsxEdgeUplink1vlanId")]
        public Output<string?> NsxEdgeUplink1vlanId { get; private set; } = null!;

        /// <summary>
        /// (Required) (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the NSX Edge Uplink 2 component of the VMware environment. **Deprecated**. Please use `NsxEdgeUplink2vlanId` of `NetworkConfiguration` instead.
        /// 
        /// **Note:** This VLAN is reserved for future use to deploy public-facing applications on the VMware SDDC.
        /// </summary>
        [Output("nsxEdgeUplink2vlanId")]
        public Output<string?> NsxEdgeUplink2vlanId { get; private set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for the NSX Edge Uplink. Use this OCID as the route target for route table rules when setting up connectivity between the SDDC and other networks. For information about `PrivateIp` objects, see the Core Services API.
        /// </summary>
        [Output("nsxEdgeUplinkIpId")]
        public Output<string> NsxEdgeUplinkIpId { get; private set; } = null!;

        /// <summary>
        /// (Required) (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the NSX Edge VTEP component of the VMware environment. **Deprecated**. Please use `NsxEdgeVtepVlanId` of `NetworkConfiguration` instead.
        /// </summary>
        [Output("nsxEdgeVtepVlanId")]
        public Output<string?> NsxEdgeVtepVlanId { get; private set; } = null!;

        /// <summary>
        /// The FQDN for NSX Manager.  Example: `nsx-my-sddc.sddc.us-phoenix-1.oraclecloud.com`
        /// </summary>
        [Output("nsxManagerFqdn")]
        public Output<string> NsxManagerFqdn { get; private set; } = null!;

        /// <summary>
        /// (**Deprecated**) The SDDC includes an administrator username and initial password for NSX Manager. Make sure to change this initial NSX Manager password to a different value. **Deprecated**. Please use the `oci.Ocvp.getRetrievePassword` data source instead.
        /// </summary>
        [Output("nsxManagerInitialPassword")]
        public Output<string> NsxManagerInitialPassword { get; private set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for NSX Manager. For information about `PrivateIp` objects, see the Core Services API.
        /// </summary>
        [Output("nsxManagerPrivateIpId")]
        public Output<string> NsxManagerPrivateIpId { get; private set; } = null!;

        /// <summary>
        /// The SDDC includes an administrator username and initial password for NSX Manager. You can change this initial username to a different value in NSX Manager.
        /// </summary>
        [Output("nsxManagerUsername")]
        public Output<string> NsxManagerUsername { get; private set; } = null!;

        /// <summary>
        /// (**Deprecated**) The VMware NSX overlay workload segment to host your application. Connect to workload portgroup in vCenter to access this overlay segment.
        /// </summary>
        [Output("nsxOverlaySegmentName")]
        public Output<string> NsxOverlaySegmentName { get; private set; } = null!;

        /// <summary>
        /// (Required) (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the NSX VTEP component of the VMware environment. **Deprecated**. Please use `NsxVtepVlanId` of `NetworkConfiguration` instead.
        /// </summary>
        [Output("nsxVtepVlanId")]
        public Output<string?> NsxVtepVlanId { get; private set; } = null!;

        /// <summary>
        /// (Required) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management subnet to use for provisioning the SDDC. **Deprecated**. Please use `ProvisioningSubnetId` of `NetworkConfiguration` instead.
        /// </summary>
        [Output("provisioningSubnetId")]
        public Output<string?> ProvisioningSubnetId { get; private set; } = null!;

        /// <summary>
        /// (Optional) (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the Provisioning component of the VMware environment. **Deprecated**. Please use `ProvisioningVlanId` of `NetworkConfiguration` instead.
        /// </summary>
        [Output("provisioningVlanId")]
        public Output<string> ProvisioningVlanId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) HCX on-premise licenses status will be refreshed whenever the value of this field is changed.
        /// </summary>
        [Output("refreshHcxLicenseStatus")]
        public Output<bool?> RefreshHcxLicenseStatus { get; private set; } = null!;

        /// <summary>
        /// (Optional) (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the vSphere Replication component of the VMware environment. **Deprecated**. Please use `ReplicationVlanId` of `NetworkConfiguration` instead.
        /// </summary>
        [Output("replicationVlanId")]
        public Output<string> ReplicationVlanId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The HCX on-premise licenses to be reserved when downgrade from HCX Enterprise to HCX Advanced. It should not be provided during resource creation. It is required and can only be set when the HcxAction is "DOWNGRADE". Its value can only be changed when HcxAction is updated.
        /// </summary>
        [Output("reservingHcxOnPremiseLicenseKeys")]
        public Output<ImmutableArray<string>> ReservingHcxOnPremiseLicenseKeys { get; private set; } = null!;

        /// <summary>
        /// (Updatable) One or more public SSH keys to be included in the `~/.ssh/authorized_keys` file for the default user on each ESXi host. Use a newline character to separate multiple keys. The SSH keys must be in the format required for the `AuthorizedKeys` file
        /// </summary>
        [Output("sshAuthorizedKeys")]
        public Output<string> SshAuthorizedKeys { get; private set; } = null!;

        /// <summary>
        /// The current state of the SDDC.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The date and time the SDDC was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The date and time current HCX Enterprise billing cycle ends, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Output("timeHcxBillingCycleEnd")]
        public Output<string> TimeHcxBillingCycleEnd { get; private set; } = null!;

        /// <summary>
        /// The date and time the SDDC's HCX on-premise license status was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Output("timeHcxLicenseStatusUpdated")]
        public Output<string> TimeHcxLicenseStatusUpdated { get; private set; } = null!;

        /// <summary>
        /// The date and time the SDDC was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;

        /// <summary>
        /// (**Deprecated**) The vSphere licenses to use when upgrading the SDDC.
        /// </summary>
        [Output("upgradeLicenses")]
        public Output<ImmutableArray<Outputs.SddcUpgradeLicense>> UpgradeLicenses { get; private set; } = null!;

        /// <summary>
        /// The FQDN for vCenter.  Example: `vcenter-my-sddc.sddc.us-phoenix-1.oraclecloud.com`
        /// </summary>
        [Output("vcenterFqdn")]
        public Output<string> VcenterFqdn { get; private set; } = null!;

        /// <summary>
        /// (**Deprecated**) The SDDC includes an administrator username and initial password for vCenter. Make sure to change this initial vCenter password to a different value. **Deprecated**. Please use the `oci.Ocvp.getRetrievePassword` data source instead.
        /// </summary>
        [Output("vcenterInitialPassword")]
        public Output<string> VcenterInitialPassword { get; private set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for vCenter. For information about `PrivateIp` objects, see the Core Services API.
        /// </summary>
        [Output("vcenterPrivateIpId")]
        public Output<string> VcenterPrivateIpId { get; private set; } = null!;

        /// <summary>
        /// The SDDC includes an administrator username and initial password for vCenter. You can change this initial username to a different value in vCenter.
        /// </summary>
        [Output("vcenterUsername")]
        public Output<string> VcenterUsername { get; private set; } = null!;

        /// <summary>
        /// (Required) (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the vMotion component of the VMware environment. **Deprecated**. Please use `VmotionVlanId` of `NetworkConfiguration` instead.
        /// </summary>
        [Output("vmotionVlanId")]
        public Output<string?> VmotionVlanId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The VMware software bundle to install on the ESXi hosts in the SDDC. To get a list of the available versions, use [ListSupportedVmwareSoftwareVersions](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedVmwareSoftwareVersionSummary/ListSupportedVmwareSoftwareVersions).
        /// </summary>
        [Output("vmwareSoftwareVersion")]
        public Output<string> VmwareSoftwareVersion { get; private set; } = null!;

        /// <summary>
        /// (Required) (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the vSAN component of the VMware environment. **Deprecated**. Please use `VsanVlanId` of `NetworkConfiguration` instead.
        /// </summary>
        [Output("vsanVlanId")]
        public Output<string?> VsanVlanId { get; private set; } = null!;

        /// <summary>
        /// (**Deprecated**) The link to guidance for upgrading vSphere.
        /// </summary>
        [Output("vsphereUpgradeGuide")]
        public Output<string> VsphereUpgradeGuide { get; private set; } = null!;

        /// <summary>
        /// (**Deprecated**) The links to binary objects needed to upgrade vSphere.
        /// </summary>
        [Output("vsphereUpgradeObjects")]
        public Output<ImmutableArray<Outputs.SddcVsphereUpgradeObject>> VsphereUpgradeObjects { get; private set; } = null!;

        /// <summary>
        /// (Required) (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the vSphere component of the VMware environment. **Deprecated**. Please use `VsphereVlanId` of `NetworkConfiguration` instead.
        /// </summary>
        [Output("vsphereVlanId")]
        public Output<string?> VsphereVlanId { get; private set; } = null!;

        /// <summary>
        /// (Optional) The CIDR block for the IP addresses that VMware VMs in the SDDC use to run application workloads.  **Deprecated**. Please use `WorkloadNetworkCidr` of `InitialClusterConfigurations` instead.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("workloadNetworkCidr")]
        public Output<string> WorkloadNetworkCidr { get; private set; } = null!;


        /// <summary>
        /// Create a Sddc resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Sddc(string name, SddcArgs args, CustomResourceOptions? options = null)
            : base("oci:Ocvp/sddc:Sddc", name, args ?? new SddcArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Sddc(string name, Input<string> id, SddcState? state = null, CustomResourceOptions? options = null)
            : base("oci:Ocvp/sddc:Sddc", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Sddc resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Sddc Get(string name, Input<string> id, SddcState? state = null, CustomResourceOptions? options = null)
        {
            return new Sddc(name, id, state, options);
        }
    }

    public sealed class SddcArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Optional) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Capacity Reservation. **Deprecated**. Please use `CapacityReservationId` of `InitialClusterConfigurations` instead.
        /// </summary>
        [Input("capacityReservationId")]
        public Input<string>? CapacityReservationId { get; set; }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to contain the SDDC.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// (Required) The availability domain to create the SDDC's ESXi hosts in. For multi-AD SDDC deployment, set to `multi-AD`. **Deprecated**. Please use `ComputeAvailabilityDomain` of `InitialClusterConfigurations` instead.
        /// </summary>
        [Input("computeAvailabilityDomain")]
        public Input<string>? ComputeAvailabilityDomain { get; set; }

        [Input("datastores")]
        private InputList<Inputs.SddcDatastoreArgs>? _datastores;

        /// <summary>
        /// (Optional) A list of datastore info for the SDDC. This value is required only when `initialHostShapeName` is a standard shape. **Deprecated**. Please use `Datastores` of `InitialClusterConfigurations` instead.
        /// </summary>
        [Obsolete(@"The 'datastores' field has been deprecated. Please use 'initial_configuration' instead.")]
        public InputList<Inputs.SddcDatastoreArgs> Datastores
        {
            get => _datastores ?? (_datastores = new InputList<Inputs.SddcDatastoreArgs>());
            set => _datastores = value;
        }

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) A descriptive name for the SDDC. SDDC name requirements are 1-16 character length limit, Must start with a letter, Must be English letters, numbers, - only, No repeating hyphens, Must be unique within the region. Avoid entering confidential information.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// (Required) The number of ESXi hosts to create in the SDDC. You can add more hosts later (see [CreateEsxiHost](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/EsxiHost/CreateEsxiHost)). Creating a SDDC with a ESXi host count of 1 will be considered a single ESXi host SDDC. **Deprecated**. Please use `EsxiHostsCount` of `InitialClusterConfigurations` instead.
        /// 
        /// **Note:** If you later delete EXSi hosts from a production SDDC to total less than 3, you are still billed for the 3 minimum recommended ESXi hosts. Also, you cannot add more VMware workloads to the SDDC until it again has at least 3 ESXi hosts.
        /// </summary>
        [Input("esxiHostsCount")]
        public Input<int>? EsxiHostsCount { get; set; }

        /// <summary>
        /// (Updatable) The ESXi software bundle to install on the ESXi hosts in the SDDC.  Only versions under the same vmwareSoftwareVersion and have been validate by Oracle Cloud VMware Solution will be accepted. To get a list of the available versions, use [ListSupportedVmwareSoftwareVersions](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20230701/SupportedVmwareSoftwareVersionSummary/ListSupportedVmwareSoftwareVersions).
        /// </summary>
        [Input("esxiSoftwareVersion")]
        public Input<string>? EsxiSoftwareVersion { get; set; }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        [Input("hcxAction")]
        public Input<string>? HcxAction { get; set; }

        /// <summary>
        /// (Optional) (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the HCX component of the VMware environment. This value is required only when `isHcxEnabled` is true. **Deprecated**. Please use `HcxVlanId` of `NetworkConfiguration` instead.
        /// </summary>
        [Input("hcxVlanId")]
        public Input<string>? HcxVlanId { get; set; }

        [Input("initialConfigurations")]
        private InputList<Inputs.SddcInitialConfigurationArgs>? _initialConfigurations;

        /// <summary>
        /// Details of SDDC initial configuration
        /// </summary>
        public InputList<Inputs.SddcInitialConfigurationArgs> InitialConfigurations
        {
            get => _initialConfigurations ?? (_initialConfigurations = new InputList<Inputs.SddcInitialConfigurationArgs>());
            set => _initialConfigurations = value;
        }

        /// <summary>
        /// (Optional) The initial OCPU count of the SDDC's ESXi hosts. **Deprecated**. Please use `InitialHostOcpuCount` of `InitialClusterConfigurations` instead.
        /// </summary>
        [Input("initialHostOcpuCount")]
        public Input<double>? InitialHostOcpuCount { get; set; }

        /// <summary>
        /// (Optional) The initial compute shape of the SDDC's ESXi hosts. [ListSupportedHostShapes](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedHostShapes/ListSupportedHostShapes). **Deprecated**. Please use `InitialHostShapeName` of `InitialClusterConfigurations` instead.
        /// </summary>
        [Input("initialHostShapeName")]
        public Input<string>? InitialHostShapeName { get; set; }

        /// <summary>
        /// (Optional) The billing option selected during SDDC creation. [ListSupportedSkus](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedSkuSummary/ListSupportedSkus). **Deprecated**. Please use  `InitialCommitment` of `InitialClusterConfigurations` instead.
        /// </summary>
        [Input("initialSku")]
        public Input<string>? InitialSku { get; set; }

        /// <summary>
        /// (Optional) A prefix used in the name of each ESXi host and Compute instance in the SDDC. If this isn't set, the SDDC's `displayName` is used as the prefix. 
        /// 
        /// For example, if the value is `mySDDC`, the ESXi hosts are named `mySDDC-1`, `mySDDC-2`, and so on. **Deprecated**. Please use  `InstanceDisplayNamePrefix` of `InitialClusterConfigurations` instead.
        /// </summary>
        [Input("instanceDisplayNamePrefix")]
        public Input<string>? InstanceDisplayNamePrefix { get; set; }

        /// <summary>
        /// For SDDC with dense compute shapes, this parameter indicates whether to enable HCX Advanced for this SDDC. For SDDC with standard compute shapes, this parameter is equivalent to `isHcxEnterpriseEnabled`.
        /// </summary>
        [Input("isHcxEnabled")]
        public Input<bool>? IsHcxEnabled { get; set; }

        /// <summary>
        /// (Optional) Indicates whether shielded instance is enabled for this SDDC. **Deprecated**. Please use `IsShieldedInstanceEnabled` of `InitialClusterConfigurations` instead.
        /// </summary>
        [Input("isShieldedInstanceEnabled")]
        public Input<bool>? IsShieldedInstanceEnabled { get; set; }

        /// <summary>
        /// Indicates whether this SDDC is designated for only single ESXi host.
        /// </summary>
        [Input("isSingleHostSddc")]
        public Input<bool>? IsSingleHostSddc { get; set; }

        /// <summary>
        /// (Required) (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the NSX Edge Uplink 1 component of the VMware environment. **Deprecated**. Please use `NsxEdgeUplink1vlanId` of `NetworkConfiguration` instead.
        /// </summary>
        [Input("nsxEdgeUplink1vlanId")]
        public Input<string>? NsxEdgeUplink1vlanId { get; set; }

        /// <summary>
        /// (Required) (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the NSX Edge Uplink 2 component of the VMware environment. **Deprecated**. Please use `NsxEdgeUplink2vlanId` of `NetworkConfiguration` instead.
        /// 
        /// **Note:** This VLAN is reserved for future use to deploy public-facing applications on the VMware SDDC.
        /// </summary>
        [Input("nsxEdgeUplink2vlanId")]
        public Input<string>? NsxEdgeUplink2vlanId { get; set; }

        /// <summary>
        /// (Required) (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the NSX Edge VTEP component of the VMware environment. **Deprecated**. Please use `NsxEdgeVtepVlanId` of `NetworkConfiguration` instead.
        /// </summary>
        [Input("nsxEdgeVtepVlanId")]
        public Input<string>? NsxEdgeVtepVlanId { get; set; }

        /// <summary>
        /// (Required) (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the NSX VTEP component of the VMware environment. **Deprecated**. Please use `NsxVtepVlanId` of `NetworkConfiguration` instead.
        /// </summary>
        [Input("nsxVtepVlanId")]
        public Input<string>? NsxVtepVlanId { get; set; }

        /// <summary>
        /// (Required) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management subnet to use for provisioning the SDDC. **Deprecated**. Please use `ProvisioningSubnetId` of `NetworkConfiguration` instead.
        /// </summary>
        [Input("provisioningSubnetId")]
        public Input<string>? ProvisioningSubnetId { get; set; }

        /// <summary>
        /// (Optional) (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the Provisioning component of the VMware environment. **Deprecated**. Please use `ProvisioningVlanId` of `NetworkConfiguration` instead.
        /// </summary>
        [Input("provisioningVlanId")]
        public Input<string>? ProvisioningVlanId { get; set; }

        /// <summary>
        /// (Updatable) HCX on-premise licenses status will be refreshed whenever the value of this field is changed.
        /// </summary>
        [Input("refreshHcxLicenseStatus")]
        public Input<bool>? RefreshHcxLicenseStatus { get; set; }

        /// <summary>
        /// (Optional) (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the vSphere Replication component of the VMware environment. **Deprecated**. Please use `ReplicationVlanId` of `NetworkConfiguration` instead.
        /// </summary>
        [Input("replicationVlanId")]
        public Input<string>? ReplicationVlanId { get; set; }

        [Input("reservingHcxOnPremiseLicenseKeys")]
        private InputList<string>? _reservingHcxOnPremiseLicenseKeys;

        /// <summary>
        /// (Updatable) The HCX on-premise licenses to be reserved when downgrade from HCX Enterprise to HCX Advanced. It should not be provided during resource creation. It is required and can only be set when the HcxAction is "DOWNGRADE". Its value can only be changed when HcxAction is updated.
        /// </summary>
        public InputList<string> ReservingHcxOnPremiseLicenseKeys
        {
            get => _reservingHcxOnPremiseLicenseKeys ?? (_reservingHcxOnPremiseLicenseKeys = new InputList<string>());
            set => _reservingHcxOnPremiseLicenseKeys = value;
        }

        /// <summary>
        /// (Updatable) One or more public SSH keys to be included in the `~/.ssh/authorized_keys` file for the default user on each ESXi host. Use a newline character to separate multiple keys. The SSH keys must be in the format required for the `AuthorizedKeys` file
        /// </summary>
        [Input("sshAuthorizedKeys", required: true)]
        public Input<string> SshAuthorizedKeys { get; set; } = null!;

        /// <summary>
        /// (Required) (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the vMotion component of the VMware environment. **Deprecated**. Please use `VmotionVlanId` of `NetworkConfiguration` instead.
        /// </summary>
        [Input("vmotionVlanId")]
        public Input<string>? VmotionVlanId { get; set; }

        /// <summary>
        /// (Updatable) The VMware software bundle to install on the ESXi hosts in the SDDC. To get a list of the available versions, use [ListSupportedVmwareSoftwareVersions](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedVmwareSoftwareVersionSummary/ListSupportedVmwareSoftwareVersions).
        /// </summary>
        [Input("vmwareSoftwareVersion", required: true)]
        public Input<string> VmwareSoftwareVersion { get; set; } = null!;

        /// <summary>
        /// (Required) (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the vSAN component of the VMware environment. **Deprecated**. Please use `VsanVlanId` of `NetworkConfiguration` instead.
        /// </summary>
        [Input("vsanVlanId")]
        public Input<string>? VsanVlanId { get; set; }

        /// <summary>
        /// (Required) (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the vSphere component of the VMware environment. **Deprecated**. Please use `VsphereVlanId` of `NetworkConfiguration` instead.
        /// </summary>
        [Input("vsphereVlanId")]
        public Input<string>? VsphereVlanId { get; set; }

        /// <summary>
        /// (Optional) The CIDR block for the IP addresses that VMware VMs in the SDDC use to run application workloads.  **Deprecated**. Please use `WorkloadNetworkCidr` of `InitialClusterConfigurations` instead.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("workloadNetworkCidr")]
        public Input<string>? WorkloadNetworkCidr { get; set; }

        public SddcArgs()
        {
        }
        public static new SddcArgs Empty => new SddcArgs();
    }

    public sealed class SddcState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The number of actual ESXi hosts in the SDDC on the cloud. This attribute will be different when esxi Host is added to an existing SDDC. **Deprecated**.
        /// </summary>
        [Input("actualEsxiHostsCount")]
        public Input<int>? ActualEsxiHostsCount { get; set; }

        /// <summary>
        /// (Optional) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Capacity Reservation. **Deprecated**. Please use `CapacityReservationId` of `InitialClusterConfigurations` instead.
        /// </summary>
        [Input("capacityReservationId")]
        public Input<string>? CapacityReservationId { get; set; }

        /// <summary>
        /// The number of Clusters in the SDDC.
        /// </summary>
        [Input("clustersCount")]
        public Input<int>? ClustersCount { get; set; }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to contain the SDDC.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// (Required) The availability domain to create the SDDC's ESXi hosts in. For multi-AD SDDC deployment, set to `multi-AD`. **Deprecated**. Please use `ComputeAvailabilityDomain` of `InitialClusterConfigurations` instead.
        /// </summary>
        [Input("computeAvailabilityDomain")]
        public Input<string>? ComputeAvailabilityDomain { get; set; }

        [Input("datastores")]
        private InputList<Inputs.SddcDatastoreGetArgs>? _datastores;

        /// <summary>
        /// (Optional) A list of datastore info for the SDDC. This value is required only when `initialHostShapeName` is a standard shape. **Deprecated**. Please use `Datastores` of `InitialClusterConfigurations` instead.
        /// </summary>
        [Obsolete(@"The 'datastores' field has been deprecated. Please use 'initial_configuration' instead.")]
        public InputList<Inputs.SddcDatastoreGetArgs> Datastores
        {
            get => _datastores ?? (_datastores = new InputList<Inputs.SddcDatastoreGetArgs>());
            set => _datastores = value;
        }

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) A descriptive name for the SDDC. SDDC name requirements are 1-16 character length limit, Must start with a letter, Must be English letters, numbers, - only, No repeating hyphens, Must be unique within the region. Avoid entering confidential information.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// (Required) The number of ESXi hosts to create in the SDDC. You can add more hosts later (see [CreateEsxiHost](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/EsxiHost/CreateEsxiHost)). Creating a SDDC with a ESXi host count of 1 will be considered a single ESXi host SDDC. **Deprecated**. Please use `EsxiHostsCount` of `InitialClusterConfigurations` instead.
        /// 
        /// **Note:** If you later delete EXSi hosts from a production SDDC to total less than 3, you are still billed for the 3 minimum recommended ESXi hosts. Also, you cannot add more VMware workloads to the SDDC until it again has at least 3 ESXi hosts.
        /// </summary>
        [Input("esxiHostsCount")]
        public Input<int>? EsxiHostsCount { get; set; }

        /// <summary>
        /// (Updatable) The ESXi software bundle to install on the ESXi hosts in the SDDC.  Only versions under the same vmwareSoftwareVersion and have been validate by Oracle Cloud VMware Solution will be accepted. To get a list of the available versions, use [ListSupportedVmwareSoftwareVersions](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20230701/SupportedVmwareSoftwareVersionSummary/ListSupportedVmwareSoftwareVersions).
        /// </summary>
        [Input("esxiSoftwareVersion")]
        public Input<string>? EsxiSoftwareVersion { get; set; }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        [Input("hcxAction")]
        public Input<string>? HcxAction { get; set; }

        /// <summary>
        /// The FQDN for HCX Manager.  Example: `hcx-my-sddc.sddc.us-phoenix-1.oraclecloud.com`
        /// </summary>
        [Input("hcxFqdn")]
        public Input<string>? HcxFqdn { get; set; }

        /// <summary>
        /// (**Deprecated**) The SDDC includes an administrator username and initial password for HCX Manager. Make sure to change this initial HCX Manager password to a different value. **Deprecated**. Please use the `oci.Ocvp.getRetrievePassword` data source instead.
        /// </summary>
        [Input("hcxInitialPassword")]
        public Input<string>? HcxInitialPassword { get; set; }

        /// <summary>
        /// HCX configuration of the SDDC.
        /// </summary>
        [Input("hcxMode")]
        public Input<string>? HcxMode { get; set; }

        /// <summary>
        /// (**Deprecated**) The activation keys to use on the on-premises HCX Enterprise appliances you site pair with HCX Manager in your VMware Solution. The number of keys provided depends on the HCX license type. HCX Advanced provides 3 activation keys. HCX Enterprise provides 10 activation keys. **Deprecated**. Please use `HcxOnPremLicenses` instead.
        /// </summary>
        [Input("hcxOnPremKey")]
        public Input<string>? HcxOnPremKey { get; set; }

        [Input("hcxOnPremLicenses")]
        private InputList<Inputs.SddcHcxOnPremLicenseGetArgs>? _hcxOnPremLicenses;

        /// <summary>
        /// The activation licenses to use on the on-premises HCX Enterprise appliance you site pair with HCX Manager in your VMware Solution.
        /// </summary>
        public InputList<Inputs.SddcHcxOnPremLicenseGetArgs> HcxOnPremLicenses
        {
            get => _hcxOnPremLicenses ?? (_hcxOnPremLicenses = new InputList<Inputs.SddcHcxOnPremLicenseGetArgs>());
            set => _hcxOnPremLicenses = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for HCX Manager. For information about `PrivateIp` objects, see the Core Services API.
        /// </summary>
        [Input("hcxPrivateIpId")]
        public Input<string>? HcxPrivateIpId { get; set; }

        /// <summary>
        /// (Optional) (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the HCX component of the VMware environment. This value is required only when `isHcxEnabled` is true. **Deprecated**. Please use `HcxVlanId` of `NetworkConfiguration` instead.
        /// </summary>
        [Input("hcxVlanId")]
        public Input<string>? HcxVlanId { get; set; }

        [Input("initialConfigurations")]
        private InputList<Inputs.SddcInitialConfigurationGetArgs>? _initialConfigurations;

        /// <summary>
        /// Details of SDDC initial configuration
        /// </summary>
        public InputList<Inputs.SddcInitialConfigurationGetArgs> InitialConfigurations
        {
            get => _initialConfigurations ?? (_initialConfigurations = new InputList<Inputs.SddcInitialConfigurationGetArgs>());
            set => _initialConfigurations = value;
        }

        /// <summary>
        /// (Optional) The initial OCPU count of the SDDC's ESXi hosts. **Deprecated**. Please use `InitialHostOcpuCount` of `InitialClusterConfigurations` instead.
        /// </summary>
        [Input("initialHostOcpuCount")]
        public Input<double>? InitialHostOcpuCount { get; set; }

        /// <summary>
        /// (Optional) The initial compute shape of the SDDC's ESXi hosts. [ListSupportedHostShapes](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedHostShapes/ListSupportedHostShapes). **Deprecated**. Please use `InitialHostShapeName` of `InitialClusterConfigurations` instead.
        /// </summary>
        [Input("initialHostShapeName")]
        public Input<string>? InitialHostShapeName { get; set; }

        /// <summary>
        /// (Optional) The billing option selected during SDDC creation. [ListSupportedSkus](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedSkuSummary/ListSupportedSkus). **Deprecated**. Please use  `InitialCommitment` of `InitialClusterConfigurations` instead.
        /// </summary>
        [Input("initialSku")]
        public Input<string>? InitialSku { get; set; }

        /// <summary>
        /// (Optional) A prefix used in the name of each ESXi host and Compute instance in the SDDC. If this isn't set, the SDDC's `displayName` is used as the prefix. 
        /// 
        /// For example, if the value is `mySDDC`, the ESXi hosts are named `mySDDC-1`, `mySDDC-2`, and so on. **Deprecated**. Please use  `InstanceDisplayNamePrefix` of `InitialClusterConfigurations` instead.
        /// </summary>
        [Input("instanceDisplayNamePrefix")]
        public Input<string>? InstanceDisplayNamePrefix { get; set; }

        /// <summary>
        /// For SDDC with dense compute shapes, this parameter indicates whether to enable HCX Advanced for this SDDC. For SDDC with standard compute shapes, this parameter is equivalent to `isHcxEnterpriseEnabled`.
        /// </summary>
        [Input("isHcxEnabled")]
        public Input<bool>? IsHcxEnabled { get; set; }

        /// <summary>
        /// (**Deprecated**) Indicates whether HCX Enterprise is enabled for this SDDC.
        /// </summary>
        [Input("isHcxEnterpriseEnabled")]
        public Input<bool>? IsHcxEnterpriseEnabled { get; set; }

        /// <summary>
        /// Indicates whether SDDC is pending downgrade from HCX Enterprise to HCX Advanced.
        /// </summary>
        [Input("isHcxPendingDowngrade")]
        public Input<bool>? IsHcxPendingDowngrade { get; set; }

        /// <summary>
        /// (Optional) Indicates whether shielded instance is enabled for this SDDC. **Deprecated**. Please use `IsShieldedInstanceEnabled` of `InitialClusterConfigurations` instead.
        /// </summary>
        [Input("isShieldedInstanceEnabled")]
        public Input<bool>? IsShieldedInstanceEnabled { get; set; }

        /// <summary>
        /// Indicates whether this SDDC is designated for only single ESXi host.
        /// </summary>
        [Input("isSingleHostSddc")]
        public Input<bool>? IsSingleHostSddc { get; set; }

        /// <summary>
        /// (Required) (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the NSX Edge Uplink 1 component of the VMware environment. **Deprecated**. Please use `NsxEdgeUplink1vlanId` of `NetworkConfiguration` instead.
        /// </summary>
        [Input("nsxEdgeUplink1vlanId")]
        public Input<string>? NsxEdgeUplink1vlanId { get; set; }

        /// <summary>
        /// (Required) (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the NSX Edge Uplink 2 component of the VMware environment. **Deprecated**. Please use `NsxEdgeUplink2vlanId` of `NetworkConfiguration` instead.
        /// 
        /// **Note:** This VLAN is reserved for future use to deploy public-facing applications on the VMware SDDC.
        /// </summary>
        [Input("nsxEdgeUplink2vlanId")]
        public Input<string>? NsxEdgeUplink2vlanId { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for the NSX Edge Uplink. Use this OCID as the route target for route table rules when setting up connectivity between the SDDC and other networks. For information about `PrivateIp` objects, see the Core Services API.
        /// </summary>
        [Input("nsxEdgeUplinkIpId")]
        public Input<string>? NsxEdgeUplinkIpId { get; set; }

        /// <summary>
        /// (Required) (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the NSX Edge VTEP component of the VMware environment. **Deprecated**. Please use `NsxEdgeVtepVlanId` of `NetworkConfiguration` instead.
        /// </summary>
        [Input("nsxEdgeVtepVlanId")]
        public Input<string>? NsxEdgeVtepVlanId { get; set; }

        /// <summary>
        /// The FQDN for NSX Manager.  Example: `nsx-my-sddc.sddc.us-phoenix-1.oraclecloud.com`
        /// </summary>
        [Input("nsxManagerFqdn")]
        public Input<string>? NsxManagerFqdn { get; set; }

        /// <summary>
        /// (**Deprecated**) The SDDC includes an administrator username and initial password for NSX Manager. Make sure to change this initial NSX Manager password to a different value. **Deprecated**. Please use the `oci.Ocvp.getRetrievePassword` data source instead.
        /// </summary>
        [Input("nsxManagerInitialPassword")]
        public Input<string>? NsxManagerInitialPassword { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for NSX Manager. For information about `PrivateIp` objects, see the Core Services API.
        /// </summary>
        [Input("nsxManagerPrivateIpId")]
        public Input<string>? NsxManagerPrivateIpId { get; set; }

        /// <summary>
        /// The SDDC includes an administrator username and initial password for NSX Manager. You can change this initial username to a different value in NSX Manager.
        /// </summary>
        [Input("nsxManagerUsername")]
        public Input<string>? NsxManagerUsername { get; set; }

        /// <summary>
        /// (**Deprecated**) The VMware NSX overlay workload segment to host your application. Connect to workload portgroup in vCenter to access this overlay segment.
        /// </summary>
        [Input("nsxOverlaySegmentName")]
        public Input<string>? NsxOverlaySegmentName { get; set; }

        /// <summary>
        /// (Required) (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the NSX VTEP component of the VMware environment. **Deprecated**. Please use `NsxVtepVlanId` of `NetworkConfiguration` instead.
        /// </summary>
        [Input("nsxVtepVlanId")]
        public Input<string>? NsxVtepVlanId { get; set; }

        /// <summary>
        /// (Required) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management subnet to use for provisioning the SDDC. **Deprecated**. Please use `ProvisioningSubnetId` of `NetworkConfiguration` instead.
        /// </summary>
        [Input("provisioningSubnetId")]
        public Input<string>? ProvisioningSubnetId { get; set; }

        /// <summary>
        /// (Optional) (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the Provisioning component of the VMware environment. **Deprecated**. Please use `ProvisioningVlanId` of `NetworkConfiguration` instead.
        /// </summary>
        [Input("provisioningVlanId")]
        public Input<string>? ProvisioningVlanId { get; set; }

        /// <summary>
        /// (Updatable) HCX on-premise licenses status will be refreshed whenever the value of this field is changed.
        /// </summary>
        [Input("refreshHcxLicenseStatus")]
        public Input<bool>? RefreshHcxLicenseStatus { get; set; }

        /// <summary>
        /// (Optional) (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the vSphere Replication component of the VMware environment. **Deprecated**. Please use `ReplicationVlanId` of `NetworkConfiguration` instead.
        /// </summary>
        [Input("replicationVlanId")]
        public Input<string>? ReplicationVlanId { get; set; }

        [Input("reservingHcxOnPremiseLicenseKeys")]
        private InputList<string>? _reservingHcxOnPremiseLicenseKeys;

        /// <summary>
        /// (Updatable) The HCX on-premise licenses to be reserved when downgrade from HCX Enterprise to HCX Advanced. It should not be provided during resource creation. It is required and can only be set when the HcxAction is "DOWNGRADE". Its value can only be changed when HcxAction is updated.
        /// </summary>
        public InputList<string> ReservingHcxOnPremiseLicenseKeys
        {
            get => _reservingHcxOnPremiseLicenseKeys ?? (_reservingHcxOnPremiseLicenseKeys = new InputList<string>());
            set => _reservingHcxOnPremiseLicenseKeys = value;
        }

        /// <summary>
        /// (Updatable) One or more public SSH keys to be included in the `~/.ssh/authorized_keys` file for the default user on each ESXi host. Use a newline character to separate multiple keys. The SSH keys must be in the format required for the `AuthorizedKeys` file
        /// </summary>
        [Input("sshAuthorizedKeys")]
        public Input<string>? SshAuthorizedKeys { get; set; }

        /// <summary>
        /// The current state of the SDDC.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The date and time the SDDC was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The date and time current HCX Enterprise billing cycle ends, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Input("timeHcxBillingCycleEnd")]
        public Input<string>? TimeHcxBillingCycleEnd { get; set; }

        /// <summary>
        /// The date and time the SDDC's HCX on-premise license status was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Input("timeHcxLicenseStatusUpdated")]
        public Input<string>? TimeHcxLicenseStatusUpdated { get; set; }

        /// <summary>
        /// The date and time the SDDC was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        [Input("upgradeLicenses")]
        private InputList<Inputs.SddcUpgradeLicenseGetArgs>? _upgradeLicenses;

        /// <summary>
        /// (**Deprecated**) The vSphere licenses to use when upgrading the SDDC.
        /// </summary>
        [Obsolete(@"The 'upgrade_licenses' field has been deprecated. Please use the 'ocvp_cluster_resource' resource instead.")]
        public InputList<Inputs.SddcUpgradeLicenseGetArgs> UpgradeLicenses
        {
            get => _upgradeLicenses ?? (_upgradeLicenses = new InputList<Inputs.SddcUpgradeLicenseGetArgs>());
            set => _upgradeLicenses = value;
        }

        /// <summary>
        /// The FQDN for vCenter.  Example: `vcenter-my-sddc.sddc.us-phoenix-1.oraclecloud.com`
        /// </summary>
        [Input("vcenterFqdn")]
        public Input<string>? VcenterFqdn { get; set; }

        /// <summary>
        /// (**Deprecated**) The SDDC includes an administrator username and initial password for vCenter. Make sure to change this initial vCenter password to a different value. **Deprecated**. Please use the `oci.Ocvp.getRetrievePassword` data source instead.
        /// </summary>
        [Input("vcenterInitialPassword")]
        public Input<string>? VcenterInitialPassword { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for vCenter. For information about `PrivateIp` objects, see the Core Services API.
        /// </summary>
        [Input("vcenterPrivateIpId")]
        public Input<string>? VcenterPrivateIpId { get; set; }

        /// <summary>
        /// The SDDC includes an administrator username and initial password for vCenter. You can change this initial username to a different value in vCenter.
        /// </summary>
        [Input("vcenterUsername")]
        public Input<string>? VcenterUsername { get; set; }

        /// <summary>
        /// (Required) (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the vMotion component of the VMware environment. **Deprecated**. Please use `VmotionVlanId` of `NetworkConfiguration` instead.
        /// </summary>
        [Input("vmotionVlanId")]
        public Input<string>? VmotionVlanId { get; set; }

        /// <summary>
        /// (Updatable) The VMware software bundle to install on the ESXi hosts in the SDDC. To get a list of the available versions, use [ListSupportedVmwareSoftwareVersions](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedVmwareSoftwareVersionSummary/ListSupportedVmwareSoftwareVersions).
        /// </summary>
        [Input("vmwareSoftwareVersion")]
        public Input<string>? VmwareSoftwareVersion { get; set; }

        /// <summary>
        /// (Required) (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the vSAN component of the VMware environment. **Deprecated**. Please use `VsanVlanId` of `NetworkConfiguration` instead.
        /// </summary>
        [Input("vsanVlanId")]
        public Input<string>? VsanVlanId { get; set; }

        /// <summary>
        /// (**Deprecated**) The link to guidance for upgrading vSphere.
        /// </summary>
        [Input("vsphereUpgradeGuide")]
        public Input<string>? VsphereUpgradeGuide { get; set; }

        [Input("vsphereUpgradeObjects")]
        private InputList<Inputs.SddcVsphereUpgradeObjectGetArgs>? _vsphereUpgradeObjects;

        /// <summary>
        /// (**Deprecated**) The links to binary objects needed to upgrade vSphere.
        /// </summary>
        [Obsolete(@"The 'vsphere_upgrade_objects' field has been deprecated. Please use the 'ocvp_cluster_resource' resource instead.")]
        public InputList<Inputs.SddcVsphereUpgradeObjectGetArgs> VsphereUpgradeObjects
        {
            get => _vsphereUpgradeObjects ?? (_vsphereUpgradeObjects = new InputList<Inputs.SddcVsphereUpgradeObjectGetArgs>());
            set => _vsphereUpgradeObjects = value;
        }

        /// <summary>
        /// (Required) (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the vSphere component of the VMware environment. **Deprecated**. Please use `VsphereVlanId` of `NetworkConfiguration` instead.
        /// </summary>
        [Input("vsphereVlanId")]
        public Input<string>? VsphereVlanId { get; set; }

        /// <summary>
        /// (Optional) The CIDR block for the IP addresses that VMware VMs in the SDDC use to run application workloads.  **Deprecated**. Please use `WorkloadNetworkCidr` of `InitialClusterConfigurations` instead.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("workloadNetworkCidr")]
        public Input<string>? WorkloadNetworkCidr { get; set; }

        public SddcState()
        {
        }
        public static new SddcState Empty => new SddcState();
    }
}
