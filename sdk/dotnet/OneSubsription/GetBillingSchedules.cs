// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OneSubsription
{
    public static class GetBillingSchedules
    {
        /// <summary>
        /// This data source provides the list of Billing Schedules in Oracle Cloud Infrastructure Onesubscription service.
        /// 
        /// This list API returns all billing schedules for given subscription id and
        /// for a particular Subscribed Service if provided
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testBillingSchedules = Oci.OneSubsription.GetBillingSchedules.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         SubscriptionId = oci_onesubscription_subscription.Test_subscription.Id,
        ///         SubscribedServiceId = oci_onesubscription_subscribed_service.Test_subscribed_service.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetBillingSchedulesResult> InvokeAsync(GetBillingSchedulesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBillingSchedulesResult>("oci:OneSubsription/getBillingSchedules:getBillingSchedules", args ?? new GetBillingSchedulesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Billing Schedules in Oracle Cloud Infrastructure Onesubscription service.
        /// 
        /// This list API returns all billing schedules for given subscription id and
        /// for a particular Subscribed Service if provided
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testBillingSchedules = Oci.OneSubsription.GetBillingSchedules.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         SubscriptionId = oci_onesubscription_subscription.Test_subscription.Id,
        ///         SubscribedServiceId = oci_onesubscription_subscribed_service.Test_subscribed_service.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetBillingSchedulesResult> Invoke(GetBillingSchedulesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBillingSchedulesResult>("oci:OneSubsription/getBillingSchedules:getBillingSchedules", args ?? new GetBillingSchedulesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBillingSchedulesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the root compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetBillingSchedulesFilterArgs>? _filters;
        public List<Inputs.GetBillingSchedulesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetBillingSchedulesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// This param is used to get only the billing schedules for a particular Subscribed Service
        /// </summary>
        [Input("subscribedServiceId")]
        public string? SubscribedServiceId { get; set; }

        /// <summary>
        /// This param is used to get only the billing schedules for a particular Subscription Id
        /// </summary>
        [Input("subscriptionId", required: true)]
        public string SubscriptionId { get; set; } = null!;

        public GetBillingSchedulesArgs()
        {
        }
        public static new GetBillingSchedulesArgs Empty => new GetBillingSchedulesArgs();
    }

    public sealed class GetBillingSchedulesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the root compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetBillingSchedulesFilterInputArgs>? _filters;
        public InputList<Inputs.GetBillingSchedulesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetBillingSchedulesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// This param is used to get only the billing schedules for a particular Subscribed Service
        /// </summary>
        [Input("subscribedServiceId")]
        public Input<string>? SubscribedServiceId { get; set; }

        /// <summary>
        /// This param is used to get only the billing schedules for a particular Subscription Id
        /// </summary>
        [Input("subscriptionId", required: true)]
        public Input<string> SubscriptionId { get; set; } = null!;

        public GetBillingSchedulesInvokeArgs()
        {
        }
        public static new GetBillingSchedulesInvokeArgs Empty => new GetBillingSchedulesInvokeArgs();
    }


    [OutputType]
    public sealed class GetBillingSchedulesResult
    {
        /// <summary>
        /// The list of billing_schedules.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBillingSchedulesBillingScheduleResult> BillingSchedules;
        public readonly string CompartmentId;
        public readonly ImmutableArray<Outputs.GetBillingSchedulesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// SPM internal Subscribed Service ID
        /// </summary>
        public readonly string? SubscribedServiceId;
        public readonly string SubscriptionId;

        [OutputConstructor]
        private GetBillingSchedulesResult(
            ImmutableArray<Outputs.GetBillingSchedulesBillingScheduleResult> billingSchedules,

            string compartmentId,

            ImmutableArray<Outputs.GetBillingSchedulesFilterResult> filters,

            string? id,

            string? subscribedServiceId,

            string subscriptionId)
        {
            BillingSchedules = billingSchedules;
            CompartmentId = compartmentId;
            Filters = filters;
            Id = id;
            SubscribedServiceId = subscribedServiceId;
            SubscriptionId = subscriptionId;
        }
    }
}
