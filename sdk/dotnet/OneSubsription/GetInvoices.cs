// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OneSubsription
{
    public static class GetInvoices
    {
        /// <summary>
        /// This data source provides the list of Invoices in Oracle Cloud Infrastructure Onesubscription service.
        /// 
        /// This is a collection API which returns a list of Invoices for given filters.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testInvoices = Oci.OneSubsription.GetInvoices.Invoke(new()
        ///     {
        ///         ArCustomerTransactionId = testArCustomerTransaction.Id,
        ///         CompartmentId = compartmentId,
        ///         Fields = invoiceFields,
        ///         TimeFrom = invoiceTimeFrom,
        ///         TimeTo = invoiceTimeTo,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetInvoicesResult> InvokeAsync(GetInvoicesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetInvoicesResult>("oci:OneSubsription/getInvoices:getInvoices", args ?? new GetInvoicesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Invoices in Oracle Cloud Infrastructure Onesubscription service.
        /// 
        /// This is a collection API which returns a list of Invoices for given filters.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testInvoices = Oci.OneSubsription.GetInvoices.Invoke(new()
        ///     {
        ///         ArCustomerTransactionId = testArCustomerTransaction.Id,
        ///         CompartmentId = compartmentId,
        ///         Fields = invoiceFields,
        ///         TimeFrom = invoiceTimeFrom,
        ///         TimeTo = invoiceTimeTo,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetInvoicesResult> Invoke(GetInvoicesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetInvoicesResult>("oci:OneSubsription/getInvoices:getInvoices", args ?? new GetInvoicesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInvoicesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// AR Unique identifier for an invoice .
        /// </summary>
        [Input("arCustomerTransactionId", required: true)]
        public string ArCustomerTransactionId { get; set; } = null!;

        /// <summary>
        /// The OCID of the root compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        [Input("fields")]
        private List<string>? _fields;

        /// <summary>
        /// Partial response refers to an optimization technique offered by the RESTful web APIs to return only the information  (fields) required by the client. This parameter is used to control what fields to return.
        /// </summary>
        public List<string> Fields
        {
            get => _fields ?? (_fields = new List<string>());
            set => _fields = value;
        }

        [Input("filters")]
        private List<Inputs.GetInvoicesFilterArgs>? _filters;
        public List<Inputs.GetInvoicesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetInvoicesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Initial date to filter Invoice data in SPM.
        /// </summary>
        [Input("timeFrom")]
        public string? TimeFrom { get; set; }

        /// <summary>
        /// Final date to filter Invoice data in SPM.
        /// </summary>
        [Input("timeTo")]
        public string? TimeTo { get; set; }

        public GetInvoicesArgs()
        {
        }
        public static new GetInvoicesArgs Empty => new GetInvoicesArgs();
    }

    public sealed class GetInvoicesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// AR Unique identifier for an invoice .
        /// </summary>
        [Input("arCustomerTransactionId", required: true)]
        public Input<string> ArCustomerTransactionId { get; set; } = null!;

        /// <summary>
        /// The OCID of the root compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("fields")]
        private InputList<string>? _fields;

        /// <summary>
        /// Partial response refers to an optimization technique offered by the RESTful web APIs to return only the information  (fields) required by the client. This parameter is used to control what fields to return.
        /// </summary>
        public InputList<string> Fields
        {
            get => _fields ?? (_fields = new InputList<string>());
            set => _fields = value;
        }

        [Input("filters")]
        private InputList<Inputs.GetInvoicesFilterInputArgs>? _filters;
        public InputList<Inputs.GetInvoicesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetInvoicesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Initial date to filter Invoice data in SPM.
        /// </summary>
        [Input("timeFrom")]
        public Input<string>? TimeFrom { get; set; }

        /// <summary>
        /// Final date to filter Invoice data in SPM.
        /// </summary>
        [Input("timeTo")]
        public Input<string>? TimeTo { get; set; }

        public GetInvoicesInvokeArgs()
        {
        }
        public static new GetInvoicesInvokeArgs Empty => new GetInvoicesInvokeArgs();
    }


    [OutputType]
    public sealed class GetInvoicesResult
    {
        public readonly string ArCustomerTransactionId;
        public readonly string CompartmentId;
        public readonly ImmutableArray<string> Fields;
        public readonly ImmutableArray<Outputs.GetInvoicesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of invoices.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInvoicesInvoiceResult> Invoices;
        public readonly string? TimeFrom;
        public readonly string? TimeTo;

        [OutputConstructor]
        private GetInvoicesResult(
            string arCustomerTransactionId,

            string compartmentId,

            ImmutableArray<string> fields,

            ImmutableArray<Outputs.GetInvoicesFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetInvoicesInvoiceResult> invoices,

            string? timeFrom,

            string? timeTo)
        {
            ArCustomerTransactionId = arCustomerTransactionId;
            CompartmentId = compartmentId;
            Fields = fields;
            Filters = filters;
            Id = id;
            Invoices = invoices;
            TimeFrom = timeFrom;
            TimeTo = timeTo;
        }
    }
}
