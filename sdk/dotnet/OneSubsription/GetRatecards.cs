// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OneSubsription
{
    public static class GetRatecards
    {
        /// <summary>
        /// This data source provides the list of Ratecards in Oracle Cloud Infrastructure Onesubscription service.
        /// 
        /// List API that returns all ratecards for given Subscription Id and Account ID (if provided) and
        /// for a particular date range
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testRatecards = Oci.OneSubsription.GetRatecards.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         SubscriptionId = testSubscription.Id,
        ///         PartNumber = ratecardPartNumber,
        ///         TimeFrom = ratecardTimeFrom,
        ///         TimeTo = ratecardTimeTo,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetRatecardsResult> InvokeAsync(GetRatecardsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRatecardsResult>("oci:OneSubsription/getRatecards:getRatecards", args ?? new GetRatecardsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Ratecards in Oracle Cloud Infrastructure Onesubscription service.
        /// 
        /// List API that returns all ratecards for given Subscription Id and Account ID (if provided) and
        /// for a particular date range
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testRatecards = Oci.OneSubsription.GetRatecards.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         SubscriptionId = testSubscription.Id,
        ///         PartNumber = ratecardPartNumber,
        ///         TimeFrom = ratecardTimeFrom,
        ///         TimeTo = ratecardTimeTo,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetRatecardsResult> Invoke(GetRatecardsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRatecardsResult>("oci:OneSubsription/getRatecards:getRatecards", args ?? new GetRatecardsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRatecardsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the root compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetRatecardsFilterArgs>? _filters;
        public List<Inputs.GetRatecardsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetRatecardsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// This param is used to get the rate card(s) filterd by the partNumber
        /// </summary>
        [Input("partNumber")]
        public string? PartNumber { get; set; }

        /// <summary>
        /// Line level Subscription Id
        /// </summary>
        [Input("subscriptionId", required: true)]
        public string SubscriptionId { get; set; } = null!;

        /// <summary>
        /// This param is used to get the rate card(s) whose effective start date starts on or after a particular date
        /// </summary>
        [Input("timeFrom")]
        public string? TimeFrom { get; set; }

        /// <summary>
        /// This param is used to get the rate card(s) whose effective end date ends on or before a particular date
        /// </summary>
        [Input("timeTo")]
        public string? TimeTo { get; set; }

        public GetRatecardsArgs()
        {
        }
        public static new GetRatecardsArgs Empty => new GetRatecardsArgs();
    }

    public sealed class GetRatecardsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the root compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetRatecardsFilterInputArgs>? _filters;
        public InputList<Inputs.GetRatecardsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetRatecardsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// This param is used to get the rate card(s) filterd by the partNumber
        /// </summary>
        [Input("partNumber")]
        public Input<string>? PartNumber { get; set; }

        /// <summary>
        /// Line level Subscription Id
        /// </summary>
        [Input("subscriptionId", required: true)]
        public Input<string> SubscriptionId { get; set; } = null!;

        /// <summary>
        /// This param is used to get the rate card(s) whose effective start date starts on or after a particular date
        /// </summary>
        [Input("timeFrom")]
        public Input<string>? TimeFrom { get; set; }

        /// <summary>
        /// This param is used to get the rate card(s) whose effective end date ends on or before a particular date
        /// </summary>
        [Input("timeTo")]
        public Input<string>? TimeTo { get; set; }

        public GetRatecardsInvokeArgs()
        {
        }
        public static new GetRatecardsInvokeArgs Empty => new GetRatecardsInvokeArgs();
    }


    [OutputType]
    public sealed class GetRatecardsResult
    {
        public readonly string CompartmentId;
        public readonly ImmutableArray<Outputs.GetRatecardsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Product part numner
        /// </summary>
        public readonly string? PartNumber;
        /// <summary>
        /// The list of rate_cards.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRatecardsRateCardResult> RateCards;
        public readonly string SubscriptionId;
        public readonly string? TimeFrom;
        public readonly string? TimeTo;

        [OutputConstructor]
        private GetRatecardsResult(
            string compartmentId,

            ImmutableArray<Outputs.GetRatecardsFilterResult> filters,

            string id,

            string? partNumber,

            ImmutableArray<Outputs.GetRatecardsRateCardResult> rateCards,

            string subscriptionId,

            string? timeFrom,

            string? timeTo)
        {
            CompartmentId = compartmentId;
            Filters = filters;
            Id = id;
            PartNumber = partNumber;
            RateCards = rateCards;
            SubscriptionId = subscriptionId;
            TimeFrom = timeFrom;
            TimeTo = timeTo;
        }
    }
}
