// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OneSubsription
{
    public static class GetSubscribedServices
    {
        /// <summary>
        /// This data source provides the list of Subscribed Services in Oracle Cloud Infrastructure Onesubscription service.
        /// 
        /// This list API returns all subscribed services for given Subscription ID
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testSubscribedServices = Output.Create(Oci.OneSubsription.GetSubscribedServices.InvokeAsync(new Oci.OneSubsription.GetSubscribedServicesArgs
        ///         {
        ///             CompartmentId = @var.Compartment_id,
        ///             SubscriptionId = oci_onesubscription_subscription.Test_subscription.Id,
        ///             OrderLineId = oci_onesubscription_order_line.Test_order_line.Id,
        ///             Status = @var.Subscribed_service_status,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetSubscribedServicesResult> InvokeAsync(GetSubscribedServicesArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSubscribedServicesResult>("oci:OneSubsription/getSubscribedServices:getSubscribedServices", args ?? new GetSubscribedServicesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Subscribed Services in Oracle Cloud Infrastructure Onesubscription service.
        /// 
        /// This list API returns all subscribed services for given Subscription ID
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testSubscribedServices = Output.Create(Oci.OneSubsription.GetSubscribedServices.InvokeAsync(new Oci.OneSubsription.GetSubscribedServicesArgs
        ///         {
        ///             CompartmentId = @var.Compartment_id,
        ///             SubscriptionId = oci_onesubscription_subscription.Test_subscription.Id,
        ///             OrderLineId = oci_onesubscription_order_line.Test_order_line.Id,
        ///             Status = @var.Subscribed_service_status,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetSubscribedServicesResult> Invoke(GetSubscribedServicesInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetSubscribedServicesResult>("oci:OneSubsription/getSubscribedServices:getSubscribedServices", args ?? new GetSubscribedServicesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSubscribedServicesArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the root compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetSubscribedServicesFilterArgs>? _filters;
        public List<Inputs.GetSubscribedServicesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetSubscribedServicesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Order Line identifier at subscribed service level . This identifier is originated in Order Management module. Default is null.
        /// </summary>
        [Input("orderLineId")]
        public string? OrderLineId { get; set; }

        /// <summary>
        /// This param is used to filter subscribed services based on its status
        /// </summary>
        [Input("status")]
        public string? Status { get; set; }

        /// <summary>
        /// Line level Subscription Id
        /// </summary>
        [Input("subscriptionId", required: true)]
        public string SubscriptionId { get; set; } = null!;

        public GetSubscribedServicesArgs()
        {
        }
    }

    public sealed class GetSubscribedServicesInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the root compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetSubscribedServicesFilterInputArgs>? _filters;
        public InputList<Inputs.GetSubscribedServicesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetSubscribedServicesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Order Line identifier at subscribed service level . This identifier is originated in Order Management module. Default is null.
        /// </summary>
        [Input("orderLineId")]
        public Input<string>? OrderLineId { get; set; }

        /// <summary>
        /// This param is used to filter subscribed services based on its status
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Line level Subscription Id
        /// </summary>
        [Input("subscriptionId", required: true)]
        public Input<string> SubscriptionId { get; set; } = null!;

        public GetSubscribedServicesInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetSubscribedServicesResult
    {
        public readonly string CompartmentId;
        public readonly ImmutableArray<Outputs.GetSubscribedServicesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Sales Order Line Id associated to the subscribed service
        /// </summary>
        public readonly string? OrderLineId;
        /// <summary>
        /// Subscribed service status
        /// </summary>
        public readonly string? Status;
        /// <summary>
        /// The list of subscribed_services.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSubscribedServicesSubscribedServiceResult> SubscribedServices;
        /// <summary>
        /// Subscription ID associated to the subscribed service
        /// </summary>
        public readonly string SubscriptionId;

        [OutputConstructor]
        private GetSubscribedServicesResult(
            string compartmentId,

            ImmutableArray<Outputs.GetSubscribedServicesFilterResult> filters,

            string id,

            string? orderLineId,

            string? status,

            ImmutableArray<Outputs.GetSubscribedServicesSubscribedServiceResult> subscribedServices,

            string subscriptionId)
        {
            CompartmentId = compartmentId;
            Filters = filters;
            Id = id;
            OrderLineId = orderLineId;
            Status = status;
            SubscribedServices = subscribedServices;
            SubscriptionId = subscriptionId;
        }
    }
}
