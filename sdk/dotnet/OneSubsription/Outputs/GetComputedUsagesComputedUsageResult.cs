// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OneSubsription.Outputs
{

    [OutputType]
    public sealed class GetComputedUsagesComputedUsageResult
    {
        /// <summary>
        /// Subscribed service commitmentId.
        /// </summary>
        public readonly string CommitmentServiceId;
        /// <summary>
        /// SPM Internal compute records source .
        /// </summary>
        public readonly string ComputeSource;
        public readonly string ComputedUsageId;
        /// <summary>
        /// Computed Line Amount not rounded
        /// </summary>
        public readonly string Cost;
        /// <summary>
        /// Computed Line Amount rounded.
        /// </summary>
        public readonly string CostRounded;
        /// <summary>
        /// Currency code
        /// </summary>
        public readonly string CurrencyCode;
        /// <summary>
        /// Data Center Attribute as sent by MQS to SPM.
        /// </summary>
        public readonly string DataCenter;
        /// <summary>
        /// SPM Internal computed usage Id , 32 character string
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Invoicing status for the aggregated compute usage
        /// </summary>
        public readonly bool IsInvoiced;
        /// <summary>
        /// MQS Identfier send to SPM , SPM does not transform this attribute and is received as is.
        /// </summary>
        public readonly string MqsMessageId;
        /// <summary>
        /// Net Unit Price for the product in consideration, price actual.
        /// </summary>
        public readonly string NetUnitPrice;
        /// <summary>
        /// SPM Internal Original usage Line number identifier in SPM coming from Metered Services entity.
        /// </summary>
        public readonly string OriginalUsageNumber;
        /// <summary>
        /// Product part number for subscribed service line, called parent product.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetComputedUsagesComputedUsageParentProductResult> ParentProducts;
        /// <summary>
        /// Subscribed service line parent id
        /// </summary>
        public readonly string ParentSubscribedServiceId;
        /// <summary>
        /// Subscription plan number
        /// </summary>
        public readonly string PlanNumber;
        /// <summary>
        /// Product description
        /// </summary>
        public readonly ImmutableArray<Outputs.GetComputedUsagesComputedUsageProductResult> Products;
        /// <summary>
        /// Total Quantity that was used for computation
        /// </summary>
        public readonly string Quantity;
        /// <summary>
        /// Ratecard Id at subscribed service level
        /// </summary>
        public readonly string RateCardId;
        /// <summary>
        /// References the tier in the ratecard for that usage (OCI will be using the same reference to cross-reference for correctness on the usage csv report), comes from Entity OBSCNTR_IPT_PRODUCTTIER.
        /// </summary>
        public readonly string RateCardTierdId;
        /// <summary>
        /// Computed Usage created time, expressed in RFC 3339 timestamp format.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// Metered Service date, expressed in RFC 3339 timestamp format.
        /// </summary>
        public readonly string TimeMeteredOn;
        /// <summary>
        /// Usae computation date, expressed in RFC 3339 timestamp format.
        /// </summary>
        public readonly string TimeOfArrival;
        /// <summary>
        /// Computed Usage updated time, expressed in RFC 3339 timestamp format.
        /// </summary>
        public readonly string TimeUpdated;
        /// <summary>
        /// Usage compute type in SPM.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Unit of Messure
        /// </summary>
        public readonly string UnitOfMeasure;
        /// <summary>
        /// SPM Internal usage Line number identifier in SPM coming from Metered Services entity.
        /// </summary>
        public readonly string UsageNumber;

        [OutputConstructor]
        private GetComputedUsagesComputedUsageResult(
            string commitmentServiceId,

            string computeSource,

            string computedUsageId,

            string cost,

            string costRounded,

            string currencyCode,

            string dataCenter,

            string id,

            bool isInvoiced,

            string mqsMessageId,

            string netUnitPrice,

            string originalUsageNumber,

            ImmutableArray<Outputs.GetComputedUsagesComputedUsageParentProductResult> parentProducts,

            string parentSubscribedServiceId,

            string planNumber,

            ImmutableArray<Outputs.GetComputedUsagesComputedUsageProductResult> products,

            string quantity,

            string rateCardId,

            string rateCardTierdId,

            string timeCreated,

            string timeMeteredOn,

            string timeOfArrival,

            string timeUpdated,

            string type,

            string unitOfMeasure,

            string usageNumber)
        {
            CommitmentServiceId = commitmentServiceId;
            ComputeSource = computeSource;
            ComputedUsageId = computedUsageId;
            Cost = cost;
            CostRounded = costRounded;
            CurrencyCode = currencyCode;
            DataCenter = dataCenter;
            Id = id;
            IsInvoiced = isInvoiced;
            MqsMessageId = mqsMessageId;
            NetUnitPrice = netUnitPrice;
            OriginalUsageNumber = originalUsageNumber;
            ParentProducts = parentProducts;
            ParentSubscribedServiceId = parentSubscribedServiceId;
            PlanNumber = planNumber;
            Products = products;
            Quantity = quantity;
            RateCardId = rateCardId;
            RateCardTierdId = rateCardTierdId;
            TimeCreated = timeCreated;
            TimeMeteredOn = timeMeteredOn;
            TimeOfArrival = timeOfArrival;
            TimeUpdated = timeUpdated;
            Type = type;
            UnitOfMeasure = unitOfMeasure;
            UsageNumber = usageNumber;
        }
    }
}
