// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OneSubsription.Outputs
{

    [OutputType]
    public sealed class GetOrganizationSubscriptionsOrganizationSubscriptionResult
    {
        /// <summary>
        /// Currency details
        /// </summary>
        public readonly ImmutableArray<Outputs.GetOrganizationSubscriptionsOrganizationSubscriptionCurrencyResult> Currencies;
        /// <summary>
        /// SPM internal Subscription ID
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Customer friendly service name provided by PRG
        /// </summary>
        public readonly string? ServiceName;
        /// <summary>
        /// Status of the plan
        /// </summary>
        public readonly string? Status;
        /// <summary>
        /// Represents the date when the last service of the subscription ends
        /// </summary>
        public readonly string? TimeEnd;
        /// <summary>
        /// Represents the date when the first service of the subscription was activated
        /// </summary>
        public readonly string? TimeStart;
        /// <summary>
        /// Total aggregate TCLV of all lines for the subscription including expired, active, and signed
        /// </summary>
        public readonly string? TotalValue;
        /// <summary>
        /// Subscription Type i.e. IAAS,SAAS,PAAS
        /// </summary>
        public readonly string? Type;

        [OutputConstructor]
        private GetOrganizationSubscriptionsOrganizationSubscriptionResult(
            ImmutableArray<Outputs.GetOrganizationSubscriptionsOrganizationSubscriptionCurrencyResult> currencies,

            string? id,

            string? serviceName,

            string? status,

            string? timeEnd,

            string? timeStart,

            string? totalValue,

            string? type)
        {
            Currencies = currencies;
            Id = id;
            ServiceName = serviceName;
            Status = status;
            TimeEnd = timeEnd;
            TimeStart = timeStart;
            TotalValue = totalValue;
            Type = type;
        }
    }
}
