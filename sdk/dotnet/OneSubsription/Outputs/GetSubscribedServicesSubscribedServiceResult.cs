// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OneSubsription.Outputs
{

    [OutputType]
    public sealed class GetSubscribedServicesSubscribedServiceResult
    {
        /// <summary>
        /// Subscribed service admin email id
        /// </summary>
        public readonly string? AdminEmail;
        /// <summary>
        /// Subscribed service agreement ID
        /// </summary>
        public readonly string? AgreementId;
        /// <summary>
        /// Subscribed service agrrement name
        /// </summary>
        public readonly string? AgreementName;
        /// <summary>
        /// Subscribed service agrrement type
        /// </summary>
        public readonly string? AgreementType;
        /// <summary>
        /// Commitment available amount
        /// </summary>
        public readonly string? AvailableAmount;
        /// <summary>
        /// Address.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSubscribedServicesSubscribedServiceBillToAddressResult> BillToAddresses;
        /// <summary>
        /// User.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSubscribedServicesSubscribedServiceBillToContactResult> BillToContacts;
        /// <summary>
        /// Business partner.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSubscribedServicesSubscribedServiceBillToCustomerResult> BillToCustomers;
        /// <summary>
        /// Subscribed service invoice frequency
        /// </summary>
        public readonly string? BillingFrequency;
        /// <summary>
        /// Booking Opportunity Number of Subscribed Service
        /// </summary>
        public readonly string? BookingOptyNumber;
        /// <summary>
        /// Subscribed service buyer email id
        /// </summary>
        public readonly string? BuyerEmail;
        /// <summary>
        /// Subscribed service commitment schedule Id
        /// </summary>
        public readonly string? CommitmentScheduleId;
        /// <summary>
        /// List of Commitment services of a line
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSubscribedServicesSubscribedServiceCommitmentServiceResult> CommitmentServices;
        /// <summary>
        /// User that created the Payment term
        /// </summary>
        public readonly string? CreatedBy;
        /// <summary>
        /// Subscribed service credit percentage
        /// </summary>
        public readonly string? CreditPercentage;
        /// <summary>
        /// Subscribed service CSI number
        /// </summary>
        public readonly string? Csi;
        /// <summary>
        /// Identifier for a customer's transactions for purchase of ay oracle services
        /// </summary>
        public readonly string? CustomerTransactionReference;
        /// <summary>
        /// Subscribed service data center
        /// </summary>
        public readonly string? DataCenter;
        /// <summary>
        /// Subscribed service data center region
        /// </summary>
        public readonly string? DataCenterRegion;
        /// <summary>
        /// Subscribed service eligible to renew field
        /// </summary>
        public readonly string? EligibleToRenew;
        /// <summary>
        /// Address.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSubscribedServicesSubscribedServiceEndUserAddressResult> EndUserAddresses;
        /// <summary>
        /// User.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSubscribedServicesSubscribedServiceEndUserContactResult> EndUserContacts;
        /// <summary>
        /// Business partner.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSubscribedServicesSubscribedServiceEndUserCustomerResult> EndUserCustomers;
        /// <summary>
        /// Subscribed service fulfillment set
        /// </summary>
        public readonly string? FulfillmentSet;
        /// <summary>
        /// Funded Allocation line value example: 12000.00
        /// </summary>
        public readonly string? FundedAllocationValue;
        /// <summary>
        /// SPM internal Subscribed Service ID
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Indicates if a service can recieve usages and consequently have available amounts computed
        /// </summary>
        public readonly bool? IsAllowance;
        /// <summary>
        /// If true compares rate between ratecard and the active pricelist and minimum rate would be fetched
        /// </summary>
        public readonly bool? IsCapToPriceList;
        /// <summary>
        /// Used in context of service credit lines
        /// </summary>
        public readonly bool? IsCreditEnabled;
        /// <summary>
        /// Indicator on whether or not there has been usage for the subscribed service
        /// </summary>
        public readonly bool? IsHavingUsage;
        /// <summary>
        /// Subscribed service intent to pay flag
        /// </summary>
        public readonly bool? IsIntentToPay;
        /// <summary>
        /// Subscribed service payg flag
        /// </summary>
        public readonly bool? IsPayg;
        /// <summary>
        /// Indicates if the Subscribed service has a single ratecard
        /// </summary>
        public readonly bool? IsSingleRateCard;
        /// <summary>
        /// Indicates if the commitment lines can have different quantities
        /// </summary>
        public readonly bool? IsVariableCommitment;
        /// <summary>
        /// Subscribed service line net amount
        /// </summary>
        public readonly string? LineNetAmount;
        /// <summary>
        /// Subscribed service Major Set
        /// </summary>
        public readonly string? MajorSet;
        /// <summary>
        /// Rate card tier net unit price
        /// </summary>
        public readonly string? NetUnitPrice;
        /// <summary>
        /// Subscribed service operation type
        /// </summary>
        public readonly string? OperationType;
        /// <summary>
        /// Sales Order Header associated to the subscribed service
        /// </summary>
        public readonly string? OrderHeaderId;
        /// <summary>
        /// Order Line identifier at subscribed service level . This identifier is originated in Order Management module. Default is null.
        /// </summary>
        public readonly string? OrderLineId;
        /// <summary>
        /// Sales Order Line Number associated to the subscribed service
        /// </summary>
        public readonly int? OrderLineNumber;
        /// <summary>
        /// Sales Order Number associated to the subscribed service
        /// </summary>
        public readonly string? OrderNumber;
        /// <summary>
        /// Order Type of Subscribed Service
        /// </summary>
        public readonly string? OrderType;
        /// <summary>
        /// Subscribed service Promotion Amount
        /// </summary>
        public readonly string? OriginalPromoAmount;
        /// <summary>
        /// Overage Bill To of Subscribed Service
        /// </summary>
        public readonly string? OverageBillTo;
        /// <summary>
        /// Subscribed service Overage Discount Percentage
        /// </summary>
        public readonly string? OverageDiscountPercentage;
        /// <summary>
        /// Overage Policy of Subscribed Service
        /// </summary>
        public readonly string? OveragePolicy;
        /// <summary>
        /// Subscribed service partner credit amount
        /// </summary>
        public readonly string? PartnerCreditAmount;
        /// <summary>
        /// This field contains the name of the partner to which the subscription belongs - depending on which the invoicing may differ
        /// </summary>
        public readonly string? PartnerTransactionType;
        /// <summary>
        /// Pay As You Go policy of Subscribed Service (Can be null - indicating no payg policy)
        /// </summary>
        public readonly string? PaygPolicy;
        /// <summary>
        /// Payment Method of Subscribed Service
        /// </summary>
        public readonly string? PaymentMethod;
        /// <summary>
        /// Payment Number of Subscribed Service
        /// </summary>
        public readonly string? PaymentNumber;
        /// <summary>
        /// Payment Term details
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSubscribedServicesSubscribedServicePaymentTermResult> PaymentTerms;
        /// <summary>
        /// Indicates the period for which the commitment amount can be utilised exceeding which the amount lapses. Also used in calculation of total contract line value
        /// </summary>
        public readonly string? PricePeriod;
        /// <summary>
        /// Subscribed service pricing model
        /// </summary>
        public readonly string? PricingModel;
        /// <summary>
        /// Product description
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSubscribedServicesSubscribedServiceProductResult> Products;
        /// <summary>
        /// Subscribed service program type
        /// </summary>
        public readonly string? ProgramType;
        /// <summary>
        /// Not null if this service has an associated promotion line in SPM. Contains the line identifier from Order Management of  the associated promo line.
        /// </summary>
        public readonly string? PromoOrderLineId;
        /// <summary>
        /// Subscribed service promotion type
        /// </summary>
        public readonly string? PromoType;
        /// <summary>
        /// Promotion Pricing Type of Subscribed Service (Can be null - indicating no promotion pricing)
        /// </summary>
        public readonly string? PromotionPricingType;
        /// <summary>
        /// Subscribed service provisioning source
        /// </summary>
        public readonly string? ProvisioningSource;
        /// <summary>
        /// Subscribed service quantity
        /// </summary>
        public readonly string? Quantity;
        /// <summary>
        /// Subscribed service Rate Card Discount Percentage
        /// </summary>
        public readonly string? RateCardDiscountPercentage;
        /// <summary>
        /// List of Rate Cards of a Subscribed Service
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSubscribedServicesSubscribedServiceRateCardResult> RateCards;
        /// <summary>
        /// SPM Ratecard Type
        /// </summary>
        public readonly string? RatecardType;
        /// <summary>
        /// Subscribed service Opportunity Id
        /// </summary>
        public readonly string? RenewalOptyId;
        /// <summary>
        /// Renewal Opportunity Number of Subscribed Service
        /// </summary>
        public readonly string? RenewalOptyNumber;
        /// <summary>
        /// Renewal Opportunity Type of Subscribed Service
        /// </summary>
        public readonly string? RenewalOptyType;
        /// <summary>
        /// SPM renewed Subscription ID
        /// </summary>
        public readonly string? RenewedSubscribedServiceId;
        /// <summary>
        /// Address.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSubscribedServicesSubscribedServiceResellerAddressResult> ResellerAddresses;
        /// <summary>
        /// User.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSubscribedServicesSubscribedServiceResellerContactResult> ResellerContacts;
        /// <summary>
        /// Business partner.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSubscribedServicesSubscribedServiceResellerCustomerResult> ResellerCustomers;
        /// <summary>
        /// Subscribed service Revenue Line Id
        /// </summary>
        public readonly string? RevenueLineId;
        /// <summary>
        /// Revenue Line NUmber of Subscribed Service
        /// </summary>
        public readonly string? RevenueLineNumber;
        /// <summary>
        /// Subscribed service Revised ARR
        /// </summary>
        public readonly string? RevisedArrInLc;
        /// <summary>
        /// Subscribed service Revised ARR in Standard Currency
        /// </summary>
        public readonly string? RevisedArrInSc;
        /// <summary>
        /// Subscribed service sales account party id
        /// </summary>
        public readonly string? SalesAccountPartyId;
        /// <summary>
        /// Sales Channel of Subscribed Service
        /// </summary>
        public readonly string? SalesChannel;
        /// <summary>
        /// Subscribed service line number
        /// </summary>
        public readonly string? SerialNumber;
        /// <summary>
        /// Address.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSubscribedServicesSubscribedServiceServiceToAddressResult> ServiceToAddresses;
        /// <summary>
        /// User.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSubscribedServicesSubscribedServiceServiceToContactResult> ServiceToContacts;
        /// <summary>
        /// Business partner.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSubscribedServicesSubscribedServiceServiceToCustomerResult> ServiceToCustomers;
        /// <summary>
        /// User.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSubscribedServicesSubscribedServiceSoldToContactResult> SoldToContacts;
        /// <summary>
        /// Business partner.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSubscribedServicesSubscribedServiceSoldToCustomerResult> SoldToCustomers;
        /// <summary>
        /// Subscribed service start date type
        /// </summary>
        public readonly string? StartDateType;
        /// <summary>
        /// This param is used to filter subscribed services based on its status
        /// </summary>
        public readonly string? Status;
        /// <summary>
        /// Line level Subscription Id
        /// </summary>
        public readonly string? SubscriptionId;
        /// <summary>
        /// Subscribed service source
        /// </summary>
        public readonly string? SubscriptionSource;
        /// <summary>
        /// Subscribed service System ARR
        /// </summary>
        public readonly string? SystemArrInLc;
        /// <summary>
        /// Subscribed service System ARR in Standard Currency
        /// </summary>
        public readonly string? SystemArrInSc;
        /// <summary>
        /// Subscribed service System ATR-ARR
        /// </summary>
        public readonly string? SystemAtrArrInLc;
        /// <summary>
        /// Subscribed service System ATR-ARR in Standard Currency
        /// </summary>
        public readonly string? SystemAtrArrInSc;
        /// <summary>
        /// Term value in Months
        /// </summary>
        public readonly string? TermValue;
        /// <summary>
        /// Term value UOM
        /// </summary>
        public readonly string? TermValueUom;
        /// <summary>
        /// Subscribed service agrrement end date
        /// </summary>
        public readonly string? TimeAgreementEnd;
        /// <summary>
        /// Subscribed service creation date
        /// </summary>
        public readonly string? TimeCreated;
        /// <summary>
        /// Subscribed service customer config date
        /// </summary>
        public readonly string? TimeCustomerConfig;
        /// <summary>
        /// Subscribed service end date
        /// </summary>
        public readonly string? TimeEnd;
        /// <summary>
        /// Subscribed service Major Set End date
        /// </summary>
        public readonly string? TimeMajorsetEnd;
        /// <summary>
        /// Subscribed service Major Set Start date
        /// </summary>
        public readonly string? TimeMajorsetStart;
        /// <summary>
        /// Subscribed service payment expiry date
        /// </summary>
        public readonly string? TimePaymentExpiry;
        /// <summary>
        /// Subscribed service provisioning date
        /// </summary>
        public readonly string? TimeProvisioned;
        /// <summary>
        /// Subscribed service service configuration email sent date
        /// </summary>
        public readonly string? TimeServiceConfigurationEmailSent;
        /// <summary>
        /// Subscribed service start date
        /// </summary>
        public readonly string? TimeStart;
        /// <summary>
        /// Subscribed service last update date
        /// </summary>
        public readonly string? TimeUpdated;
        /// <summary>
        /// Subscribed service welcome email sent date
        /// </summary>
        public readonly string? TimeWelcomeEmailSent;
        /// <summary>
        /// Subscribed service total value
        /// </summary>
        public readonly string? TotalValue;
        /// <summary>
        /// Subscribed service Transaction Extension Id
        /// </summary>
        public readonly string? TransactionExtensionId;
        /// <summary>
        /// Subscribed Service line type
        /// </summary>
        public readonly string? Type;
        /// <summary>
        /// User that updated the subscribed service
        /// </summary>
        public readonly string? UpdatedBy;
        /// <summary>
        /// Subscribed service used amount
        /// </summary>
        public readonly string? UsedAmount;

        [OutputConstructor]
        private GetSubscribedServicesSubscribedServiceResult(
            string? adminEmail,

            string? agreementId,

            string? agreementName,

            string? agreementType,

            string? availableAmount,

            ImmutableArray<Outputs.GetSubscribedServicesSubscribedServiceBillToAddressResult> billToAddresses,

            ImmutableArray<Outputs.GetSubscribedServicesSubscribedServiceBillToContactResult> billToContacts,

            ImmutableArray<Outputs.GetSubscribedServicesSubscribedServiceBillToCustomerResult> billToCustomers,

            string? billingFrequency,

            string? bookingOptyNumber,

            string? buyerEmail,

            string? commitmentScheduleId,

            ImmutableArray<Outputs.GetSubscribedServicesSubscribedServiceCommitmentServiceResult> commitmentServices,

            string? createdBy,

            string? creditPercentage,

            string? csi,

            string? customerTransactionReference,

            string? dataCenter,

            string? dataCenterRegion,

            string? eligibleToRenew,

            ImmutableArray<Outputs.GetSubscribedServicesSubscribedServiceEndUserAddressResult> endUserAddresses,

            ImmutableArray<Outputs.GetSubscribedServicesSubscribedServiceEndUserContactResult> endUserContacts,

            ImmutableArray<Outputs.GetSubscribedServicesSubscribedServiceEndUserCustomerResult> endUserCustomers,

            string? fulfillmentSet,

            string? fundedAllocationValue,

            string? id,

            bool? isAllowance,

            bool? isCapToPriceList,

            bool? isCreditEnabled,

            bool? isHavingUsage,

            bool? isIntentToPay,

            bool? isPayg,

            bool? isSingleRateCard,

            bool? isVariableCommitment,

            string? lineNetAmount,

            string? majorSet,

            string? netUnitPrice,

            string? operationType,

            string? orderHeaderId,

            string? orderLineId,

            int? orderLineNumber,

            string? orderNumber,

            string? orderType,

            string? originalPromoAmount,

            string? overageBillTo,

            string? overageDiscountPercentage,

            string? overagePolicy,

            string? partnerCreditAmount,

            string? partnerTransactionType,

            string? paygPolicy,

            string? paymentMethod,

            string? paymentNumber,

            ImmutableArray<Outputs.GetSubscribedServicesSubscribedServicePaymentTermResult> paymentTerms,

            string? pricePeriod,

            string? pricingModel,

            ImmutableArray<Outputs.GetSubscribedServicesSubscribedServiceProductResult> products,

            string? programType,

            string? promoOrderLineId,

            string? promoType,

            string? promotionPricingType,

            string? provisioningSource,

            string? quantity,

            string? rateCardDiscountPercentage,

            ImmutableArray<Outputs.GetSubscribedServicesSubscribedServiceRateCardResult> rateCards,

            string? ratecardType,

            string? renewalOptyId,

            string? renewalOptyNumber,

            string? renewalOptyType,

            string? renewedSubscribedServiceId,

            ImmutableArray<Outputs.GetSubscribedServicesSubscribedServiceResellerAddressResult> resellerAddresses,

            ImmutableArray<Outputs.GetSubscribedServicesSubscribedServiceResellerContactResult> resellerContacts,

            ImmutableArray<Outputs.GetSubscribedServicesSubscribedServiceResellerCustomerResult> resellerCustomers,

            string? revenueLineId,

            string? revenueLineNumber,

            string? revisedArrInLc,

            string? revisedArrInSc,

            string? salesAccountPartyId,

            string? salesChannel,

            string? serialNumber,

            ImmutableArray<Outputs.GetSubscribedServicesSubscribedServiceServiceToAddressResult> serviceToAddresses,

            ImmutableArray<Outputs.GetSubscribedServicesSubscribedServiceServiceToContactResult> serviceToContacts,

            ImmutableArray<Outputs.GetSubscribedServicesSubscribedServiceServiceToCustomerResult> serviceToCustomers,

            ImmutableArray<Outputs.GetSubscribedServicesSubscribedServiceSoldToContactResult> soldToContacts,

            ImmutableArray<Outputs.GetSubscribedServicesSubscribedServiceSoldToCustomerResult> soldToCustomers,

            string? startDateType,

            string? status,

            string? subscriptionId,

            string? subscriptionSource,

            string? systemArrInLc,

            string? systemArrInSc,

            string? systemAtrArrInLc,

            string? systemAtrArrInSc,

            string? termValue,

            string? termValueUom,

            string? timeAgreementEnd,

            string? timeCreated,

            string? timeCustomerConfig,

            string? timeEnd,

            string? timeMajorsetEnd,

            string? timeMajorsetStart,

            string? timePaymentExpiry,

            string? timeProvisioned,

            string? timeServiceConfigurationEmailSent,

            string? timeStart,

            string? timeUpdated,

            string? timeWelcomeEmailSent,

            string? totalValue,

            string? transactionExtensionId,

            string? type,

            string? updatedBy,

            string? usedAmount)
        {
            AdminEmail = adminEmail;
            AgreementId = agreementId;
            AgreementName = agreementName;
            AgreementType = agreementType;
            AvailableAmount = availableAmount;
            BillToAddresses = billToAddresses;
            BillToContacts = billToContacts;
            BillToCustomers = billToCustomers;
            BillingFrequency = billingFrequency;
            BookingOptyNumber = bookingOptyNumber;
            BuyerEmail = buyerEmail;
            CommitmentScheduleId = commitmentScheduleId;
            CommitmentServices = commitmentServices;
            CreatedBy = createdBy;
            CreditPercentage = creditPercentage;
            Csi = csi;
            CustomerTransactionReference = customerTransactionReference;
            DataCenter = dataCenter;
            DataCenterRegion = dataCenterRegion;
            EligibleToRenew = eligibleToRenew;
            EndUserAddresses = endUserAddresses;
            EndUserContacts = endUserContacts;
            EndUserCustomers = endUserCustomers;
            FulfillmentSet = fulfillmentSet;
            FundedAllocationValue = fundedAllocationValue;
            Id = id;
            IsAllowance = isAllowance;
            IsCapToPriceList = isCapToPriceList;
            IsCreditEnabled = isCreditEnabled;
            IsHavingUsage = isHavingUsage;
            IsIntentToPay = isIntentToPay;
            IsPayg = isPayg;
            IsSingleRateCard = isSingleRateCard;
            IsVariableCommitment = isVariableCommitment;
            LineNetAmount = lineNetAmount;
            MajorSet = majorSet;
            NetUnitPrice = netUnitPrice;
            OperationType = operationType;
            OrderHeaderId = orderHeaderId;
            OrderLineId = orderLineId;
            OrderLineNumber = orderLineNumber;
            OrderNumber = orderNumber;
            OrderType = orderType;
            OriginalPromoAmount = originalPromoAmount;
            OverageBillTo = overageBillTo;
            OverageDiscountPercentage = overageDiscountPercentage;
            OveragePolicy = overagePolicy;
            PartnerCreditAmount = partnerCreditAmount;
            PartnerTransactionType = partnerTransactionType;
            PaygPolicy = paygPolicy;
            PaymentMethod = paymentMethod;
            PaymentNumber = paymentNumber;
            PaymentTerms = paymentTerms;
            PricePeriod = pricePeriod;
            PricingModel = pricingModel;
            Products = products;
            ProgramType = programType;
            PromoOrderLineId = promoOrderLineId;
            PromoType = promoType;
            PromotionPricingType = promotionPricingType;
            ProvisioningSource = provisioningSource;
            Quantity = quantity;
            RateCardDiscountPercentage = rateCardDiscountPercentage;
            RateCards = rateCards;
            RatecardType = ratecardType;
            RenewalOptyId = renewalOptyId;
            RenewalOptyNumber = renewalOptyNumber;
            RenewalOptyType = renewalOptyType;
            RenewedSubscribedServiceId = renewedSubscribedServiceId;
            ResellerAddresses = resellerAddresses;
            ResellerContacts = resellerContacts;
            ResellerCustomers = resellerCustomers;
            RevenueLineId = revenueLineId;
            RevenueLineNumber = revenueLineNumber;
            RevisedArrInLc = revisedArrInLc;
            RevisedArrInSc = revisedArrInSc;
            SalesAccountPartyId = salesAccountPartyId;
            SalesChannel = salesChannel;
            SerialNumber = serialNumber;
            ServiceToAddresses = serviceToAddresses;
            ServiceToContacts = serviceToContacts;
            ServiceToCustomers = serviceToCustomers;
            SoldToContacts = soldToContacts;
            SoldToCustomers = soldToCustomers;
            StartDateType = startDateType;
            Status = status;
            SubscriptionId = subscriptionId;
            SubscriptionSource = subscriptionSource;
            SystemArrInLc = systemArrInLc;
            SystemArrInSc = systemArrInSc;
            SystemAtrArrInLc = systemAtrArrInLc;
            SystemAtrArrInSc = systemAtrArrInSc;
            TermValue = termValue;
            TermValueUom = termValueUom;
            TimeAgreementEnd = timeAgreementEnd;
            TimeCreated = timeCreated;
            TimeCustomerConfig = timeCustomerConfig;
            TimeEnd = timeEnd;
            TimeMajorsetEnd = timeMajorsetEnd;
            TimeMajorsetStart = timeMajorsetStart;
            TimePaymentExpiry = timePaymentExpiry;
            TimeProvisioned = timeProvisioned;
            TimeServiceConfigurationEmailSent = timeServiceConfigurationEmailSent;
            TimeStart = timeStart;
            TimeUpdated = timeUpdated;
            TimeWelcomeEmailSent = timeWelcomeEmailSent;
            TotalValue = totalValue;
            TransactionExtensionId = transactionExtensionId;
            Type = type;
            UpdatedBy = updatedBy;
            UsedAmount = usedAmount;
        }
    }
}
