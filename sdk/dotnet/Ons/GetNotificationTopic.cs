// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Ons
{
    public static class GetNotificationTopic
    {
        /// <summary>
        /// This data source provides details about a specific Notification Topic resource in Oracle Cloud Infrastructure Notifications service.
        /// 
        /// Gets the specified topic's configuration information.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testNotificationTopic = Oci.Ons.GetNotificationTopic.Invoke(new()
        ///     {
        ///         TopicId = testNotificationTopicOciOnsNotificationTopic.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetNotificationTopicResult> InvokeAsync(GetNotificationTopicArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNotificationTopicResult>("oci:Ons/getNotificationTopic:getNotificationTopic", args ?? new GetNotificationTopicArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Notification Topic resource in Oracle Cloud Infrastructure Notifications service.
        /// 
        /// Gets the specified topic's configuration information.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testNotificationTopic = Oci.Ons.GetNotificationTopic.Invoke(new()
        ///     {
        ///         TopicId = testNotificationTopicOciOnsNotificationTopic.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNotificationTopicResult> Invoke(GetNotificationTopicInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNotificationTopicResult>("oci:Ons/getNotificationTopic:getNotificationTopic", args ?? new GetNotificationTopicInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNotificationTopicArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the topic to retrieve.
        /// 
        /// Transactions Per Minute (TPM) per-tenancy limit for this operation: 120.
        /// </summary>
        [Input("topicId", required: true)]
        public string TopicId { get; set; } = null!;

        public GetNotificationTopicArgs()
        {
        }
        public static new GetNotificationTopicArgs Empty => new GetNotificationTopicArgs();
    }

    public sealed class GetNotificationTopicInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the topic to retrieve.
        /// 
        /// Transactions Per Minute (TPM) per-tenancy limit for this operation: 120.
        /// </summary>
        [Input("topicId", required: true)]
        public Input<string> TopicId { get; set; } = null!;

        public GetNotificationTopicInvokeArgs()
        {
        }
        public static new GetNotificationTopicInvokeArgs Empty => new GetNotificationTopicInvokeArgs();
    }


    [OutputType]
    public sealed class GetNotificationTopicResult
    {
        /// <summary>
        /// The endpoint for managing subscriptions or publishing messages to the topic.
        /// </summary>
        public readonly string ApiEndpoint;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for the topic.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// The description of the topic.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// For optimistic concurrency control. See `if-match`.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        public readonly string Id;
        /// <summary>
        /// The name of the topic.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// A unique short topic Id. This is used only for SMS subscriptions.
        /// </summary>
        public readonly string ShortTopicId;
        /// <summary>
        /// The lifecycle state of the topic.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The time the topic was created.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the topic.
        /// </summary>
        public readonly string TopicId;

        [OutputConstructor]
        private GetNotificationTopicResult(
            string apiEndpoint,

            string compartmentId,

            ImmutableDictionary<string, string> definedTags,

            string description,

            string etag,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            string name,

            string shortTopicId,

            string state,

            string timeCreated,

            string topicId)
        {
            ApiEndpoint = apiEndpoint;
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            Description = description;
            Etag = etag;
            FreeformTags = freeformTags;
            Id = id;
            Name = name;
            ShortTopicId = shortTopicId;
            State = state;
            TimeCreated = timeCreated;
            TopicId = topicId;
        }
    }
}
