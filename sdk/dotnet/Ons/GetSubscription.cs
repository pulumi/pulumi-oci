// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Ons
{
    public static class GetSubscription
    {
        /// <summary>
        /// This data source provides details about a specific Subscription resource in Oracle Cloud Infrastructure Notifications service.
        /// 
        /// Gets the specified subscription's configuration information.
        /// 
        /// Transactions Per Minute (TPM) per-tenancy limit for this operation: 60.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSubscription = Oci.Ons.GetSubscription.Invoke(new()
        ///     {
        ///         SubscriptionId = oci_ons_subscription.Test_subscription.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetSubscriptionResult> InvokeAsync(GetSubscriptionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSubscriptionResult>("oci:Ons/getSubscription:getSubscription", args ?? new GetSubscriptionArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Subscription resource in Oracle Cloud Infrastructure Notifications service.
        /// 
        /// Gets the specified subscription's configuration information.
        /// 
        /// Transactions Per Minute (TPM) per-tenancy limit for this operation: 60.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSubscription = Oci.Ons.GetSubscription.Invoke(new()
        ///     {
        ///         SubscriptionId = oci_ons_subscription.Test_subscription.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetSubscriptionResult> Invoke(GetSubscriptionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSubscriptionResult>("oci:Ons/getSubscription:getSubscription", args ?? new GetSubscriptionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSubscriptionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subscription to retrieve.
        /// </summary>
        [Input("subscriptionId", required: true)]
        public string SubscriptionId { get; set; } = null!;

        public GetSubscriptionArgs()
        {
        }
        public static new GetSubscriptionArgs Empty => new GetSubscriptionArgs();
    }

    public sealed class GetSubscriptionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subscription to retrieve.
        /// </summary>
        [Input("subscriptionId", required: true)]
        public Input<string> SubscriptionId { get; set; } = null!;

        public GetSubscriptionInvokeArgs()
        {
        }
        public static new GetSubscriptionInvokeArgs Empty => new GetSubscriptionInvokeArgs();
    }


    [OutputType]
    public sealed class GetSubscriptionResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for the subscription.
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// The time when this suscription was created.
        /// </summary>
        public readonly string? CreatedTime;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? DefinedTags;
        /// <summary>
        /// The delivery policy of the subscription. Stored as a JSON string.
        /// </summary>
        public readonly string? DeliveryPolicy;
        /// <summary>
        /// A locator that corresponds to the subscription protocol. For example, an email address for a subscription that uses the `EMAIL` protocol, or a URL for a subscription that uses an HTTP-based protocol.
        /// </summary>
        public readonly string? Endpoint;
        /// <summary>
        /// For optimistic concurrency control. See `if-match`.
        /// </summary>
        public readonly string? Etag;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? FreeformTags;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subscription.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The protocol used for the subscription.
        /// </summary>
        public readonly string? Protocol;
        /// <summary>
        /// The lifecycle state of the subscription. The status of a new subscription is PENDING; when confirmed, the subscription status changes to ACTIVE.
        /// </summary>
        public readonly string? State;
        public readonly string SubscriptionId;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the associated topic.
        /// </summary>
        public readonly string? TopicId;

        [OutputConstructor]
        private GetSubscriptionResult(
            string? compartmentId,

            string? createdTime,

            ImmutableDictionary<string, object>? definedTags,

            string? deliveryPolicy,

            string? endpoint,

            string? etag,

            ImmutableDictionary<string, object>? freeformTags,

            string? id,

            string? protocol,

            string? state,

            string subscriptionId,

            string? topicId)
        {
            CompartmentId = compartmentId;
            CreatedTime = createdTime;
            DefinedTags = definedTags;
            DeliveryPolicy = deliveryPolicy;
            Endpoint = endpoint;
            Etag = etag;
            FreeformTags = freeformTags;
            Id = id;
            Protocol = protocol;
            State = state;
            SubscriptionId = subscriptionId;
            TopicId = topicId;
        }
    }
}
