// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Opa
{
    public static class GetOpaInstance
    {
        /// <summary>
        /// This data source provides details about a specific Opa Instance resource in Oracle Cloud Infrastructure Opa service.
        /// 
        /// Gets a OpaInstance by identifier
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOpaInstance = Oci.Opa.GetOpaInstance.Invoke(new()
        ///     {
        ///         OpaInstanceId = testOpaInstanceOciOpaOpaInstance.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetOpaInstanceResult> InvokeAsync(GetOpaInstanceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOpaInstanceResult>("oci:Opa/getOpaInstance:getOpaInstance", args ?? new GetOpaInstanceArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Opa Instance resource in Oracle Cloud Infrastructure Opa service.
        /// 
        /// Gets a OpaInstance by identifier
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOpaInstance = Oci.Opa.GetOpaInstance.Invoke(new()
        ///     {
        ///         OpaInstanceId = testOpaInstanceOciOpaOpaInstance.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOpaInstanceResult> Invoke(GetOpaInstanceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOpaInstanceResult>("oci:Opa/getOpaInstance:getOpaInstance", args ?? new GetOpaInstanceInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Opa Instance resource in Oracle Cloud Infrastructure Opa service.
        /// 
        /// Gets a OpaInstance by identifier
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOpaInstance = Oci.Opa.GetOpaInstance.Invoke(new()
        ///     {
        ///         OpaInstanceId = testOpaInstanceOciOpaOpaInstance.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOpaInstanceResult> Invoke(GetOpaInstanceInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetOpaInstanceResult>("oci:Opa/getOpaInstance:getOpaInstance", args ?? new GetOpaInstanceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOpaInstanceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// unique OpaInstance identifier
        /// </summary>
        [Input("opaInstanceId", required: true)]
        public string OpaInstanceId { get; set; } = null!;

        public GetOpaInstanceArgs()
        {
        }
        public static new GetOpaInstanceArgs Empty => new GetOpaInstanceArgs();
    }

    public sealed class GetOpaInstanceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// unique OpaInstance identifier
        /// </summary>
        [Input("opaInstanceId", required: true)]
        public Input<string> OpaInstanceId { get; set; } = null!;

        public GetOpaInstanceInvokeArgs()
        {
        }
        public static new GetOpaInstanceInvokeArgs Empty => new GetOpaInstanceInvokeArgs();
    }


    [OutputType]
    public sealed class GetOpaInstanceResult
    {
        /// <summary>
        /// A list of associated attachments to other services
        /// </summary>
        public readonly ImmutableArray<Outputs.GetOpaInstanceAttachmentResult> Attachments;
        /// <summary>
        /// Compartment Identifier
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The entitlement used for billing purposes
        /// </summary>
        public readonly string ConsumptionModel;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// Description of the Process Automation instance.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// OpaInstance Identifier, can be renamed
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// Unique identifier that is immutable on creation
        /// </summary>
        public readonly string Id;
        public readonly string IdcsAt;
        /// <summary>
        /// This property specifies the name of the Identity Application instance OPA has created inside the user-specified identity domain. This identity application instance may be used to host user roll mappings to grant access to this OPA instance for users within the identity domain.
        /// </summary>
        public readonly string IdentityAppDisplayName;
        /// <summary>
        /// This property specifies the GUID of the Identity Application instance OPA has created inside the user-specified identity domain. This identity application instance may be used to host user role mappings to grant access to this OPA instance for users within the identity domain.
        /// </summary>
        public readonly string IdentityAppGuid;
        /// <summary>
        /// This property specifies the OPC Service Instance GUID of the Identity Application instance OPA has created inside the user-specified identity domain. This identity application instance may be used to host user roll mappings to grant access to this OPA instance for users within the identity domain.
        /// </summary>
        public readonly string IdentityAppOpcServiceInstanceGuid;
        /// <summary>
        /// This property specifies the domain url of the Identity Application instance OPA has created inside the user-specified identity domain. This identity application instance may be used to host user roll mappings to grant access to this OPA instance for users within the identity domain.
        /// </summary>
        public readonly string IdentityDomainUrl;
        /// <summary>
        /// OPA Instance URL
        /// </summary>
        public readonly string InstanceUrl;
        /// <summary>
        /// indicates if breakGlass is enabled for the opa instance.
        /// </summary>
        public readonly bool IsBreakglassEnabled;
        /// <summary>
        /// MeteringType Identifier
        /// </summary>
        public readonly string MeteringType;
        public readonly string OpaInstanceId;
        /// <summary>
        /// Shape of the instance.
        /// </summary>
        public readonly string ShapeName;
        /// <summary>
        /// The current state of the OpaInstance.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// The time when OpaInstance was created. An RFC3339 formatted datetime string
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time the OpaInstance was updated. An RFC3339 formatted datetime string
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetOpaInstanceResult(
            ImmutableArray<Outputs.GetOpaInstanceAttachmentResult> attachments,

            string compartmentId,

            string consumptionModel,

            ImmutableDictionary<string, string> definedTags,

            string description,

            string displayName,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            string idcsAt,

            string identityAppDisplayName,

            string identityAppGuid,

            string identityAppOpcServiceInstanceGuid,

            string identityDomainUrl,

            string instanceUrl,

            bool isBreakglassEnabled,

            string meteringType,

            string opaInstanceId,

            string shapeName,

            string state,

            ImmutableDictionary<string, string> systemTags,

            string timeCreated,

            string timeUpdated)
        {
            Attachments = attachments;
            CompartmentId = compartmentId;
            ConsumptionModel = consumptionModel;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            IdcsAt = idcsAt;
            IdentityAppDisplayName = identityAppDisplayName;
            IdentityAppGuid = identityAppGuid;
            IdentityAppOpcServiceInstanceGuid = identityAppOpcServiceInstanceGuid;
            IdentityDomainUrl = identityDomainUrl;
            InstanceUrl = instanceUrl;
            IsBreakglassEnabled = isBreakglassEnabled;
            MeteringType = meteringType;
            OpaInstanceId = opaInstanceId;
            ShapeName = shapeName;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
