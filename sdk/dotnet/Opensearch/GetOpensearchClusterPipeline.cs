// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Opensearch
{
    public static class GetOpensearchClusterPipeline
    {
        /// <summary>
        /// This data source provides details about a specific Opensearch Cluster Pipeline resource in Oracle Cloud Infrastructure Opensearch service.
        /// 
        /// Gets a OpensearchCluster Pipeline by identifier
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOpensearchClusterPipeline = Oci.Opensearch.GetOpensearchClusterPipeline.Invoke(new()
        ///     {
        ///         OpensearchClusterPipelineId = testOpensearchClusterPipelineOciOpensearchOpensearchClusterPipeline.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetOpensearchClusterPipelineResult> InvokeAsync(GetOpensearchClusterPipelineArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOpensearchClusterPipelineResult>("oci:Opensearch/getOpensearchClusterPipeline:getOpensearchClusterPipeline", args ?? new GetOpensearchClusterPipelineArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Opensearch Cluster Pipeline resource in Oracle Cloud Infrastructure Opensearch service.
        /// 
        /// Gets a OpensearchCluster Pipeline by identifier
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOpensearchClusterPipeline = Oci.Opensearch.GetOpensearchClusterPipeline.Invoke(new()
        ///     {
        ///         OpensearchClusterPipelineId = testOpensearchClusterPipelineOciOpensearchOpensearchClusterPipeline.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOpensearchClusterPipelineResult> Invoke(GetOpensearchClusterPipelineInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOpensearchClusterPipelineResult>("oci:Opensearch/getOpensearchClusterPipeline:getOpensearchClusterPipeline", args ?? new GetOpensearchClusterPipelineInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Opensearch Cluster Pipeline resource in Oracle Cloud Infrastructure Opensearch service.
        /// 
        /// Gets a OpensearchCluster Pipeline by identifier
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOpensearchClusterPipeline = Oci.Opensearch.GetOpensearchClusterPipeline.Invoke(new()
        ///     {
        ///         OpensearchClusterPipelineId = testOpensearchClusterPipelineOciOpensearchOpensearchClusterPipeline.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOpensearchClusterPipelineResult> Invoke(GetOpensearchClusterPipelineInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetOpensearchClusterPipelineResult>("oci:Opensearch/getOpensearchClusterPipeline:getOpensearchClusterPipeline", args ?? new GetOpensearchClusterPipelineInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOpensearchClusterPipelineArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// unique OpensearchClusterPipeline identifier
        /// </summary>
        [Input("opensearchClusterPipelineId", required: true)]
        public string OpensearchClusterPipelineId { get; set; } = null!;

        public GetOpensearchClusterPipelineArgs()
        {
        }
        public static new GetOpensearchClusterPipelineArgs Empty => new GetOpensearchClusterPipelineArgs();
    }

    public sealed class GetOpensearchClusterPipelineInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// unique OpensearchClusterPipeline identifier
        /// </summary>
        [Input("opensearchClusterPipelineId", required: true)]
        public Input<string> OpensearchClusterPipelineId { get; set; } = null!;

        public GetOpensearchClusterPipelineInvokeArgs()
        {
        }
        public static new GetOpensearchClusterPipelineInvokeArgs Empty => new GetOpensearchClusterPipelineInvokeArgs();
    }


    [OutputType]
    public sealed class GetOpensearchClusterPipelineResult
    {
        /// <summary>
        /// The OCID of the compartment where the pipeline is located.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The data prepper config in YAML format. The command accepts the data prepper config as a string or within a .yaml file. If you provide the configuration as a string, each new line must be escaped with \.
        /// </summary>
        public readonly string DataPrepperConfigurationBody;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// The name of the pipeline. Avoid entering confidential information.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The OCID of the cluster pipeline.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The amount of memory in GB, for each pipeline node.
        /// </summary>
        public readonly int MemoryGb;
        /// <summary>
        /// The number of nodes configured for the pipeline.
        /// </summary>
        public readonly int NodeCount;
        /// <summary>
        /// The OCID of the NSG where the pipeline private endpoint vnic will be attached.
        /// </summary>
        public readonly string NsgId;
        /// <summary>
        /// The number of OCPUs configured for each pipeline node.
        /// </summary>
        public readonly int OcpuCount;
        public readonly bool OpcDryRun;
        public readonly string OpensearchClusterPipelineId;
        /// <summary>
        /// The fully qualified domain name (FQDN) for the cluster's API endpoint.
        /// </summary>
        public readonly string OpensearchPipelineFqdn;
        /// <summary>
        /// The pipeline's private IP address.
        /// </summary>
        public readonly string OpensearchPipelinePrivateIp;
        /// <summary>
        /// The pipeline configuration in YAML format. The command accepts the pipeline configuration as a string or within a .yaml file. If you provide the configuration as a string, each new line must be escaped with \.
        /// </summary>
        public readonly string PipelineConfigurationBody;
        /// <summary>
        /// The current state of the pipeline.
        /// </summary>
        public readonly string PipelineMode;
        /// <summary>
        /// The customer IP and the corresponding fully qualified domain name that the pipeline will connect to.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetOpensearchClusterPipelineReverseConnectionEndpointResult> ReverseConnectionEndpoints;
        /// <summary>
        /// The current state of the cluster backup.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The OCID for the compartment where the pipeline's subnet is located.
        /// </summary>
        public readonly string SubnetCompartmentId;
        /// <summary>
        /// The OCID of the pipeline's subnet.
        /// </summary>
        public readonly string SubnetId;
        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// The date and time the cluster pipeline was created. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The amount of time in milliseconds since the pipeline was updated.
        /// </summary>
        public readonly string TimeUpdated;
        /// <summary>
        /// The OCID for the compartment where the pipeline's VCN is located.
        /// </summary>
        public readonly string VcnCompartmentId;
        /// <summary>
        /// The OCID of the pipeline's VCN.
        /// </summary>
        public readonly string VcnId;

        [OutputConstructor]
        private GetOpensearchClusterPipelineResult(
            string compartmentId,

            string dataPrepperConfigurationBody,

            ImmutableDictionary<string, string> definedTags,

            string displayName,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            int memoryGb,

            int nodeCount,

            string nsgId,

            int ocpuCount,

            bool opcDryRun,

            string opensearchClusterPipelineId,

            string opensearchPipelineFqdn,

            string opensearchPipelinePrivateIp,

            string pipelineConfigurationBody,

            string pipelineMode,

            ImmutableArray<Outputs.GetOpensearchClusterPipelineReverseConnectionEndpointResult> reverseConnectionEndpoints,

            string state,

            string subnetCompartmentId,

            string subnetId,

            ImmutableDictionary<string, string> systemTags,

            string timeCreated,

            string timeUpdated,

            string vcnCompartmentId,

            string vcnId)
        {
            CompartmentId = compartmentId;
            DataPrepperConfigurationBody = dataPrepperConfigurationBody;
            DefinedTags = definedTags;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            MemoryGb = memoryGb;
            NodeCount = nodeCount;
            NsgId = nsgId;
            OcpuCount = ocpuCount;
            OpcDryRun = opcDryRun;
            OpensearchClusterPipelineId = opensearchClusterPipelineId;
            OpensearchPipelineFqdn = opensearchPipelineFqdn;
            OpensearchPipelinePrivateIp = opensearchPipelinePrivateIp;
            PipelineConfigurationBody = pipelineConfigurationBody;
            PipelineMode = pipelineMode;
            ReverseConnectionEndpoints = reverseConnectionEndpoints;
            State = state;
            SubnetCompartmentId = subnetCompartmentId;
            SubnetId = subnetId;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            VcnCompartmentId = vcnCompartmentId;
            VcnId = vcnId;
        }
    }
}
