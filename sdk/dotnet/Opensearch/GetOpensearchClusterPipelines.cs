// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Opensearch
{
    public static class GetOpensearchClusterPipelines
    {
        /// <summary>
        /// This data source provides the list of Opensearch Cluster Pipelines in Oracle Cloud Infrastructure Opensearch service.
        /// 
        /// Returns a list of OpensearchClusterPipelines.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOpensearchClusterPipelines = Oci.Opensearch.GetOpensearchClusterPipelines.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = opensearchClusterPipelineDisplayName,
        ///         Id = opensearchClusterPipelineId,
        ///         PipelineComponentId = testPipelineComponent.Id,
        ///         State = opensearchClusterPipelineState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetOpensearchClusterPipelinesResult> InvokeAsync(GetOpensearchClusterPipelinesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOpensearchClusterPipelinesResult>("oci:Opensearch/getOpensearchClusterPipelines:getOpensearchClusterPipelines", args ?? new GetOpensearchClusterPipelinesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Opensearch Cluster Pipelines in Oracle Cloud Infrastructure Opensearch service.
        /// 
        /// Returns a list of OpensearchClusterPipelines.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOpensearchClusterPipelines = Oci.Opensearch.GetOpensearchClusterPipelines.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = opensearchClusterPipelineDisplayName,
        ///         Id = opensearchClusterPipelineId,
        ///         PipelineComponentId = testPipelineComponent.Id,
        ///         State = opensearchClusterPipelineState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOpensearchClusterPipelinesResult> Invoke(GetOpensearchClusterPipelinesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOpensearchClusterPipelinesResult>("oci:Opensearch/getOpensearchClusterPipelines:getOpensearchClusterPipelines", args ?? new GetOpensearchClusterPipelinesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Opensearch Cluster Pipelines in Oracle Cloud Infrastructure Opensearch service.
        /// 
        /// Returns a list of OpensearchClusterPipelines.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOpensearchClusterPipelines = Oci.Opensearch.GetOpensearchClusterPipelines.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = opensearchClusterPipelineDisplayName,
        ///         Id = opensearchClusterPipelineId,
        ///         PipelineComponentId = testPipelineComponent.Id,
        ///         State = opensearchClusterPipelineState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOpensearchClusterPipelinesResult> Invoke(GetOpensearchClusterPipelinesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetOpensearchClusterPipelinesResult>("oci:Opensearch/getOpensearchClusterPipelines:getOpensearchClusterPipelines", args ?? new GetOpensearchClusterPipelinesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOpensearchClusterPipelinesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetOpensearchClusterPipelinesFilterArgs>? _filters;
        public List<Inputs.GetOpensearchClusterPipelinesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetOpensearchClusterPipelinesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// unique OpensearchClusterPipeline identifier
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// A filter to return pipelines whose any component has the given pipelineComponentId.
        /// </summary>
        [Input("pipelineComponentId")]
        public string? PipelineComponentId { get; set; }

        /// <summary>
        /// A filter to return only resources their lifecycleState matches the given lifecycleState.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetOpensearchClusterPipelinesArgs()
        {
        }
        public static new GetOpensearchClusterPipelinesArgs Empty => new GetOpensearchClusterPipelinesArgs();
    }

    public sealed class GetOpensearchClusterPipelinesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetOpensearchClusterPipelinesFilterInputArgs>? _filters;
        public InputList<Inputs.GetOpensearchClusterPipelinesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetOpensearchClusterPipelinesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// unique OpensearchClusterPipeline identifier
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// A filter to return pipelines whose any component has the given pipelineComponentId.
        /// </summary>
        [Input("pipelineComponentId")]
        public Input<string>? PipelineComponentId { get; set; }

        /// <summary>
        /// A filter to return only resources their lifecycleState matches the given lifecycleState.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetOpensearchClusterPipelinesInvokeArgs()
        {
        }
        public static new GetOpensearchClusterPipelinesInvokeArgs Empty => new GetOpensearchClusterPipelinesInvokeArgs();
    }


    [OutputType]
    public sealed class GetOpensearchClusterPipelinesResult
    {
        /// <summary>
        /// The OCID of the compartment where the pipeline is located.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The name of the pipeline. Avoid entering confidential information.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetOpensearchClusterPipelinesFilterResult> Filters;
        /// <summary>
        /// The OCID of the cluster pipeline.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The list of opensearch_cluster_pipeline_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetOpensearchClusterPipelinesOpensearchClusterPipelineCollectionResult> OpensearchClusterPipelineCollections;
        public readonly string? PipelineComponentId;
        /// <summary>
        /// The current state of the cluster backup.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetOpensearchClusterPipelinesResult(
            string compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetOpensearchClusterPipelinesFilterResult> filters,

            string? id,

            ImmutableArray<Outputs.GetOpensearchClusterPipelinesOpensearchClusterPipelineCollectionResult> opensearchClusterPipelineCollections,

            string? pipelineComponentId,

            string? state)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            OpensearchClusterPipelineCollections = opensearchClusterPipelineCollections;
            PipelineComponentId = pipelineComponentId;
            State = state;
        }
    }
}
