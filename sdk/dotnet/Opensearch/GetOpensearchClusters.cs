// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Opensearch
{
    public static class GetOpensearchClusters
    {
        /// <summary>
        /// This data source provides the list of Opensearch Clusters in Oracle Cloud Infrastructure Opensearch service.
        /// 
        /// Returns a list of OpensearchClusters.
        /// 
        /// ## Prerequisites
        /// 
        /// The below policies must be created in compartment before creating OpensearchCluster
        /// 
        /// ##### {Compartment-Name} - Name of  your compartment
        /// ```
        /// Allow service opensearch to manage vnics in compartment {Compartment-Name}
        /// Allow service opensearch to use subnets in compartment {Compartment-Name}
        /// Allow service opensearch to use network-security-groups in compartment {Compartment-Name}
        /// Allow service opensearch to manage vcns in compartment {Compartment-Name}
        /// ```
        /// 
        /// For latest documentation on OpenSearch use please refer to https://docs.oracle.com/en-us/iaas/Content/search-opensearch/home.htm  
        /// Required permissions: https://docs.oracle.com/en-us/iaas/Content/search-opensearch/Concepts/ocisearchpermissions.htm
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOpensearchClusters = Oci.Opensearch.GetOpensearchClusters.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = opensearchClusterDisplayName,
        ///         Id = opensearchClusterId,
        ///         State = opensearchClusterState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetOpensearchClustersResult> InvokeAsync(GetOpensearchClustersArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOpensearchClustersResult>("oci:Opensearch/getOpensearchClusters:getOpensearchClusters", args ?? new GetOpensearchClustersArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Opensearch Clusters in Oracle Cloud Infrastructure Opensearch service.
        /// 
        /// Returns a list of OpensearchClusters.
        /// 
        /// ## Prerequisites
        /// 
        /// The below policies must be created in compartment before creating OpensearchCluster
        /// 
        /// ##### {Compartment-Name} - Name of  your compartment
        /// ```
        /// Allow service opensearch to manage vnics in compartment {Compartment-Name}
        /// Allow service opensearch to use subnets in compartment {Compartment-Name}
        /// Allow service opensearch to use network-security-groups in compartment {Compartment-Name}
        /// Allow service opensearch to manage vcns in compartment {Compartment-Name}
        /// ```
        /// 
        /// For latest documentation on OpenSearch use please refer to https://docs.oracle.com/en-us/iaas/Content/search-opensearch/home.htm  
        /// Required permissions: https://docs.oracle.com/en-us/iaas/Content/search-opensearch/Concepts/ocisearchpermissions.htm
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOpensearchClusters = Oci.Opensearch.GetOpensearchClusters.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = opensearchClusterDisplayName,
        ///         Id = opensearchClusterId,
        ///         State = opensearchClusterState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOpensearchClustersResult> Invoke(GetOpensearchClustersInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOpensearchClustersResult>("oci:Opensearch/getOpensearchClusters:getOpensearchClusters", args ?? new GetOpensearchClustersInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Opensearch Clusters in Oracle Cloud Infrastructure Opensearch service.
        /// 
        /// Returns a list of OpensearchClusters.
        /// 
        /// ## Prerequisites
        /// 
        /// The below policies must be created in compartment before creating OpensearchCluster
        /// 
        /// ##### {Compartment-Name} - Name of  your compartment
        /// ```
        /// Allow service opensearch to manage vnics in compartment {Compartment-Name}
        /// Allow service opensearch to use subnets in compartment {Compartment-Name}
        /// Allow service opensearch to use network-security-groups in compartment {Compartment-Name}
        /// Allow service opensearch to manage vcns in compartment {Compartment-Name}
        /// ```
        /// 
        /// For latest documentation on OpenSearch use please refer to https://docs.oracle.com/en-us/iaas/Content/search-opensearch/home.htm  
        /// Required permissions: https://docs.oracle.com/en-us/iaas/Content/search-opensearch/Concepts/ocisearchpermissions.htm
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOpensearchClusters = Oci.Opensearch.GetOpensearchClusters.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = opensearchClusterDisplayName,
        ///         Id = opensearchClusterId,
        ///         State = opensearchClusterState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOpensearchClustersResult> Invoke(GetOpensearchClustersInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetOpensearchClustersResult>("oci:Opensearch/getOpensearchClusters:getOpensearchClusters", args ?? new GetOpensearchClustersInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOpensearchClustersArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetOpensearchClustersFilterArgs>? _filters;
        public List<Inputs.GetOpensearchClustersFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetOpensearchClustersFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// unique OpensearchCluster identifier
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// A filter to return only OpensearchClusters their lifecycleState matches the given lifecycleState.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetOpensearchClustersArgs()
        {
        }
        public static new GetOpensearchClustersArgs Empty => new GetOpensearchClustersArgs();
    }

    public sealed class GetOpensearchClustersInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetOpensearchClustersFilterInputArgs>? _filters;
        public InputList<Inputs.GetOpensearchClustersFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetOpensearchClustersFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// unique OpensearchCluster identifier
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// A filter to return only OpensearchClusters their lifecycleState matches the given lifecycleState.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetOpensearchClustersInvokeArgs()
        {
        }
        public static new GetOpensearchClustersInvokeArgs Empty => new GetOpensearchClustersInvokeArgs();
    }


    [OutputType]
    public sealed class GetOpensearchClustersResult
    {
        /// <summary>
        /// The OCID of the compartment where the cluster is located.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Name of the Outbound cluster. Avoid entering confidential information.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetOpensearchClustersFilterResult> Filters;
        /// <summary>
        /// The OCID of the cluster.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The list of opensearch_cluster_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetOpensearchClustersOpensearchClusterCollectionResult> OpensearchClusterCollections;
        /// <summary>
        /// The current state of the cluster.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetOpensearchClustersResult(
            string compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetOpensearchClustersFilterResult> filters,

            string? id,

            ImmutableArray<Outputs.GetOpensearchClustersOpensearchClusterCollectionResult> opensearchClusterCollections,

            string? state)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            OpensearchClusterCollections = opensearchClusterCollections;
            State = state;
        }
    }
}
