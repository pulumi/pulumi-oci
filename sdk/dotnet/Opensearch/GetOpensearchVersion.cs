// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Opensearch
{
    public static class GetOpensearchVersion
    {
        /// <summary>
        /// This data source provides details about a specific Opensearch Version resource in Oracle Cloud Infrastructure Opensearch service.
        /// 
        /// Lists the supported Opensearch versions
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testOpensearchVersion = Output.Create(Oci.Opensearch.GetOpensearchVersion.InvokeAsync(new Oci.Opensearch.GetOpensearchVersionArgs
        ///         {
        ///             CompartmentId = @var.Compartment_id,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetOpensearchVersionResult> InvokeAsync(GetOpensearchVersionArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetOpensearchVersionResult>("oci:Opensearch/getOpensearchVersion:getOpensearchVersion", args ?? new GetOpensearchVersionArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Opensearch Version resource in Oracle Cloud Infrastructure Opensearch service.
        /// 
        /// Lists the supported Opensearch versions
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testOpensearchVersion = Output.Create(Oci.Opensearch.GetOpensearchVersion.InvokeAsync(new Oci.Opensearch.GetOpensearchVersionArgs
        ///         {
        ///             CompartmentId = @var.Compartment_id,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetOpensearchVersionResult> Invoke(GetOpensearchVersionInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetOpensearchVersionResult>("oci:Opensearch/getOpensearchVersion:getOpensearchVersion", args ?? new GetOpensearchVersionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOpensearchVersionArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        public GetOpensearchVersionArgs()
        {
        }
    }

    public sealed class GetOpensearchVersionInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        public GetOpensearchVersionInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetOpensearchVersionResult
    {
        public readonly string CompartmentId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A list of OpenSearch versions.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetOpensearchVersionItemResult> Items;

        [OutputConstructor]
        private GetOpensearchVersionResult(
            string compartmentId,

            string id,

            ImmutableArray<Outputs.GetOpensearchVersionItemResult> items)
        {
            CompartmentId = compartmentId;
            Id = id;
            Items = items;
        }
    }
}
