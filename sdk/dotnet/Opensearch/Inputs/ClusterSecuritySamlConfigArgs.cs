// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Opensearch.Inputs
{

    public sealed class ClusterSecuritySamlConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The backend role of admins who have all permissions like local master user
        /// </summary>
        [Input("adminBackendRole")]
        public Input<string>? AdminBackendRole { get; set; }

        /// <summary>
        /// The unique name for a identity provider entity
        /// </summary>
        [Input("idpEntityId", required: true)]
        public Input<string> IdpEntityId { get; set; } = null!;

        /// <summary>
        /// The content of identity provider metadata
        /// </summary>
        [Input("idpMetadataContent", required: true)]
        public Input<string> IdpMetadataContent { get; set; } = null!;

        /// <summary>
        /// A flag determine whether SAML is enabled
        /// </summary>
        [Input("isEnabled", required: true)]
        public Input<bool> IsEnabled { get; set; } = null!;

        /// <summary>
        /// The endpoint of opendashboard
        /// </summary>
        [Input("opendashboardUrl")]
        public Input<string>? OpendashboardUrl { get; set; }

        /// <summary>
        /// The roles key is sued to get backend roles from SAML assertion
        /// </summary>
        [Input("rolesKey")]
        public Input<string>? RolesKey { get; set; }

        /// <summary>
        /// The subject key is used to get username from SAML assertion. By default, it is NameID
        /// </summary>
        [Input("subjectKey")]
        public Input<string>? SubjectKey { get; set; }

        public ClusterSecuritySamlConfigArgs()
        {
        }
        public static new ClusterSecuritySamlConfigArgs Empty => new ClusterSecuritySamlConfigArgs();
    }
}
