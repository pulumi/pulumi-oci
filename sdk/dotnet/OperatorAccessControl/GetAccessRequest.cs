// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OperatorAccessControl
{
    public static class GetAccessRequest
    {
        /// <summary>
        /// This data source provides details about a specific Access Request resource in Oracle Cloud Infrastructure Operator Access Control service.
        /// 
        /// Gets details of an access request.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAccessRequest = Oci.OperatorAccessControl.GetAccessRequest.Invoke(new()
        ///     {
        ///         AccessRequestId = oci_operator_access_control_access_request.Test_access_request.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetAccessRequestResult> InvokeAsync(GetAccessRequestArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAccessRequestResult>("oci:OperatorAccessControl/getAccessRequest:getAccessRequest", args ?? new GetAccessRequestArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Access Request resource in Oracle Cloud Infrastructure Operator Access Control service.
        /// 
        /// Gets details of an access request.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAccessRequest = Oci.OperatorAccessControl.GetAccessRequest.Invoke(new()
        ///     {
        ///         AccessRequestId = oci_operator_access_control_access_request.Test_access_request.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetAccessRequestResult> Invoke(GetAccessRequestInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAccessRequestResult>("oci:OperatorAccessControl/getAccessRequest:getAccessRequest", args ?? new GetAccessRequestInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAccessRequestArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// unique AccessRequest identifier
        /// </summary>
        [Input("accessRequestId", required: true)]
        public string AccessRequestId { get; set; } = null!;

        public GetAccessRequestArgs()
        {
        }
        public static new GetAccessRequestArgs Empty => new GetAccessRequestArgs();
    }

    public sealed class GetAccessRequestInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// unique AccessRequest identifier
        /// </summary>
        [Input("accessRequestId", required: true)]
        public Input<string> AccessRequestId { get; set; } = null!;

        public GetAccessRequestInvokeArgs()
        {
        }
        public static new GetAccessRequestInvokeArgs Empty => new GetAccessRequestInvokeArgs();
    }


    [OutputType]
    public sealed class GetAccessRequestResult
    {
        /// <summary>
        /// Summary comment by the operator creating the access request.
        /// </summary>
        public readonly string AccessReasonSummary;
        public readonly string AccessRequestId;
        /// <summary>
        /// List of operator actions for which approval is sought by the operator user.
        /// </summary>
        public readonly ImmutableArray<string> ActionRequestsLists;
        /// <summary>
        /// The last recent Comment entered by the approver of the request.
        /// </summary>
        public readonly string ApproverComment;
        /// <summary>
        /// Specifies the type of auditing to be enabled. There are two levels of auditing: command-level and keystroke-level.  By default, auditing is enabled at the command level i.e., each command issued by the operator is audited. When keystroke-level is chosen,  in addition to command level logging, key strokes are also logged.
        /// </summary>
        public readonly ImmutableArray<string> AuditTypes;
        /// <summary>
        /// The comment entered by the operator while closing the request.
        /// </summary>
        public readonly string ClosureComment;
        /// <summary>
        /// The OCID of the compartment that contains the access request.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace.
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// Duration in hours for which access is sought on the target resource.
        /// </summary>
        public readonly int Duration;
        /// <summary>
        /// Duration in hours for which extension access is sought on the target resource.
        /// </summary>
        public readonly int ExtendDuration;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Whether the access request was automatically approved.
        /// </summary>
        public readonly bool IsAutoApproved;
        /// <summary>
        /// more in detail about the lifeCycleState.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// Additional message specific to the access request that can be specified by the approver at the time of approval.
        /// </summary>
        public readonly string OpctlAdditionalMessage;
        /// <summary>
        /// The OCID of the operator control governing the target resource.
        /// </summary>
        public readonly string OpctlId;
        /// <summary>
        /// Name of the Operator control governing the target resource.
        /// </summary>
        public readonly string OpctlName;
        /// <summary>
        /// A unique identifier associated with the operator who raised the request. This identifier can not be used directly to identify the operator. You need to provide this identifier if you would like Oracle to provide additional information about the operator action within Oracle tenancy.
        /// </summary>
        public readonly string OperatorId;
        /// <summary>
        /// Summary reason for which the operator is requesting access on the target resource.
        /// </summary>
        public readonly string Reason;
        /// <summary>
        /// This is an automatic identifier generated by the system which is easier for human comprehension.
        /// </summary>
        public readonly string RequestId;
        /// <summary>
        /// The OCID of the target resource associated with the access request. The operator raises an access request to get approval to  access the target resource.
        /// </summary>
        public readonly string ResourceId;
        /// <summary>
        /// The name of the target resource.
        /// </summary>
        public readonly string ResourceName;
        /// <summary>
        /// resourceType for which the AccessRequest is applicable
        /// </summary>
        public readonly string ResourceType;
        /// <summary>
        /// Priority assigned to the access request by the operator
        /// </summary>
        public readonly string Severity;
        /// <summary>
        /// The current state of the AccessRequest.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// System message that will be displayed to the operator at login to the target resource.
        /// </summary>
        public readonly string SystemMessage;
        /// <summary>
        /// Time when the access request was created in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format. Example: '2020-05-22T21:10:29.600Z'
        /// </summary>
        public readonly string TimeOfCreation;
        /// <summary>
        /// Time when the access request was last modified in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format. Example: '2020-05-22T21:10:29.600Z'
        /// </summary>
        public readonly string TimeOfModification;
        /// <summary>
        /// The time when access request is scheduled to be approved in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.Example: '2020-05-22T21:10:29.600Z'
        /// </summary>
        public readonly string TimeOfUserCreation;
        /// <summary>
        /// The OCID of the user that last modified the access request.
        /// </summary>
        public readonly string UserId;
        /// <summary>
        /// The OCID of the workflow associated with the access request. This is needed if you want to contact Oracle Support for a stuck access request or for an access request that encounters an internal error.
        /// </summary>
        public readonly ImmutableArray<string> WorkflowIds;

        [OutputConstructor]
        private GetAccessRequestResult(
            string accessReasonSummary,

            string accessRequestId,

            ImmutableArray<string> actionRequestsLists,

            string approverComment,

            ImmutableArray<string> auditTypes,

            string closureComment,

            string compartmentId,

            ImmutableDictionary<string, object> definedTags,

            int duration,

            int extendDuration,

            ImmutableDictionary<string, object> freeformTags,

            string id,

            bool isAutoApproved,

            string lifecycleDetails,

            string opctlAdditionalMessage,

            string opctlId,

            string opctlName,

            string operatorId,

            string reason,

            string requestId,

            string resourceId,

            string resourceName,

            string resourceType,

            string severity,

            string state,

            string systemMessage,

            string timeOfCreation,

            string timeOfModification,

            string timeOfUserCreation,

            string userId,

            ImmutableArray<string> workflowIds)
        {
            AccessReasonSummary = accessReasonSummary;
            AccessRequestId = accessRequestId;
            ActionRequestsLists = actionRequestsLists;
            ApproverComment = approverComment;
            AuditTypes = auditTypes;
            ClosureComment = closureComment;
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            Duration = duration;
            ExtendDuration = extendDuration;
            FreeformTags = freeformTags;
            Id = id;
            IsAutoApproved = isAutoApproved;
            LifecycleDetails = lifecycleDetails;
            OpctlAdditionalMessage = opctlAdditionalMessage;
            OpctlId = opctlId;
            OpctlName = opctlName;
            OperatorId = operatorId;
            Reason = reason;
            RequestId = requestId;
            ResourceId = resourceId;
            ResourceName = resourceName;
            ResourceType = resourceType;
            Severity = severity;
            State = state;
            SystemMessage = systemMessage;
            TimeOfCreation = timeOfCreation;
            TimeOfModification = timeOfModification;
            TimeOfUserCreation = timeOfUserCreation;
            UserId = userId;
            WorkflowIds = workflowIds;
        }
    }
}
