// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OperatorAccessControl
{
    public static class GetControlAssignment
    {
        /// <summary>
        /// This data source provides details about a specific Operator Control Assignment resource in Oracle Cloud Infrastructure Operator Access Control service.
        /// 
        /// Gets the details of an Operator Control Assignment of the specified ID.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOperatorControlAssignment = Oci.OperatorAccessControl.GetControlAssignment.Invoke(new()
        ///     {
        ///         OperatorControlAssignmentId = oci_operator_access_control_operator_control_assignment.Test_operator_control_assignment.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetControlAssignmentResult> InvokeAsync(GetControlAssignmentArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetControlAssignmentResult>("oci:OperatorAccessControl/getControlAssignment:getControlAssignment", args ?? new GetControlAssignmentArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Operator Control Assignment resource in Oracle Cloud Infrastructure Operator Access Control service.
        /// 
        /// Gets the details of an Operator Control Assignment of the specified ID.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOperatorControlAssignment = Oci.OperatorAccessControl.GetControlAssignment.Invoke(new()
        ///     {
        ///         OperatorControlAssignmentId = oci_operator_access_control_operator_control_assignment.Test_operator_control_assignment.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetControlAssignmentResult> Invoke(GetControlAssignmentInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetControlAssignmentResult>("oci:OperatorAccessControl/getControlAssignment:getControlAssignment", args ?? new GetControlAssignmentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetControlAssignmentArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// unique OperatorControl identifier
        /// </summary>
        [Input("operatorControlAssignmentId", required: true)]
        public string OperatorControlAssignmentId { get; set; } = null!;

        public GetControlAssignmentArgs()
        {
        }
        public static new GetControlAssignmentArgs Empty => new GetControlAssignmentArgs();
    }

    public sealed class GetControlAssignmentInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// unique OperatorControl identifier
        /// </summary>
        [Input("operatorControlAssignmentId", required: true)]
        public Input<string> OperatorControlAssignmentId { get; set; } = null!;

        public GetControlAssignmentInvokeArgs()
        {
        }
        public static new GetControlAssignmentInvokeArgs Empty => new GetControlAssignmentInvokeArgs();
    }


    [OutputType]
    public sealed class GetControlAssignmentResult
    {
        /// <summary>
        /// The OCID of the user who created this operator control assignment.
        /// </summary>
        public readonly string? AssignerId;
        /// <summary>
        /// Comment about the assignment of the operator control to this target resource.
        /// </summary>
        public readonly string? Comment;
        /// <summary>
        /// The OCID of the comparment that contains the operator control assignment.
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace.
        /// </summary>
        public readonly ImmutableDictionary<string, object>? DefinedTags;
        /// <summary>
        /// description containing reason for releasing of OperatorControl.
        /// </summary>
        public readonly string? DetachmentDescription;
        /// <summary>
        /// The code identifying the error occurred during Assignment operation.
        /// </summary>
        public readonly int? ErrorCode;
        /// <summary>
        /// The message describing the error occurred during Assignment operation.
        /// </summary>
        public readonly string? ErrorMessage;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
        /// </summary>
        public readonly ImmutableDictionary<string, object>? FreeformTags;
        /// <summary>
        /// The OCID of the operator control assignment.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The boolean if true would autoApprove during maintenance.
        /// </summary>
        public readonly bool? IsAutoApproveDuringMaintenance;
        /// <summary>
        /// Whether the assignment is a default assignment.
        /// </summary>
        public readonly bool? IsDefaultAssignment;
        /// <summary>
        /// If set, then the target resource is always governed by the operator control.
        /// </summary>
        public readonly bool? IsEnforcedAlways;
        /// <summary>
        /// If set indicates that the audit logs are being forwarded to the relevant remote logging server
        /// </summary>
        public readonly bool? IsLogForwarded;
        /// <summary>
        /// More in detail about the lifeCycleState.
        /// </summary>
        public readonly string? LifecycleDetails;
        public readonly string OperatorControlAssignmentId;
        /// <summary>
        /// The OCID of the operator control.
        /// </summary>
        public readonly string? OperatorControlId;
        /// <summary>
        /// The address of the remote syslog server where the audit logs are being forwarded to. Address in host or IP format.
        /// </summary>
        public readonly string? RemoteSyslogServerAddress;
        /// <summary>
        /// The CA certificate of the remote syslog server.
        /// </summary>
        public readonly string? RemoteSyslogServerCaCert;
        /// <summary>
        /// The listening port of the remote syslog server. The port range is 0 - 65535. Only TCP supported.
        /// </summary>
        public readonly int? RemoteSyslogServerPort;
        /// <summary>
        /// The OCID of the compartment that contains the target resource.
        /// </summary>
        public readonly string? ResourceCompartmentId;
        /// <summary>
        /// The OCID of the target resource.
        /// </summary>
        public readonly string? ResourceId;
        /// <summary>
        /// Name of the target resource.
        /// </summary>
        public readonly string? ResourceName;
        /// <summary>
        /// resourceType for which the OperatorControlAssignment is applicable
        /// </summary>
        public readonly string? ResourceType;
        /// <summary>
        /// The current lifcycle state of the OperatorControl.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// The time at which the target resource will be brought under the governance of the operator control expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: '2020-05-22T21:10:29.600Z'
        /// </summary>
        public readonly string? TimeAssignmentFrom;
        /// <summary>
        /// The time at which the target resource will leave the governance of the operator control expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: '2020-05-22T21:10:29.600Z'
        /// </summary>
        public readonly string? TimeAssignmentTo;
        /// <summary>
        /// Time when the operator control assignment is created in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: '2020-05-22T21:10:29.600Z'
        /// </summary>
        public readonly string? TimeOfAssignment;
        /// <summary>
        /// Time on which the operator control assignment was deleted in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format.Example: '2020-05-22T21:10:29.600Z'
        /// </summary>
        public readonly string? TimeOfDeletion;
        /// <summary>
        /// User id who released the operatorControl.
        /// </summary>
        public readonly string? UnassignerId;

        [OutputConstructor]
        private GetControlAssignmentResult(
            string? assignerId,

            string? comment,

            string? compartmentId,

            ImmutableDictionary<string, object>? definedTags,

            string? detachmentDescription,

            int? errorCode,

            string? errorMessage,

            ImmutableDictionary<string, object>? freeformTags,

            string? id,

            bool? isAutoApproveDuringMaintenance,

            bool? isDefaultAssignment,

            bool? isEnforcedAlways,

            bool? isLogForwarded,

            string? lifecycleDetails,

            string operatorControlAssignmentId,

            string? operatorControlId,

            string? remoteSyslogServerAddress,

            string? remoteSyslogServerCaCert,

            int? remoteSyslogServerPort,

            string? resourceCompartmentId,

            string? resourceId,

            string? resourceName,

            string? resourceType,

            string? state,

            string? timeAssignmentFrom,

            string? timeAssignmentTo,

            string? timeOfAssignment,

            string? timeOfDeletion,

            string? unassignerId)
        {
            AssignerId = assignerId;
            Comment = comment;
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            DetachmentDescription = detachmentDescription;
            ErrorCode = errorCode;
            ErrorMessage = errorMessage;
            FreeformTags = freeformTags;
            Id = id;
            IsAutoApproveDuringMaintenance = isAutoApproveDuringMaintenance;
            IsDefaultAssignment = isDefaultAssignment;
            IsEnforcedAlways = isEnforcedAlways;
            IsLogForwarded = isLogForwarded;
            LifecycleDetails = lifecycleDetails;
            OperatorControlAssignmentId = operatorControlAssignmentId;
            OperatorControlId = operatorControlId;
            RemoteSyslogServerAddress = remoteSyslogServerAddress;
            RemoteSyslogServerCaCert = remoteSyslogServerCaCert;
            RemoteSyslogServerPort = remoteSyslogServerPort;
            ResourceCompartmentId = resourceCompartmentId;
            ResourceId = resourceId;
            ResourceName = resourceName;
            ResourceType = resourceType;
            State = state;
            TimeAssignmentFrom = timeAssignmentFrom;
            TimeAssignmentTo = timeAssignmentTo;
            TimeOfAssignment = timeOfAssignment;
            TimeOfDeletion = timeOfDeletion;
            UnassignerId = unassignerId;
        }
    }
}
