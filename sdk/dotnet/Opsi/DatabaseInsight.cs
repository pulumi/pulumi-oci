// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Opsi
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// DatabaseInsights can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:Opsi/databaseInsight:DatabaseInsight test_database_insight "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:Opsi/databaseInsight:DatabaseInsight")]
    public partial class DatabaseInsight : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) Compartment Identifier of database
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// User credential details to connect to the database.
        /// </summary>
        [Output("connectionCredentialDetails")]
        public Output<Outputs.DatabaseInsightConnectionCredentialDetails> ConnectionCredentialDetails { get; private set; } = null!;

        /// <summary>
        /// Connection details to connect to the database. HostName, protocol, and port should be specified.
        /// </summary>
        [Output("connectionDetails")]
        public Output<Outputs.DatabaseInsightConnectionDetails> ConnectionDetails { get; private set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of External Database Connector
        /// </summary>
        [Output("connectorId")]
        public Output<string> ConnectorId { get; private set; } = null!;

        /// <summary>
        /// User credential details to connect to the database.
        /// </summary>
        [Output("credentialDetails")]
        public Output<Outputs.DatabaseInsightCredentialDetails?> CredentialDetails { get; private set; } = null!;

        /// <summary>
        /// A message describing the status of the database connection of this resource. For example, it can be used to provide actionable information about the permission and content validity of the database connection.
        /// </summary>
        [Output("databaseConnectionStatusDetails")]
        public Output<string> DatabaseConnectionStatusDetails { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The DBM owned database connector [OCID](https://www.terraform.io/iaas/database-management/doc/view-connector-details.html) mapping to the database credentials and connection details.
        /// </summary>
        [Output("databaseConnectorId")]
        public Output<string> DatabaseConnectorId { get; private set; } = null!;

        /// <summary>
        /// Display name of database
        /// </summary>
        [Output("databaseDisplayName")]
        public Output<string> DatabaseDisplayName { get; private set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
        /// </summary>
        [Output("databaseId")]
        public Output<string> DatabaseId { get; private set; } = null!;

        /// <summary>
        /// Name of database
        /// </summary>
        [Output("databaseName")]
        public Output<string> DatabaseName { get; private set; } = null!;

        /// <summary>
        /// Oracle Cloud Infrastructure database resource type
        /// </summary>
        [Output("databaseResourceType")]
        public Output<string> DatabaseResourceType { get; private set; } = null!;

        /// <summary>
        /// Ops Insights internal representation of the database type.
        /// </summary>
        [Output("databaseType")]
        public Output<string> DatabaseType { get; private set; } = null!;

        /// <summary>
        /// The version of the database.
        /// </summary>
        [Output("databaseVersion")]
        public Output<string> DatabaseVersion { get; private set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Management private endpoint. This field and opsi_private_endpoint_id are mutually exclusive. If DBM private endpoint ID is provided, a new OPSI private endpoint ID will be created.
        /// </summary>
        [Output("dbmPrivateEndpointId")]
        public Output<string> DbmPrivateEndpointId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, string>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// Database Deployment Type (EXACS will be supported in the future)
        /// </summary>
        [Output("deploymentType")]
        public Output<string> DeploymentType { get; private set; } = null!;

        /// <summary>
        /// OPSI Enterprise Manager Bridge OCID
        /// </summary>
        [Output("enterpriseManagerBridgeId")]
        public Output<string> EnterpriseManagerBridgeId { get; private set; } = null!;

        /// <summary>
        /// Enterprise Manager Entity Display Name
        /// </summary>
        [Output("enterpriseManagerEntityDisplayName")]
        public Output<string> EnterpriseManagerEntityDisplayName { get; private set; } = null!;

        /// <summary>
        /// Enterprise Manager Entity Unique Identifier
        /// </summary>
        [Output("enterpriseManagerEntityIdentifier")]
        public Output<string> EnterpriseManagerEntityIdentifier { get; private set; } = null!;

        /// <summary>
        /// Enterprise Manager Entity Name
        /// </summary>
        [Output("enterpriseManagerEntityName")]
        public Output<string> EnterpriseManagerEntityName { get; private set; } = null!;

        /// <summary>
        /// Enterprise Manager Entity Type
        /// </summary>
        [Output("enterpriseManagerEntityType")]
        public Output<string> EnterpriseManagerEntityType { get; private set; } = null!;

        /// <summary>
        /// Enterprise Manager Unique Identifier
        /// </summary>
        [Output("enterpriseManagerIdentifier")]
        public Output<string> EnterpriseManagerIdentifier { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Source of the database entity.
        /// </summary>
        [Output("entitySource")]
        public Output<string> EntitySource { get; private set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata insight.
        /// </summary>
        [Output("exadataInsightId")]
        public Output<string> ExadataInsightId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, string>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// Flag is to identify if advanced features for autonomous database is enabled or not
        /// </summary>
        [Output("isAdvancedFeaturesEnabled")]
        public Output<bool> IsAdvancedFeaturesEnabled { get; private set; } = null!;

        /// <summary>
        /// Specifies if MYSQL DB System has heatwave cluster attached.
        /// </summary>
        [Output("isHeatWaveClusterAttached")]
        public Output<bool> IsHeatWaveClusterAttached { get; private set; } = null!;

        /// <summary>
        /// Specifies if MYSQL DB System is highly available.
        /// </summary>
        [Output("isHighlyAvailable")]
        public Output<bool> IsHighlyAvailable { get; private set; } = null!;

        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        [Output("lifecycleDetails")]
        public Output<string> LifecycleDetails { get; private set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Management Agent
        /// </summary>
        [Output("managementAgentId")]
        public Output<string?> ManagementAgentId { get; private set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the OPSI private endpoint
        /// </summary>
        [Output("opsiPrivateEndpointId")]
        public Output<string> OpsiPrivateEndpointId { get; private set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM Cluster or DB System ID, depending on which configuration the resource belongs to.
        /// </summary>
        [Output("parentId")]
        public Output<string> ParentId { get; private set; } = null!;

        /// <summary>
        /// Processor count. This is the OCPU count for Autonomous Database and CPU core count for other database types.
        /// </summary>
        [Output("processorCount")]
        public Output<int> ProcessorCount { get; private set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata Infrastructure.
        /// </summary>
        [Output("rootId")]
        public Output<string> RootId { get; private set; } = null!;

        /// <summary>
        /// Database service name used for connection requests.
        /// </summary>
        [Output("serviceName")]
        public Output<string> ServiceName { get; private set; } = null!;

        /// <summary>
        /// The current state of the database.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Status of the resource. Example: "ENABLED", "DISABLED". Resource can be either enabled or disabled by updating the value of status field to either "ENABLED" or "DISABLED"
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values. The resource destruction here is basically a soft delete. User cannot create resource using the same EM managed bridge OCID. If resource is in enabled state during destruction, the resource will be disabled automatically before performing delete operation.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        [Output("systemTags")]
        public Output<ImmutableDictionary<string, string>> SystemTags { get; private set; } = null!;

        /// <summary>
        /// The time the database insight was first enabled. An RFC3339 formatted datetime string
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The time the database insight was updated. An RFC3339 formatted datetime string
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;


        /// <summary>
        /// Create a DatabaseInsight resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DatabaseInsight(string name, DatabaseInsightArgs args, CustomResourceOptions? options = null)
            : base("oci:Opsi/databaseInsight:DatabaseInsight", name, args ?? new DatabaseInsightArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DatabaseInsight(string name, Input<string> id, DatabaseInsightState? state = null, CustomResourceOptions? options = null)
            : base("oci:Opsi/databaseInsight:DatabaseInsight", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DatabaseInsight resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DatabaseInsight Get(string name, Input<string> id, DatabaseInsightState? state = null, CustomResourceOptions? options = null)
        {
            return new DatabaseInsight(name, id, state, options);
        }
    }

    public sealed class DatabaseInsightArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) Compartment Identifier of database
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// User credential details to connect to the database.
        /// </summary>
        [Input("connectionCredentialDetails")]
        public Input<Inputs.DatabaseInsightConnectionCredentialDetailsArgs>? ConnectionCredentialDetails { get; set; }

        /// <summary>
        /// Connection details to connect to the database. HostName, protocol, and port should be specified.
        /// </summary>
        [Input("connectionDetails")]
        public Input<Inputs.DatabaseInsightConnectionDetailsArgs>? ConnectionDetails { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of External Database Connector
        /// </summary>
        [Input("connectorId")]
        public Input<string>? ConnectorId { get; set; }

        /// <summary>
        /// User credential details to connect to the database.
        /// </summary>
        [Input("credentialDetails")]
        public Input<Inputs.DatabaseInsightCredentialDetailsArgs>? CredentialDetails { get; set; }

        /// <summary>
        /// A message describing the status of the database connection of this resource. For example, it can be used to provide actionable information about the permission and content validity of the database connection.
        /// </summary>
        [Input("databaseConnectionStatusDetails")]
        public Input<string>? DatabaseConnectionStatusDetails { get; set; }

        /// <summary>
        /// (Updatable) The DBM owned database connector [OCID](https://www.terraform.io/iaas/database-management/doc/view-connector-details.html) mapping to the database credentials and connection details.
        /// </summary>
        [Input("databaseConnectorId")]
        public Input<string>? DatabaseConnectorId { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
        /// </summary>
        [Input("databaseId")]
        public Input<string>? DatabaseId { get; set; }

        /// <summary>
        /// Oracle Cloud Infrastructure database resource type
        /// </summary>
        [Input("databaseResourceType")]
        public Input<string>? DatabaseResourceType { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Management private endpoint. This field and opsi_private_endpoint_id are mutually exclusive. If DBM private endpoint ID is provided, a new OPSI private endpoint ID will be created.
        /// </summary>
        [Input("dbmPrivateEndpointId")]
        public Input<string>? DbmPrivateEndpointId { get; set; }

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// Database Deployment Type (EXACS will be supported in the future)
        /// </summary>
        [Input("deploymentType")]
        public Input<string>? DeploymentType { get; set; }

        /// <summary>
        /// OPSI Enterprise Manager Bridge OCID
        /// </summary>
        [Input("enterpriseManagerBridgeId")]
        public Input<string>? EnterpriseManagerBridgeId { get; set; }

        /// <summary>
        /// Enterprise Manager Entity Unique Identifier
        /// </summary>
        [Input("enterpriseManagerEntityIdentifier")]
        public Input<string>? EnterpriseManagerEntityIdentifier { get; set; }

        /// <summary>
        /// Enterprise Manager Unique Identifier
        /// </summary>
        [Input("enterpriseManagerIdentifier")]
        public Input<string>? EnterpriseManagerIdentifier { get; set; }

        /// <summary>
        /// (Updatable) Source of the database entity.
        /// </summary>
        [Input("entitySource", required: true)]
        public Input<string> EntitySource { get; set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata insight.
        /// </summary>
        [Input("exadataInsightId")]
        public Input<string>? ExadataInsightId { get; set; }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// Flag is to identify if advanced features for autonomous database is enabled or not
        /// </summary>
        [Input("isAdvancedFeaturesEnabled")]
        public Input<bool>? IsAdvancedFeaturesEnabled { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Management Agent
        /// </summary>
        [Input("managementAgentId")]
        public Input<string>? ManagementAgentId { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the OPSI private endpoint
        /// </summary>
        [Input("opsiPrivateEndpointId")]
        public Input<string>? OpsiPrivateEndpointId { get; set; }

        /// <summary>
        /// Database service name used for connection requests.
        /// </summary>
        [Input("serviceName")]
        public Input<string>? ServiceName { get; set; }

        /// <summary>
        /// (Updatable) Status of the resource. Example: "ENABLED", "DISABLED". Resource can be either enabled or disabled by updating the value of status field to either "ENABLED" or "DISABLED"
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values. The resource destruction here is basically a soft delete. User cannot create resource using the same EM managed bridge OCID. If resource is in enabled state during destruction, the resource will be disabled automatically before performing delete operation.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public DatabaseInsightArgs()
        {
        }
        public static new DatabaseInsightArgs Empty => new DatabaseInsightArgs();
    }

    public sealed class DatabaseInsightState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) Compartment Identifier of database
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// User credential details to connect to the database.
        /// </summary>
        [Input("connectionCredentialDetails")]
        public Input<Inputs.DatabaseInsightConnectionCredentialDetailsGetArgs>? ConnectionCredentialDetails { get; set; }

        /// <summary>
        /// Connection details to connect to the database. HostName, protocol, and port should be specified.
        /// </summary>
        [Input("connectionDetails")]
        public Input<Inputs.DatabaseInsightConnectionDetailsGetArgs>? ConnectionDetails { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of External Database Connector
        /// </summary>
        [Input("connectorId")]
        public Input<string>? ConnectorId { get; set; }

        /// <summary>
        /// User credential details to connect to the database.
        /// </summary>
        [Input("credentialDetails")]
        public Input<Inputs.DatabaseInsightCredentialDetailsGetArgs>? CredentialDetails { get; set; }

        /// <summary>
        /// A message describing the status of the database connection of this resource. For example, it can be used to provide actionable information about the permission and content validity of the database connection.
        /// </summary>
        [Input("databaseConnectionStatusDetails")]
        public Input<string>? DatabaseConnectionStatusDetails { get; set; }

        /// <summary>
        /// (Updatable) The DBM owned database connector [OCID](https://www.terraform.io/iaas/database-management/doc/view-connector-details.html) mapping to the database credentials and connection details.
        /// </summary>
        [Input("databaseConnectorId")]
        public Input<string>? DatabaseConnectorId { get; set; }

        /// <summary>
        /// Display name of database
        /// </summary>
        [Input("databaseDisplayName")]
        public Input<string>? DatabaseDisplayName { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
        /// </summary>
        [Input("databaseId")]
        public Input<string>? DatabaseId { get; set; }

        /// <summary>
        /// Name of database
        /// </summary>
        [Input("databaseName")]
        public Input<string>? DatabaseName { get; set; }

        /// <summary>
        /// Oracle Cloud Infrastructure database resource type
        /// </summary>
        [Input("databaseResourceType")]
        public Input<string>? DatabaseResourceType { get; set; }

        /// <summary>
        /// Ops Insights internal representation of the database type.
        /// </summary>
        [Input("databaseType")]
        public Input<string>? DatabaseType { get; set; }

        /// <summary>
        /// The version of the database.
        /// </summary>
        [Input("databaseVersion")]
        public Input<string>? DatabaseVersion { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Management private endpoint. This field and opsi_private_endpoint_id are mutually exclusive. If DBM private endpoint ID is provided, a new OPSI private endpoint ID will be created.
        /// </summary>
        [Input("dbmPrivateEndpointId")]
        public Input<string>? DbmPrivateEndpointId { get; set; }

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// Database Deployment Type (EXACS will be supported in the future)
        /// </summary>
        [Input("deploymentType")]
        public Input<string>? DeploymentType { get; set; }

        /// <summary>
        /// OPSI Enterprise Manager Bridge OCID
        /// </summary>
        [Input("enterpriseManagerBridgeId")]
        public Input<string>? EnterpriseManagerBridgeId { get; set; }

        /// <summary>
        /// Enterprise Manager Entity Display Name
        /// </summary>
        [Input("enterpriseManagerEntityDisplayName")]
        public Input<string>? EnterpriseManagerEntityDisplayName { get; set; }

        /// <summary>
        /// Enterprise Manager Entity Unique Identifier
        /// </summary>
        [Input("enterpriseManagerEntityIdentifier")]
        public Input<string>? EnterpriseManagerEntityIdentifier { get; set; }

        /// <summary>
        /// Enterprise Manager Entity Name
        /// </summary>
        [Input("enterpriseManagerEntityName")]
        public Input<string>? EnterpriseManagerEntityName { get; set; }

        /// <summary>
        /// Enterprise Manager Entity Type
        /// </summary>
        [Input("enterpriseManagerEntityType")]
        public Input<string>? EnterpriseManagerEntityType { get; set; }

        /// <summary>
        /// Enterprise Manager Unique Identifier
        /// </summary>
        [Input("enterpriseManagerIdentifier")]
        public Input<string>? EnterpriseManagerIdentifier { get; set; }

        /// <summary>
        /// (Updatable) Source of the database entity.
        /// </summary>
        [Input("entitySource")]
        public Input<string>? EntitySource { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata insight.
        /// </summary>
        [Input("exadataInsightId")]
        public Input<string>? ExadataInsightId { get; set; }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// Flag is to identify if advanced features for autonomous database is enabled or not
        /// </summary>
        [Input("isAdvancedFeaturesEnabled")]
        public Input<bool>? IsAdvancedFeaturesEnabled { get; set; }

        /// <summary>
        /// Specifies if MYSQL DB System has heatwave cluster attached.
        /// </summary>
        [Input("isHeatWaveClusterAttached")]
        public Input<bool>? IsHeatWaveClusterAttached { get; set; }

        /// <summary>
        /// Specifies if MYSQL DB System is highly available.
        /// </summary>
        [Input("isHighlyAvailable")]
        public Input<bool>? IsHighlyAvailable { get; set; }

        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        [Input("lifecycleDetails")]
        public Input<string>? LifecycleDetails { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Management Agent
        /// </summary>
        [Input("managementAgentId")]
        public Input<string>? ManagementAgentId { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the OPSI private endpoint
        /// </summary>
        [Input("opsiPrivateEndpointId")]
        public Input<string>? OpsiPrivateEndpointId { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM Cluster or DB System ID, depending on which configuration the resource belongs to.
        /// </summary>
        [Input("parentId")]
        public Input<string>? ParentId { get; set; }

        /// <summary>
        /// Processor count. This is the OCPU count for Autonomous Database and CPU core count for other database types.
        /// </summary>
        [Input("processorCount")]
        public Input<int>? ProcessorCount { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata Infrastructure.
        /// </summary>
        [Input("rootId")]
        public Input<string>? RootId { get; set; }

        /// <summary>
        /// Database service name used for connection requests.
        /// </summary>
        [Input("serviceName")]
        public Input<string>? ServiceName { get; set; }

        /// <summary>
        /// The current state of the database.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// (Updatable) Status of the resource. Example: "ENABLED", "DISABLED". Resource can be either enabled or disabled by updating the value of status field to either "ENABLED" or "DISABLED"
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values. The resource destruction here is basically a soft delete. User cannot create resource using the same EM managed bridge OCID. If resource is in enabled state during destruction, the resource will be disabled automatically before performing delete operation.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("systemTags")]
        private InputMap<string>? _systemTags;

        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public InputMap<string> SystemTags
        {
            get => _systemTags ?? (_systemTags = new InputMap<string>());
            set => _systemTags = value;
        }

        /// <summary>
        /// The time the database insight was first enabled. An RFC3339 formatted datetime string
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The time the database insight was updated. An RFC3339 formatted datetime string
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        public DatabaseInsightState()
        {
        }
        public static new DatabaseInsightState Empty => new DatabaseInsightState();
    }
}
