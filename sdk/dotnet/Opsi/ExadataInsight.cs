// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Opsi
{
    /// <summary>
    /// This resource provides the Exadata Insight resource in Oracle Cloud Infrastructure Opsi service.
    /// 
    /// Create an Exadata insight resource for an Exadata system in Operations Insights. The Exadata system will be enabled in Operations Insights. Exadata-related metric collection and analysis will be started.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testExadataInsight = new Oci.Opsi.ExadataInsight("test_exadata_insight", new()
    ///     {
    ///         CompartmentId = compartmentId,
    ///         EntitySource = exadataInsightEntitySource,
    ///         DefinedTags = 
    ///         {
    ///             { "foo-namespace.bar-key", "value" },
    ///         },
    ///         EnterpriseManagerBridgeId = testEnterpriseManagerBridge.Id,
    ///         EnterpriseManagerEntityIdentifier = exadataInsightEnterpriseManagerEntityIdentifier,
    ///         EnterpriseManagerIdentifier = exadataInsightEnterpriseManagerIdentifier,
    ///         ExadataInfraId = testExadataInfra.Id,
    ///         FreeformTags = 
    ///         {
    ///             { "bar-key", "value" },
    ///         },
    ///         IsAutoSyncEnabled = exadataInsightIsAutoSyncEnabled,
    ///         MemberVmClusterDetails = new[]
    ///         {
    ///             new Oci.Opsi.Inputs.ExadataInsightMemberVmClusterDetailArgs
    ///             {
    ///                 CompartmentId = compartmentId,
    ///                 DbmPrivateEndpointId = testPrivateEndpoint.Id,
    ///                 MemberAutonomousDetails = new[]
    ///                 {
    ///                     new Oci.Opsi.Inputs.ExadataInsightMemberVmClusterDetailMemberAutonomousDetailArgs
    ///                     {
    ///                         CompartmentId = compartmentId,
    ///                         ConnectionCredentialDetails = new Oci.Opsi.Inputs.ExadataInsightMemberVmClusterDetailMemberAutonomousDetailConnectionCredentialDetailsArgs
    ///                         {
    ///                             CredentialType = exadataInsightMemberVmClusterDetailsMemberAutonomousDetailsConnectionCredentialDetailsCredentialType,
    ///                             CredentialSourceName = exadataInsightMemberVmClusterDetailsMemberAutonomousDetailsConnectionCredentialDetailsCredentialSourceName,
    ///                             NamedCredentialId = testNamedCredential.Id,
    ///                             PasswordSecretId = testSecret.Id,
    ///                             Role = exadataInsightMemberVmClusterDetailsMemberAutonomousDetailsConnectionCredentialDetailsRole,
    ///                             UserName = testUser.Name,
    ///                             WalletSecretId = testSecret.Id,
    ///                         },
    ///                         ConnectionDetails = new Oci.Opsi.Inputs.ExadataInsightMemberVmClusterDetailMemberAutonomousDetailConnectionDetailsArgs
    ///                         {
    ///                             HostName = exadataInsightMemberVmClusterDetailsMemberAutonomousDetailsConnectionDetailsHostName,
    ///                             Port = exadataInsightMemberVmClusterDetailsMemberAutonomousDetailsConnectionDetailsPort,
    ///                             Protocol = exadataInsightMemberVmClusterDetailsMemberAutonomousDetailsConnectionDetailsProtocol,
    ///                             ServiceName = testService.Name,
    ///                         },
    ///                         CredentialDetails = new Oci.Opsi.Inputs.ExadataInsightMemberVmClusterDetailMemberAutonomousDetailCredentialDetailsArgs
    ///                         {
    ///                             CredentialType = exadataInsightMemberVmClusterDetailsMemberAutonomousDetailsCredentialDetailsCredentialType,
    ///                             CredentialSourceName = exadataInsightMemberVmClusterDetailsMemberAutonomousDetailsCredentialDetailsCredentialSourceName,
    ///                             NamedCredentialId = testNamedCredential.Id,
    ///                             PasswordSecretId = testSecret.Id,
    ///                             Role = exadataInsightMemberVmClusterDetailsMemberAutonomousDetailsCredentialDetailsRole,
    ///                             UserName = testUser.Name,
    ///                             WalletSecretId = testSecret.Id,
    ///                         },
    ///                         DatabaseId = testDatabase.Id,
    ///                         DatabaseResourceType = exadataInsightMemberVmClusterDetailsMemberAutonomousDetailsDatabaseResourceType,
    ///                         DefinedTags = exadataInsightMemberVmClusterDetailsMemberAutonomousDetailsDefinedTags,
    ///                         DeploymentType = exadataInsightMemberVmClusterDetailsMemberAutonomousDetailsDeploymentType,
    ///                         EntitySource = exadataInsightMemberVmClusterDetailsMemberAutonomousDetailsEntitySource,
    ///                         FreeformTags = exadataInsightMemberVmClusterDetailsMemberAutonomousDetailsFreeformTags,
    ///                         IsAdvancedFeaturesEnabled = exadataInsightMemberVmClusterDetailsMemberAutonomousDetailsIsAdvancedFeaturesEnabled,
    ///                         ManagementAgentId = testManagementAgent.Id,
    ///                         OpsiPrivateEndpointId = testPrivateEndpoint.Id,
    ///                         SystemTags = exadataInsightMemberVmClusterDetailsMemberAutonomousDetailsSystemTags,
    ///                     },
    ///                 },
    ///                 MemberDatabaseDetails = new[]
    ///                 {
    ///                     new Oci.Opsi.Inputs.ExadataInsightMemberVmClusterDetailMemberDatabaseDetailArgs
    ///                     {
    ///                         CompartmentId = compartmentId,
    ///                         ConnectionCredentialDetails = new Oci.Opsi.Inputs.ExadataInsightMemberVmClusterDetailMemberDatabaseDetailConnectionCredentialDetailsArgs
    ///                         {
    ///                             CredentialType = exadataInsightMemberVmClusterDetailsMemberDatabaseDetailsConnectionCredentialDetailsCredentialType,
    ///                             CredentialSourceName = exadataInsightMemberVmClusterDetailsMemberDatabaseDetailsConnectionCredentialDetailsCredentialSourceName,
    ///                             NamedCredentialId = testNamedCredential.Id,
    ///                             PasswordSecretId = testSecret.Id,
    ///                             Role = exadataInsightMemberVmClusterDetailsMemberDatabaseDetailsConnectionCredentialDetailsRole,
    ///                             UserName = testUser.Name,
    ///                             WalletSecretId = testSecret.Id,
    ///                         },
    ///                         ConnectionDetails = new Oci.Opsi.Inputs.ExadataInsightMemberVmClusterDetailMemberDatabaseDetailConnectionDetailsArgs
    ///                         {
    ///                             HostName = exadataInsightMemberVmClusterDetailsMemberDatabaseDetailsConnectionDetailsHostName,
    ///                             Hosts = new[]
    ///                             {
    ///                                 new Oci.Opsi.Inputs.ExadataInsightMemberVmClusterDetailMemberDatabaseDetailConnectionDetailsHostArgs
    ///                                 {
    ///                                     HostIp = exadataInsightMemberVmClusterDetailsMemberDatabaseDetailsConnectionDetailsHostsHostIp,
    ///                                     Port = exadataInsightMemberVmClusterDetailsMemberDatabaseDetailsConnectionDetailsHostsPort,
    ///                                 },
    ///                             },
    ///                             Port = exadataInsightMemberVmClusterDetailsMemberDatabaseDetailsConnectionDetailsPort,
    ///                             Protocol = exadataInsightMemberVmClusterDetailsMemberDatabaseDetailsConnectionDetailsProtocol,
    ///                             ServiceName = testService.Name,
    ///                         },
    ///                         CredentialDetails = new Oci.Opsi.Inputs.ExadataInsightMemberVmClusterDetailMemberDatabaseDetailCredentialDetailsArgs
    ///                         {
    ///                             CredentialType = exadataInsightMemberVmClusterDetailsMemberDatabaseDetailsCredentialDetailsCredentialType,
    ///                             CredentialSourceName = exadataInsightMemberVmClusterDetailsMemberDatabaseDetailsCredentialDetailsCredentialSourceName,
    ///                             NamedCredentialId = testNamedCredential.Id,
    ///                             PasswordSecretId = testSecret.Id,
    ///                             Role = exadataInsightMemberVmClusterDetailsMemberDatabaseDetailsCredentialDetailsRole,
    ///                             UserName = testUser.Name,
    ///                             WalletSecretId = testSecret.Id,
    ///                         },
    ///                         DatabaseId = testDatabase.Id,
    ///                         DatabaseResourceType = exadataInsightMemberVmClusterDetailsMemberDatabaseDetailsDatabaseResourceType,
    ///                         DbmPrivateEndpointId = testPrivateEndpoint.Id,
    ///                         DefinedTags = exadataInsightMemberVmClusterDetailsMemberDatabaseDetailsDefinedTags,
    ///                         DeploymentType = exadataInsightMemberVmClusterDetailsMemberDatabaseDetailsDeploymentType,
    ///                         EntitySource = exadataInsightMemberVmClusterDetailsMemberDatabaseDetailsEntitySource,
    ///                         FreeformTags = exadataInsightMemberVmClusterDetailsMemberDatabaseDetailsFreeformTags,
    ///                         ManagementAgentId = testManagementAgent.Id,
    ///                         OpsiPrivateEndpointId = testPrivateEndpoint.Id,
    ///                         ServiceName = testService.Name,
    ///                         SystemTags = exadataInsightMemberVmClusterDetailsMemberDatabaseDetailsSystemTags,
    ///                     },
    ///                 },
    ///                 OpsiPrivateEndpointId = testPrivateEndpoint.Id,
    ///                 VmClusterType = exadataInsightMemberVmClusterDetailsVmClusterType,
    ///                 VmclusterId = testVmcluster.Id,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ExadataInsights can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:Opsi/exadataInsight:ExadataInsight test_exadata_insight "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:Opsi/exadataInsight:ExadataInsight")]
    public partial class ExadataInsight : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) Compartment Identifier of Exadata insight
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, string>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// OPSI Enterprise Manager Bridge OCID
        /// </summary>
        [Output("enterpriseManagerBridgeId")]
        public Output<string> EnterpriseManagerBridgeId { get; private set; } = null!;

        /// <summary>
        /// Enterprise Manager Entity Display Name
        /// </summary>
        [Output("enterpriseManagerEntityDisplayName")]
        public Output<string> EnterpriseManagerEntityDisplayName { get; private set; } = null!;

        /// <summary>
        /// Enterprise Manager Entity Unique Identifier
        /// </summary>
        [Output("enterpriseManagerEntityIdentifier")]
        public Output<string> EnterpriseManagerEntityIdentifier { get; private set; } = null!;

        /// <summary>
        /// Enterprise Manager Entity Name
        /// </summary>
        [Output("enterpriseManagerEntityName")]
        public Output<string> EnterpriseManagerEntityName { get; private set; } = null!;

        /// <summary>
        /// Enterprise Manager Entity Type
        /// </summary>
        [Output("enterpriseManagerEntityType")]
        public Output<string> EnterpriseManagerEntityType { get; private set; } = null!;

        /// <summary>
        /// Enterprise Manager Unique Identifier
        /// </summary>
        [Output("enterpriseManagerIdentifier")]
        public Output<string> EnterpriseManagerIdentifier { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Source of the Exadata system.
        /// </summary>
        [Output("entitySource")]
        public Output<string> EntitySource { get; private set; } = null!;

        /// <summary>
        /// The user-friendly name for the Exadata system. The name does not have to be unique.
        /// </summary>
        [Output("exadataDisplayName")]
        public Output<string> ExadataDisplayName { get; private set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata Infrastructure.
        /// </summary>
        [Output("exadataInfraId")]
        public Output<string> ExadataInfraId { get; private set; } = null!;

        [Output("exadataInfraResourceType")]
        public Output<string> ExadataInfraResourceType { get; private set; } = null!;

        /// <summary>
        /// The Exadata system name. If the Exadata systems managed by Enterprise Manager, the name is unique amongst the Exadata systems managed by the same Enterprise Manager.
        /// </summary>
        [Output("exadataName")]
        public Output<string> ExadataName { get; private set; } = null!;

        /// <summary>
        /// Exadata rack type.
        /// </summary>
        [Output("exadataRackType")]
        public Output<string> ExadataRackType { get; private set; } = null!;

        [Output("exadataShape")]
        public Output<string> ExadataShape { get; private set; } = null!;

        /// <summary>
        /// Operations Insights internal representation of the the Exadata system type.
        /// </summary>
        [Output("exadataType")]
        public Output<string> ExadataType { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, string>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Set to true to enable automatic enablement and disablement of related targets from Enterprise Manager. New resources (e.g. Database Insights) will be placed in the same compartment as the related Exadata Insight.
        /// </summary>
        [Output("isAutoSyncEnabled")]
        public Output<bool> IsAutoSyncEnabled { get; private set; } = null!;

        /// <summary>
        /// true if virtualization is used in the Exadata system
        /// </summary>
        [Output("isVirtualizedExadata")]
        public Output<bool> IsVirtualizedExadata { get; private set; } = null!;

        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        [Output("lifecycleDetails")]
        public Output<string> LifecycleDetails { get; private set; } = null!;

        [Output("memberVmClusterDetails")]
        public Output<ImmutableArray<Outputs.ExadataInsightMemberVmClusterDetail>> MemberVmClusterDetails { get; private set; } = null!;

        /// <summary>
        /// The current state of the Exadata insight.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Status of the resource. Example: "ENABLED", "DISABLED". Resource can be either enabled or disabled by updating the value of status field to either "ENABLED" or "DISABLED"
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        [Output("systemTags")]
        public Output<ImmutableDictionary<string, string>> SystemTags { get; private set; } = null!;

        /// <summary>
        /// The time the the Exadata insight was first enabled. An RFC3339 formatted datetime string
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The time the Exadata insight was updated. An RFC3339 formatted datetime string
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;


        /// <summary>
        /// Create a ExadataInsight resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ExadataInsight(string name, ExadataInsightArgs args, CustomResourceOptions? options = null)
            : base("oci:Opsi/exadataInsight:ExadataInsight", name, args ?? new ExadataInsightArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ExadataInsight(string name, Input<string> id, ExadataInsightState? state = null, CustomResourceOptions? options = null)
            : base("oci:Opsi/exadataInsight:ExadataInsight", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ExadataInsight resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ExadataInsight Get(string name, Input<string> id, ExadataInsightState? state = null, CustomResourceOptions? options = null)
        {
            return new ExadataInsight(name, id, state, options);
        }
    }

    public sealed class ExadataInsightArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) Compartment Identifier of Exadata insight
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// OPSI Enterprise Manager Bridge OCID
        /// </summary>
        [Input("enterpriseManagerBridgeId")]
        public Input<string>? EnterpriseManagerBridgeId { get; set; }

        /// <summary>
        /// Enterprise Manager Entity Unique Identifier
        /// </summary>
        [Input("enterpriseManagerEntityIdentifier")]
        public Input<string>? EnterpriseManagerEntityIdentifier { get; set; }

        /// <summary>
        /// Enterprise Manager Unique Identifier
        /// </summary>
        [Input("enterpriseManagerIdentifier")]
        public Input<string>? EnterpriseManagerIdentifier { get; set; }

        /// <summary>
        /// (Updatable) Source of the Exadata system.
        /// </summary>
        [Input("entitySource", required: true)]
        public Input<string> EntitySource { get; set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata Infrastructure.
        /// </summary>
        [Input("exadataInfraId")]
        public Input<string>? ExadataInfraId { get; set; }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) Set to true to enable automatic enablement and disablement of related targets from Enterprise Manager. New resources (e.g. Database Insights) will be placed in the same compartment as the related Exadata Insight.
        /// </summary>
        [Input("isAutoSyncEnabled")]
        public Input<bool>? IsAutoSyncEnabled { get; set; }

        [Input("memberVmClusterDetails")]
        private InputList<Inputs.ExadataInsightMemberVmClusterDetailArgs>? _memberVmClusterDetails;
        public InputList<Inputs.ExadataInsightMemberVmClusterDetailArgs> MemberVmClusterDetails
        {
            get => _memberVmClusterDetails ?? (_memberVmClusterDetails = new InputList<Inputs.ExadataInsightMemberVmClusterDetailArgs>());
            set => _memberVmClusterDetails = value;
        }

        /// <summary>
        /// (Updatable) Status of the resource. Example: "ENABLED", "DISABLED". Resource can be either enabled or disabled by updating the value of status field to either "ENABLED" or "DISABLED"
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public ExadataInsightArgs()
        {
        }
        public static new ExadataInsightArgs Empty => new ExadataInsightArgs();
    }

    public sealed class ExadataInsightState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) Compartment Identifier of Exadata insight
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// OPSI Enterprise Manager Bridge OCID
        /// </summary>
        [Input("enterpriseManagerBridgeId")]
        public Input<string>? EnterpriseManagerBridgeId { get; set; }

        /// <summary>
        /// Enterprise Manager Entity Display Name
        /// </summary>
        [Input("enterpriseManagerEntityDisplayName")]
        public Input<string>? EnterpriseManagerEntityDisplayName { get; set; }

        /// <summary>
        /// Enterprise Manager Entity Unique Identifier
        /// </summary>
        [Input("enterpriseManagerEntityIdentifier")]
        public Input<string>? EnterpriseManagerEntityIdentifier { get; set; }

        /// <summary>
        /// Enterprise Manager Entity Name
        /// </summary>
        [Input("enterpriseManagerEntityName")]
        public Input<string>? EnterpriseManagerEntityName { get; set; }

        /// <summary>
        /// Enterprise Manager Entity Type
        /// </summary>
        [Input("enterpriseManagerEntityType")]
        public Input<string>? EnterpriseManagerEntityType { get; set; }

        /// <summary>
        /// Enterprise Manager Unique Identifier
        /// </summary>
        [Input("enterpriseManagerIdentifier")]
        public Input<string>? EnterpriseManagerIdentifier { get; set; }

        /// <summary>
        /// (Updatable) Source of the Exadata system.
        /// </summary>
        [Input("entitySource")]
        public Input<string>? EntitySource { get; set; }

        /// <summary>
        /// The user-friendly name for the Exadata system. The name does not have to be unique.
        /// </summary>
        [Input("exadataDisplayName")]
        public Input<string>? ExadataDisplayName { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata Infrastructure.
        /// </summary>
        [Input("exadataInfraId")]
        public Input<string>? ExadataInfraId { get; set; }

        [Input("exadataInfraResourceType")]
        public Input<string>? ExadataInfraResourceType { get; set; }

        /// <summary>
        /// The Exadata system name. If the Exadata systems managed by Enterprise Manager, the name is unique amongst the Exadata systems managed by the same Enterprise Manager.
        /// </summary>
        [Input("exadataName")]
        public Input<string>? ExadataName { get; set; }

        /// <summary>
        /// Exadata rack type.
        /// </summary>
        [Input("exadataRackType")]
        public Input<string>? ExadataRackType { get; set; }

        [Input("exadataShape")]
        public Input<string>? ExadataShape { get; set; }

        /// <summary>
        /// Operations Insights internal representation of the the Exadata system type.
        /// </summary>
        [Input("exadataType")]
        public Input<string>? ExadataType { get; set; }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) Set to true to enable automatic enablement and disablement of related targets from Enterprise Manager. New resources (e.g. Database Insights) will be placed in the same compartment as the related Exadata Insight.
        /// </summary>
        [Input("isAutoSyncEnabled")]
        public Input<bool>? IsAutoSyncEnabled { get; set; }

        /// <summary>
        /// true if virtualization is used in the Exadata system
        /// </summary>
        [Input("isVirtualizedExadata")]
        public Input<bool>? IsVirtualizedExadata { get; set; }

        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        [Input("lifecycleDetails")]
        public Input<string>? LifecycleDetails { get; set; }

        [Input("memberVmClusterDetails")]
        private InputList<Inputs.ExadataInsightMemberVmClusterDetailGetArgs>? _memberVmClusterDetails;
        public InputList<Inputs.ExadataInsightMemberVmClusterDetailGetArgs> MemberVmClusterDetails
        {
            get => _memberVmClusterDetails ?? (_memberVmClusterDetails = new InputList<Inputs.ExadataInsightMemberVmClusterDetailGetArgs>());
            set => _memberVmClusterDetails = value;
        }

        /// <summary>
        /// The current state of the Exadata insight.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// (Updatable) Status of the resource. Example: "ENABLED", "DISABLED". Resource can be either enabled or disabled by updating the value of status field to either "ENABLED" or "DISABLED"
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("systemTags")]
        private InputMap<string>? _systemTags;

        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public InputMap<string> SystemTags
        {
            get => _systemTags ?? (_systemTags = new InputMap<string>());
            set => _systemTags = value;
        }

        /// <summary>
        /// The time the the Exadata insight was first enabled. An RFC3339 formatted datetime string
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The time the Exadata insight was updated. An RFC3339 formatted datetime string
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        public ExadataInsightState()
        {
        }
        public static new ExadataInsightState Empty => new ExadataInsightState();
    }
}
