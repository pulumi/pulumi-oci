// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Opsi
{
    public static class GetDatabaseInsight
    {
        /// <summary>
        /// This data source provides details about a specific Database Insight resource in Oracle Cloud Infrastructure Opsi service.
        /// 
        /// Gets details of a database insight.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDatabaseInsight = Oci.Opsi.GetDatabaseInsight.Invoke(new()
        ///     {
        ///         DatabaseInsightId = oci_opsi_database_insight.Test_database_insight.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetDatabaseInsightResult> InvokeAsync(GetDatabaseInsightArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDatabaseInsightResult>("oci:Opsi/getDatabaseInsight:getDatabaseInsight", args ?? new GetDatabaseInsightArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Database Insight resource in Oracle Cloud Infrastructure Opsi service.
        /// 
        /// Gets details of a database insight.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDatabaseInsight = Oci.Opsi.GetDatabaseInsight.Invoke(new()
        ///     {
        ///         DatabaseInsightId = oci_opsi_database_insight.Test_database_insight.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDatabaseInsightResult> Invoke(GetDatabaseInsightInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDatabaseInsightResult>("oci:Opsi/getDatabaseInsight:getDatabaseInsight", args ?? new GetDatabaseInsightInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDatabaseInsightArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique database insight identifier
        /// </summary>
        [Input("databaseInsightId", required: true)]
        public string DatabaseInsightId { get; set; } = null!;

        public GetDatabaseInsightArgs()
        {
        }
        public static new GetDatabaseInsightArgs Empty => new GetDatabaseInsightArgs();
    }

    public sealed class GetDatabaseInsightInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique database insight identifier
        /// </summary>
        [Input("databaseInsightId", required: true)]
        public Input<string> DatabaseInsightId { get; set; } = null!;

        public GetDatabaseInsightInvokeArgs()
        {
        }
        public static new GetDatabaseInsightInvokeArgs Empty => new GetDatabaseInsightInvokeArgs();
    }


    [OutputType]
    public sealed class GetDatabaseInsightResult
    {
        /// <summary>
        /// Compartment identifier of the database
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// User credential details to connect to the database. This is supplied via the External Database Service.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDatabaseInsightConnectionCredentialDetailResult> ConnectionCredentialDetails;
        /// <summary>
        /// Connection details to connect to the database. HostName, protocol, and port should be specified.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDatabaseInsightConnectionDetailResult> ConnectionDetails;
        /// <summary>
        /// User credential details to connect to the database.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDatabaseInsightCredentialDetailResult> CredentialDetails;
        /// <summary>
        /// A message describing the status of the database connection of this resource. For example, it can be used to provide actionable information about the permission and content validity of the database connection.
        /// </summary>
        public readonly string DatabaseConnectionStatusDetails;
        /// <summary>
        /// Display name of database
        /// </summary>
        public readonly string DatabaseDisplayName;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
        /// </summary>
        public readonly string DatabaseId;
        public readonly string DatabaseInsightId;
        /// <summary>
        /// Name of database
        /// </summary>
        public readonly string DatabaseName;
        /// <summary>
        /// Oracle Cloud Infrastructure database resource type
        /// </summary>
        public readonly string DatabaseResourceType;
        /// <summary>
        /// Operations Insights internal representation of the database type.
        /// </summary>
        public readonly string DatabaseType;
        /// <summary>
        /// The version of the database.
        /// </summary>
        public readonly string DatabaseVersion;
        public readonly string DbmPrivateEndpointId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        public readonly string DeploymentType;
        /// <summary>
        /// OPSI Enterprise Manager Bridge OCID
        /// </summary>
        public readonly string EnterpriseManagerBridgeId;
        /// <summary>
        /// Enterprise Manager Entity Display Name
        /// </summary>
        public readonly string EnterpriseManagerEntityDisplayName;
        /// <summary>
        /// Enterprise Manager Entity Unique Identifier
        /// </summary>
        public readonly string EnterpriseManagerEntityIdentifier;
        /// <summary>
        /// Enterprise Manager Entity Name
        /// </summary>
        public readonly string EnterpriseManagerEntityName;
        /// <summary>
        /// Enterprise Manager Entity Type
        /// </summary>
        public readonly string EnterpriseManagerEntityType;
        /// <summary>
        /// Enterprise Manager Unqiue Identifier
        /// </summary>
        public readonly string EnterpriseManagerIdentifier;
        /// <summary>
        /// Source of the database entity.
        /// </summary>
        public readonly string EntitySource;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata insight.
        /// </summary>
        public readonly string ExadataInsightId;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// Database insight identifier
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the OPSI private endpoint
        /// </summary>
        public readonly string OpsiPrivateEndpointId;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM Cluster or DB System ID, depending on which configuration the resource belongs to.
        /// </summary>
        public readonly string ParentId;
        /// <summary>
        /// Processor count. This is the OCPU count for Autonomous Database and CPU core count for other database types.
        /// </summary>
        public readonly int ProcessorCount;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata Infrastructure.
        /// </summary>
        public readonly string RootId;
        /// <summary>
        /// Database service name used for connection requests.
        /// </summary>
        public readonly string ServiceName;
        /// <summary>
        /// The current state of the database.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Indicates the status of a database insight in Operations Insights
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> SystemTags;
        /// <summary>
        /// The time the the database insight was first enabled. An RFC3339 formatted datetime string
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time the database insight was updated. An RFC3339 formatted datetime string
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetDatabaseInsightResult(
            string compartmentId,

            ImmutableArray<Outputs.GetDatabaseInsightConnectionCredentialDetailResult> connectionCredentialDetails,

            ImmutableArray<Outputs.GetDatabaseInsightConnectionDetailResult> connectionDetails,

            ImmutableArray<Outputs.GetDatabaseInsightCredentialDetailResult> credentialDetails,

            string databaseConnectionStatusDetails,

            string databaseDisplayName,

            string databaseId,

            string databaseInsightId,

            string databaseName,

            string databaseResourceType,

            string databaseType,

            string databaseVersion,

            string dbmPrivateEndpointId,

            ImmutableDictionary<string, object> definedTags,

            string deploymentType,

            string enterpriseManagerBridgeId,

            string enterpriseManagerEntityDisplayName,

            string enterpriseManagerEntityIdentifier,

            string enterpriseManagerEntityName,

            string enterpriseManagerEntityType,

            string enterpriseManagerIdentifier,

            string entitySource,

            string exadataInsightId,

            ImmutableDictionary<string, object> freeformTags,

            string id,

            string lifecycleDetails,

            string opsiPrivateEndpointId,

            string parentId,

            int processorCount,

            string rootId,

            string serviceName,

            string state,

            string status,

            ImmutableDictionary<string, object> systemTags,

            string timeCreated,

            string timeUpdated)
        {
            CompartmentId = compartmentId;
            ConnectionCredentialDetails = connectionCredentialDetails;
            ConnectionDetails = connectionDetails;
            CredentialDetails = credentialDetails;
            DatabaseConnectionStatusDetails = databaseConnectionStatusDetails;
            DatabaseDisplayName = databaseDisplayName;
            DatabaseId = databaseId;
            DatabaseInsightId = databaseInsightId;
            DatabaseName = databaseName;
            DatabaseResourceType = databaseResourceType;
            DatabaseType = databaseType;
            DatabaseVersion = databaseVersion;
            DbmPrivateEndpointId = dbmPrivateEndpointId;
            DefinedTags = definedTags;
            DeploymentType = deploymentType;
            EnterpriseManagerBridgeId = enterpriseManagerBridgeId;
            EnterpriseManagerEntityDisplayName = enterpriseManagerEntityDisplayName;
            EnterpriseManagerEntityIdentifier = enterpriseManagerEntityIdentifier;
            EnterpriseManagerEntityName = enterpriseManagerEntityName;
            EnterpriseManagerEntityType = enterpriseManagerEntityType;
            EnterpriseManagerIdentifier = enterpriseManagerIdentifier;
            EntitySource = entitySource;
            ExadataInsightId = exadataInsightId;
            FreeformTags = freeformTags;
            Id = id;
            LifecycleDetails = lifecycleDetails;
            OpsiPrivateEndpointId = opsiPrivateEndpointId;
            ParentId = parentId;
            ProcessorCount = processorCount;
            RootId = rootId;
            ServiceName = serviceName;
            State = state;
            Status = status;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
