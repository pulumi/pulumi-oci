// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Opsi
{
    public static class GetDatabaseInsights
    {
        /// <summary>
        /// This data source provides the list of Database Insights in Oracle Cloud Infrastructure Opsi service.
        /// 
        /// Gets a list of database insights based on the query parameters specified. Either compartmentId or id query parameter must be specified.
        /// When both compartmentId and compartmentIdInSubtree are specified, a list of database insights in that compartment and in all sub-compartments will be returned.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDatabaseInsights = Oci.Opsi.GetDatabaseInsights.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         CompartmentIdInSubtree = databaseInsightCompartmentIdInSubtree,
        ///         DatabaseIds = testDatabase.Id,
        ///         DatabaseTypes = databaseInsightDatabaseType,
        ///         EnterpriseManagerBridgeId = testEnterpriseManagerBridge.Id,
        ///         ExadataInsightId = testExadataInsight.Id,
        ///         Fields = databaseInsightFields,
        ///         Id = databaseInsightId,
        ///         OpsiPrivateEndpointId = testPrivateEndpoint.Id,
        ///         States = databaseInsightState,
        ///         Statuses = databaseInsightStatus,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetDatabaseInsightsResult> InvokeAsync(GetDatabaseInsightsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDatabaseInsightsResult>("oci:Opsi/getDatabaseInsights:getDatabaseInsights", args ?? new GetDatabaseInsightsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Database Insights in Oracle Cloud Infrastructure Opsi service.
        /// 
        /// Gets a list of database insights based on the query parameters specified. Either compartmentId or id query parameter must be specified.
        /// When both compartmentId and compartmentIdInSubtree are specified, a list of database insights in that compartment and in all sub-compartments will be returned.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDatabaseInsights = Oci.Opsi.GetDatabaseInsights.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         CompartmentIdInSubtree = databaseInsightCompartmentIdInSubtree,
        ///         DatabaseIds = testDatabase.Id,
        ///         DatabaseTypes = databaseInsightDatabaseType,
        ///         EnterpriseManagerBridgeId = testEnterpriseManagerBridge.Id,
        ///         ExadataInsightId = testExadataInsight.Id,
        ///         Fields = databaseInsightFields,
        ///         Id = databaseInsightId,
        ///         OpsiPrivateEndpointId = testPrivateEndpoint.Id,
        ///         States = databaseInsightState,
        ///         Statuses = databaseInsightStatus,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDatabaseInsightsResult> Invoke(GetDatabaseInsightsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDatabaseInsightsResult>("oci:Opsi/getDatabaseInsights:getDatabaseInsights", args ?? new GetDatabaseInsightsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDatabaseInsightsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        /// <summary>
        /// A flag to search all resources within a given compartment and all sub-compartments.
        /// </summary>
        [Input("compartmentIdInSubtree")]
        public bool? CompartmentIdInSubtree { get; set; }

        [Input("databaseIds")]
        private List<string>? _databaseIds;

        /// <summary>
        /// Optional list of database [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the associated DBaaS entity.
        /// </summary>
        public List<string> DatabaseIds
        {
            get => _databaseIds ?? (_databaseIds = new List<string>());
            set => _databaseIds = value;
        }

        [Input("databaseTypes")]
        private List<string>? _databaseTypes;

        /// <summary>
        /// Filter by one or more database type. Possible values are ADW-S, ATP-S, ADW-D, ATP-D, EXTERNAL-PDB, EXTERNAL-NONCDB.
        /// </summary>
        public List<string> DatabaseTypes
        {
            get => _databaseTypes ?? (_databaseTypes = new List<string>());
            set => _databaseTypes = value;
        }

        /// <summary>
        /// Unique Enterprise Manager bridge identifier
        /// </summary>
        [Input("enterpriseManagerBridgeId")]
        public string? EnterpriseManagerBridgeId { get; set; }

        /// <summary>
        /// [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of exadata insight resource.
        /// </summary>
        [Input("exadataInsightId")]
        public string? ExadataInsightId { get; set; }

        [Input("fields")]
        private List<string>? _fields;

        /// <summary>
        /// Specifies the fields to return in a database summary response. By default all fields are returned if omitted.
        /// </summary>
        public List<string> Fields
        {
            get => _fields ?? (_fields = new List<string>());
            set => _fields = value;
        }

        [Input("filters")]
        private List<Inputs.GetDatabaseInsightsFilterArgs>? _filters;
        public List<Inputs.GetDatabaseInsightsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetDatabaseInsightsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Optional list of database insight resource [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// Unique Operations Insights PrivateEndpoint identifier
        /// </summary>
        [Input("opsiPrivateEndpointId")]
        public string? OpsiPrivateEndpointId { get; set; }

        [Input("states")]
        private List<string>? _states;

        /// <summary>
        /// Lifecycle states
        /// </summary>
        public List<string> States
        {
            get => _states ?? (_states = new List<string>());
            set => _states = value;
        }

        [Input("statuses")]
        private List<string>? _statuses;

        /// <summary>
        /// Resource Status
        /// </summary>
        public List<string> Statuses
        {
            get => _statuses ?? (_statuses = new List<string>());
            set => _statuses = value;
        }

        public GetDatabaseInsightsArgs()
        {
        }
        public static new GetDatabaseInsightsArgs Empty => new GetDatabaseInsightsArgs();
    }

    public sealed class GetDatabaseInsightsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// A flag to search all resources within a given compartment and all sub-compartments.
        /// </summary>
        [Input("compartmentIdInSubtree")]
        public Input<bool>? CompartmentIdInSubtree { get; set; }

        [Input("databaseIds")]
        private InputList<string>? _databaseIds;

        /// <summary>
        /// Optional list of database [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the associated DBaaS entity.
        /// </summary>
        public InputList<string> DatabaseIds
        {
            get => _databaseIds ?? (_databaseIds = new InputList<string>());
            set => _databaseIds = value;
        }

        [Input("databaseTypes")]
        private InputList<string>? _databaseTypes;

        /// <summary>
        /// Filter by one or more database type. Possible values are ADW-S, ATP-S, ADW-D, ATP-D, EXTERNAL-PDB, EXTERNAL-NONCDB.
        /// </summary>
        public InputList<string> DatabaseTypes
        {
            get => _databaseTypes ?? (_databaseTypes = new InputList<string>());
            set => _databaseTypes = value;
        }

        /// <summary>
        /// Unique Enterprise Manager bridge identifier
        /// </summary>
        [Input("enterpriseManagerBridgeId")]
        public Input<string>? EnterpriseManagerBridgeId { get; set; }

        /// <summary>
        /// [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of exadata insight resource.
        /// </summary>
        [Input("exadataInsightId")]
        public Input<string>? ExadataInsightId { get; set; }

        [Input("fields")]
        private InputList<string>? _fields;

        /// <summary>
        /// Specifies the fields to return in a database summary response. By default all fields are returned if omitted.
        /// </summary>
        public InputList<string> Fields
        {
            get => _fields ?? (_fields = new InputList<string>());
            set => _fields = value;
        }

        [Input("filters")]
        private InputList<Inputs.GetDatabaseInsightsFilterInputArgs>? _filters;
        public InputList<Inputs.GetDatabaseInsightsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetDatabaseInsightsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Optional list of database insight resource [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Unique Operations Insights PrivateEndpoint identifier
        /// </summary>
        [Input("opsiPrivateEndpointId")]
        public Input<string>? OpsiPrivateEndpointId { get; set; }

        [Input("states")]
        private InputList<string>? _states;

        /// <summary>
        /// Lifecycle states
        /// </summary>
        public InputList<string> States
        {
            get => _states ?? (_states = new InputList<string>());
            set => _states = value;
        }

        [Input("statuses")]
        private InputList<string>? _statuses;

        /// <summary>
        /// Resource Status
        /// </summary>
        public InputList<string> Statuses
        {
            get => _statuses ?? (_statuses = new InputList<string>());
            set => _statuses = value;
        }

        public GetDatabaseInsightsInvokeArgs()
        {
        }
        public static new GetDatabaseInsightsInvokeArgs Empty => new GetDatabaseInsightsInvokeArgs();
    }


    [OutputType]
    public sealed class GetDatabaseInsightsResult
    {
        /// <summary>
        /// Compartment identifier of the database
        /// </summary>
        public readonly string? CompartmentId;
        public readonly bool? CompartmentIdInSubtree;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
        /// </summary>
        public readonly ImmutableArray<string> DatabaseIds;
        /// <summary>
        /// The list of database_insights_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDatabaseInsightsDatabaseInsightsCollectionResult> DatabaseInsightsCollections;
        /// <summary>
        /// Operations Insights internal representation of the database type.
        /// </summary>
        public readonly ImmutableArray<string> DatabaseTypes;
        /// <summary>
        /// OPSI Enterprise Manager Bridge OCID
        /// </summary>
        public readonly string? EnterpriseManagerBridgeId;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata insight.
        /// </summary>
        public readonly string? ExadataInsightId;
        public readonly ImmutableArray<string> Fields;
        public readonly ImmutableArray<Outputs.GetDatabaseInsightsFilterResult> Filters;
        /// <summary>
        /// Database insight identifier
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the OPSI private endpoint
        /// </summary>
        public readonly string? OpsiPrivateEndpointId;
        /// <summary>
        /// The current state of the database.
        /// </summary>
        public readonly ImmutableArray<string> States;
        /// <summary>
        /// Indicates the status of a database insight in Operations Insights
        /// </summary>
        public readonly ImmutableArray<string> Statuses;

        [OutputConstructor]
        private GetDatabaseInsightsResult(
            string? compartmentId,

            bool? compartmentIdInSubtree,

            ImmutableArray<string> databaseIds,

            ImmutableArray<Outputs.GetDatabaseInsightsDatabaseInsightsCollectionResult> databaseInsightsCollections,

            ImmutableArray<string> databaseTypes,

            string? enterpriseManagerBridgeId,

            string? exadataInsightId,

            ImmutableArray<string> fields,

            ImmutableArray<Outputs.GetDatabaseInsightsFilterResult> filters,

            string? id,

            string? opsiPrivateEndpointId,

            ImmutableArray<string> states,

            ImmutableArray<string> statuses)
        {
            CompartmentId = compartmentId;
            CompartmentIdInSubtree = compartmentIdInSubtree;
            DatabaseIds = databaseIds;
            DatabaseInsightsCollections = databaseInsightsCollections;
            DatabaseTypes = databaseTypes;
            EnterpriseManagerBridgeId = enterpriseManagerBridgeId;
            ExadataInsightId = exadataInsightId;
            Fields = fields;
            Filters = filters;
            Id = id;
            OpsiPrivateEndpointId = opsiPrivateEndpointId;
            States = states;
            Statuses = statuses;
        }
    }
}
