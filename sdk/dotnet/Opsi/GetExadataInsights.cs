// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Opsi
{
    public static class GetExadataInsights
    {
        /// <summary>
        /// This data source provides the list of Exadata Insights in Oracle Cloud Infrastructure Opsi service.
        /// 
        /// Gets a list of Exadata insights based on the query parameters specified. Either compartmentId or id query parameter must be specified.
        /// When both compartmentId and compartmentIdInSubtree are specified, a list of Exadata insights in that compartment and in all sub-compartments will be returned.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testExadataInsights = Oci.Opsi.GetExadataInsights.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         CompartmentIdInSubtree = @var.Exadata_insight_compartment_id_in_subtree,
        ///         EnterpriseManagerBridgeId = oci_opsi_enterprise_manager_bridge.Test_enterprise_manager_bridge.Id,
        ///         ExadataTypes = @var.Exadata_insight_exadata_type,
        ///         Id = @var.Exadata_insight_id,
        ///         States = @var.Exadata_insight_state,
        ///         Statuses = @var.Exadata_insight_status,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetExadataInsightsResult> InvokeAsync(GetExadataInsightsArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetExadataInsightsResult>("oci:Opsi/getExadataInsights:getExadataInsights", args ?? new GetExadataInsightsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Exadata Insights in Oracle Cloud Infrastructure Opsi service.
        /// 
        /// Gets a list of Exadata insights based on the query parameters specified. Either compartmentId or id query parameter must be specified.
        /// When both compartmentId and compartmentIdInSubtree are specified, a list of Exadata insights in that compartment and in all sub-compartments will be returned.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testExadataInsights = Oci.Opsi.GetExadataInsights.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         CompartmentIdInSubtree = @var.Exadata_insight_compartment_id_in_subtree,
        ///         EnterpriseManagerBridgeId = oci_opsi_enterprise_manager_bridge.Test_enterprise_manager_bridge.Id,
        ///         ExadataTypes = @var.Exadata_insight_exadata_type,
        ///         Id = @var.Exadata_insight_id,
        ///         States = @var.Exadata_insight_state,
        ///         Statuses = @var.Exadata_insight_status,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetExadataInsightsResult> Invoke(GetExadataInsightsInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetExadataInsightsResult>("oci:Opsi/getExadataInsights:getExadataInsights", args ?? new GetExadataInsightsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetExadataInsightsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        /// <summary>
        /// A flag to search all resources within a given compartment and all sub-compartments.
        /// </summary>
        [Input("compartmentIdInSubtree")]
        public bool? CompartmentIdInSubtree { get; set; }

        /// <summary>
        /// Unique Enterprise Manager bridge identifier
        /// </summary>
        [Input("enterpriseManagerBridgeId")]
        public string? EnterpriseManagerBridgeId { get; set; }

        [Input("exadataTypes")]
        private List<string>? _exadataTypes;

        /// <summary>
        /// Filter by one or more Exadata types. Possible value are DBMACHINE, EXACS, and EXACC.
        /// </summary>
        public List<string> ExadataTypes
        {
            get => _exadataTypes ?? (_exadataTypes = new List<string>());
            set => _exadataTypes = value;
        }

        [Input("filters")]
        private List<Inputs.GetExadataInsightsFilterArgs>? _filters;
        public List<Inputs.GetExadataInsightsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetExadataInsightsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Optional list of Exadata insight resource [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        [Input("states")]
        private List<string>? _states;

        /// <summary>
        /// Lifecycle states
        /// </summary>
        public List<string> States
        {
            get => _states ?? (_states = new List<string>());
            set => _states = value;
        }

        [Input("statuses")]
        private List<string>? _statuses;

        /// <summary>
        /// Resource Status
        /// </summary>
        public List<string> Statuses
        {
            get => _statuses ?? (_statuses = new List<string>());
            set => _statuses = value;
        }

        public GetExadataInsightsArgs()
        {
        }
        public static new GetExadataInsightsArgs Empty => new GetExadataInsightsArgs();
    }

    public sealed class GetExadataInsightsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// A flag to search all resources within a given compartment and all sub-compartments.
        /// </summary>
        [Input("compartmentIdInSubtree")]
        public Input<bool>? CompartmentIdInSubtree { get; set; }

        /// <summary>
        /// Unique Enterprise Manager bridge identifier
        /// </summary>
        [Input("enterpriseManagerBridgeId")]
        public Input<string>? EnterpriseManagerBridgeId { get; set; }

        [Input("exadataTypes")]
        private InputList<string>? _exadataTypes;

        /// <summary>
        /// Filter by one or more Exadata types. Possible value are DBMACHINE, EXACS, and EXACC.
        /// </summary>
        public InputList<string> ExadataTypes
        {
            get => _exadataTypes ?? (_exadataTypes = new InputList<string>());
            set => _exadataTypes = value;
        }

        [Input("filters")]
        private InputList<Inputs.GetExadataInsightsFilterInputArgs>? _filters;
        public InputList<Inputs.GetExadataInsightsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetExadataInsightsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Optional list of Exadata insight resource [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("states")]
        private InputList<string>? _states;

        /// <summary>
        /// Lifecycle states
        /// </summary>
        public InputList<string> States
        {
            get => _states ?? (_states = new InputList<string>());
            set => _states = value;
        }

        [Input("statuses")]
        private InputList<string>? _statuses;

        /// <summary>
        /// Resource Status
        /// </summary>
        public InputList<string> Statuses
        {
            get => _statuses ?? (_statuses = new InputList<string>());
            set => _statuses = value;
        }

        public GetExadataInsightsInvokeArgs()
        {
        }
        public static new GetExadataInsightsInvokeArgs Empty => new GetExadataInsightsInvokeArgs();
    }


    [OutputType]
    public sealed class GetExadataInsightsResult
    {
        /// <summary>
        /// Compartment identifier of the Exadata insight resource
        /// </summary>
        public readonly string? CompartmentId;
        public readonly bool? CompartmentIdInSubtree;
        /// <summary>
        /// OPSI Enterprise Manager Bridge OCID
        /// </summary>
        public readonly string? EnterpriseManagerBridgeId;
        /// <summary>
        /// The list of exadata_insight_summary_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetExadataInsightsExadataInsightSummaryCollectionResult> ExadataInsightSummaryCollections;
        /// <summary>
        /// Operations Insights internal representation of the the Exadata system type.
        /// </summary>
        public readonly ImmutableArray<string> ExadataTypes;
        public readonly ImmutableArray<Outputs.GetExadataInsightsFilterResult> Filters;
        /// <summary>
        /// Exadata insight identifier
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The current state of the Exadata insight.
        /// </summary>
        public readonly ImmutableArray<string> States;
        /// <summary>
        /// Indicates the status of an Exadata insight in Operations Insights
        /// </summary>
        public readonly ImmutableArray<string> Statuses;

        [OutputConstructor]
        private GetExadataInsightsResult(
            string? compartmentId,

            bool? compartmentIdInSubtree,

            string? enterpriseManagerBridgeId,

            ImmutableArray<Outputs.GetExadataInsightsExadataInsightSummaryCollectionResult> exadataInsightSummaryCollections,

            ImmutableArray<string> exadataTypes,

            ImmutableArray<Outputs.GetExadataInsightsFilterResult> filters,

            string? id,

            ImmutableArray<string> states,

            ImmutableArray<string> statuses)
        {
            CompartmentId = compartmentId;
            CompartmentIdInSubtree = compartmentIdInSubtree;
            EnterpriseManagerBridgeId = enterpriseManagerBridgeId;
            ExadataInsightSummaryCollections = exadataInsightSummaryCollections;
            ExadataTypes = exadataTypes;
            Filters = filters;
            Id = id;
            States = states;
            Statuses = statuses;
        }
    }
}
