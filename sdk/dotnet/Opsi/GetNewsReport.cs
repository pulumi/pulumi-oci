// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Opsi
{
    public static class GetNewsReport
    {
        /// <summary>
        /// This data source provides details about a specific News Report resource in Oracle Cloud Infrastructure Opsi service.
        /// 
        /// Gets details of a news report.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testNewsReport = Oci.Opsi.GetNewsReport.Invoke(new()
        ///     {
        ///         NewsReportId = testNewsReportOciOpsiNewsReport.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetNewsReportResult> InvokeAsync(GetNewsReportArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNewsReportResult>("oci:Opsi/getNewsReport:getNewsReport", args ?? new GetNewsReportArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific News Report resource in Oracle Cloud Infrastructure Opsi service.
        /// 
        /// Gets details of a news report.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testNewsReport = Oci.Opsi.GetNewsReport.Invoke(new()
        ///     {
        ///         NewsReportId = testNewsReportOciOpsiNewsReport.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNewsReportResult> Invoke(GetNewsReportInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNewsReportResult>("oci:Opsi/getNewsReport:getNewsReport", args ?? new GetNewsReportInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNewsReportArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique news report identifier.
        /// </summary>
        [Input("newsReportId", required: true)]
        public string NewsReportId { get; set; } = null!;

        public GetNewsReportArgs()
        {
        }
        public static new GetNewsReportArgs Empty => new GetNewsReportArgs();
    }

    public sealed class GetNewsReportInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique news report identifier.
        /// </summary>
        [Input("newsReportId", required: true)]
        public Input<string> NewsReportId { get; set; } = null!;

        public GetNewsReportInvokeArgs()
        {
        }
        public static new GetNewsReportInvokeArgs Empty => new GetNewsReportInvokeArgs();
    }


    [OutputType]
    public sealed class GetNewsReportResult
    {
        /// <summary>
        /// A flag to consider the resources within a given compartment and all sub-compartments.
        /// </summary>
        public readonly bool AreChildCompartmentsIncluded;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Content types that the news report can handle.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNewsReportContentTypeResult> ContentTypes;
        /// <summary>
        /// Day of the week in which the news report will be sent if the frequency is set to WEEKLY.
        /// </summary>
        public readonly string DayOfWeek;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// The description of the news report.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the news report resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// Language of the news report.
        /// </summary>
        public readonly string Locale;
        /// <summary>
        /// The news report name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// News report frequency.
        /// </summary>
        public readonly string NewsFrequency;
        public readonly string NewsReportId;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the ONS topic.
        /// </summary>
        public readonly string OnsTopicId;
        /// <summary>
        /// The current state of the news report.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Indicates the status of a news report in Ops Insights.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// The time the the news report was first enabled. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time the news report was updated. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetNewsReportResult(
            bool areChildCompartmentsIncluded,

            string compartmentId,

            ImmutableArray<Outputs.GetNewsReportContentTypeResult> contentTypes,

            string dayOfWeek,

            ImmutableDictionary<string, string> definedTags,

            string description,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            string lifecycleDetails,

            string locale,

            string name,

            string newsFrequency,

            string newsReportId,

            string onsTopicId,

            string state,

            string status,

            ImmutableDictionary<string, string> systemTags,

            string timeCreated,

            string timeUpdated)
        {
            AreChildCompartmentsIncluded = areChildCompartmentsIncluded;
            CompartmentId = compartmentId;
            ContentTypes = contentTypes;
            DayOfWeek = dayOfWeek;
            DefinedTags = definedTags;
            Description = description;
            FreeformTags = freeformTags;
            Id = id;
            LifecycleDetails = lifecycleDetails;
            Locale = locale;
            Name = name;
            NewsFrequency = newsFrequency;
            NewsReportId = newsReportId;
            OnsTopicId = onsTopicId;
            State = state;
            Status = status;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
