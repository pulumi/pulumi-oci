// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Opsi.Inputs
{

    public sealed class ExadataInsightMemberVmClusterDetailMemberAutonomousDetailConnectionCredentialDetailsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Credential source name that had been added in Management Agent wallet. This value is only required when Credential set by CREDENTIALS_BY_SOURCE and is optional properties for ther others.
        /// </summary>
        [Input("credentialSourceName")]
        public Input<string>? CredentialSourceName { get; set; }

        /// <summary>
        /// CREDENTIALS_BY_SOURCE is supplied via the External Database Service. CREDENTIALS_BY_VAULT is supplied by secret service to connection PE_COMANAGED_DATABASE and ADB as well. CREDENTIALS_BY_IAM is used db-token to connect only for Autonomous Database.
        /// </summary>
        [Input("credentialType", required: true)]
        public Input<string> CredentialType { get; set; } = null!;

        /// <summary>
        /// The credential [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) stored in management agent.
        /// </summary>
        [Input("namedCredentialId")]
        public Input<string>? NamedCredentialId { get; set; }

        [Input("passwordSecretId")]
        private Input<string>? _passwordSecretId;

        /// <summary>
        /// The secret [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) mapping to the database credentials.
        /// </summary>
        public Input<string>? PasswordSecretId
        {
            get => _passwordSecretId;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _passwordSecretId = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// database user role.
        /// </summary>
        [Input("role")]
        public Input<string>? Role { get; set; }

        /// <summary>
        /// database user name.
        /// </summary>
        [Input("userName")]
        public Input<string>? UserName { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the database keystore contents are stored. This is used for TCPS support in BM/VM/ExaCS cases.
        /// </summary>
        [Input("walletSecretId")]
        public Input<string>? WalletSecretId { get; set; }

        public ExadataInsightMemberVmClusterDetailMemberAutonomousDetailConnectionCredentialDetailsArgs()
        {
        }
        public static new ExadataInsightMemberVmClusterDetailMemberAutonomousDetailConnectionCredentialDetailsArgs Empty => new ExadataInsightMemberVmClusterDetailMemberAutonomousDetailConnectionCredentialDetailsArgs();
    }
}
