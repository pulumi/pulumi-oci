// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Opsi.Outputs
{

    [OutputType]
    public sealed class DatabaseInsightConnectionCredentialDetails
    {
        /// <summary>
        /// Credential source name that had been added in Management Agent wallet. This value is only required when Credential set by CREDENTIALS_BY_SOURCE and is optional properties for ther others.
        /// </summary>
        public readonly string? CredentialSourceName;
        /// <summary>
        /// Credential type.
        /// </summary>
        public readonly string CredentialType;
        /// <summary>
        /// The credential [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) stored in management agent.
        /// </summary>
        public readonly string? NamedCredentialId;
        /// <summary>
        /// The secret [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) mapping to the database credentials.
        /// </summary>
        public readonly string? PasswordSecretId;
        /// <summary>
        /// database user role.
        /// </summary>
        public readonly string? Role;
        /// <summary>
        /// database user name.
        /// </summary>
        public readonly string? UserName;

        [OutputConstructor]
        private DatabaseInsightConnectionCredentialDetails(
            string? credentialSourceName,

            string credentialType,

            string? namedCredentialId,

            string? passwordSecretId,

            string? role,

            string? userName)
        {
            CredentialSourceName = credentialSourceName;
            CredentialType = credentialType;
            NamedCredentialId = namedCredentialId;
            PasswordSecretId = passwordSecretId;
            Role = role;
            UserName = userName;
        }
    }
}
