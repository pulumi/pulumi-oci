// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Opsi.Outputs
{

    [OutputType]
    public sealed class GetDatabaseInsightConnectionCredentialDetailResult
    {
        /// <summary>
        /// Credential source name that had been added in Management Agent wallet. This is supplied in the External Database Service.
        /// </summary>
        public readonly string CredentialSourceName;
        /// <summary>
        /// CREDENTIALS_BY_SOURCE is supplied via the External Database Service. CREDENTIALS_BY_VAULT is supplied by secret service to connection PE_COMANAGED_DATABASE and ADB as well. CREDENTIALS_BY_IAM is used db-token to connect only for Autonomous Database. CREDENTIALS_BY_NAMED_CREDS is supplied by Management Agent service to connect for Macs Managed Cloud Database or Autonomous Database.
        /// </summary>
        public readonly string CredentialType;
        /// <summary>
        /// The credential [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) stored in management agent.
        /// </summary>
        public readonly string NamedCredentialId;
        /// <summary>
        /// The secret [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) mapping to the database credentials.
        /// </summary>
        public readonly string PasswordSecretId;
        /// <summary>
        /// database user role.
        /// </summary>
        public readonly string Role;
        /// <summary>
        /// database user name.
        /// </summary>
        public readonly string UserName;

        [OutputConstructor]
        private GetDatabaseInsightConnectionCredentialDetailResult(
            string credentialSourceName,

            string credentialType,

            string namedCredentialId,

            string passwordSecretId,

            string role,

            string userName)
        {
            CredentialSourceName = credentialSourceName;
            CredentialType = credentialType;
            NamedCredentialId = namedCredentialId;
            PasswordSecretId = passwordSecretId;
            Role = role;
            UserName = userName;
        }
    }
}
