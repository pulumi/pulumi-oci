// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Optimizer
{
    public static class GetEnrollmentStatuses
    {
        /// <summary>
        /// This data source provides the list of Enrollment Statuses in Oracle Cloud Infrastructure Optimizer service.
        /// 
        /// Lists the Cloud Advisor enrollment statuses.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testEnrollmentStatuses = Oci.Optimizer.GetEnrollmentStatuses.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         State = @var.Enrollment_status_state,
        ///         Status = @var.Enrollment_status_status,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetEnrollmentStatusesResult> InvokeAsync(GetEnrollmentStatusesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEnrollmentStatusesResult>("oci:Optimizer/getEnrollmentStatuses:getEnrollmentStatuses", args ?? new GetEnrollmentStatusesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Enrollment Statuses in Oracle Cloud Infrastructure Optimizer service.
        /// 
        /// Lists the Cloud Advisor enrollment statuses.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testEnrollmentStatuses = Oci.Optimizer.GetEnrollmentStatuses.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         State = @var.Enrollment_status_state,
        ///         Status = @var.Enrollment_status_status,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetEnrollmentStatusesResult> Invoke(GetEnrollmentStatusesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEnrollmentStatusesResult>("oci:Optimizer/getEnrollmentStatuses:getEnrollmentStatuses", args ?? new GetEnrollmentStatusesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEnrollmentStatusesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetEnrollmentStatusesFilterArgs>? _filters;
        public List<Inputs.GetEnrollmentStatusesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetEnrollmentStatusesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter that returns results that match the lifecycle state specified.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        /// <summary>
        /// A filter that returns results that match the Cloud Advisor enrollment status specified.
        /// </summary>
        [Input("status")]
        public string? Status { get; set; }

        public GetEnrollmentStatusesArgs()
        {
        }
        public static new GetEnrollmentStatusesArgs Empty => new GetEnrollmentStatusesArgs();
    }

    public sealed class GetEnrollmentStatusesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetEnrollmentStatusesFilterInputArgs>? _filters;
        public InputList<Inputs.GetEnrollmentStatusesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetEnrollmentStatusesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter that returns results that match the lifecycle state specified.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// A filter that returns results that match the Cloud Advisor enrollment status specified.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public GetEnrollmentStatusesInvokeArgs()
        {
        }
        public static new GetEnrollmentStatusesInvokeArgs Empty => new GetEnrollmentStatusesInvokeArgs();
    }


    [OutputType]
    public sealed class GetEnrollmentStatusesResult
    {
        /// <summary>
        /// The OCID of the compartment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The list of enrollment_status_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetEnrollmentStatusesEnrollmentStatusCollectionResult> EnrollmentStatusCollections;
        public readonly ImmutableArray<Outputs.GetEnrollmentStatusesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The enrollment status' current state.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// The current Cloud Advisor enrollment status.
        /// </summary>
        public readonly string? Status;

        [OutputConstructor]
        private GetEnrollmentStatusesResult(
            string compartmentId,

            ImmutableArray<Outputs.GetEnrollmentStatusesEnrollmentStatusCollectionResult> enrollmentStatusCollections,

            ImmutableArray<Outputs.GetEnrollmentStatusesFilterResult> filters,

            string id,

            string? state,

            string? status)
        {
            CompartmentId = compartmentId;
            EnrollmentStatusCollections = enrollmentStatusCollections;
            Filters = filters;
            Id = id;
            State = state;
            Status = status;
        }
    }
}
