// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Optimizer
{
    public static class GetHistories
    {
        /// <summary>
        /// This data source provides the list of Histories in Oracle Cloud Infrastructure Optimizer service.
        /// 
        /// Lists changes to the recommendations based on user activity. 
        /// For example, lists when recommendations have been implemented, dismissed, postponed, or reactivated.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testHistories = Oci.Optimizer.GetHistories.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         CompartmentIdInSubtree = @var.History_compartment_id_in_subtree,
        ///         IncludeResourceMetadata = @var.History_include_resource_metadata,
        ///         Name = @var.History_name,
        ///         RecommendationId = oci_optimizer_recommendation.Test_recommendation.Id,
        ///         RecommendationName = oci_optimizer_recommendation.Test_recommendation.Name,
        ///         ResourceType = @var.History_resource_type,
        ///         State = @var.History_state,
        ///         Status = @var.History_status,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetHistoriesResult> InvokeAsync(GetHistoriesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetHistoriesResult>("oci:Optimizer/getHistories:getHistories", args ?? new GetHistoriesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Histories in Oracle Cloud Infrastructure Optimizer service.
        /// 
        /// Lists changes to the recommendations based on user activity. 
        /// For example, lists when recommendations have been implemented, dismissed, postponed, or reactivated.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testHistories = Oci.Optimizer.GetHistories.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         CompartmentIdInSubtree = @var.History_compartment_id_in_subtree,
        ///         IncludeResourceMetadata = @var.History_include_resource_metadata,
        ///         Name = @var.History_name,
        ///         RecommendationId = oci_optimizer_recommendation.Test_recommendation.Id,
        ///         RecommendationName = oci_optimizer_recommendation.Test_recommendation.Name,
        ///         ResourceType = @var.History_resource_type,
        ///         State = @var.History_state,
        ///         Status = @var.History_status,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetHistoriesResult> Invoke(GetHistoriesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetHistoriesResult>("oci:Optimizer/getHistories:getHistories", args ?? new GetHistoriesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetHistoriesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned depending on the the setting of `accessLevel`.
        /// 
        /// Can only be set to true when performing ListCompartments on the tenancy (root compartment).
        /// </summary>
        [Input("compartmentIdInSubtree", required: true)]
        public bool CompartmentIdInSubtree { get; set; }

        [Input("filters")]
        private List<Inputs.GetHistoriesFilterArgs>? _filters;
        public List<Inputs.GetHistoriesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetHistoriesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Supplement additional resource information in extended metadata response.
        /// </summary>
        [Input("includeResourceMetadata")]
        public bool? IncludeResourceMetadata { get; set; }

        /// <summary>
        /// Optional. A filter that returns results that match the name specified.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// The unique OCID associated with the recommendation.
        /// </summary>
        [Input("recommendationId")]
        public string? RecommendationId { get; set; }

        /// <summary>
        /// Optional. A filter that returns results that match the recommendation name specified.
        /// </summary>
        [Input("recommendationName")]
        public string? RecommendationName { get; set; }

        /// <summary>
        /// Optional. A filter that returns results that match the resource type specified.
        /// </summary>
        [Input("resourceType")]
        public string? ResourceType { get; set; }

        /// <summary>
        /// A filter that returns results that match the lifecycle state specified.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        /// <summary>
        /// A filter that returns recommendations that match the status specified.
        /// </summary>
        [Input("status")]
        public string? Status { get; set; }

        public GetHistoriesArgs()
        {
        }
        public static new GetHistoriesArgs Empty => new GetHistoriesArgs();
    }

    public sealed class GetHistoriesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned depending on the the setting of `accessLevel`.
        /// 
        /// Can only be set to true when performing ListCompartments on the tenancy (root compartment).
        /// </summary>
        [Input("compartmentIdInSubtree", required: true)]
        public Input<bool> CompartmentIdInSubtree { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetHistoriesFilterInputArgs>? _filters;
        public InputList<Inputs.GetHistoriesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetHistoriesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Supplement additional resource information in extended metadata response.
        /// </summary>
        [Input("includeResourceMetadata")]
        public Input<bool>? IncludeResourceMetadata { get; set; }

        /// <summary>
        /// Optional. A filter that returns results that match the name specified.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The unique OCID associated with the recommendation.
        /// </summary>
        [Input("recommendationId")]
        public Input<string>? RecommendationId { get; set; }

        /// <summary>
        /// Optional. A filter that returns results that match the recommendation name specified.
        /// </summary>
        [Input("recommendationName")]
        public Input<string>? RecommendationName { get; set; }

        /// <summary>
        /// Optional. A filter that returns results that match the resource type specified.
        /// </summary>
        [Input("resourceType")]
        public Input<string>? ResourceType { get; set; }

        /// <summary>
        /// A filter that returns results that match the lifecycle state specified.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// A filter that returns recommendations that match the status specified.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public GetHistoriesInvokeArgs()
        {
        }
        public static new GetHistoriesInvokeArgs Empty => new GetHistoriesInvokeArgs();
    }


    [OutputType]
    public sealed class GetHistoriesResult
    {
        /// <summary>
        /// The OCID of the compartment.
        /// </summary>
        public readonly string CompartmentId;
        public readonly bool CompartmentIdInSubtree;
        public readonly ImmutableArray<Outputs.GetHistoriesFilterResult> Filters;
        /// <summary>
        /// The list of history_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetHistoriesHistoryCollectionResult> HistoryCollections;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool? IncludeResourceMetadata;
        /// <summary>
        /// The name assigned to the resource.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The unique OCID associated with the recommendation.
        /// </summary>
        public readonly string? RecommendationId;
        /// <summary>
        /// The name assigned to the recommendation.
        /// </summary>
        public readonly string? RecommendationName;
        /// <summary>
        /// The kind of resource.
        /// </summary>
        public readonly string? ResourceType;
        /// <summary>
        /// The recommendation history's current state.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// The current status of the resource action.
        /// </summary>
        public readonly string? Status;

        [OutputConstructor]
        private GetHistoriesResult(
            string compartmentId,

            bool compartmentIdInSubtree,

            ImmutableArray<Outputs.GetHistoriesFilterResult> filters,

            ImmutableArray<Outputs.GetHistoriesHistoryCollectionResult> historyCollections,

            string id,

            bool? includeResourceMetadata,

            string? name,

            string? recommendationId,

            string? recommendationName,

            string? resourceType,

            string? state,

            string? status)
        {
            CompartmentId = compartmentId;
            CompartmentIdInSubtree = compartmentIdInSubtree;
            Filters = filters;
            HistoryCollections = historyCollections;
            Id = id;
            IncludeResourceMetadata = includeResourceMetadata;
            Name = name;
            RecommendationId = recommendationId;
            RecommendationName = recommendationName;
            ResourceType = resourceType;
            State = state;
            Status = status;
        }
    }
}
