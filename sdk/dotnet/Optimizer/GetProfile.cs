// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Optimizer
{
    public static class GetProfile
    {
        /// <summary>
        /// This data source provides details about a specific Profile resource in Oracle Cloud Infrastructure Optimizer service.
        /// 
        /// Gets the specified profile's information. Uses the profile's OCID to determine which profile to retrieve.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testProfile = Oci.Optimizer.GetProfile.Invoke(new()
        ///     {
        ///         ProfileId = testProfileOciOptimizerProfile.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetProfileResult> InvokeAsync(GetProfileArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetProfileResult>("oci:Optimizer/getProfile:getProfile", args ?? new GetProfileArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Profile resource in Oracle Cloud Infrastructure Optimizer service.
        /// 
        /// Gets the specified profile's information. Uses the profile's OCID to determine which profile to retrieve.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testProfile = Oci.Optimizer.GetProfile.Invoke(new()
        ///     {
        ///         ProfileId = testProfileOciOptimizerProfile.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetProfileResult> Invoke(GetProfileInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetProfileResult>("oci:Optimizer/getProfile:getProfile", args ?? new GetProfileInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetProfileArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique OCID of the profile.
        /// </summary>
        [Input("profileId", required: true)]
        public string ProfileId { get; set; } = null!;

        public GetProfileArgs()
        {
        }
        public static new GetProfileArgs Empty => new GetProfileArgs();
    }

    public sealed class GetProfileInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique OCID of the profile.
        /// </summary>
        [Input("profileId", required: true)]
        public Input<string> ProfileId { get; set; } = null!;

        public GetProfileInvokeArgs()
        {
        }
        public static new GetProfileInvokeArgs Empty => new GetProfileInvokeArgs();
    }


    [OutputType]
    public sealed class GetProfileResult
    {
        /// <summary>
        /// The time period over which to collect data for the recommendations, measured in number of days.
        /// </summary>
        public readonly int AggregationIntervalInDays;
        /// <summary>
        /// The OCID of the tenancy. The tenancy is the root compartment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// Text describing the profile. Avoid entering confidential information.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Simple key-value pair applied without any predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Exists for cross-compatibility only.  Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The unique OCID of the profile.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A list of configuration levels for each recommendation.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProfileLevelsConfigurationResult> LevelsConfigurations;
        /// <summary>
        /// The name assigned to the profile. Avoid entering confidential information.
        /// </summary>
        public readonly string Name;
        public readonly string ProfileId;
        /// <summary>
        /// The profile's current state.
        /// </summary>
        public readonly string State;
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// Optional. The compartments specified in the profile override for a recommendation.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProfileTargetCompartmentResult> TargetCompartments;
        /// <summary>
        /// Optional. The tags specified in the profile override for a recommendation.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProfileTargetTagResult> TargetTags;
        /// <summary>
        /// The date and time the profile was created, in the format defined by RFC3339.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The date and time the profile was last updated, in the format defined by RFC3339.
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetProfileResult(
            int aggregationIntervalInDays,

            string compartmentId,

            ImmutableDictionary<string, string> definedTags,

            string description,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            ImmutableArray<Outputs.GetProfileLevelsConfigurationResult> levelsConfigurations,

            string name,

            string profileId,

            string state,

            ImmutableDictionary<string, string> systemTags,

            ImmutableArray<Outputs.GetProfileTargetCompartmentResult> targetCompartments,

            ImmutableArray<Outputs.GetProfileTargetTagResult> targetTags,

            string timeCreated,

            string timeUpdated)
        {
            AggregationIntervalInDays = aggregationIntervalInDays;
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            Description = description;
            FreeformTags = freeformTags;
            Id = id;
            LevelsConfigurations = levelsConfigurations;
            Name = name;
            ProfileId = profileId;
            State = state;
            SystemTags = systemTags;
            TargetCompartments = targetCompartments;
            TargetTags = targetTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
