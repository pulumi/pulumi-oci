// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Optimizer
{
    public static class GetRecommendationStrategies
    {
        /// <summary>
        /// This data source provides the list of Recommendation Strategies in Oracle Cloud Infrastructure Optimizer service.
        /// 
        /// Lists the existing strategies.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testRecommendationStrategies = Output.Create(Oci.Optimizer.GetRecommendationStrategies.InvokeAsync(new Oci.Optimizer.GetRecommendationStrategiesArgs
        ///         {
        ///             CompartmentId = @var.Compartment_id,
        ///             CompartmentIdInSubtree = @var.Recommendation_strategy_compartment_id_in_subtree,
        ///             Name = @var.Recommendation_strategy_name,
        ///             RecommendationName = oci_optimizer_recommendation.Test_recommendation.Name,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetRecommendationStrategiesResult> InvokeAsync(GetRecommendationStrategiesArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetRecommendationStrategiesResult>("oci:Optimizer/getRecommendationStrategies:getRecommendationStrategies", args ?? new GetRecommendationStrategiesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Recommendation Strategies in Oracle Cloud Infrastructure Optimizer service.
        /// 
        /// Lists the existing strategies.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testRecommendationStrategies = Output.Create(Oci.Optimizer.GetRecommendationStrategies.InvokeAsync(new Oci.Optimizer.GetRecommendationStrategiesArgs
        ///         {
        ///             CompartmentId = @var.Compartment_id,
        ///             CompartmentIdInSubtree = @var.Recommendation_strategy_compartment_id_in_subtree,
        ///             Name = @var.Recommendation_strategy_name,
        ///             RecommendationName = oci_optimizer_recommendation.Test_recommendation.Name,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetRecommendationStrategiesResult> Invoke(GetRecommendationStrategiesInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetRecommendationStrategiesResult>("oci:Optimizer/getRecommendationStrategies:getRecommendationStrategies", args ?? new GetRecommendationStrategiesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRecommendationStrategiesArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned depending on the the setting of `accessLevel`.
        /// </summary>
        [Input("compartmentIdInSubtree", required: true)]
        public bool CompartmentIdInSubtree { get; set; }

        [Input("filters")]
        private List<Inputs.GetRecommendationStrategiesFilterArgs>? _filters;
        public List<Inputs.GetRecommendationStrategiesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetRecommendationStrategiesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Optional. A filter that returns results that match the name specified.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// Optional. A filter that returns results that match the recommendation name specified.
        /// </summary>
        [Input("recommendationName")]
        public string? RecommendationName { get; set; }

        public GetRecommendationStrategiesArgs()
        {
        }
    }

    public sealed class GetRecommendationStrategiesInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned depending on the the setting of `accessLevel`.
        /// </summary>
        [Input("compartmentIdInSubtree", required: true)]
        public Input<bool> CompartmentIdInSubtree { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetRecommendationStrategiesFilterInputArgs>? _filters;
        public InputList<Inputs.GetRecommendationStrategiesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetRecommendationStrategiesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Optional. A filter that returns results that match the name specified.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Optional. A filter that returns results that match the recommendation name specified.
        /// </summary>
        [Input("recommendationName")]
        public Input<string>? RecommendationName { get; set; }

        public GetRecommendationStrategiesInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetRecommendationStrategiesResult
    {
        public readonly string CompartmentId;
        public readonly bool CompartmentIdInSubtree;
        public readonly ImmutableArray<Outputs.GetRecommendationStrategiesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the strategy parameter.
        /// </summary>
        public readonly string? Name;
        public readonly string? RecommendationName;
        /// <summary>
        /// The list of recommendation_strategy_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRecommendationStrategiesRecommendationStrategyCollectionResult> RecommendationStrategyCollections;

        [OutputConstructor]
        private GetRecommendationStrategiesResult(
            string compartmentId,

            bool compartmentIdInSubtree,

            ImmutableArray<Outputs.GetRecommendationStrategiesFilterResult> filters,

            string id,

            string? name,

            string? recommendationName,

            ImmutableArray<Outputs.GetRecommendationStrategiesRecommendationStrategyCollectionResult> recommendationStrategyCollections)
        {
            CompartmentId = compartmentId;
            CompartmentIdInSubtree = compartmentIdInSubtree;
            Filters = filters;
            Id = id;
            Name = name;
            RecommendationName = recommendationName;
            RecommendationStrategyCollections = recommendationStrategyCollections;
        }
    }
}
