// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Optimizer
{
    public static class GetResourceActions
    {
        /// <summary>
        /// This data source provides the list of Resource Actions in Oracle Cloud Infrastructure Optimizer service.
        /// 
        /// Lists the Cloud Advisor resource actions that are supported by the specified recommendation.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testResourceActions = Oci.Optimizer.GetResourceActions.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         CompartmentIdInSubtree = @var.Resource_action_compartment_id_in_subtree,
        ///         RecommendationId = oci_optimizer_recommendation.Test_recommendation.Id,
        ///         Name = @var.Resource_action_name,
        ///         ResourceType = @var.Resource_action_resource_type,
        ///         State = @var.Resource_action_state,
        ///         Status = @var.Resource_action_status,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetResourceActionsResult> InvokeAsync(GetResourceActionsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetResourceActionsResult>("oci:Optimizer/getResourceActions:getResourceActions", args ?? new GetResourceActionsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Resource Actions in Oracle Cloud Infrastructure Optimizer service.
        /// 
        /// Lists the Cloud Advisor resource actions that are supported by the specified recommendation.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testResourceActions = Oci.Optimizer.GetResourceActions.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         CompartmentIdInSubtree = @var.Resource_action_compartment_id_in_subtree,
        ///         RecommendationId = oci_optimizer_recommendation.Test_recommendation.Id,
        ///         Name = @var.Resource_action_name,
        ///         ResourceType = @var.Resource_action_resource_type,
        ///         State = @var.Resource_action_state,
        ///         Status = @var.Resource_action_status,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetResourceActionsResult> Invoke(GetResourceActionsInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetResourceActionsResult>("oci:Optimizer/getResourceActions:getResourceActions", args ?? new GetResourceActionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetResourceActionsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned depending on the the setting of `accessLevel`.
        /// </summary>
        [Input("compartmentIdInSubtree", required: true)]
        public bool CompartmentIdInSubtree { get; set; }

        [Input("filters")]
        private List<Inputs.GetResourceActionsFilterArgs>? _filters;
        public List<Inputs.GetResourceActionsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetResourceActionsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Optional. A filter that returns results that match the name specified.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// The unique OCID associated with the recommendation.
        /// </summary>
        [Input("recommendationId", required: true)]
        public string RecommendationId { get; set; } = null!;

        /// <summary>
        /// Optional. A filter that returns results that match the resource type specified.
        /// </summary>
        [Input("resourceType")]
        public string? ResourceType { get; set; }

        /// <summary>
        /// A filter that returns results that match the lifecycle state specified.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        /// <summary>
        /// A filter that returns recommendations that match the status specified.
        /// </summary>
        [Input("status")]
        public string? Status { get; set; }

        public GetResourceActionsArgs()
        {
        }
        public static new GetResourceActionsArgs Empty => new GetResourceActionsArgs();
    }

    public sealed class GetResourceActionsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned depending on the the setting of `accessLevel`.
        /// </summary>
        [Input("compartmentIdInSubtree", required: true)]
        public Input<bool> CompartmentIdInSubtree { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetResourceActionsFilterInputArgs>? _filters;
        public InputList<Inputs.GetResourceActionsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetResourceActionsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Optional. A filter that returns results that match the name specified.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The unique OCID associated with the recommendation.
        /// </summary>
        [Input("recommendationId", required: true)]
        public Input<string> RecommendationId { get; set; } = null!;

        /// <summary>
        /// Optional. A filter that returns results that match the resource type specified.
        /// </summary>
        [Input("resourceType")]
        public Input<string>? ResourceType { get; set; }

        /// <summary>
        /// A filter that returns results that match the lifecycle state specified.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// A filter that returns recommendations that match the status specified.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public GetResourceActionsInvokeArgs()
        {
        }
        public static new GetResourceActionsInvokeArgs Empty => new GetResourceActionsInvokeArgs();
    }


    [OutputType]
    public sealed class GetResourceActionsResult
    {
        /// <summary>
        /// The OCID of the compartment.
        /// </summary>
        public readonly string CompartmentId;
        public readonly bool CompartmentIdInSubtree;
        public readonly ImmutableArray<Outputs.GetResourceActionsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name assigned to the resource.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The unique OCID associated with the recommendation.
        /// </summary>
        public readonly string RecommendationId;
        /// <summary>
        /// The list of resource_action_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetResourceActionsResourceActionCollectionResult> ResourceActionCollections;
        /// <summary>
        /// The kind of resource.
        /// </summary>
        public readonly string? ResourceType;
        /// <summary>
        /// The resource action's current state.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// The current status of the resource action.
        /// </summary>
        public readonly string? Status;

        [OutputConstructor]
        private GetResourceActionsResult(
            string compartmentId,

            bool compartmentIdInSubtree,

            ImmutableArray<Outputs.GetResourceActionsFilterResult> filters,

            string id,

            string? name,

            string recommendationId,

            ImmutableArray<Outputs.GetResourceActionsResourceActionCollectionResult> resourceActionCollections,

            string? resourceType,

            string? state,

            string? status)
        {
            CompartmentId = compartmentId;
            CompartmentIdInSubtree = compartmentIdInSubtree;
            Filters = filters;
            Id = id;
            Name = name;
            RecommendationId = recommendationId;
            ResourceActionCollections = resourceActionCollections;
            ResourceType = resourceType;
            State = state;
            Status = status;
        }
    }
}
