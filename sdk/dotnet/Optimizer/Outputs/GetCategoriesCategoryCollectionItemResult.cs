// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Optimizer.Outputs
{

    [OutputType]
    public sealed class GetCategoriesCategoryCollectionItemResult
    {
        /// <summary>
        /// The OCID of the compartment.
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// The name associated with the compartment.
        /// </summary>
        public readonly string? CompartmentName;
        /// <summary>
        /// Text describing the category.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The estimated cost savings, in dollars, for the category.
        /// </summary>
        public readonly double? EstimatedCostSaving;
        /// <summary>
        /// Additional metadata key/value pairs for the category.
        /// </summary>
        public readonly ImmutableDictionary<string, object>? ExtendedMetadata;
        /// <summary>
        /// The unique OCID of the category.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Optional. A filter that returns results that match the name specified.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// An array of `RecommendationCount` objects grouped by the level of importance assigned to the recommendation.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCategoriesCategoryCollectionItemRecommendationCountResult> RecommendationCounts;
        /// <summary>
        /// An array of `ResourceCount` objects grouped by the status of the recommendation.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCategoriesCategoryCollectionItemResourceCountResult> ResourceCounts;
        /// <summary>
        /// A filter that returns results that match the lifecycle state specified.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// The date and time the category details were created, in the format defined by RFC3339.
        /// </summary>
        public readonly string? TimeCreated;
        /// <summary>
        /// The date and time the category details were last updated, in the format defined by RFC3339.
        /// </summary>
        public readonly string? TimeUpdated;

        [OutputConstructor]
        private GetCategoriesCategoryCollectionItemResult(
            string? compartmentId,

            string? compartmentName,

            string? description,

            double? estimatedCostSaving,

            ImmutableDictionary<string, object>? extendedMetadata,

            string? id,

            string? name,

            ImmutableArray<Outputs.GetCategoriesCategoryCollectionItemRecommendationCountResult> recommendationCounts,

            ImmutableArray<Outputs.GetCategoriesCategoryCollectionItemResourceCountResult> resourceCounts,

            string? state,

            string? timeCreated,

            string? timeUpdated)
        {
            CompartmentId = compartmentId;
            CompartmentName = compartmentName;
            Description = description;
            EstimatedCostSaving = estimatedCostSaving;
            ExtendedMetadata = extendedMetadata;
            Id = id;
            Name = name;
            RecommendationCounts = recommendationCounts;
            ResourceCounts = resourceCounts;
            State = state;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
