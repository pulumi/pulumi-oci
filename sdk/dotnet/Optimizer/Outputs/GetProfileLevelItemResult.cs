// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Optimizer.Outputs
{

    [OutputType]
    public sealed class GetProfileLevelItemResult
    {
        /// <summary>
        /// The default aggregation interval (in days) for profiles using this profile level.
        /// </summary>
        public readonly int DefaultInterval;
        /// <summary>
        /// The metrics that will be evaluated by profiles using this profile level.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProfileLevelItemMetricResult> Metrics;
        /// <summary>
        /// Optional. A filter that returns results that match the name specified.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Optional. A filter that returns results that match the recommendation name specified.
        /// </summary>
        public readonly string RecommendationName;
        /// <summary>
        /// The date and time the category details were created, in the format defined by RFC3339.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The date and time the category details were last updated, in the format defined by RFC3339.
        /// </summary>
        public readonly string TimeUpdated;
        /// <summary>
        /// An array of aggregation intervals (in days) allowed for profiles using this profile level.
        /// </summary>
        public readonly ImmutableArray<int> ValidIntervals;

        [OutputConstructor]
        private GetProfileLevelItemResult(
            int defaultInterval,

            ImmutableArray<Outputs.GetProfileLevelItemMetricResult> metrics,

            string name,

            string recommendationName,

            string timeCreated,

            string timeUpdated,

            ImmutableArray<int> validIntervals)
        {
            DefaultInterval = defaultInterval;
            Metrics = metrics;
            Name = name;
            RecommendationName = recommendationName;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            ValidIntervals = validIntervals;
        }
    }
}
