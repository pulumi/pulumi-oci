// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Optimizer.Outputs
{

    [OutputType]
    public sealed class GetProfilesProfileCollectionItemResult
    {
        /// <summary>
        /// The time period over which to collect data for the recommendations, measured in number of days.
        /// </summary>
        public readonly int AggregationIntervalInDays;
        /// <summary>
        /// The OCID of the compartment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// Text describing the profile. Avoid entering confidential information.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Simple key-value pair applied without any predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Exists for cross-compatibility only.  Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The unique OCID of the profile.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A list of configuration levels for each recommendation.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProfilesProfileCollectionItemLevelsConfigurationResult> LevelsConfigurations;
        /// <summary>
        /// Optional. A filter that returns results that match the name specified.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// A filter that returns results that match the lifecycle state specified.
        /// </summary>
        public readonly string State;
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// Optional. The compartments specified in the profile override for a recommendation.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProfilesProfileCollectionItemTargetCompartmentResult> TargetCompartments;
        /// <summary>
        /// Optional. The tags specified in the profile override for a recommendation.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProfilesProfileCollectionItemTargetTagResult> TargetTags;
        /// <summary>
        /// The date and time the profile was created, in the format defined by RFC3339.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The date and time the profile was last updated, in the format defined by RFC3339.
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetProfilesProfileCollectionItemResult(
            int aggregationIntervalInDays,

            string compartmentId,

            ImmutableDictionary<string, string> definedTags,

            string description,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            ImmutableArray<Outputs.GetProfilesProfileCollectionItemLevelsConfigurationResult> levelsConfigurations,

            string name,

            string state,

            ImmutableDictionary<string, string> systemTags,

            ImmutableArray<Outputs.GetProfilesProfileCollectionItemTargetCompartmentResult> targetCompartments,

            ImmutableArray<Outputs.GetProfilesProfileCollectionItemTargetTagResult> targetTags,

            string timeCreated,

            string timeUpdated)
        {
            AggregationIntervalInDays = aggregationIntervalInDays;
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            Description = description;
            FreeformTags = freeformTags;
            Id = id;
            LevelsConfigurations = levelsConfigurations;
            Name = name;
            State = state;
            SystemTags = systemTags;
            TargetCompartments = targetCompartments;
            TargetTags = targetTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
