// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Optimizer.Outputs
{

    [OutputType]
    public sealed class GetResourceActionsResourceActionCollectionItemResult
    {
        /// <summary>
        /// Details about the recommended action.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetResourceActionsResourceActionCollectionItemActionResult> Actions;
        /// <summary>
        /// The unique OCID associated with the category.
        /// </summary>
        public readonly string CategoryId;
        /// <summary>
        /// The OCID of the compartment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The name associated with the compartment.
        /// </summary>
        public readonly string CompartmentName;
        /// <summary>
        /// The estimated cost savings, in dollars, for the resource action.
        /// </summary>
        public readonly double EstimatedCostSaving;
        /// <summary>
        /// Additional metadata key/value pairs that you provide. They serve the same purpose and functionality as fields in the `metadata` object.
        /// </summary>
        public readonly ImmutableDictionary<string, string> ExtendedMetadata;
        /// <summary>
        /// The unique OCID associated with the resource action.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Custom metadata key/value pairs for the resource action.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Metadata;
        /// <summary>
        /// Optional. A filter that returns results that match the name specified.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The unique OCID associated with the recommendation.
        /// </summary>
        public readonly string RecommendationId;
        public readonly string ResourceActionId;
        /// <summary>
        /// The unique OCID associated with the resource.
        /// </summary>
        public readonly string ResourceId;
        /// <summary>
        /// Optional. A filter that returns results that match the resource type specified.
        /// </summary>
        public readonly string ResourceType;
        /// <summary>
        /// A filter that returns results that match the lifecycle state specified.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// A filter that returns recommendations that match the status specified.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The date and time the resource action details were created, in the format defined by RFC3339.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The date and time that the resource action entered its current status. The format is defined by RFC3339.
        /// </summary>
        public readonly string TimeStatusBegin;
        /// <summary>
        /// The date and time the current status will change. The format is defined by RFC3339.
        /// </summary>
        public readonly string TimeStatusEnd;
        /// <summary>
        /// The date and time the resource action details were last updated, in the format defined by RFC3339.
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetResourceActionsResourceActionCollectionItemResult(
            ImmutableArray<Outputs.GetResourceActionsResourceActionCollectionItemActionResult> actions,

            string categoryId,

            string compartmentId,

            string compartmentName,

            double estimatedCostSaving,

            ImmutableDictionary<string, string> extendedMetadata,

            string id,

            ImmutableDictionary<string, string> metadata,

            string name,

            string recommendationId,

            string resourceActionId,

            string resourceId,

            string resourceType,

            string state,

            string status,

            string timeCreated,

            string timeStatusBegin,

            string timeStatusEnd,

            string timeUpdated)
        {
            Actions = actions;
            CategoryId = categoryId;
            CompartmentId = compartmentId;
            CompartmentName = compartmentName;
            EstimatedCostSaving = estimatedCostSaving;
            ExtendedMetadata = extendedMetadata;
            Id = id;
            Metadata = metadata;
            Name = name;
            RecommendationId = recommendationId;
            ResourceActionId = resourceActionId;
            ResourceId = resourceId;
            ResourceType = resourceType;
            State = state;
            Status = status;
            TimeCreated = timeCreated;
            TimeStatusBegin = timeStatusBegin;
            TimeStatusEnd = timeStatusEnd;
            TimeUpdated = timeUpdated;
        }
    }
}
