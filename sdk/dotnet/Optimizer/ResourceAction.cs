// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Optimizer
{
    /// <summary>
    /// This resource provides the Resource Action resource in Oracle Cloud Infrastructure Optimizer service.
    /// 
    /// Updates the resource action that corresponds to the specified OCID.
    /// Use this operation to implement the following actions:
    /// 
    ///   * Postpone resource action
    ///   * Ignore resource action
    ///   * Reactivate resource action
    /// 
    /// ## Import
    /// 
    /// ResourceActions can be imported using the `id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import oci:Optimizer/resourceAction:ResourceAction test_resource_action "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:Optimizer/resourceAction:ResourceAction")]
    public partial class ResourceAction : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Details about the recommended action.
        /// </summary>
        [Output("actions")]
        public Output<ImmutableArray<Outputs.ResourceActionAction>> Actions { get; private set; } = null!;

        /// <summary>
        /// The unique OCID associated with the category.
        /// </summary>
        [Output("categoryId")]
        public Output<string> CategoryId { get; private set; } = null!;

        /// <summary>
        /// The OCID of the compartment.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// The name associated with the compartment.
        /// </summary>
        [Output("compartmentName")]
        public Output<string> CompartmentName { get; private set; } = null!;

        /// <summary>
        /// The estimated cost savings, in dollars, for the resource action.
        /// </summary>
        [Output("estimatedCostSaving")]
        public Output<double> EstimatedCostSaving { get; private set; } = null!;

        /// <summary>
        /// Additional metadata key/value pairs that you provide. They serve the same purpose and functionality as fields in the `metadata` object.
        /// </summary>
        [Output("extendedMetadata")]
        public Output<ImmutableDictionary<string, object>> ExtendedMetadata { get; private set; } = null!;

        /// <summary>
        /// Custom metadata key/value pairs for the resource action.
        /// </summary>
        [Output("metadata")]
        public Output<ImmutableDictionary<string, object>> Metadata { get; private set; } = null!;

        /// <summary>
        /// The name assigned to the resource.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The unique OCID associated with the recommendation.
        /// </summary>
        [Output("recommendationId")]
        public Output<string> RecommendationId { get; private set; } = null!;

        /// <summary>
        /// The unique OCID associated with the resource action.
        /// </summary>
        [Output("resourceActionId")]
        public Output<string> ResourceActionId { get; private set; } = null!;

        /// <summary>
        /// The unique OCID associated with the resource.
        /// </summary>
        [Output("resourceId")]
        public Output<string> ResourceId { get; private set; } = null!;

        /// <summary>
        /// The kind of resource.
        /// </summary>
        [Output("resourceType")]
        public Output<string> ResourceType { get; private set; } = null!;

        /// <summary>
        /// The resource action's current state.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The status of the resource action.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The date and time the resource action details were created, in the format defined by RFC3339.
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The date and time that the resource action entered its current status. The format is defined by RFC3339.
        /// </summary>
        [Output("timeStatusBegin")]
        public Output<string> TimeStatusBegin { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The date and time the current status will change. The format is defined by RFC3339.
        /// </summary>
        [Output("timeStatusEnd")]
        public Output<string> TimeStatusEnd { get; private set; } = null!;

        /// <summary>
        /// The date and time the resource action details were last updated, in the format defined by RFC3339.
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;


        /// <summary>
        /// Create a ResourceAction resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ResourceAction(string name, ResourceActionArgs args, CustomResourceOptions? options = null)
            : base("oci:Optimizer/resourceAction:ResourceAction", name, args ?? new ResourceActionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ResourceAction(string name, Input<string> id, ResourceActionState? state = null, CustomResourceOptions? options = null)
            : base("oci:Optimizer/resourceAction:ResourceAction", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ResourceAction resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ResourceAction Get(string name, Input<string> id, ResourceActionState? state = null, CustomResourceOptions? options = null)
        {
            return new ResourceAction(name, id, state, options);
        }
    }

    public sealed class ResourceActionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The unique OCID associated with the resource action.
        /// </summary>
        [Input("resourceActionId", required: true)]
        public Input<string> ResourceActionId { get; set; } = null!;

        /// <summary>
        /// (Updatable) The status of the resource action.
        /// </summary>
        [Input("status", required: true)]
        public Input<string> Status { get; set; } = null!;

        /// <summary>
        /// (Updatable) The date and time the current status will change. The format is defined by RFC3339.
        /// </summary>
        [Input("timeStatusEnd")]
        public Input<string>? TimeStatusEnd { get; set; }

        public ResourceActionArgs()
        {
        }
        public static new ResourceActionArgs Empty => new ResourceActionArgs();
    }

    public sealed class ResourceActionState : global::Pulumi.ResourceArgs
    {
        [Input("actions")]
        private InputList<Inputs.ResourceActionActionGetArgs>? _actions;

        /// <summary>
        /// Details about the recommended action.
        /// </summary>
        public InputList<Inputs.ResourceActionActionGetArgs> Actions
        {
            get => _actions ?? (_actions = new InputList<Inputs.ResourceActionActionGetArgs>());
            set => _actions = value;
        }

        /// <summary>
        /// The unique OCID associated with the category.
        /// </summary>
        [Input("categoryId")]
        public Input<string>? CategoryId { get; set; }

        /// <summary>
        /// The OCID of the compartment.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// The name associated with the compartment.
        /// </summary>
        [Input("compartmentName")]
        public Input<string>? CompartmentName { get; set; }

        /// <summary>
        /// The estimated cost savings, in dollars, for the resource action.
        /// </summary>
        [Input("estimatedCostSaving")]
        public Input<double>? EstimatedCostSaving { get; set; }

        [Input("extendedMetadata")]
        private InputMap<object>? _extendedMetadata;

        /// <summary>
        /// Additional metadata key/value pairs that you provide. They serve the same purpose and functionality as fields in the `metadata` object.
        /// </summary>
        public InputMap<object> ExtendedMetadata
        {
            get => _extendedMetadata ?? (_extendedMetadata = new InputMap<object>());
            set => _extendedMetadata = value;
        }

        [Input("metadata")]
        private InputMap<object>? _metadata;

        /// <summary>
        /// Custom metadata key/value pairs for the resource action.
        /// </summary>
        public InputMap<object> Metadata
        {
            get => _metadata ?? (_metadata = new InputMap<object>());
            set => _metadata = value;
        }

        /// <summary>
        /// The name assigned to the resource.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The unique OCID associated with the recommendation.
        /// </summary>
        [Input("recommendationId")]
        public Input<string>? RecommendationId { get; set; }

        /// <summary>
        /// The unique OCID associated with the resource action.
        /// </summary>
        [Input("resourceActionId")]
        public Input<string>? ResourceActionId { get; set; }

        /// <summary>
        /// The unique OCID associated with the resource.
        /// </summary>
        [Input("resourceId")]
        public Input<string>? ResourceId { get; set; }

        /// <summary>
        /// The kind of resource.
        /// </summary>
        [Input("resourceType")]
        public Input<string>? ResourceType { get; set; }

        /// <summary>
        /// The resource action's current state.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// (Updatable) The status of the resource action.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The date and time the resource action details were created, in the format defined by RFC3339.
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The date and time that the resource action entered its current status. The format is defined by RFC3339.
        /// </summary>
        [Input("timeStatusBegin")]
        public Input<string>? TimeStatusBegin { get; set; }

        /// <summary>
        /// (Updatable) The date and time the current status will change. The format is defined by RFC3339.
        /// </summary>
        [Input("timeStatusEnd")]
        public Input<string>? TimeStatusEnd { get; set; }

        /// <summary>
        /// The date and time the resource action details were last updated, in the format defined by RFC3339.
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        public ResourceActionState()
        {
        }
        public static new ResourceActionState Empty => new ResourceActionState();
    }
}
