// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OsManagement
{
    public static class GetManagedInstanceGroups
    {
        /// <summary>
        /// This data source provides the list of Managed Instance Groups in Oracle Cloud Infrastructure OS Management service.
        /// 
        /// Returns a list of all Managed Instance Groups.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedInstanceGroups = Oci.OsManagement.GetManagedInstanceGroups.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = managedInstanceGroupDisplayName,
        ///         OsFamily = managedInstanceGroupOsFamily,
        ///         State = managedInstanceGroupState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetManagedInstanceGroupsResult> InvokeAsync(GetManagedInstanceGroupsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetManagedInstanceGroupsResult>("oci:OsManagement/getManagedInstanceGroups:getManagedInstanceGroups", args ?? new GetManagedInstanceGroupsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Managed Instance Groups in Oracle Cloud Infrastructure OS Management service.
        /// 
        /// Returns a list of all Managed Instance Groups.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedInstanceGroups = Oci.OsManagement.GetManagedInstanceGroups.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = managedInstanceGroupDisplayName,
        ///         OsFamily = managedInstanceGroupOsFamily,
        ///         State = managedInstanceGroupState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetManagedInstanceGroupsResult> Invoke(GetManagedInstanceGroupsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedInstanceGroupsResult>("oci:OsManagement/getManagedInstanceGroups:getManagedInstanceGroups", args ?? new GetManagedInstanceGroupsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Managed Instance Groups in Oracle Cloud Infrastructure OS Management service.
        /// 
        /// Returns a list of all Managed Instance Groups.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedInstanceGroups = Oci.OsManagement.GetManagedInstanceGroups.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = managedInstanceGroupDisplayName,
        ///         OsFamily = managedInstanceGroupOsFamily,
        ///         State = managedInstanceGroupState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetManagedInstanceGroupsResult> Invoke(GetManagedInstanceGroupsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedInstanceGroupsResult>("oci:OsManagement/getManagedInstanceGroups:getManagedInstanceGroups", args ?? new GetManagedInstanceGroupsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagedInstanceGroupsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetManagedInstanceGroupsFilterArgs>? _filters;
        public List<Inputs.GetManagedInstanceGroupsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetManagedInstanceGroupsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The OS family for which to list resources.
        /// </summary>
        [Input("osFamily")]
        public string? OsFamily { get; set; }

        /// <summary>
        /// The current lifecycle state for the object.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetManagedInstanceGroupsArgs()
        {
        }
        public static new GetManagedInstanceGroupsArgs Empty => new GetManagedInstanceGroupsArgs();
    }

    public sealed class GetManagedInstanceGroupsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetManagedInstanceGroupsFilterInputArgs>? _filters;
        public InputList<Inputs.GetManagedInstanceGroupsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetManagedInstanceGroupsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The OS family for which to list resources.
        /// </summary>
        [Input("osFamily")]
        public Input<string>? OsFamily { get; set; }

        /// <summary>
        /// The current lifecycle state for the object.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetManagedInstanceGroupsInvokeArgs()
        {
        }
        public static new GetManagedInstanceGroupsInvokeArgs Empty => new GetManagedInstanceGroupsInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagedInstanceGroupsResult
    {
        /// <summary>
        /// OCID for the Compartment
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// User friendly name
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetManagedInstanceGroupsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of managed_instance_groups.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetManagedInstanceGroupsManagedInstanceGroupResult> ManagedInstanceGroups;
        /// <summary>
        /// The Operating System type of the managed instance.
        /// </summary>
        public readonly string? OsFamily;
        /// <summary>
        /// The current state of the Software Source.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetManagedInstanceGroupsResult(
            string compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetManagedInstanceGroupsFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetManagedInstanceGroupsManagedInstanceGroupResult> managedInstanceGroups,

            string? osFamily,

            string? state)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            ManagedInstanceGroups = managedInstanceGroups;
            OsFamily = osFamily;
            State = state;
        }
    }
}
