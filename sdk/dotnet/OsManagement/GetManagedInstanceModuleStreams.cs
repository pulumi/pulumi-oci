// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OsManagement
{
    public static class GetManagedInstanceModuleStreams
    {
        /// <summary>
        /// This data source provides the list of Managed Instance Module Streams in Oracle Cloud Infrastructure OS Management service.
        /// 
        /// Retrieve a list of module streams, along with a summary of their
        /// status, from a managed instance.  Filters may be applied to select
        /// a subset of module streams based on the filter criteria.
        /// 
        /// The 'moduleName' attribute filters against the name of a module.
        /// It accepts strings of the format "&lt;module&gt;".  If this attribute
        /// is defined, only streams that belong to the specified module are
        /// included in the result set.  If it is not defined, the request is
        /// not subject to this filter.
        /// 
        /// The "status" attribute filters against the state of a module stream.
        /// Valid values are "ENABLED", "DISABLED", and "ACTIVE".  If the
        /// attribute is set to "ENABLED", only module streams that are enabled
        /// are included in the result set.  If the attribute is set to "DISABLED",
        /// only module streams that are not enabled are included in the result
        /// set.  If the attribute is set to "ACTIVE", only module streams that
        /// are active are included in the result set.  If the attribute is not
        /// defined, the request is not subject to this filter.
        /// 
        /// When sorting by the display name, the result set is sorted first
        /// by the module name and then by the stream name.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedInstanceModuleStreams = Oci.OsManagement.GetManagedInstanceModuleStreams.Invoke(new()
        ///     {
        ///         ManagedInstanceId = managedInstanceId,
        ///         CompartmentId = compartmentId,
        ///         ModuleName = managedInstanceModuleName,
        ///         StreamName = managedInstanceModuleStreamName,
        ///         StreamStatus = managedInstanceModuleStreamStatus,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetManagedInstanceModuleStreamsResult> InvokeAsync(GetManagedInstanceModuleStreamsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetManagedInstanceModuleStreamsResult>("oci:OsManagement/getManagedInstanceModuleStreams:getManagedInstanceModuleStreams", args ?? new GetManagedInstanceModuleStreamsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Managed Instance Module Streams in Oracle Cloud Infrastructure OS Management service.
        /// 
        /// Retrieve a list of module streams, along with a summary of their
        /// status, from a managed instance.  Filters may be applied to select
        /// a subset of module streams based on the filter criteria.
        /// 
        /// The 'moduleName' attribute filters against the name of a module.
        /// It accepts strings of the format "&lt;module&gt;".  If this attribute
        /// is defined, only streams that belong to the specified module are
        /// included in the result set.  If it is not defined, the request is
        /// not subject to this filter.
        /// 
        /// The "status" attribute filters against the state of a module stream.
        /// Valid values are "ENABLED", "DISABLED", and "ACTIVE".  If the
        /// attribute is set to "ENABLED", only module streams that are enabled
        /// are included in the result set.  If the attribute is set to "DISABLED",
        /// only module streams that are not enabled are included in the result
        /// set.  If the attribute is set to "ACTIVE", only module streams that
        /// are active are included in the result set.  If the attribute is not
        /// defined, the request is not subject to this filter.
        /// 
        /// When sorting by the display name, the result set is sorted first
        /// by the module name and then by the stream name.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedInstanceModuleStreams = Oci.OsManagement.GetManagedInstanceModuleStreams.Invoke(new()
        ///     {
        ///         ManagedInstanceId = managedInstanceId,
        ///         CompartmentId = compartmentId,
        ///         ModuleName = managedInstanceModuleName,
        ///         StreamName = managedInstanceModuleStreamName,
        ///         StreamStatus = managedInstanceModuleStreamStatus,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetManagedInstanceModuleStreamsResult> Invoke(GetManagedInstanceModuleStreamsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedInstanceModuleStreamsResult>("oci:OsManagement/getManagedInstanceModuleStreams:getManagedInstanceModuleStreams", args ?? new GetManagedInstanceModuleStreamsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Managed Instance Module Streams in Oracle Cloud Infrastructure OS Management service.
        /// 
        /// Retrieve a list of module streams, along with a summary of their
        /// status, from a managed instance.  Filters may be applied to select
        /// a subset of module streams based on the filter criteria.
        /// 
        /// The 'moduleName' attribute filters against the name of a module.
        /// It accepts strings of the format "&lt;module&gt;".  If this attribute
        /// is defined, only streams that belong to the specified module are
        /// included in the result set.  If it is not defined, the request is
        /// not subject to this filter.
        /// 
        /// The "status" attribute filters against the state of a module stream.
        /// Valid values are "ENABLED", "DISABLED", and "ACTIVE".  If the
        /// attribute is set to "ENABLED", only module streams that are enabled
        /// are included in the result set.  If the attribute is set to "DISABLED",
        /// only module streams that are not enabled are included in the result
        /// set.  If the attribute is set to "ACTIVE", only module streams that
        /// are active are included in the result set.  If the attribute is not
        /// defined, the request is not subject to this filter.
        /// 
        /// When sorting by the display name, the result set is sorted first
        /// by the module name and then by the stream name.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedInstanceModuleStreams = Oci.OsManagement.GetManagedInstanceModuleStreams.Invoke(new()
        ///     {
        ///         ManagedInstanceId = managedInstanceId,
        ///         CompartmentId = compartmentId,
        ///         ModuleName = managedInstanceModuleName,
        ///         StreamName = managedInstanceModuleStreamName,
        ///         StreamStatus = managedInstanceModuleStreamStatus,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetManagedInstanceModuleStreamsResult> Invoke(GetManagedInstanceModuleStreamsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedInstanceModuleStreamsResult>("oci:OsManagement/getManagedInstanceModuleStreams:getManagedInstanceModuleStreams", args ?? new GetManagedInstanceModuleStreamsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagedInstanceModuleStreamsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources. This parameter is optional and in some cases may have no effect.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        [Input("filters")]
        private List<Inputs.GetManagedInstanceModuleStreamsFilterArgs>? _filters;
        public List<Inputs.GetManagedInstanceModuleStreamsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetManagedInstanceModuleStreamsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// OCID for the managed instance
        /// </summary>
        [Input("managedInstanceId", required: true)]
        public string ManagedInstanceId { get; set; } = null!;

        /// <summary>
        /// The name of a module.  This parameter is required if a streamName is specified.
        /// </summary>
        [Input("moduleName")]
        public string? ModuleName { get; set; }

        /// <summary>
        /// The name of the stream of the containing module.  This parameter is required if a profileName is specified.
        /// </summary>
        [Input("streamName")]
        public string? StreamName { get; set; }

        /// <summary>
        /// The status of the stream
        /// 
        /// A stream with the "ENABLED" status can be used as a source for installing profiles.  Streams with this status are also "ACTIVE".
        /// 
        /// A stream with the "DISABLED" status cannot be the source for installing profiles.  To install profiles and packages from this stream, it must be enabled.
        /// 
        /// A stream with the "ACTIVE" status can be used as a source for installing profiles.  The packages that comprise the stream are also used when a matching package is installed directly.  In general, a stream can have this status if it is the default stream for the module and no stream has been explicitly enabled.
        /// </summary>
        [Input("streamStatus")]
        public string? StreamStatus { get; set; }

        public GetManagedInstanceModuleStreamsArgs()
        {
        }
        public static new GetManagedInstanceModuleStreamsArgs Empty => new GetManagedInstanceModuleStreamsArgs();
    }

    public sealed class GetManagedInstanceModuleStreamsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources. This parameter is optional and in some cases may have no effect.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetManagedInstanceModuleStreamsFilterInputArgs>? _filters;
        public InputList<Inputs.GetManagedInstanceModuleStreamsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetManagedInstanceModuleStreamsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// OCID for the managed instance
        /// </summary>
        [Input("managedInstanceId", required: true)]
        public Input<string> ManagedInstanceId { get; set; } = null!;

        /// <summary>
        /// The name of a module.  This parameter is required if a streamName is specified.
        /// </summary>
        [Input("moduleName")]
        public Input<string>? ModuleName { get; set; }

        /// <summary>
        /// The name of the stream of the containing module.  This parameter is required if a profileName is specified.
        /// </summary>
        [Input("streamName")]
        public Input<string>? StreamName { get; set; }

        /// <summary>
        /// The status of the stream
        /// 
        /// A stream with the "ENABLED" status can be used as a source for installing profiles.  Streams with this status are also "ACTIVE".
        /// 
        /// A stream with the "DISABLED" status cannot be the source for installing profiles.  To install profiles and packages from this stream, it must be enabled.
        /// 
        /// A stream with the "ACTIVE" status can be used as a source for installing profiles.  The packages that comprise the stream are also used when a matching package is installed directly.  In general, a stream can have this status if it is the default stream for the module and no stream has been explicitly enabled.
        /// </summary>
        [Input("streamStatus")]
        public Input<string>? StreamStatus { get; set; }

        public GetManagedInstanceModuleStreamsInvokeArgs()
        {
        }
        public static new GetManagedInstanceModuleStreamsInvokeArgs Empty => new GetManagedInstanceModuleStreamsInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagedInstanceModuleStreamsResult
    {
        public readonly string? CompartmentId;
        public readonly ImmutableArray<Outputs.GetManagedInstanceModuleStreamsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string ManagedInstanceId;
        /// <summary>
        /// The name of the module that contains the stream profile
        /// </summary>
        public readonly string? ModuleName;
        /// <summary>
        /// The list of module_stream_on_managed_instances.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceResult> ModuleStreamOnManagedInstances;
        /// <summary>
        /// The name of the stream.
        /// </summary>
        public readonly string? StreamName;
        public readonly string? StreamStatus;

        [OutputConstructor]
        private GetManagedInstanceModuleStreamsResult(
            string? compartmentId,

            ImmutableArray<Outputs.GetManagedInstanceModuleStreamsFilterResult> filters,

            string id,

            string managedInstanceId,

            string? moduleName,

            ImmutableArray<Outputs.GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceResult> moduleStreamOnManagedInstances,

            string? streamName,

            string? streamStatus)
        {
            CompartmentId = compartmentId;
            Filters = filters;
            Id = id;
            ManagedInstanceId = managedInstanceId;
            ModuleName = moduleName;
            ModuleStreamOnManagedInstances = moduleStreamOnManagedInstances;
            StreamName = streamName;
            StreamStatus = streamStatus;
        }
    }
}
