// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OsManagement
{
    public static class GetManagedInstanceStreamProfile
    {
        /// <summary>
        /// This data source provides the list of Managed Instance Stream Profiles in Oracle Cloud Infrastructure OS Management service.
        /// 
        /// Retrieve a list of module stream profiles, along with a summary of their
        /// of their status, from a managed instance.  Filters may be applied to
        /// select a subset of profiles based on the filter criteria.
        /// 
        /// The "moduleName", "streamName", and "profileName" attributes combine
        /// to form a set of filters on the list of module stream profiles.  If
        /// a "modulName" is provided, only profiles that belong to that module
        /// are returned.  If both a "moduleName" and "streamName" are given,
        /// only profiles belonging to that module stream are returned.  Finally,
        /// if all three are given then only the particular profile indicated
        /// by the triple is returned.  It is not valid to supply a "streamName"
        /// without a "moduleName".  It is also not valid to supply a "profileName"
        /// without a "streamName".
        /// 
        /// The "status" attribute filters against the state of a module stream
        /// profile.  Valid values are "INSTALLED" and "AVAILABLE".  If the
        /// attribute is set to "INSTALLED", only module stream profiles that
        /// are installed are included in the result set.  If the attribute is
        /// set to "AVAILABLE", only module stream profiles that are not
        /// installed are included in the result set.  If the attribute is not
        /// defined, the request is not subject to this filter.
        /// 
        /// When sorting by display name, the result set is sorted first by
        /// module name, then by stream name, and finally by profile name.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedInstanceStreamProfiles = Oci.OsManagement.GetManagedInstanceStreamProfile.Invoke(new()
        ///     {
        ///         ManagedInstanceId = @var.Managed_instance_id,
        ///         CompartmentId = @var.Compartment_id,
        ///         ModuleName = @var.Managed_instance_module_name,
        ///         ProfileName = @var.Managed_instance_module_stream_profile_name,
        ///         ProfileStatus = @var.Managed_instance_profile_status,
        ///         StreamName = @var.Managed_instance_module_stream_name,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetManagedInstanceStreamProfileResult> InvokeAsync(GetManagedInstanceStreamProfileArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetManagedInstanceStreamProfileResult>("oci:OsManagement/getManagedInstanceStreamProfile:getManagedInstanceStreamProfile", args ?? new GetManagedInstanceStreamProfileArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Managed Instance Stream Profiles in Oracle Cloud Infrastructure OS Management service.
        /// 
        /// Retrieve a list of module stream profiles, along with a summary of their
        /// of their status, from a managed instance.  Filters may be applied to
        /// select a subset of profiles based on the filter criteria.
        /// 
        /// The "moduleName", "streamName", and "profileName" attributes combine
        /// to form a set of filters on the list of module stream profiles.  If
        /// a "modulName" is provided, only profiles that belong to that module
        /// are returned.  If both a "moduleName" and "streamName" are given,
        /// only profiles belonging to that module stream are returned.  Finally,
        /// if all three are given then only the particular profile indicated
        /// by the triple is returned.  It is not valid to supply a "streamName"
        /// without a "moduleName".  It is also not valid to supply a "profileName"
        /// without a "streamName".
        /// 
        /// The "status" attribute filters against the state of a module stream
        /// profile.  Valid values are "INSTALLED" and "AVAILABLE".  If the
        /// attribute is set to "INSTALLED", only module stream profiles that
        /// are installed are included in the result set.  If the attribute is
        /// set to "AVAILABLE", only module stream profiles that are not
        /// installed are included in the result set.  If the attribute is not
        /// defined, the request is not subject to this filter.
        /// 
        /// When sorting by display name, the result set is sorted first by
        /// module name, then by stream name, and finally by profile name.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedInstanceStreamProfiles = Oci.OsManagement.GetManagedInstanceStreamProfile.Invoke(new()
        ///     {
        ///         ManagedInstanceId = @var.Managed_instance_id,
        ///         CompartmentId = @var.Compartment_id,
        ///         ModuleName = @var.Managed_instance_module_name,
        ///         ProfileName = @var.Managed_instance_module_stream_profile_name,
        ///         ProfileStatus = @var.Managed_instance_profile_status,
        ///         StreamName = @var.Managed_instance_module_stream_name,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetManagedInstanceStreamProfileResult> Invoke(GetManagedInstanceStreamProfileInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetManagedInstanceStreamProfileResult>("oci:OsManagement/getManagedInstanceStreamProfile:getManagedInstanceStreamProfile", args ?? new GetManagedInstanceStreamProfileInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagedInstanceStreamProfileArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources. This parameter is optional and in some cases may have no effect.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        [Input("filters")]
        private List<Inputs.GetManagedInstanceStreamProfileFilterArgs>? _filters;
        public List<Inputs.GetManagedInstanceStreamProfileFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetManagedInstanceStreamProfileFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// OCID for the managed instance
        /// </summary>
        [Input("managedInstanceId", required: true)]
        public string ManagedInstanceId { get; set; } = null!;

        /// <summary>
        /// The name of a module.  This parameter is required if a streamName is specified.
        /// </summary>
        [Input("moduleName")]
        public string? ModuleName { get; set; }

        /// <summary>
        /// The name of the profile of the containing module stream
        /// </summary>
        [Input("profileName")]
        public string? ProfileName { get; set; }

        /// <summary>
        /// The status of the profile.
        /// </summary>
        [Input("profileStatus")]
        public string? ProfileStatus { get; set; }

        /// <summary>
        /// The name of the stream of the containing module.  This parameter is required if a profileName is specified.
        /// </summary>
        [Input("streamName")]
        public string? StreamName { get; set; }

        public GetManagedInstanceStreamProfileArgs()
        {
        }
        public static new GetManagedInstanceStreamProfileArgs Empty => new GetManagedInstanceStreamProfileArgs();
    }

    public sealed class GetManagedInstanceStreamProfileInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources. This parameter is optional and in some cases may have no effect.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetManagedInstanceStreamProfileFilterInputArgs>? _filters;
        public InputList<Inputs.GetManagedInstanceStreamProfileFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetManagedInstanceStreamProfileFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// OCID for the managed instance
        /// </summary>
        [Input("managedInstanceId", required: true)]
        public Input<string> ManagedInstanceId { get; set; } = null!;

        /// <summary>
        /// The name of a module.  This parameter is required if a streamName is specified.
        /// </summary>
        [Input("moduleName")]
        public Input<string>? ModuleName { get; set; }

        /// <summary>
        /// The name of the profile of the containing module stream
        /// </summary>
        [Input("profileName")]
        public Input<string>? ProfileName { get; set; }

        /// <summary>
        /// The status of the profile.
        /// </summary>
        [Input("profileStatus")]
        public Input<string>? ProfileStatus { get; set; }

        /// <summary>
        /// The name of the stream of the containing module.  This parameter is required if a profileName is specified.
        /// </summary>
        [Input("streamName")]
        public Input<string>? StreamName { get; set; }

        public GetManagedInstanceStreamProfileInvokeArgs()
        {
        }
        public static new GetManagedInstanceStreamProfileInvokeArgs Empty => new GetManagedInstanceStreamProfileInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagedInstanceStreamProfileResult
    {
        public readonly string? CompartmentId;
        public readonly ImmutableArray<Outputs.GetManagedInstanceStreamProfileFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string ManagedInstanceId;
        /// <summary>
        /// The name of the module that contains the stream profile
        /// </summary>
        public readonly string? ModuleName;
        /// <summary>
        /// The list of module_stream_profile_on_managed_instances.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceResult> ModuleStreamProfileOnManagedInstances;
        /// <summary>
        /// The name of the profile
        /// </summary>
        public readonly string? ProfileName;
        public readonly string? ProfileStatus;
        /// <summary>
        /// The name of the stream that contains the profile
        /// </summary>
        public readonly string? StreamName;

        [OutputConstructor]
        private GetManagedInstanceStreamProfileResult(
            string? compartmentId,

            ImmutableArray<Outputs.GetManagedInstanceStreamProfileFilterResult> filters,

            string id,

            string managedInstanceId,

            string? moduleName,

            ImmutableArray<Outputs.GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceResult> moduleStreamProfileOnManagedInstances,

            string? profileName,

            string? profileStatus,

            string? streamName)
        {
            CompartmentId = compartmentId;
            Filters = filters;
            Id = id;
            ManagedInstanceId = managedInstanceId;
            ModuleName = moduleName;
            ModuleStreamProfileOnManagedInstances = moduleStreamProfileOnManagedInstances;
            ProfileName = profileName;
            ProfileStatus = profileStatus;
            StreamName = streamName;
        }
    }
}
