// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OsManagement
{
    public static class GetManagedInstances
    {
        /// <summary>
        /// This data source provides the list of Managed Instances in Oracle Cloud Infrastructure OS Management service.
        /// 
        /// Returns a list of all Managed Instances.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedInstances = Oci.OsManagement.GetManagedInstances.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = managedInstanceDisplayName,
        ///         OsFamily = managedInstanceOsFamily,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetManagedInstancesResult> InvokeAsync(GetManagedInstancesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetManagedInstancesResult>("oci:OsManagement/getManagedInstances:getManagedInstances", args ?? new GetManagedInstancesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Managed Instances in Oracle Cloud Infrastructure OS Management service.
        /// 
        /// Returns a list of all Managed Instances.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedInstances = Oci.OsManagement.GetManagedInstances.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = managedInstanceDisplayName,
        ///         OsFamily = managedInstanceOsFamily,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetManagedInstancesResult> Invoke(GetManagedInstancesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedInstancesResult>("oci:OsManagement/getManagedInstances:getManagedInstances", args ?? new GetManagedInstancesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Managed Instances in Oracle Cloud Infrastructure OS Management service.
        /// 
        /// Returns a list of all Managed Instances.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedInstances = Oci.OsManagement.GetManagedInstances.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = managedInstanceDisplayName,
        ///         OsFamily = managedInstanceOsFamily,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetManagedInstancesResult> Invoke(GetManagedInstancesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedInstancesResult>("oci:OsManagement/getManagedInstances:getManagedInstances", args ?? new GetManagedInstancesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagedInstancesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetManagedInstancesFilterArgs>? _filters;
        public List<Inputs.GetManagedInstancesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetManagedInstancesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The OS family for which to list resources.
        /// </summary>
        [Input("osFamily")]
        public string? OsFamily { get; set; }

        public GetManagedInstancesArgs()
        {
        }
        public static new GetManagedInstancesArgs Empty => new GetManagedInstancesArgs();
    }

    public sealed class GetManagedInstancesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetManagedInstancesFilterInputArgs>? _filters;
        public InputList<Inputs.GetManagedInstancesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetManagedInstancesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The OS family for which to list resources.
        /// </summary>
        [Input("osFamily")]
        public Input<string>? OsFamily { get; set; }

        public GetManagedInstancesInvokeArgs()
        {
        }
        public static new GetManagedInstancesInvokeArgs Empty => new GetManagedInstancesInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagedInstancesResult
    {
        /// <summary>
        /// OCID for the Compartment
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// User friendly name
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetManagedInstancesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of managed_instances.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetManagedInstancesManagedInstanceResult> ManagedInstances;
        /// <summary>
        /// The Operating System type of the managed instance.
        /// </summary>
        public readonly string? OsFamily;

        [OutputConstructor]
        private GetManagedInstancesResult(
            string compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetManagedInstancesFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetManagedInstancesManagedInstanceResult> managedInstances,

            string? osFamily)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            ManagedInstances = managedInstances;
            OsFamily = osFamily;
        }
    }
}
