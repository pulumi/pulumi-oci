// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OsManagement
{
    public static class GetSoftwareSourceModuleStream
    {
        /// <summary>
        /// This data source provides details about a specific Software Source Module Stream resource in Oracle Cloud Infrastructure OS Management service.
        /// 
        /// Retrieve a detailed description of a module stream from a software source.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSoftwareSourceModuleStream = Oci.OsManagement.GetSoftwareSourceModuleStream.Invoke(new()
        ///     {
        ///         ModuleName = softwareSourceModuleStreamModuleName,
        ///         SoftwareSourceId = softwareSource.Id,
        ///         StreamName = softwareSourceModuleStreamName,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetSoftwareSourceModuleStreamResult> InvokeAsync(GetSoftwareSourceModuleStreamArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSoftwareSourceModuleStreamResult>("oci:OsManagement/getSoftwareSourceModuleStream:getSoftwareSourceModuleStream", args ?? new GetSoftwareSourceModuleStreamArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Software Source Module Stream resource in Oracle Cloud Infrastructure OS Management service.
        /// 
        /// Retrieve a detailed description of a module stream from a software source.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSoftwareSourceModuleStream = Oci.OsManagement.GetSoftwareSourceModuleStream.Invoke(new()
        ///     {
        ///         ModuleName = softwareSourceModuleStreamModuleName,
        ///         SoftwareSourceId = softwareSource.Id,
        ///         StreamName = softwareSourceModuleStreamName,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetSoftwareSourceModuleStreamResult> Invoke(GetSoftwareSourceModuleStreamInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSoftwareSourceModuleStreamResult>("oci:OsManagement/getSoftwareSourceModuleStream:getSoftwareSourceModuleStream", args ?? new GetSoftwareSourceModuleStreamInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSoftwareSourceModuleStreamArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the module
        /// </summary>
        [Input("moduleName", required: true)]
        public string ModuleName { get; set; } = null!;

        /// <summary>
        /// The OCID of the software source.
        /// </summary>
        [Input("softwareSourceId", required: true)]
        public string SoftwareSourceId { get; set; } = null!;

        /// <summary>
        /// The name of the stream of the containing module
        /// </summary>
        [Input("streamName", required: true)]
        public string StreamName { get; set; } = null!;

        public GetSoftwareSourceModuleStreamArgs()
        {
        }
        public static new GetSoftwareSourceModuleStreamArgs Empty => new GetSoftwareSourceModuleStreamArgs();
    }

    public sealed class GetSoftwareSourceModuleStreamInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the module
        /// </summary>
        [Input("moduleName", required: true)]
        public Input<string> ModuleName { get; set; } = null!;

        /// <summary>
        /// The OCID of the software source.
        /// </summary>
        [Input("softwareSourceId", required: true)]
        public Input<string> SoftwareSourceId { get; set; } = null!;

        /// <summary>
        /// The name of the stream of the containing module
        /// </summary>
        [Input("streamName", required: true)]
        public Input<string> StreamName { get; set; } = null!;

        public GetSoftwareSourceModuleStreamInvokeArgs()
        {
        }
        public static new GetSoftwareSourceModuleStreamInvokeArgs Empty => new GetSoftwareSourceModuleStreamInvokeArgs();
    }


    [OutputType]
    public sealed class GetSoftwareSourceModuleStreamResult
    {
        /// <summary>
        /// The architecture for which the packages in this module stream were built
        /// </summary>
        public readonly string Architecture;
        /// <summary>
        /// A description of the contents of the module stream
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Indicates if this stream is the default for its module.
        /// </summary>
        public readonly bool IsDefault;
        /// <summary>
        /// The name of the module that contains the stream
        /// </summary>
        public readonly string ModuleName;
        /// <summary>
        /// A list of packages that are contained by the stream.  Each element in the list is the name of a package.  The name is suitable to use as an argument to other OS Management APIs that interact directly with packages.
        /// </summary>
        public readonly ImmutableArray<string> Packages;
        /// <summary>
        /// A list of profiles that are part of the stream.  Each element in the list is the name of a profile.  The name is suitable to use as an argument to other OS Management APIs that interact directly with module stream profiles.  However, it is not URL encoded.
        /// </summary>
        public readonly ImmutableArray<string> Profiles;
        /// <summary>
        /// The OCID of the software source that provides this module stream.
        /// </summary>
        public readonly string SoftwareSourceId;
        /// <summary>
        /// The name of the stream
        /// </summary>
        public readonly string StreamName;

        [OutputConstructor]
        private GetSoftwareSourceModuleStreamResult(
            string architecture,

            string description,

            string id,

            bool isDefault,

            string moduleName,

            ImmutableArray<string> packages,

            ImmutableArray<string> profiles,

            string softwareSourceId,

            string streamName)
        {
            Architecture = architecture;
            Description = description;
            Id = id;
            IsDefault = isDefault;
            ModuleName = moduleName;
            Packages = packages;
            Profiles = profiles;
            SoftwareSourceId = softwareSourceId;
            StreamName = streamName;
        }
    }
}
