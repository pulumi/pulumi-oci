// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OsManagementHub
{
    /// <summary>
    /// This resource provides the Event resource in Oracle Cloud Infrastructure Os Management Hub service.
    /// 
    /// Updates the tags for an event.
    /// 
    /// ## Import
    /// 
    /// Events can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:OsManagementHub/event:Event test_event "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:OsManagementHub/event:Event")]
    public partial class Event : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// Provides additional information for a management station event.
        /// </summary>
        [Output("datas")]
        public Output<ImmutableArray<Outputs.EventData>> Datas { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, string>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// Details of an event.
        /// </summary>
        [Output("eventDetails")]
        public Output<string> EventDetails { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the event.
        /// </summary>
        [Output("eventId")]
        public Output<string> EventId { get; private set; } = null!;

        /// <summary>
        /// Summary of the event.
        /// </summary>
        [Output("eventSummary")]
        public Output<string> EventSummary { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}` 
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, string>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// Indicates whether the event occurred on a resource that is managed by the Autonomous Linux service.
        /// </summary>
        [Output("isManagedByAutonomousLinux")]
        public Output<bool> IsManagedByAutonomousLinux { get; private set; } = null!;

        /// <summary>
        /// Describes the current state of the event in more detail. For example, the  message can provide actionable information for a resource in the 'FAILED' state.
        /// </summary>
        [Output("lifecycleDetails")]
        public Output<string> LifecycleDetails { get; private set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance or resource where the event occurred.
        /// </summary>
        [Output("resourceId")]
        public Output<string> ResourceId { get; private set; } = null!;

        /// <summary>
        /// The current state of the event.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// Provides information about the system architecture and operating system.
        /// </summary>
        [Output("systemDetails")]
        public Output<ImmutableArray<Outputs.EventSystemDetail>> SystemDetails { get; private set; } = null!;

        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        [Output("systemTags")]
        public Output<ImmutableDictionary<string, string>> SystemTags { get; private set; } = null!;

        /// <summary>
        /// The date and time the Event was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The date and time that the event occurred.
        /// </summary>
        [Output("timeOccurred")]
        public Output<string> TimeOccurred { get; private set; } = null!;

        /// <summary>
        /// The date and time that the event was updated (in [RFC 3339](https://tools.ietf.org/html/rfc3339) format). Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;

        /// <summary>
        /// Event type:
        /// * `KERNEL_OOPS` - Used to identify a kernel panic condition event
        /// * `KERNEL_CRASH` - Used to identify an internal fatal kernel error that cannot be safely recovered from
        /// * `EXPLOIT_ATTEMPT` - Used to identify a known exploit detection as identified by Ksplice
        /// * `SOFTWARE_UPDATE` - Software updates - Packages
        /// * `KSPLICE_UPDATE` - Ksplice updates
        /// * `SOFTWARE_SOURCE` - Software source
        /// * `AGENT` - Agent
        /// * `MANAGEMENT_STATION` - Management Station
        /// * `SYSADMIN` - Used to identify attempts on fixing agent errors on the instance
        /// * `REBOOT` - Reboot
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a Event resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Event(string name, EventArgs args, CustomResourceOptions? options = null)
            : base("oci:OsManagementHub/event:Event", name, args ?? new EventArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Event(string name, Input<string> id, EventState? state = null, CustomResourceOptions? options = null)
            : base("oci:OsManagementHub/event:Event", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Event resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Event Get(string name, Input<string> id, EventState? state = null, CustomResourceOptions? options = null)
        {
            return new Event(name, id, state, options);
        }
    }

    public sealed class EventArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the event.
        /// </summary>
        [Input("eventId", required: true)]
        public Input<string> EventId { get; set; } = null!;

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}` 
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        public EventArgs()
        {
        }
        public static new EventArgs Empty => new EventArgs();
    }

    public sealed class EventState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("datas")]
        private InputList<Inputs.EventDataGetArgs>? _datas;

        /// <summary>
        /// Provides additional information for a management station event.
        /// </summary>
        public InputList<Inputs.EventDataGetArgs> Datas
        {
            get => _datas ?? (_datas = new InputList<Inputs.EventDataGetArgs>());
            set => _datas = value;
        }

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// Details of an event.
        /// </summary>
        [Input("eventDetails")]
        public Input<string>? EventDetails { get; set; }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the event.
        /// </summary>
        [Input("eventId")]
        public Input<string>? EventId { get; set; }

        /// <summary>
        /// Summary of the event.
        /// </summary>
        [Input("eventSummary")]
        public Input<string>? EventSummary { get; set; }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}` 
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// Indicates whether the event occurred on a resource that is managed by the Autonomous Linux service.
        /// </summary>
        [Input("isManagedByAutonomousLinux")]
        public Input<bool>? IsManagedByAutonomousLinux { get; set; }

        /// <summary>
        /// Describes the current state of the event in more detail. For example, the  message can provide actionable information for a resource in the 'FAILED' state.
        /// </summary>
        [Input("lifecycleDetails")]
        public Input<string>? LifecycleDetails { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance or resource where the event occurred.
        /// </summary>
        [Input("resourceId")]
        public Input<string>? ResourceId { get; set; }

        /// <summary>
        /// The current state of the event.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("systemDetails")]
        private InputList<Inputs.EventSystemDetailGetArgs>? _systemDetails;

        /// <summary>
        /// Provides information about the system architecture and operating system.
        /// </summary>
        public InputList<Inputs.EventSystemDetailGetArgs> SystemDetails
        {
            get => _systemDetails ?? (_systemDetails = new InputList<Inputs.EventSystemDetailGetArgs>());
            set => _systemDetails = value;
        }

        [Input("systemTags")]
        private InputMap<string>? _systemTags;

        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public InputMap<string> SystemTags
        {
            get => _systemTags ?? (_systemTags = new InputMap<string>());
            set => _systemTags = value;
        }

        /// <summary>
        /// The date and time the Event was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The date and time that the event occurred.
        /// </summary>
        [Input("timeOccurred")]
        public Input<string>? TimeOccurred { get; set; }

        /// <summary>
        /// The date and time that the event was updated (in [RFC 3339](https://tools.ietf.org/html/rfc3339) format). Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        /// <summary>
        /// Event type:
        /// * `KERNEL_OOPS` - Used to identify a kernel panic condition event
        /// * `KERNEL_CRASH` - Used to identify an internal fatal kernel error that cannot be safely recovered from
        /// * `EXPLOIT_ATTEMPT` - Used to identify a known exploit detection as identified by Ksplice
        /// * `SOFTWARE_UPDATE` - Software updates - Packages
        /// * `KSPLICE_UPDATE` - Ksplice updates
        /// * `SOFTWARE_SOURCE` - Software source
        /// * `AGENT` - Agent
        /// * `MANAGEMENT_STATION` - Management Station
        /// * `SYSADMIN` - Used to identify attempts on fixing agent errors on the instance
        /// * `REBOOT` - Reboot
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public EventState()
        {
        }
        public static new EventState Empty => new EventState();
    }
}
