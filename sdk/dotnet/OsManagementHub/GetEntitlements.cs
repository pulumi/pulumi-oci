// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OsManagementHub
{
    public static class GetEntitlements
    {
        /// <summary>
        /// This data source provides the list of Entitlements in Oracle Cloud Infrastructure Os Management Hub service.
        /// 
        /// Lists entitlements in the specified tenancy [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Filter the list against a variety of criteria including but 
        /// not limited to its Customer Support Identifier (CSI), and vendor name.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testEntitlements = Oci.OsManagementHub.GetEntitlements.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         Csi = entitlementCsi,
        ///         VendorName = entitlementVendorName,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetEntitlementsResult> InvokeAsync(GetEntitlementsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEntitlementsResult>("oci:OsManagementHub/getEntitlements:getEntitlements", args ?? new GetEntitlementsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Entitlements in Oracle Cloud Infrastructure Os Management Hub service.
        /// 
        /// Lists entitlements in the specified tenancy [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Filter the list against a variety of criteria including but 
        /// not limited to its Customer Support Identifier (CSI), and vendor name.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testEntitlements = Oci.OsManagementHub.GetEntitlements.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         Csi = entitlementCsi,
        ///         VendorName = entitlementVendorName,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetEntitlementsResult> Invoke(GetEntitlementsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEntitlementsResult>("oci:OsManagementHub/getEntitlements:getEntitlements", args ?? new GetEntitlementsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Entitlements in Oracle Cloud Infrastructure Os Management Hub service.
        /// 
        /// Lists entitlements in the specified tenancy [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Filter the list against a variety of criteria including but 
        /// not limited to its Customer Support Identifier (CSI), and vendor name.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testEntitlements = Oci.OsManagementHub.GetEntitlements.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         Csi = entitlementCsi,
        ///         VendorName = entitlementVendorName,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetEntitlementsResult> Invoke(GetEntitlementsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetEntitlementsResult>("oci:OsManagementHub/getEntitlements:getEntitlements", args ?? new GetEntitlementsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEntitlementsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment. This parameter is required and returns only resources contained within the specified compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return entitlements that match the given customer support identifier (CSI).
        /// </summary>
        [Input("csi")]
        public string? Csi { get; set; }

        [Input("filters")]
        private List<Inputs.GetEntitlementsFilterArgs>? _filters;
        public List<Inputs.GetEntitlementsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetEntitlementsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only resources that match the given vendor name.
        /// </summary>
        [Input("vendorName")]
        public string? VendorName { get; set; }

        public GetEntitlementsArgs()
        {
        }
        public static new GetEntitlementsArgs Empty => new GetEntitlementsArgs();
    }

    public sealed class GetEntitlementsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment. This parameter is required and returns only resources contained within the specified compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return entitlements that match the given customer support identifier (CSI).
        /// </summary>
        [Input("csi")]
        public Input<string>? Csi { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetEntitlementsFilterInputArgs>? _filters;
        public InputList<Inputs.GetEntitlementsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetEntitlementsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only resources that match the given vendor name.
        /// </summary>
        [Input("vendorName")]
        public Input<string>? VendorName { get; set; }

        public GetEntitlementsInvokeArgs()
        {
        }
        public static new GetEntitlementsInvokeArgs Empty => new GetEntitlementsInvokeArgs();
    }


    [OutputType]
    public sealed class GetEntitlementsResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tenancy containing the entitlement.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The Customer Support Identifier (CSI) which unlocks the software sources. The CSI is is a unique key given to a customer and it uniquely identifies the entitlement.
        /// </summary>
        public readonly string? Csi;
        /// <summary>
        /// The list of entitlement_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetEntitlementsEntitlementCollectionResult> EntitlementCollections;
        public readonly ImmutableArray<Outputs.GetEntitlementsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The vendor for the entitlement.
        /// </summary>
        public readonly string? VendorName;

        [OutputConstructor]
        private GetEntitlementsResult(
            string compartmentId,

            string? csi,

            ImmutableArray<Outputs.GetEntitlementsEntitlementCollectionResult> entitlementCollections,

            ImmutableArray<Outputs.GetEntitlementsFilterResult> filters,

            string id,

            string? vendorName)
        {
            CompartmentId = compartmentId;
            Csi = csi;
            EntitlementCollections = entitlementCollections;
            Filters = filters;
            Id = id;
            VendorName = vendorName;
        }
    }
}
