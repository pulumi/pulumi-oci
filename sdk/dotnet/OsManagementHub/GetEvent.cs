// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OsManagementHub
{
    public static class GetEvent
    {
        /// <summary>
        /// This data source provides details about a specific Event resource in Oracle Cloud Infrastructure Os Management Hub service.
        /// 
        /// Returns information about the specified event.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testEvent = Oci.OsManagementHub.GetEvent.Invoke(new()
        ///     {
        ///         EventId = testEventOciOsManagementHubEvent.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetEventResult> InvokeAsync(GetEventArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEventResult>("oci:OsManagementHub/getEvent:getEvent", args ?? new GetEventArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Event resource in Oracle Cloud Infrastructure Os Management Hub service.
        /// 
        /// Returns information about the specified event.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testEvent = Oci.OsManagementHub.GetEvent.Invoke(new()
        ///     {
        ///         EventId = testEventOciOsManagementHubEvent.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetEventResult> Invoke(GetEventInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEventResult>("oci:OsManagementHub/getEvent:getEvent", args ?? new GetEventInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Event resource in Oracle Cloud Infrastructure Os Management Hub service.
        /// 
        /// Returns information about the specified event.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testEvent = Oci.OsManagementHub.GetEvent.Invoke(new()
        ///     {
        ///         EventId = testEventOciOsManagementHubEvent.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetEventResult> Invoke(GetEventInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetEventResult>("oci:OsManagementHub/getEvent:getEvent", args ?? new GetEventInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEventArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the event.
        /// </summary>
        [Input("eventId", required: true)]
        public string EventId { get; set; } = null!;

        public GetEventArgs()
        {
        }
        public static new GetEventArgs Empty => new GetEventArgs();
    }

    public sealed class GetEventInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the event.
        /// </summary>
        [Input("eventId", required: true)]
        public Input<string> EventId { get; set; } = null!;

        public GetEventInvokeArgs()
        {
        }
        public static new GetEventInvokeArgs Empty => new GetEventInvokeArgs();
    }


    [OutputType]
    public sealed class GetEventResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Provides additional information for a management station event.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetEventDataResult> Datas;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// Details of an event.
        /// </summary>
        public readonly string EventDetails;
        public readonly string EventId;
        /// <summary>
        /// Summary of the event.
        /// </summary>
        public readonly string EventSummary;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the event.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Indicates whether the event occurred on a resource that is managed by the Autonomous Linux service.
        /// </summary>
        public readonly bool IsManagedByAutonomousLinux;
        /// <summary>
        /// Describes the current state of the event in more detail. For example, the  message can provide actionable information for a resource in the 'FAILED' state.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance or resource where the event occurred.
        /// </summary>
        public readonly string ResourceId;
        /// <summary>
        /// The current state of the event.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Provides information about the system architecture and operating system.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetEventSystemDetailResult> SystemDetails;
        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// The date and time the Event was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The date and time that the event occurred.
        /// </summary>
        public readonly string TimeOccurred;
        /// <summary>
        /// The date and time that the event was updated (in [RFC 3339](https://tools.ietf.org/html/rfc3339) format). Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        public readonly string TimeUpdated;
        /// <summary>
        /// Event type:
        /// * `KERNEL_OOPS` - Used to identify a kernel panic condition event
        /// * `KERNEL_CRASH` - Used to identify an internal fatal kernel error that cannot be safely recovered from
        /// * `EXPLOIT_ATTEMPT` - Used to identify a known exploit detection as identified by Ksplice
        /// * `SOFTWARE_UPDATE` - Software updates - Packages
        /// * `KSPLICE_UPDATE` - Ksplice updates
        /// * `SOFTWARE_SOURCE` - Software source
        /// * `AGENT` - Agent
        /// * `MANAGEMENT_STATION` - Management Station
        /// * `SYSADMIN` - Used to identify attempts on fixing agent errors on the instance
        /// * `REBOOT` - Reboot
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetEventResult(
            string compartmentId,

            ImmutableArray<Outputs.GetEventDataResult> datas,

            ImmutableDictionary<string, string> definedTags,

            string eventDetails,

            string eventId,

            string eventSummary,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            bool isManagedByAutonomousLinux,

            string lifecycleDetails,

            string resourceId,

            string state,

            ImmutableArray<Outputs.GetEventSystemDetailResult> systemDetails,

            ImmutableDictionary<string, string> systemTags,

            string timeCreated,

            string timeOccurred,

            string timeUpdated,

            string type)
        {
            CompartmentId = compartmentId;
            Datas = datas;
            DefinedTags = definedTags;
            EventDetails = eventDetails;
            EventId = eventId;
            EventSummary = eventSummary;
            FreeformTags = freeformTags;
            Id = id;
            IsManagedByAutonomousLinux = isManagedByAutonomousLinux;
            LifecycleDetails = lifecycleDetails;
            ResourceId = resourceId;
            State = state;
            SystemDetails = systemDetails;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeOccurred = timeOccurred;
            TimeUpdated = timeUpdated;
            Type = type;
        }
    }
}
