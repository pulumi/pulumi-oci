// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OsManagementHub
{
    public static class GetEvents
    {
        /// <summary>
        /// This data source provides the list of Events in Oracle Cloud Infrastructure Os Management Hub service.
        /// 
        /// Lists events that match the specified criteria, such as compartment, state, and event type.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testEvents = Oci.OsManagementHub.GetEvents.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         EventFingerprint = eventEventFingerprint,
        ///         EventSummary = eventEventSummary,
        ///         EventSummaryContains = eventEventSummaryContains,
        ///         Id = eventId,
        ///         IsManagedByAutonomousLinux = eventIsManagedByAutonomousLinux,
        ///         ResourceId = testResource.Id,
        ///         State = eventState,
        ///         TimeCreatedGreaterThanOrEqualTo = eventTimeCreatedGreaterThanOrEqualTo,
        ///         TimeCreatedLessThan = eventTimeCreatedLessThan,
        ///         Types = eventType,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetEventsResult> InvokeAsync(GetEventsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEventsResult>("oci:OsManagementHub/getEvents:getEvents", args ?? new GetEventsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Events in Oracle Cloud Infrastructure Os Management Hub service.
        /// 
        /// Lists events that match the specified criteria, such as compartment, state, and event type.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testEvents = Oci.OsManagementHub.GetEvents.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         EventFingerprint = eventEventFingerprint,
        ///         EventSummary = eventEventSummary,
        ///         EventSummaryContains = eventEventSummaryContains,
        ///         Id = eventId,
        ///         IsManagedByAutonomousLinux = eventIsManagedByAutonomousLinux,
        ///         ResourceId = testResource.Id,
        ///         State = eventState,
        ///         TimeCreatedGreaterThanOrEqualTo = eventTimeCreatedGreaterThanOrEqualTo,
        ///         TimeCreatedLessThan = eventTimeCreatedLessThan,
        ///         Types = eventType,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetEventsResult> Invoke(GetEventsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEventsResult>("oci:OsManagementHub/getEvents:getEvents", args ?? new GetEventsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Events in Oracle Cloud Infrastructure Os Management Hub service.
        /// 
        /// Lists events that match the specified criteria, such as compartment, state, and event type.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testEvents = Oci.OsManagementHub.GetEvents.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         EventFingerprint = eventEventFingerprint,
        ///         EventSummary = eventEventSummary,
        ///         EventSummaryContains = eventEventSummaryContains,
        ///         Id = eventId,
        ///         IsManagedByAutonomousLinux = eventIsManagedByAutonomousLinux,
        ///         ResourceId = testResource.Id,
        ///         State = eventState,
        ///         TimeCreatedGreaterThanOrEqualTo = eventTimeCreatedGreaterThanOrEqualTo,
        ///         TimeCreatedLessThan = eventTimeCreatedLessThan,
        ///         Types = eventType,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetEventsResult> Invoke(GetEventsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetEventsResult>("oci:OsManagementHub/getEvents:getEvents", args ?? new GetEventsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEventsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        /// <summary>
        /// The eventFingerprint of the KernelEventData.
        /// </summary>
        [Input("eventFingerprint")]
        public string? EventFingerprint { get; set; }

        /// <summary>
        /// A filter to return only events whose summary matches the given value.
        /// </summary>
        [Input("eventSummary")]
        public string? EventSummary { get; set; }

        /// <summary>
        /// A filter to return only events with a summary that contains the value provided.
        /// </summary>
        [Input("eventSummaryContains")]
        public string? EventSummaryContains { get; set; }

        [Input("filters")]
        private List<Inputs.GetEventsFilterArgs>? _filters;
        public List<Inputs.GetEventsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetEventsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the event.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// Indicates whether to list only resources managed by the Autonomous Linux service.
        /// </summary>
        [Input("isManagedByAutonomousLinux")]
        public bool? IsManagedByAutonomousLinux { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource. This filter returns resources associated with the specified resource.
        /// </summary>
        [Input("resourceId")]
        public string? ResourceId { get; set; }

        /// <summary>
        /// A filter to return only events that match the state provided. The state value is case-insensitive.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        /// <summary>
        /// A filter that returns events that occurred on or after the date provided.       Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Input("timeCreatedGreaterThanOrEqualTo")]
        public string? TimeCreatedGreaterThanOrEqualTo { get; set; }

        /// <summary>
        /// A filter that returns events that occurred on or before the date provided.       Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Input("timeCreatedLessThan")]
        public string? TimeCreatedLessThan { get; set; }

        [Input("types")]
        private List<string>? _types;

        /// <summary>
        /// A filter to return only resources whose type matches the given value.
        /// </summary>
        public List<string> Types
        {
            get => _types ?? (_types = new List<string>());
            set => _types = value;
        }

        public GetEventsArgs()
        {
        }
        public static new GetEventsArgs Empty => new GetEventsArgs();
    }

    public sealed class GetEventsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// The eventFingerprint of the KernelEventData.
        /// </summary>
        [Input("eventFingerprint")]
        public Input<string>? EventFingerprint { get; set; }

        /// <summary>
        /// A filter to return only events whose summary matches the given value.
        /// </summary>
        [Input("eventSummary")]
        public Input<string>? EventSummary { get; set; }

        /// <summary>
        /// A filter to return only events with a summary that contains the value provided.
        /// </summary>
        [Input("eventSummaryContains")]
        public Input<string>? EventSummaryContains { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetEventsFilterInputArgs>? _filters;
        public InputList<Inputs.GetEventsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetEventsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the event.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Indicates whether to list only resources managed by the Autonomous Linux service.
        /// </summary>
        [Input("isManagedByAutonomousLinux")]
        public Input<bool>? IsManagedByAutonomousLinux { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource. This filter returns resources associated with the specified resource.
        /// </summary>
        [Input("resourceId")]
        public Input<string>? ResourceId { get; set; }

        /// <summary>
        /// A filter to return only events that match the state provided. The state value is case-insensitive.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// A filter that returns events that occurred on or after the date provided.       Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Input("timeCreatedGreaterThanOrEqualTo")]
        public Input<string>? TimeCreatedGreaterThanOrEqualTo { get; set; }

        /// <summary>
        /// A filter that returns events that occurred on or before the date provided.       Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Input("timeCreatedLessThan")]
        public Input<string>? TimeCreatedLessThan { get; set; }

        [Input("types")]
        private InputList<string>? _types;

        /// <summary>
        /// A filter to return only resources whose type matches the given value.
        /// </summary>
        public InputList<string> Types
        {
            get => _types ?? (_types = new InputList<string>());
            set => _types = value;
        }

        public GetEventsInvokeArgs()
        {
        }
        public static new GetEventsInvokeArgs Empty => new GetEventsInvokeArgs();
    }


    [OutputType]
    public sealed class GetEventsResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// The list of event_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetEventsEventCollectionResult> EventCollections;
        /// <summary>
        /// Fingerprint of the event.
        /// </summary>
        public readonly string? EventFingerprint;
        /// <summary>
        /// Summary of the event.
        /// </summary>
        public readonly string? EventSummary;
        public readonly string? EventSummaryContains;
        public readonly ImmutableArray<Outputs.GetEventsFilterResult> Filters;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the event.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Indicates whether the event occurred on a resource that is managed by the Autonomous Linux service.
        /// </summary>
        public readonly bool? IsManagedByAutonomousLinux;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance or resource where the event occurred.
        /// </summary>
        public readonly string? ResourceId;
        /// <summary>
        /// The current state of the event.
        /// </summary>
        public readonly string? State;
        public readonly string? TimeCreatedGreaterThanOrEqualTo;
        public readonly string? TimeCreatedLessThan;
        /// <summary>
        /// Event type:
        /// * `KERNEL_OOPS` - Used to identify a kernel panic condition event
        /// * `KERNEL_CRASH` - Used to identify an internal fatal kernel error that cannot be safely recovered from
        /// * `EXPLOIT_ATTEMPT` - Used to identify a known exploit detection as identified by Ksplice
        /// * `SOFTWARE_UPDATE` - Software updates - Packages
        /// * `KSPLICE_UPDATE` - Ksplice updates
        /// * `SOFTWARE_SOURCE` - Software source
        /// * `AGENT` - Agent
        /// * `MANAGEMENT_STATION` - Management Station
        /// </summary>
        public readonly ImmutableArray<string> Types;

        [OutputConstructor]
        private GetEventsResult(
            string? compartmentId,

            ImmutableArray<Outputs.GetEventsEventCollectionResult> eventCollections,

            string? eventFingerprint,

            string? eventSummary,

            string? eventSummaryContains,

            ImmutableArray<Outputs.GetEventsFilterResult> filters,

            string? id,

            bool? isManagedByAutonomousLinux,

            string? resourceId,

            string? state,

            string? timeCreatedGreaterThanOrEqualTo,

            string? timeCreatedLessThan,

            ImmutableArray<string> types)
        {
            CompartmentId = compartmentId;
            EventCollections = eventCollections;
            EventFingerprint = eventFingerprint;
            EventSummary = eventSummary;
            EventSummaryContains = eventSummaryContains;
            Filters = filters;
            Id = id;
            IsManagedByAutonomousLinux = isManagedByAutonomousLinux;
            ResourceId = resourceId;
            State = state;
            TimeCreatedGreaterThanOrEqualTo = timeCreatedGreaterThanOrEqualTo;
            TimeCreatedLessThan = timeCreatedLessThan;
            Types = types;
        }
    }
}
