// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OsManagementHub
{
    public static class GetLifecycleEnvironments
    {
        /// <summary>
        /// This data source provides the list of Lifecycle Environments in Oracle Cloud Infrastructure Os Management Hub service.
        /// 
        /// Lists lifecycle environments that match the specified compartment or lifecycle environment OCID. Filter the list
        /// against a variety of criteria including but not limited to its name, status, architecture, and OS family.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testLifecycleEnvironments = Oci.OsManagementHub.GetLifecycleEnvironments.Invoke(new()
        ///     {
        ///         ArchType = lifecycleEnvironmentArchType,
        ///         CompartmentId = compartmentId,
        ///         DisplayNames = lifecycleEnvironmentDisplayName,
        ///         DisplayNameContains = lifecycleEnvironmentDisplayNameContains,
        ///         LifecycleEnvironmentId = testLifecycleEnvironment.Id,
        ///         Locations = lifecycleEnvironmentLocation,
        ///         LocationNotEqualTos = lifecycleEnvironmentLocationNotEqualTo,
        ///         OsFamily = lifecycleEnvironmentOsFamily,
        ///         State = lifecycleEnvironmentState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetLifecycleEnvironmentsResult> InvokeAsync(GetLifecycleEnvironmentsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLifecycleEnvironmentsResult>("oci:OsManagementHub/getLifecycleEnvironments:getLifecycleEnvironments", args ?? new GetLifecycleEnvironmentsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Lifecycle Environments in Oracle Cloud Infrastructure Os Management Hub service.
        /// 
        /// Lists lifecycle environments that match the specified compartment or lifecycle environment OCID. Filter the list
        /// against a variety of criteria including but not limited to its name, status, architecture, and OS family.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testLifecycleEnvironments = Oci.OsManagementHub.GetLifecycleEnvironments.Invoke(new()
        ///     {
        ///         ArchType = lifecycleEnvironmentArchType,
        ///         CompartmentId = compartmentId,
        ///         DisplayNames = lifecycleEnvironmentDisplayName,
        ///         DisplayNameContains = lifecycleEnvironmentDisplayNameContains,
        ///         LifecycleEnvironmentId = testLifecycleEnvironment.Id,
        ///         Locations = lifecycleEnvironmentLocation,
        ///         LocationNotEqualTos = lifecycleEnvironmentLocationNotEqualTo,
        ///         OsFamily = lifecycleEnvironmentOsFamily,
        ///         State = lifecycleEnvironmentState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetLifecycleEnvironmentsResult> Invoke(GetLifecycleEnvironmentsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLifecycleEnvironmentsResult>("oci:OsManagementHub/getLifecycleEnvironments:getLifecycleEnvironments", args ?? new GetLifecycleEnvironmentsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Lifecycle Environments in Oracle Cloud Infrastructure Os Management Hub service.
        /// 
        /// Lists lifecycle environments that match the specified compartment or lifecycle environment OCID. Filter the list
        /// against a variety of criteria including but not limited to its name, status, architecture, and OS family.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testLifecycleEnvironments = Oci.OsManagementHub.GetLifecycleEnvironments.Invoke(new()
        ///     {
        ///         ArchType = lifecycleEnvironmentArchType,
        ///         CompartmentId = compartmentId,
        ///         DisplayNames = lifecycleEnvironmentDisplayName,
        ///         DisplayNameContains = lifecycleEnvironmentDisplayNameContains,
        ///         LifecycleEnvironmentId = testLifecycleEnvironment.Id,
        ///         Locations = lifecycleEnvironmentLocation,
        ///         LocationNotEqualTos = lifecycleEnvironmentLocationNotEqualTo,
        ///         OsFamily = lifecycleEnvironmentOsFamily,
        ///         State = lifecycleEnvironmentState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetLifecycleEnvironmentsResult> Invoke(GetLifecycleEnvironmentsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetLifecycleEnvironmentsResult>("oci:OsManagementHub/getLifecycleEnvironments:getLifecycleEnvironments", args ?? new GetLifecycleEnvironmentsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLifecycleEnvironmentsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A filter to return only profiles that match the given archType.
        /// </summary>
        [Input("archType")]
        public string? ArchType { get; set; }

        /// <summary>
        /// (Updatable) The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return resources that may partially match the given display name.
        /// </summary>
        [Input("displayNameContains")]
        public string? DisplayNameContains { get; set; }

        [Input("displayNames")]
        private List<string>? _displayNames;

        /// <summary>
        /// A filter to return resources that match the given display names.
        /// </summary>
        public List<string> DisplayNames
        {
            get => _displayNames ?? (_displayNames = new List<string>());
            set => _displayNames = value;
        }

        [Input("filters")]
        private List<Inputs.GetLifecycleEnvironmentsFilterArgs>? _filters;
        public List<Inputs.GetLifecycleEnvironmentsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetLifecycleEnvironmentsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the lifecycle environment.
        /// </summary>
        [Input("lifecycleEnvironmentId")]
        public string? LifecycleEnvironmentId { get; set; }

        [Input("locationNotEqualTos")]
        private List<string>? _locationNotEqualTos;

        /// <summary>
        /// A filter to return only resources whose location does not match the given value.
        /// </summary>
        public List<string> LocationNotEqualTos
        {
            get => _locationNotEqualTos ?? (_locationNotEqualTos = new List<string>());
            set => _locationNotEqualTos = value;
        }

        [Input("locations")]
        private List<string>? _locations;

        /// <summary>
        /// A filter to return only resources whose location matches the given value.
        /// </summary>
        public List<string> Locations
        {
            get => _locations ?? (_locations = new List<string>());
            set => _locations = value;
        }

        /// <summary>
        /// A filter to return only resources that match the given operating system family.
        /// </summary>
        [Input("osFamily")]
        public string? OsFamily { get; set; }

        /// <summary>
        /// A filter to return only the lifecycle environments that match the display name given.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetLifecycleEnvironmentsArgs()
        {
        }
        public static new GetLifecycleEnvironmentsArgs Empty => new GetLifecycleEnvironmentsArgs();
    }

    public sealed class GetLifecycleEnvironmentsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A filter to return only profiles that match the given archType.
        /// </summary>
        [Input("archType")]
        public Input<string>? ArchType { get; set; }

        /// <summary>
        /// (Updatable) The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return resources that may partially match the given display name.
        /// </summary>
        [Input("displayNameContains")]
        public Input<string>? DisplayNameContains { get; set; }

        [Input("displayNames")]
        private InputList<string>? _displayNames;

        /// <summary>
        /// A filter to return resources that match the given display names.
        /// </summary>
        public InputList<string> DisplayNames
        {
            get => _displayNames ?? (_displayNames = new InputList<string>());
            set => _displayNames = value;
        }

        [Input("filters")]
        private InputList<Inputs.GetLifecycleEnvironmentsFilterInputArgs>? _filters;
        public InputList<Inputs.GetLifecycleEnvironmentsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetLifecycleEnvironmentsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the lifecycle environment.
        /// </summary>
        [Input("lifecycleEnvironmentId")]
        public Input<string>? LifecycleEnvironmentId { get; set; }

        [Input("locationNotEqualTos")]
        private InputList<string>? _locationNotEqualTos;

        /// <summary>
        /// A filter to return only resources whose location does not match the given value.
        /// </summary>
        public InputList<string> LocationNotEqualTos
        {
            get => _locationNotEqualTos ?? (_locationNotEqualTos = new InputList<string>());
            set => _locationNotEqualTos = value;
        }

        [Input("locations")]
        private InputList<string>? _locations;

        /// <summary>
        /// A filter to return only resources whose location matches the given value.
        /// </summary>
        public InputList<string> Locations
        {
            get => _locations ?? (_locations = new InputList<string>());
            set => _locations = value;
        }

        /// <summary>
        /// A filter to return only resources that match the given operating system family.
        /// </summary>
        [Input("osFamily")]
        public Input<string>? OsFamily { get; set; }

        /// <summary>
        /// A filter to return only the lifecycle environments that match the display name given.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetLifecycleEnvironmentsInvokeArgs()
        {
        }
        public static new GetLifecycleEnvironmentsInvokeArgs Empty => new GetLifecycleEnvironmentsInvokeArgs();
    }


    [OutputType]
    public sealed class GetLifecycleEnvironmentsResult
    {
        /// <summary>
        /// The CPU architecture of the managed instances in the lifecycle stage.
        /// </summary>
        public readonly string? ArchType;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the lifecycle stage.
        /// </summary>
        public readonly string? CompartmentId;
        public readonly string? DisplayNameContains;
        /// <summary>
        /// Software source name.
        /// </summary>
        public readonly ImmutableArray<string> DisplayNames;
        public readonly ImmutableArray<Outputs.GetLifecycleEnvironmentsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of lifecycle_environment_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetLifecycleEnvironmentsLifecycleEnvironmentCollectionResult> LifecycleEnvironmentCollections;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the lifecycle environment that contains the lifecycle stage.
        /// </summary>
        public readonly string? LifecycleEnvironmentId;
        public readonly ImmutableArray<string> LocationNotEqualTos;
        /// <summary>
        /// The location of managed instances associated with the lifecycle stage.
        /// </summary>
        public readonly ImmutableArray<string> Locations;
        /// <summary>
        /// The operating system of the managed instances in the lifecycle stage.
        /// </summary>
        public readonly string? OsFamily;
        /// <summary>
        /// The current state of the lifecycle environment.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetLifecycleEnvironmentsResult(
            string? archType,

            string? compartmentId,

            string? displayNameContains,

            ImmutableArray<string> displayNames,

            ImmutableArray<Outputs.GetLifecycleEnvironmentsFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetLifecycleEnvironmentsLifecycleEnvironmentCollectionResult> lifecycleEnvironmentCollections,

            string? lifecycleEnvironmentId,

            ImmutableArray<string> locationNotEqualTos,

            ImmutableArray<string> locations,

            string? osFamily,

            string? state)
        {
            ArchType = archType;
            CompartmentId = compartmentId;
            DisplayNameContains = displayNameContains;
            DisplayNames = displayNames;
            Filters = filters;
            Id = id;
            LifecycleEnvironmentCollections = lifecycleEnvironmentCollections;
            LifecycleEnvironmentId = lifecycleEnvironmentId;
            LocationNotEqualTos = locationNotEqualTos;
            Locations = locations;
            OsFamily = osFamily;
            State = state;
        }
    }
}
