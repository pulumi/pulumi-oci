// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OsManagementHub
{
    public static class GetManagedInstanceGroupAvailableModules
    {
        /// <summary>
        /// This data source provides the list of Managed Instance Group Available Modules in Oracle Cloud Infrastructure Os Management Hub service.
        /// 
        /// Lists available modules that for the specified managed instance group. Filter the list against a variety of 
        /// criteria including but not limited to its name.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedInstanceGroupAvailableModules = Oci.OsManagementHub.GetManagedInstanceGroupAvailableModules.Invoke(new()
        ///     {
        ///         ManagedInstanceGroupId = testManagedInstanceGroup.Id,
        ///         CompartmentId = compartmentId,
        ///         Name = managedInstanceGroupAvailableModuleName,
        ///         NameContains = managedInstanceGroupAvailableModuleNameContains,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetManagedInstanceGroupAvailableModulesResult> InvokeAsync(GetManagedInstanceGroupAvailableModulesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetManagedInstanceGroupAvailableModulesResult>("oci:OsManagementHub/getManagedInstanceGroupAvailableModules:getManagedInstanceGroupAvailableModules", args ?? new GetManagedInstanceGroupAvailableModulesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Managed Instance Group Available Modules in Oracle Cloud Infrastructure Os Management Hub service.
        /// 
        /// Lists available modules that for the specified managed instance group. Filter the list against a variety of 
        /// criteria including but not limited to its name.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedInstanceGroupAvailableModules = Oci.OsManagementHub.GetManagedInstanceGroupAvailableModules.Invoke(new()
        ///     {
        ///         ManagedInstanceGroupId = testManagedInstanceGroup.Id,
        ///         CompartmentId = compartmentId,
        ///         Name = managedInstanceGroupAvailableModuleName,
        ///         NameContains = managedInstanceGroupAvailableModuleNameContains,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetManagedInstanceGroupAvailableModulesResult> Invoke(GetManagedInstanceGroupAvailableModulesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedInstanceGroupAvailableModulesResult>("oci:OsManagementHub/getManagedInstanceGroupAvailableModules:getManagedInstanceGroupAvailableModules", args ?? new GetManagedInstanceGroupAvailableModulesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagedInstanceGroupAvailableModulesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment that contains the resources to list.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        [Input("filters")]
        private List<Inputs.GetManagedInstanceGroupAvailableModulesFilterArgs>? _filters;
        public List<Inputs.GetManagedInstanceGroupAvailableModulesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetManagedInstanceGroupAvailableModulesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The managed instance group OCID.
        /// </summary>
        [Input("managedInstanceGroupId", required: true)]
        public string ManagedInstanceGroupId { get; set; } = null!;

        /// <summary>
        /// The resource name.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// A filter to return resources that may partially match the name given.
        /// </summary>
        [Input("nameContains")]
        public string? NameContains { get; set; }

        public GetManagedInstanceGroupAvailableModulesArgs()
        {
        }
        public static new GetManagedInstanceGroupAvailableModulesArgs Empty => new GetManagedInstanceGroupAvailableModulesArgs();
    }

    public sealed class GetManagedInstanceGroupAvailableModulesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment that contains the resources to list.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetManagedInstanceGroupAvailableModulesFilterInputArgs>? _filters;
        public InputList<Inputs.GetManagedInstanceGroupAvailableModulesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetManagedInstanceGroupAvailableModulesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The managed instance group OCID.
        /// </summary>
        [Input("managedInstanceGroupId", required: true)]
        public Input<string> ManagedInstanceGroupId { get; set; } = null!;

        /// <summary>
        /// The resource name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A filter to return resources that may partially match the name given.
        /// </summary>
        [Input("nameContains")]
        public Input<string>? NameContains { get; set; }

        public GetManagedInstanceGroupAvailableModulesInvokeArgs()
        {
        }
        public static new GetManagedInstanceGroupAvailableModulesInvokeArgs Empty => new GetManagedInstanceGroupAvailableModulesInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagedInstanceGroupAvailableModulesResult
    {
        public readonly string? CompartmentId;
        public readonly ImmutableArray<Outputs.GetManagedInstanceGroupAvailableModulesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of managed_instance_group_available_module_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionResult> ManagedInstanceGroupAvailableModuleCollections;
        public readonly string ManagedInstanceGroupId;
        /// <summary>
        /// The name of the module that is available to be enabled on the managed instance group.
        /// </summary>
        public readonly string? Name;
        public readonly string? NameContains;

        [OutputConstructor]
        private GetManagedInstanceGroupAvailableModulesResult(
            string? compartmentId,

            ImmutableArray<Outputs.GetManagedInstanceGroupAvailableModulesFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionResult> managedInstanceGroupAvailableModuleCollections,

            string managedInstanceGroupId,

            string? name,

            string? nameContains)
        {
            CompartmentId = compartmentId;
            Filters = filters;
            Id = id;
            ManagedInstanceGroupAvailableModuleCollections = managedInstanceGroupAvailableModuleCollections;
            ManagedInstanceGroupId = managedInstanceGroupId;
            Name = name;
            NameContains = nameContains;
        }
    }
}
