// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OsManagementHub
{
    public static class GetManagedInstanceGroupAvailablePackages
    {
        /// <summary>
        /// This data source provides the list of Managed Instance Group Available Packages in Oracle Cloud Infrastructure Os Management Hub service.
        /// 
        /// Lists available packages on the specified managed instances group. Filter the list against a variety 
        /// of criteria including but not limited to the package name.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedInstanceGroupAvailablePackages = Oci.OsManagementHub.GetManagedInstanceGroupAvailablePackages.Invoke(new()
        ///     {
        ///         ManagedInstanceGroupId = testManagedInstanceGroup.Id,
        ///         CompartmentId = compartmentId,
        ///         DisplayNames = managedInstanceGroupAvailablePackageDisplayName,
        ///         DisplayNameContains = managedInstanceGroupAvailablePackageDisplayNameContains,
        ///         IsLatest = managedInstanceGroupAvailablePackageIsLatest,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetManagedInstanceGroupAvailablePackagesResult> InvokeAsync(GetManagedInstanceGroupAvailablePackagesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetManagedInstanceGroupAvailablePackagesResult>("oci:OsManagementHub/getManagedInstanceGroupAvailablePackages:getManagedInstanceGroupAvailablePackages", args ?? new GetManagedInstanceGroupAvailablePackagesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Managed Instance Group Available Packages in Oracle Cloud Infrastructure Os Management Hub service.
        /// 
        /// Lists available packages on the specified managed instances group. Filter the list against a variety 
        /// of criteria including but not limited to the package name.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedInstanceGroupAvailablePackages = Oci.OsManagementHub.GetManagedInstanceGroupAvailablePackages.Invoke(new()
        ///     {
        ///         ManagedInstanceGroupId = testManagedInstanceGroup.Id,
        ///         CompartmentId = compartmentId,
        ///         DisplayNames = managedInstanceGroupAvailablePackageDisplayName,
        ///         DisplayNameContains = managedInstanceGroupAvailablePackageDisplayNameContains,
        ///         IsLatest = managedInstanceGroupAvailablePackageIsLatest,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetManagedInstanceGroupAvailablePackagesResult> Invoke(GetManagedInstanceGroupAvailablePackagesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedInstanceGroupAvailablePackagesResult>("oci:OsManagementHub/getManagedInstanceGroupAvailablePackages:getManagedInstanceGroupAvailablePackages", args ?? new GetManagedInstanceGroupAvailablePackagesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagedInstanceGroupAvailablePackagesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment that contains the resources to list.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return resources that may partially match the given display name.
        /// </summary>
        [Input("displayNameContains")]
        public string? DisplayNameContains { get; set; }

        [Input("displayNames")]
        private List<string>? _displayNames;

        /// <summary>
        /// A filter to return resources that match the given display names.
        /// </summary>
        public List<string> DisplayNames
        {
            get => _displayNames ?? (_displayNames = new List<string>());
            set => _displayNames = value;
        }

        [Input("filters")]
        private List<Inputs.GetManagedInstanceGroupAvailablePackagesFilterArgs>? _filters;
        public List<Inputs.GetManagedInstanceGroupAvailablePackagesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetManagedInstanceGroupAvailablePackagesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A boolean variable that is used to list only the latest versions of packages, module streams, and stream profiles when set to true. All packages, module streams, and stream profiles are returned when set to false.
        /// </summary>
        [Input("isLatest")]
        public bool? IsLatest { get; set; }

        /// <summary>
        /// The managed instance group OCID.
        /// </summary>
        [Input("managedInstanceGroupId", required: true)]
        public string ManagedInstanceGroupId { get; set; } = null!;

        public GetManagedInstanceGroupAvailablePackagesArgs()
        {
        }
        public static new GetManagedInstanceGroupAvailablePackagesArgs Empty => new GetManagedInstanceGroupAvailablePackagesArgs();
    }

    public sealed class GetManagedInstanceGroupAvailablePackagesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment that contains the resources to list.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return resources that may partially match the given display name.
        /// </summary>
        [Input("displayNameContains")]
        public Input<string>? DisplayNameContains { get; set; }

        [Input("displayNames")]
        private InputList<string>? _displayNames;

        /// <summary>
        /// A filter to return resources that match the given display names.
        /// </summary>
        public InputList<string> DisplayNames
        {
            get => _displayNames ?? (_displayNames = new InputList<string>());
            set => _displayNames = value;
        }

        [Input("filters")]
        private InputList<Inputs.GetManagedInstanceGroupAvailablePackagesFilterInputArgs>? _filters;
        public InputList<Inputs.GetManagedInstanceGroupAvailablePackagesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetManagedInstanceGroupAvailablePackagesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A boolean variable that is used to list only the latest versions of packages, module streams, and stream profiles when set to true. All packages, module streams, and stream profiles are returned when set to false.
        /// </summary>
        [Input("isLatest")]
        public Input<bool>? IsLatest { get; set; }

        /// <summary>
        /// The managed instance group OCID.
        /// </summary>
        [Input("managedInstanceGroupId", required: true)]
        public Input<string> ManagedInstanceGroupId { get; set; } = null!;

        public GetManagedInstanceGroupAvailablePackagesInvokeArgs()
        {
        }
        public static new GetManagedInstanceGroupAvailablePackagesInvokeArgs Empty => new GetManagedInstanceGroupAvailablePackagesInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagedInstanceGroupAvailablePackagesResult
    {
        public readonly string? CompartmentId;
        public readonly string? DisplayNameContains;
        /// <summary>
        /// Software source name.
        /// </summary>
        public readonly ImmutableArray<string> DisplayNames;
        public readonly ImmutableArray<Outputs.GetManagedInstanceGroupAvailablePackagesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Flag to return only latest package versions.
        /// </summary>
        public readonly bool? IsLatest;
        /// <summary>
        /// The list of managed_instance_group_available_package_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionResult> ManagedInstanceGroupAvailablePackageCollections;
        public readonly string ManagedInstanceGroupId;

        [OutputConstructor]
        private GetManagedInstanceGroupAvailablePackagesResult(
            string? compartmentId,

            string? displayNameContains,

            ImmutableArray<string> displayNames,

            ImmutableArray<Outputs.GetManagedInstanceGroupAvailablePackagesFilterResult> filters,

            string id,

            bool? isLatest,

            ImmutableArray<Outputs.GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionResult> managedInstanceGroupAvailablePackageCollections,

            string managedInstanceGroupId)
        {
            CompartmentId = compartmentId;
            DisplayNameContains = displayNameContains;
            DisplayNames = displayNames;
            Filters = filters;
            Id = id;
            IsLatest = isLatest;
            ManagedInstanceGroupAvailablePackageCollections = managedInstanceGroupAvailablePackageCollections;
            ManagedInstanceGroupId = managedInstanceGroupId;
        }
    }
}
