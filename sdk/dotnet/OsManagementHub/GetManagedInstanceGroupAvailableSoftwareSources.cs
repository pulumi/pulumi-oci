// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OsManagementHub
{
    public static class GetManagedInstanceGroupAvailableSoftwareSources
    {
        /// <summary>
        /// This data source provides the list of Managed Instance Group Available Software Sources in Oracle Cloud Infrastructure Os Management Hub service.
        /// 
        /// Lists available software sources for a specified managed instance group. Filter the list against a variety of 
        /// criteria including but not limited to its name.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedInstanceGroupAvailableSoftwareSources = Oci.OsManagementHub.GetManagedInstanceGroupAvailableSoftwareSources.Invoke(new()
        ///     {
        ///         ManagedInstanceGroupId = testManagedInstanceGroup.Id,
        ///         CompartmentId = compartmentId,
        ///         DisplayNames = managedInstanceGroupAvailableSoftwareSourceDisplayName,
        ///         DisplayNameContains = managedInstanceGroupAvailableSoftwareSourceDisplayNameContains,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetManagedInstanceGroupAvailableSoftwareSourcesResult> InvokeAsync(GetManagedInstanceGroupAvailableSoftwareSourcesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetManagedInstanceGroupAvailableSoftwareSourcesResult>("oci:OsManagementHub/getManagedInstanceGroupAvailableSoftwareSources:getManagedInstanceGroupAvailableSoftwareSources", args ?? new GetManagedInstanceGroupAvailableSoftwareSourcesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Managed Instance Group Available Software Sources in Oracle Cloud Infrastructure Os Management Hub service.
        /// 
        /// Lists available software sources for a specified managed instance group. Filter the list against a variety of 
        /// criteria including but not limited to its name.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedInstanceGroupAvailableSoftwareSources = Oci.OsManagementHub.GetManagedInstanceGroupAvailableSoftwareSources.Invoke(new()
        ///     {
        ///         ManagedInstanceGroupId = testManagedInstanceGroup.Id,
        ///         CompartmentId = compartmentId,
        ///         DisplayNames = managedInstanceGroupAvailableSoftwareSourceDisplayName,
        ///         DisplayNameContains = managedInstanceGroupAvailableSoftwareSourceDisplayNameContains,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetManagedInstanceGroupAvailableSoftwareSourcesResult> Invoke(GetManagedInstanceGroupAvailableSoftwareSourcesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedInstanceGroupAvailableSoftwareSourcesResult>("oci:OsManagementHub/getManagedInstanceGroupAvailableSoftwareSources:getManagedInstanceGroupAvailableSoftwareSources", args ?? new GetManagedInstanceGroupAvailableSoftwareSourcesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagedInstanceGroupAvailableSoftwareSourcesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment that contains the resources to list.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return resources that may partially match the given display name.
        /// </summary>
        [Input("displayNameContains")]
        public string? DisplayNameContains { get; set; }

        [Input("displayNames")]
        private List<string>? _displayNames;

        /// <summary>
        /// A filter to return resources that match the given display names.
        /// </summary>
        public List<string> DisplayNames
        {
            get => _displayNames ?? (_displayNames = new List<string>());
            set => _displayNames = value;
        }

        [Input("filters")]
        private List<Inputs.GetManagedInstanceGroupAvailableSoftwareSourcesFilterArgs>? _filters;
        public List<Inputs.GetManagedInstanceGroupAvailableSoftwareSourcesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetManagedInstanceGroupAvailableSoftwareSourcesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The managed instance group OCID.
        /// </summary>
        [Input("managedInstanceGroupId", required: true)]
        public string ManagedInstanceGroupId { get; set; } = null!;

        public GetManagedInstanceGroupAvailableSoftwareSourcesArgs()
        {
        }
        public static new GetManagedInstanceGroupAvailableSoftwareSourcesArgs Empty => new GetManagedInstanceGroupAvailableSoftwareSourcesArgs();
    }

    public sealed class GetManagedInstanceGroupAvailableSoftwareSourcesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment that contains the resources to list.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return resources that may partially match the given display name.
        /// </summary>
        [Input("displayNameContains")]
        public Input<string>? DisplayNameContains { get; set; }

        [Input("displayNames")]
        private InputList<string>? _displayNames;

        /// <summary>
        /// A filter to return resources that match the given display names.
        /// </summary>
        public InputList<string> DisplayNames
        {
            get => _displayNames ?? (_displayNames = new InputList<string>());
            set => _displayNames = value;
        }

        [Input("filters")]
        private InputList<Inputs.GetManagedInstanceGroupAvailableSoftwareSourcesFilterInputArgs>? _filters;
        public InputList<Inputs.GetManagedInstanceGroupAvailableSoftwareSourcesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetManagedInstanceGroupAvailableSoftwareSourcesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The managed instance group OCID.
        /// </summary>
        [Input("managedInstanceGroupId", required: true)]
        public Input<string> ManagedInstanceGroupId { get; set; } = null!;

        public GetManagedInstanceGroupAvailableSoftwareSourcesInvokeArgs()
        {
        }
        public static new GetManagedInstanceGroupAvailableSoftwareSourcesInvokeArgs Empty => new GetManagedInstanceGroupAvailableSoftwareSourcesInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagedInstanceGroupAvailableSoftwareSourcesResult
    {
        /// <summary>
        /// The list of available_software_source_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionResult> AvailableSoftwareSourceCollections;
        /// <summary>
        /// The OCID for the compartment.
        /// </summary>
        public readonly string? CompartmentId;
        public readonly string? DisplayNameContains;
        /// <summary>
        /// User friendly name for the software source.
        /// </summary>
        public readonly ImmutableArray<string> DisplayNames;
        public readonly ImmutableArray<Outputs.GetManagedInstanceGroupAvailableSoftwareSourcesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string ManagedInstanceGroupId;

        [OutputConstructor]
        private GetManagedInstanceGroupAvailableSoftwareSourcesResult(
            ImmutableArray<Outputs.GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionResult> availableSoftwareSourceCollections,

            string? compartmentId,

            string? displayNameContains,

            ImmutableArray<string> displayNames,

            ImmutableArray<Outputs.GetManagedInstanceGroupAvailableSoftwareSourcesFilterResult> filters,

            string id,

            string managedInstanceGroupId)
        {
            AvailableSoftwareSourceCollections = availableSoftwareSourceCollections;
            CompartmentId = compartmentId;
            DisplayNameContains = displayNameContains;
            DisplayNames = displayNames;
            Filters = filters;
            Id = id;
            ManagedInstanceGroupId = managedInstanceGroupId;
        }
    }
}
