// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OsManagementHub
{
    public static class GetManagedInstanceGroupInstalledPackages
    {
        /// <summary>
        /// This data source provides the list of Managed Instance Group Installed Packages in Oracle Cloud Infrastructure Os Management Hub service.
        /// 
        /// Lists installed packages on the specified managed instances group. Filter the list against a variety 
        /// of criteria including but not limited to the package name.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedInstanceGroupInstalledPackages = Oci.OsManagementHub.GetManagedInstanceGroupInstalledPackages.Invoke(new()
        ///     {
        ///         ManagedInstanceGroupId = testManagedInstanceGroup.Id,
        ///         CompartmentId = compartmentId,
        ///         DisplayNames = managedInstanceGroupInstalledPackageDisplayName,
        ///         DisplayNameContains = managedInstanceGroupInstalledPackageDisplayNameContains,
        ///         TimeInstallDateEnd = managedInstanceGroupInstalledPackageTimeInstallDateEnd,
        ///         TimeInstallDateStart = managedInstanceGroupInstalledPackageTimeInstallDateStart,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetManagedInstanceGroupInstalledPackagesResult> InvokeAsync(GetManagedInstanceGroupInstalledPackagesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetManagedInstanceGroupInstalledPackagesResult>("oci:OsManagementHub/getManagedInstanceGroupInstalledPackages:getManagedInstanceGroupInstalledPackages", args ?? new GetManagedInstanceGroupInstalledPackagesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Managed Instance Group Installed Packages in Oracle Cloud Infrastructure Os Management Hub service.
        /// 
        /// Lists installed packages on the specified managed instances group. Filter the list against a variety 
        /// of criteria including but not limited to the package name.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedInstanceGroupInstalledPackages = Oci.OsManagementHub.GetManagedInstanceGroupInstalledPackages.Invoke(new()
        ///     {
        ///         ManagedInstanceGroupId = testManagedInstanceGroup.Id,
        ///         CompartmentId = compartmentId,
        ///         DisplayNames = managedInstanceGroupInstalledPackageDisplayName,
        ///         DisplayNameContains = managedInstanceGroupInstalledPackageDisplayNameContains,
        ///         TimeInstallDateEnd = managedInstanceGroupInstalledPackageTimeInstallDateEnd,
        ///         TimeInstallDateStart = managedInstanceGroupInstalledPackageTimeInstallDateStart,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetManagedInstanceGroupInstalledPackagesResult> Invoke(GetManagedInstanceGroupInstalledPackagesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedInstanceGroupInstalledPackagesResult>("oci:OsManagementHub/getManagedInstanceGroupInstalledPackages:getManagedInstanceGroupInstalledPackages", args ?? new GetManagedInstanceGroupInstalledPackagesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Managed Instance Group Installed Packages in Oracle Cloud Infrastructure Os Management Hub service.
        /// 
        /// Lists installed packages on the specified managed instances group. Filter the list against a variety 
        /// of criteria including but not limited to the package name.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedInstanceGroupInstalledPackages = Oci.OsManagementHub.GetManagedInstanceGroupInstalledPackages.Invoke(new()
        ///     {
        ///         ManagedInstanceGroupId = testManagedInstanceGroup.Id,
        ///         CompartmentId = compartmentId,
        ///         DisplayNames = managedInstanceGroupInstalledPackageDisplayName,
        ///         DisplayNameContains = managedInstanceGroupInstalledPackageDisplayNameContains,
        ///         TimeInstallDateEnd = managedInstanceGroupInstalledPackageTimeInstallDateEnd,
        ///         TimeInstallDateStart = managedInstanceGroupInstalledPackageTimeInstallDateStart,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetManagedInstanceGroupInstalledPackagesResult> Invoke(GetManagedInstanceGroupInstalledPackagesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedInstanceGroupInstalledPackagesResult>("oci:OsManagementHub/getManagedInstanceGroupInstalledPackages:getManagedInstanceGroupInstalledPackages", args ?? new GetManagedInstanceGroupInstalledPackagesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagedInstanceGroupInstalledPackagesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return resources that may partially match the given display name.
        /// </summary>
        [Input("displayNameContains")]
        public string? DisplayNameContains { get; set; }

        [Input("displayNames")]
        private List<string>? _displayNames;

        /// <summary>
        /// A filter to return resources that match the given display names.
        /// </summary>
        public List<string> DisplayNames
        {
            get => _displayNames ?? (_displayNames = new List<string>());
            set => _displayNames = value;
        }

        [Input("filters")]
        private List<Inputs.GetManagedInstanceGroupInstalledPackagesFilterArgs>? _filters;
        public List<Inputs.GetManagedInstanceGroupInstalledPackagesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetManagedInstanceGroupInstalledPackagesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group.
        /// </summary>
        [Input("managedInstanceGroupId", required: true)]
        public string ManagedInstanceGroupId { get; set; } = null!;

        /// <summary>
        /// A filter to return only packages that were installed on or before the date provided, in ISO 8601 format.  Example: 2017-07-14T02:40:00.000Z
        /// </summary>
        [Input("timeInstallDateEnd")]
        public string? TimeInstallDateEnd { get; set; }

        /// <summary>
        /// The install date after which to list all packages, in ISO 8601 format  Example: 2017-07-14T02:40:00.000Z
        /// </summary>
        [Input("timeInstallDateStart")]
        public string? TimeInstallDateStart { get; set; }

        public GetManagedInstanceGroupInstalledPackagesArgs()
        {
        }
        public static new GetManagedInstanceGroupInstalledPackagesArgs Empty => new GetManagedInstanceGroupInstalledPackagesArgs();
    }

    public sealed class GetManagedInstanceGroupInstalledPackagesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return resources that may partially match the given display name.
        /// </summary>
        [Input("displayNameContains")]
        public Input<string>? DisplayNameContains { get; set; }

        [Input("displayNames")]
        private InputList<string>? _displayNames;

        /// <summary>
        /// A filter to return resources that match the given display names.
        /// </summary>
        public InputList<string> DisplayNames
        {
            get => _displayNames ?? (_displayNames = new InputList<string>());
            set => _displayNames = value;
        }

        [Input("filters")]
        private InputList<Inputs.GetManagedInstanceGroupInstalledPackagesFilterInputArgs>? _filters;
        public InputList<Inputs.GetManagedInstanceGroupInstalledPackagesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetManagedInstanceGroupInstalledPackagesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group.
        /// </summary>
        [Input("managedInstanceGroupId", required: true)]
        public Input<string> ManagedInstanceGroupId { get; set; } = null!;

        /// <summary>
        /// A filter to return only packages that were installed on or before the date provided, in ISO 8601 format.  Example: 2017-07-14T02:40:00.000Z
        /// </summary>
        [Input("timeInstallDateEnd")]
        public Input<string>? TimeInstallDateEnd { get; set; }

        /// <summary>
        /// The install date after which to list all packages, in ISO 8601 format  Example: 2017-07-14T02:40:00.000Z
        /// </summary>
        [Input("timeInstallDateStart")]
        public Input<string>? TimeInstallDateStart { get; set; }

        public GetManagedInstanceGroupInstalledPackagesInvokeArgs()
        {
        }
        public static new GetManagedInstanceGroupInstalledPackagesInvokeArgs Empty => new GetManagedInstanceGroupInstalledPackagesInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagedInstanceGroupInstalledPackagesResult
    {
        public readonly string? CompartmentId;
        public readonly string? DisplayNameContains;
        public readonly ImmutableArray<string> DisplayNames;
        public readonly ImmutableArray<Outputs.GetManagedInstanceGroupInstalledPackagesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string ManagedInstanceGroupId;
        /// <summary>
        /// The list of managed_instance_group_installed_package_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetManagedInstanceGroupInstalledPackagesManagedInstanceGroupInstalledPackageCollectionResult> ManagedInstanceGroupInstalledPackageCollections;
        public readonly string? TimeInstallDateEnd;
        public readonly string? TimeInstallDateStart;

        [OutputConstructor]
        private GetManagedInstanceGroupInstalledPackagesResult(
            string? compartmentId,

            string? displayNameContains,

            ImmutableArray<string> displayNames,

            ImmutableArray<Outputs.GetManagedInstanceGroupInstalledPackagesFilterResult> filters,

            string id,

            string managedInstanceGroupId,

            ImmutableArray<Outputs.GetManagedInstanceGroupInstalledPackagesManagedInstanceGroupInstalledPackageCollectionResult> managedInstanceGroupInstalledPackageCollections,

            string? timeInstallDateEnd,

            string? timeInstallDateStart)
        {
            CompartmentId = compartmentId;
            DisplayNameContains = displayNameContains;
            DisplayNames = displayNames;
            Filters = filters;
            Id = id;
            ManagedInstanceGroupId = managedInstanceGroupId;
            ManagedInstanceGroupInstalledPackageCollections = managedInstanceGroupInstalledPackageCollections;
            TimeInstallDateEnd = timeInstallDateEnd;
            TimeInstallDateStart = timeInstallDateStart;
        }
    }
}
