// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OsManagementHub
{
    public static class GetManagedInstanceGroupModules
    {
        /// <summary>
        /// This data source provides the list of Managed Instance Group Modules in Oracle Cloud Infrastructure Os Management Hub service.
        /// 
        /// Retrieve a list of module streams, along with a summary of their
        /// status, from a managed instance group.  Filters may be applied to select
        /// a subset of module streams based on the filter criteria.
        /// 
        /// The 'moduleName' attribute filters against the name of a module.
        /// It accepts strings of the format "&lt;module&gt;".  If this attribute
        /// is defined, only streams that belong to the specified module are
        /// included in the result set.  If it is not defined, the request is
        /// not subject to this filter.
        /// 
        /// The "status" attribute filters against the state of a module stream.
        /// Valid values are "ENABLED", "DISABLED", and "ACTIVE".  If the
        /// attribute is set to "ENABLED", only module streams that are enabled
        /// are included in the result set.  If the attribute is set to "DISABLED",
        /// only module streams that are not enabled are included in the result
        /// set.  If the attribute is set to "ACTIVE", only module streams that
        /// are active are included in the result set.  If the attribute is not
        /// defined, the request is not subject to this filter.
        /// 
        /// When sorting by the display name, the result set is sorted first
        /// by the module name and then by the stream name.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedInstanceGroupModules = Oci.OsManagementHub.GetManagedInstanceGroupModules.Invoke(new()
        ///     {
        ///         ManagedInstanceGroupId = testManagedInstanceGroup.Id,
        ///         CompartmentId = compartmentId,
        ///         Name = managedInstanceGroupModuleName,
        ///         NameContains = managedInstanceGroupModuleNameContains,
        ///         StreamName = testStream.Name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetManagedInstanceGroupModulesResult> InvokeAsync(GetManagedInstanceGroupModulesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetManagedInstanceGroupModulesResult>("oci:OsManagementHub/getManagedInstanceGroupModules:getManagedInstanceGroupModules", args ?? new GetManagedInstanceGroupModulesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Managed Instance Group Modules in Oracle Cloud Infrastructure Os Management Hub service.
        /// 
        /// Retrieve a list of module streams, along with a summary of their
        /// status, from a managed instance group.  Filters may be applied to select
        /// a subset of module streams based on the filter criteria.
        /// 
        /// The 'moduleName' attribute filters against the name of a module.
        /// It accepts strings of the format "&lt;module&gt;".  If this attribute
        /// is defined, only streams that belong to the specified module are
        /// included in the result set.  If it is not defined, the request is
        /// not subject to this filter.
        /// 
        /// The "status" attribute filters against the state of a module stream.
        /// Valid values are "ENABLED", "DISABLED", and "ACTIVE".  If the
        /// attribute is set to "ENABLED", only module streams that are enabled
        /// are included in the result set.  If the attribute is set to "DISABLED",
        /// only module streams that are not enabled are included in the result
        /// set.  If the attribute is set to "ACTIVE", only module streams that
        /// are active are included in the result set.  If the attribute is not
        /// defined, the request is not subject to this filter.
        /// 
        /// When sorting by the display name, the result set is sorted first
        /// by the module name and then by the stream name.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedInstanceGroupModules = Oci.OsManagementHub.GetManagedInstanceGroupModules.Invoke(new()
        ///     {
        ///         ManagedInstanceGroupId = testManagedInstanceGroup.Id,
        ///         CompartmentId = compartmentId,
        ///         Name = managedInstanceGroupModuleName,
        ///         NameContains = managedInstanceGroupModuleNameContains,
        ///         StreamName = testStream.Name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetManagedInstanceGroupModulesResult> Invoke(GetManagedInstanceGroupModulesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedInstanceGroupModulesResult>("oci:OsManagementHub/getManagedInstanceGroupModules:getManagedInstanceGroupModules", args ?? new GetManagedInstanceGroupModulesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Managed Instance Group Modules in Oracle Cloud Infrastructure Os Management Hub service.
        /// 
        /// Retrieve a list of module streams, along with a summary of their
        /// status, from a managed instance group.  Filters may be applied to select
        /// a subset of module streams based on the filter criteria.
        /// 
        /// The 'moduleName' attribute filters against the name of a module.
        /// It accepts strings of the format "&lt;module&gt;".  If this attribute
        /// is defined, only streams that belong to the specified module are
        /// included in the result set.  If it is not defined, the request is
        /// not subject to this filter.
        /// 
        /// The "status" attribute filters against the state of a module stream.
        /// Valid values are "ENABLED", "DISABLED", and "ACTIVE".  If the
        /// attribute is set to "ENABLED", only module streams that are enabled
        /// are included in the result set.  If the attribute is set to "DISABLED",
        /// only module streams that are not enabled are included in the result
        /// set.  If the attribute is set to "ACTIVE", only module streams that
        /// are active are included in the result set.  If the attribute is not
        /// defined, the request is not subject to this filter.
        /// 
        /// When sorting by the display name, the result set is sorted first
        /// by the module name and then by the stream name.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedInstanceGroupModules = Oci.OsManagementHub.GetManagedInstanceGroupModules.Invoke(new()
        ///     {
        ///         ManagedInstanceGroupId = testManagedInstanceGroup.Id,
        ///         CompartmentId = compartmentId,
        ///         Name = managedInstanceGroupModuleName,
        ///         NameContains = managedInstanceGroupModuleNameContains,
        ///         StreamName = testStream.Name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetManagedInstanceGroupModulesResult> Invoke(GetManagedInstanceGroupModulesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedInstanceGroupModulesResult>("oci:OsManagementHub/getManagedInstanceGroupModules:getManagedInstanceGroupModules", args ?? new GetManagedInstanceGroupModulesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagedInstanceGroupModulesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        [Input("filters")]
        private List<Inputs.GetManagedInstanceGroupModulesFilterArgs>? _filters;
        public List<Inputs.GetManagedInstanceGroupModulesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetManagedInstanceGroupModulesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group.
        /// </summary>
        [Input("managedInstanceGroupId", required: true)]
        public string ManagedInstanceGroupId { get; set; } = null!;

        /// <summary>
        /// The resource name.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// A filter to return resources that may partially match the name given.
        /// </summary>
        [Input("nameContains")]
        public string? NameContains { get; set; }

        /// <summary>
        /// The name of the module stream. This parameter is required if a profile name is specified.
        /// </summary>
        [Input("streamName")]
        public string? StreamName { get; set; }

        public GetManagedInstanceGroupModulesArgs()
        {
        }
        public static new GetManagedInstanceGroupModulesArgs Empty => new GetManagedInstanceGroupModulesArgs();
    }

    public sealed class GetManagedInstanceGroupModulesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetManagedInstanceGroupModulesFilterInputArgs>? _filters;
        public InputList<Inputs.GetManagedInstanceGroupModulesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetManagedInstanceGroupModulesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group.
        /// </summary>
        [Input("managedInstanceGroupId", required: true)]
        public Input<string> ManagedInstanceGroupId { get; set; } = null!;

        /// <summary>
        /// The resource name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A filter to return resources that may partially match the name given.
        /// </summary>
        [Input("nameContains")]
        public Input<string>? NameContains { get; set; }

        /// <summary>
        /// The name of the module stream. This parameter is required if a profile name is specified.
        /// </summary>
        [Input("streamName")]
        public Input<string>? StreamName { get; set; }

        public GetManagedInstanceGroupModulesInvokeArgs()
        {
        }
        public static new GetManagedInstanceGroupModulesInvokeArgs Empty => new GetManagedInstanceGroupModulesInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagedInstanceGroupModulesResult
    {
        public readonly string? CompartmentId;
        public readonly ImmutableArray<Outputs.GetManagedInstanceGroupModulesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string ManagedInstanceGroupId;
        /// <summary>
        /// The list of managed_instance_group_module_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetManagedInstanceGroupModulesManagedInstanceGroupModuleCollectionResult> ManagedInstanceGroupModuleCollections;
        /// <summary>
        /// The name of the module.
        /// </summary>
        public readonly string? Name;
        public readonly string? NameContains;
        public readonly string? StreamName;

        [OutputConstructor]
        private GetManagedInstanceGroupModulesResult(
            string? compartmentId,

            ImmutableArray<Outputs.GetManagedInstanceGroupModulesFilterResult> filters,

            string id,

            string managedInstanceGroupId,

            ImmutableArray<Outputs.GetManagedInstanceGroupModulesManagedInstanceGroupModuleCollectionResult> managedInstanceGroupModuleCollections,

            string? name,

            string? nameContains,

            string? streamName)
        {
            CompartmentId = compartmentId;
            Filters = filters;
            Id = id;
            ManagedInstanceGroupId = managedInstanceGroupId;
            ManagedInstanceGroupModuleCollections = managedInstanceGroupModuleCollections;
            Name = name;
            NameContains = nameContains;
            StreamName = streamName;
        }
    }
}
