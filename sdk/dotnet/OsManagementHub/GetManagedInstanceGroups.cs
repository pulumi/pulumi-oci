// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OsManagementHub
{
    public static class GetManagedInstanceGroups
    {
        /// <summary>
        /// This data source provides the list of Managed Instance Groups in Oracle Cloud Infrastructure Os Management Hub service.
        /// 
        /// Lists managed instance groups that match the specified compartment or managed instance group [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Filter the list against a variety of criteria including but not limited to name, status, architecture, and OS family.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedInstanceGroups = Oci.OsManagementHub.GetManagedInstanceGroups.Invoke(new()
        ///     {
        ///         ArchType = managedInstanceGroupArchType,
        ///         CompartmentId = compartmentId,
        ///         DisplayNames = managedInstanceGroupDisplayName,
        ///         DisplayNameContains = managedInstanceGroupDisplayNameContains,
        ///         IsManagedByAutonomousLinux = managedInstanceGroupIsManagedByAutonomousLinux,
        ///         Locations = managedInstanceGroupLocation,
        ///         LocationNotEqualTos = managedInstanceGroupLocationNotEqualTo,
        ///         ManagedInstanceGroupId = testManagedInstanceGroup.Id,
        ///         OsFamily = managedInstanceGroupOsFamily,
        ///         SoftwareSourceId = testSoftwareSource.Id,
        ///         State = managedInstanceGroupState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetManagedInstanceGroupsResult> InvokeAsync(GetManagedInstanceGroupsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetManagedInstanceGroupsResult>("oci:OsManagementHub/getManagedInstanceGroups:getManagedInstanceGroups", args ?? new GetManagedInstanceGroupsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Managed Instance Groups in Oracle Cloud Infrastructure Os Management Hub service.
        /// 
        /// Lists managed instance groups that match the specified compartment or managed instance group [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Filter the list against a variety of criteria including but not limited to name, status, architecture, and OS family.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedInstanceGroups = Oci.OsManagementHub.GetManagedInstanceGroups.Invoke(new()
        ///     {
        ///         ArchType = managedInstanceGroupArchType,
        ///         CompartmentId = compartmentId,
        ///         DisplayNames = managedInstanceGroupDisplayName,
        ///         DisplayNameContains = managedInstanceGroupDisplayNameContains,
        ///         IsManagedByAutonomousLinux = managedInstanceGroupIsManagedByAutonomousLinux,
        ///         Locations = managedInstanceGroupLocation,
        ///         LocationNotEqualTos = managedInstanceGroupLocationNotEqualTo,
        ///         ManagedInstanceGroupId = testManagedInstanceGroup.Id,
        ///         OsFamily = managedInstanceGroupOsFamily,
        ///         SoftwareSourceId = testSoftwareSource.Id,
        ///         State = managedInstanceGroupState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetManagedInstanceGroupsResult> Invoke(GetManagedInstanceGroupsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedInstanceGroupsResult>("oci:OsManagementHub/getManagedInstanceGroups:getManagedInstanceGroups", args ?? new GetManagedInstanceGroupsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Managed Instance Groups in Oracle Cloud Infrastructure Os Management Hub service.
        /// 
        /// Lists managed instance groups that match the specified compartment or managed instance group [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Filter the list against a variety of criteria including but not limited to name, status, architecture, and OS family.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedInstanceGroups = Oci.OsManagementHub.GetManagedInstanceGroups.Invoke(new()
        ///     {
        ///         ArchType = managedInstanceGroupArchType,
        ///         CompartmentId = compartmentId,
        ///         DisplayNames = managedInstanceGroupDisplayName,
        ///         DisplayNameContains = managedInstanceGroupDisplayNameContains,
        ///         IsManagedByAutonomousLinux = managedInstanceGroupIsManagedByAutonomousLinux,
        ///         Locations = managedInstanceGroupLocation,
        ///         LocationNotEqualTos = managedInstanceGroupLocationNotEqualTo,
        ///         ManagedInstanceGroupId = testManagedInstanceGroup.Id,
        ///         OsFamily = managedInstanceGroupOsFamily,
        ///         SoftwareSourceId = testSoftwareSource.Id,
        ///         State = managedInstanceGroupState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetManagedInstanceGroupsResult> Invoke(GetManagedInstanceGroupsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedInstanceGroupsResult>("oci:OsManagementHub/getManagedInstanceGroups:getManagedInstanceGroups", args ?? new GetManagedInstanceGroupsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagedInstanceGroupsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A filter to return only profiles that match the given archType.
        /// </summary>
        [Input("archType")]
        public string? ArchType { get; set; }

        /// <summary>
        /// (Updatable) The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return resources that may partially match the given display name.
        /// </summary>
        [Input("displayNameContains")]
        public string? DisplayNameContains { get; set; }

        [Input("displayNames")]
        private List<string>? _displayNames;

        /// <summary>
        /// A filter to return resources that match the given display names.
        /// </summary>
        public List<string> DisplayNames
        {
            get => _displayNames ?? (_displayNames = new List<string>());
            set => _displayNames = value;
        }

        [Input("filters")]
        private List<Inputs.GetManagedInstanceGroupsFilterArgs>? _filters;
        public List<Inputs.GetManagedInstanceGroupsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetManagedInstanceGroupsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Indicates whether to list only resources managed by the Autonomous Linux service.
        /// </summary>
        [Input("isManagedByAutonomousLinux")]
        public bool? IsManagedByAutonomousLinux { get; set; }

        [Input("locationNotEqualTos")]
        private List<string>? _locationNotEqualTos;

        /// <summary>
        /// A filter to return only resources whose location does not match the given value.
        /// </summary>
        public List<string> LocationNotEqualTos
        {
            get => _locationNotEqualTos ?? (_locationNotEqualTos = new List<string>());
            set => _locationNotEqualTos = value;
        }

        [Input("locations")]
        private List<string>? _locations;

        /// <summary>
        /// A filter to return only resources whose location matches the given value.
        /// </summary>
        public List<string> Locations
        {
            get => _locations ?? (_locations = new List<string>());
            set => _locations = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group. This filter returns resources associated with this group.
        /// </summary>
        [Input("managedInstanceGroupId")]
        public string? ManagedInstanceGroupId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given operating system family.
        /// </summary>
        [Input("osFamily")]
        public string? OsFamily { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source. This filter returns resources associated with this software source.
        /// </summary>
        [Input("softwareSourceId")]
        public string? SoftwareSourceId { get; set; }

        /// <summary>
        /// A filter to return only managed instance groups that are in the specified state.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetManagedInstanceGroupsArgs()
        {
        }
        public static new GetManagedInstanceGroupsArgs Empty => new GetManagedInstanceGroupsArgs();
    }

    public sealed class GetManagedInstanceGroupsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A filter to return only profiles that match the given archType.
        /// </summary>
        [Input("archType")]
        public Input<string>? ArchType { get; set; }

        /// <summary>
        /// (Updatable) The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return resources that may partially match the given display name.
        /// </summary>
        [Input("displayNameContains")]
        public Input<string>? DisplayNameContains { get; set; }

        [Input("displayNames")]
        private InputList<string>? _displayNames;

        /// <summary>
        /// A filter to return resources that match the given display names.
        /// </summary>
        public InputList<string> DisplayNames
        {
            get => _displayNames ?? (_displayNames = new InputList<string>());
            set => _displayNames = value;
        }

        [Input("filters")]
        private InputList<Inputs.GetManagedInstanceGroupsFilterInputArgs>? _filters;
        public InputList<Inputs.GetManagedInstanceGroupsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetManagedInstanceGroupsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Indicates whether to list only resources managed by the Autonomous Linux service.
        /// </summary>
        [Input("isManagedByAutonomousLinux")]
        public Input<bool>? IsManagedByAutonomousLinux { get; set; }

        [Input("locationNotEqualTos")]
        private InputList<string>? _locationNotEqualTos;

        /// <summary>
        /// A filter to return only resources whose location does not match the given value.
        /// </summary>
        public InputList<string> LocationNotEqualTos
        {
            get => _locationNotEqualTos ?? (_locationNotEqualTos = new InputList<string>());
            set => _locationNotEqualTos = value;
        }

        [Input("locations")]
        private InputList<string>? _locations;

        /// <summary>
        /// A filter to return only resources whose location matches the given value.
        /// </summary>
        public InputList<string> Locations
        {
            get => _locations ?? (_locations = new InputList<string>());
            set => _locations = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group. This filter returns resources associated with this group.
        /// </summary>
        [Input("managedInstanceGroupId")]
        public Input<string>? ManagedInstanceGroupId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given operating system family.
        /// </summary>
        [Input("osFamily")]
        public Input<string>? OsFamily { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source. This filter returns resources associated with this software source.
        /// </summary>
        [Input("softwareSourceId")]
        public Input<string>? SoftwareSourceId { get; set; }

        /// <summary>
        /// A filter to return only managed instance groups that are in the specified state.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetManagedInstanceGroupsInvokeArgs()
        {
        }
        public static new GetManagedInstanceGroupsInvokeArgs Empty => new GetManagedInstanceGroupsInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagedInstanceGroupsResult
    {
        /// <summary>
        /// The CPU architecture of the instances in the managed instance group.
        /// </summary>
        public readonly string? ArchType;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the managed instance group.
        /// </summary>
        public readonly string? CompartmentId;
        public readonly string? DisplayNameContains;
        /// <summary>
        /// Software source name.
        /// </summary>
        public readonly ImmutableArray<string> DisplayNames;
        public readonly ImmutableArray<Outputs.GetManagedInstanceGroupsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Indicates whether the Autonomous Linux service manages the group.
        /// </summary>
        public readonly bool? IsManagedByAutonomousLinux;
        public readonly ImmutableArray<string> LocationNotEqualTos;
        /// <summary>
        /// The location of managed instances attached to the group.
        /// </summary>
        public readonly ImmutableArray<string> Locations;
        /// <summary>
        /// The list of managed_instance_group_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetManagedInstanceGroupsManagedInstanceGroupCollectionResult> ManagedInstanceGroupCollections;
        public readonly string? ManagedInstanceGroupId;
        /// <summary>
        /// The operating system type of the instances in the managed instance group.
        /// </summary>
        public readonly string? OsFamily;
        public readonly string? SoftwareSourceId;
        /// <summary>
        /// The current state of the managed instance group.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetManagedInstanceGroupsResult(
            string? archType,

            string? compartmentId,

            string? displayNameContains,

            ImmutableArray<string> displayNames,

            ImmutableArray<Outputs.GetManagedInstanceGroupsFilterResult> filters,

            string id,

            bool? isManagedByAutonomousLinux,

            ImmutableArray<string> locationNotEqualTos,

            ImmutableArray<string> locations,

            ImmutableArray<Outputs.GetManagedInstanceGroupsManagedInstanceGroupCollectionResult> managedInstanceGroupCollections,

            string? managedInstanceGroupId,

            string? osFamily,

            string? softwareSourceId,

            string? state)
        {
            ArchType = archType;
            CompartmentId = compartmentId;
            DisplayNameContains = displayNameContains;
            DisplayNames = displayNames;
            Filters = filters;
            Id = id;
            IsManagedByAutonomousLinux = isManagedByAutonomousLinux;
            LocationNotEqualTos = locationNotEqualTos;
            Locations = locations;
            ManagedInstanceGroupCollections = managedInstanceGroupCollections;
            ManagedInstanceGroupId = managedInstanceGroupId;
            OsFamily = osFamily;
            SoftwareSourceId = softwareSourceId;
            State = state;
        }
    }
}
