// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OsManagementHub
{
    public static class GetManagedInstanceModules
    {
        /// <summary>
        /// This data source provides the list of Managed Instance Modules in Oracle Cloud Infrastructure Os Management Hub service.
        /// 
        /// Retrieves a list of modules, along with streams of the modules, from a managed instance. Filters may be applied to select a subset of modules based on the filter criteria.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedInstanceModules = Oci.OsManagementHub.GetManagedInstanceModules.Invoke(new()
        ///     {
        ///         ManagedInstanceId = testManagedInstance.Id,
        ///         CompartmentId = compartmentId,
        ///         Name = managedInstanceModuleName,
        ///         NameContains = managedInstanceModuleNameContains,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetManagedInstanceModulesResult> InvokeAsync(GetManagedInstanceModulesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetManagedInstanceModulesResult>("oci:OsManagementHub/getManagedInstanceModules:getManagedInstanceModules", args ?? new GetManagedInstanceModulesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Managed Instance Modules in Oracle Cloud Infrastructure Os Management Hub service.
        /// 
        /// Retrieves a list of modules, along with streams of the modules, from a managed instance. Filters may be applied to select a subset of modules based on the filter criteria.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagedInstanceModules = Oci.OsManagementHub.GetManagedInstanceModules.Invoke(new()
        ///     {
        ///         ManagedInstanceId = testManagedInstance.Id,
        ///         CompartmentId = compartmentId,
        ///         Name = managedInstanceModuleName,
        ///         NameContains = managedInstanceModuleNameContains,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetManagedInstanceModulesResult> Invoke(GetManagedInstanceModulesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedInstanceModulesResult>("oci:OsManagementHub/getManagedInstanceModules:getManagedInstanceModules", args ?? new GetManagedInstanceModulesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagedInstanceModulesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        [Input("filters")]
        private List<Inputs.GetManagedInstanceModulesFilterArgs>? _filters;
        public List<Inputs.GetManagedInstanceModulesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetManagedInstanceModulesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance.
        /// </summary>
        [Input("managedInstanceId", required: true)]
        public string ManagedInstanceId { get; set; } = null!;

        /// <summary>
        /// The resource name.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// A filter to return resources that may partially match the name given.
        /// </summary>
        [Input("nameContains")]
        public string? NameContains { get; set; }

        public GetManagedInstanceModulesArgs()
        {
        }
        public static new GetManagedInstanceModulesArgs Empty => new GetManagedInstanceModulesArgs();
    }

    public sealed class GetManagedInstanceModulesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetManagedInstanceModulesFilterInputArgs>? _filters;
        public InputList<Inputs.GetManagedInstanceModulesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetManagedInstanceModulesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance.
        /// </summary>
        [Input("managedInstanceId", required: true)]
        public Input<string> ManagedInstanceId { get; set; } = null!;

        /// <summary>
        /// The resource name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A filter to return resources that may partially match the name given.
        /// </summary>
        [Input("nameContains")]
        public Input<string>? NameContains { get; set; }

        public GetManagedInstanceModulesInvokeArgs()
        {
        }
        public static new GetManagedInstanceModulesInvokeArgs Empty => new GetManagedInstanceModulesInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagedInstanceModulesResult
    {
        public readonly string? CompartmentId;
        public readonly ImmutableArray<Outputs.GetManagedInstanceModulesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string ManagedInstanceId;
        /// <summary>
        /// The list of managed_instance_module_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetManagedInstanceModulesManagedInstanceModuleCollectionResult> ManagedInstanceModuleCollections;
        /// <summary>
        /// The module name.
        /// </summary>
        public readonly string? Name;
        public readonly string? NameContains;

        [OutputConstructor]
        private GetManagedInstanceModulesResult(
            string? compartmentId,

            ImmutableArray<Outputs.GetManagedInstanceModulesFilterResult> filters,

            string id,

            string managedInstanceId,

            ImmutableArray<Outputs.GetManagedInstanceModulesManagedInstanceModuleCollectionResult> managedInstanceModuleCollections,

            string? name,

            string? nameContains)
        {
            CompartmentId = compartmentId;
            Filters = filters;
            Id = id;
            ManagedInstanceId = managedInstanceId;
            ManagedInstanceModuleCollections = managedInstanceModuleCollections;
            Name = name;
            NameContains = nameContains;
        }
    }
}
