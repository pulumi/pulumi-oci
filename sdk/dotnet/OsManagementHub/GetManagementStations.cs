// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OsManagementHub
{
    public static class GetManagementStations
    {
        /// <summary>
        /// This data source provides the list of Management Stations in Oracle Cloud Infrastructure Os Management Hub service.
        /// 
        /// Lists management stations within the specified compartment. Filter the list against a variety of criteria 
        /// including but not limited to name, status, and location.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagementStations = Oci.OsManagementHub.GetManagementStations.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = managementStationDisplayName,
        ///         DisplayNameContains = managementStationDisplayNameContains,
        ///         Id = managementStationId,
        ///         Locations = managementStationLocation,
        ///         LocationNotEqualTos = managementStationLocationNotEqualTo,
        ///         ManagedInstanceId = testManagedInstance.Id,
        ///         State = managementStationState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetManagementStationsResult> InvokeAsync(GetManagementStationsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetManagementStationsResult>("oci:OsManagementHub/getManagementStations:getManagementStations", args ?? new GetManagementStationsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Management Stations in Oracle Cloud Infrastructure Os Management Hub service.
        /// 
        /// Lists management stations within the specified compartment. Filter the list against a variety of criteria 
        /// including but not limited to name, status, and location.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagementStations = Oci.OsManagementHub.GetManagementStations.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = managementStationDisplayName,
        ///         DisplayNameContains = managementStationDisplayNameContains,
        ///         Id = managementStationId,
        ///         Locations = managementStationLocation,
        ///         LocationNotEqualTos = managementStationLocationNotEqualTo,
        ///         ManagedInstanceId = testManagedInstance.Id,
        ///         State = managementStationState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetManagementStationsResult> Invoke(GetManagementStationsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagementStationsResult>("oci:OsManagementHub/getManagementStations:getManagementStations", args ?? new GetManagementStationsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Management Stations in Oracle Cloud Infrastructure Os Management Hub service.
        /// 
        /// Lists management stations within the specified compartment. Filter the list against a variety of criteria 
        /// including but not limited to name, status, and location.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testManagementStations = Oci.OsManagementHub.GetManagementStations.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = managementStationDisplayName,
        ///         DisplayNameContains = managementStationDisplayNameContains,
        ///         Id = managementStationId,
        ///         Locations = managementStationLocation,
        ///         LocationNotEqualTos = managementStationLocationNotEqualTo,
        ///         ManagedInstanceId = testManagedInstance.Id,
        ///         State = managementStationState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetManagementStationsResult> Invoke(GetManagementStationsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagementStationsResult>("oci:OsManagementHub/getManagementStations:getManagementStations", args ?? new GetManagementStationsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagementStationsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// (Updatable) The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return resources that match the given user-friendly name.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        /// <summary>
        /// A filter to return resources that may partially match the given display name.
        /// </summary>
        [Input("displayNameContains")]
        public string? DisplayNameContains { get; set; }

        [Input("filters")]
        private List<Inputs.GetManagementStationsFilterArgs>? _filters;
        public List<Inputs.GetManagementStationsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetManagementStationsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management station. A filter that returns information about the specified management station.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        [Input("locationNotEqualTos")]
        private List<string>? _locationNotEqualTos;

        /// <summary>
        /// A filter to return only resources whose location does not match the given value.
        /// </summary>
        public List<string> LocationNotEqualTos
        {
            get => _locationNotEqualTos ?? (_locationNotEqualTos = new List<string>());
            set => _locationNotEqualTos = value;
        }

        [Input("locations")]
        private List<string>? _locations;

        /// <summary>
        /// A filter to return only resources whose location matches the given value.
        /// </summary>
        public List<string> Locations
        {
            get => _locations ?? (_locations = new List<string>());
            set => _locations = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance. This filter returns resources associated with this managed instance.
        /// </summary>
        [Input("managedInstanceId")]
        public string? ManagedInstanceId { get; set; }

        /// <summary>
        /// A filter that returns information for management stations in the specified state.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetManagementStationsArgs()
        {
        }
        public static new GetManagementStationsArgs Empty => new GetManagementStationsArgs();
    }

    public sealed class GetManagementStationsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// (Updatable) The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return resources that match the given user-friendly name.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// A filter to return resources that may partially match the given display name.
        /// </summary>
        [Input("displayNameContains")]
        public Input<string>? DisplayNameContains { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetManagementStationsFilterInputArgs>? _filters;
        public InputList<Inputs.GetManagementStationsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetManagementStationsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management station. A filter that returns information about the specified management station.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("locationNotEqualTos")]
        private InputList<string>? _locationNotEqualTos;

        /// <summary>
        /// A filter to return only resources whose location does not match the given value.
        /// </summary>
        public InputList<string> LocationNotEqualTos
        {
            get => _locationNotEqualTos ?? (_locationNotEqualTos = new InputList<string>());
            set => _locationNotEqualTos = value;
        }

        [Input("locations")]
        private InputList<string>? _locations;

        /// <summary>
        /// A filter to return only resources whose location matches the given value.
        /// </summary>
        public InputList<string> Locations
        {
            get => _locations ?? (_locations = new InputList<string>());
            set => _locations = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance. This filter returns resources associated with this managed instance.
        /// </summary>
        [Input("managedInstanceId")]
        public Input<string>? ManagedInstanceId { get; set; }

        /// <summary>
        /// A filter that returns information for management stations in the specified state.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetManagementStationsInvokeArgs()
        {
        }
        public static new GetManagementStationsInvokeArgs Empty => new GetManagementStationsInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagementStationsResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the management station.
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// User-friendly name for the management station.
        /// </summary>
        public readonly string? DisplayName;
        public readonly string? DisplayNameContains;
        public readonly ImmutableArray<Outputs.GetManagementStationsFilterResult> Filters;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management station.
        /// </summary>
        public readonly string? Id;
        public readonly ImmutableArray<string> LocationNotEqualTos;
        /// <summary>
        /// The location of the instance that is acting as the management station.
        /// </summary>
        public readonly ImmutableArray<string> Locations;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the instance that is acting as the management station.
        /// </summary>
        public readonly string? ManagedInstanceId;
        /// <summary>
        /// The list of management_station_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetManagementStationsManagementStationCollectionResult> ManagementStationCollections;
        /// <summary>
        /// The current state of the management station.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetManagementStationsResult(
            string? compartmentId,

            string? displayName,

            string? displayNameContains,

            ImmutableArray<Outputs.GetManagementStationsFilterResult> filters,

            string? id,

            ImmutableArray<string> locationNotEqualTos,

            ImmutableArray<string> locations,

            string? managedInstanceId,

            ImmutableArray<Outputs.GetManagementStationsManagementStationCollectionResult> managementStationCollections,

            string? state)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            DisplayNameContains = displayNameContains;
            Filters = filters;
            Id = id;
            LocationNotEqualTos = locationNotEqualTos;
            Locations = locations;
            ManagedInstanceId = managedInstanceId;
            ManagementStationCollections = managementStationCollections;
            State = state;
        }
    }
}
