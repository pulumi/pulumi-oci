// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OsManagementHub
{
    public static class GetProfile
    {
        /// <summary>
        /// This data source provides details about a specific Profile resource in Oracle Cloud Infrastructure Os Management Hub service.
        /// 
        /// Gets information about the specified registration profile.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testProfile = Oci.OsManagementHub.GetProfile.Invoke(new()
        ///     {
        ///         ProfileId = testProfileOciOsManagementHubProfile.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetProfileResult> InvokeAsync(GetProfileArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetProfileResult>("oci:OsManagementHub/getProfile:getProfile", args ?? new GetProfileArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Profile resource in Oracle Cloud Infrastructure Os Management Hub service.
        /// 
        /// Gets information about the specified registration profile.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testProfile = Oci.OsManagementHub.GetProfile.Invoke(new()
        ///     {
        ///         ProfileId = testProfileOciOsManagementHubProfile.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetProfileResult> Invoke(GetProfileInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetProfileResult>("oci:OsManagementHub/getProfile:getProfile", args ?? new GetProfileInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetProfileArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the registration profile.
        /// </summary>
        [Input("profileId", required: true)]
        public string ProfileId { get; set; } = null!;

        public GetProfileArgs()
        {
        }
        public static new GetProfileArgs Empty => new GetProfileArgs();
    }

    public sealed class GetProfileInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the registration profile.
        /// </summary>
        [Input("profileId", required: true)]
        public Input<string> ProfileId { get; set; } = null!;

        public GetProfileInvokeArgs()
        {
        }
        public static new GetProfileInvokeArgs Empty => new GetProfileInvokeArgs();
    }


    [OutputType]
    public sealed class GetProfileResult
    {
        /// <summary>
        /// The architecture type.
        /// </summary>
        public readonly string ArchType;
        /// <summary>
        /// The OCID of the tenancy containing the registration profile.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// Software source description.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Software source name.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// The OCID of the software source.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Identifying information for the specified lifecycle environment.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProfileLifecycleEnvironmentResult> LifecycleEnvironments;
        public readonly string LifecycleStageId;
        /// <summary>
        /// Identifying information for the specified lifecycle stage.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProfileLifecycleStageResult> LifecycleStages;
        public readonly string ManagedInstanceGroupId;
        /// <summary>
        /// Identifying information for the specified managed instance group.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProfileManagedInstanceGroupResult> ManagedInstanceGroups;
        /// <summary>
        /// The OCID of the management station.
        /// </summary>
        public readonly string ManagementStationId;
        /// <summary>
        /// The operating system family.
        /// </summary>
        public readonly string OsFamily;
        public readonly string ProfileId;
        /// <summary>
        /// The type of Profile. One of SOFTWARESOURCE, GROUP or LIFECYCLE.
        /// </summary>
        public readonly string ProfileType;
        public readonly ImmutableArray<string> SoftwareSourceIds;
        /// <summary>
        /// The list of software sources that the registration profile will use.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProfileSoftwareSourceResult> SoftwareSources;
        /// <summary>
        /// The current state of the registration profile.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> SystemTags;
        /// <summary>
        /// The time the the registration profile was created. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The software source vendor name.
        /// </summary>
        public readonly string VendorName;

        [OutputConstructor]
        private GetProfileResult(
            string archType,

            string compartmentId,

            ImmutableDictionary<string, object> definedTags,

            string description,

            string displayName,

            ImmutableDictionary<string, object> freeformTags,

            string id,

            ImmutableArray<Outputs.GetProfileLifecycleEnvironmentResult> lifecycleEnvironments,

            string lifecycleStageId,

            ImmutableArray<Outputs.GetProfileLifecycleStageResult> lifecycleStages,

            string managedInstanceGroupId,

            ImmutableArray<Outputs.GetProfileManagedInstanceGroupResult> managedInstanceGroups,

            string managementStationId,

            string osFamily,

            string profileId,

            string profileType,

            ImmutableArray<string> softwareSourceIds,

            ImmutableArray<Outputs.GetProfileSoftwareSourceResult> softwareSources,

            string state,

            ImmutableDictionary<string, object> systemTags,

            string timeCreated,

            string vendorName)
        {
            ArchType = archType;
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            LifecycleEnvironments = lifecycleEnvironments;
            LifecycleStageId = lifecycleStageId;
            LifecycleStages = lifecycleStages;
            ManagedInstanceGroupId = managedInstanceGroupId;
            ManagedInstanceGroups = managedInstanceGroups;
            ManagementStationId = managementStationId;
            OsFamily = osFamily;
            ProfileId = profileId;
            ProfileType = profileType;
            SoftwareSourceIds = softwareSourceIds;
            SoftwareSources = softwareSources;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            VendorName = vendorName;
        }
    }
}
