// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OsManagementHub
{
    public static class GetProfileVersion
    {
        /// <summary>
        /// This data source provides details about a specific Profile Version resource in Oracle Cloud Infrastructure Os Management Hub service.
        /// 
        /// Returns information about the version of the specified registration profile.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testProfileVersion = Oci.OsManagementHub.GetProfileVersion.Invoke(new()
        ///     {
        ///         ProfileId = testProfile.Id,
        ///         ProfileVersion = profileVersionProfileVersion,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetProfileVersionResult> InvokeAsync(GetProfileVersionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetProfileVersionResult>("oci:OsManagementHub/getProfileVersion:getProfileVersion", args ?? new GetProfileVersionArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Profile Version resource in Oracle Cloud Infrastructure Os Management Hub service.
        /// 
        /// Returns information about the version of the specified registration profile.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testProfileVersion = Oci.OsManagementHub.GetProfileVersion.Invoke(new()
        ///     {
        ///         ProfileId = testProfile.Id,
        ///         ProfileVersion = profileVersionProfileVersion,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetProfileVersionResult> Invoke(GetProfileVersionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetProfileVersionResult>("oci:OsManagementHub/getProfileVersion:getProfileVersion", args ?? new GetProfileVersionInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Profile Version resource in Oracle Cloud Infrastructure Os Management Hub service.
        /// 
        /// Returns information about the version of the specified registration profile.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testProfileVersion = Oci.OsManagementHub.GetProfileVersion.Invoke(new()
        ///     {
        ///         ProfileId = testProfile.Id,
        ///         ProfileVersion = profileVersionProfileVersion,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetProfileVersionResult> Invoke(GetProfileVersionInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetProfileVersionResult>("oci:OsManagementHub/getProfileVersion:getProfileVersion", args ?? new GetProfileVersionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetProfileVersionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the registration profile.
        /// </summary>
        [Input("profileId", required: true)]
        public string ProfileId { get; set; } = null!;

        /// <summary>
        /// The version of the registration profile.
        /// </summary>
        [Input("profileVersion", required: true)]
        public string ProfileVersion { get; set; } = null!;

        public GetProfileVersionArgs()
        {
        }
        public static new GetProfileVersionArgs Empty => new GetProfileVersionArgs();
    }

    public sealed class GetProfileVersionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the registration profile.
        /// </summary>
        [Input("profileId", required: true)]
        public Input<string> ProfileId { get; set; } = null!;

        /// <summary>
        /// The version of the registration profile.
        /// </summary>
        [Input("profileVersion", required: true)]
        public Input<string> ProfileVersion { get; set; } = null!;

        public GetProfileVersionInvokeArgs()
        {
        }
        public static new GetProfileVersionInvokeArgs Empty => new GetProfileVersionInvokeArgs();
    }


    [OutputType]
    public sealed class GetProfileVersionResult
    {
        /// <summary>
        /// The architecture type.
        /// </summary>
        public readonly string ArchType;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the registration profile.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Software source description.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Software source name.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Indicates if the profile is set as the default. There is exactly one default profile for a specified architecture, OS family, registration type, and vendor. When registering an instance with the corresonding characteristics, the default profile is used, unless another profile is specified.
        /// </summary>
        public readonly bool IsDefaultProfile;
        /// <summary>
        /// Indicates if the profile was created by the service. OS Management Hub provides a limited set of standardized profiles that can be used to register Autonomous Linux or Windows instances.
        /// </summary>
        public readonly bool IsServiceProvidedProfile;
        /// <summary>
        /// Provides identifying information for the specified lifecycle environment.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProfileVersionLifecycleEnvironmentResult> LifecycleEnvironments;
        /// <summary>
        /// Provides identifying information for the specified lifecycle stage.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProfileVersionLifecycleStageResult> LifecycleStages;
        /// <summary>
        /// Provides identifying information for the specified managed instance group.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProfileVersionManagedInstanceGroupResult> ManagedInstanceGroups;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management station to associate with an  instance once registered. Management stations are only used with non-OCI instances.
        /// </summary>
        public readonly string ManagementStationId;
        /// <summary>
        /// The operating system family.
        /// </summary>
        public readonly string OsFamily;
        public readonly string ProfileId;
        /// <summary>
        /// The type of profile.
        /// </summary>
        public readonly string ProfileType;
        /// <summary>
        /// The version of the profile.
        /// </summary>
        public readonly string ProfileVersion;
        /// <summary>
        /// The type of instance to register.
        /// </summary>
        public readonly string RegistrationType;
        /// <summary>
        /// The list of software sources that the registration profile will use.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProfileVersionSoftwareSourceResult> SoftwareSources;
        /// <summary>
        /// The current state of the registration profile.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The time the registration profile was created (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time the registration profile was last modified (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
        /// </summary>
        public readonly string TimeModified;
        /// <summary>
        /// The vendor of the operating system for the instance.
        /// </summary>
        public readonly string VendorName;

        [OutputConstructor]
        private GetProfileVersionResult(
            string archType,

            string compartmentId,

            string description,

            string displayName,

            string id,

            bool isDefaultProfile,

            bool isServiceProvidedProfile,

            ImmutableArray<Outputs.GetProfileVersionLifecycleEnvironmentResult> lifecycleEnvironments,

            ImmutableArray<Outputs.GetProfileVersionLifecycleStageResult> lifecycleStages,

            ImmutableArray<Outputs.GetProfileVersionManagedInstanceGroupResult> managedInstanceGroups,

            string managementStationId,

            string osFamily,

            string profileId,

            string profileType,

            string profileVersion,

            string registrationType,

            ImmutableArray<Outputs.GetProfileVersionSoftwareSourceResult> softwareSources,

            string state,

            string timeCreated,

            string timeModified,

            string vendorName)
        {
            ArchType = archType;
            CompartmentId = compartmentId;
            Description = description;
            DisplayName = displayName;
            Id = id;
            IsDefaultProfile = isDefaultProfile;
            IsServiceProvidedProfile = isServiceProvidedProfile;
            LifecycleEnvironments = lifecycleEnvironments;
            LifecycleStages = lifecycleStages;
            ManagedInstanceGroups = managedInstanceGroups;
            ManagementStationId = managementStationId;
            OsFamily = osFamily;
            ProfileId = profileId;
            ProfileType = profileType;
            ProfileVersion = profileVersion;
            RegistrationType = registrationType;
            SoftwareSources = softwareSources;
            State = state;
            TimeCreated = timeCreated;
            TimeModified = timeModified;
            VendorName = vendorName;
        }
    }
}
