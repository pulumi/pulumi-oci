// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OsManagementHub
{
    public static class GetScheduledJobs
    {
        /// <summary>
        /// This data source provides the list of Scheduled Jobs in Oracle Cloud Infrastructure Os Management Hub service.
        /// 
        /// Lists scheduled jobs that match the specified compartment or scheduled job [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testScheduledJobs = Oci.OsManagementHub.GetScheduledJobs.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         CompartmentIdInSubtree = scheduledJobCompartmentIdInSubtree,
        ///         DisplayName = scheduledJobDisplayName,
        ///         DisplayNameContains = scheduledJobDisplayNameContains,
        ///         Id = scheduledJobId,
        ///         IsManagedByAutonomousLinux = scheduledJobIsManagedByAutonomousLinux,
        ///         IsRestricted = scheduledJobIsRestricted,
        ///         LifecycleStageId = testLifecycleStage.Id,
        ///         Locations = scheduledJobLocation,
        ///         LocationNotEqualTos = scheduledJobLocationNotEqualTo,
        ///         ManagedCompartmentId = testCompartment.Id,
        ///         ManagedInstanceGroupId = testManagedInstanceGroup.Id,
        ///         ManagedInstanceId = testManagedInstance.Id,
        ///         OperationType = scheduledJobOperationType,
        ///         ScheduleType = scheduledJobScheduleType,
        ///         State = scheduledJobState,
        ///         TimeEnd = scheduledJobTimeEnd,
        ///         TimeStart = scheduledJobTimeStart,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetScheduledJobsResult> InvokeAsync(GetScheduledJobsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetScheduledJobsResult>("oci:OsManagementHub/getScheduledJobs:getScheduledJobs", args ?? new GetScheduledJobsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Scheduled Jobs in Oracle Cloud Infrastructure Os Management Hub service.
        /// 
        /// Lists scheduled jobs that match the specified compartment or scheduled job [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testScheduledJobs = Oci.OsManagementHub.GetScheduledJobs.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         CompartmentIdInSubtree = scheduledJobCompartmentIdInSubtree,
        ///         DisplayName = scheduledJobDisplayName,
        ///         DisplayNameContains = scheduledJobDisplayNameContains,
        ///         Id = scheduledJobId,
        ///         IsManagedByAutonomousLinux = scheduledJobIsManagedByAutonomousLinux,
        ///         IsRestricted = scheduledJobIsRestricted,
        ///         LifecycleStageId = testLifecycleStage.Id,
        ///         Locations = scheduledJobLocation,
        ///         LocationNotEqualTos = scheduledJobLocationNotEqualTo,
        ///         ManagedCompartmentId = testCompartment.Id,
        ///         ManagedInstanceGroupId = testManagedInstanceGroup.Id,
        ///         ManagedInstanceId = testManagedInstance.Id,
        ///         OperationType = scheduledJobOperationType,
        ///         ScheduleType = scheduledJobScheduleType,
        ///         State = scheduledJobState,
        ///         TimeEnd = scheduledJobTimeEnd,
        ///         TimeStart = scheduledJobTimeStart,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetScheduledJobsResult> Invoke(GetScheduledJobsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetScheduledJobsResult>("oci:OsManagementHub/getScheduledJobs:getScheduledJobs", args ?? new GetScheduledJobsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetScheduledJobsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// (Updatable) The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        /// <summary>
        /// Indicates whether to include subcompartments in the returned results. Default is false.
        /// </summary>
        [Input("compartmentIdInSubtree")]
        public bool? CompartmentIdInSubtree { get; set; }

        /// <summary>
        /// A filter to return resources that match the given user-friendly name.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        /// <summary>
        /// A filter to return resources that may partially match the given display name.
        /// </summary>
        [Input("displayNameContains")]
        public string? DisplayNameContains { get; set; }

        [Input("filters")]
        private List<Inputs.GetScheduledJobsFilterArgs>? _filters;
        public List<Inputs.GetScheduledJobsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetScheduledJobsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the scheduled job. A filter to return the specified job.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// Indicates whether to list only resources managed by the Autonomous Linux service.
        /// </summary>
        [Input("isManagedByAutonomousLinux")]
        public bool? IsManagedByAutonomousLinux { get; set; }

        /// <summary>
        /// A filter to return only restricted scheduled jobs.
        /// </summary>
        [Input("isRestricted")]
        public bool? IsRestricted { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the lifecycle stage. This resource returns resources associated with this lifecycle stage.
        /// </summary>
        [Input("lifecycleStageId")]
        public string? LifecycleStageId { get; set; }

        [Input("locationNotEqualTos")]
        private List<string>? _locationNotEqualTos;

        /// <summary>
        /// A filter to return only resources whose location does not match the given value.
        /// </summary>
        public List<string> LocationNotEqualTos
        {
            get => _locationNotEqualTos ?? (_locationNotEqualTos = new List<string>());
            set => _locationNotEqualTos = value;
        }

        [Input("locations")]
        private List<string>? _locations;

        /// <summary>
        /// A filter to return only resources whose location matches the given value.
        /// </summary>
        public List<string> Locations
        {
            get => _locations ?? (_locations = new List<string>());
            set => _locations = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed compartment. This filter returns resources associated with this compartment.
        /// </summary>
        [Input("managedCompartmentId")]
        public string? ManagedCompartmentId { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group. This filter returns resources associated with this group.
        /// </summary>
        [Input("managedInstanceGroupId")]
        public string? ManagedInstanceGroupId { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance. This filter returns resources associated with this managed instance.
        /// </summary>
        [Input("managedInstanceId")]
        public string? ManagedInstanceId { get; set; }

        /// <summary>
        /// A filter to return only scheduled jobs with the given operation type.
        /// </summary>
        [Input("operationType")]
        public string? OperationType { get; set; }

        /// <summary>
        /// A filter to return only scheduled jobs of the given scheduling type (one-time or recurring).
        /// </summary>
        [Input("scheduleType")]
        public string? ScheduleType { get; set; }

        /// <summary>
        /// A filter to return only scheduled jobs currently in the given state.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        /// <summary>
        /// A filter to return only resources with a date on or before the given value, in ISO 8601 format.  Example: 2017-07-14T02:40:00.000Z
        /// </summary>
        [Input("timeEnd")]
        public string? TimeEnd { get; set; }

        /// <summary>
        /// A filter to return only resources with a date on or after the given value, in ISO 8601 format.  Example: 2017-07-14T02:40:00.000Z
        /// </summary>
        [Input("timeStart")]
        public string? TimeStart { get; set; }

        public GetScheduledJobsArgs()
        {
        }
        public static new GetScheduledJobsArgs Empty => new GetScheduledJobsArgs();
    }

    public sealed class GetScheduledJobsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// (Updatable) The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// Indicates whether to include subcompartments in the returned results. Default is false.
        /// </summary>
        [Input("compartmentIdInSubtree")]
        public Input<bool>? CompartmentIdInSubtree { get; set; }

        /// <summary>
        /// A filter to return resources that match the given user-friendly name.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// A filter to return resources that may partially match the given display name.
        /// </summary>
        [Input("displayNameContains")]
        public Input<string>? DisplayNameContains { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetScheduledJobsFilterInputArgs>? _filters;
        public InputList<Inputs.GetScheduledJobsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetScheduledJobsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the scheduled job. A filter to return the specified job.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Indicates whether to list only resources managed by the Autonomous Linux service.
        /// </summary>
        [Input("isManagedByAutonomousLinux")]
        public Input<bool>? IsManagedByAutonomousLinux { get; set; }

        /// <summary>
        /// A filter to return only restricted scheduled jobs.
        /// </summary>
        [Input("isRestricted")]
        public Input<bool>? IsRestricted { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the lifecycle stage. This resource returns resources associated with this lifecycle stage.
        /// </summary>
        [Input("lifecycleStageId")]
        public Input<string>? LifecycleStageId { get; set; }

        [Input("locationNotEqualTos")]
        private InputList<string>? _locationNotEqualTos;

        /// <summary>
        /// A filter to return only resources whose location does not match the given value.
        /// </summary>
        public InputList<string> LocationNotEqualTos
        {
            get => _locationNotEqualTos ?? (_locationNotEqualTos = new InputList<string>());
            set => _locationNotEqualTos = value;
        }

        [Input("locations")]
        private InputList<string>? _locations;

        /// <summary>
        /// A filter to return only resources whose location matches the given value.
        /// </summary>
        public InputList<string> Locations
        {
            get => _locations ?? (_locations = new InputList<string>());
            set => _locations = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed compartment. This filter returns resources associated with this compartment.
        /// </summary>
        [Input("managedCompartmentId")]
        public Input<string>? ManagedCompartmentId { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group. This filter returns resources associated with this group.
        /// </summary>
        [Input("managedInstanceGroupId")]
        public Input<string>? ManagedInstanceGroupId { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance. This filter returns resources associated with this managed instance.
        /// </summary>
        [Input("managedInstanceId")]
        public Input<string>? ManagedInstanceId { get; set; }

        /// <summary>
        /// A filter to return only scheduled jobs with the given operation type.
        /// </summary>
        [Input("operationType")]
        public Input<string>? OperationType { get; set; }

        /// <summary>
        /// A filter to return only scheduled jobs of the given scheduling type (one-time or recurring).
        /// </summary>
        [Input("scheduleType")]
        public Input<string>? ScheduleType { get; set; }

        /// <summary>
        /// A filter to return only scheduled jobs currently in the given state.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// A filter to return only resources with a date on or before the given value, in ISO 8601 format.  Example: 2017-07-14T02:40:00.000Z
        /// </summary>
        [Input("timeEnd")]
        public Input<string>? TimeEnd { get; set; }

        /// <summary>
        /// A filter to return only resources with a date on or after the given value, in ISO 8601 format.  Example: 2017-07-14T02:40:00.000Z
        /// </summary>
        [Input("timeStart")]
        public Input<string>? TimeStart { get; set; }

        public GetScheduledJobsInvokeArgs()
        {
        }
        public static new GetScheduledJobsInvokeArgs Empty => new GetScheduledJobsInvokeArgs();
    }


    [OutputType]
    public sealed class GetScheduledJobsResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the scheduled job.
        /// </summary>
        public readonly string? CompartmentId;
        public readonly bool? CompartmentIdInSubtree;
        /// <summary>
        /// User-friendly name for the scheduled job.
        /// </summary>
        public readonly string? DisplayName;
        public readonly string? DisplayNameContains;
        public readonly ImmutableArray<Outputs.GetScheduledJobsFilterResult> Filters;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the scheduled job.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Indicates whether this scheduled job is managed by the Autonomous Linux service.
        /// </summary>
        public readonly bool? IsManagedByAutonomousLinux;
        /// <summary>
        /// Indicates if the schedule job has restricted update and deletion capabilities. For restricted scheduled jobs,  you can update only the timeNextExecution, recurringRule, and tags.
        /// </summary>
        public readonly bool? IsRestricted;
        public readonly string? LifecycleStageId;
        public readonly ImmutableArray<string> LocationNotEqualTos;
        public readonly ImmutableArray<string> Locations;
        public readonly string? ManagedCompartmentId;
        public readonly string? ManagedInstanceGroupId;
        public readonly string? ManagedInstanceId;
        /// <summary>
        /// The type of operation this scheduled job performs.
        /// </summary>
        public readonly string? OperationType;
        /// <summary>
        /// The type of scheduling frequency for the job.
        /// </summary>
        public readonly string? ScheduleType;
        /// <summary>
        /// The list of scheduled_job_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetScheduledJobsScheduledJobCollectionResult> ScheduledJobCollections;
        /// <summary>
        /// The current state of the scheduled job.
        /// </summary>
        public readonly string? State;
        public readonly string? TimeEnd;
        public readonly string? TimeStart;

        [OutputConstructor]
        private GetScheduledJobsResult(
            string? compartmentId,

            bool? compartmentIdInSubtree,

            string? displayName,

            string? displayNameContains,

            ImmutableArray<Outputs.GetScheduledJobsFilterResult> filters,

            string? id,

            bool? isManagedByAutonomousLinux,

            bool? isRestricted,

            string? lifecycleStageId,

            ImmutableArray<string> locationNotEqualTos,

            ImmutableArray<string> locations,

            string? managedCompartmentId,

            string? managedInstanceGroupId,

            string? managedInstanceId,

            string? operationType,

            string? scheduleType,

            ImmutableArray<Outputs.GetScheduledJobsScheduledJobCollectionResult> scheduledJobCollections,

            string? state,

            string? timeEnd,

            string? timeStart)
        {
            CompartmentId = compartmentId;
            CompartmentIdInSubtree = compartmentIdInSubtree;
            DisplayName = displayName;
            DisplayNameContains = displayNameContains;
            Filters = filters;
            Id = id;
            IsManagedByAutonomousLinux = isManagedByAutonomousLinux;
            IsRestricted = isRestricted;
            LifecycleStageId = lifecycleStageId;
            LocationNotEqualTos = locationNotEqualTos;
            Locations = locations;
            ManagedCompartmentId = managedCompartmentId;
            ManagedInstanceGroupId = managedInstanceGroupId;
            ManagedInstanceId = managedInstanceId;
            OperationType = operationType;
            ScheduleType = scheduleType;
            ScheduledJobCollections = scheduledJobCollections;
            State = state;
            TimeEnd = timeEnd;
            TimeStart = timeStart;
        }
    }
}
