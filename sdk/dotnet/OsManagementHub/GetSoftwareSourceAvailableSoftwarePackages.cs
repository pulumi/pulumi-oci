// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OsManagementHub
{
    public static class GetSoftwareSourceAvailableSoftwarePackages
    {
        /// <summary>
        /// This data source provides the list of Software Source Available Software Packages in Oracle Cloud Infrastructure Os Management Hub service.
        /// 
        /// Lists software packages that are available to be added to a custom software source of type MANIFEST.  Filter the list against a variety of criteria 
        /// including but not limited to its name.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSoftwareSourceAvailableSoftwarePackages = Oci.OsManagementHub.GetSoftwareSourceAvailableSoftwarePackages.Invoke(new()
        ///     {
        ///         SoftwareSourceId = testSoftwareSource.Id,
        ///         DisplayName = softwareSourceAvailableSoftwarePackageDisplayName,
        ///         DisplayNameContains = softwareSourceAvailableSoftwarePackageDisplayNameContains,
        ///         IsLatest = softwareSourceAvailableSoftwarePackageIsLatest,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSoftwareSourceAvailableSoftwarePackagesResult> InvokeAsync(GetSoftwareSourceAvailableSoftwarePackagesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSoftwareSourceAvailableSoftwarePackagesResult>("oci:OsManagementHub/getSoftwareSourceAvailableSoftwarePackages:getSoftwareSourceAvailableSoftwarePackages", args ?? new GetSoftwareSourceAvailableSoftwarePackagesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Software Source Available Software Packages in Oracle Cloud Infrastructure Os Management Hub service.
        /// 
        /// Lists software packages that are available to be added to a custom software source of type MANIFEST.  Filter the list against a variety of criteria 
        /// including but not limited to its name.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSoftwareSourceAvailableSoftwarePackages = Oci.OsManagementHub.GetSoftwareSourceAvailableSoftwarePackages.Invoke(new()
        ///     {
        ///         SoftwareSourceId = testSoftwareSource.Id,
        ///         DisplayName = softwareSourceAvailableSoftwarePackageDisplayName,
        ///         DisplayNameContains = softwareSourceAvailableSoftwarePackageDisplayNameContains,
        ///         IsLatest = softwareSourceAvailableSoftwarePackageIsLatest,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSoftwareSourceAvailableSoftwarePackagesResult> Invoke(GetSoftwareSourceAvailableSoftwarePackagesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSoftwareSourceAvailableSoftwarePackagesResult>("oci:OsManagementHub/getSoftwareSourceAvailableSoftwarePackages:getSoftwareSourceAvailableSoftwarePackages", args ?? new GetSoftwareSourceAvailableSoftwarePackagesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Software Source Available Software Packages in Oracle Cloud Infrastructure Os Management Hub service.
        /// 
        /// Lists software packages that are available to be added to a custom software source of type MANIFEST.  Filter the list against a variety of criteria 
        /// including but not limited to its name.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSoftwareSourceAvailableSoftwarePackages = Oci.OsManagementHub.GetSoftwareSourceAvailableSoftwarePackages.Invoke(new()
        ///     {
        ///         SoftwareSourceId = testSoftwareSource.Id,
        ///         DisplayName = softwareSourceAvailableSoftwarePackageDisplayName,
        ///         DisplayNameContains = softwareSourceAvailableSoftwarePackageDisplayNameContains,
        ///         IsLatest = softwareSourceAvailableSoftwarePackageIsLatest,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSoftwareSourceAvailableSoftwarePackagesResult> Invoke(GetSoftwareSourceAvailableSoftwarePackagesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSoftwareSourceAvailableSoftwarePackagesResult>("oci:OsManagementHub/getSoftwareSourceAvailableSoftwarePackages:getSoftwareSourceAvailableSoftwarePackages", args ?? new GetSoftwareSourceAvailableSoftwarePackagesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSoftwareSourceAvailableSoftwarePackagesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A filter to return resources that match the given user-friendly name.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        /// <summary>
        /// A filter to return resources that may partially match the given display name.
        /// </summary>
        [Input("displayNameContains")]
        public string? DisplayNameContains { get; set; }

        [Input("filters")]
        private List<Inputs.GetSoftwareSourceAvailableSoftwarePackagesFilterArgs>? _filters;
        public List<Inputs.GetSoftwareSourceAvailableSoftwarePackagesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetSoftwareSourceAvailableSoftwarePackagesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Indicates whether to list only the latest versions of packages, module streams, and stream profiles.
        /// </summary>
        [Input("isLatest")]
        public bool? IsLatest { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source.
        /// </summary>
        [Input("softwareSourceId", required: true)]
        public string SoftwareSourceId { get; set; } = null!;

        public GetSoftwareSourceAvailableSoftwarePackagesArgs()
        {
        }
        public static new GetSoftwareSourceAvailableSoftwarePackagesArgs Empty => new GetSoftwareSourceAvailableSoftwarePackagesArgs();
    }

    public sealed class GetSoftwareSourceAvailableSoftwarePackagesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A filter to return resources that match the given user-friendly name.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// A filter to return resources that may partially match the given display name.
        /// </summary>
        [Input("displayNameContains")]
        public Input<string>? DisplayNameContains { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetSoftwareSourceAvailableSoftwarePackagesFilterInputArgs>? _filters;
        public InputList<Inputs.GetSoftwareSourceAvailableSoftwarePackagesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetSoftwareSourceAvailableSoftwarePackagesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Indicates whether to list only the latest versions of packages, module streams, and stream profiles.
        /// </summary>
        [Input("isLatest")]
        public Input<bool>? IsLatest { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source.
        /// </summary>
        [Input("softwareSourceId", required: true)]
        public Input<string> SoftwareSourceId { get; set; } = null!;

        public GetSoftwareSourceAvailableSoftwarePackagesInvokeArgs()
        {
        }
        public static new GetSoftwareSourceAvailableSoftwarePackagesInvokeArgs Empty => new GetSoftwareSourceAvailableSoftwarePackagesInvokeArgs();
    }


    [OutputType]
    public sealed class GetSoftwareSourceAvailableSoftwarePackagesResult
    {
        /// <summary>
        /// Software source name.
        /// </summary>
        public readonly string? DisplayName;
        public readonly string? DisplayNameContains;
        public readonly ImmutableArray<Outputs.GetSoftwareSourceAvailableSoftwarePackagesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Indicates whether this package is the latest version.
        /// </summary>
        public readonly bool? IsLatest;
        /// <summary>
        /// The list of software_package_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSoftwareSourceAvailableSoftwarePackagesSoftwarePackageCollectionResult> SoftwarePackageCollections;
        public readonly string SoftwareSourceId;

        [OutputConstructor]
        private GetSoftwareSourceAvailableSoftwarePackagesResult(
            string? displayName,

            string? displayNameContains,

            ImmutableArray<Outputs.GetSoftwareSourceAvailableSoftwarePackagesFilterResult> filters,

            string id,

            bool? isLatest,

            ImmutableArray<Outputs.GetSoftwareSourceAvailableSoftwarePackagesSoftwarePackageCollectionResult> softwarePackageCollections,

            string softwareSourceId)
        {
            DisplayName = displayName;
            DisplayNameContains = displayNameContains;
            Filters = filters;
            Id = id;
            IsLatest = isLatest;
            SoftwarePackageCollections = softwarePackageCollections;
            SoftwareSourceId = softwareSourceId;
        }
    }
}
