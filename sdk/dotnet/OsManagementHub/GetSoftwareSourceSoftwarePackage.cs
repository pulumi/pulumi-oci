// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OsManagementHub
{
    public static class GetSoftwareSourceSoftwarePackage
    {
        /// <summary>
        /// This data source provides details about a specific Software Source Software Package resource in Oracle Cloud Infrastructure Os Management Hub service.
        /// 
        /// Returns information about the specified software package.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSoftwareSourceSoftwarePackage = Oci.OsManagementHub.GetSoftwareSourceSoftwarePackage.Invoke(new()
        ///     {
        ///         SoftwarePackageName = testSoftwarePackage.Name,
        ///         SoftwareSourceId = testSoftwareSource.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSoftwareSourceSoftwarePackageResult> InvokeAsync(GetSoftwareSourceSoftwarePackageArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSoftwareSourceSoftwarePackageResult>("oci:OsManagementHub/getSoftwareSourceSoftwarePackage:getSoftwareSourceSoftwarePackage", args ?? new GetSoftwareSourceSoftwarePackageArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Software Source Software Package resource in Oracle Cloud Infrastructure Os Management Hub service.
        /// 
        /// Returns information about the specified software package.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSoftwareSourceSoftwarePackage = Oci.OsManagementHub.GetSoftwareSourceSoftwarePackage.Invoke(new()
        ///     {
        ///         SoftwarePackageName = testSoftwarePackage.Name,
        ///         SoftwareSourceId = testSoftwareSource.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSoftwareSourceSoftwarePackageResult> Invoke(GetSoftwareSourceSoftwarePackageInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSoftwareSourceSoftwarePackageResult>("oci:OsManagementHub/getSoftwareSourceSoftwarePackage:getSoftwareSourceSoftwarePackage", args ?? new GetSoftwareSourceSoftwarePackageInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Software Source Software Package resource in Oracle Cloud Infrastructure Os Management Hub service.
        /// 
        /// Returns information about the specified software package.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSoftwareSourceSoftwarePackage = Oci.OsManagementHub.GetSoftwareSourceSoftwarePackage.Invoke(new()
        ///     {
        ///         SoftwarePackageName = testSoftwarePackage.Name,
        ///         SoftwareSourceId = testSoftwareSource.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSoftwareSourceSoftwarePackageResult> Invoke(GetSoftwareSourceSoftwarePackageInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSoftwareSourceSoftwarePackageResult>("oci:OsManagementHub/getSoftwareSourceSoftwarePackage:getSoftwareSourceSoftwarePackage", args ?? new GetSoftwareSourceSoftwarePackageInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSoftwareSourceSoftwarePackageArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the software package.
        /// </summary>
        [Input("softwarePackageName", required: true)]
        public string SoftwarePackageName { get; set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source.
        /// </summary>
        [Input("softwareSourceId", required: true)]
        public string SoftwareSourceId { get; set; } = null!;

        public GetSoftwareSourceSoftwarePackageArgs()
        {
        }
        public static new GetSoftwareSourceSoftwarePackageArgs Empty => new GetSoftwareSourceSoftwarePackageArgs();
    }

    public sealed class GetSoftwareSourceSoftwarePackageInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the software package.
        /// </summary>
        [Input("softwarePackageName", required: true)]
        public Input<string> SoftwarePackageName { get; set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source.
        /// </summary>
        [Input("softwareSourceId", required: true)]
        public Input<string> SoftwareSourceId { get; set; } = null!;

        public GetSoftwareSourceSoftwarePackageInvokeArgs()
        {
        }
        public static new GetSoftwareSourceSoftwarePackageInvokeArgs Empty => new GetSoftwareSourceSoftwarePackageInvokeArgs();
    }


    [OutputType]
    public sealed class GetSoftwareSourceSoftwarePackageResult
    {
        /// <summary>
        /// The architecture for which this software was built
        /// </summary>
        public readonly string Architecture;
        /// <summary>
        /// Checksum of the file.
        /// </summary>
        public readonly string Checksum;
        /// <summary>
        /// Type of the checksum.
        /// </summary>
        public readonly string ChecksumType;
        /// <summary>
        /// List of dependencies for the software package.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSoftwareSourceSoftwarePackageDependencyResult> Dependencies;
        /// <summary>
        /// Software source description.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Software source name.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// List of files for the software package.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSoftwareSourceSoftwarePackageFileResult> Files;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Indicates whether this package is the latest version.
        /// </summary>
        public readonly bool IsLatest;
        /// <summary>
        /// The date and time the package was last modified (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
        /// </summary>
        public readonly string LastModifiedDate;
        /// <summary>
        /// Unique identifier for the package. Note that this is not an OCID.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The OS families the package belongs to.
        /// </summary>
        public readonly ImmutableArray<string> OsFamilies;
        /// <summary>
        /// Size of the package in bytes.
        /// </summary>
        public readonly string SizeInBytes;
        public readonly string SoftwarePackageName;
        public readonly string SoftwareSourceId;
        /// <summary>
        /// List of software sources that provide the software package. This property is deprecated and it will be removed in a future API release.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSoftwareSourceSoftwarePackageSoftwareSourceResult> SoftwareSources;
        /// <summary>
        /// Type of the package.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Version of the package.
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private GetSoftwareSourceSoftwarePackageResult(
            string architecture,

            string checksum,

            string checksumType,

            ImmutableArray<Outputs.GetSoftwareSourceSoftwarePackageDependencyResult> dependencies,

            string description,

            string displayName,

            ImmutableArray<Outputs.GetSoftwareSourceSoftwarePackageFileResult> files,

            string id,

            bool isLatest,

            string lastModifiedDate,

            string name,

            ImmutableArray<string> osFamilies,

            string sizeInBytes,

            string softwarePackageName,

            string softwareSourceId,

            ImmutableArray<Outputs.GetSoftwareSourceSoftwarePackageSoftwareSourceResult> softwareSources,

            string type,

            string version)
        {
            Architecture = architecture;
            Checksum = checksum;
            ChecksumType = checksumType;
            Dependencies = dependencies;
            Description = description;
            DisplayName = displayName;
            Files = files;
            Id = id;
            IsLatest = isLatest;
            LastModifiedDate = lastModifiedDate;
            Name = name;
            OsFamilies = osFamilies;
            SizeInBytes = sizeInBytes;
            SoftwarePackageName = softwarePackageName;
            SoftwareSourceId = softwareSourceId;
            SoftwareSources = softwareSources;
            Type = type;
            Version = version;
        }
    }
}
