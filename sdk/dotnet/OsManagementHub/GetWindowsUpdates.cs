// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OsManagementHub
{
    public static class GetWindowsUpdates
    {
        /// <summary>
        /// This data source provides the list of Windows Updates in Oracle Cloud Infrastructure Os Management Hub service.
        /// 
        /// Lists Windows updates that have been reported to the service.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testWindowsUpdates = Oci.OsManagementHub.GetWindowsUpdates.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         ClassificationTypes = windowsUpdateClassificationType,
        ///         DisplayNameContains = windowsUpdateDisplayNameContains,
        ///         Names = windowsUpdateName,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetWindowsUpdatesResult> InvokeAsync(GetWindowsUpdatesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWindowsUpdatesResult>("oci:OsManagementHub/getWindowsUpdates:getWindowsUpdates", args ?? new GetWindowsUpdatesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Windows Updates in Oracle Cloud Infrastructure Os Management Hub service.
        /// 
        /// Lists Windows updates that have been reported to the service.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testWindowsUpdates = Oci.OsManagementHub.GetWindowsUpdates.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         ClassificationTypes = windowsUpdateClassificationType,
        ///         DisplayNameContains = windowsUpdateDisplayNameContains,
        ///         Names = windowsUpdateName,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetWindowsUpdatesResult> Invoke(GetWindowsUpdatesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWindowsUpdatesResult>("oci:OsManagementHub/getWindowsUpdates:getWindowsUpdates", args ?? new GetWindowsUpdatesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Windows Updates in Oracle Cloud Infrastructure Os Management Hub service.
        /// 
        /// Lists Windows updates that have been reported to the service.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testWindowsUpdates = Oci.OsManagementHub.GetWindowsUpdates.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         ClassificationTypes = windowsUpdateClassificationType,
        ///         DisplayNameContains = windowsUpdateDisplayNameContains,
        ///         Names = windowsUpdateName,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetWindowsUpdatesResult> Invoke(GetWindowsUpdatesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetWindowsUpdatesResult>("oci:OsManagementHub/getWindowsUpdates:getWindowsUpdates", args ?? new GetWindowsUpdatesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWindowsUpdatesArgs : global::Pulumi.InvokeArgs
    {
        [Input("classificationTypes")]
        private List<string>? _classificationTypes;

        /// <summary>
        /// A filter to return only packages that match the given update classification type.
        /// </summary>
        public List<string> ClassificationTypes
        {
            get => _classificationTypes ?? (_classificationTypes = new List<string>());
            set => _classificationTypes = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment. This parameter is required and returns only resources contained within the specified compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return resources that may partially match the given display name.
        /// </summary>
        [Input("displayNameContains")]
        public string? DisplayNameContains { get; set; }

        [Input("filters")]
        private List<Inputs.GetWindowsUpdatesFilterArgs>? _filters;
        public List<Inputs.GetWindowsUpdatesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetWindowsUpdatesFilterArgs>());
            set => _filters = value;
        }

        [Input("names")]
        private List<string>? _names;

        /// <summary>
        /// A filter based on the unique identifier for the Windows update. Note that this is not an OCID, but is a unique identifier assigned by Microsoft.  Example: '6981d463-cd91-4a26-b7c4-ea4ded9183ed'
        /// </summary>
        public List<string> Names
        {
            get => _names ?? (_names = new List<string>());
            set => _names = value;
        }

        public GetWindowsUpdatesArgs()
        {
        }
        public static new GetWindowsUpdatesArgs Empty => new GetWindowsUpdatesArgs();
    }

    public sealed class GetWindowsUpdatesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("classificationTypes")]
        private InputList<string>? _classificationTypes;

        /// <summary>
        /// A filter to return only packages that match the given update classification type.
        /// </summary>
        public InputList<string> ClassificationTypes
        {
            get => _classificationTypes ?? (_classificationTypes = new InputList<string>());
            set => _classificationTypes = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment. This parameter is required and returns only resources contained within the specified compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return resources that may partially match the given display name.
        /// </summary>
        [Input("displayNameContains")]
        public Input<string>? DisplayNameContains { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetWindowsUpdatesFilterInputArgs>? _filters;
        public InputList<Inputs.GetWindowsUpdatesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetWindowsUpdatesFilterInputArgs>());
            set => _filters = value;
        }

        [Input("names")]
        private InputList<string>? _names;

        /// <summary>
        /// A filter based on the unique identifier for the Windows update. Note that this is not an OCID, but is a unique identifier assigned by Microsoft.  Example: '6981d463-cd91-4a26-b7c4-ea4ded9183ed'
        /// </summary>
        public InputList<string> Names
        {
            get => _names ?? (_names = new InputList<string>());
            set => _names = value;
        }

        public GetWindowsUpdatesInvokeArgs()
        {
        }
        public static new GetWindowsUpdatesInvokeArgs Empty => new GetWindowsUpdatesInvokeArgs();
    }


    [OutputType]
    public sealed class GetWindowsUpdatesResult
    {
        public readonly ImmutableArray<string> ClassificationTypes;
        public readonly string CompartmentId;
        public readonly string? DisplayNameContains;
        public readonly ImmutableArray<Outputs.GetWindowsUpdatesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Name of the Windows update.
        /// </summary>
        public readonly ImmutableArray<string> Names;
        /// <summary>
        /// The list of windows_update_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWindowsUpdatesWindowsUpdateCollectionResult> WindowsUpdateCollections;

        [OutputConstructor]
        private GetWindowsUpdatesResult(
            ImmutableArray<string> classificationTypes,

            string compartmentId,

            string? displayNameContains,

            ImmutableArray<Outputs.GetWindowsUpdatesFilterResult> filters,

            string id,

            ImmutableArray<string> names,

            ImmutableArray<Outputs.GetWindowsUpdatesWindowsUpdateCollectionResult> windowsUpdateCollections)
        {
            ClassificationTypes = classificationTypes;
            CompartmentId = compartmentId;
            DisplayNameContains = displayNameContains;
            Filters = filters;
            Id = id;
            Names = names;
            WindowsUpdateCollections = windowsUpdateCollections;
        }
    }
}
