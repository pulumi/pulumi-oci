// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OsManagementHub
{
    /// <summary>
    /// This resource provides the Lifecycle Stage Detach Managed Instances Management resource in Oracle Cloud Infrastructure Os Management Hub service.
    /// 
    /// Detaches (removes) a managed instance from a lifecycle stage.
    /// 
    /// ## Import
    /// 
    /// LifecycleStageDetachManagedInstancesManagement can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:OsManagementHub/lifecycleStageDetachManagedInstancesManagement:LifecycleStageDetachManagedInstancesManagement test_lifecycle_stage_detach_managed_instances_management "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:OsManagementHub/lifecycleStageDetachManagedInstancesManagement:LifecycleStageDetachManagedInstancesManagement")]
    public partial class LifecycleStageDetachManagedInstancesManagement : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the lifecycle stage.
        /// </summary>
        [Output("lifecycleStageId")]
        public Output<string> LifecycleStageId { get; private set; } = null!;

        /// <summary>
        /// The details about the managed instances.
        /// </summary>
        [Output("managedInstanceDetails")]
        public Output<Outputs.LifecycleStageDetachManagedInstancesManagementManagedInstanceDetails> ManagedInstanceDetails { get; private set; } = null!;


        /// <summary>
        /// Create a LifecycleStageDetachManagedInstancesManagement resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LifecycleStageDetachManagedInstancesManagement(string name, LifecycleStageDetachManagedInstancesManagementArgs args, CustomResourceOptions? options = null)
            : base("oci:OsManagementHub/lifecycleStageDetachManagedInstancesManagement:LifecycleStageDetachManagedInstancesManagement", name, args ?? new LifecycleStageDetachManagedInstancesManagementArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LifecycleStageDetachManagedInstancesManagement(string name, Input<string> id, LifecycleStageDetachManagedInstancesManagementState? state = null, CustomResourceOptions? options = null)
            : base("oci:OsManagementHub/lifecycleStageDetachManagedInstancesManagement:LifecycleStageDetachManagedInstancesManagement", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LifecycleStageDetachManagedInstancesManagement resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LifecycleStageDetachManagedInstancesManagement Get(string name, Input<string> id, LifecycleStageDetachManagedInstancesManagementState? state = null, CustomResourceOptions? options = null)
        {
            return new LifecycleStageDetachManagedInstancesManagement(name, id, state, options);
        }
    }

    public sealed class LifecycleStageDetachManagedInstancesManagementArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the lifecycle stage.
        /// </summary>
        [Input("lifecycleStageId", required: true)]
        public Input<string> LifecycleStageId { get; set; } = null!;

        /// <summary>
        /// The details about the managed instances.
        /// </summary>
        [Input("managedInstanceDetails", required: true)]
        public Input<Inputs.LifecycleStageDetachManagedInstancesManagementManagedInstanceDetailsArgs> ManagedInstanceDetails { get; set; } = null!;

        public LifecycleStageDetachManagedInstancesManagementArgs()
        {
        }
        public static new LifecycleStageDetachManagedInstancesManagementArgs Empty => new LifecycleStageDetachManagedInstancesManagementArgs();
    }

    public sealed class LifecycleStageDetachManagedInstancesManagementState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the lifecycle stage.
        /// </summary>
        [Input("lifecycleStageId")]
        public Input<string>? LifecycleStageId { get; set; }

        /// <summary>
        /// The details about the managed instances.
        /// </summary>
        [Input("managedInstanceDetails")]
        public Input<Inputs.LifecycleStageDetachManagedInstancesManagementManagedInstanceDetailsGetArgs>? ManagedInstanceDetails { get; set; }

        public LifecycleStageDetachManagedInstancesManagementState()
        {
        }
        public static new LifecycleStageDetachManagedInstancesManagementState Empty => new LifecycleStageDetachManagedInstancesManagementState();
    }
}
