// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OsManagementHub
{
    /// <summary>
    /// This resource provides the Management Station resource in Oracle Cloud Infrastructure Os Management Hub service.
    /// 
    /// Creates a management station using the proxy and mirror configuration information provided.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testManagementStation = new Oci.OsManagementHub.ManagementStation("test_management_station", new()
    ///     {
    ///         CompartmentId = compartmentId,
    ///         DisplayName = managementStationDisplayName,
    ///         Hostname = managementStationHostname,
    ///         Mirror = new Oci.OsManagementHub.Inputs.ManagementStationMirrorArgs
    ///         {
    ///             Directory = managementStationMirrorDirectory,
    ///             Port = managementStationMirrorPort,
    ///             Sslport = managementStationMirrorSslport,
    ///             IsSslverifyEnabled = managementStationMirrorIsSslverifyEnabled,
    ///             Sslcert = managementStationMirrorSslcert,
    ///         },
    ///         Proxy = new Oci.OsManagementHub.Inputs.ManagementStationProxyArgs
    ///         {
    ///             IsEnabled = managementStationProxyIsEnabled,
    ///             Forward = managementStationProxyForward,
    ///             Hosts = managementStationProxyHosts,
    ///             Port = managementStationProxyPort,
    ///         },
    ///         DefinedTags = 
    ///         {
    ///             { "Operations.CostCenter", "42" },
    ///         },
    ///         Description = managementStationDescription,
    ///         FreeformTags = 
    ///         {
    ///             { "Department", "Finance" },
    ///         },
    ///         IsAutoConfigEnabled = managementStationIsAutoConfigEnabled,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ManagementStations can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:OsManagementHub/managementStation:ManagementStation test_management_station "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:OsManagementHub/managementStation:ManagementStation")]
    public partial class ManagementStation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the management station.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, string>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) User-specified description of the management station. Avoid entering confidential information.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// (Updatable) User-friendly name for the management station. Does not have to be unique and you can change the name later. Avoid entering confidential information.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, string>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// Overall health information of the management station.
        /// </summary>
        [Output("healths")]
        public Output<ImmutableArray<Outputs.ManagementStationHealth>> Healths { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Hostname of the management station.
        /// </summary>
        [Output("hostname")]
        public Output<string> Hostname { get; private set; } = null!;

        /// <summary>
        /// (Updatable) When enabled, the station setup script automatically runs to configure the firewall and SELinux settings on the station.
        /// </summary>
        [Output("isAutoConfigEnabled")]
        public Output<bool> IsAutoConfigEnabled { get; private set; } = null!;

        /// <summary>
        /// The location of the instance that is acting as the management station.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the instance that is acting as the management station.
        /// </summary>
        [Output("managedInstanceId")]
        public Output<string> ManagedInstanceId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Information used to create the mirror configuration for a management station.
        /// </summary>
        [Output("mirror")]
        public Output<Outputs.ManagementStationMirror> Mirror { get; private set; } = null!;

        /// <summary>
        /// A decimal number representing the amount of mirror capacity used by the sync.
        /// </summary>
        [Output("mirrorCapacity")]
        public Output<int> MirrorCapacity { get; private set; } = null!;

        /// <summary>
        /// The total number of all packages within the mirrored software sources.
        /// </summary>
        [Output("mirrorPackageCount")]
        public Output<int> MirrorPackageCount { get; private set; } = null!;

        /// <summary>
        /// The total size of all software source mirrors in bytes.
        /// </summary>
        [Output("mirrorSize")]
        public Output<string> MirrorSize { get; private set; } = null!;

        /// <summary>
        /// Amount of available mirror storage in bytes.
        /// </summary>
        [Output("mirrorStorageAvailableSize")]
        public Output<string> MirrorStorageAvailableSize { get; private set; } = null!;

        /// <summary>
        /// Total mirror storage size in bytes.
        /// </summary>
        [Output("mirrorStorageSize")]
        public Output<string> MirrorStorageSize { get; private set; } = null!;

        /// <summary>
        /// Status summary of the mirror sync.
        /// </summary>
        [Output("mirrorSyncStatuses")]
        public Output<ImmutableArray<Outputs.ManagementStationMirrorSyncStatus>> MirrorSyncStatuses { get; private set; } = null!;

        /// <summary>
        /// The total number of unique packages within the mirrored software sources on the station. Each package is counted only once, regardless of how many versions it has.
        /// </summary>
        [Output("mirrorUniquePackageCount")]
        public Output<int> MirrorUniquePackageCount { get; private set; } = null!;

        /// <summary>
        /// A decimal number representing the progress of the current mirror sync.
        /// </summary>
        [Output("overallPercentage")]
        public Output<int> OverallPercentage { get; private set; } = null!;

        /// <summary>
        /// Current state of the mirror sync for the management station.
        /// </summary>
        [Output("overallState")]
        public Output<string> OverallState { get; private set; } = null!;

        /// <summary>
        /// A list of other management stations that are behind the same load balancer within a high availability configuration. Stations are identified as peers if they have the same hostname and compartment.
        /// </summary>
        [Output("peerManagementStations")]
        public Output<ImmutableArray<Outputs.ManagementStationPeerManagementStation>> PeerManagementStations { get; private set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the registration profile used for the management station.
        /// </summary>
        [Output("profileId")]
        public Output<string> ProfileId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Information used to create the proxy configuration for a management station.
        /// </summary>
        [Output("proxy")]
        public Output<Outputs.ManagementStationProxy> Proxy { get; private set; } = null!;

        /// <summary>
        /// (Updatable) An optional property when incremented triggers Refresh. Could be set to any integer value.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("refreshTrigger")]
        public Output<int?> RefreshTrigger { get; private set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the scheduled job for the mirror sync.
        /// </summary>
        [Output("scheduledJobId")]
        public Output<string> ScheduledJobId { get; private set; } = null!;

        /// <summary>
        /// The current state of the management station.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        [Output("systemTags")]
        public Output<ImmutableDictionary<string, string>> SystemTags { get; private set; } = null!;

        /// <summary>
        /// The number of software sources that the station is mirroring.
        /// </summary>
        [Output("totalMirrors")]
        public Output<int> TotalMirrors { get; private set; } = null!;


        /// <summary>
        /// Create a ManagementStation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ManagementStation(string name, ManagementStationArgs args, CustomResourceOptions? options = null)
            : base("oci:OsManagementHub/managementStation:ManagementStation", name, args ?? new ManagementStationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ManagementStation(string name, Input<string> id, ManagementStationState? state = null, CustomResourceOptions? options = null)
            : base("oci:OsManagementHub/managementStation:ManagementStation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ManagementStation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ManagementStation Get(string name, Input<string> id, ManagementStationState? state = null, CustomResourceOptions? options = null)
        {
            return new ManagementStation(name, id, state, options);
        }
    }

    public sealed class ManagementStationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the management station.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) User-specified description of the management station. Avoid entering confidential information.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) User-friendly name for the management station. Does not have to be unique and you can change the name later. Avoid entering confidential information.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) Hostname of the management station.
        /// </summary>
        [Input("hostname", required: true)]
        public Input<string> Hostname { get; set; } = null!;

        /// <summary>
        /// (Updatable) When enabled, the station setup script automatically runs to configure the firewall and SELinux settings on the station.
        /// </summary>
        [Input("isAutoConfigEnabled")]
        public Input<bool>? IsAutoConfigEnabled { get; set; }

        /// <summary>
        /// (Updatable) Information used to create the mirror configuration for a management station.
        /// </summary>
        [Input("mirror", required: true)]
        public Input<Inputs.ManagementStationMirrorArgs> Mirror { get; set; } = null!;

        /// <summary>
        /// (Updatable) Information used to create the proxy configuration for a management station.
        /// </summary>
        [Input("proxy", required: true)]
        public Input<Inputs.ManagementStationProxyArgs> Proxy { get; set; } = null!;

        /// <summary>
        /// (Updatable) An optional property when incremented triggers Refresh. Could be set to any integer value.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("refreshTrigger")]
        public Input<int>? RefreshTrigger { get; set; }

        public ManagementStationArgs()
        {
        }
        public static new ManagementStationArgs Empty => new ManagementStationArgs();
    }

    public sealed class ManagementStationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the management station.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) User-specified description of the management station. Avoid entering confidential information.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) User-friendly name for the management station. Does not have to be unique and you can change the name later. Avoid entering confidential information.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        [Input("healths")]
        private InputList<Inputs.ManagementStationHealthGetArgs>? _healths;

        /// <summary>
        /// Overall health information of the management station.
        /// </summary>
        public InputList<Inputs.ManagementStationHealthGetArgs> Healths
        {
            get => _healths ?? (_healths = new InputList<Inputs.ManagementStationHealthGetArgs>());
            set => _healths = value;
        }

        /// <summary>
        /// (Updatable) Hostname of the management station.
        /// </summary>
        [Input("hostname")]
        public Input<string>? Hostname { get; set; }

        /// <summary>
        /// (Updatable) When enabled, the station setup script automatically runs to configure the firewall and SELinux settings on the station.
        /// </summary>
        [Input("isAutoConfigEnabled")]
        public Input<bool>? IsAutoConfigEnabled { get; set; }

        /// <summary>
        /// The location of the instance that is acting as the management station.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the instance that is acting as the management station.
        /// </summary>
        [Input("managedInstanceId")]
        public Input<string>? ManagedInstanceId { get; set; }

        /// <summary>
        /// (Updatable) Information used to create the mirror configuration for a management station.
        /// </summary>
        [Input("mirror")]
        public Input<Inputs.ManagementStationMirrorGetArgs>? Mirror { get; set; }

        /// <summary>
        /// A decimal number representing the amount of mirror capacity used by the sync.
        /// </summary>
        [Input("mirrorCapacity")]
        public Input<int>? MirrorCapacity { get; set; }

        /// <summary>
        /// The total number of all packages within the mirrored software sources.
        /// </summary>
        [Input("mirrorPackageCount")]
        public Input<int>? MirrorPackageCount { get; set; }

        /// <summary>
        /// The total size of all software source mirrors in bytes.
        /// </summary>
        [Input("mirrorSize")]
        public Input<string>? MirrorSize { get; set; }

        /// <summary>
        /// Amount of available mirror storage in bytes.
        /// </summary>
        [Input("mirrorStorageAvailableSize")]
        public Input<string>? MirrorStorageAvailableSize { get; set; }

        /// <summary>
        /// Total mirror storage size in bytes.
        /// </summary>
        [Input("mirrorStorageSize")]
        public Input<string>? MirrorStorageSize { get; set; }

        [Input("mirrorSyncStatuses")]
        private InputList<Inputs.ManagementStationMirrorSyncStatusGetArgs>? _mirrorSyncStatuses;

        /// <summary>
        /// Status summary of the mirror sync.
        /// </summary>
        public InputList<Inputs.ManagementStationMirrorSyncStatusGetArgs> MirrorSyncStatuses
        {
            get => _mirrorSyncStatuses ?? (_mirrorSyncStatuses = new InputList<Inputs.ManagementStationMirrorSyncStatusGetArgs>());
            set => _mirrorSyncStatuses = value;
        }

        /// <summary>
        /// The total number of unique packages within the mirrored software sources on the station. Each package is counted only once, regardless of how many versions it has.
        /// </summary>
        [Input("mirrorUniquePackageCount")]
        public Input<int>? MirrorUniquePackageCount { get; set; }

        /// <summary>
        /// A decimal number representing the progress of the current mirror sync.
        /// </summary>
        [Input("overallPercentage")]
        public Input<int>? OverallPercentage { get; set; }

        /// <summary>
        /// Current state of the mirror sync for the management station.
        /// </summary>
        [Input("overallState")]
        public Input<string>? OverallState { get; set; }

        [Input("peerManagementStations")]
        private InputList<Inputs.ManagementStationPeerManagementStationGetArgs>? _peerManagementStations;

        /// <summary>
        /// A list of other management stations that are behind the same load balancer within a high availability configuration. Stations are identified as peers if they have the same hostname and compartment.
        /// </summary>
        public InputList<Inputs.ManagementStationPeerManagementStationGetArgs> PeerManagementStations
        {
            get => _peerManagementStations ?? (_peerManagementStations = new InputList<Inputs.ManagementStationPeerManagementStationGetArgs>());
            set => _peerManagementStations = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the registration profile used for the management station.
        /// </summary>
        [Input("profileId")]
        public Input<string>? ProfileId { get; set; }

        /// <summary>
        /// (Updatable) Information used to create the proxy configuration for a management station.
        /// </summary>
        [Input("proxy")]
        public Input<Inputs.ManagementStationProxyGetArgs>? Proxy { get; set; }

        /// <summary>
        /// (Updatable) An optional property when incremented triggers Refresh. Could be set to any integer value.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("refreshTrigger")]
        public Input<int>? RefreshTrigger { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the scheduled job for the mirror sync.
        /// </summary>
        [Input("scheduledJobId")]
        public Input<string>? ScheduledJobId { get; set; }

        /// <summary>
        /// The current state of the management station.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("systemTags")]
        private InputMap<string>? _systemTags;

        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public InputMap<string> SystemTags
        {
            get => _systemTags ?? (_systemTags = new InputMap<string>());
            set => _systemTags = value;
        }

        /// <summary>
        /// The number of software sources that the station is mirroring.
        /// </summary>
        [Input("totalMirrors")]
        public Input<int>? TotalMirrors { get; set; }

        public ManagementStationState()
        {
        }
        public static new ManagementStationState Empty => new ManagementStationState();
    }
}
