// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OsManagementHub.Outputs
{

    [OutputType]
    public sealed class EventData
    {
        /// <summary>
        /// Provides additional information for the work request associated with an event.
        /// </summary>
        public readonly ImmutableArray<Outputs.EventDataAdditionalDetail> AdditionalDetails;
        /// <summary>
        /// Provides information collected for the exploit attempt event.
        /// </summary>
        public readonly ImmutableArray<Outputs.EventDataContent> Contents;
        /// <summary>
        /// Number of times the event has occurred.
        /// </summary>
        public readonly int? EventCount;
        /// <summary>
        /// Fingerprint of the event.
        /// </summary>
        public readonly string? EventFingerprint;
        /// <summary>
        /// Type of management station operation.
        /// </summary>
        public readonly string? OperationType;
        /// <summary>
        /// Reason for the event.
        /// </summary>
        public readonly string? Reason;
        /// <summary>
        /// Status of the management station operation.
        /// </summary>
        public readonly string? Status;
        /// <summary>
        /// The date and time that the event first occurred.
        /// </summary>
        public readonly string? TimeFirstOccurred;

        [OutputConstructor]
        private EventData(
            ImmutableArray<Outputs.EventDataAdditionalDetail> additionalDetails,

            ImmutableArray<Outputs.EventDataContent> contents,

            int? eventCount,

            string? eventFingerprint,

            string? operationType,

            string? reason,

            string? status,

            string? timeFirstOccurred)
        {
            AdditionalDetails = additionalDetails;
            Contents = contents;
            EventCount = eventCount;
            EventFingerprint = eventFingerprint;
            OperationType = operationType;
            Reason = reason;
            Status = status;
            TimeFirstOccurred = timeFirstOccurred;
        }
    }
}
