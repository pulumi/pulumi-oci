// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OsManagementHub.Outputs
{

    [OutputType]
    public sealed class EventDataContent
    {
        /// <summary>
        /// Crash content availability status:
        /// * 'NOT_AVAILABLE' indicates the content is not available on the instance nor in the service
        /// * 'AVAILABLE_ON_INSTANCE' indicates the content is only available on the instance.
        /// * 'AVAILABLE_ON_SERVICE' indicates the content is only available on the service.
        /// * 'AVAILABLE_ON_INSTANCE_AND_SERVICE' indicates the content is available both on the instance and the service
        /// * 'AVAILABLE_ON_INSTANCE_UPLOAD_IN_PROGRESS' indicates the content is available on the instance and its upload to the service is in progress.
        /// </summary>
        public readonly string? ContentAvailability;
        /// <summary>
        /// Location of the Kernel event content.
        /// </summary>
        public readonly string? ContentLocation;
        /// <summary>
        /// The content of the exploit detection log.
        /// </summary>
        public readonly string? ExploitDetectionLogContent;
        /// <summary>
        /// The location of the exploit detection log within object storage.
        /// </summary>
        public readonly string? ExploitObjectStoreLocation;
        /// <summary>
        /// Size of the event content.
        /// </summary>
        public readonly int? Size;
        /// <summary>
        /// Event type:
        /// </summary>
        public readonly string? Type;

        [OutputConstructor]
        private EventDataContent(
            string? contentAvailability,

            string? contentLocation,

            string? exploitDetectionLogContent,

            string? exploitObjectStoreLocation,

            int? size,

            string? type)
        {
            ContentAvailability = contentAvailability;
            ContentLocation = contentLocation;
            ExploitDetectionLogContent = exploitDetectionLogContent;
            ExploitObjectStoreLocation = exploitObjectStoreLocation;
            Size = size;
            Type = type;
        }
    }
}
