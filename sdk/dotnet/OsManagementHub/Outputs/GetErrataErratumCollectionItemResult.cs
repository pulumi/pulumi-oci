// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OsManagementHub.Outputs
{

    [OutputType]
    public sealed class GetErrataErratumCollectionItemResult
    {
        /// <summary>
        /// The advisory severity.
        /// </summary>
        public readonly string AdvisorySeverity;
        /// <summary>
        /// A filter to return only errata that match the given advisory types.
        /// </summary>
        public readonly string AdvisoryType;
        /// <summary>
        /// A filter to return only packages that match the given update classification type.
        /// </summary>
        public readonly string ClassificationType;
        /// <summary>
        /// Software source description.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Information specifying from where the erratum was release.
        /// </summary>
        public readonly string From;
        /// <summary>
        /// The assigned erratum name. It's unique and not changeable.  Example: `ELSA-2020-5804`
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The OS families the package belongs to.
        /// </summary>
        public readonly ImmutableArray<string> OsFamilies;
        /// <summary>
        /// List of packages affected by this erratum.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetErrataErratumCollectionItemPackageResult> Packages;
        /// <summary>
        /// Information describing how to find more information about. the erratum.
        /// </summary>
        public readonly string References;
        /// <summary>
        /// List of CVEs applicable to this erratum.
        /// </summary>
        public readonly ImmutableArray<string> RelatedCves;
        /// <summary>
        /// List of repository identifiers.
        /// </summary>
        public readonly ImmutableArray<string> Repositories;
        /// <summary>
        /// Information describing how the erratum can be resolved.
        /// </summary>
        public readonly string Solution;
        /// <summary>
        /// Summary description of the erratum.
        /// </summary>
        public readonly string Synopsis;
        /// <summary>
        /// The date and time the erratum was issued (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
        /// </summary>
        public readonly string TimeIssued;
        /// <summary>
        /// The date and time the erratum was updated (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetErrataErratumCollectionItemResult(
            string advisorySeverity,

            string advisoryType,

            string classificationType,

            string description,

            string from,

            string name,

            ImmutableArray<string> osFamilies,

            ImmutableArray<Outputs.GetErrataErratumCollectionItemPackageResult> packages,

            string references,

            ImmutableArray<string> relatedCves,

            ImmutableArray<string> repositories,

            string solution,

            string synopsis,

            string timeIssued,

            string timeUpdated)
        {
            AdvisorySeverity = advisorySeverity;
            AdvisoryType = advisoryType;
            ClassificationType = classificationType;
            Description = description;
            From = from;
            Name = name;
            OsFamilies = osFamilies;
            Packages = packages;
            References = references;
            RelatedCves = relatedCves;
            Repositories = repositories;
            Solution = solution;
            Synopsis = synopsis;
            TimeIssued = timeIssued;
            TimeUpdated = timeUpdated;
        }
    }
}
