// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OsManagementHub.Outputs
{

    [OutputType]
    public sealed class GetManagedInstanceInstalledPackagesInstalledPackageCollectionItemResult
    {
        /// <summary>
        /// The architecture for which this package was built.
        /// </summary>
        public readonly string Architecture;
        /// <summary>
        /// A filter to return resources that match the given display names.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Unique identifier for the package.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Status of the software package.
        /// </summary>
        public readonly string PackageClassification;
        /// <summary>
        /// List of software sources that provide the software package.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetManagedInstanceInstalledPackagesInstalledPackageCollectionItemSoftwareSourceResult> SoftwareSources;
        /// <summary>
        /// The date and time the package was installed, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
        /// </summary>
        public readonly string TimeInstalled;
        /// <summary>
        /// The date and time the package was issued by a providing erratum (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
        /// </summary>
        public readonly string TimeIssued;
        /// <summary>
        /// Type of the package.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Version of the installed package.
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private GetManagedInstanceInstalledPackagesInstalledPackageCollectionItemResult(
            string architecture,

            string displayName,

            string name,

            string packageClassification,

            ImmutableArray<Outputs.GetManagedInstanceInstalledPackagesInstalledPackageCollectionItemSoftwareSourceResult> softwareSources,

            string timeInstalled,

            string timeIssued,

            string type,

            string version)
        {
            Architecture = architecture;
            DisplayName = displayName;
            Name = name;
            PackageClassification = packageClassification;
            SoftwareSources = softwareSources;
            TimeInstalled = timeInstalled;
            TimeIssued = timeIssued;
            Type = type;
            Version = version;
        }
    }
}
