// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OsManagementHub.Outputs
{

    [OutputType]
    public sealed class GetProfilesProfileCollectionItemResult
    {
        /// <summary>
        /// A filter to return only profiles that match the given archType.
        /// </summary>
        public readonly string? ArchType;
        /// <summary>
        /// The OCID of the compartment that contains the resources to list.
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? DefinedTags;
        /// <summary>
        /// Software source description.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// A filter to return resources that match the given display names.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? FreeformTags;
        /// <summary>
        /// The OCID of the software source.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Identifying information for the specified lifecycle environment.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProfilesProfileCollectionItemLifecycleEnvironmentResult> LifecycleEnvironments;
        public readonly string? LifecycleStageId;
        /// <summary>
        /// Identifying information for the specified lifecycle stage.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProfilesProfileCollectionItemLifecycleStageResult> LifecycleStages;
        public readonly string? ManagedInstanceGroupId;
        /// <summary>
        /// Identifying information for the specified managed instance group.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProfilesProfileCollectionItemManagedInstanceGroupResult> ManagedInstanceGroups;
        /// <summary>
        /// The OCID of the management station.
        /// </summary>
        public readonly string? ManagementStationId;
        /// <summary>
        /// A filter to return only profiles that match the given osFamily.
        /// </summary>
        public readonly string? OsFamily;
        /// <summary>
        /// A filter to return registration profiles that match the given profileType.
        /// </summary>
        public readonly string? ProfileType;
        public readonly ImmutableArray<string> SoftwareSourceIds;
        /// <summary>
        /// The list of software sources that the registration profile will use.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProfilesProfileCollectionItemSoftwareSourceResult> SoftwareSources;
        /// <summary>
        /// A filter to return only registration profile whose lifecycleState matches the given lifecycleState.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? SystemTags;
        /// <summary>
        /// The time the the registration profile was created. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string? TimeCreated;
        /// <summary>
        /// A filter to return only profiles that match the given vendorName.
        /// </summary>
        public readonly string? VendorName;

        [OutputConstructor]
        private GetProfilesProfileCollectionItemResult(
            string? archType,

            string? compartmentId,

            ImmutableDictionary<string, object>? definedTags,

            string? description,

            string? displayName,

            ImmutableDictionary<string, object>? freeformTags,

            string? id,

            ImmutableArray<Outputs.GetProfilesProfileCollectionItemLifecycleEnvironmentResult> lifecycleEnvironments,

            string? lifecycleStageId,

            ImmutableArray<Outputs.GetProfilesProfileCollectionItemLifecycleStageResult> lifecycleStages,

            string? managedInstanceGroupId,

            ImmutableArray<Outputs.GetProfilesProfileCollectionItemManagedInstanceGroupResult> managedInstanceGroups,

            string? managementStationId,

            string? osFamily,

            string? profileType,

            ImmutableArray<string> softwareSourceIds,

            ImmutableArray<Outputs.GetProfilesProfileCollectionItemSoftwareSourceResult> softwareSources,

            string? state,

            ImmutableDictionary<string, object>? systemTags,

            string? timeCreated,

            string? vendorName)
        {
            ArchType = archType;
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            LifecycleEnvironments = lifecycleEnvironments;
            LifecycleStageId = lifecycleStageId;
            LifecycleStages = lifecycleStages;
            ManagedInstanceGroupId = managedInstanceGroupId;
            ManagedInstanceGroups = managedInstanceGroups;
            ManagementStationId = managementStationId;
            OsFamily = osFamily;
            ProfileType = profileType;
            SoftwareSourceIds = softwareSourceIds;
            SoftwareSources = softwareSources;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            VendorName = vendorName;
        }
    }
}
