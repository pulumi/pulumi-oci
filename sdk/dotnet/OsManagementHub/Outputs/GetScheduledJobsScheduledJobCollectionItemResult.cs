// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OsManagementHub.Outputs
{

    [OutputType]
    public sealed class GetScheduledJobsScheduledJobCollectionItemResult
    {
        /// <summary>
        /// (Updatable) The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// User-specified description for the scheduled job.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// A filter to return resources that match the given user-friendly name.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the scheduled job. A filter to return the specified job.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Indicates whether to list only resources managed by the Autonomous Linux service.
        /// </summary>
        public readonly bool IsManagedByAutonomousLinux;
        /// <summary>
        /// A filter to return only restricted scheduled jobs.
        /// </summary>
        public readonly bool IsRestricted;
        /// <summary>
        /// Indicates whether to apply the scheduled job to all compartments in the tenancy when managedCompartmentIds specifies the tenancy [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) (root compartment).
        /// </summary>
        public readonly bool IsSubcompartmentIncluded;
        /// <summary>
        /// The lifecycle stage [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore this parameter is mutually exclusive with  managedInstanceIds, managedInstanceGroupIds, and managedCompartmentIds.
        /// </summary>
        public readonly ImmutableArray<string> LifecycleStageIds;
        /// <summary>
        /// The list of locations this scheduled job should operate on for a job targeting on compartments. (Empty list means apply to all locations). This can only be set when managedCompartmentIds is not empty.
        /// </summary>
        public readonly ImmutableArray<string> Locations;
        /// <summary>
        /// The compartment [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on. A scheduled job can only operate on one type of target, therefore this parameter is mutually exclusive with managedInstanceIds, managedInstanceGroupIds, and lifecycleStageIds.
        /// </summary>
        public readonly ImmutableArray<string> ManagedCompartmentIds;
        /// <summary>
        /// The managed instance group [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on. A scheduled job can only operate on one type of target, therefore this parameter is mutually exclusive with managedInstanceIds, managedCompartmentIds, and lifecycleStageIds.
        /// </summary>
        public readonly ImmutableArray<string> ManagedInstanceGroupIds;
        /// <summary>
        /// The managed instance [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore this parameter is mutually exclusive with  managedInstanceGroupIds, managedCompartmentIds, and lifecycleStageIds.
        /// </summary>
        public readonly ImmutableArray<string> ManagedInstanceIds;
        /// <summary>
        /// The list of operations this scheduled job needs to perform. A scheduled job supports only one operation type, unless it is one of the following:
        /// * UPDATE_PACKAGES
        /// * UPDATE_ALL
        /// * UPDATE_SECURITY
        /// * UPDATE_BUGFIX
        /// * UPDATE_ENHANCEMENT
        /// * UPDATE_OTHER
        /// * UPDATE_KSPLICE_USERSPACE
        /// * UPDATE_KSPLICE_KERNEL
        /// </summary>
        public readonly ImmutableArray<Outputs.GetScheduledJobsScheduledJobCollectionItemOperationResult> Operations;
        /// <summary>
        /// The frequency schedule for a recurring scheduled job.
        /// </summary>
        public readonly string RecurringRule;
        /// <summary>
        /// The amount of time in minutes to wait until retrying the scheduled job. If set, the service will automatically retry  a failed scheduled job after the interval. For example, you could set the interval to [2,5,10]. If the initial  execution of the job fails, the service waits 2 minutes and then retries. If that fails, the service waits 5 minutes  and then retries. If that fails, the service waits 10 minutes and then retries.
        /// </summary>
        public readonly ImmutableArray<int> RetryIntervals;
        /// <summary>
        /// A filter to return only scheduled jobs of the given scheduling type (one-time or recurring).
        /// </summary>
        public readonly string ScheduleType;
        /// <summary>
        /// A filter to return only scheduled jobs currently in the given state.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// The time this scheduled job was created (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time of the last execution of this scheduled job (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
        /// </summary>
        public readonly string TimeLastExecution;
        /// <summary>
        /// The time of the next execution of this scheduled job (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
        /// </summary>
        public readonly string TimeNextExecution;
        /// <summary>
        /// The time this scheduled job was updated (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
        /// </summary>
        public readonly string TimeUpdated;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the work request that will be rerun.
        /// </summary>
        public readonly string WorkRequestId;
        /// <summary>
        /// The list of work request [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with this scheduled job.
        /// </summary>
        public readonly ImmutableArray<string> WorkRequestIds;

        [OutputConstructor]
        private GetScheduledJobsScheduledJobCollectionItemResult(
            string compartmentId,

            ImmutableDictionary<string, string> definedTags,

            string description,

            string displayName,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            bool isManagedByAutonomousLinux,

            bool isRestricted,

            bool isSubcompartmentIncluded,

            ImmutableArray<string> lifecycleStageIds,

            ImmutableArray<string> locations,

            ImmutableArray<string> managedCompartmentIds,

            ImmutableArray<string> managedInstanceGroupIds,

            ImmutableArray<string> managedInstanceIds,

            ImmutableArray<Outputs.GetScheduledJobsScheduledJobCollectionItemOperationResult> operations,

            string recurringRule,

            ImmutableArray<int> retryIntervals,

            string scheduleType,

            string state,

            ImmutableDictionary<string, string> systemTags,

            string timeCreated,

            string timeLastExecution,

            string timeNextExecution,

            string timeUpdated,

            string workRequestId,

            ImmutableArray<string> workRequestIds)
        {
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            IsManagedByAutonomousLinux = isManagedByAutonomousLinux;
            IsRestricted = isRestricted;
            IsSubcompartmentIncluded = isSubcompartmentIncluded;
            LifecycleStageIds = lifecycleStageIds;
            Locations = locations;
            ManagedCompartmentIds = managedCompartmentIds;
            ManagedInstanceGroupIds = managedInstanceGroupIds;
            ManagedInstanceIds = managedInstanceIds;
            Operations = operations;
            RecurringRule = recurringRule;
            RetryIntervals = retryIntervals;
            ScheduleType = scheduleType;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeLastExecution = timeLastExecution;
            TimeNextExecution = timeNextExecution;
            TimeUpdated = timeUpdated;
            WorkRequestId = workRequestId;
            WorkRequestIds = workRequestIds;
        }
    }
}
