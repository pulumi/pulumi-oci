// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OsManagementHub.Outputs
{

    [OutputType]
    public sealed class GetSoftwarePackageSoftwareSourceSoftwareSourceCollectionItemResult
    {
        /// <summary>
        /// A filter to return only instances whose architecture type matches the given architecture.
        /// </summary>
        public readonly string ArchType;
        /// <summary>
        /// The availability of the software source in a non-OCI environment for a tenancy.
        /// </summary>
        public readonly string Availability;
        /// <summary>
        /// The availability of the software source in an Oracle Cloud Infrastructure environment for a tenancy.
        /// </summary>
        public readonly string AvailabilityAtOci;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment. This parameter is required and returns only resources contained within the specified compartment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// Description of the software source. For custom software sources, this is user-specified.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// A filter to return resources that match the given user-friendly name.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource that is immutable on creation.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Indicates whether the software source is required for the Autonomous Linux service.
        /// </summary>
        public readonly bool IsMandatoryForAutonomousLinux;
        /// <summary>
        /// Indicates if this software source can be mirrored to a management station.
        /// </summary>
        public readonly bool IsMirrorSyncAllowed;
        /// <summary>
        /// A filter to return only resources that match the given operating system family.
        /// </summary>
        public readonly string OsFamily;
        /// <summary>
        /// Number of packages the software source contains.
        /// </summary>
        public readonly string PackageCount;
        /// <summary>
        /// The repository ID for the software source.
        /// </summary>
        public readonly string RepoId;
        /// <summary>
        /// The size of the software source in bytes (B).
        /// </summary>
        public readonly double Size;
        /// <summary>
        /// Identifies how the versioned custom software source was created.
        /// </summary>
        public readonly string SoftwareSourceSubType;
        /// <summary>
        /// The type of the software source.
        /// </summary>
        public readonly string SoftwareSourceType;
        /// <summary>
        /// The version to assign to this custom software source.
        /// </summary>
        public readonly string SoftwareSourceVersion;
        /// <summary>
        /// A filter to return only software sources whose state matches the given state.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// The date and time the software source was created (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The date and time the software source was updated (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
        /// </summary>
        public readonly string TimeUpdated;
        /// <summary>
        /// URL for the repository. For vendor software sources, this is the URL to the regional yum server. For custom software sources, this is 'custom/&lt;repoId&gt;'.
        /// </summary>
        public readonly string Url;
        /// <summary>
        /// Name of the vendor providing the software source.
        /// </summary>
        public readonly string VendorName;
        /// <summary>
        /// List of vendor software sources that are used for the basis of the versioned custom software source.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSoftwarePackageSoftwareSourceSoftwareSourceCollectionItemVendorSoftwareSourceResult> VendorSoftwareSources;

        [OutputConstructor]
        private GetSoftwarePackageSoftwareSourceSoftwareSourceCollectionItemResult(
            string archType,

            string availability,

            string availabilityAtOci,

            string compartmentId,

            ImmutableDictionary<string, string> definedTags,

            string description,

            string displayName,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            bool isMandatoryForAutonomousLinux,

            bool isMirrorSyncAllowed,

            string osFamily,

            string packageCount,

            string repoId,

            double size,

            string softwareSourceSubType,

            string softwareSourceType,

            string softwareSourceVersion,

            string state,

            ImmutableDictionary<string, string> systemTags,

            string timeCreated,

            string timeUpdated,

            string url,

            string vendorName,

            ImmutableArray<Outputs.GetSoftwarePackageSoftwareSourceSoftwareSourceCollectionItemVendorSoftwareSourceResult> vendorSoftwareSources)
        {
            ArchType = archType;
            Availability = availability;
            AvailabilityAtOci = availabilityAtOci;
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            IsMandatoryForAutonomousLinux = isMandatoryForAutonomousLinux;
            IsMirrorSyncAllowed = isMirrorSyncAllowed;
            OsFamily = osFamily;
            PackageCount = packageCount;
            RepoId = repoId;
            Size = size;
            SoftwareSourceSubType = softwareSourceSubType;
            SoftwareSourceType = softwareSourceType;
            SoftwareSourceVersion = softwareSourceVersion;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            Url = url;
            VendorName = vendorName;
            VendorSoftwareSources = vendorSoftwareSources;
        }
    }
}
