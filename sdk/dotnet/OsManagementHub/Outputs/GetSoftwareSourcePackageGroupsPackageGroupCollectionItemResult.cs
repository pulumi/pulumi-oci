// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OsManagementHub.Outputs
{

    [OutputType]
    public sealed class GetSoftwareSourcePackageGroupsPackageGroupCollectionItemResult
    {
        /// <summary>
        /// Description of the package group.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Indicates the order to display category or environment.
        /// </summary>
        public readonly int DisplayOrder;
        /// <summary>
        /// A filter to return only package groups of the specified type.
        /// </summary>
        public readonly string GroupType;
        /// <summary>
        /// Package group identifier.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Indicates if this package group is the default.
        /// </summary>
        public readonly bool IsDefault;
        /// <summary>
        /// Indicates if this package group is visible to users.
        /// </summary>
        public readonly bool IsUserVisible;
        /// <summary>
        /// The name of the entity to be queried.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The list of packages in the package group.
        /// </summary>
        public readonly ImmutableArray<string> Packages;
        /// <summary>
        /// The repository IDs of the package group's repositories.
        /// </summary>
        public readonly ImmutableArray<string> Repositories;

        [OutputConstructor]
        private GetSoftwareSourcePackageGroupsPackageGroupCollectionItemResult(
            string description,

            int displayOrder,

            string groupType,

            string id,

            bool isDefault,

            bool isUserVisible,

            string name,

            ImmutableArray<string> packages,

            ImmutableArray<string> repositories)
        {
            Description = description;
            DisplayOrder = displayOrder;
            GroupType = groupType;
            Id = id;
            IsDefault = isDefault;
            IsUserVisible = isUserVisible;
            Name = name;
            Packages = packages;
            Repositories = repositories;
        }
    }
}
