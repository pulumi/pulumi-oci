// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OsManagementHub.Outputs
{

    [OutputType]
    public sealed class GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemResult
    {
        /// <summary>
        /// The architecture for which this software was built
        /// </summary>
        public readonly string Architecture;
        /// <summary>
        /// Checksum of the file.
        /// </summary>
        public readonly string Checksum;
        /// <summary>
        /// Type of the checksum.
        /// </summary>
        public readonly string ChecksumType;
        /// <summary>
        /// List of dependencies for the software package.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyResult> Dependencies;
        /// <summary>
        /// Software source description.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// List of files for the software package.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileResult> Files;
        /// <summary>
        /// A boolean variable that is used to list only the latest versions of packages, module streams, and stream profiles when set to true. All packages, module streams, and stream profiles are returned when set to false.
        /// </summary>
        public readonly bool IsLatest;
        /// <summary>
        /// Date of the last update to the package.
        /// </summary>
        public readonly string LastModifiedDate;
        /// <summary>
        /// Unique identifier for the package. NOTE - This is not an OCID.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Size of the package in bytes.
        /// </summary>
        public readonly string SizeInBytes;
        /// <summary>
        /// List of software sources that provide the software package.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceResult> SoftwareSources;
        /// <summary>
        /// Type of the package.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Version of the package.
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemResult(
            string architecture,

            string checksum,

            string checksumType,

            ImmutableArray<Outputs.GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyResult> dependencies,

            string description,

            string displayName,

            ImmutableArray<Outputs.GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileResult> files,

            bool isLatest,

            string lastModifiedDate,

            string name,

            string sizeInBytes,

            ImmutableArray<Outputs.GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceResult> softwareSources,

            string type,

            string version)
        {
            Architecture = architecture;
            Checksum = checksum;
            ChecksumType = checksumType;
            Dependencies = dependencies;
            Description = description;
            DisplayName = displayName;
            Files = files;
            IsLatest = isLatest;
            LastModifiedDate = lastModifiedDate;
            Name = name;
            SizeInBytes = sizeInBytes;
            SoftwareSources = softwareSources;
            Type = type;
            Version = version;
        }
    }
}
