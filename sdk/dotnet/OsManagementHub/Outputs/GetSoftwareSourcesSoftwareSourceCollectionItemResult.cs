// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OsManagementHub.Outputs
{

    [OutputType]
    public sealed class GetSoftwareSourcesSoftwareSourceCollectionItemResult
    {
        /// <summary>
        /// A filter to return only instances whose architecture type matches the given architecture.
        /// </summary>
        public readonly string? ArchType;
        /// <summary>
        /// The availabilities of the software source for a tenant.
        /// </summary>
        public readonly string? Availability;
        /// <summary>
        /// The yum repository checksum type used by this software source.
        /// </summary>
        public readonly string? ChecksumType;
        /// <summary>
        /// The OCID of the compartment that contains the resources to list.
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// Used to apply filters to a VendorSoftwareSource to create/update CustomSoftwareSources.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterResult> CustomSoftwareSourceFilters;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? DefinedTags;
        /// <summary>
        /// Information specified by the user about the software source.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? FreeformTags;
        /// <summary>
        /// Fingerprint of the GPG key for this software source.
        /// </summary>
        public readonly string? GpgKeyFingerprint;
        /// <summary>
        /// ID of the GPG key for this software source.
        /// </summary>
        public readonly string? GpgKeyId;
        /// <summary>
        /// URL of the GPG key for this software source.
        /// </summary>
        public readonly string? GpgKeyUrl;
        /// <summary>
        /// The OCID of the resource that is immutable on creation.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Indicates whether service should automatically update the custom software source for the user.
        /// </summary>
        public readonly bool? IsAutomaticallyUpdated;
        /// <summary>
        /// A filter to return only instances whose OS family type matches the given OS family.
        /// </summary>
        public readonly string? OsFamily;
        /// <summary>
        /// Number of packages.
        /// </summary>
        public readonly string? PackageCount;
        /// <summary>
        /// The Repo ID for the software source.
        /// </summary>
        public readonly string? RepoId;
        /// <summary>
        /// The type of the software source.
        /// </summary>
        public readonly string? SoftwareSourceType;
        /// <summary>
        /// The version to assign to this custom software source.
        /// </summary>
        public readonly string? SoftwareSourceVersion;
        /// <summary>
        /// A filter to return only resources whose lifecycleState matches the given lifecycleStates.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? SystemTags;
        /// <summary>
        /// The date and time the software source was created, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
        /// </summary>
        public readonly string? TimeCreated;
        /// <summary>
        /// URL for the repository.
        /// </summary>
        public readonly string? Url;
        /// <summary>
        /// A filter to return only profiles that match the given vendorName.
        /// </summary>
        public readonly string? VendorName;
        /// <summary>
        /// List of vendor software sources.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceResult> VendorSoftwareSources;

        [OutputConstructor]
        private GetSoftwareSourcesSoftwareSourceCollectionItemResult(
            string? archType,

            string? availability,

            string? checksumType,

            string? compartmentId,

            ImmutableArray<Outputs.GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterResult> customSoftwareSourceFilters,

            ImmutableDictionary<string, object>? definedTags,

            string? description,

            string? displayName,

            ImmutableDictionary<string, object>? freeformTags,

            string? gpgKeyFingerprint,

            string? gpgKeyId,

            string? gpgKeyUrl,

            string? id,

            bool? isAutomaticallyUpdated,

            string? osFamily,

            string? packageCount,

            string? repoId,

            string? softwareSourceType,

            string? softwareSourceVersion,

            string? state,

            ImmutableDictionary<string, object>? systemTags,

            string? timeCreated,

            string? url,

            string? vendorName,

            ImmutableArray<Outputs.GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceResult> vendorSoftwareSources)
        {
            ArchType = archType;
            Availability = availability;
            ChecksumType = checksumType;
            CompartmentId = compartmentId;
            CustomSoftwareSourceFilters = customSoftwareSourceFilters;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            GpgKeyFingerprint = gpgKeyFingerprint;
            GpgKeyId = gpgKeyId;
            GpgKeyUrl = gpgKeyUrl;
            Id = id;
            IsAutomaticallyUpdated = isAutomaticallyUpdated;
            OsFamily = osFamily;
            PackageCount = packageCount;
            RepoId = repoId;
            SoftwareSourceType = softwareSourceType;
            SoftwareSourceVersion = softwareSourceVersion;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            Url = url;
            VendorName = vendorName;
            VendorSoftwareSources = vendorSoftwareSources;
        }
    }
}
