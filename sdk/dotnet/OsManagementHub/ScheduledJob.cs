// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OsManagementHub
{
    /// <summary>
    /// This resource provides the Scheduled Job resource in Oracle Cloud Infrastructure Os Management Hub service.
    /// 
    /// Creates a new scheduled job.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testScheduledJob = new Oci.OsManagementHub.ScheduledJob("test_scheduled_job", new()
    ///     {
    ///         CompartmentId = compartmentId,
    ///         Operations = new[]
    ///         {
    ///             new Oci.OsManagementHub.Inputs.ScheduledJobOperationArgs
    ///             {
    ///                 OperationType = scheduledJobOperationsOperationType,
    ///                 ManageModuleStreamsDetails = new Oci.OsManagementHub.Inputs.ScheduledJobOperationManageModuleStreamsDetailsArgs
    ///                 {
    ///                     Disables = new[]
    ///                     {
    ///                         new Oci.OsManagementHub.Inputs.ScheduledJobOperationManageModuleStreamsDetailsDisableArgs
    ///                         {
    ///                             ModuleName = scheduledJobOperationsManageModuleStreamsDetailsDisableModuleName,
    ///                             StreamName = testStream.Name,
    ///                             SoftwareSourceId = testSoftwareSource.Id,
    ///                         },
    ///                     },
    ///                     Enables = new[]
    ///                     {
    ///                         new Oci.OsManagementHub.Inputs.ScheduledJobOperationManageModuleStreamsDetailsEnableArgs
    ///                         {
    ///                             ModuleName = scheduledJobOperationsManageModuleStreamsDetailsEnableModuleName,
    ///                             StreamName = testStream.Name,
    ///                             SoftwareSourceId = testSoftwareSource.Id,
    ///                         },
    ///                     },
    ///                     Installs = new[]
    ///                     {
    ///                         new Oci.OsManagementHub.Inputs.ScheduledJobOperationManageModuleStreamsDetailsInstallArgs
    ///                         {
    ///                             ModuleName = scheduledJobOperationsManageModuleStreamsDetailsInstallModuleName,
    ///                             ProfileName = testProfile.Name,
    ///                             StreamName = testStream.Name,
    ///                             SoftwareSourceId = testSoftwareSource.Id,
    ///                         },
    ///                     },
    ///                     Removes = new[]
    ///                     {
    ///                         new Oci.OsManagementHub.Inputs.ScheduledJobOperationManageModuleStreamsDetailsRemoveArgs
    ///                         {
    ///                             ModuleName = scheduledJobOperationsManageModuleStreamsDetailsRemoveModuleName,
    ///                             ProfileName = testProfile.Name,
    ///                             StreamName = testStream.Name,
    ///                             SoftwareSourceId = testSoftwareSource.Id,
    ///                         },
    ///                     },
    ///                 },
    ///                 PackageNames = scheduledJobOperationsPackageNames,
    ///                 RebootTimeoutInMins = scheduledJobOperationsRebootTimeoutInMins,
    ///                 SoftwareSourceIds = scheduledJobOperationsSoftwareSourceIds,
    ///                 SwitchModuleStreamsDetails = new Oci.OsManagementHub.Inputs.ScheduledJobOperationSwitchModuleStreamsDetailsArgs
    ///                 {
    ///                     ModuleName = scheduledJobOperationsSwitchModuleStreamsDetailsModuleName,
    ///                     StreamName = testStream.Name,
    ///                     SoftwareSourceId = testSoftwareSource.Id,
    ///                 },
    ///                 WindowsUpdateNames = scheduledJobOperationsWindowsUpdateNames,
    ///             },
    ///         },
    ///         ScheduleType = scheduledJobScheduleType,
    ///         TimeNextExecution = scheduledJobTimeNextExecution,
    ///         DefinedTags = 
    ///         {
    ///             { "Operations.CostCenter", "42" },
    ///         },
    ///         Description = scheduledJobDescription,
    ///         DisplayName = scheduledJobDisplayName,
    ///         FreeformTags = 
    ///         {
    ///             { "Department", "Finance" },
    ///         },
    ///         IsManagedByAutonomousLinux = scheduledJobIsManagedByAutonomousLinux,
    ///         IsSubcompartmentIncluded = scheduledJobIsSubcompartmentIncluded,
    ///         LifecycleStageIds = scheduledJobLifecycleStageIds,
    ///         Locations = scheduledJobLocations,
    ///         ManagedCompartmentIds = scheduledJobManagedCompartmentIds,
    ///         ManagedInstanceGroupIds = scheduledJobManagedInstanceGroupIds,
    ///         ManagedInstanceIds = scheduledJobManagedInstanceIds,
    ///         RecurringRule = scheduledJobRecurringRule,
    ///         RetryIntervals = scheduledJobRetryIntervals,
    ///         WorkRequestId = testWorkRequest.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ScheduledJobs can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:OsManagementHub/scheduledJob:ScheduledJob test_scheduled_job "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:OsManagementHub/scheduledJob:ScheduledJob")]
    public partial class ScheduledJob : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the scheduled job.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, string>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) User-specified description of the scheduled job. Avoid entering confidential information.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// (Updatable) User-friendly name for the scheduled job. Does not have to be unique and you can change the name later. Avoid entering confidential information.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, string>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// Indicates whether this scheduled job is managed by the Autonomous Linux service.
        /// </summary>
        [Output("isManagedByAutonomousLinux")]
        public Output<bool> IsManagedByAutonomousLinux { get; private set; } = null!;

        /// <summary>
        /// Indicates if the schedule job has restricted update and deletion capabilities. For restricted scheduled jobs,  you can update only the timeNextExecution, recurringRule, and tags.
        /// </summary>
        [Output("isRestricted")]
        public Output<bool> IsRestricted { get; private set; } = null!;

        /// <summary>
        /// Indicates whether to apply the scheduled job to all compartments in the tenancy when managedCompartmentIds specifies  the tenancy [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) (root compartment).
        /// </summary>
        [Output("isSubcompartmentIncluded")]
        public Output<bool> IsSubcompartmentIncluded { get; private set; } = null!;

        /// <summary>
        /// The lifecycle stage [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore you must supply either this or managedInstanceIds,  or managedInstanceGroupIds, or managedCompartmentIds.
        /// </summary>
        [Output("lifecycleStageIds")]
        public Output<ImmutableArray<string>> LifecycleStageIds { get; private set; } = null!;

        /// <summary>
        /// The list of locations this scheduled job should operate on for a job targeting on compartments. (Empty list means apply to all locations). This can only be set when managedCompartmentIds is not empty.
        /// </summary>
        [Output("locations")]
        public Output<ImmutableArray<string>> Locations { get; private set; } = null!;

        /// <summary>
        /// The compartment [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  To apply the job to all compartments in the tenancy, set this to the tenancy OCID (root compartment) and set  isSubcompartmentIncluded to true. A scheduled job can only operate on one type of target, therefore you must  supply either this or managedInstanceIds, or managedInstanceGroupIds, or lifecycleStageIds.
        /// </summary>
        [Output("managedCompartmentIds")]
        public Output<ImmutableArray<string>> ManagedCompartmentIds { get; private set; } = null!;

        /// <summary>
        /// The managed instance group [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore you must supply either this or managedInstanceIds, or managedCompartmentIds, or lifecycleStageIds.
        /// </summary>
        [Output("managedInstanceGroupIds")]
        public Output<ImmutableArray<string>> ManagedInstanceGroupIds { get; private set; } = null!;

        /// <summary>
        /// The managed instance [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore you must supply either this or  managedInstanceGroupIds, or managedCompartmentIds, or lifecycleStageIds.
        /// </summary>
        [Output("managedInstanceIds")]
        public Output<ImmutableArray<string>> ManagedInstanceIds { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The list of operations this scheduled job needs to perform. A scheduled job supports only one operation type, unless it is one of the following:
        /// * UPDATE_PACKAGES
        /// * UPDATE_ALL
        /// * UPDATE_SECURITY
        /// * UPDATE_BUGFIX
        /// * UPDATE_ENHANCEMENT
        /// * UPDATE_OTHER
        /// * UPDATE_KSPLICE_USERSPACE
        /// * UPDATE_KSPLICE_KERNEL
        /// </summary>
        [Output("operations")]
        public Output<ImmutableArray<Outputs.ScheduledJobOperation>> Operations { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The frequency schedule for a recurring scheduled job.
        /// </summary>
        [Output("recurringRule")]
        public Output<string> RecurringRule { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The amount of time in minutes to wait until retrying the scheduled job. If set, the service will automatically  retry a failed scheduled job after the interval. For example, you could set the interval to [2,5,10]. If the initial execution of the job fails, the service waits 2 minutes and then retries. If that fails, the service  waits 5 minutes and then retries. If that fails, the service waits 10 minutes and then retries.
        /// </summary>
        [Output("retryIntervals")]
        public Output<ImmutableArray<int>> RetryIntervals { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The type of scheduling frequency for the scheduled job.
        /// </summary>
        [Output("scheduleType")]
        public Output<string> ScheduleType { get; private set; } = null!;

        /// <summary>
        /// The current state of the scheduled job.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        [Output("systemTags")]
        public Output<ImmutableDictionary<string, string>> SystemTags { get; private set; } = null!;

        /// <summary>
        /// The time this scheduled job was created (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The time of the last execution of this scheduled job (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
        /// </summary>
        [Output("timeLastExecution")]
        public Output<string> TimeLastExecution { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The desired time of the next execution of this scheduled job (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
        /// </summary>
        [Output("timeNextExecution")]
        public Output<string> TimeNextExecution { get; private set; } = null!;

        /// <summary>
        /// The time this scheduled job was updated (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the work request that will be rerun.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("workRequestId")]
        public Output<string> WorkRequestId { get; private set; } = null!;

        /// <summary>
        /// The list of work request [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with this scheduled job.
        /// </summary>
        [Output("workRequestIds")]
        public Output<ImmutableArray<string>> WorkRequestIds { get; private set; } = null!;


        /// <summary>
        /// Create a ScheduledJob resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ScheduledJob(string name, ScheduledJobArgs args, CustomResourceOptions? options = null)
            : base("oci:OsManagementHub/scheduledJob:ScheduledJob", name, args ?? new ScheduledJobArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ScheduledJob(string name, Input<string> id, ScheduledJobState? state = null, CustomResourceOptions? options = null)
            : base("oci:OsManagementHub/scheduledJob:ScheduledJob", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ScheduledJob resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ScheduledJob Get(string name, Input<string> id, ScheduledJobState? state = null, CustomResourceOptions? options = null)
        {
            return new ScheduledJob(name, id, state, options);
        }
    }

    public sealed class ScheduledJobArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the scheduled job.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) User-specified description of the scheduled job. Avoid entering confidential information.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) User-friendly name for the scheduled job. Does not have to be unique and you can change the name later. Avoid entering confidential information.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// Indicates whether this scheduled job is managed by the Autonomous Linux service.
        /// </summary>
        [Input("isManagedByAutonomousLinux")]
        public Input<bool>? IsManagedByAutonomousLinux { get; set; }

        /// <summary>
        /// Indicates whether to apply the scheduled job to all compartments in the tenancy when managedCompartmentIds specifies  the tenancy [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) (root compartment).
        /// </summary>
        [Input("isSubcompartmentIncluded")]
        public Input<bool>? IsSubcompartmentIncluded { get; set; }

        [Input("lifecycleStageIds")]
        private InputList<string>? _lifecycleStageIds;

        /// <summary>
        /// The lifecycle stage [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore you must supply either this or managedInstanceIds,  or managedInstanceGroupIds, or managedCompartmentIds.
        /// </summary>
        public InputList<string> LifecycleStageIds
        {
            get => _lifecycleStageIds ?? (_lifecycleStageIds = new InputList<string>());
            set => _lifecycleStageIds = value;
        }

        [Input("locations")]
        private InputList<string>? _locations;

        /// <summary>
        /// The list of locations this scheduled job should operate on for a job targeting on compartments. (Empty list means apply to all locations). This can only be set when managedCompartmentIds is not empty.
        /// </summary>
        public InputList<string> Locations
        {
            get => _locations ?? (_locations = new InputList<string>());
            set => _locations = value;
        }

        [Input("managedCompartmentIds")]
        private InputList<string>? _managedCompartmentIds;

        /// <summary>
        /// The compartment [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  To apply the job to all compartments in the tenancy, set this to the tenancy OCID (root compartment) and set  isSubcompartmentIncluded to true. A scheduled job can only operate on one type of target, therefore you must  supply either this or managedInstanceIds, or managedInstanceGroupIds, or lifecycleStageIds.
        /// </summary>
        public InputList<string> ManagedCompartmentIds
        {
            get => _managedCompartmentIds ?? (_managedCompartmentIds = new InputList<string>());
            set => _managedCompartmentIds = value;
        }

        [Input("managedInstanceGroupIds")]
        private InputList<string>? _managedInstanceGroupIds;

        /// <summary>
        /// The managed instance group [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore you must supply either this or managedInstanceIds, or managedCompartmentIds, or lifecycleStageIds.
        /// </summary>
        public InputList<string> ManagedInstanceGroupIds
        {
            get => _managedInstanceGroupIds ?? (_managedInstanceGroupIds = new InputList<string>());
            set => _managedInstanceGroupIds = value;
        }

        [Input("managedInstanceIds")]
        private InputList<string>? _managedInstanceIds;

        /// <summary>
        /// The managed instance [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore you must supply either this or  managedInstanceGroupIds, or managedCompartmentIds, or lifecycleStageIds.
        /// </summary>
        public InputList<string> ManagedInstanceIds
        {
            get => _managedInstanceIds ?? (_managedInstanceIds = new InputList<string>());
            set => _managedInstanceIds = value;
        }

        [Input("operations", required: true)]
        private InputList<Inputs.ScheduledJobOperationArgs>? _operations;

        /// <summary>
        /// (Updatable) The list of operations this scheduled job needs to perform. A scheduled job supports only one operation type, unless it is one of the following:
        /// * UPDATE_PACKAGES
        /// * UPDATE_ALL
        /// * UPDATE_SECURITY
        /// * UPDATE_BUGFIX
        /// * UPDATE_ENHANCEMENT
        /// * UPDATE_OTHER
        /// * UPDATE_KSPLICE_USERSPACE
        /// * UPDATE_KSPLICE_KERNEL
        /// </summary>
        public InputList<Inputs.ScheduledJobOperationArgs> Operations
        {
            get => _operations ?? (_operations = new InputList<Inputs.ScheduledJobOperationArgs>());
            set => _operations = value;
        }

        /// <summary>
        /// (Updatable) The frequency schedule for a recurring scheduled job.
        /// </summary>
        [Input("recurringRule")]
        public Input<string>? RecurringRule { get; set; }

        [Input("retryIntervals")]
        private InputList<int>? _retryIntervals;

        /// <summary>
        /// (Updatable) The amount of time in minutes to wait until retrying the scheduled job. If set, the service will automatically  retry a failed scheduled job after the interval. For example, you could set the interval to [2,5,10]. If the initial execution of the job fails, the service waits 2 minutes and then retries. If that fails, the service  waits 5 minutes and then retries. If that fails, the service waits 10 minutes and then retries.
        /// </summary>
        public InputList<int> RetryIntervals
        {
            get => _retryIntervals ?? (_retryIntervals = new InputList<int>());
            set => _retryIntervals = value;
        }

        /// <summary>
        /// (Updatable) The type of scheduling frequency for the scheduled job.
        /// </summary>
        [Input("scheduleType", required: true)]
        public Input<string> ScheduleType { get; set; } = null!;

        /// <summary>
        /// (Updatable) The desired time of the next execution of this scheduled job (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
        /// </summary>
        [Input("timeNextExecution", required: true)]
        public Input<string> TimeNextExecution { get; set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the work request that will be rerun.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("workRequestId")]
        public Input<string>? WorkRequestId { get; set; }

        public ScheduledJobArgs()
        {
        }
        public static new ScheduledJobArgs Empty => new ScheduledJobArgs();
    }

    public sealed class ScheduledJobState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the scheduled job.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) User-specified description of the scheduled job. Avoid entering confidential information.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) User-friendly name for the scheduled job. Does not have to be unique and you can change the name later. Avoid entering confidential information.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// Indicates whether this scheduled job is managed by the Autonomous Linux service.
        /// </summary>
        [Input("isManagedByAutonomousLinux")]
        public Input<bool>? IsManagedByAutonomousLinux { get; set; }

        /// <summary>
        /// Indicates if the schedule job has restricted update and deletion capabilities. For restricted scheduled jobs,  you can update only the timeNextExecution, recurringRule, and tags.
        /// </summary>
        [Input("isRestricted")]
        public Input<bool>? IsRestricted { get; set; }

        /// <summary>
        /// Indicates whether to apply the scheduled job to all compartments in the tenancy when managedCompartmentIds specifies  the tenancy [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) (root compartment).
        /// </summary>
        [Input("isSubcompartmentIncluded")]
        public Input<bool>? IsSubcompartmentIncluded { get; set; }

        [Input("lifecycleStageIds")]
        private InputList<string>? _lifecycleStageIds;

        /// <summary>
        /// The lifecycle stage [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore you must supply either this or managedInstanceIds,  or managedInstanceGroupIds, or managedCompartmentIds.
        /// </summary>
        public InputList<string> LifecycleStageIds
        {
            get => _lifecycleStageIds ?? (_lifecycleStageIds = new InputList<string>());
            set => _lifecycleStageIds = value;
        }

        [Input("locations")]
        private InputList<string>? _locations;

        /// <summary>
        /// The list of locations this scheduled job should operate on for a job targeting on compartments. (Empty list means apply to all locations). This can only be set when managedCompartmentIds is not empty.
        /// </summary>
        public InputList<string> Locations
        {
            get => _locations ?? (_locations = new InputList<string>());
            set => _locations = value;
        }

        [Input("managedCompartmentIds")]
        private InputList<string>? _managedCompartmentIds;

        /// <summary>
        /// The compartment [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  To apply the job to all compartments in the tenancy, set this to the tenancy OCID (root compartment) and set  isSubcompartmentIncluded to true. A scheduled job can only operate on one type of target, therefore you must  supply either this or managedInstanceIds, or managedInstanceGroupIds, or lifecycleStageIds.
        /// </summary>
        public InputList<string> ManagedCompartmentIds
        {
            get => _managedCompartmentIds ?? (_managedCompartmentIds = new InputList<string>());
            set => _managedCompartmentIds = value;
        }

        [Input("managedInstanceGroupIds")]
        private InputList<string>? _managedInstanceGroupIds;

        /// <summary>
        /// The managed instance group [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore you must supply either this or managedInstanceIds, or managedCompartmentIds, or lifecycleStageIds.
        /// </summary>
        public InputList<string> ManagedInstanceGroupIds
        {
            get => _managedInstanceGroupIds ?? (_managedInstanceGroupIds = new InputList<string>());
            set => _managedInstanceGroupIds = value;
        }

        [Input("managedInstanceIds")]
        private InputList<string>? _managedInstanceIds;

        /// <summary>
        /// The managed instance [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore you must supply either this or  managedInstanceGroupIds, or managedCompartmentIds, or lifecycleStageIds.
        /// </summary>
        public InputList<string> ManagedInstanceIds
        {
            get => _managedInstanceIds ?? (_managedInstanceIds = new InputList<string>());
            set => _managedInstanceIds = value;
        }

        [Input("operations")]
        private InputList<Inputs.ScheduledJobOperationGetArgs>? _operations;

        /// <summary>
        /// (Updatable) The list of operations this scheduled job needs to perform. A scheduled job supports only one operation type, unless it is one of the following:
        /// * UPDATE_PACKAGES
        /// * UPDATE_ALL
        /// * UPDATE_SECURITY
        /// * UPDATE_BUGFIX
        /// * UPDATE_ENHANCEMENT
        /// * UPDATE_OTHER
        /// * UPDATE_KSPLICE_USERSPACE
        /// * UPDATE_KSPLICE_KERNEL
        /// </summary>
        public InputList<Inputs.ScheduledJobOperationGetArgs> Operations
        {
            get => _operations ?? (_operations = new InputList<Inputs.ScheduledJobOperationGetArgs>());
            set => _operations = value;
        }

        /// <summary>
        /// (Updatable) The frequency schedule for a recurring scheduled job.
        /// </summary>
        [Input("recurringRule")]
        public Input<string>? RecurringRule { get; set; }

        [Input("retryIntervals")]
        private InputList<int>? _retryIntervals;

        /// <summary>
        /// (Updatable) The amount of time in minutes to wait until retrying the scheduled job. If set, the service will automatically  retry a failed scheduled job after the interval. For example, you could set the interval to [2,5,10]. If the initial execution of the job fails, the service waits 2 minutes and then retries. If that fails, the service  waits 5 minutes and then retries. If that fails, the service waits 10 minutes and then retries.
        /// </summary>
        public InputList<int> RetryIntervals
        {
            get => _retryIntervals ?? (_retryIntervals = new InputList<int>());
            set => _retryIntervals = value;
        }

        /// <summary>
        /// (Updatable) The type of scheduling frequency for the scheduled job.
        /// </summary>
        [Input("scheduleType")]
        public Input<string>? ScheduleType { get; set; }

        /// <summary>
        /// The current state of the scheduled job.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("systemTags")]
        private InputMap<string>? _systemTags;

        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public InputMap<string> SystemTags
        {
            get => _systemTags ?? (_systemTags = new InputMap<string>());
            set => _systemTags = value;
        }

        /// <summary>
        /// The time this scheduled job was created (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The time of the last execution of this scheduled job (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
        /// </summary>
        [Input("timeLastExecution")]
        public Input<string>? TimeLastExecution { get; set; }

        /// <summary>
        /// (Updatable) The desired time of the next execution of this scheduled job (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
        /// </summary>
        [Input("timeNextExecution")]
        public Input<string>? TimeNextExecution { get; set; }

        /// <summary>
        /// The time this scheduled job was updated (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the work request that will be rerun.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("workRequestId")]
        public Input<string>? WorkRequestId { get; set; }

        [Input("workRequestIds")]
        private InputList<string>? _workRequestIds;

        /// <summary>
        /// The list of work request [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with this scheduled job.
        /// </summary>
        public InputList<string> WorkRequestIds
        {
            get => _workRequestIds ?? (_workRequestIds = new InputList<string>());
            set => _workRequestIds = value;
        }

        public ScheduledJobState()
        {
        }
        public static new ScheduledJobState Empty => new ScheduledJobState();
    }
}
