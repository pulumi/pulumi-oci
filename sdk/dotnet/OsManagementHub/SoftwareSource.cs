// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OsManagementHub
{
    /// <summary>
    /// This resource provides the Software Source resource in Oracle Cloud Infrastructure Os Management Hub service.
    /// 
    /// Creates a new versioned or custom software source.
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testSoftwareSource = new Oci.OsManagementHub.SoftwareSource("test_software_source", new()
    ///     {
    ///         CompartmentId = compartmentId,
    ///         DisplayName = softwareSourceDisplayName,
    ///         SoftwareSourceType = softwareSourceSoftwareSourceType,
    ///         VendorSoftwareSources = new[]
    ///         {
    ///             new Oci.OsManagementHub.Inputs.SoftwareSourceVendorSoftwareSourceArgs
    ///             {
    ///                 DisplayName = softwareSourceVendorSoftwareSourcesDisplayName,
    ///                 Id = softwareSourceVendorSoftwareSourcesId,
    ///             },
    ///         },
    ///         CustomSoftwareSourceFilter = new Oci.OsManagementHub.Inputs.SoftwareSourceCustomSoftwareSourceFilterArgs
    ///         {
    ///             ModuleStreamProfileFilters = new[]
    ///             {
    ///                 new Oci.OsManagementHub.Inputs.SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArgs
    ///                 {
    ///                     FilterType = softwareSourceCustomSoftwareSourceFilterModuleStreamProfileFiltersFilterType,
    ///                     ModuleName = softwareSourceCustomSoftwareSourceFilterModuleStreamProfileFiltersModuleName,
    ///                     ProfileName = testProfile.Name,
    ///                     StreamName = testStream.Name,
    ///                 },
    ///             },
    ///             PackageFilters = new[]
    ///             {
    ///                 new Oci.OsManagementHub.Inputs.SoftwareSourceCustomSoftwareSourceFilterPackageFilterArgs
    ///                 {
    ///                     FilterType = softwareSourceCustomSoftwareSourceFilterPackageFiltersFilterType,
    ///                     PackageName = softwareSourceCustomSoftwareSourceFilterPackageFiltersPackageName,
    ///                     PackageNamePattern = softwareSourceCustomSoftwareSourceFilterPackageFiltersPackageNamePattern,
    ///                     PackageVersion = softwareSourceCustomSoftwareSourceFilterPackageFiltersPackageVersion,
    ///                 },
    ///             },
    ///             PackageGroupFilters = new[]
    ///             {
    ///                 new Oci.OsManagementHub.Inputs.SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArgs
    ///                 {
    ///                     FilterType = softwareSourceCustomSoftwareSourceFilterPackageGroupFiltersFilterType,
    ///                     PackageGroups = softwareSourceCustomSoftwareSourceFilterPackageGroupFiltersPackageGroups,
    ///                 },
    ///             },
    ///         },
    ///         DefinedTags = 
    ///         {
    ///             { "Operations.CostCenter", "42" },
    ///         },
    ///         Description = softwareSourceDescription,
    ///         FreeformTags = 
    ///         {
    ///             { "Department", "Finance" },
    ///         },
    ///         IsAutomaticallyUpdated = softwareSourceIsAutomaticallyUpdated,
    ///         SoftwareSourceVersion = softwareSourceSoftwareSourceVersion,
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// SoftwareSources can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:OsManagementHub/softwareSource:SoftwareSource test_software_source "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:OsManagementHub/softwareSource:SoftwareSource")]
    public partial class SoftwareSource : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The architecture type supported by the software source.
        /// </summary>
        [Output("archType")]
        public Output<string> ArchType { get; private set; } = null!;

        /// <summary>
        /// Possible availabilities of a software source.
        /// </summary>
        [Output("availability")]
        public Output<string> Availability { get; private set; } = null!;

        /// <summary>
        /// The yum repository checksum type used by this software source.
        /// </summary>
        [Output("checksumType")]
        public Output<string> ChecksumType { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The OCID of the tenancy containing the software source.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Used to apply filters to a VendorSoftwareSource to create/update CustomSoftwareSources.
        /// </summary>
        [Output("customSoftwareSourceFilter")]
        public Output<Outputs.SoftwareSourceCustomSoftwareSourceFilter> CustomSoftwareSourceFilter { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, object>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Information specified by the user about the software source.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// (Updatable) User friendly name.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, object>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// Fingerprint of the GPG key for this software source.
        /// </summary>
        [Output("gpgKeyFingerprint")]
        public Output<string> GpgKeyFingerprint { get; private set; } = null!;

        /// <summary>
        /// ID of the GPG key for this software source.
        /// </summary>
        [Output("gpgKeyId")]
        public Output<string> GpgKeyId { get; private set; } = null!;

        /// <summary>
        /// URL of the GPG key for this software source.
        /// </summary>
        [Output("gpgKeyUrl")]
        public Output<string> GpgKeyUrl { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Indicates whether service should automatically update the custom software source for the user.
        /// </summary>
        [Output("isAutomaticallyUpdated")]
        public Output<bool> IsAutomaticallyUpdated { get; private set; } = null!;

        /// <summary>
        /// The OS family the software source belongs to.
        /// </summary>
        [Output("osFamily")]
        public Output<string> OsFamily { get; private set; } = null!;

        /// <summary>
        /// Number of packages.
        /// </summary>
        [Output("packageCount")]
        public Output<string> PackageCount { get; private set; } = null!;

        /// <summary>
        /// The Repo ID for the software source.
        /// </summary>
        [Output("repoId")]
        public Output<string> RepoId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Type of the software source.
        /// </summary>
        [Output("softwareSourceType")]
        public Output<string> SoftwareSourceType { get; private set; } = null!;

        /// <summary>
        /// The version to assign to this custom software source.
        /// </summary>
        [Output("softwareSourceVersion")]
        public Output<string> SoftwareSourceVersion { get; private set; } = null!;

        /// <summary>
        /// The current state of the software source.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        [Output("systemTags")]
        public Output<ImmutableDictionary<string, object>> SystemTags { get; private set; } = null!;

        /// <summary>
        /// The date and time the software source was created, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// URL for the repository.
        /// </summary>
        [Output("url")]
        public Output<string> Url { get; private set; } = null!;

        /// <summary>
        /// Name of the vendor providing the software source.
        /// </summary>
        [Output("vendorName")]
        public Output<string> VendorName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) List of vendor software sources.
        /// </summary>
        [Output("vendorSoftwareSources")]
        public Output<ImmutableArray<Outputs.SoftwareSourceVendorSoftwareSource>> VendorSoftwareSources { get; private set; } = null!;


        /// <summary>
        /// Create a SoftwareSource resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SoftwareSource(string name, SoftwareSourceArgs args, CustomResourceOptions? options = null)
            : base("oci:OsManagementHub/softwareSource:SoftwareSource", name, args ?? new SoftwareSourceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SoftwareSource(string name, Input<string> id, SoftwareSourceState? state = null, CustomResourceOptions? options = null)
            : base("oci:OsManagementHub/softwareSource:SoftwareSource", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SoftwareSource resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SoftwareSource Get(string name, Input<string> id, SoftwareSourceState? state = null, CustomResourceOptions? options = null)
        {
            return new SoftwareSource(name, id, state, options);
        }
    }

    public sealed class SoftwareSourceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The OCID of the tenancy containing the software source.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// (Updatable) Used to apply filters to a VendorSoftwareSource to create/update CustomSoftwareSources.
        /// </summary>
        [Input("customSoftwareSourceFilter")]
        public Input<Inputs.SoftwareSourceCustomSoftwareSourceFilterArgs>? CustomSoftwareSourceFilter { get; set; }

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) Information specified by the user about the software source.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) User friendly name.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) Indicates whether service should automatically update the custom software source for the user.
        /// </summary>
        [Input("isAutomaticallyUpdated")]
        public Input<bool>? IsAutomaticallyUpdated { get; set; }

        /// <summary>
        /// (Updatable) Type of the software source.
        /// </summary>
        [Input("softwareSourceType", required: true)]
        public Input<string> SoftwareSourceType { get; set; } = null!;

        /// <summary>
        /// The version to assign to this custom software source.
        /// </summary>
        [Input("softwareSourceVersion")]
        public Input<string>? SoftwareSourceVersion { get; set; }

        [Input("vendorSoftwareSources", required: true)]
        private InputList<Inputs.SoftwareSourceVendorSoftwareSourceArgs>? _vendorSoftwareSources;

        /// <summary>
        /// (Updatable) List of vendor software sources.
        /// </summary>
        public InputList<Inputs.SoftwareSourceVendorSoftwareSourceArgs> VendorSoftwareSources
        {
            get => _vendorSoftwareSources ?? (_vendorSoftwareSources = new InputList<Inputs.SoftwareSourceVendorSoftwareSourceArgs>());
            set => _vendorSoftwareSources = value;
        }

        public SoftwareSourceArgs()
        {
        }
        public static new SoftwareSourceArgs Empty => new SoftwareSourceArgs();
    }

    public sealed class SoftwareSourceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The architecture type supported by the software source.
        /// </summary>
        [Input("archType")]
        public Input<string>? ArchType { get; set; }

        /// <summary>
        /// Possible availabilities of a software source.
        /// </summary>
        [Input("availability")]
        public Input<string>? Availability { get; set; }

        /// <summary>
        /// The yum repository checksum type used by this software source.
        /// </summary>
        [Input("checksumType")]
        public Input<string>? ChecksumType { get; set; }

        /// <summary>
        /// (Updatable) The OCID of the tenancy containing the software source.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// (Updatable) Used to apply filters to a VendorSoftwareSource to create/update CustomSoftwareSources.
        /// </summary>
        [Input("customSoftwareSourceFilter")]
        public Input<Inputs.SoftwareSourceCustomSoftwareSourceFilterGetArgs>? CustomSoftwareSourceFilter { get; set; }

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) Information specified by the user about the software source.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) User friendly name.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// Fingerprint of the GPG key for this software source.
        /// </summary>
        [Input("gpgKeyFingerprint")]
        public Input<string>? GpgKeyFingerprint { get; set; }

        /// <summary>
        /// ID of the GPG key for this software source.
        /// </summary>
        [Input("gpgKeyId")]
        public Input<string>? GpgKeyId { get; set; }

        /// <summary>
        /// URL of the GPG key for this software source.
        /// </summary>
        [Input("gpgKeyUrl")]
        public Input<string>? GpgKeyUrl { get; set; }

        /// <summary>
        /// (Updatable) Indicates whether service should automatically update the custom software source for the user.
        /// </summary>
        [Input("isAutomaticallyUpdated")]
        public Input<bool>? IsAutomaticallyUpdated { get; set; }

        /// <summary>
        /// The OS family the software source belongs to.
        /// </summary>
        [Input("osFamily")]
        public Input<string>? OsFamily { get; set; }

        /// <summary>
        /// Number of packages.
        /// </summary>
        [Input("packageCount")]
        public Input<string>? PackageCount { get; set; }

        /// <summary>
        /// The Repo ID for the software source.
        /// </summary>
        [Input("repoId")]
        public Input<string>? RepoId { get; set; }

        /// <summary>
        /// (Updatable) Type of the software source.
        /// </summary>
        [Input("softwareSourceType")]
        public Input<string>? SoftwareSourceType { get; set; }

        /// <summary>
        /// The version to assign to this custom software source.
        /// </summary>
        [Input("softwareSourceVersion")]
        public Input<string>? SoftwareSourceVersion { get; set; }

        /// <summary>
        /// The current state of the software source.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("systemTags")]
        private InputMap<object>? _systemTags;

        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public InputMap<object> SystemTags
        {
            get => _systemTags ?? (_systemTags = new InputMap<object>());
            set => _systemTags = value;
        }

        /// <summary>
        /// The date and time the software source was created, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// URL for the repository.
        /// </summary>
        [Input("url")]
        public Input<string>? Url { get; set; }

        /// <summary>
        /// Name of the vendor providing the software source.
        /// </summary>
        [Input("vendorName")]
        public Input<string>? VendorName { get; set; }

        [Input("vendorSoftwareSources")]
        private InputList<Inputs.SoftwareSourceVendorSoftwareSourceGetArgs>? _vendorSoftwareSources;

        /// <summary>
        /// (Updatable) List of vendor software sources.
        /// </summary>
        public InputList<Inputs.SoftwareSourceVendorSoftwareSourceGetArgs> VendorSoftwareSources
        {
            get => _vendorSoftwareSources ?? (_vendorSoftwareSources = new InputList<Inputs.SoftwareSourceVendorSoftwareSourceGetArgs>());
            set => _vendorSoftwareSources = value;
        }

        public SoftwareSourceState()
        {
        }
        public static new SoftwareSourceState Empty => new SoftwareSourceState();
    }
}
