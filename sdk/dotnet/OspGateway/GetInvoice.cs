// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OspGateway
{
    public static class GetInvoice
    {
        /// <summary>
        /// This data source provides details about a specific Invoice resource in Oracle Cloud Infrastructure Osp Gateway service.
        /// 
        /// Returns an invoice by invoice id
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testInvoice = Oci.OspGateway.GetInvoice.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         InternalInvoiceId = testInvoiceOciOspGatewayInvoice.Id,
        ///         OspHomeRegion = invoiceOspHomeRegion,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetInvoiceResult> InvokeAsync(GetInvoiceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetInvoiceResult>("oci:OspGateway/getInvoice:getInvoice", args ?? new GetInvoiceArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Invoice resource in Oracle Cloud Infrastructure Osp Gateway service.
        /// 
        /// Returns an invoice by invoice id
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testInvoice = Oci.OspGateway.GetInvoice.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         InternalInvoiceId = testInvoiceOciOspGatewayInvoice.Id,
        ///         OspHomeRegion = invoiceOspHomeRegion,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetInvoiceResult> Invoke(GetInvoiceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetInvoiceResult>("oci:OspGateway/getInvoice:getInvoice", args ?? new GetInvoiceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInvoiceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// The identifier of the invoice.
        /// </summary>
        [Input("internalInvoiceId", required: true)]
        public string InternalInvoiceId { get; set; } = null!;

        /// <summary>
        /// The home region's public name of the logged in user.
        /// </summary>
        [Input("ospHomeRegion", required: true)]
        public string OspHomeRegion { get; set; } = null!;

        public GetInvoiceArgs()
        {
        }
        public static new GetInvoiceArgs Empty => new GetInvoiceArgs();
    }

    public sealed class GetInvoiceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// The identifier of the invoice.
        /// </summary>
        [Input("internalInvoiceId", required: true)]
        public Input<string> InternalInvoiceId { get; set; } = null!;

        /// <summary>
        /// The home region's public name of the logged in user.
        /// </summary>
        [Input("ospHomeRegion", required: true)]
        public Input<string> OspHomeRegion { get; set; } = null!;

        public GetInvoiceInvokeArgs()
        {
        }
        public static new GetInvoiceInvokeArgs Empty => new GetInvoiceInvokeArgs();
    }


    [OutputType]
    public sealed class GetInvoiceResult
    {
        /// <summary>
        /// Address details model
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInvoiceBillToAddressResult> BillToAddresses;
        public readonly string CompartmentId;
        /// <summary>
        /// Currency details model
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInvoiceCurrencyResult> Currencies;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Transaction identifier
        /// </summary>
        public readonly string InternalInvoiceId;
        /// <summary>
        /// Total amount of invoice
        /// </summary>
        public readonly double InvoiceAmount;
        /// <summary>
        /// Invoice amount adjust
        /// </summary>
        public readonly double InvoiceAmountAdjusted;
        /// <summary>
        /// Invoice amount applied
        /// </summary>
        public readonly double InvoiceAmountApplied;
        /// <summary>
        /// Invoice amount credit
        /// </summary>
        public readonly double InvoiceAmountCredited;
        /// <summary>
        /// Balance of invoice
        /// </summary>
        public readonly double InvoiceAmountDue;
        /// <summary>
        /// Invoice identifier which is generated on the on-premise sie. Pls note this is not an OCID
        /// </summary>
        public readonly string InvoiceId;
        /// <summary>
        /// Invoice external reference
        /// </summary>
        public readonly string InvoiceNumber;
        /// <summary>
        /// Invoice PO number
        /// </summary>
        public readonly string InvoicePoNumber;
        /// <summary>
        /// Invoice reference number
        /// </summary>
        public readonly string InvoiceRefNumber;
        /// <summary>
        /// Invoice status
        /// </summary>
        public readonly string InvoiceStatus;
        /// <summary>
        /// Type of invoice
        /// </summary>
        public readonly string InvoiceType;
        /// <summary>
        /// Is credit card payment eligible
        /// </summary>
        public readonly bool IsCreditCardPayable;
        /// <summary>
        /// Is pdf download access allowed
        /// </summary>
        public readonly bool IsDisplayDownloadPdf;
        /// <summary>
        /// Whether invoice can be payed
        /// </summary>
        public readonly bool IsPayable;
        /// <summary>
        /// Is emailing pdf allowed
        /// </summary>
        public readonly bool IsPdfEmailAvailable;
        /// <summary>
        /// Payment related details
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInvoiceLastPaymentDetailResult> LastPaymentDetails;
        public readonly string OspHomeRegion;
        /// <summary>
        /// Payment terms
        /// </summary>
        public readonly string PaymentTerms;
        /// <summary>
        /// Preferred Email on the invoice
        /// </summary>
        public readonly string PreferredEmail;
        /// <summary>
        /// List of subscription identifiers
        /// </summary>
        public readonly ImmutableArray<string> SubscriptionIds;
        /// <summary>
        /// Tax of invoice amount
        /// </summary>
        public readonly double Tax;
        /// <summary>
        /// Date of invoice
        /// </summary>
        public readonly string TimeInvoice;
        /// <summary>
        /// Due date of invoice
        /// </summary>
        public readonly string TimeInvoiceDue;

        [OutputConstructor]
        private GetInvoiceResult(
            ImmutableArray<Outputs.GetInvoiceBillToAddressResult> billToAddresses,

            string compartmentId,

            ImmutableArray<Outputs.GetInvoiceCurrencyResult> currencies,

            string id,

            string internalInvoiceId,

            double invoiceAmount,

            double invoiceAmountAdjusted,

            double invoiceAmountApplied,

            double invoiceAmountCredited,

            double invoiceAmountDue,

            string invoiceId,

            string invoiceNumber,

            string invoicePoNumber,

            string invoiceRefNumber,

            string invoiceStatus,

            string invoiceType,

            bool isCreditCardPayable,

            bool isDisplayDownloadPdf,

            bool isPayable,

            bool isPdfEmailAvailable,

            ImmutableArray<Outputs.GetInvoiceLastPaymentDetailResult> lastPaymentDetails,

            string ospHomeRegion,

            string paymentTerms,

            string preferredEmail,

            ImmutableArray<string> subscriptionIds,

            double tax,

            string timeInvoice,

            string timeInvoiceDue)
        {
            BillToAddresses = billToAddresses;
            CompartmentId = compartmentId;
            Currencies = currencies;
            Id = id;
            InternalInvoiceId = internalInvoiceId;
            InvoiceAmount = invoiceAmount;
            InvoiceAmountAdjusted = invoiceAmountAdjusted;
            InvoiceAmountApplied = invoiceAmountApplied;
            InvoiceAmountCredited = invoiceAmountCredited;
            InvoiceAmountDue = invoiceAmountDue;
            InvoiceId = invoiceId;
            InvoiceNumber = invoiceNumber;
            InvoicePoNumber = invoicePoNumber;
            InvoiceRefNumber = invoiceRefNumber;
            InvoiceStatus = invoiceStatus;
            InvoiceType = invoiceType;
            IsCreditCardPayable = isCreditCardPayable;
            IsDisplayDownloadPdf = isDisplayDownloadPdf;
            IsPayable = isPayable;
            IsPdfEmailAvailable = isPdfEmailAvailable;
            LastPaymentDetails = lastPaymentDetails;
            OspHomeRegion = ospHomeRegion;
            PaymentTerms = paymentTerms;
            PreferredEmail = preferredEmail;
            SubscriptionIds = subscriptionIds;
            Tax = tax;
            TimeInvoice = timeInvoice;
            TimeInvoiceDue = timeInvoiceDue;
        }
    }
}
