// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OspGateway
{
    public static class GetInvoices
    {
        /// <summary>
        /// This data source provides the list of Invoices in Oracle Cloud Infrastructure Osp Gateway service.
        /// 
        /// Returns a list of invoices
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testInvoices = Oci.OspGateway.GetInvoices.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         OspHomeRegion = invoiceOspHomeRegion,
        ///         InvoiceId = testInvoice.Id,
        ///         SearchText = invoiceSearchText,
        ///         Statuses = invoiceStatus,
        ///         TimeInvoiceEnd = invoiceTimeInvoiceEnd,
        ///         TimeInvoiceStart = invoiceTimeInvoiceStart,
        ///         TimePaymentEnd = invoiceTimePaymentEnd,
        ///         TimePaymentStart = invoiceTimePaymentStart,
        ///         Types = invoiceType,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetInvoicesResult> InvokeAsync(GetInvoicesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetInvoicesResult>("oci:OspGateway/getInvoices:getInvoices", args ?? new GetInvoicesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Invoices in Oracle Cloud Infrastructure Osp Gateway service.
        /// 
        /// Returns a list of invoices
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testInvoices = Oci.OspGateway.GetInvoices.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         OspHomeRegion = invoiceOspHomeRegion,
        ///         InvoiceId = testInvoice.Id,
        ///         SearchText = invoiceSearchText,
        ///         Statuses = invoiceStatus,
        ///         TimeInvoiceEnd = invoiceTimeInvoiceEnd,
        ///         TimeInvoiceStart = invoiceTimeInvoiceStart,
        ///         TimePaymentEnd = invoiceTimePaymentEnd,
        ///         TimePaymentStart = invoiceTimePaymentStart,
        ///         Types = invoiceType,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetInvoicesResult> Invoke(GetInvoicesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetInvoicesResult>("oci:OspGateway/getInvoices:getInvoices", args ?? new GetInvoicesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInvoicesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetInvoicesFilterArgs>? _filters;
        public List<Inputs.GetInvoicesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetInvoicesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The invoice query param (not unique).
        /// </summary>
        [Input("invoiceId")]
        public string? InvoiceId { get; set; }

        /// <summary>
        /// The home region's public name of the logged in user.
        /// </summary>
        [Input("ospHomeRegion", required: true)]
        public string OspHomeRegion { get; set; } = null!;

        /// <summary>
        /// A filter to only return resources that match the given value. Looking for partial matches in the following fileds: Invoice No., Reference No. (plan number), Payment Ref, Total Amount(plan number), Balance Due(plan number) and Party/Customer Name
        /// </summary>
        [Input("searchText")]
        public string? SearchText { get; set; }

        [Input("statuses")]
        private List<string>? _statuses;

        /// <summary>
        /// A filter to only return resources that match one of the status elements.
        /// </summary>
        public List<string> Statuses
        {
            get => _statuses ?? (_statuses = new List<string>());
            set => _statuses = value;
        }

        /// <summary>
        /// description: End time (UTC) of the target invoice date range for which to fetch invoice data (exclusive).
        /// </summary>
        [Input("timeInvoiceEnd")]
        public string? TimeInvoiceEnd { get; set; }

        /// <summary>
        /// description: Start time (UTC) of the target invoice date range for which to fetch invoice data (inclusive).
        /// </summary>
        [Input("timeInvoiceStart")]
        public string? TimeInvoiceStart { get; set; }

        /// <summary>
        /// description: End time (UTC) of the target payment date range for which to fetch invoice data (exclusive).
        /// </summary>
        [Input("timePaymentEnd")]
        public string? TimePaymentEnd { get; set; }

        /// <summary>
        /// description: Start time (UTC) of the target payment date range for which to fetch invoice data (inclusive).
        /// </summary>
        [Input("timePaymentStart")]
        public string? TimePaymentStart { get; set; }

        [Input("types")]
        private List<string>? _types;

        /// <summary>
        /// A filter to only return resources that match the given type exactly.
        /// </summary>
        public List<string> Types
        {
            get => _types ?? (_types = new List<string>());
            set => _types = value;
        }

        public GetInvoicesArgs()
        {
        }
        public static new GetInvoicesArgs Empty => new GetInvoicesArgs();
    }

    public sealed class GetInvoicesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetInvoicesFilterInputArgs>? _filters;
        public InputList<Inputs.GetInvoicesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetInvoicesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The invoice query param (not unique).
        /// </summary>
        [Input("invoiceId")]
        public Input<string>? InvoiceId { get; set; }

        /// <summary>
        /// The home region's public name of the logged in user.
        /// </summary>
        [Input("ospHomeRegion", required: true)]
        public Input<string> OspHomeRegion { get; set; } = null!;

        /// <summary>
        /// A filter to only return resources that match the given value. Looking for partial matches in the following fileds: Invoice No., Reference No. (plan number), Payment Ref, Total Amount(plan number), Balance Due(plan number) and Party/Customer Name
        /// </summary>
        [Input("searchText")]
        public Input<string>? SearchText { get; set; }

        [Input("statuses")]
        private InputList<string>? _statuses;

        /// <summary>
        /// A filter to only return resources that match one of the status elements.
        /// </summary>
        public InputList<string> Statuses
        {
            get => _statuses ?? (_statuses = new InputList<string>());
            set => _statuses = value;
        }

        /// <summary>
        /// description: End time (UTC) of the target invoice date range for which to fetch invoice data (exclusive).
        /// </summary>
        [Input("timeInvoiceEnd")]
        public Input<string>? TimeInvoiceEnd { get; set; }

        /// <summary>
        /// description: Start time (UTC) of the target invoice date range for which to fetch invoice data (inclusive).
        /// </summary>
        [Input("timeInvoiceStart")]
        public Input<string>? TimeInvoiceStart { get; set; }

        /// <summary>
        /// description: End time (UTC) of the target payment date range for which to fetch invoice data (exclusive).
        /// </summary>
        [Input("timePaymentEnd")]
        public Input<string>? TimePaymentEnd { get; set; }

        /// <summary>
        /// description: Start time (UTC) of the target payment date range for which to fetch invoice data (inclusive).
        /// </summary>
        [Input("timePaymentStart")]
        public Input<string>? TimePaymentStart { get; set; }

        [Input("types")]
        private InputList<string>? _types;

        /// <summary>
        /// A filter to only return resources that match the given type exactly.
        /// </summary>
        public InputList<string> Types
        {
            get => _types ?? (_types = new InputList<string>());
            set => _types = value;
        }

        public GetInvoicesInvokeArgs()
        {
        }
        public static new GetInvoicesInvokeArgs Empty => new GetInvoicesInvokeArgs();
    }


    [OutputType]
    public sealed class GetInvoicesResult
    {
        public readonly string CompartmentId;
        public readonly ImmutableArray<Outputs.GetInvoicesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of invoice_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInvoicesInvoiceCollectionResult> InvoiceCollections;
        /// <summary>
        /// Invoice identifier which is generated on the on-premise sie. Pls note this is not an OCID
        /// </summary>
        public readonly string? InvoiceId;
        public readonly string OspHomeRegion;
        public readonly string? SearchText;
        public readonly ImmutableArray<string> Statuses;
        public readonly string? TimeInvoiceEnd;
        public readonly string? TimeInvoiceStart;
        public readonly string? TimePaymentEnd;
        public readonly string? TimePaymentStart;
        public readonly ImmutableArray<string> Types;

        [OutputConstructor]
        private GetInvoicesResult(
            string compartmentId,

            ImmutableArray<Outputs.GetInvoicesFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetInvoicesInvoiceCollectionResult> invoiceCollections,

            string? invoiceId,

            string ospHomeRegion,

            string? searchText,

            ImmutableArray<string> statuses,

            string? timeInvoiceEnd,

            string? timeInvoiceStart,

            string? timePaymentEnd,

            string? timePaymentStart,

            ImmutableArray<string> types)
        {
            CompartmentId = compartmentId;
            Filters = filters;
            Id = id;
            InvoiceCollections = invoiceCollections;
            InvoiceId = invoiceId;
            OspHomeRegion = ospHomeRegion;
            SearchText = searchText;
            Statuses = statuses;
            TimeInvoiceEnd = timeInvoiceEnd;
            TimeInvoiceStart = timeInvoiceStart;
            TimePaymentEnd = timePaymentEnd;
            TimePaymentStart = timePaymentStart;
            Types = types;
        }
    }
}
