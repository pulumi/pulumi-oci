// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OspGateway.Outputs
{

    [OutputType]
    public sealed class GetInvoicesInvoiceCollectionItemResult
    {
        /// <summary>
        /// Address details model
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInvoicesInvoiceCollectionItemBillToAddressResult> BillToAddresses;
        /// <summary>
        /// Currency details model
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInvoicesInvoiceCollectionItemCurrencyResult> Currencies;
        /// <summary>
        /// Transaction identifier
        /// </summary>
        public readonly string InternalInvoiceId;
        /// <summary>
        /// Total amount of invoice
        /// </summary>
        public readonly double InvoiceAmount;
        /// <summary>
        /// Invoice amount adjust
        /// </summary>
        public readonly double InvoiceAmountAdjusted;
        /// <summary>
        /// Invoice amount applied
        /// </summary>
        public readonly double InvoiceAmountApplied;
        /// <summary>
        /// Invoice amount credit
        /// </summary>
        public readonly double InvoiceAmountCredited;
        /// <summary>
        /// Balance of invoice
        /// </summary>
        public readonly double InvoiceAmountDue;
        public readonly double InvoiceAmountInDispute;
        /// <summary>
        /// The invoice query param (not unique).
        /// </summary>
        public readonly string InvoiceId;
        /// <summary>
        /// Invoice external reference
        /// </summary>
        public readonly string InvoiceNumber;
        /// <summary>
        /// Invoice PO number
        /// </summary>
        public readonly string InvoicePoNumber;
        /// <summary>
        /// Invoice reference number
        /// </summary>
        public readonly string InvoiceRefNumber;
        /// <summary>
        /// Invoice status
        /// </summary>
        public readonly string InvoiceStatus;
        /// <summary>
        /// Type of invoice
        /// </summary>
        public readonly string InvoiceType;
        /// <summary>
        /// Is credit card payment eligible
        /// </summary>
        public readonly bool IsCreditCardPayable;
        /// <summary>
        /// Is pdf download access allowed
        /// </summary>
        public readonly bool IsDisplayDownloadPdf;
        public readonly bool IsDisplayViewPdf;
        public readonly bool IsPaid;
        /// <summary>
        /// Whether invoice can be payed
        /// </summary>
        public readonly bool IsPayable;
        public readonly bool IsPaymentFailed;
        /// <summary>
        /// Is emailing pdf allowed
        /// </summary>
        public readonly bool IsPdfEmailAvailable;
        /// <summary>
        /// Payment related details
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInvoicesInvoiceCollectionItemLastPaymentDetailResult> LastPaymentDetails;
        public readonly string PartyName;
        /// <summary>
        /// Payment terms
        /// </summary>
        public readonly string PaymentTerms;
        /// <summary>
        /// Preferred Email on the invoice
        /// </summary>
        public readonly string PreferredEmail;
        /// <summary>
        /// List of subscription identifiers
        /// </summary>
        public readonly ImmutableArray<string> SubscriptionIds;
        /// <summary>
        /// Tax of invoice amount
        /// </summary>
        public readonly double Tax;
        /// <summary>
        /// Date of invoice
        /// </summary>
        public readonly string TimeInvoice;
        /// <summary>
        /// Due date of invoice
        /// </summary>
        public readonly string TimeInvoiceDue;

        [OutputConstructor]
        private GetInvoicesInvoiceCollectionItemResult(
            ImmutableArray<Outputs.GetInvoicesInvoiceCollectionItemBillToAddressResult> billToAddresses,

            ImmutableArray<Outputs.GetInvoicesInvoiceCollectionItemCurrencyResult> currencies,

            string internalInvoiceId,

            double invoiceAmount,

            double invoiceAmountAdjusted,

            double invoiceAmountApplied,

            double invoiceAmountCredited,

            double invoiceAmountDue,

            double invoiceAmountInDispute,

            string invoiceId,

            string invoiceNumber,

            string invoicePoNumber,

            string invoiceRefNumber,

            string invoiceStatus,

            string invoiceType,

            bool isCreditCardPayable,

            bool isDisplayDownloadPdf,

            bool isDisplayViewPdf,

            bool isPaid,

            bool isPayable,

            bool isPaymentFailed,

            bool isPdfEmailAvailable,

            ImmutableArray<Outputs.GetInvoicesInvoiceCollectionItemLastPaymentDetailResult> lastPaymentDetails,

            string partyName,

            string paymentTerms,

            string preferredEmail,

            ImmutableArray<string> subscriptionIds,

            double tax,

            string timeInvoice,

            string timeInvoiceDue)
        {
            BillToAddresses = billToAddresses;
            Currencies = currencies;
            InternalInvoiceId = internalInvoiceId;
            InvoiceAmount = invoiceAmount;
            InvoiceAmountAdjusted = invoiceAmountAdjusted;
            InvoiceAmountApplied = invoiceAmountApplied;
            InvoiceAmountCredited = invoiceAmountCredited;
            InvoiceAmountDue = invoiceAmountDue;
            InvoiceAmountInDispute = invoiceAmountInDispute;
            InvoiceId = invoiceId;
            InvoiceNumber = invoiceNumber;
            InvoicePoNumber = invoicePoNumber;
            InvoiceRefNumber = invoiceRefNumber;
            InvoiceStatus = invoiceStatus;
            InvoiceType = invoiceType;
            IsCreditCardPayable = isCreditCardPayable;
            IsDisplayDownloadPdf = isDisplayDownloadPdf;
            IsDisplayViewPdf = isDisplayViewPdf;
            IsPaid = isPaid;
            IsPayable = isPayable;
            IsPaymentFailed = isPaymentFailed;
            IsPdfEmailAvailable = isPdfEmailAvailable;
            LastPaymentDetails = lastPaymentDetails;
            PartyName = partyName;
            PaymentTerms = paymentTerms;
            PreferredEmail = preferredEmail;
            SubscriptionIds = subscriptionIds;
            Tax = tax;
            TimeInvoice = timeInvoice;
            TimeInvoiceDue = timeInvoiceDue;
        }
    }
}
