// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OspGateway.Outputs
{

    [OutputType]
    public sealed class GetInvoicesInvoiceLineItemResult
    {
        /// <summary>
        /// Currency details model
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInvoicesInvoiceLineItemCurrencyResult> Currencies;
        /// <summary>
        /// Unit price of the ordered product
        /// </summary>
        public readonly double NetUnitPrice;
        /// <summary>
        /// Product of the item
        /// </summary>
        public readonly string OrderNo;
        /// <summary>
        /// Part number
        /// </summary>
        public readonly string PartNumber;
        /// <summary>
        /// Product of the item
        /// </summary>
        public readonly string Product;
        /// <summary>
        /// Quantity of the ordered product
        /// </summary>
        public readonly double Quantity;
        /// <summary>
        /// End date
        /// </summary>
        public readonly string TimeEnd;
        /// <summary>
        /// Start date
        /// </summary>
        public readonly string TimeStart;
        /// <summary>
        /// Total price of the ordered product (Net unit price x quantity)
        /// </summary>
        public readonly double TotalPrice;

        [OutputConstructor]
        private GetInvoicesInvoiceLineItemResult(
            ImmutableArray<Outputs.GetInvoicesInvoiceLineItemCurrencyResult> currencies,

            double netUnitPrice,

            string orderNo,

            string partNumber,

            string product,

            double quantity,

            string timeEnd,

            string timeStart,

            double totalPrice)
        {
            Currencies = currencies;
            NetUnitPrice = netUnitPrice;
            OrderNo = orderNo;
            PartNumber = partNumber;
            Product = product;
            Quantity = quantity;
            TimeEnd = timeEnd;
            TimeStart = timeStart;
            TotalPrice = totalPrice;
        }
    }
}
