// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OspGateway.Outputs
{

    [OutputType]
    public sealed class SubscriptionSubscription
    {
        /// <summary>
        /// (Updatable) Bill to customer Account id.
        /// </summary>
        public readonly string? BillToCustAccountId;
        /// <summary>
        /// (Updatable) Billing address details model.
        /// </summary>
        public readonly ImmutableArray<Outputs.SubscriptionSubscriptionBillingAddress> BillingAddresses;
        /// <summary>
        /// (Updatable) Currency code
        /// </summary>
        public readonly string? CurrencyCode;
        /// <summary>
        /// (Updatable) GSI Subscription external code.
        /// </summary>
        public readonly string? GsiOrgCode;
        /// <summary>
        /// (Updatable) Subscription id identifier (OCID).
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// (Updatable) Payment intension.
        /// </summary>
        public readonly bool? IsIntentToPay;
        /// <summary>
        /// (Updatable) Language short code (en, de, hu, etc)
        /// </summary>
        public readonly string? LanguageCode;
        /// <summary>
        /// (Updatable) GSI organization external identifier.
        /// </summary>
        public readonly string? OrganizationId;
        /// <summary>
        /// (Updatable) Payment gateway details.
        /// </summary>
        public readonly Outputs.SubscriptionSubscriptionPaymentGateway? PaymentGateway;
        /// <summary>
        /// (Updatable) Payment option list of a subscription.
        /// </summary>
        public readonly ImmutableArray<Outputs.SubscriptionSubscriptionPaymentOption> PaymentOptions;
        /// <summary>
        /// (Updatable) Subscription plan type.
        /// </summary>
        public readonly string? PlanType;
        /// <summary>
        /// (Updatable) Ship to customer account role.
        /// </summary>
        public readonly string? ShipToCustAcctRoleId;
        /// <summary>
        /// (Updatable) Ship to customer account site address id.
        /// </summary>
        public readonly string? ShipToCustAcctSiteId;
        /// <summary>
        /// (Updatable) Subscription plan number.
        /// </summary>
        public readonly string SubscriptionPlanNumber;
        /// <summary>
        /// (Updatable) Tax details.
        /// </summary>
        public readonly Outputs.SubscriptionSubscriptionTaxInfo? TaxInfo;
        /// <summary>
        /// (Updatable) Date of upgrade/conversion when planType changed from FREE_TIER to PAYG
        /// </summary>
        public readonly string? TimePlanUpgrade;
        /// <summary>
        /// (Updatable) Start date of the subscription.
        /// </summary>
        public readonly string? TimeStart;
        /// <summary>
        /// (Updatable) Status of the upgrade.
        /// </summary>
        public readonly string? UpgradeState;
        /// <summary>
        /// (Updatable) This field is used to describe the Upgrade State in case of error (E.g. Upgrade failure caused by interfacing Tax details- TaxError)
        /// </summary>
        public readonly string? UpgradeStateDetails;

        [OutputConstructor]
        private SubscriptionSubscription(
            string? billToCustAccountId,

            ImmutableArray<Outputs.SubscriptionSubscriptionBillingAddress> billingAddresses,

            string? currencyCode,

            string? gsiOrgCode,

            string? id,

            bool? isIntentToPay,

            string? languageCode,

            string? organizationId,

            Outputs.SubscriptionSubscriptionPaymentGateway? paymentGateway,

            ImmutableArray<Outputs.SubscriptionSubscriptionPaymentOption> paymentOptions,

            string? planType,

            string? shipToCustAcctRoleId,

            string? shipToCustAcctSiteId,

            string subscriptionPlanNumber,

            Outputs.SubscriptionSubscriptionTaxInfo? taxInfo,

            string? timePlanUpgrade,

            string? timeStart,

            string? upgradeState,

            string? upgradeStateDetails)
        {
            BillToCustAccountId = billToCustAccountId;
            BillingAddresses = billingAddresses;
            CurrencyCode = currencyCode;
            GsiOrgCode = gsiOrgCode;
            Id = id;
            IsIntentToPay = isIntentToPay;
            LanguageCode = languageCode;
            OrganizationId = organizationId;
            PaymentGateway = paymentGateway;
            PaymentOptions = paymentOptions;
            PlanType = planType;
            ShipToCustAcctRoleId = shipToCustAcctRoleId;
            ShipToCustAcctSiteId = shipToCustAcctSiteId;
            SubscriptionPlanNumber = subscriptionPlanNumber;
            TaxInfo = taxInfo;
            TimePlanUpgrade = timePlanUpgrade;
            TimeStart = timeStart;
            UpgradeState = upgradeState;
            UpgradeStateDetails = upgradeStateDetails;
        }
    }
}
