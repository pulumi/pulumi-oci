// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OspGateway
{
    /// <summary>
    /// This resource provides the Subscription resource in Oracle Cloud Infrastructure Osp Gateway service.
    /// 
    /// Update plan of the subscription.
    /// 
    /// ## Import
    /// 
    /// Subscriptions can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:OspGateway/subscription:Subscription test_subscription "subscriptions/{subscriptionId}/compartmentId/{compartmentId}/ospHomeRegion/{ospHomeRegion}"
    /// ```
    /// </summary>
    [OciResourceType("oci:OspGateway/subscription:Subscription")]
    public partial class Subscription : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Account type.
        /// </summary>
        [Output("accountType")]
        public Output<string> AccountType { get; private set; } = null!;

        /// <summary>
        /// Bill to customer Account id.
        /// </summary>
        [Output("billToCustAccountId")]
        public Output<string> BillToCustAccountId { get; private set; } = null!;

        /// <summary>
        /// Address details model.
        /// </summary>
        [Output("billingAddresses")]
        public Output<ImmutableArray<Outputs.SubscriptionBillingAddress>> BillingAddresses { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// Currency code
        /// </summary>
        [Output("currencyCode")]
        public Output<string> CurrencyCode { get; private set; } = null!;

        /// <summary>
        /// (Updatable) User email
        /// </summary>
        [Output("email")]
        public Output<string> Email { get; private set; } = null!;

        /// <summary>
        /// GSI Subscription external code.
        /// </summary>
        [Output("gsiOrgCode")]
        public Output<string> GsiOrgCode { get; private set; } = null!;

        /// <summary>
        /// Payment intension.
        /// </summary>
        [Output("isIntentToPay")]
        public Output<bool> IsIntentToPay { get; private set; } = null!;

        /// <summary>
        /// Language short code (en, de, hu, etc)
        /// </summary>
        [Output("languageCode")]
        public Output<string> LanguageCode { get; private set; } = null!;

        /// <summary>
        /// GSI organization external identifier.
        /// </summary>
        [Output("organizationId")]
        public Output<string> OrganizationId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The home region's public name of the logged in user.
        /// </summary>
        [Output("ospHomeRegion")]
        public Output<string> OspHomeRegion { get; private set; } = null!;

        /// <summary>
        /// Payment gateway details.
        /// </summary>
        [Output("paymentGateways")]
        public Output<ImmutableArray<Outputs.SubscriptionPaymentGateway>> PaymentGateways { get; private set; } = null!;

        /// <summary>
        /// Payment option list of a subscription.
        /// </summary>
        [Output("paymentOptions")]
        public Output<ImmutableArray<Outputs.SubscriptionPaymentOption>> PaymentOptions { get; private set; } = null!;

        /// <summary>
        /// Subscription plan type.
        /// </summary>
        [Output("planType")]
        public Output<string> PlanType { get; private set; } = null!;

        /// <summary>
        /// Ship to customer account role.
        /// </summary>
        [Output("shipToCustAcctRoleId")]
        public Output<string> ShipToCustAcctRoleId { get; private set; } = null!;

        /// <summary>
        /// Ship to customer account site address id.
        /// </summary>
        [Output("shipToCustAcctSiteId")]
        public Output<string> ShipToCustAcctSiteId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Subscription details object which extends the SubscriptionSummary
        /// </summary>
        [Output("subscription")]
        public Output<Outputs.SubscriptionSubscription> SubscriptionDetails { get; private set; } = null!;

        /// <summary>
        /// Subscription id(OCID).
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("subscriptionId")]
        public Output<string> SubscriptionId { get; private set; } = null!;

        /// <summary>
        /// Subscription plan number.
        /// </summary>
        [Output("subscriptionPlanNumber")]
        public Output<string> SubscriptionPlanNumber { get; private set; } = null!;

        /// <summary>
        /// Tax details.
        /// </summary>
        [Output("taxInfos")]
        public Output<ImmutableArray<Outputs.SubscriptionTaxInfo>> TaxInfos { get; private set; } = null!;

        /// <summary>
        /// Date of upgrade/conversion when account type changed from PERSONAL to CORPORATE
        /// </summary>
        [Output("timePersonalToCorporateConv")]
        public Output<string> TimePersonalToCorporateConv { get; private set; } = null!;

        /// <summary>
        /// Date of upgrade/conversion when planType changed from FREE_TIER to PAYG
        /// </summary>
        [Output("timePlanUpgrade")]
        public Output<string> TimePlanUpgrade { get; private set; } = null!;

        /// <summary>
        /// Start date of the subscription.
        /// </summary>
        [Output("timeStart")]
        public Output<string> TimeStart { get; private set; } = null!;

        /// <summary>
        /// Status of the upgrade.
        /// </summary>
        [Output("upgradeState")]
        public Output<string> UpgradeState { get; private set; } = null!;

        /// <summary>
        /// This field is used to describe the Upgrade State in case of error (E.g. Upgrade failure caused by interfacing Tax details- TaxError)
        /// </summary>
        [Output("upgradeStateDetails")]
        public Output<string> UpgradeStateDetails { get; private set; } = null!;


        /// <summary>
        /// Create a Subscription resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Subscription(string name, SubscriptionArgs args, CustomResourceOptions? options = null)
            : base("oci:OspGateway/subscription:Subscription", name, args ?? new SubscriptionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Subscription(string name, Input<string> id, SubscriptionState? state = null, CustomResourceOptions? options = null)
            : base("oci:OspGateway/subscription:Subscription", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Subscription resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Subscription Get(string name, Input<string> id, SubscriptionState? state = null, CustomResourceOptions? options = null)
        {
            return new Subscription(name, id, state, options);
        }
    }

    public sealed class SubscriptionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// (Updatable) User email
        /// </summary>
        [Input("email", required: true)]
        public Input<string> Email { get; set; } = null!;

        /// <summary>
        /// (Updatable) The home region's public name of the logged in user.
        /// </summary>
        [Input("ospHomeRegion", required: true)]
        public Input<string> OspHomeRegion { get; set; } = null!;

        /// <summary>
        /// (Updatable) Subscription details object which extends the SubscriptionSummary
        /// </summary>
        [Input("subscription", required: true)]
        public Input<Inputs.SubscriptionSubscriptionArgs> SubscriptionDetails { get; set; } = null!;

        /// <summary>
        /// Subscription id(OCID).
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("subscriptionId", required: true)]
        public Input<string> SubscriptionId { get; set; } = null!;

        public SubscriptionArgs()
        {
        }
        public static new SubscriptionArgs Empty => new SubscriptionArgs();
    }

    public sealed class SubscriptionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Account type.
        /// </summary>
        [Input("accountType")]
        public Input<string>? AccountType { get; set; }

        /// <summary>
        /// Bill to customer Account id.
        /// </summary>
        [Input("billToCustAccountId")]
        public Input<string>? BillToCustAccountId { get; set; }

        [Input("billingAddresses")]
        private InputList<Inputs.SubscriptionBillingAddressGetArgs>? _billingAddresses;

        /// <summary>
        /// Address details model.
        /// </summary>
        public InputList<Inputs.SubscriptionBillingAddressGetArgs> BillingAddresses
        {
            get => _billingAddresses ?? (_billingAddresses = new InputList<Inputs.SubscriptionBillingAddressGetArgs>());
            set => _billingAddresses = value;
        }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// Currency code
        /// </summary>
        [Input("currencyCode")]
        public Input<string>? CurrencyCode { get; set; }

        /// <summary>
        /// (Updatable) User email
        /// </summary>
        [Input("email")]
        public Input<string>? Email { get; set; }

        /// <summary>
        /// GSI Subscription external code.
        /// </summary>
        [Input("gsiOrgCode")]
        public Input<string>? GsiOrgCode { get; set; }

        /// <summary>
        /// Payment intension.
        /// </summary>
        [Input("isIntentToPay")]
        public Input<bool>? IsIntentToPay { get; set; }

        /// <summary>
        /// Language short code (en, de, hu, etc)
        /// </summary>
        [Input("languageCode")]
        public Input<string>? LanguageCode { get; set; }

        /// <summary>
        /// GSI organization external identifier.
        /// </summary>
        [Input("organizationId")]
        public Input<string>? OrganizationId { get; set; }

        /// <summary>
        /// (Updatable) The home region's public name of the logged in user.
        /// </summary>
        [Input("ospHomeRegion")]
        public Input<string>? OspHomeRegion { get; set; }

        [Input("paymentGateways")]
        private InputList<Inputs.SubscriptionPaymentGatewayGetArgs>? _paymentGateways;

        /// <summary>
        /// Payment gateway details.
        /// </summary>
        public InputList<Inputs.SubscriptionPaymentGatewayGetArgs> PaymentGateways
        {
            get => _paymentGateways ?? (_paymentGateways = new InputList<Inputs.SubscriptionPaymentGatewayGetArgs>());
            set => _paymentGateways = value;
        }

        [Input("paymentOptions")]
        private InputList<Inputs.SubscriptionPaymentOptionGetArgs>? _paymentOptions;

        /// <summary>
        /// Payment option list of a subscription.
        /// </summary>
        public InputList<Inputs.SubscriptionPaymentOptionGetArgs> PaymentOptions
        {
            get => _paymentOptions ?? (_paymentOptions = new InputList<Inputs.SubscriptionPaymentOptionGetArgs>());
            set => _paymentOptions = value;
        }

        /// <summary>
        /// Subscription plan type.
        /// </summary>
        [Input("planType")]
        public Input<string>? PlanType { get; set; }

        /// <summary>
        /// Ship to customer account role.
        /// </summary>
        [Input("shipToCustAcctRoleId")]
        public Input<string>? ShipToCustAcctRoleId { get; set; }

        /// <summary>
        /// Ship to customer account site address id.
        /// </summary>
        [Input("shipToCustAcctSiteId")]
        public Input<string>? ShipToCustAcctSiteId { get; set; }

        /// <summary>
        /// (Updatable) Subscription details object which extends the SubscriptionSummary
        /// </summary>
        [Input("subscription")]
        public Input<Inputs.SubscriptionSubscriptionGetArgs>? SubscriptionDetails { get; set; }

        /// <summary>
        /// Subscription id(OCID).
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("subscriptionId")]
        public Input<string>? SubscriptionId { get; set; }

        /// <summary>
        /// Subscription plan number.
        /// </summary>
        [Input("subscriptionPlanNumber")]
        public Input<string>? SubscriptionPlanNumber { get; set; }

        [Input("taxInfos")]
        private InputList<Inputs.SubscriptionTaxInfoGetArgs>? _taxInfos;

        /// <summary>
        /// Tax details.
        /// </summary>
        public InputList<Inputs.SubscriptionTaxInfoGetArgs> TaxInfos
        {
            get => _taxInfos ?? (_taxInfos = new InputList<Inputs.SubscriptionTaxInfoGetArgs>());
            set => _taxInfos = value;
        }

        /// <summary>
        /// Date of upgrade/conversion when account type changed from PERSONAL to CORPORATE
        /// </summary>
        [Input("timePersonalToCorporateConv")]
        public Input<string>? TimePersonalToCorporateConv { get; set; }

        /// <summary>
        /// Date of upgrade/conversion when planType changed from FREE_TIER to PAYG
        /// </summary>
        [Input("timePlanUpgrade")]
        public Input<string>? TimePlanUpgrade { get; set; }

        /// <summary>
        /// Start date of the subscription.
        /// </summary>
        [Input("timeStart")]
        public Input<string>? TimeStart { get; set; }

        /// <summary>
        /// Status of the upgrade.
        /// </summary>
        [Input("upgradeState")]
        public Input<string>? UpgradeState { get; set; }

        /// <summary>
        /// This field is used to describe the Upgrade State in case of error (E.g. Upgrade failure caused by interfacing Tax details- TaxError)
        /// </summary>
        [Input("upgradeStateDetails")]
        public Input<string>? UpgradeStateDetails { get; set; }

        public SubscriptionState()
        {
        }
        public static new SubscriptionState Empty => new SubscriptionState();
    }
}
