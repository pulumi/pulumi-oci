// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OsubSubscription
{
    public static class GetCommitment
    {
        /// <summary>
        /// This data source provides details about a specific Commitment resource in Oracle Cloud Infrastructure Osub Subscription service.
        /// 
        /// This API returns the commitment details corresponding to the id provided
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testCommitment = Oci.OsubSubscription.GetCommitment.Invoke(new()
        ///     {
        ///         CommitmentId = testCommitmentOciOsubSubscriptionCommitment.Id,
        ///         XOneGatewaySubscriptionId = commitmentXOneGatewaySubscriptionId,
        ///         XOneOriginRegion = commitmentXOneOriginRegion,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetCommitmentResult> InvokeAsync(GetCommitmentArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCommitmentResult>("oci:OsubSubscription/getCommitment:getCommitment", args ?? new GetCommitmentArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Commitment resource in Oracle Cloud Infrastructure Osub Subscription service.
        /// 
        /// This API returns the commitment details corresponding to the id provided
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testCommitment = Oci.OsubSubscription.GetCommitment.Invoke(new()
        ///     {
        ///         CommitmentId = testCommitmentOciOsubSubscriptionCommitment.Id,
        ///         XOneGatewaySubscriptionId = commitmentXOneGatewaySubscriptionId,
        ///         XOneOriginRegion = commitmentXOneOriginRegion,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCommitmentResult> Invoke(GetCommitmentInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCommitmentResult>("oci:OsubSubscription/getCommitment:getCommitment", args ?? new GetCommitmentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCommitmentArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Commitment Id
        /// </summary>
        [Input("commitmentId", required: true)]
        public string CommitmentId { get; set; } = null!;

        /// <summary>
        /// This header is meant to be used only for internal purposes and will be ignored on any public request. The purpose of this header is  to help on Gateway to API calls identification.
        /// </summary>
        [Input("xOneGatewaySubscriptionId")]
        public string? XOneGatewaySubscriptionId { get; set; }

        /// <summary>
        /// The Oracle Cloud Infrastructure home region name in case home region is not us-ashburn-1 (IAD), e.g. ap-mumbai-1, us-phoenix-1 etc.
        /// </summary>
        [Input("xOneOriginRegion")]
        public string? XOneOriginRegion { get; set; }

        public GetCommitmentArgs()
        {
        }
        public static new GetCommitmentArgs Empty => new GetCommitmentArgs();
    }

    public sealed class GetCommitmentInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Commitment Id
        /// </summary>
        [Input("commitmentId", required: true)]
        public Input<string> CommitmentId { get; set; } = null!;

        /// <summary>
        /// This header is meant to be used only for internal purposes and will be ignored on any public request. The purpose of this header is  to help on Gateway to API calls identification.
        /// </summary>
        [Input("xOneGatewaySubscriptionId")]
        public Input<string>? XOneGatewaySubscriptionId { get; set; }

        /// <summary>
        /// The Oracle Cloud Infrastructure home region name in case home region is not us-ashburn-1 (IAD), e.g. ap-mumbai-1, us-phoenix-1 etc.
        /// </summary>
        [Input("xOneOriginRegion")]
        public Input<string>? XOneOriginRegion { get; set; }

        public GetCommitmentInvokeArgs()
        {
        }
        public static new GetCommitmentInvokeArgs Empty => new GetCommitmentInvokeArgs();
    }


    [OutputType]
    public sealed class GetCommitmentResult
    {
        /// <summary>
        /// Commitment available amount
        /// </summary>
        public readonly string AvailableAmount;
        public readonly string CommitmentId;
        /// <summary>
        /// Funded Allocation line value example: 12000.00
        /// </summary>
        public readonly string FundedAllocationValue;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Commitment quantity
        /// </summary>
        public readonly string Quantity;
        /// <summary>
        /// Commitment end date
        /// </summary>
        public readonly string TimeEnd;
        /// <summary>
        /// Commitment start date
        /// </summary>
        public readonly string TimeStart;
        /// <summary>
        /// Commitment used amount
        /// </summary>
        public readonly string UsedAmount;
        public readonly string? XOneGatewaySubscriptionId;
        public readonly string? XOneOriginRegion;

        [OutputConstructor]
        private GetCommitmentResult(
            string availableAmount,

            string commitmentId,

            string fundedAllocationValue,

            string id,

            string quantity,

            string timeEnd,

            string timeStart,

            string usedAmount,

            string? xOneGatewaySubscriptionId,

            string? xOneOriginRegion)
        {
            AvailableAmount = availableAmount;
            CommitmentId = commitmentId;
            FundedAllocationValue = fundedAllocationValue;
            Id = id;
            Quantity = quantity;
            TimeEnd = timeEnd;
            TimeStart = timeStart;
            UsedAmount = usedAmount;
            XOneGatewaySubscriptionId = xOneGatewaySubscriptionId;
            XOneOriginRegion = xOneOriginRegion;
        }
    }
}
