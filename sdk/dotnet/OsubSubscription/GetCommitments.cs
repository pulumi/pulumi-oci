// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OsubSubscription
{
    public static class GetCommitments
    {
        /// <summary>
        /// This data source provides the list of Commitments in Oracle Cloud Infrastructure Osub Subscription service.
        /// 
        /// This list API returns all commitments for a particular Subscribed Service
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testCommitments = Oci.OsubSubscription.GetCommitments.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         SubscribedServiceId = oci_core_service.Test_service.Id,
        ///         XOneGatewaySubscriptionId = @var.Commitment_x_one_gateway_subscription_id,
        ///         XOneOriginRegion = @var.Commitment_x_one_origin_region,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetCommitmentsResult> InvokeAsync(GetCommitmentsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetCommitmentsResult>("oci:OsubSubscription/getCommitments:getCommitments", args ?? new GetCommitmentsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Commitments in Oracle Cloud Infrastructure Osub Subscription service.
        /// 
        /// This list API returns all commitments for a particular Subscribed Service
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testCommitments = Oci.OsubSubscription.GetCommitments.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         SubscribedServiceId = oci_core_service.Test_service.Id,
        ///         XOneGatewaySubscriptionId = @var.Commitment_x_one_gateway_subscription_id,
        ///         XOneOriginRegion = @var.Commitment_x_one_origin_region,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetCommitmentsResult> Invoke(GetCommitmentsInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetCommitmentsResult>("oci:OsubSubscription/getCommitments:getCommitments", args ?? new GetCommitmentsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCommitmentsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetCommitmentsFilterArgs>? _filters;
        public List<Inputs.GetCommitmentsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetCommitmentsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// This param is used to get the commitments for a particular subscribed service
        /// </summary>
        [Input("subscribedServiceId", required: true)]
        public string SubscribedServiceId { get; set; } = null!;

        /// <summary>
        /// This header is meant to be used only for internal purposes and will be ignored on any public request. The purpose of this header is  to help on Gateway to API calls identification.
        /// </summary>
        [Input("xOneGatewaySubscriptionId")]
        public string? XOneGatewaySubscriptionId { get; set; }

        /// <summary>
        /// The Oracle Cloud Infrastructure home region name in case home region is not us-ashburn-1 (IAD), e.g. ap-mumbai-1, us-phoenix-1 etc.
        /// </summary>
        [Input("xOneOriginRegion")]
        public string? XOneOriginRegion { get; set; }

        public GetCommitmentsArgs()
        {
        }
        public static new GetCommitmentsArgs Empty => new GetCommitmentsArgs();
    }

    public sealed class GetCommitmentsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetCommitmentsFilterInputArgs>? _filters;
        public InputList<Inputs.GetCommitmentsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetCommitmentsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// This param is used to get the commitments for a particular subscribed service
        /// </summary>
        [Input("subscribedServiceId", required: true)]
        public Input<string> SubscribedServiceId { get; set; } = null!;

        /// <summary>
        /// This header is meant to be used only for internal purposes and will be ignored on any public request. The purpose of this header is  to help on Gateway to API calls identification.
        /// </summary>
        [Input("xOneGatewaySubscriptionId")]
        public Input<string>? XOneGatewaySubscriptionId { get; set; }

        /// <summary>
        /// The Oracle Cloud Infrastructure home region name in case home region is not us-ashburn-1 (IAD), e.g. ap-mumbai-1, us-phoenix-1 etc.
        /// </summary>
        [Input("xOneOriginRegion")]
        public Input<string>? XOneOriginRegion { get; set; }

        public GetCommitmentsInvokeArgs()
        {
        }
        public static new GetCommitmentsInvokeArgs Empty => new GetCommitmentsInvokeArgs();
    }


    [OutputType]
    public sealed class GetCommitmentsResult
    {
        /// <summary>
        /// The list of commitments.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCommitmentsCommitmentResult> Commitments;
        public readonly string CompartmentId;
        public readonly ImmutableArray<Outputs.GetCommitmentsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string SubscribedServiceId;
        public readonly string? XOneGatewaySubscriptionId;
        public readonly string? XOneOriginRegion;

        [OutputConstructor]
        private GetCommitmentsResult(
            ImmutableArray<Outputs.GetCommitmentsCommitmentResult> commitments,

            string compartmentId,

            ImmutableArray<Outputs.GetCommitmentsFilterResult> filters,

            string id,

            string subscribedServiceId,

            string? xOneGatewaySubscriptionId,

            string? xOneOriginRegion)
        {
            Commitments = commitments;
            CompartmentId = compartmentId;
            Filters = filters;
            Id = id;
            SubscribedServiceId = subscribedServiceId;
            XOneGatewaySubscriptionId = xOneGatewaySubscriptionId;
            XOneOriginRegion = xOneOriginRegion;
        }
    }
}
