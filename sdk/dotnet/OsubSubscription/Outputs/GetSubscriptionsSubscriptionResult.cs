// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.OsubSubscription.Outputs
{

    [OutputType]
    public sealed class GetSubscriptionsSubscriptionResult
    {
        /// <summary>
        /// Currency details
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSubscriptionsSubscriptionCurrencyResult> Currencies;
        /// <summary>
        /// Customer friendly service name provided by PRG
        /// </summary>
        public readonly string ServiceName;
        /// <summary>
        /// Subscribed service status
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// List of Subscribed Services of the plan
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSubscriptionsSubscriptionSubscribedServiceResult> SubscribedServices;
        /// <summary>
        /// Represents the date when the last service of the subscription ends
        /// </summary>
        public readonly string TimeEnd;
        /// <summary>
        /// Represents the date when the first service of the subscription was activated
        /// </summary>
        public readonly string TimeStart;

        [OutputConstructor]
        private GetSubscriptionsSubscriptionResult(
            ImmutableArray<Outputs.GetSubscriptionsSubscriptionCurrencyResult> currencies,

            string serviceName,

            string status,

            ImmutableArray<Outputs.GetSubscriptionsSubscriptionSubscribedServiceResult> subscribedServices,

            string timeEnd,

            string timeStart)
        {
            Currencies = currencies;
            ServiceName = serviceName;
            Status = status;
            SubscribedServices = subscribedServices;
            TimeEnd = timeEnd;
            TimeStart = timeStart;
        }
    }
}
