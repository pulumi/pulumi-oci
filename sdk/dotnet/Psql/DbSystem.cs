// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Psql
{
    /// <summary>
    /// This resource provides the Db System resource in Oracle Cloud Infrastructure Psql service.
    /// 
    /// Creates a new database system.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testDbSystem = new Oci.Psql.DbSystem("test_db_system", new()
    ///     {
    ///         CompartmentId = compartmentId,
    ///         Credentials = new Oci.Psql.Inputs.DbSystemCredentialsArgs
    ///         {
    ///             PasswordDetails = new Oci.Psql.Inputs.DbSystemCredentialsPasswordDetailsArgs
    ///             {
    ///                 PasswordType = dbSystemCredentialsPasswordDetailsPasswordType,
    ///                 Password = dbSystemCredentialsPasswordDetailsPassword,
    ///                 SecretId = testSecret.Id,
    ///                 SecretVersion = dbSystemCredentialsPasswordDetailsSecretVersion,
    ///             },
    ///             Username = dbSystemCredentialsUsername,
    ///         },
    ///         DbVersion = dbSystemDbVersion,
    ///         DisplayName = dbSystemDisplayName,
    ///         NetworkDetails = new Oci.Psql.Inputs.DbSystemNetworkDetailsArgs
    ///         {
    ///             SubnetId = testSubnet.Id,
    ///             NsgIds = dbSystemNetworkDetailsNsgIds,
    ///             PrimaryDbEndpointPrivateIp = dbSystemNetworkDetailsPrimaryDbEndpointPrivateIp,
    ///         },
    ///         Shape = dbSystemShape,
    ///         StorageDetails = new Oci.Psql.Inputs.DbSystemStorageDetailsArgs
    ///         {
    ///             IsRegionallyDurable = dbSystemStorageDetailsIsRegionallyDurable,
    ///             SystemType = dbSystemStorageDetailsSystemType,
    ///             AvailabilityDomain = dbSystemStorageDetailsAvailabilityDomain,
    ///             Iops = dbSystemStorageDetailsIops,
    ///         },
    ///         ConfigId = testConfig.Id,
    ///         DefinedTags = 
    ///         {
    ///             { "foo-namespace.bar-key", "value" },
    ///         },
    ///         Description = dbSystemDescription,
    ///         FreeformTags = 
    ///         {
    ///             { "bar-key", "value" },
    ///         },
    ///         InstanceCount = dbSystemInstanceCount,
    ///         InstanceMemorySizeInGbs = dbSystemInstanceMemorySizeInGbs,
    ///         InstanceOcpuCount = dbSystemInstanceOcpuCount,
    ///         InstancesDetails = new[]
    ///         {
    ///             new Oci.Psql.Inputs.DbSystemInstancesDetailArgs
    ///             {
    ///                 Description = dbSystemInstancesDetailsDescription,
    ///                 DisplayName = dbSystemInstancesDetailsDisplayName,
    ///                 PrivateIp = dbSystemInstancesDetailsPrivateIp,
    ///             },
    ///         },
    ///         ManagementPolicy = new Oci.Psql.Inputs.DbSystemManagementPolicyArgs
    ///         {
    ///             BackupPolicy = new Oci.Psql.Inputs.DbSystemManagementPolicyBackupPolicyArgs
    ///             {
    ///                 BackupStart = dbSystemManagementPolicyBackupPolicyBackupStart,
    ///                 DaysOfTheMonths = dbSystemManagementPolicyBackupPolicyDaysOfTheMonth,
    ///                 DaysOfTheWeeks = dbSystemManagementPolicyBackupPolicyDaysOfTheWeek,
    ///                 Kind = dbSystemManagementPolicyBackupPolicyKind,
    ///                 RetentionDays = dbSystemManagementPolicyBackupPolicyRetentionDays,
    ///             },
    ///             MaintenanceWindowStart = dbSystemManagementPolicyMaintenanceWindowStart,
    ///         },
    ///         Source = new Oci.Psql.Inputs.DbSystemSourceArgs
    ///         {
    ///             SourceType = dbSystemSourceSourceType,
    ///             BackupId = testBackup.Id,
    ///             IsHavingRestoreConfigOverrides = dbSystemSourceIsHavingRestoreConfigOverrides,
    ///         },
    ///         SystemType = dbSystemSystemType,
    ///         PatchOperations = new[]
    ///         {
    ///             new Oci.Psql.Inputs.DbSystemPatchOperationArgs
    ///             {
    ///                 Operation = dbSystemPatchOperationsOperation,
    ///                 Selection = dbSystemPatchOperationsSelection,
    ///                 Value = dbSystemPatchOperationsValue,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// DbSystems can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:Psql/dbSystem:DbSystem test_db_system "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:Psql/dbSystem:DbSystem")]
    public partial class DbSystem : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The database system administrator username.
        /// </summary>
        [Output("adminUsername")]
        public Output<string> AdminUsername { get; private set; } = null!;

        /// <summary>
        /// Whether a configuration update requires a restart of the database instance or a reload of the configuration. Some configuration changes require a restart of database instances to be applied. Apply config can be passed as `RESTART` or `RELOAD`
        /// </summary>
        [Output("applyConfig")]
        public Output<string?> ApplyConfig { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the database system.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the configuration associated with the database system.
        /// </summary>
        [Output("configId")]
        public Output<string> ConfigId { get; private set; } = null!;

        /// <summary>
        /// Initial database system credentials that the database system will be provisioned with. The password details are not visible on any subsequent operation, such as GET /dbSystems/{dbSystemId}.
        /// </summary>
        [Output("credentials")]
        public Output<Outputs.DbSystemCredentials?> Credentials { get; private set; } = null!;

        /// <summary>
        /// Version of database system software.
        /// </summary>
        [Output("dbVersion")]
        public Output<string> DbVersion { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, string>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A user-provided description of a database system.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A user-friendly display name for the database system. Avoid entering confidential information.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, string>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// Count of database instances nodes to be created in the database system.
        /// </summary>
        [Output("instanceCount")]
        public Output<int> InstanceCount { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The total amount of memory available to each database instance node, in gigabytes.
        /// </summary>
        [Output("instanceMemorySizeInGbs")]
        public Output<int> InstanceMemorySizeInGbs { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The total number of OCPUs available to each database instance node.
        /// </summary>
        [Output("instanceOcpuCount")]
        public Output<int> InstanceOcpuCount { get; private set; } = null!;

        /// <summary>
        /// The list of instances, or nodes, in the database system.
        /// </summary>
        [Output("instances")]
        public Output<ImmutableArray<Outputs.DbSystemInstance>> Instances { get; private set; } = null!;

        /// <summary>
        /// Details of database instances nodes to be created. This parameter is optional. If specified, its size must match `instanceCount`.
        /// </summary>
        [Output("instancesDetails")]
        public Output<ImmutableArray<Outputs.DbSystemInstancesDetail>> InstancesDetails { get; private set; } = null!;

        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        [Output("lifecycleDetails")]
        public Output<string> LifecycleDetails { get; private set; } = null!;

        /// <summary>
        /// (Updatable) PostgreSQL database system management policy update details.
        /// </summary>
        [Output("managementPolicy")]
        public Output<Outputs.DbSystemManagementPolicy> ManagementPolicy { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Network details for the database system.
        /// </summary>
        [Output("networkDetails")]
        public Output<Outputs.DbSystemNetworkDetails> NetworkDetails { get; private set; } = null!;

        /// <summary>
        /// (Updatable) For adding and removing from read replica database instances. Please remove the patch_operations after it is applied. Update the instance_count arrodrandly. Cannot be specified when creating the resource.
        /// </summary>
        [Output("patchOperations")]
        public Output<ImmutableArray<Outputs.DbSystemPatchOperation>> PatchOperations { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The name of the shape for the database instance node. Use the /shapes API for accepted shapes. Example: `VM.Standard.E4.Flex`
        /// </summary>
        [Output("shape")]
        public Output<string> Shape { get; private set; } = null!;

        /// <summary>
        /// The source used to restore the database system.
        /// </summary>
        [Output("source")]
        public Output<Outputs.DbSystemSource> Source { get; private set; } = null!;

        /// <summary>
        /// The current state of the database system.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Storage details of the database system.
        /// </summary>
        [Output("storageDetails")]
        public Output<Outputs.DbSystemStorageDetails> StorageDetails { get; private set; } = null!;

        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        [Output("systemTags")]
        public Output<ImmutableDictionary<string, string>> SystemTags { get; private set; } = null!;

        /// <summary>
        /// Type of the database system.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("systemType")]
        public Output<string> SystemType { get; private set; } = null!;

        /// <summary>
        /// The date and time that the database system was created, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The date and time that the database system was updated, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;


        /// <summary>
        /// Create a DbSystem resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DbSystem(string name, DbSystemArgs args, CustomResourceOptions? options = null)
            : base("oci:Psql/dbSystem:DbSystem", name, args ?? new DbSystemArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DbSystem(string name, Input<string> id, DbSystemState? state = null, CustomResourceOptions? options = null)
            : base("oci:Psql/dbSystem:DbSystem", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DbSystem resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DbSystem Get(string name, Input<string> id, DbSystemState? state = null, CustomResourceOptions? options = null)
        {
            return new DbSystem(name, id, state, options);
        }
    }

    public sealed class DbSystemArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether a configuration update requires a restart of the database instance or a reload of the configuration. Some configuration changes require a restart of database instances to be applied. Apply config can be passed as `RESTART` or `RELOAD`
        /// </summary>
        [Input("applyConfig")]
        public Input<string>? ApplyConfig { get; set; }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the database system.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the configuration associated with the database system.
        /// </summary>
        [Input("configId")]
        public Input<string>? ConfigId { get; set; }

        /// <summary>
        /// Initial database system credentials that the database system will be provisioned with. The password details are not visible on any subsequent operation, such as GET /dbSystems/{dbSystemId}.
        /// </summary>
        [Input("credentials")]
        public Input<Inputs.DbSystemCredentialsArgs>? Credentials { get; set; }

        /// <summary>
        /// Version of database system software.
        /// </summary>
        [Input("dbVersion", required: true)]
        public Input<string> DbVersion { get; set; } = null!;

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) A user-provided description of a database system.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) A user-friendly display name for the database system. Avoid entering confidential information.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// Count of database instances nodes to be created in the database system.
        /// </summary>
        [Input("instanceCount")]
        public Input<int>? InstanceCount { get; set; }

        /// <summary>
        /// (Updatable) The total amount of memory available to each database instance node, in gigabytes.
        /// </summary>
        [Input("instanceMemorySizeInGbs")]
        public Input<int>? InstanceMemorySizeInGbs { get; set; }

        /// <summary>
        /// (Updatable) The total number of OCPUs available to each database instance node.
        /// </summary>
        [Input("instanceOcpuCount")]
        public Input<int>? InstanceOcpuCount { get; set; }

        [Input("instancesDetails")]
        private InputList<Inputs.DbSystemInstancesDetailArgs>? _instancesDetails;

        /// <summary>
        /// Details of database instances nodes to be created. This parameter is optional. If specified, its size must match `instanceCount`.
        /// </summary>
        public InputList<Inputs.DbSystemInstancesDetailArgs> InstancesDetails
        {
            get => _instancesDetails ?? (_instancesDetails = new InputList<Inputs.DbSystemInstancesDetailArgs>());
            set => _instancesDetails = value;
        }

        /// <summary>
        /// (Updatable) PostgreSQL database system management policy update details.
        /// </summary>
        [Input("managementPolicy")]
        public Input<Inputs.DbSystemManagementPolicyArgs>? ManagementPolicy { get; set; }

        /// <summary>
        /// (Updatable) Network details for the database system.
        /// </summary>
        [Input("networkDetails", required: true)]
        public Input<Inputs.DbSystemNetworkDetailsArgs> NetworkDetails { get; set; } = null!;

        [Input("patchOperations")]
        private InputList<Inputs.DbSystemPatchOperationArgs>? _patchOperations;

        /// <summary>
        /// (Updatable) For adding and removing from read replica database instances. Please remove the patch_operations after it is applied. Update the instance_count arrodrandly. Cannot be specified when creating the resource.
        /// </summary>
        public InputList<Inputs.DbSystemPatchOperationArgs> PatchOperations
        {
            get => _patchOperations ?? (_patchOperations = new InputList<Inputs.DbSystemPatchOperationArgs>());
            set => _patchOperations = value;
        }

        /// <summary>
        /// (Updatable) The name of the shape for the database instance node. Use the /shapes API for accepted shapes. Example: `VM.Standard.E4.Flex`
        /// </summary>
        [Input("shape", required: true)]
        public Input<string> Shape { get; set; } = null!;

        /// <summary>
        /// The source used to restore the database system.
        /// </summary>
        [Input("source")]
        public Input<Inputs.DbSystemSourceArgs>? Source { get; set; }

        /// <summary>
        /// (Updatable) Storage details of the database system.
        /// </summary>
        [Input("storageDetails", required: true)]
        public Input<Inputs.DbSystemStorageDetailsArgs> StorageDetails { get; set; } = null!;

        /// <summary>
        /// Type of the database system.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("systemType")]
        public Input<string>? SystemType { get; set; }

        public DbSystemArgs()
        {
        }
        public static new DbSystemArgs Empty => new DbSystemArgs();
    }

    public sealed class DbSystemState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The database system administrator username.
        /// </summary>
        [Input("adminUsername")]
        public Input<string>? AdminUsername { get; set; }

        /// <summary>
        /// Whether a configuration update requires a restart of the database instance or a reload of the configuration. Some configuration changes require a restart of database instances to be applied. Apply config can be passed as `RESTART` or `RELOAD`
        /// </summary>
        [Input("applyConfig")]
        public Input<string>? ApplyConfig { get; set; }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the database system.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the configuration associated with the database system.
        /// </summary>
        [Input("configId")]
        public Input<string>? ConfigId { get; set; }

        /// <summary>
        /// Initial database system credentials that the database system will be provisioned with. The password details are not visible on any subsequent operation, such as GET /dbSystems/{dbSystemId}.
        /// </summary>
        [Input("credentials")]
        public Input<Inputs.DbSystemCredentialsGetArgs>? Credentials { get; set; }

        /// <summary>
        /// Version of database system software.
        /// </summary>
        [Input("dbVersion")]
        public Input<string>? DbVersion { get; set; }

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) A user-provided description of a database system.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) A user-friendly display name for the database system. Avoid entering confidential information.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// Count of database instances nodes to be created in the database system.
        /// </summary>
        [Input("instanceCount")]
        public Input<int>? InstanceCount { get; set; }

        /// <summary>
        /// (Updatable) The total amount of memory available to each database instance node, in gigabytes.
        /// </summary>
        [Input("instanceMemorySizeInGbs")]
        public Input<int>? InstanceMemorySizeInGbs { get; set; }

        /// <summary>
        /// (Updatable) The total number of OCPUs available to each database instance node.
        /// </summary>
        [Input("instanceOcpuCount")]
        public Input<int>? InstanceOcpuCount { get; set; }

        [Input("instances")]
        private InputList<Inputs.DbSystemInstanceGetArgs>? _instances;

        /// <summary>
        /// The list of instances, or nodes, in the database system.
        /// </summary>
        public InputList<Inputs.DbSystemInstanceGetArgs> Instances
        {
            get => _instances ?? (_instances = new InputList<Inputs.DbSystemInstanceGetArgs>());
            set => _instances = value;
        }

        [Input("instancesDetails")]
        private InputList<Inputs.DbSystemInstancesDetailGetArgs>? _instancesDetails;

        /// <summary>
        /// Details of database instances nodes to be created. This parameter is optional. If specified, its size must match `instanceCount`.
        /// </summary>
        public InputList<Inputs.DbSystemInstancesDetailGetArgs> InstancesDetails
        {
            get => _instancesDetails ?? (_instancesDetails = new InputList<Inputs.DbSystemInstancesDetailGetArgs>());
            set => _instancesDetails = value;
        }

        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        [Input("lifecycleDetails")]
        public Input<string>? LifecycleDetails { get; set; }

        /// <summary>
        /// (Updatable) PostgreSQL database system management policy update details.
        /// </summary>
        [Input("managementPolicy")]
        public Input<Inputs.DbSystemManagementPolicyGetArgs>? ManagementPolicy { get; set; }

        /// <summary>
        /// (Updatable) Network details for the database system.
        /// </summary>
        [Input("networkDetails")]
        public Input<Inputs.DbSystemNetworkDetailsGetArgs>? NetworkDetails { get; set; }

        [Input("patchOperations")]
        private InputList<Inputs.DbSystemPatchOperationGetArgs>? _patchOperations;

        /// <summary>
        /// (Updatable) For adding and removing from read replica database instances. Please remove the patch_operations after it is applied. Update the instance_count arrodrandly. Cannot be specified when creating the resource.
        /// </summary>
        public InputList<Inputs.DbSystemPatchOperationGetArgs> PatchOperations
        {
            get => _patchOperations ?? (_patchOperations = new InputList<Inputs.DbSystemPatchOperationGetArgs>());
            set => _patchOperations = value;
        }

        /// <summary>
        /// (Updatable) The name of the shape for the database instance node. Use the /shapes API for accepted shapes. Example: `VM.Standard.E4.Flex`
        /// </summary>
        [Input("shape")]
        public Input<string>? Shape { get; set; }

        /// <summary>
        /// The source used to restore the database system.
        /// </summary>
        [Input("source")]
        public Input<Inputs.DbSystemSourceGetArgs>? Source { get; set; }

        /// <summary>
        /// The current state of the database system.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// (Updatable) Storage details of the database system.
        /// </summary>
        [Input("storageDetails")]
        public Input<Inputs.DbSystemStorageDetailsGetArgs>? StorageDetails { get; set; }

        [Input("systemTags")]
        private InputMap<string>? _systemTags;

        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public InputMap<string> SystemTags
        {
            get => _systemTags ?? (_systemTags = new InputMap<string>());
            set => _systemTags = value;
        }

        /// <summary>
        /// Type of the database system.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("systemType")]
        public Input<string>? SystemType { get; set; }

        /// <summary>
        /// The date and time that the database system was created, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The date and time that the database system was updated, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        public DbSystemState()
        {
        }
        public static new DbSystemState Empty => new DbSystemState();
    }
}
