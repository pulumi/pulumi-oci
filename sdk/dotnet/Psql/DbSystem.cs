// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Psql
{
    /// <summary>
    /// This resource provides the Db System resource in Oracle Cloud Infrastructure Psql service.
    /// 
    /// Creates a new DbSystem.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testDbSystem = new Oci.Psql.DbSystem("testDbSystem", new()
    ///     {
    ///         CompartmentId = @var.Compartment_id,
    ///         DbVersion = @var.Db_system_db_version,
    ///         DisplayName = @var.Db_system_display_name,
    ///         NetworkDetails = new Oci.Psql.Inputs.DbSystemNetworkDetailsArgs
    ///         {
    ///             SubnetId = oci_core_subnet.Test_subnet.Id,
    ///             NsgIds = @var.Db_system_network_details_nsg_ids,
    ///             PrimaryDbEndpointPrivateIp = @var.Db_system_network_details_primary_db_endpoint_private_ip,
    ///         },
    ///         Shape = @var.Db_system_shape,
    ///         StorageDetails = new Oci.Psql.Inputs.DbSystemStorageDetailsArgs
    ///         {
    ///             IsRegionallyDurable = @var.Db_system_storage_details_is_regionally_durable,
    ///             SystemType = @var.Db_system_storage_details_system_type,
    ///             AvailabilityDomain = @var.Db_system_storage_details_availability_domain,
    ///             Iops = @var.Db_system_storage_details_iops,
    ///         },
    ///         ConfigId = oci_apm_config_config.Test_config.Id,
    ///         Credentials = new Oci.Psql.Inputs.DbSystemCredentialsArgs
    ///         {
    ///             PasswordDetails = new Oci.Psql.Inputs.DbSystemCredentialsPasswordDetailsArgs
    ///             {
    ///                 PasswordType = @var.Db_system_credentials_password_details_password_type,
    ///                 Password = @var.Db_system_credentials_password_details_password,
    ///                 SecretId = oci_vault_secret.Test_secret.Id,
    ///                 SecretVersion = @var.Db_system_credentials_password_details_secret_version,
    ///             },
    ///             Username = @var.Db_system_credentials_username,
    ///         },
    ///         DefinedTags = 
    ///         {
    ///             { "foo-namespace.bar-key", "value" },
    ///         },
    ///         Description = @var.Db_system_description,
    ///         FreeformTags = 
    ///         {
    ///             { "bar-key", "value" },
    ///         },
    ///         InstanceCount = @var.Db_system_instance_count,
    ///         InstanceMemorySizeInGbs = @var.Db_system_instance_memory_size_in_gbs,
    ///         InstanceOcpuCount = @var.Db_system_instance_ocpu_count,
    ///         InstancesDetails = new[]
    ///         {
    ///             new Oci.Psql.Inputs.DbSystemInstancesDetailArgs
    ///             {
    ///                 Description = @var.Db_system_instances_details_description,
    ///                 DisplayName = @var.Db_system_instances_details_display_name,
    ///                 PrivateIp = @var.Db_system_instances_details_private_ip,
    ///             },
    ///         },
    ///         ManagementPolicy = new Oci.Psql.Inputs.DbSystemManagementPolicyArgs
    ///         {
    ///             BackupPolicy = new Oci.Psql.Inputs.DbSystemManagementPolicyBackupPolicyArgs
    ///             {
    ///                 BackupStart = @var.Db_system_management_policy_backup_policy_backup_start,
    ///                 DaysOfTheMonths = @var.Db_system_management_policy_backup_policy_days_of_the_month,
    ///                 DaysOfTheWeeks = @var.Db_system_management_policy_backup_policy_days_of_the_week,
    ///                 Kind = @var.Db_system_management_policy_backup_policy_kind,
    ///                 RetentionDays = @var.Db_system_management_policy_backup_policy_retention_days,
    ///             },
    ///             MaintenanceWindowStart = @var.Db_system_management_policy_maintenance_window_start,
    ///         },
    ///         Source = new Oci.Psql.Inputs.DbSystemSourceArgs
    ///         {
    ///             SourceType = @var.Db_system_source_source_type,
    ///             BackupId = oci_psql_backup.Test_backup.Id,
    ///             IsHavingRestoreConfigOverrides = @var.Db_system_source_is_having_restore_config_overrides,
    ///         },
    ///         SystemType = @var.Db_system_system_type,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// DbSystems can be imported using the `id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import oci:Psql/dbSystem:DbSystem test_db_system "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:Psql/dbSystem:DbSystem")]
    public partial class DbSystem : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The DB system username.
        /// </summary>
        [Output("adminUsername")]
        public Output<string> AdminUsername { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Compartment identifier
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// Configuration identifier
        /// </summary>
        [Output("configId")]
        public Output<string> ConfigId { get; private set; } = null!;

        /// <summary>
        /// Initial DbSystem credentials that the DbSystem will be provisioned with. The password details are not visible on any subsequent operation, such as GET /dbSystems/{dbSystemId}.
        /// </summary>
        [Output("credentials")]
        public Output<Outputs.DbSystemCredentials?> Credentials { get; private set; } = null!;

        /// <summary>
        /// Version of DbSystem software.
        /// </summary>
        [Output("dbVersion")]
        public Output<string> DbVersion { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, object>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// Description of the DbInstance. This field should be input by the user.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// Display name of the DbInstance.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, object>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// Count of DbInstances to be created in the DbSystem.
        /// </summary>
        [Output("instanceCount")]
        public Output<int> InstanceCount { get; private set; } = null!;

        /// <summary>
        /// The total amount of memory available to each DbInstance, in gigabytes.
        /// </summary>
        [Output("instanceMemorySizeInGbs")]
        public Output<int> InstanceMemorySizeInGbs { get; private set; } = null!;

        /// <summary>
        /// The total number of OCPUs available to each DbInstance.
        /// </summary>
        [Output("instanceOcpuCount")]
        public Output<int> InstanceOcpuCount { get; private set; } = null!;

        /// <summary>
        /// The list of DbInstances in the DbSystem.
        /// </summary>
        [Output("instances")]
        public Output<ImmutableArray<Outputs.DbSystemInstance>> Instances { get; private set; } = null!;

        /// <summary>
        /// Details of DbInstances to be created. Optional parameter. If specified, its size must match instanceCount.
        /// </summary>
        [Output("instancesDetails")]
        public Output<ImmutableArray<Outputs.DbSystemInstancesDetail>> InstancesDetails { get; private set; } = null!;

        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        [Output("lifecycleDetails")]
        public Output<string> LifecycleDetails { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Posgresql DB system management policy update details
        /// </summary>
        [Output("managementPolicy")]
        public Output<Outputs.DbSystemManagementPolicy> ManagementPolicy { get; private set; } = null!;

        /// <summary>
        /// DbSystem network details.
        /// </summary>
        [Output("networkDetails")]
        public Output<Outputs.DbSystemNetworkDetails> NetworkDetails { get; private set; } = null!;

        /// <summary>
        /// Shape of DbInstance. This name should match from with one of the available shapes from /shapes API.
        /// </summary>
        [Output("shape")]
        public Output<string> Shape { get; private set; } = null!;

        /// <summary>
        /// New source is used to restore the DB system.
        /// </summary>
        [Output("source")]
        public Output<Outputs.DbSystemSource> Source { get; private set; } = null!;

        /// <summary>
        /// The current state of the DbSystem.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Storage details of the DbSystem.
        /// </summary>
        [Output("storageDetails")]
        public Output<Outputs.DbSystemStorageDetails> StorageDetails { get; private set; } = null!;

        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        [Output("systemTags")]
        public Output<ImmutableDictionary<string, object>> SystemTags { get; private set; } = null!;

        /// <summary>
        /// Type of the DbSystem.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("systemType")]
        public Output<string> SystemType { get; private set; } = null!;

        /// <summary>
        /// The time the the DbSystem was created. An RFC3339 formatted datetime string
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The time the DbSystem was updated. An RFC3339 formatted datetime string
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;


        /// <summary>
        /// Create a DbSystem resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DbSystem(string name, DbSystemArgs args, CustomResourceOptions? options = null)
            : base("oci:Psql/dbSystem:DbSystem", name, args ?? new DbSystemArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DbSystem(string name, Input<string> id, DbSystemState? state = null, CustomResourceOptions? options = null)
            : base("oci:Psql/dbSystem:DbSystem", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DbSystem resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DbSystem Get(string name, Input<string> id, DbSystemState? state = null, CustomResourceOptions? options = null)
        {
            return new DbSystem(name, id, state, options);
        }
    }

    public sealed class DbSystemArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) Compartment identifier
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// Configuration identifier
        /// </summary>
        [Input("configId")]
        public Input<string>? ConfigId { get; set; }

        /// <summary>
        /// Initial DbSystem credentials that the DbSystem will be provisioned with. The password details are not visible on any subsequent operation, such as GET /dbSystems/{dbSystemId}.
        /// </summary>
        [Input("credentials")]
        public Input<Inputs.DbSystemCredentialsArgs>? Credentials { get; set; }

        /// <summary>
        /// Version of DbSystem software.
        /// </summary>
        [Input("dbVersion", required: true)]
        public Input<string> DbVersion { get; set; } = null!;

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// Description of the DbInstance. This field should be input by the user.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Display name of the DbInstance.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// Count of DbInstances to be created in the DbSystem.
        /// </summary>
        [Input("instanceCount")]
        public Input<int>? InstanceCount { get; set; }

        /// <summary>
        /// The total amount of memory available to each DbInstance, in gigabytes.
        /// </summary>
        [Input("instanceMemorySizeInGbs")]
        public Input<int>? InstanceMemorySizeInGbs { get; set; }

        /// <summary>
        /// The total number of OCPUs available to each DbInstance.
        /// </summary>
        [Input("instanceOcpuCount")]
        public Input<int>? InstanceOcpuCount { get; set; }

        [Input("instancesDetails")]
        private InputList<Inputs.DbSystemInstancesDetailArgs>? _instancesDetails;

        /// <summary>
        /// Details of DbInstances to be created. Optional parameter. If specified, its size must match instanceCount.
        /// </summary>
        public InputList<Inputs.DbSystemInstancesDetailArgs> InstancesDetails
        {
            get => _instancesDetails ?? (_instancesDetails = new InputList<Inputs.DbSystemInstancesDetailArgs>());
            set => _instancesDetails = value;
        }

        /// <summary>
        /// (Updatable) Posgresql DB system management policy update details
        /// </summary>
        [Input("managementPolicy")]
        public Input<Inputs.DbSystemManagementPolicyArgs>? ManagementPolicy { get; set; }

        /// <summary>
        /// DbSystem network details.
        /// </summary>
        [Input("networkDetails", required: true)]
        public Input<Inputs.DbSystemNetworkDetailsArgs> NetworkDetails { get; set; } = null!;

        /// <summary>
        /// Shape of DbInstance. This name should match from with one of the available shapes from /shapes API.
        /// </summary>
        [Input("shape", required: true)]
        public Input<string> Shape { get; set; } = null!;

        /// <summary>
        /// New source is used to restore the DB system.
        /// </summary>
        [Input("source")]
        public Input<Inputs.DbSystemSourceArgs>? Source { get; set; }

        /// <summary>
        /// (Updatable) Storage details of the DbSystem.
        /// </summary>
        [Input("storageDetails", required: true)]
        public Input<Inputs.DbSystemStorageDetailsArgs> StorageDetails { get; set; } = null!;

        /// <summary>
        /// Type of the DbSystem.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("systemType")]
        public Input<string>? SystemType { get; set; }

        public DbSystemArgs()
        {
        }
        public static new DbSystemArgs Empty => new DbSystemArgs();
    }

    public sealed class DbSystemState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The DB system username.
        /// </summary>
        [Input("adminUsername")]
        public Input<string>? AdminUsername { get; set; }

        /// <summary>
        /// (Updatable) Compartment identifier
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// Configuration identifier
        /// </summary>
        [Input("configId")]
        public Input<string>? ConfigId { get; set; }

        /// <summary>
        /// Initial DbSystem credentials that the DbSystem will be provisioned with. The password details are not visible on any subsequent operation, such as GET /dbSystems/{dbSystemId}.
        /// </summary>
        [Input("credentials")]
        public Input<Inputs.DbSystemCredentialsGetArgs>? Credentials { get; set; }

        /// <summary>
        /// Version of DbSystem software.
        /// </summary>
        [Input("dbVersion")]
        public Input<string>? DbVersion { get; set; }

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// Description of the DbInstance. This field should be input by the user.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Display name of the DbInstance.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// Count of DbInstances to be created in the DbSystem.
        /// </summary>
        [Input("instanceCount")]
        public Input<int>? InstanceCount { get; set; }

        /// <summary>
        /// The total amount of memory available to each DbInstance, in gigabytes.
        /// </summary>
        [Input("instanceMemorySizeInGbs")]
        public Input<int>? InstanceMemorySizeInGbs { get; set; }

        /// <summary>
        /// The total number of OCPUs available to each DbInstance.
        /// </summary>
        [Input("instanceOcpuCount")]
        public Input<int>? InstanceOcpuCount { get; set; }

        [Input("instances")]
        private InputList<Inputs.DbSystemInstanceGetArgs>? _instances;

        /// <summary>
        /// The list of DbInstances in the DbSystem.
        /// </summary>
        public InputList<Inputs.DbSystemInstanceGetArgs> Instances
        {
            get => _instances ?? (_instances = new InputList<Inputs.DbSystemInstanceGetArgs>());
            set => _instances = value;
        }

        [Input("instancesDetails")]
        private InputList<Inputs.DbSystemInstancesDetailGetArgs>? _instancesDetails;

        /// <summary>
        /// Details of DbInstances to be created. Optional parameter. If specified, its size must match instanceCount.
        /// </summary>
        public InputList<Inputs.DbSystemInstancesDetailGetArgs> InstancesDetails
        {
            get => _instancesDetails ?? (_instancesDetails = new InputList<Inputs.DbSystemInstancesDetailGetArgs>());
            set => _instancesDetails = value;
        }

        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        [Input("lifecycleDetails")]
        public Input<string>? LifecycleDetails { get; set; }

        /// <summary>
        /// (Updatable) Posgresql DB system management policy update details
        /// </summary>
        [Input("managementPolicy")]
        public Input<Inputs.DbSystemManagementPolicyGetArgs>? ManagementPolicy { get; set; }

        /// <summary>
        /// DbSystem network details.
        /// </summary>
        [Input("networkDetails")]
        public Input<Inputs.DbSystemNetworkDetailsGetArgs>? NetworkDetails { get; set; }

        /// <summary>
        /// Shape of DbInstance. This name should match from with one of the available shapes from /shapes API.
        /// </summary>
        [Input("shape")]
        public Input<string>? Shape { get; set; }

        /// <summary>
        /// New source is used to restore the DB system.
        /// </summary>
        [Input("source")]
        public Input<Inputs.DbSystemSourceGetArgs>? Source { get; set; }

        /// <summary>
        /// The current state of the DbSystem.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// (Updatable) Storage details of the DbSystem.
        /// </summary>
        [Input("storageDetails")]
        public Input<Inputs.DbSystemStorageDetailsGetArgs>? StorageDetails { get; set; }

        [Input("systemTags")]
        private InputMap<object>? _systemTags;

        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public InputMap<object> SystemTags
        {
            get => _systemTags ?? (_systemTags = new InputMap<object>());
            set => _systemTags = value;
        }

        /// <summary>
        /// Type of the DbSystem.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("systemType")]
        public Input<string>? SystemType { get; set; }

        /// <summary>
        /// The time the the DbSystem was created. An RFC3339 formatted datetime string
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The time the DbSystem was updated. An RFC3339 formatted datetime string
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        public DbSystemState()
        {
        }
        public static new DbSystemState Empty => new DbSystemState();
    }
}
