// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Psql
{
    public static class GetBackup
    {
        /// <summary>
        /// This data source provides details about a specific Backup resource in Oracle Cloud Infrastructure Psql service.
        /// 
        /// Gets a Backup by identifier
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testBackup = Oci.Psql.GetBackup.Invoke(new()
        ///     {
        ///         BackupId = oci_psql_backup.Test_backup.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetBackupResult> InvokeAsync(GetBackupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBackupResult>("oci:Psql/getBackup:getBackup", args ?? new GetBackupArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Backup resource in Oracle Cloud Infrastructure Psql service.
        /// 
        /// Gets a Backup by identifier
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testBackup = Oci.Psql.GetBackup.Invoke(new()
        ///     {
        ///         BackupId = oci_psql_backup.Test_backup.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetBackupResult> Invoke(GetBackupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBackupResult>("oci:Psql/getBackup:getBackup", args ?? new GetBackupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBackupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// unique Backup identifier
        /// </summary>
        [Input("backupId", required: true)]
        public string BackupId { get; set; } = null!;

        public GetBackupArgs()
        {
        }
        public static new GetBackupArgs Empty => new GetBackupArgs();
    }

    public sealed class GetBackupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// unique Backup identifier
        /// </summary>
        [Input("backupId", required: true)]
        public Input<string> BackupId { get; set; } = null!;

        public GetBackupInvokeArgs()
        {
        }
        public static new GetBackupInvokeArgs Empty => new GetBackupInvokeArgs();
    }


    [OutputType]
    public sealed class GetBackupResult
    {
        public readonly string BackupId;
        /// <summary>
        /// Backup size in GB.
        /// </summary>
        public readonly int BackupSize;
        /// <summary>
        /// Backup compartment identifier
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Information about the DbSystem associated to a backup.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBackupDbSystemDetailResult> DbSystemDetails;
        /// <summary>
        /// The source DbSystem OCID.
        /// </summary>
        public readonly string DbSystemId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// Backup description
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Backup display name
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// Unique identifier that is immutable on creation
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// lastAcceptedRequestToken from MP.
        /// </summary>
        public readonly string LastAcceptedRequestToken;
        /// <summary>
        /// lastCompletedRequestToken from MP.
        /// </summary>
        public readonly string LastCompletedRequestToken;
        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// Backup retention period in days.
        /// </summary>
        public readonly int RetentionPeriod;
        /// <summary>
        /// Specifies whether the backup was created manually, or via scheduled backup policy
        /// </summary>
        public readonly string SourceType;
        /// <summary>
        /// The current state of the Backup.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> SystemTags;
        /// <summary>
        /// The time the the Backup was created. An RFC3339 formatted datetime string
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time the Backup was updated. An RFC3339 formatted datetime string
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetBackupResult(
            string backupId,

            int backupSize,

            string compartmentId,

            ImmutableArray<Outputs.GetBackupDbSystemDetailResult> dbSystemDetails,

            string dbSystemId,

            ImmutableDictionary<string, object> definedTags,

            string description,

            string displayName,

            ImmutableDictionary<string, object> freeformTags,

            string id,

            string lastAcceptedRequestToken,

            string lastCompletedRequestToken,

            string lifecycleDetails,

            int retentionPeriod,

            string sourceType,

            string state,

            ImmutableDictionary<string, object> systemTags,

            string timeCreated,

            string timeUpdated)
        {
            BackupId = backupId;
            BackupSize = backupSize;
            CompartmentId = compartmentId;
            DbSystemDetails = dbSystemDetails;
            DbSystemId = dbSystemId;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            LastAcceptedRequestToken = lastAcceptedRequestToken;
            LastCompletedRequestToken = lastCompletedRequestToken;
            LifecycleDetails = lifecycleDetails;
            RetentionPeriod = retentionPeriod;
            SourceType = sourceType;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
