// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Psql
{
    public static class GetConfiguration
    {
        /// <summary>
        /// This data source provides details about a specific Configuration resource in Oracle Cloud Infrastructure Psql service.
        /// 
        /// Gets a configuration by identifier.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testConfiguration = Oci.Psql.GetConfiguration.Invoke(new()
        ///     {
        ///         ConfigurationId = oci_psql_configuration.Test_configuration.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetConfigurationResult> InvokeAsync(GetConfigurationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetConfigurationResult>("oci:Psql/getConfiguration:getConfiguration", args ?? new GetConfigurationArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Configuration resource in Oracle Cloud Infrastructure Psql service.
        /// 
        /// Gets a configuration by identifier.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testConfiguration = Oci.Psql.GetConfiguration.Invoke(new()
        ///     {
        ///         ConfigurationId = oci_psql_configuration.Test_configuration.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetConfigurationResult> Invoke(GetConfigurationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetConfigurationResult>("oci:Psql/getConfiguration:getConfiguration", args ?? new GetConfigurationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetConfigurationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique identifier for the configuration.
        /// </summary>
        [Input("configurationId", required: true)]
        public string ConfigurationId { get; set; } = null!;

        public GetConfigurationArgs()
        {
        }
        public static new GetConfigurationArgs Empty => new GetConfigurationArgs();
    }

    public sealed class GetConfigurationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique identifier for the configuration.
        /// </summary>
        [Input("configurationId", required: true)]
        public Input<string> ConfigurationId { get; set; } = null!;

        public GetConfigurationInvokeArgs()
        {
        }
        public static new GetConfigurationInvokeArgs Empty => new GetConfigurationInvokeArgs();
    }


    [OutputType]
    public sealed class GetConfigurationResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the configuration.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// List of configuration details.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetConfigurationConfigurationDetailResult> ConfigurationDetails;
        public readonly string ConfigurationId;
        public readonly ImmutableArray<Outputs.GetConfigurationDbConfigurationOverrideResult> DbConfigurationOverrides;
        /// <summary>
        /// Version of the PostgreSQL database.
        /// </summary>
        public readonly string DbVersion;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// A description for the configuration.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// A user-friendly display name for the configuration. Avoid entering confidential information.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// A unique identifier for the configuration. Immutable on creation.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Memory size in gigabytes with 1GB increment.
        /// </summary>
        public readonly int InstanceMemorySizeInGbs;
        /// <summary>
        /// CPU core count.
        /// </summary>
        public readonly int InstanceOcpuCount;
        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// The name of the shape for the configuration. Example: `VM.Standard.E4.Flex`
        /// </summary>
        public readonly string Shape;
        /// <summary>
        /// The current state of the configuration.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> SystemTags;
        /// <summary>
        /// The date and time that the configuration was created, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        public readonly string TimeCreated;

        [OutputConstructor]
        private GetConfigurationResult(
            string compartmentId,

            ImmutableArray<Outputs.GetConfigurationConfigurationDetailResult> configurationDetails,

            string configurationId,

            ImmutableArray<Outputs.GetConfigurationDbConfigurationOverrideResult> dbConfigurationOverrides,

            string dbVersion,

            ImmutableDictionary<string, object> definedTags,

            string description,

            string displayName,

            ImmutableDictionary<string, object> freeformTags,

            string id,

            int instanceMemorySizeInGbs,

            int instanceOcpuCount,

            string lifecycleDetails,

            string shape,

            string state,

            ImmutableDictionary<string, object> systemTags,

            string timeCreated)
        {
            CompartmentId = compartmentId;
            ConfigurationDetails = configurationDetails;
            ConfigurationId = configurationId;
            DbConfigurationOverrides = dbConfigurationOverrides;
            DbVersion = dbVersion;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            InstanceMemorySizeInGbs = instanceMemorySizeInGbs;
            InstanceOcpuCount = instanceOcpuCount;
            LifecycleDetails = lifecycleDetails;
            Shape = shape;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
        }
    }
}
