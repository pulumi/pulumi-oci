// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Psql
{
    public static class GetDbSystems
    {
        /// <summary>
        /// This data source provides the list of Db Systems in Oracle Cloud Infrastructure Psql service.
        /// 
        /// Returns a list of database systems.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDbSystems = Oci.Psql.GetDbSystems.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = dbSystemDisplayName,
        ///         Id = dbSystemId,
        ///         State = dbSystemState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetDbSystemsResult> InvokeAsync(GetDbSystemsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDbSystemsResult>("oci:Psql/getDbSystems:getDbSystems", args ?? new GetDbSystemsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Db Systems in Oracle Cloud Infrastructure Psql service.
        /// 
        /// Returns a list of database systems.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDbSystems = Oci.Psql.GetDbSystems.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = dbSystemDisplayName,
        ///         Id = dbSystemId,
        ///         State = dbSystemState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDbSystemsResult> Invoke(GetDbSystemsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDbSystemsResult>("oci:Psql/getDbSystems:getDbSystems", args ?? new GetDbSystemsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Db Systems in Oracle Cloud Infrastructure Psql service.
        /// 
        /// Returns a list of database systems.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDbSystems = Oci.Psql.GetDbSystems.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = dbSystemDisplayName,
        ///         Id = dbSystemId,
        ///         State = dbSystemState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDbSystemsResult> Invoke(GetDbSystemsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDbSystemsResult>("oci:Psql/getDbSystems:getDbSystems", args ?? new GetDbSystemsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDbSystemsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetDbSystemsFilterArgs>? _filters;
        public List<Inputs.GetDbSystemsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetDbSystemsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A unique identifier for the database system.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// A filter to return only resources if their `lifecycleState` matches the given `lifecycleState`.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetDbSystemsArgs()
        {
        }
        public static new GetDbSystemsArgs Empty => new GetDbSystemsArgs();
    }

    public sealed class GetDbSystemsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetDbSystemsFilterInputArgs>? _filters;
        public InputList<Inputs.GetDbSystemsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetDbSystemsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A unique identifier for the database system.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// A filter to return only resources if their `lifecycleState` matches the given `lifecycleState`.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetDbSystemsInvokeArgs()
        {
        }
        public static new GetDbSystemsInvokeArgs Empty => new GetDbSystemsInvokeArgs();
    }


    [OutputType]
    public sealed class GetDbSystemsResult
    {
        /// <summary>
        /// target compartment to place a new backup
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// The list of db_system_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDbSystemsDbSystemCollectionResult> DbSystemCollections;
        /// <summary>
        /// A user-friendly display name for the database instance node. Avoid entering confidential information.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetDbSystemsFilterResult> Filters;
        /// <summary>
        /// A unique identifier for the database instance node. Immutable on creation.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The current state of the database system.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetDbSystemsResult(
            string? compartmentId,

            ImmutableArray<Outputs.GetDbSystemsDbSystemCollectionResult> dbSystemCollections,

            string? displayName,

            ImmutableArray<Outputs.GetDbSystemsFilterResult> filters,

            string? id,

            string? state)
        {
            CompartmentId = compartmentId;
            DbSystemCollections = dbSystemCollections;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            State = state;
        }
    }
}
