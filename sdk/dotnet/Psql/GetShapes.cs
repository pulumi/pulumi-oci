// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Psql
{
    public static class GetShapes
    {
        /// <summary>
        /// This data source provides the list of Shapes in Oracle Cloud Infrastructure Psql service.
        /// 
        /// Returns the list of shapes allowed in the region.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testShapes = Oci.Psql.GetShapes.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         Id = @var.Shape_id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetShapesResult> InvokeAsync(GetShapesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetShapesResult>("oci:Psql/getShapes:getShapes", args ?? new GetShapesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Shapes in Oracle Cloud Infrastructure Psql service.
        /// 
        /// Returns the list of shapes allowed in the region.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testShapes = Oci.Psql.GetShapes.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         Id = @var.Shape_id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetShapesResult> Invoke(GetShapesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetShapesResult>("oci:Psql/getShapes:getShapes", args ?? new GetShapesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetShapesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        [Input("filters")]
        private List<Inputs.GetShapesFilterArgs>? _filters;
        public List<Inputs.GetShapesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetShapesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return the feature by the shape name.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        public GetShapesArgs()
        {
        }
        public static new GetShapesArgs Empty => new GetShapesArgs();
    }

    public sealed class GetShapesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetShapesFilterInputArgs>? _filters;
        public InputList<Inputs.GetShapesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetShapesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return the feature by the shape name.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        public GetShapesInvokeArgs()
        {
        }
        public static new GetShapesInvokeArgs Empty => new GetShapesInvokeArgs();
    }


    [OutputType]
    public sealed class GetShapesResult
    {
        public readonly string? CompartmentId;
        public readonly ImmutableArray<Outputs.GetShapesFilterResult> Filters;
        /// <summary>
        /// A unique identifier for the shape.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The list of shape_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetShapesShapeCollectionResult> ShapeCollections;

        [OutputConstructor]
        private GetShapesResult(
            string? compartmentId,

            ImmutableArray<Outputs.GetShapesFilterResult> filters,

            string? id,

            ImmutableArray<Outputs.GetShapesShapeCollectionResult> shapeCollections)
        {
            CompartmentId = compartmentId;
            Filters = filters;
            Id = id;
            ShapeCollections = shapeCollections;
        }
    }
}
