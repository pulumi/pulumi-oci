// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Psql.Outputs
{

    [OutputType]
    public sealed class GetBackupsBackupCollectionItemResult
    {
        /// <summary>
        /// Backup size in GB.
        /// </summary>
        public readonly int BackupSize;
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Information about the DbSystem associated to a backup.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBackupsBackupCollectionItemDbSystemDetailResult> DbSystemDetails;
        /// <summary>
        /// The source DbSystem OCID.
        /// </summary>
        public readonly string DbSystemId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// Backup description
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// unique DbSystem identifier
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// lastAcceptedRequestToken from MP.
        /// </summary>
        public readonly string LastAcceptedRequestToken;
        /// <summary>
        /// lastCompletedRequestToken from MP.
        /// </summary>
        public readonly string LastCompletedRequestToken;
        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// Backup retention period in days.
        /// </summary>
        public readonly int RetentionPeriod;
        /// <summary>
        /// Specifies whether the backup was created manually, or via scheduled backup policy
        /// </summary>
        public readonly string SourceType;
        /// <summary>
        /// A filter to return only resources their lifecycleState matches the given lifecycleState.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> SystemTags;
        /// <summary>
        /// The time the the Backup was created. An RFC3339 formatted datetime string
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time the Backup was updated. An RFC3339 formatted datetime string
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetBackupsBackupCollectionItemResult(
            int backupSize,

            string compartmentId,

            ImmutableArray<Outputs.GetBackupsBackupCollectionItemDbSystemDetailResult> dbSystemDetails,

            string dbSystemId,

            ImmutableDictionary<string, object> definedTags,

            string description,

            string displayName,

            ImmutableDictionary<string, object> freeformTags,

            string id,

            string lastAcceptedRequestToken,

            string lastCompletedRequestToken,

            string lifecycleDetails,

            int retentionPeriod,

            string sourceType,

            string state,

            ImmutableDictionary<string, object> systemTags,

            string timeCreated,

            string timeUpdated)
        {
            BackupSize = backupSize;
            CompartmentId = compartmentId;
            DbSystemDetails = dbSystemDetails;
            DbSystemId = dbSystemId;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            LastAcceptedRequestToken = lastAcceptedRequestToken;
            LastCompletedRequestToken = lastCompletedRequestToken;
            LifecycleDetails = lifecycleDetails;
            RetentionPeriod = retentionPeriod;
            SourceType = sourceType;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
