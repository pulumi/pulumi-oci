// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Psql.Outputs
{

    [OutputType]
    public sealed class GetDefaultConfigurationsDefaultConfigurationCollectionItemResult
    {
        /// <summary>
        /// List of default configuration values for databases.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDefaultConfigurationsDefaultConfigurationCollectionItemConfigurationDetailResult> ConfigurationDetails;
        /// <summary>
        /// Version of the PostgreSQL database, such as 14.9.
        /// </summary>
        public readonly string DbVersion;
        /// <summary>
        /// A description for the configuration.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// A unique identifier for the configuration.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Memory size in gigabytes with 1GB increment.
        /// </summary>
        public readonly int InstanceMemorySizeInGbs;
        /// <summary>
        /// CPU core count.
        /// </summary>
        public readonly int InstanceOcpuCount;
        /// <summary>
        /// True if the configuration supports flexible shapes, false otherwise.
        /// </summary>
        public readonly bool IsFlexible;
        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// The name of the shape for the configuration. Example: `VM.Standard.E4.Flex`
        /// </summary>
        public readonly string Shape;
        /// <summary>
        /// A filter to return only resources if their `lifecycleState` matches the given `lifecycleState`.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The date and time that the configuration was created, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        public readonly string TimeCreated;

        [OutputConstructor]
        private GetDefaultConfigurationsDefaultConfigurationCollectionItemResult(
            ImmutableArray<Outputs.GetDefaultConfigurationsDefaultConfigurationCollectionItemConfigurationDetailResult> configurationDetails,

            string dbVersion,

            string description,

            string displayName,

            string id,

            int instanceMemorySizeInGbs,

            int instanceOcpuCount,

            bool isFlexible,

            string lifecycleDetails,

            string shape,

            string state,

            string timeCreated)
        {
            ConfigurationDetails = configurationDetails;
            DbVersion = dbVersion;
            Description = description;
            DisplayName = displayName;
            Id = id;
            InstanceMemorySizeInGbs = instanceMemorySizeInGbs;
            InstanceOcpuCount = instanceOcpuCount;
            IsFlexible = isFlexible;
            LifecycleDetails = lifecycleDetails;
            Shape = shape;
            State = state;
            TimeCreated = timeCreated;
        }
    }
}
