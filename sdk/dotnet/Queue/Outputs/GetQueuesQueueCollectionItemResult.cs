// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Queue.Outputs
{

    [OutputType]
    public sealed class GetQueuesQueueCollectionItemResult
    {
        /// <summary>
        /// The percentage of allocated queue resources that can be consumed by a single channel. For example, if a queue has a storage limit of 2Gb, and a single channel consumption limit is 0.1 (10%), that means data size of a single channel  can't exceed 200Mb. Consumption limit of 100% (default) means that a single channel can consume up-to all allocated queue's resources.
        /// </summary>
        public readonly int? ChannelConsumptionLimit;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the custom encryption key to be used to encrypt messages content.
        /// </summary>
        public readonly string? CustomEncryptionKeyId;
        /// <summary>
        /// The number of times a message can be delivered to a consumer before being moved to the dead letter queue. A value of 0 indicates that the DLQ is not used.
        /// </summary>
        public readonly int? DeadLetterQueueDeliveryCount;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? DefinedTags;
        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? FreeformTags;
        /// <summary>
        /// The unique queue identifier.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Any additional details about the current state of the queue.
        /// </summary>
        public readonly string? LifecycleDetails;
        /// <summary>
        /// The endpoint to use to consume or publish messages in the queue.
        /// </summary>
        public readonly string? MessagesEndpoint;
        public readonly bool? PurgeQueue;
        public readonly string? PurgeType;
        /// <summary>
        /// The retention period of the messages in the queue, in seconds.
        /// </summary>
        public readonly int? RetentionInSeconds;
        /// <summary>
        /// A filter to return only resources their lifecycleState matches the given lifecycleState.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? SystemTags;
        /// <summary>
        /// The time that the queue was created, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2018-04-20T00:00:07.405Z`
        /// </summary>
        public readonly string? TimeCreated;
        /// <summary>
        /// The time that the queue was updated, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2018-04-20T00:00:07.405Z`
        /// </summary>
        public readonly string? TimeUpdated;
        /// <summary>
        /// The default polling timeout of the messages in the queue, in seconds.
        /// </summary>
        public readonly int? TimeoutInSeconds;
        /// <summary>
        /// The default visibility timeout of the messages consumed from the queue, in seconds.
        /// </summary>
        public readonly int? VisibilityInSeconds;

        [OutputConstructor]
        private GetQueuesQueueCollectionItemResult(
            int? channelConsumptionLimit,

            string? compartmentId,

            string? customEncryptionKeyId,

            int? deadLetterQueueDeliveryCount,

            ImmutableDictionary<string, object>? definedTags,

            string? displayName,

            ImmutableDictionary<string, object>? freeformTags,

            string? id,

            string? lifecycleDetails,

            string? messagesEndpoint,

            bool? purgeQueue,

            string? purgeType,

            int? retentionInSeconds,

            string? state,

            ImmutableDictionary<string, object>? systemTags,

            string? timeCreated,

            string? timeUpdated,

            int? timeoutInSeconds,

            int? visibilityInSeconds)
        {
            ChannelConsumptionLimit = channelConsumptionLimit;
            CompartmentId = compartmentId;
            CustomEncryptionKeyId = customEncryptionKeyId;
            DeadLetterQueueDeliveryCount = deadLetterQueueDeliveryCount;
            DefinedTags = definedTags;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            LifecycleDetails = lifecycleDetails;
            MessagesEndpoint = messagesEndpoint;
            PurgeQueue = purgeQueue;
            PurgeType = purgeType;
            RetentionInSeconds = retentionInSeconds;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            TimeoutInSeconds = timeoutInSeconds;
            VisibilityInSeconds = visibilityInSeconds;
        }
    }
}
