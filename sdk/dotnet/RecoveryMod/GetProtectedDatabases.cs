// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.RecoveryMod
{
    public static class GetProtectedDatabases
    {
        /// <summary>
        /// This data source provides the list of Protected Databases in Oracle Cloud Infrastructure Recovery service.
        /// 
        /// Lists the protected databases based on the specified parameters.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testProtectedDatabases = Oci.RecoveryMod.GetProtectedDatabases.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         DisplayName = @var.Protected_database_display_name,
        ///         Id = @var.Protected_database_id,
        ///         ProtectionPolicyId = oci_recovery_protection_policy.Test_protection_policy.Id,
        ///         RecoveryServiceSubnetId = oci_recovery_recovery_service_subnet.Test_recovery_service_subnet.Id,
        ///         State = @var.Protected_database_state,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetProtectedDatabasesResult> InvokeAsync(GetProtectedDatabasesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetProtectedDatabasesResult>("oci:RecoveryMod/getProtectedDatabases:getProtectedDatabases", args ?? new GetProtectedDatabasesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Protected Databases in Oracle Cloud Infrastructure Recovery service.
        /// 
        /// Lists the protected databases based on the specified parameters.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testProtectedDatabases = Oci.RecoveryMod.GetProtectedDatabases.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         DisplayName = @var.Protected_database_display_name,
        ///         Id = @var.Protected_database_id,
        ///         ProtectionPolicyId = oci_recovery_protection_policy.Test_protection_policy.Id,
        ///         RecoveryServiceSubnetId = oci_recovery_recovery_service_subnet.Test_recovery_service_subnet.Id,
        ///         State = @var.Protected_database_state,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetProtectedDatabasesResult> Invoke(GetProtectedDatabasesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetProtectedDatabasesResult>("oci:RecoveryMod/getProtectedDatabases:getProtectedDatabases", args ?? new GetProtectedDatabasesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetProtectedDatabasesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The compartment OCID.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire 'displayname' given.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetProtectedDatabasesFilterArgs>? _filters;
        public List<Inputs.GetProtectedDatabasesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetProtectedDatabasesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The protected database OCID.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// The protection policy OCID.
        /// </summary>
        [Input("protectionPolicyId")]
        public string? ProtectionPolicyId { get; set; }

        /// <summary>
        /// The recovery service subnet OCID.
        /// </summary>
        [Input("recoveryServiceSubnetId")]
        public string? RecoveryServiceSubnetId { get; set; }

        /// <summary>
        /// A filter to return only the resources that match the specified lifecycle state.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetProtectedDatabasesArgs()
        {
        }
        public static new GetProtectedDatabasesArgs Empty => new GetProtectedDatabasesArgs();
    }

    public sealed class GetProtectedDatabasesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The compartment OCID.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire 'displayname' given.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetProtectedDatabasesFilterInputArgs>? _filters;
        public InputList<Inputs.GetProtectedDatabasesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetProtectedDatabasesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The protected database OCID.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The protection policy OCID.
        /// </summary>
        [Input("protectionPolicyId")]
        public Input<string>? ProtectionPolicyId { get; set; }

        /// <summary>
        /// The recovery service subnet OCID.
        /// </summary>
        [Input("recoveryServiceSubnetId")]
        public Input<string>? RecoveryServiceSubnetId { get; set; }

        /// <summary>
        /// A filter to return only the resources that match the specified lifecycle state.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetProtectedDatabasesInvokeArgs()
        {
        }
        public static new GetProtectedDatabasesInvokeArgs Empty => new GetProtectedDatabasesInvokeArgs();
    }


    [OutputType]
    public sealed class GetProtectedDatabasesResult
    {
        /// <summary>
        /// The OCID of the compartment that contains the protected database.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The protected database name. You can change the displayName. Avoid entering confidential information.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetProtectedDatabasesFilterResult> Filters;
        /// <summary>
        /// The OCID of the protected database.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The list of protected_database_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProtectedDatabasesProtectedDatabaseCollectionResult> ProtectedDatabaseCollections;
        /// <summary>
        /// The OCID of the protection policy associated with the protected database.
        /// </summary>
        public readonly string? ProtectionPolicyId;
        /// <summary>
        /// Recovery Service Subnet Identifier.
        /// </summary>
        public readonly string? RecoveryServiceSubnetId;
        /// <summary>
        /// The current state of the Protected Database.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetProtectedDatabasesResult(
            string compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetProtectedDatabasesFilterResult> filters,

            string? id,

            ImmutableArray<Outputs.GetProtectedDatabasesProtectedDatabaseCollectionResult> protectedDatabaseCollections,

            string? protectionPolicyId,

            string? recoveryServiceSubnetId,

            string? state)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            ProtectedDatabaseCollections = protectedDatabaseCollections;
            ProtectionPolicyId = protectionPolicyId;
            RecoveryServiceSubnetId = recoveryServiceSubnetId;
            State = state;
        }
    }
}
