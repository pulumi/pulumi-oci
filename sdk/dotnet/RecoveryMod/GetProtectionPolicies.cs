// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.RecoveryMod
{
    public static class GetProtectionPolicies
    {
        /// <summary>
        /// This data source provides the list of Protection Policies in Oracle Cloud Infrastructure Recovery service.
        /// 
        /// Gets a list of protection policies based on the specified parameters.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testProtectionPolicies = Oci.RecoveryMod.GetProtectionPolicies.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = protectionPolicyDisplayName,
        ///         Owner = protectionPolicyOwner,
        ///         ProtectionPolicyId = testProtectionPolicy.Id,
        ///         State = protectionPolicyState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetProtectionPoliciesResult> InvokeAsync(GetProtectionPoliciesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetProtectionPoliciesResult>("oci:RecoveryMod/getProtectionPolicies:getProtectionPolicies", args ?? new GetProtectionPoliciesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Protection Policies in Oracle Cloud Infrastructure Recovery service.
        /// 
        /// Gets a list of protection policies based on the specified parameters.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testProtectionPolicies = Oci.RecoveryMod.GetProtectionPolicies.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = protectionPolicyDisplayName,
        ///         Owner = protectionPolicyOwner,
        ///         ProtectionPolicyId = testProtectionPolicy.Id,
        ///         State = protectionPolicyState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetProtectionPoliciesResult> Invoke(GetProtectionPoliciesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetProtectionPoliciesResult>("oci:RecoveryMod/getProtectionPolicies:getProtectionPolicies", args ?? new GetProtectionPoliciesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Protection Policies in Oracle Cloud Infrastructure Recovery service.
        /// 
        /// Gets a list of protection policies based on the specified parameters.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testProtectionPolicies = Oci.RecoveryMod.GetProtectionPolicies.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = protectionPolicyDisplayName,
        ///         Owner = protectionPolicyOwner,
        ///         ProtectionPolicyId = testProtectionPolicy.Id,
        ///         State = protectionPolicyState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetProtectionPoliciesResult> Invoke(GetProtectionPoliciesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetProtectionPoliciesResult>("oci:RecoveryMod/getProtectionPolicies:getProtectionPolicies", args ?? new GetProtectionPoliciesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetProtectionPoliciesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The compartment OCID.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire 'displayname' given.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetProtectionPoliciesFilterArgs>? _filters;
        public List<Inputs.GetProtectionPoliciesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetProtectionPoliciesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only the policies that match the owner as 'Customer' or 'Oracle'.
        /// </summary>
        [Input("owner")]
        public string? Owner { get; set; }

        /// <summary>
        /// The protection policy OCID.
        /// </summary>
        [Input("protectionPolicyId")]
        public string? ProtectionPolicyId { get; set; }

        /// <summary>
        /// A filter to return only resources their lifecycleState matches the given lifecycleState.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetProtectionPoliciesArgs()
        {
        }
        public static new GetProtectionPoliciesArgs Empty => new GetProtectionPoliciesArgs();
    }

    public sealed class GetProtectionPoliciesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The compartment OCID.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire 'displayname' given.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetProtectionPoliciesFilterInputArgs>? _filters;
        public InputList<Inputs.GetProtectionPoliciesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetProtectionPoliciesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only the policies that match the owner as 'Customer' or 'Oracle'.
        /// </summary>
        [Input("owner")]
        public Input<string>? Owner { get; set; }

        /// <summary>
        /// The protection policy OCID.
        /// </summary>
        [Input("protectionPolicyId")]
        public Input<string>? ProtectionPolicyId { get; set; }

        /// <summary>
        /// A filter to return only resources their lifecycleState matches the given lifecycleState.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetProtectionPoliciesInvokeArgs()
        {
        }
        public static new GetProtectionPoliciesInvokeArgs Empty => new GetProtectionPoliciesInvokeArgs();
    }


    [OutputType]
    public sealed class GetProtectionPoliciesResult
    {
        /// <summary>
        /// The OCID of the compartment that contains the protection policy.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// A user provided name for the protection policy.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetProtectionPoliciesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? Owner;
        /// <summary>
        /// The list of protection_policy_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProtectionPoliciesProtectionPolicyCollectionResult> ProtectionPolicyCollections;
        public readonly string? ProtectionPolicyId;
        /// <summary>
        /// The current state of the protection policy.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetProtectionPoliciesResult(
            string compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetProtectionPoliciesFilterResult> filters,

            string id,

            string? owner,

            ImmutableArray<Outputs.GetProtectionPoliciesProtectionPolicyCollectionResult> protectionPolicyCollections,

            string? protectionPolicyId,

            string? state)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            Owner = owner;
            ProtectionPolicyCollections = protectionPolicyCollections;
            ProtectionPolicyId = protectionPolicyId;
            State = state;
        }
    }
}
