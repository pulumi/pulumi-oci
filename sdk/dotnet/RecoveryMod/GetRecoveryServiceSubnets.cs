// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.RecoveryMod
{
    public static class GetRecoveryServiceSubnets
    {
        /// <summary>
        /// This data source provides the list of Recovery Service Subnets in Oracle Cloud Infrastructure Recovery service.
        /// 
        /// Returns a list of Recovery Service Subnets.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testRecoveryServiceSubnets = Oci.RecoveryMod.GetRecoveryServiceSubnets.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = recoveryServiceSubnetDisplayName,
        ///         Id = recoveryServiceSubnetId,
        ///         State = recoveryServiceSubnetState,
        ///         VcnId = testVcn.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetRecoveryServiceSubnetsResult> InvokeAsync(GetRecoveryServiceSubnetsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRecoveryServiceSubnetsResult>("oci:RecoveryMod/getRecoveryServiceSubnets:getRecoveryServiceSubnets", args ?? new GetRecoveryServiceSubnetsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Recovery Service Subnets in Oracle Cloud Infrastructure Recovery service.
        /// 
        /// Returns a list of Recovery Service Subnets.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testRecoveryServiceSubnets = Oci.RecoveryMod.GetRecoveryServiceSubnets.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = recoveryServiceSubnetDisplayName,
        ///         Id = recoveryServiceSubnetId,
        ///         State = recoveryServiceSubnetState,
        ///         VcnId = testVcn.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetRecoveryServiceSubnetsResult> Invoke(GetRecoveryServiceSubnetsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRecoveryServiceSubnetsResult>("oci:RecoveryMod/getRecoveryServiceSubnets:getRecoveryServiceSubnets", args ?? new GetRecoveryServiceSubnetsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRecoveryServiceSubnetsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The compartment OCID.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire 'displayname' given.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetRecoveryServiceSubnetsFilterArgs>? _filters;
        public List<Inputs.GetRecoveryServiceSubnetsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetRecoveryServiceSubnetsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The recovery service subnet OCID.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// A filter to return only the resources that match the specified lifecycle state.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        /// <summary>
        /// The OCID of the virtual cloud network (VCN) associated with the recovery service subnet.
        /// </summary>
        [Input("vcnId")]
        public string? VcnId { get; set; }

        public GetRecoveryServiceSubnetsArgs()
        {
        }
        public static new GetRecoveryServiceSubnetsArgs Empty => new GetRecoveryServiceSubnetsArgs();
    }

    public sealed class GetRecoveryServiceSubnetsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The compartment OCID.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire 'displayname' given.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetRecoveryServiceSubnetsFilterInputArgs>? _filters;
        public InputList<Inputs.GetRecoveryServiceSubnetsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetRecoveryServiceSubnetsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The recovery service subnet OCID.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// A filter to return only the resources that match the specified lifecycle state.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The OCID of the virtual cloud network (VCN) associated with the recovery service subnet.
        /// </summary>
        [Input("vcnId")]
        public Input<string>? VcnId { get; set; }

        public GetRecoveryServiceSubnetsInvokeArgs()
        {
        }
        public static new GetRecoveryServiceSubnetsInvokeArgs Empty => new GetRecoveryServiceSubnetsInvokeArgs();
    }


    [OutputType]
    public sealed class GetRecoveryServiceSubnetsResult
    {
        /// <summary>
        /// The compartment OCID.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// A user-provided name for the recovery service subnet.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetRecoveryServiceSubnetsFilterResult> Filters;
        /// <summary>
        /// The recovery service subnet OCID.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The list of recovery_service_subnet_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRecoveryServiceSubnetsRecoveryServiceSubnetCollectionResult> RecoveryServiceSubnetCollections;
        /// <summary>
        /// The current state of the recovery service subnet.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// VCN Identifier.
        /// </summary>
        public readonly string? VcnId;

        [OutputConstructor]
        private GetRecoveryServiceSubnetsResult(
            string compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetRecoveryServiceSubnetsFilterResult> filters,

            string? id,

            ImmutableArray<Outputs.GetRecoveryServiceSubnetsRecoveryServiceSubnetCollectionResult> recoveryServiceSubnetCollections,

            string? state,

            string? vcnId)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            RecoveryServiceSubnetCollections = recoveryServiceSubnetCollections;
            State = state;
            VcnId = vcnId;
        }
    }
}
