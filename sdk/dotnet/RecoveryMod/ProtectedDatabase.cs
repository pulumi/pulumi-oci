// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.RecoveryMod
{
    /// <summary>
    /// This resource provides the Protected Database resource in Oracle Cloud Infrastructure Recovery service.
    /// 
    /// Creates a new Protected Database.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testProtectedDatabase = new Oci.RecoveryMod.ProtectedDatabase("test_protected_database", new()
    ///     {
    ///         CompartmentId = compartmentId,
    ///         DbUniqueName = protectedDatabaseDbUniqueName,
    ///         DisplayName = protectedDatabaseDisplayName,
    ///         Password = protectedDatabasePassword,
    ///         ProtectionPolicyId = testProtectionPolicy.Id,
    ///         RecoveryServiceSubnets = new[]
    ///         {
    ///             new Oci.RecoveryMod.Inputs.ProtectedDatabaseRecoveryServiceSubnetArgs
    ///             {
    ///                 RecoveryServiceSubnetId = testRecoveryServiceSubnet.Id,
    ///             },
    ///         },
    ///         DatabaseId = testDatabase.Id,
    ///         DatabaseSize = protectedDatabaseDatabaseSize,
    ///         DefinedTags = 
    ///         {
    ///             { "foo-namespace.bar-key", "value" },
    ///         },
    ///         DeletionSchedule = "DELETE_AFTER_72_HOURS",
    ///         FreeformTags = 
    ///         {
    ///             { "bar-key", "value" },
    ///         },
    ///         IsRedoLogsShipped = protectedDatabaseIsRedoLogsShipped,
    ///         SubscriptionId = testSubscription.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ProtectedDatabases can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:RecoveryMod/protectedDatabase:ProtectedDatabase test_protected_database "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:RecoveryMod/protectedDatabase:ProtectedDatabase")]
    public partial class ProtectedDatabase : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) The OCID of the compartment that contains the protected database.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// The OCID of the protected database.
        /// </summary>
        [Output("databaseId")]
        public Output<string> DatabaseId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The size of the protected database. XS - Less than 5GB, S - 5GB to 50GB, M - 50GB to 500GB, L - 500GB to 1TB, XL - 1TB to 5TB, XXL - Greater than 5TB.
        /// </summary>
        [Output("databaseSize")]
        public Output<string> DatabaseSize { get; private set; } = null!;

        /// <summary>
        /// The dbUniqueName of the protected database in Recovery Service. You cannot change the unique name.
        /// </summary>
        [Output("dbUniqueName")]
        public Output<string> DbUniqueName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`. For more information, see [Resource Tags](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/resourcetags.htm)
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, string>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defines a preferred schedule to delete a protected database after you terminate the source database.
        /// * The default schedule is DELETE_AFTER_72_HOURS, so that the delete operation can occur 72 hours (3 days) after the source database is terminated.
        /// * The alternate schedule is DELETE_AFTER_RETENTION_PERIOD. Specify this option if you want to delete a protected database only after the policy-defined backup retention period expires.
        /// </summary>
        [Output("deletionSchedule")]
        public Output<string> DeletionSchedule { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The protected database name. You can change the displayName. Avoid entering confidential information.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, string>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// Indicates the protection status of the database.
        /// </summary>
        [Output("health")]
        public Output<string> Health { get; private set; } = null!;

        /// <summary>
        /// A message describing the current health of the protected database.
        /// </summary>
        [Output("healthDetails")]
        public Output<string> HealthDetails { get; private set; } = null!;

        /// <summary>
        /// Indicates whether the protected database is created by Recovery Service or created manually. Set to &lt;b&gt;TRUE&lt;/b&gt; for a service-defined protected database. When you enable the OCI-managed automatic backups option for a database and set Recovery Service as the backup destination, then Recovery Service creates the associated protected database resource. Set to &lt;b&gt;FALSE&lt;/b&gt; for a user-defined protected database.
        /// </summary>
        [Output("isReadOnlyResource")]
        public Output<bool> IsReadOnlyResource { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The value TRUE indicates that the protected database is configured to use Real-time data protection, and redo-data is sent from the protected database to Recovery Service. Real-time data protection substantially reduces the window of potential data loss that exists between successive archived redo log backups.
        /// </summary>
        [Output("isRedoLogsShipped")]
        public Output<bool> IsRedoLogsShipped { get; private set; } = null!;

        /// <summary>
        /// Detailed description about the current lifecycle state of the protected database. For example, it can be used to provide actionable information for a resource in a Failed state.
        /// </summary>
        [Output("lifecycleDetails")]
        public Output<string> LifecycleDetails { get; private set; } = null!;

        /// <summary>
        /// Backup performance and storage utilization metrics for the protected database.
        /// </summary>
        [Output("metrics")]
        public Output<ImmutableArray<Outputs.ProtectedDatabaseMetric>> Metrics { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Password credential which can be used to connect to Protected Database. It must contain at least 2 uppercase, 2 lowercase, 2 numeric and 2 special characters. The special characters must be underscore (_), number sign (https://docs.cloud.oracle.com/iaas/api/#) or hyphen (-). The password must not contain the username "admin", regardless of casing.
        /// </summary>
        [Output("password")]
        public Output<string> Password { get; private set; } = null!;

        /// <summary>
        /// An RFC3339 formatted datetime string that specifies the exact date and time for the retention lock to take effect and permanently lock the retention period defined in the policy.
        /// </summary>
        [Output("policyLockedDateTime")]
        public Output<string> PolicyLockedDateTime { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The OCID of the protection policy associated with the protected database.
        /// </summary>
        [Output("protectionPolicyId")]
        public Output<string> ProtectionPolicyId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) List of recovery service subnet resources associated with the protected database.
        /// </summary>
        [Output("recoveryServiceSubnets")]
        public Output<ImmutableArray<Outputs.ProtectedDatabaseRecoveryServiceSubnet>> RecoveryServiceSubnets { get; private set; } = null!;

        /// <summary>
        /// The current state of the Protected Database.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The OCID of the cloud service subscription to which you want to link the protected database.  For example, specify the Microsoft Azure subscription ID if you want to provision the protected database in Azure. 
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("subscriptionId")]
        public Output<string> SubscriptionId { get; private set; } = null!;

        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`. For more information, see [Resource Tags](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/resourcetags.htm)
        /// </summary>
        [Output("systemTags")]
        public Output<ImmutableDictionary<string, string>> SystemTags { get; private set; } = null!;

        /// <summary>
        /// An RFC3339 formatted datetime string that indicates the created time for a protected database. For example: '2020-05-22T21:10:29.600Z'
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// An RFC3339 formatted datetime string that indicates the last updated time for a protected database. For example: '2020-05-22T21:10:29.600Z'
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;

        /// <summary>
        /// The virtual private catalog (VPC) user credentials that authenticates the protected database to access Recovery Service.
        /// </summary>
        [Output("vpcUserName")]
        public Output<string> VpcUserName { get; private set; } = null!;


        /// <summary>
        /// Create a ProtectedDatabase resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ProtectedDatabase(string name, ProtectedDatabaseArgs args, CustomResourceOptions? options = null)
            : base("oci:RecoveryMod/protectedDatabase:ProtectedDatabase", name, args ?? new ProtectedDatabaseArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ProtectedDatabase(string name, Input<string> id, ProtectedDatabaseState? state = null, CustomResourceOptions? options = null)
            : base("oci:RecoveryMod/protectedDatabase:ProtectedDatabase", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "password",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ProtectedDatabase resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ProtectedDatabase Get(string name, Input<string> id, ProtectedDatabaseState? state = null, CustomResourceOptions? options = null)
        {
            return new ProtectedDatabase(name, id, state, options);
        }
    }

    public sealed class ProtectedDatabaseArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The OCID of the compartment that contains the protected database.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// The OCID of the protected database.
        /// </summary>
        [Input("databaseId")]
        public Input<string>? DatabaseId { get; set; }

        /// <summary>
        /// (Updatable) The size of the protected database. XS - Less than 5GB, S - 5GB to 50GB, M - 50GB to 500GB, L - 500GB to 1TB, XL - 1TB to 5TB, XXL - Greater than 5TB.
        /// </summary>
        [Input("databaseSize")]
        public Input<string>? DatabaseSize { get; set; }

        /// <summary>
        /// The dbUniqueName of the protected database in Recovery Service. You cannot change the unique name.
        /// </summary>
        [Input("dbUniqueName", required: true)]
        public Input<string> DbUniqueName { get; set; } = null!;

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`. For more information, see [Resource Tags](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/resourcetags.htm)
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) Defines a preferred schedule to delete a protected database after you terminate the source database.
        /// * The default schedule is DELETE_AFTER_72_HOURS, so that the delete operation can occur 72 hours (3 days) after the source database is terminated.
        /// * The alternate schedule is DELETE_AFTER_RETENTION_PERIOD. Specify this option if you want to delete a protected database only after the policy-defined backup retention period expires.
        /// </summary>
        [Input("deletionSchedule")]
        public Input<string>? DeletionSchedule { get; set; }

        /// <summary>
        /// (Updatable) The protected database name. You can change the displayName. Avoid entering confidential information.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) The value TRUE indicates that the protected database is configured to use Real-time data protection, and redo-data is sent from the protected database to Recovery Service. Real-time data protection substantially reduces the window of potential data loss that exists between successive archived redo log backups.
        /// </summary>
        [Input("isRedoLogsShipped")]
        public Input<bool>? IsRedoLogsShipped { get; set; }

        [Input("password", required: true)]
        private Input<string>? _password;

        /// <summary>
        /// (Updatable) Password credential which can be used to connect to Protected Database. It must contain at least 2 uppercase, 2 lowercase, 2 numeric and 2 special characters. The special characters must be underscore (_), number sign (https://docs.cloud.oracle.com/iaas/api/#) or hyphen (-). The password must not contain the username "admin", regardless of casing.
        /// </summary>
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// (Updatable) The OCID of the protection policy associated with the protected database.
        /// </summary>
        [Input("protectionPolicyId", required: true)]
        public Input<string> ProtectionPolicyId { get; set; } = null!;

        [Input("recoveryServiceSubnets", required: true)]
        private InputList<Inputs.ProtectedDatabaseRecoveryServiceSubnetArgs>? _recoveryServiceSubnets;

        /// <summary>
        /// (Updatable) List of recovery service subnet resources associated with the protected database.
        /// </summary>
        public InputList<Inputs.ProtectedDatabaseRecoveryServiceSubnetArgs> RecoveryServiceSubnets
        {
            get => _recoveryServiceSubnets ?? (_recoveryServiceSubnets = new InputList<Inputs.ProtectedDatabaseRecoveryServiceSubnetArgs>());
            set => _recoveryServiceSubnets = value;
        }

        /// <summary>
        /// (Updatable) The OCID of the cloud service subscription to which you want to link the protected database.  For example, specify the Microsoft Azure subscription ID if you want to provision the protected database in Azure. 
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("subscriptionId")]
        public Input<string>? SubscriptionId { get; set; }

        public ProtectedDatabaseArgs()
        {
        }
        public static new ProtectedDatabaseArgs Empty => new ProtectedDatabaseArgs();
    }

    public sealed class ProtectedDatabaseState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The OCID of the compartment that contains the protected database.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// The OCID of the protected database.
        /// </summary>
        [Input("databaseId")]
        public Input<string>? DatabaseId { get; set; }

        /// <summary>
        /// (Updatable) The size of the protected database. XS - Less than 5GB, S - 5GB to 50GB, M - 50GB to 500GB, L - 500GB to 1TB, XL - 1TB to 5TB, XXL - Greater than 5TB.
        /// </summary>
        [Input("databaseSize")]
        public Input<string>? DatabaseSize { get; set; }

        /// <summary>
        /// The dbUniqueName of the protected database in Recovery Service. You cannot change the unique name.
        /// </summary>
        [Input("dbUniqueName")]
        public Input<string>? DbUniqueName { get; set; }

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`. For more information, see [Resource Tags](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/resourcetags.htm)
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) Defines a preferred schedule to delete a protected database after you terminate the source database.
        /// * The default schedule is DELETE_AFTER_72_HOURS, so that the delete operation can occur 72 hours (3 days) after the source database is terminated.
        /// * The alternate schedule is DELETE_AFTER_RETENTION_PERIOD. Specify this option if you want to delete a protected database only after the policy-defined backup retention period expires.
        /// </summary>
        [Input("deletionSchedule")]
        public Input<string>? DeletionSchedule { get; set; }

        /// <summary>
        /// (Updatable) The protected database name. You can change the displayName. Avoid entering confidential information.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// Indicates the protection status of the database.
        /// </summary>
        [Input("health")]
        public Input<string>? Health { get; set; }

        /// <summary>
        /// A message describing the current health of the protected database.
        /// </summary>
        [Input("healthDetails")]
        public Input<string>? HealthDetails { get; set; }

        /// <summary>
        /// Indicates whether the protected database is created by Recovery Service or created manually. Set to &lt;b&gt;TRUE&lt;/b&gt; for a service-defined protected database. When you enable the OCI-managed automatic backups option for a database and set Recovery Service as the backup destination, then Recovery Service creates the associated protected database resource. Set to &lt;b&gt;FALSE&lt;/b&gt; for a user-defined protected database.
        /// </summary>
        [Input("isReadOnlyResource")]
        public Input<bool>? IsReadOnlyResource { get; set; }

        /// <summary>
        /// (Updatable) The value TRUE indicates that the protected database is configured to use Real-time data protection, and redo-data is sent from the protected database to Recovery Service. Real-time data protection substantially reduces the window of potential data loss that exists between successive archived redo log backups.
        /// </summary>
        [Input("isRedoLogsShipped")]
        public Input<bool>? IsRedoLogsShipped { get; set; }

        /// <summary>
        /// Detailed description about the current lifecycle state of the protected database. For example, it can be used to provide actionable information for a resource in a Failed state.
        /// </summary>
        [Input("lifecycleDetails")]
        public Input<string>? LifecycleDetails { get; set; }

        [Input("metrics")]
        private InputList<Inputs.ProtectedDatabaseMetricGetArgs>? _metrics;

        /// <summary>
        /// Backup performance and storage utilization metrics for the protected database.
        /// </summary>
        public InputList<Inputs.ProtectedDatabaseMetricGetArgs> Metrics
        {
            get => _metrics ?? (_metrics = new InputList<Inputs.ProtectedDatabaseMetricGetArgs>());
            set => _metrics = value;
        }

        [Input("password")]
        private Input<string>? _password;

        /// <summary>
        /// (Updatable) Password credential which can be used to connect to Protected Database. It must contain at least 2 uppercase, 2 lowercase, 2 numeric and 2 special characters. The special characters must be underscore (_), number sign (https://docs.cloud.oracle.com/iaas/api/#) or hyphen (-). The password must not contain the username "admin", regardless of casing.
        /// </summary>
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// An RFC3339 formatted datetime string that specifies the exact date and time for the retention lock to take effect and permanently lock the retention period defined in the policy.
        /// </summary>
        [Input("policyLockedDateTime")]
        public Input<string>? PolicyLockedDateTime { get; set; }

        /// <summary>
        /// (Updatable) The OCID of the protection policy associated with the protected database.
        /// </summary>
        [Input("protectionPolicyId")]
        public Input<string>? ProtectionPolicyId { get; set; }

        [Input("recoveryServiceSubnets")]
        private InputList<Inputs.ProtectedDatabaseRecoveryServiceSubnetGetArgs>? _recoveryServiceSubnets;

        /// <summary>
        /// (Updatable) List of recovery service subnet resources associated with the protected database.
        /// </summary>
        public InputList<Inputs.ProtectedDatabaseRecoveryServiceSubnetGetArgs> RecoveryServiceSubnets
        {
            get => _recoveryServiceSubnets ?? (_recoveryServiceSubnets = new InputList<Inputs.ProtectedDatabaseRecoveryServiceSubnetGetArgs>());
            set => _recoveryServiceSubnets = value;
        }

        /// <summary>
        /// The current state of the Protected Database.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// (Updatable) The OCID of the cloud service subscription to which you want to link the protected database.  For example, specify the Microsoft Azure subscription ID if you want to provision the protected database in Azure. 
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("subscriptionId")]
        public Input<string>? SubscriptionId { get; set; }

        [Input("systemTags")]
        private InputMap<string>? _systemTags;

        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`. For more information, see [Resource Tags](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/resourcetags.htm)
        /// </summary>
        public InputMap<string> SystemTags
        {
            get => _systemTags ?? (_systemTags = new InputMap<string>());
            set => _systemTags = value;
        }

        /// <summary>
        /// An RFC3339 formatted datetime string that indicates the created time for a protected database. For example: '2020-05-22T21:10:29.600Z'
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// An RFC3339 formatted datetime string that indicates the last updated time for a protected database. For example: '2020-05-22T21:10:29.600Z'
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        /// <summary>
        /// The virtual private catalog (VPC) user credentials that authenticates the protected database to access Recovery Service.
        /// </summary>
        [Input("vpcUserName")]
        public Input<string>? VpcUserName { get; set; }

        public ProtectedDatabaseState()
        {
        }
        public static new ProtectedDatabaseState Empty => new ProtectedDatabaseState();
    }
}
