// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Redis
{
    public static class GetOciCacheDefaultConfigSets
    {
        /// <summary>
        /// This data source provides the list of Oci Cache Default Config Sets in Oracle Cloud Infrastructure Redis service.
        /// 
        /// Lists the Oracle Cloud Infrastructure Cache Default Config Sets in the specified compartment.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOciCacheDefaultConfigSets = Oci.Redis.GetOciCacheDefaultConfigSets.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = ociCacheDefaultConfigSetDisplayName,
        ///         Id = ociCacheDefaultConfigSetId,
        ///         SoftwareVersion = ociCacheDefaultConfigSetSoftwareVersion,
        ///         State = ociCacheDefaultConfigSetState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetOciCacheDefaultConfigSetsResult> InvokeAsync(GetOciCacheDefaultConfigSetsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOciCacheDefaultConfigSetsResult>("oci:Redis/getOciCacheDefaultConfigSets:getOciCacheDefaultConfigSets", args ?? new GetOciCacheDefaultConfigSetsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Oci Cache Default Config Sets in Oracle Cloud Infrastructure Redis service.
        /// 
        /// Lists the Oracle Cloud Infrastructure Cache Default Config Sets in the specified compartment.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOciCacheDefaultConfigSets = Oci.Redis.GetOciCacheDefaultConfigSets.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = ociCacheDefaultConfigSetDisplayName,
        ///         Id = ociCacheDefaultConfigSetId,
        ///         SoftwareVersion = ociCacheDefaultConfigSetSoftwareVersion,
        ///         State = ociCacheDefaultConfigSetState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOciCacheDefaultConfigSetsResult> Invoke(GetOciCacheDefaultConfigSetsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOciCacheDefaultConfigSetsResult>("oci:Redis/getOciCacheDefaultConfigSets:getOciCacheDefaultConfigSets", args ?? new GetOciCacheDefaultConfigSetsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Oci Cache Default Config Sets in Oracle Cloud Infrastructure Redis service.
        /// 
        /// Lists the Oracle Cloud Infrastructure Cache Default Config Sets in the specified compartment.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOciCacheDefaultConfigSets = Oci.Redis.GetOciCacheDefaultConfigSets.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = ociCacheDefaultConfigSetDisplayName,
        ///         Id = ociCacheDefaultConfigSetId,
        ///         SoftwareVersion = ociCacheDefaultConfigSetSoftwareVersion,
        ///         State = ociCacheDefaultConfigSetState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOciCacheDefaultConfigSetsResult> Invoke(GetOciCacheDefaultConfigSetsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetOciCacheDefaultConfigSetsResult>("oci:Redis/getOciCacheDefaultConfigSets:getOciCacheDefaultConfigSets", args ?? new GetOciCacheDefaultConfigSetsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOciCacheDefaultConfigSetsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique identifier for the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetOciCacheDefaultConfigSetsFilterArgs>? _filters;
        public List<Inputs.GetOciCacheDefaultConfigSetsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetOciCacheDefaultConfigSetsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Unique Oracle Cloud Infrastructure Cache Default Config Set identifier.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// A filter to return the Oracle Cloud Infrastructure Cache Config Set resources, whose software version matches with the given software version.
        /// </summary>
        [Input("softwareVersion")]
        public string? SoftwareVersion { get; set; }

        /// <summary>
        /// A filter to return the Oracle Cloud Infrastructure Cache Default Config Set resources, whose lifecycle state matches with the given lifecycle state.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetOciCacheDefaultConfigSetsArgs()
        {
        }
        public static new GetOciCacheDefaultConfigSetsArgs Empty => new GetOciCacheDefaultConfigSetsArgs();
    }

    public sealed class GetOciCacheDefaultConfigSetsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique identifier for the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetOciCacheDefaultConfigSetsFilterInputArgs>? _filters;
        public InputList<Inputs.GetOciCacheDefaultConfigSetsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetOciCacheDefaultConfigSetsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Unique Oracle Cloud Infrastructure Cache Default Config Set identifier.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// A filter to return the Oracle Cloud Infrastructure Cache Config Set resources, whose software version matches with the given software version.
        /// </summary>
        [Input("softwareVersion")]
        public Input<string>? SoftwareVersion { get; set; }

        /// <summary>
        /// A filter to return the Oracle Cloud Infrastructure Cache Default Config Set resources, whose lifecycle state matches with the given lifecycle state.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetOciCacheDefaultConfigSetsInvokeArgs()
        {
        }
        public static new GetOciCacheDefaultConfigSetsInvokeArgs Empty => new GetOciCacheDefaultConfigSetsInvokeArgs();
    }


    [OutputType]
    public sealed class GetOciCacheDefaultConfigSetsResult
    {
        public readonly string CompartmentId;
        /// <summary>
        /// A user-friendly name of the Oracle Cloud Infrastructure Cache Default Config Set.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetOciCacheDefaultConfigSetsFilterResult> Filters;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the Oracle Cloud Infrastructure Cache Default Config Set.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The list of oci_cache_default_config_set_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetOciCacheDefaultConfigSetsOciCacheDefaultConfigSetCollectionResult> OciCacheDefaultConfigSetCollections;
        /// <summary>
        /// The engine version of the Oracle Cloud Infrastructure Cache Default Config Set.
        /// </summary>
        public readonly string? SoftwareVersion;
        /// <summary>
        /// The current state of the Oracle Cloud Infrastructure Cache Default Config Set.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetOciCacheDefaultConfigSetsResult(
            string compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetOciCacheDefaultConfigSetsFilterResult> filters,

            string? id,

            ImmutableArray<Outputs.GetOciCacheDefaultConfigSetsOciCacheDefaultConfigSetCollectionResult> ociCacheDefaultConfigSetCollections,

            string? softwareVersion,

            string? state)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            OciCacheDefaultConfigSetCollections = ociCacheDefaultConfigSetCollections;
            SoftwareVersion = softwareVersion;
            State = state;
        }
    }
}
