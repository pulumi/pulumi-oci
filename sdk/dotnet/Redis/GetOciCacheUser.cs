// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Redis
{
    public static class GetOciCacheUser
    {
        /// <summary>
        /// This data source provides details about a specific Oci Cache User resource in Oracle Cloud Infrastructure Redis service.
        /// 
        /// Get an existing Oracle Cloud Infrastructure Cache users based on the ID (OCID).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOciCacheUser = Oci.Redis.GetOciCacheUser.Invoke(new()
        ///     {
        ///         OciCacheUserId = testOciCacheUserOciRedisOciCacheUser.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetOciCacheUserResult> InvokeAsync(GetOciCacheUserArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOciCacheUserResult>("oci:Redis/getOciCacheUser:getOciCacheUser", args ?? new GetOciCacheUserArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Oci Cache User resource in Oracle Cloud Infrastructure Redis service.
        /// 
        /// Get an existing Oracle Cloud Infrastructure Cache users based on the ID (OCID).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOciCacheUser = Oci.Redis.GetOciCacheUser.Invoke(new()
        ///     {
        ///         OciCacheUserId = testOciCacheUserOciRedisOciCacheUser.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOciCacheUserResult> Invoke(GetOciCacheUserInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOciCacheUserResult>("oci:Redis/getOciCacheUser:getOciCacheUser", args ?? new GetOciCacheUserInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Oci Cache User resource in Oracle Cloud Infrastructure Redis service.
        /// 
        /// Get an existing Oracle Cloud Infrastructure Cache users based on the ID (OCID).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOciCacheUser = Oci.Redis.GetOciCacheUser.Invoke(new()
        ///     {
        ///         OciCacheUserId = testOciCacheUserOciRedisOciCacheUser.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOciCacheUserResult> Invoke(GetOciCacheUserInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetOciCacheUserResult>("oci:Redis/getOciCacheUser:getOciCacheUser", args ?? new GetOciCacheUserInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOciCacheUserArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A filter to return only resources, that match with the given Oracle Cloud Infrastructure cache user ID (OCID).
        /// </summary>
        [Input("ociCacheUserId", required: true)]
        public string OciCacheUserId { get; set; } = null!;

        public GetOciCacheUserArgs()
        {
        }
        public static new GetOciCacheUserArgs Empty => new GetOciCacheUserArgs();
    }

    public sealed class GetOciCacheUserInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A filter to return only resources, that match with the given Oracle Cloud Infrastructure cache user ID (OCID).
        /// </summary>
        [Input("ociCacheUserId", required: true)]
        public Input<string> OciCacheUserId { get; set; } = null!;

        public GetOciCacheUserInvokeArgs()
        {
        }
        public static new GetOciCacheUserInvokeArgs Empty => new GetOciCacheUserInvokeArgs();
    }


    [OutputType]
    public sealed class GetOciCacheUserResult
    {
        /// <summary>
        /// ACL string of Oracle Cloud Infrastructure cache user.
        /// </summary>
        public readonly string AclString;
        /// <summary>
        /// These are the Authentication details of an Oracle Cloud Infrastructure cache user.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetOciCacheUserAuthenticationModeResult> AuthenticationModes;
        /// <summary>
        /// Oracle Cloud Infrastructure Cache user compartment ID.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// Description of Oracle Cloud Infrastructure cache user.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// Oracle Cloud Infrastructure Cache user unique ID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Oracle Cloud Infrastructure Cache user name.
        /// </summary>
        public readonly string Name;
        public readonly string OciCacheUserId;
        /// <summary>
        /// Oracle Cloud Infrastructure Cache user lifecycle state.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Oracle Cloud Infrastructure Cache user status. ON enables and OFF disables the Oracle Cloud Infrastructure cache user to login to the cluster.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// The date and time, when the Oracle Cloud Infrastructure cache user was created.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The date and time, when the Oracle Cloud Infrastructure cache user was updated.
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetOciCacheUserResult(
            string aclString,

            ImmutableArray<Outputs.GetOciCacheUserAuthenticationModeResult> authenticationModes,

            string compartmentId,

            ImmutableDictionary<string, string> definedTags,

            string description,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            string name,

            string ociCacheUserId,

            string state,

            string status,

            ImmutableDictionary<string, string> systemTags,

            string timeCreated,

            string timeUpdated)
        {
            AclString = aclString;
            AuthenticationModes = authenticationModes;
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            Description = description;
            FreeformTags = freeformTags;
            Id = id;
            Name = name;
            OciCacheUserId = ociCacheUserId;
            State = state;
            Status = status;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
