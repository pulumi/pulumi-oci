// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Redis
{
    public static class GetOciCacheUsers
    {
        /// <summary>
        /// This data source provides the list of Oci Cache Users in Oracle Cloud Infrastructure Redis service.
        /// 
        /// Lists the Oracle Cloud Infrastructure Cache users based on the supplied parameters.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOciCacheUsers = Oci.Redis.GetOciCacheUsers.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         Name = ociCacheUserName,
        ///         State = ociCacheUserState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetOciCacheUsersResult> InvokeAsync(GetOciCacheUsersArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOciCacheUsersResult>("oci:Redis/getOciCacheUsers:getOciCacheUsers", args ?? new GetOciCacheUsersArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Oci Cache Users in Oracle Cloud Infrastructure Redis service.
        /// 
        /// Lists the Oracle Cloud Infrastructure Cache users based on the supplied parameters.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOciCacheUsers = Oci.Redis.GetOciCacheUsers.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         Name = ociCacheUserName,
        ///         State = ociCacheUserState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOciCacheUsersResult> Invoke(GetOciCacheUsersInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOciCacheUsersResult>("oci:Redis/getOciCacheUsers:getOciCacheUsers", args ?? new GetOciCacheUsersInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Oci Cache Users in Oracle Cloud Infrastructure Redis service.
        /// 
        /// Lists the Oracle Cloud Infrastructure Cache users based on the supplied parameters.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOciCacheUsers = Oci.Redis.GetOciCacheUsers.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         Name = ociCacheUserName,
        ///         State = ociCacheUserState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOciCacheUsersResult> Invoke(GetOciCacheUsersInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetOciCacheUsersResult>("oci:Redis/getOciCacheUsers:getOciCacheUsers", args ?? new GetOciCacheUsersInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOciCacheUsersArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        [Input("filters")]
        private List<Inputs.GetOciCacheUsersFilterArgs>? _filters;
        public List<Inputs.GetOciCacheUsersFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetOciCacheUsersFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return the resources that match with the given Oracle Cloud Infrastructure cache user name.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// A filter to return the resources, whose lifecycleState matches with the given lifecycleState.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetOciCacheUsersArgs()
        {
        }
        public static new GetOciCacheUsersArgs Empty => new GetOciCacheUsersArgs();
    }

    public sealed class GetOciCacheUsersInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetOciCacheUsersFilterInputArgs>? _filters;
        public InputList<Inputs.GetOciCacheUsersFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetOciCacheUsersFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return the resources that match with the given Oracle Cloud Infrastructure cache user name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A filter to return the resources, whose lifecycleState matches with the given lifecycleState.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetOciCacheUsersInvokeArgs()
        {
        }
        public static new GetOciCacheUsersInvokeArgs Empty => new GetOciCacheUsersInvokeArgs();
    }


    [OutputType]
    public sealed class GetOciCacheUsersResult
    {
        /// <summary>
        /// Oracle Cloud Infrastructure Cache user compartment ID.
        /// </summary>
        public readonly string? CompartmentId;
        public readonly ImmutableArray<Outputs.GetOciCacheUsersFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Oracle Cloud Infrastructure Cache user name.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The list of oci_cache_user_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetOciCacheUsersOciCacheUserCollectionResult> OciCacheUserCollections;
        /// <summary>
        /// Oracle Cloud Infrastructure Cache user lifecycle state.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetOciCacheUsersResult(
            string? compartmentId,

            ImmutableArray<Outputs.GetOciCacheUsersFilterResult> filters,

            string id,

            string? name,

            ImmutableArray<Outputs.GetOciCacheUsersOciCacheUserCollectionResult> ociCacheUserCollections,

            string? state)
        {
            CompartmentId = compartmentId;
            Filters = filters;
            Id = id;
            Name = name;
            OciCacheUserCollections = ociCacheUserCollections;
            State = state;
        }
    }
}
