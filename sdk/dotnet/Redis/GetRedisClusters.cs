// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Redis
{
    public static class GetRedisClusters
    {
        /// <summary>
        /// This data source provides the list of Redis Clusters in Oracle Cloud Infrastructure Redis service.
        /// 
        /// Lists the Redis clusters in the specified compartment. A Redis cluster is a memory-based storage solution. For more information, see [OCI Caching Service with Redis](https://docs.cloud.oracle.com/iaas/Content/redis/home.htm).
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testRedisClusters = Oci.Redis.GetRedisClusters.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         DisplayName = @var.Redis_cluster_display_name,
        ///         Id = @var.Redis_cluster_id,
        ///         State = @var.Redis_cluster_state,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetRedisClustersResult> InvokeAsync(GetRedisClustersArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRedisClustersResult>("oci:Redis/getRedisClusters:getRedisClusters", args ?? new GetRedisClustersArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Redis Clusters in Oracle Cloud Infrastructure Redis service.
        /// 
        /// Lists the Redis clusters in the specified compartment. A Redis cluster is a memory-based storage solution. For more information, see [OCI Caching Service with Redis](https://docs.cloud.oracle.com/iaas/Content/redis/home.htm).
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testRedisClusters = Oci.Redis.GetRedisClusters.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         DisplayName = @var.Redis_cluster_display_name,
        ///         Id = @var.Redis_cluster_id,
        ///         State = @var.Redis_cluster_state,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetRedisClustersResult> Invoke(GetRedisClustersInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRedisClustersResult>("oci:Redis/getRedisClusters:getRedisClusters", args ?? new GetRedisClustersInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRedisClustersArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetRedisClustersFilterArgs>? _filters;
        public List<Inputs.GetRedisClustersFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetRedisClustersFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the Redis cluster.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// A filter to return only resources their lifecycleState matches the given lifecycleState.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetRedisClustersArgs()
        {
        }
        public static new GetRedisClustersArgs Empty => new GetRedisClustersArgs();
    }

    public sealed class GetRedisClustersInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetRedisClustersFilterInputArgs>? _filters;
        public InputList<Inputs.GetRedisClustersFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetRedisClustersFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the Redis cluster.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// A filter to return only resources their lifecycleState matches the given lifecycleState.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetRedisClustersInvokeArgs()
        {
        }
        public static new GetRedisClustersInvokeArgs Empty => new GetRedisClustersInvokeArgs();
    }


    [OutputType]
    public sealed class GetRedisClustersResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the compartment that contains the Redis cluster.
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// A user-friendly name of a Redis cluster node.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetRedisClustersFilterResult> Filters;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the Redis cluster.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The list of redis_cluster_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRedisClustersRedisClusterCollectionResult> RedisClusterCollections;
        /// <summary>
        /// The current state of the Redis cluster.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetRedisClustersResult(
            string? compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetRedisClustersFilterResult> filters,

            string? id,

            ImmutableArray<Outputs.GetRedisClustersRedisClusterCollectionResult> redisClusterCollections,

            string? state)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            RedisClusterCollections = redisClusterCollections;
            State = state;
        }
    }
}
