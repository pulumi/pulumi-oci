// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Redis
{
    /// <summary>
    /// This resource provides the Oci Cache User Get Redis Cluster resource in Oracle Cloud Infrastructure Redis service.
    /// 
    /// Gets a list of associated redis cluster for an Oracle Cloud Infrastructure cache user.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testOciCacheUserGetRedisCluster = new Oci.Redis.OciCacheUserGetRedisCluster("test_oci_cache_user_get_redis_cluster", new()
    ///     {
    ///         OciCacheUserId = testOciCacheUser.Id,
    ///         CompartmentId = compartmentId,
    ///         DisplayName = ociCacheUserGetRedisClusterDisplayName,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Import is not supported for this resource.
    /// </summary>
    [OciResourceType("oci:Redis/ociCacheUserGetRedisCluster:OciCacheUserGetRedisCluster")]
    public partial class OciCacheUserGetRedisCluster : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        [Output("ociCacheClusters")]
        public Output<ImmutableArray<Outputs.OciCacheUserGetRedisClusterOciCacheCluster>> OciCacheClusters { get; private set; } = null!;

        /// <summary>
        /// A filter to return only resources, that match with the given Oracle Cloud Infrastructure cache user ID (OCID).
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("ociCacheUserId")]
        public Output<string> OciCacheUserId { get; private set; } = null!;


        /// <summary>
        /// Create a OciCacheUserGetRedisCluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OciCacheUserGetRedisCluster(string name, OciCacheUserGetRedisClusterArgs args, CustomResourceOptions? options = null)
            : base("oci:Redis/ociCacheUserGetRedisCluster:OciCacheUserGetRedisCluster", name, args ?? new OciCacheUserGetRedisClusterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OciCacheUserGetRedisCluster(string name, Input<string> id, OciCacheUserGetRedisClusterState? state = null, CustomResourceOptions? options = null)
            : base("oci:Redis/ociCacheUserGetRedisCluster:OciCacheUserGetRedisCluster", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OciCacheUserGetRedisCluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OciCacheUserGetRedisCluster Get(string name, Input<string> id, OciCacheUserGetRedisClusterState? state = null, CustomResourceOptions? options = null)
        {
            return new OciCacheUserGetRedisCluster(name, id, state, options);
        }
    }

    public sealed class OciCacheUserGetRedisClusterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// A filter to return only resources, that match with the given Oracle Cloud Infrastructure cache user ID (OCID).
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("ociCacheUserId", required: true)]
        public Input<string> OciCacheUserId { get; set; } = null!;

        public OciCacheUserGetRedisClusterArgs()
        {
        }
        public static new OciCacheUserGetRedisClusterArgs Empty => new OciCacheUserGetRedisClusterArgs();
    }

    public sealed class OciCacheUserGetRedisClusterState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("ociCacheClusters")]
        private InputList<Inputs.OciCacheUserGetRedisClusterOciCacheClusterGetArgs>? _ociCacheClusters;
        public InputList<Inputs.OciCacheUserGetRedisClusterOciCacheClusterGetArgs> OciCacheClusters
        {
            get => _ociCacheClusters ?? (_ociCacheClusters = new InputList<Inputs.OciCacheUserGetRedisClusterOciCacheClusterGetArgs>());
            set => _ociCacheClusters = value;
        }

        /// <summary>
        /// A filter to return only resources, that match with the given Oracle Cloud Infrastructure cache user ID (OCID).
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("ociCacheUserId")]
        public Input<string>? OciCacheUserId { get; set; }

        public OciCacheUserGetRedisClusterState()
        {
        }
        public static new OciCacheUserGetRedisClusterState Empty => new OciCacheUserGetRedisClusterState();
    }
}
