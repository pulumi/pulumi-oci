// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Redis
{
    /// <summary>
    /// This resource provides the Redis Cluster Create Identity Token resource in Oracle Cloud Infrastructure Redis service.
    /// 
    /// Generates an identity token to sign in with the specified redis user for the redis cluster
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testRedisClusterCreateIdentityToken = new Oci.Redis.RedisClusterCreateIdentityToken("test_redis_cluster_create_identity_token", new()
    ///     {
    ///         PublicKey = redisClusterCreateIdentityTokenPublicKey,
    ///         RedisClusterId = testRedisCluster.Id,
    ///         RedisUser = redisClusterCreateIdentityTokenRedisUser,
    ///         DefinedTags = redisClusterCreateIdentityTokenDefinedTags,
    ///         FreeformTags = redisClusterCreateIdentityTokenFreeformTags,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Import is not supported for this resource.
    /// </summary>
    [OciResourceType("oci:Redis/redisClusterCreateIdentityToken:RedisClusterCreateIdentityToken")]
    public partial class RedisClusterCreateIdentityToken : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, string>?> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, string>?> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// Generated Identity token
        /// </summary>
        [Output("identityToken")]
        public Output<string> IdentityToken { get; private set; } = null!;

        /// <summary>
        /// User public key pair
        /// </summary>
        [Output("publicKey")]
        public Output<string> PublicKey { get; private set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the cluster.
        /// </summary>
        [Output("redisClusterId")]
        public Output<string> RedisClusterId { get; private set; } = null!;

        /// <summary>
        /// Redis User generating identity token.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("redisUser")]
        public Output<string> RedisUser { get; private set; } = null!;


        /// <summary>
        /// Create a RedisClusterCreateIdentityToken resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RedisClusterCreateIdentityToken(string name, RedisClusterCreateIdentityTokenArgs args, CustomResourceOptions? options = null)
            : base("oci:Redis/redisClusterCreateIdentityToken:RedisClusterCreateIdentityToken", name, args ?? new RedisClusterCreateIdentityTokenArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RedisClusterCreateIdentityToken(string name, Input<string> id, RedisClusterCreateIdentityTokenState? state = null, CustomResourceOptions? options = null)
            : base("oci:Redis/redisClusterCreateIdentityToken:RedisClusterCreateIdentityToken", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RedisClusterCreateIdentityToken resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RedisClusterCreateIdentityToken Get(string name, Input<string> id, RedisClusterCreateIdentityTokenState? state = null, CustomResourceOptions? options = null)
        {
            return new RedisClusterCreateIdentityToken(name, id, state, options);
        }
    }

    public sealed class RedisClusterCreateIdentityTokenArgs : global::Pulumi.ResourceArgs
    {
        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// User public key pair
        /// </summary>
        [Input("publicKey", required: true)]
        public Input<string> PublicKey { get; set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the cluster.
        /// </summary>
        [Input("redisClusterId", required: true)]
        public Input<string> RedisClusterId { get; set; } = null!;

        /// <summary>
        /// Redis User generating identity token.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("redisUser", required: true)]
        public Input<string> RedisUser { get; set; } = null!;

        public RedisClusterCreateIdentityTokenArgs()
        {
        }
        public static new RedisClusterCreateIdentityTokenArgs Empty => new RedisClusterCreateIdentityTokenArgs();
    }

    public sealed class RedisClusterCreateIdentityTokenState : global::Pulumi.ResourceArgs
    {
        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// Generated Identity token
        /// </summary>
        [Input("identityToken")]
        public Input<string>? IdentityToken { get; set; }

        /// <summary>
        /// User public key pair
        /// </summary>
        [Input("publicKey")]
        public Input<string>? PublicKey { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the cluster.
        /// </summary>
        [Input("redisClusterId")]
        public Input<string>? RedisClusterId { get; set; }

        /// <summary>
        /// Redis User generating identity token.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("redisUser")]
        public Input<string>? RedisUser { get; set; }

        public RedisClusterCreateIdentityTokenState()
        {
        }
        public static new RedisClusterCreateIdentityTokenState Empty => new RedisClusterCreateIdentityTokenState();
    }
}
