// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Redis
{
    /// <summary>
    /// This resource provides the Redis Cluster Get Oci Cache User resource in Oracle Cloud Infrastructure Redis service.
    /// 
    /// Gets a list of associated Oracle Cloud Infrastructure cache users for a redis cluster.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testRedisClusterGetOciCacheUser = new Oci.Redis.RedisClusterGetOciCacheUser("test_redis_cluster_get_oci_cache_user", new()
    ///     {
    ///         RedisClusterId = testRedisCluster.Id,
    ///         CompartmentId = compartmentId,
    ///         DisplayName = redisClusterGetOciCacheUserDisplayName,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Import is not supported for this resource.
    /// </summary>
    [OciResourceType("oci:Redis/redisClusterGetOciCacheUser:RedisClusterGetOciCacheUser")]
    public partial class RedisClusterGetOciCacheUser : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        [Output("ociCacheUsers")]
        public Output<ImmutableArray<Outputs.RedisClusterGetOciCacheUserOciCacheUser>> OciCacheUsers { get; private set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the cluster.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("redisClusterId")]
        public Output<string> RedisClusterId { get; private set; } = null!;


        /// <summary>
        /// Create a RedisClusterGetOciCacheUser resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RedisClusterGetOciCacheUser(string name, RedisClusterGetOciCacheUserArgs args, CustomResourceOptions? options = null)
            : base("oci:Redis/redisClusterGetOciCacheUser:RedisClusterGetOciCacheUser", name, args ?? new RedisClusterGetOciCacheUserArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RedisClusterGetOciCacheUser(string name, Input<string> id, RedisClusterGetOciCacheUserState? state = null, CustomResourceOptions? options = null)
            : base("oci:Redis/redisClusterGetOciCacheUser:RedisClusterGetOciCacheUser", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RedisClusterGetOciCacheUser resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RedisClusterGetOciCacheUser Get(string name, Input<string> id, RedisClusterGetOciCacheUserState? state = null, CustomResourceOptions? options = null)
        {
            return new RedisClusterGetOciCacheUser(name, id, state, options);
        }
    }

    public sealed class RedisClusterGetOciCacheUserArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the cluster.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("redisClusterId", required: true)]
        public Input<string> RedisClusterId { get; set; } = null!;

        public RedisClusterGetOciCacheUserArgs()
        {
        }
        public static new RedisClusterGetOciCacheUserArgs Empty => new RedisClusterGetOciCacheUserArgs();
    }

    public sealed class RedisClusterGetOciCacheUserState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("ociCacheUsers")]
        private InputList<Inputs.RedisClusterGetOciCacheUserOciCacheUserGetArgs>? _ociCacheUsers;
        public InputList<Inputs.RedisClusterGetOciCacheUserOciCacheUserGetArgs> OciCacheUsers
        {
            get => _ociCacheUsers ?? (_ociCacheUsers = new InputList<Inputs.RedisClusterGetOciCacheUserOciCacheUserGetArgs>());
            set => _ociCacheUsers = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the cluster.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("redisClusterId")]
        public Input<string>? RedisClusterId { get; set; }

        public RedisClusterGetOciCacheUserState()
        {
        }
        public static new RedisClusterGetOciCacheUserState Empty => new RedisClusterGetOciCacheUserState();
    }
}
