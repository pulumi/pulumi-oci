// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ResourceScheduler.Outputs
{

    [OutputType]
    public sealed class GetSchedulesScheduleCollectionItemResult
    {
        /// <summary>
        /// This is the action that will be executed by the schedule.
        /// </summary>
        public readonly string Action;
        /// <summary>
        /// This is the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources. You need to at least provide either `CompartmentId` or `ScheduleId` or both.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// These are defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// This is the description of the schedule.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// This is a filter to return only resources that match the given display name exactly.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// These are free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// This is the resource OCID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// This is the status of the last work request.
        /// </summary>
        public readonly string LastRunStatus;
        /// <summary>
        /// This is the frequency of recurrence of a schedule. The frequency field can either conform to RFC-5545 formatting or UNIX cron formatting for recurrences, based on the value specified by the recurrenceType field.
        /// </summary>
        public readonly string RecurrenceDetails;
        /// <summary>
        /// Type of recurrence of a schedule
        /// </summary>
        public readonly string RecurrenceType;
        /// <summary>
        /// This is a list of resources filters.  The schedule will be applied to resources matching all of them.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSchedulesScheduleCollectionItemResourceFilterResult> ResourceFilters;
        /// <summary>
        /// This is the list of resources to which the scheduled operation is applied.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSchedulesScheduleCollectionItemResourceResult> Resources;
        /// <summary>
        /// This is a filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// These are system tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// This is the date and time the schedule was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// This is the date and time the schedule ends, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339)  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        public readonly string TimeEnds;
        /// <summary>
        /// This is the date and time the schedule runs last time, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        public readonly string TimeLastRun;
        /// <summary>
        /// This is the date and time the schedule run the next time, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        public readonly string TimeNextRun;
        /// <summary>
        /// This is the date and time the schedule starts, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339)  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        public readonly string TimeStarts;
        /// <summary>
        /// This is the date and time the schedule was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetSchedulesScheduleCollectionItemResult(
            string action,

            string compartmentId,

            ImmutableDictionary<string, string> definedTags,

            string description,

            string displayName,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            string lastRunStatus,

            string recurrenceDetails,

            string recurrenceType,

            ImmutableArray<Outputs.GetSchedulesScheduleCollectionItemResourceFilterResult> resourceFilters,

            ImmutableArray<Outputs.GetSchedulesScheduleCollectionItemResourceResult> resources,

            string state,

            ImmutableDictionary<string, string> systemTags,

            string timeCreated,

            string timeEnds,

            string timeLastRun,

            string timeNextRun,

            string timeStarts,

            string timeUpdated)
        {
            Action = action;
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            LastRunStatus = lastRunStatus;
            RecurrenceDetails = recurrenceDetails;
            RecurrenceType = recurrenceType;
            ResourceFilters = resourceFilters;
            Resources = resources;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeEnds = timeEnds;
            TimeLastRun = timeLastRun;
            TimeNextRun = timeNextRun;
            TimeStarts = timeStarts;
            TimeUpdated = timeUpdated;
        }
    }
}
