// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Sch
{
    public static class GetConnectorPlugin
    {
        /// <summary>
        /// This data source provides details about a specific Connector Plugin resource in Oracle Cloud Infrastructure Service Connector Hub service.
        /// 
        /// Gets the specified connector plugin configuration information.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testConnectorPlugin = Oci.Sch.GetConnectorPlugin.Invoke(new()
        ///     {
        ///         ConnectorPluginName = testConnectorPluginOciSchConnectorPlugin.Name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetConnectorPluginResult> InvokeAsync(GetConnectorPluginArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetConnectorPluginResult>("oci:Sch/getConnectorPlugin:getConnectorPlugin", args ?? new GetConnectorPluginArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Connector Plugin resource in Oracle Cloud Infrastructure Service Connector Hub service.
        /// 
        /// Gets the specified connector plugin configuration information.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testConnectorPlugin = Oci.Sch.GetConnectorPlugin.Invoke(new()
        ///     {
        ///         ConnectorPluginName = testConnectorPluginOciSchConnectorPlugin.Name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetConnectorPluginResult> Invoke(GetConnectorPluginInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetConnectorPluginResult>("oci:Sch/getConnectorPlugin:getConnectorPlugin", args ?? new GetConnectorPluginInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Connector Plugin resource in Oracle Cloud Infrastructure Service Connector Hub service.
        /// 
        /// Gets the specified connector plugin configuration information.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testConnectorPlugin = Oci.Sch.GetConnectorPlugin.Invoke(new()
        ///     {
        ///         ConnectorPluginName = testConnectorPluginOciSchConnectorPlugin.Name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetConnectorPluginResult> Invoke(GetConnectorPluginInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetConnectorPluginResult>("oci:Sch/getConnectorPlugin:getConnectorPlugin", args ?? new GetConnectorPluginInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetConnectorPluginArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the connector plugin. This name indicates the service to be called by the connector plugin. For example, `QueueSource` indicates the Queue service.
        /// </summary>
        [Input("connectorPluginName", required: true)]
        public string ConnectorPluginName { get; set; } = null!;

        public GetConnectorPluginArgs()
        {
        }
        public static new GetConnectorPluginArgs Empty => new GetConnectorPluginArgs();
    }

    public sealed class GetConnectorPluginInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the connector plugin. This name indicates the service to be called by the connector plugin. For example, `QueueSource` indicates the Queue service.
        /// </summary>
        [Input("connectorPluginName", required: true)]
        public Input<string> ConnectorPluginName { get; set; } = null!;

        public GetConnectorPluginInvokeArgs()
        {
        }
        public static new GetConnectorPluginInvokeArgs Empty => new GetConnectorPluginInvokeArgs();
    }


    [OutputType]
    public sealed class GetConnectorPluginResult
    {
        public readonly string ConnectorPluginName;
        /// <summary>
        /// A user-friendly name. It does not have to be unique, and it is changeable. Avoid entering confidential information.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// The estimated throughput range (LOW, MEDIUM, HIGH).
        /// </summary>
        public readonly string EstimatedThroughput;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The plugin type discriminator.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// The estimated maximum period of time the data will be kept at the source. The duration is specified as a string in ISO 8601 format (P1D for one day or P30D for thrity days).
        /// </summary>
        public readonly string MaxRetention;
        /// <summary>
        /// The service to be called by the connector plugin. Example: `QueueSource`
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Gets the specified connector plugin configuration information in OpenAPI specification format.
        /// </summary>
        public readonly string Schema;
        /// <summary>
        /// The current state of the service connector.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The date and time when this plugin became available. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2023-09-09T21:10:29.600Z`
        /// </summary>
        public readonly string TimeCreated;

        [OutputConstructor]
        private GetConnectorPluginResult(
            string connectorPluginName,

            string displayName,

            string estimatedThroughput,

            string id,

            string kind,

            string maxRetention,

            string name,

            string schema,

            string state,

            string timeCreated)
        {
            ConnectorPluginName = connectorPluginName;
            DisplayName = displayName;
            EstimatedThroughput = estimatedThroughput;
            Id = id;
            Kind = kind;
            MaxRetention = maxRetention;
            Name = name;
            Schema = schema;
            State = state;
            TimeCreated = timeCreated;
        }
    }
}
