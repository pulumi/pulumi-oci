// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Sch
{
    public static class GetConnectorPlugins
    {
        /// <summary>
        /// This data source provides the list of Connector Plugins in Oracle Cloud Infrastructure Service Connector Hub service.
        /// 
        /// Lists connector plugins according to the specified filter.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testConnectorPlugins = Oci.Sch.GetConnectorPlugins.Invoke(new()
        ///     {
        ///         DisplayName = @var.Connector_plugin_display_name,
        ///         Name = @var.Connector_plugin_name,
        ///         State = @var.Connector_plugin_state,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetConnectorPluginsResult> InvokeAsync(GetConnectorPluginsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetConnectorPluginsResult>("oci:Sch/getConnectorPlugins:getConnectorPlugins", args ?? new GetConnectorPluginsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Connector Plugins in Oracle Cloud Infrastructure Service Connector Hub service.
        /// 
        /// Lists connector plugins according to the specified filter.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testConnectorPlugins = Oci.Sch.GetConnectorPlugins.Invoke(new()
        ///     {
        ///         DisplayName = @var.Connector_plugin_display_name,
        ///         Name = @var.Connector_plugin_name,
        ///         State = @var.Connector_plugin_state,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetConnectorPluginsResult> Invoke(GetConnectorPluginsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetConnectorPluginsResult>("oci:Sch/getConnectorPlugins:getConnectorPlugins", args ?? new GetConnectorPluginsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetConnectorPluginsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A filter to return only resources that match the given display name exactly.  Example: `example_service_connector`
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetConnectorPluginsFilterArgs>? _filters;
        public List<Inputs.GetConnectorPluginsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetConnectorPluginsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only resources that match the given connector plugin name ignoring case.  Example: `QueueSource`
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given lifecycle state.  Example: `ACTIVE`
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetConnectorPluginsArgs()
        {
        }
        public static new GetConnectorPluginsArgs Empty => new GetConnectorPluginsArgs();
    }

    public sealed class GetConnectorPluginsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A filter to return only resources that match the given display name exactly.  Example: `example_service_connector`
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetConnectorPluginsFilterInputArgs>? _filters;
        public InputList<Inputs.GetConnectorPluginsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetConnectorPluginsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only resources that match the given connector plugin name ignoring case.  Example: `QueueSource`
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given lifecycle state.  Example: `ACTIVE`
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetConnectorPluginsInvokeArgs()
        {
        }
        public static new GetConnectorPluginsInvokeArgs Empty => new GetConnectorPluginsInvokeArgs();
    }


    [OutputType]
    public sealed class GetConnectorPluginsResult
    {
        /// <summary>
        /// The list of connector_plugin_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetConnectorPluginsConnectorPluginCollectionResult> ConnectorPluginCollections;
        /// <summary>
        /// A user-friendly name. It does not have to be unique, and it is changeable. Avoid entering confidential information.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetConnectorPluginsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The service to be called by the connector plugin. Example: `QueueSource`
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The current state of the service connector.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetConnectorPluginsResult(
            ImmutableArray<Outputs.GetConnectorPluginsConnectorPluginCollectionResult> connectorPluginCollections,

            string? displayName,

            ImmutableArray<Outputs.GetConnectorPluginsFilterResult> filters,

            string id,

            string? name,

            string? state)
        {
            ConnectorPluginCollections = connectorPluginCollections;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            Name = name;
            State = state;
        }
    }
}
