// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Sch
{
    public static class GetServiceConnectors
    {
        /// <summary>
        /// This data source provides the list of Service Connectors in Oracle Cloud Infrastructure Service Connector Hub service.
        /// 
        /// Lists connectors in the specified compartment.
        /// For more information, see
        /// [Listing Connectors](https://docs.cloud.oracle.com/iaas/Content/connector-hub/list-service-connector.htm).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testServiceConnectors = Oci.Sch.GetServiceConnectors.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = serviceConnectorDisplayName,
        ///         State = serviceConnectorState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetServiceConnectorsResult> InvokeAsync(GetServiceConnectorsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetServiceConnectorsResult>("oci:Sch/getServiceConnectors:getServiceConnectors", args ?? new GetServiceConnectorsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Service Connectors in Oracle Cloud Infrastructure Service Connector Hub service.
        /// 
        /// Lists connectors in the specified compartment.
        /// For more information, see
        /// [Listing Connectors](https://docs.cloud.oracle.com/iaas/Content/connector-hub/list-service-connector.htm).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testServiceConnectors = Oci.Sch.GetServiceConnectors.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = serviceConnectorDisplayName,
        ///         State = serviceConnectorState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetServiceConnectorsResult> Invoke(GetServiceConnectorsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetServiceConnectorsResult>("oci:Sch/getServiceConnectors:getServiceConnectors", args ?? new GetServiceConnectorsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetServiceConnectorsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for this request.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the given display name exactly.  Example: `example_service_connector`
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetServiceConnectorsFilterArgs>? _filters;
        public List<Inputs.GetServiceConnectorsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetServiceConnectorsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only resources that match the given lifecycle state.  Example: `ACTIVE`
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetServiceConnectorsArgs()
        {
        }
        public static new GetServiceConnectorsArgs Empty => new GetServiceConnectorsArgs();
    }

    public sealed class GetServiceConnectorsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for this request.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the given display name exactly.  Example: `example_service_connector`
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetServiceConnectorsFilterInputArgs>? _filters;
        public InputList<Inputs.GetServiceConnectorsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetServiceConnectorsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only resources that match the given lifecycle state.  Example: `ACTIVE`
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetServiceConnectorsInvokeArgs()
        {
        }
        public static new GetServiceConnectorsInvokeArgs Empty => new GetServiceConnectorsInvokeArgs();
    }


    [OutputType]
    public sealed class GetServiceConnectorsResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the metric.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// A user-friendly name. It does not have to be unique, and it is changeable. Avoid entering confidential information.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetServiceConnectorsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of service_connector_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetServiceConnectorsServiceConnectorCollectionResult> ServiceConnectorCollections;
        /// <summary>
        /// The current state of the connector.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetServiceConnectorsResult(
            string compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetServiceConnectorsFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetServiceConnectorsServiceConnectorCollectionResult> serviceConnectorCollections,

            string? state)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            ServiceConnectorCollections = serviceConnectorCollections;
            State = state;
        }
    }
}
