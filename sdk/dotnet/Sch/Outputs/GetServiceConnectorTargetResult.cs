// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Sch.Outputs
{

    [OutputType]
    public sealed class GetServiceConnectorTargetResult
    {
        /// <summary>
        /// The batch rollover size in megabytes.
        /// </summary>
        public readonly int BatchRolloverSizeInMbs;
        /// <summary>
        /// The batch rollover time in milliseconds.
        /// </summary>
        public readonly int BatchRolloverTimeInMs;
        /// <summary>
        /// Size limit (kilobytes) for batch sent to invoke the function.
        /// </summary>
        public readonly int BatchSizeInKbs;
        /// <summary>
        /// The batch rollover size in number of messages. Only one size option can be specified: `batchSizeInKbs` or `batchSizeInNum`.
        /// </summary>
        public readonly int BatchSizeInNum;
        /// <summary>
        /// Time limit (seconds) for batch sent to invoke the function.
        /// </summary>
        public readonly int BatchTimeInSec;
        /// <summary>
        /// The name of the bucket. Valid characters are letters (upper or lower case), numbers, hyphens (-), underscores(_), and periods (.). Bucket names must be unique within an Object Storage namespace. Avoid entering confidential information. Example: my-new-bucket1
        /// </summary>
        public readonly string Bucket;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the metric.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// List of dimension names and values.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetServiceConnectorTargetDimensionResult> Dimensions;
        /// <summary>
        /// Whether to apply a simplified, user-friendly format to the message. Applies only when friendly formatting is supported by the connector source and the subscription protocol. Example: `True`
        /// </summary>
        public readonly bool EnableFormattedMessaging;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the function to be used as a task.
        /// </summary>
        public readonly string FunctionId;
        /// <summary>
        /// The type of dimension value: static or evaluated.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Logging Analytics log group.
        /// </summary>
        public readonly string LogGroupId;
        /// <summary>
        /// Identifier of the log source that you want to use for processing data received from the connector source. Applies to `StreamingSource` only. Equivalent to `Name` at [LogAnalyticsSource](https://docs.cloud.oracle.com/iaas/api/#/en/logan-api-spec/latest/LogAnalyticsSource/).
        /// </summary>
        public readonly string LogSourceIdentifier;
        /// <summary>
        /// The name of the metric. Example: `CpuUtilization`
        /// </summary>
        public readonly string Metric;
        /// <summary>
        /// The namespace of the metric. Example: `OciComputeagent`
        /// </summary>
        public readonly string MetricNamespace;
        /// <summary>
        /// The namespace.
        /// </summary>
        public readonly string Namespace;
        /// <summary>
        /// The prefix of the objects. Avoid entering confidential information.
        /// </summary>
        public readonly string ObjectNamePrefix;
        /// <summary>
        /// The private endpoint metadata for the connector's source or target.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetServiceConnectorTargetPrivateEndpointMetadataResult> PrivateEndpointMetadatas;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream.
        /// </summary>
        public readonly string StreamId;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the topic.
        /// </summary>
        public readonly string TopicId;

        [OutputConstructor]
        private GetServiceConnectorTargetResult(
            int batchRolloverSizeInMbs,

            int batchRolloverTimeInMs,

            int batchSizeInKbs,

            int batchSizeInNum,

            int batchTimeInSec,

            string bucket,

            string compartmentId,

            ImmutableArray<Outputs.GetServiceConnectorTargetDimensionResult> dimensions,

            bool enableFormattedMessaging,

            string functionId,

            string kind,

            string logGroupId,

            string logSourceIdentifier,

            string metric,

            string metricNamespace,

            string @namespace,

            string objectNamePrefix,

            ImmutableArray<Outputs.GetServiceConnectorTargetPrivateEndpointMetadataResult> privateEndpointMetadatas,

            string streamId,

            string topicId)
        {
            BatchRolloverSizeInMbs = batchRolloverSizeInMbs;
            BatchRolloverTimeInMs = batchRolloverTimeInMs;
            BatchSizeInKbs = batchSizeInKbs;
            BatchSizeInNum = batchSizeInNum;
            BatchTimeInSec = batchTimeInSec;
            Bucket = bucket;
            CompartmentId = compartmentId;
            Dimensions = dimensions;
            EnableFormattedMessaging = enableFormattedMessaging;
            FunctionId = functionId;
            Kind = kind;
            LogGroupId = logGroupId;
            LogSourceIdentifier = logSourceIdentifier;
            Metric = metric;
            MetricNamespace = metricNamespace;
            Namespace = @namespace;
            ObjectNamePrefix = objectNamePrefix;
            PrivateEndpointMetadatas = privateEndpointMetadatas;
            StreamId = streamId;
            TopicId = topicId;
        }
    }
}
