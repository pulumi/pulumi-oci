// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Sch.Outputs
{

    [OutputType]
    public sealed class GetServiceConnectorsServiceConnectorCollectionItemResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for this request.
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? DefinedTags;
        /// <summary>
        /// The description of the resource. Avoid entering confidential information.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// A filter to return only resources that match the given display name exactly.  Example: `example_service_connector`
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? FreeformTags;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the service connector.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// A message describing the current state in more detail. For example, the message might provide actionable information for a resource in a `FAILED` state.
        /// </summary>
        public readonly string? LifecyleDetails;
        /// <summary>
        /// An object that represents the source of the flow defined by the service connector. An example source is the VCNFlow logs within the NetworkLogs group. For more information about flows defined by service connectors, see [Service Connector Hub Overview](https://docs.cloud.oracle.com/iaas/Content/service-connector-hub/overview.htm). For configuration instructions, see [To create a service connector](https://docs.cloud.oracle.com/iaas/Content/service-connector-hub/managingconnectors.htm#create).
        /// </summary>
        public readonly ImmutableArray<Outputs.GetServiceConnectorsServiceConnectorCollectionItemSourceResult> Sources;
        /// <summary>
        /// A filter to return only resources that match the given lifecycle state.  Example: `ACTIVE`
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{orcl-cloud: {free-tier-retain: true}}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? SystemTags;
        /// <summary>
        /// An object that represents the target of the flow defined by the service connector. An example target is a stream (Streaming service). For more information about flows defined by service connectors, see [Service Connector Hub Overview](https://docs.cloud.oracle.com/iaas/Content/service-connector-hub/overview.htm). For configuration instructions, see [To create a service connector](https://docs.cloud.oracle.com/iaas/Content/service-connector-hub/managingconnectors.htm#create).
        /// </summary>
        public readonly ImmutableArray<Outputs.GetServiceConnectorsServiceConnectorCollectionItemTargetResult> Targets;
        /// <summary>
        /// The list of tasks.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetServiceConnectorsServiceConnectorCollectionItemTaskResult> Tasks;
        /// <summary>
        /// The date and time when the service connector was created. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
        /// </summary>
        public readonly string? TimeCreated;
        /// <summary>
        /// The date and time when the service connector was updated. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
        /// </summary>
        public readonly string? TimeUpdated;

        [OutputConstructor]
        private GetServiceConnectorsServiceConnectorCollectionItemResult(
            string? compartmentId,

            ImmutableDictionary<string, object>? definedTags,

            string? description,

            string? displayName,

            ImmutableDictionary<string, object>? freeformTags,

            string? id,

            string? lifecyleDetails,

            ImmutableArray<Outputs.GetServiceConnectorsServiceConnectorCollectionItemSourceResult> sources,

            string? state,

            ImmutableDictionary<string, object>? systemTags,

            ImmutableArray<Outputs.GetServiceConnectorsServiceConnectorCollectionItemTargetResult> targets,

            ImmutableArray<Outputs.GetServiceConnectorsServiceConnectorCollectionItemTaskResult> tasks,

            string? timeCreated,

            string? timeUpdated)
        {
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            LifecyleDetails = lifecyleDetails;
            Sources = sources;
            State = state;
            SystemTags = systemTags;
            Targets = targets;
            Tasks = tasks;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
