// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Secrets
{
    public static class GetSecretbundleVersions
    {
        /// <summary>
        /// This data source provides the list of Secretbundle Versions in Oracle Cloud Infrastructure Secrets service.
        /// 
        /// Lists all secret bundle versions for the specified secret.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSecretbundleVersions = Oci.Secrets.GetSecretbundleVersions.Invoke(new()
        ///     {
        ///         SecretId = oci_vault_secret.Test_secret.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSecretbundleVersionsResult> InvokeAsync(GetSecretbundleVersionsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSecretbundleVersionsResult>("oci:Secrets/getSecretbundleVersions:getSecretbundleVersions", args ?? new GetSecretbundleVersionsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Secretbundle Versions in Oracle Cloud Infrastructure Secrets service.
        /// 
        /// Lists all secret bundle versions for the specified secret.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSecretbundleVersions = Oci.Secrets.GetSecretbundleVersions.Invoke(new()
        ///     {
        ///         SecretId = oci_vault_secret.Test_secret.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSecretbundleVersionsResult> Invoke(GetSecretbundleVersionsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSecretbundleVersionsResult>("oci:Secrets/getSecretbundleVersions:getSecretbundleVersions", args ?? new GetSecretbundleVersionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSecretbundleVersionsArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetSecretbundleVersionsFilterArgs>? _filters;
        public List<Inputs.GetSecretbundleVersionsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetSecretbundleVersionsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The OCID of the secret.
        /// </summary>
        [Input("secretId", required: true)]
        public string SecretId { get; set; } = null!;

        public GetSecretbundleVersionsArgs()
        {
        }
        public static new GetSecretbundleVersionsArgs Empty => new GetSecretbundleVersionsArgs();
    }

    public sealed class GetSecretbundleVersionsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetSecretbundleVersionsFilterInputArgs>? _filters;
        public InputList<Inputs.GetSecretbundleVersionsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetSecretbundleVersionsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The OCID of the secret.
        /// </summary>
        [Input("secretId", required: true)]
        public Input<string> SecretId { get; set; } = null!;

        public GetSecretbundleVersionsInvokeArgs()
        {
        }
        public static new GetSecretbundleVersionsInvokeArgs Empty => new GetSecretbundleVersionsInvokeArgs();
    }


    [OutputType]
    public sealed class GetSecretbundleVersionsResult
    {
        public readonly ImmutableArray<Outputs.GetSecretbundleVersionsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of secret_bundle_versions.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSecretbundleVersionsSecretBundleVersionResult> SecretBundleVersions;
        /// <summary>
        /// The OCID of the secret.
        /// </summary>
        public readonly string SecretId;

        [OutputConstructor]
        private GetSecretbundleVersionsResult(
            ImmutableArray<Outputs.GetSecretbundleVersionsFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetSecretbundleVersionsSecretBundleVersionResult> secretBundleVersions,

            string secretId)
        {
            Filters = filters;
            Id = id;
            SecretBundleVersions = secretBundleVersions;
            SecretId = secretId;
        }
    }
}
