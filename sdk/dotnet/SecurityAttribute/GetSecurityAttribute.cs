// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.SecurityAttribute
{
    public static class GetSecurityAttribute
    {
        /// <summary>
        /// This data source provides details about a specific Security Attribute resource in Oracle Cloud Infrastructure Security Attribute service.
        /// 
        /// Gets the specified security attribute's information.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSecurityAttribute = Oci.SecurityAttribute.GetSecurityAttribute.Invoke(new()
        ///     {
        ///         SecurityAttributeName = testSecurityAttributeOciSecurityAttributeSecurityAttribute.Name,
        ///         SecurityAttributeNamespaceId = testSecurityAttributeNamespace.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSecurityAttributeResult> InvokeAsync(GetSecurityAttributeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSecurityAttributeResult>("oci:SecurityAttribute/getSecurityAttribute:getSecurityAttribute", args ?? new GetSecurityAttributeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Security Attribute resource in Oracle Cloud Infrastructure Security Attribute service.
        /// 
        /// Gets the specified security attribute's information.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSecurityAttribute = Oci.SecurityAttribute.GetSecurityAttribute.Invoke(new()
        ///     {
        ///         SecurityAttributeName = testSecurityAttributeOciSecurityAttributeSecurityAttribute.Name,
        ///         SecurityAttributeNamespaceId = testSecurityAttributeNamespace.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSecurityAttributeResult> Invoke(GetSecurityAttributeInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSecurityAttributeResult>("oci:SecurityAttribute/getSecurityAttribute:getSecurityAttribute", args ?? new GetSecurityAttributeInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSecurityAttributeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the security attribute.
        /// </summary>
        [Input("securityAttributeName", required: true)]
        public string SecurityAttributeName { get; set; } = null!;

        /// <summary>
        /// The OCID of the security attribute namespace.
        /// </summary>
        [Input("securityAttributeNamespaceId", required: true)]
        public string SecurityAttributeNamespaceId { get; set; } = null!;

        public GetSecurityAttributeArgs()
        {
        }
        public static new GetSecurityAttributeArgs Empty => new GetSecurityAttributeArgs();
    }

    public sealed class GetSecurityAttributeInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the security attribute.
        /// </summary>
        [Input("securityAttributeName", required: true)]
        public Input<string> SecurityAttributeName { get; set; } = null!;

        /// <summary>
        /// The OCID of the security attribute namespace.
        /// </summary>
        [Input("securityAttributeNamespaceId", required: true)]
        public Input<string> SecurityAttributeNamespaceId { get; set; } = null!;

        public GetSecurityAttributeInvokeArgs()
        {
        }
        public static new GetSecurityAttributeInvokeArgs Empty => new GetSecurityAttributeInvokeArgs();
    }


    [OutputType]
    public sealed class GetSecurityAttributeResult
    {
        /// <summary>
        /// The OCID of the compartment that contains the security attribute definition.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The description you assign to the security attribute.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The OCID of the security attribute definition.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Indicates whether the security attribute is retired. See [Managing Security Attribute Namespaces](https://docs.cloud.oracle.com/iaas/Content/zero-trust-packet-routing/managing-security-attribute-namespaces.htm).
        /// </summary>
        public readonly bool IsRetired;
        /// <summary>
        /// The name assigned to the security attribute during creation. This is the security attribute key. The name must be unique within the security attribute namespace and cannot be changed.
        /// </summary>
        public readonly string Name;
        public readonly string SecurityAttributeName;
        /// <summary>
        /// The OCID of the security attribute namespace that contains the security attribute definition.
        /// </summary>
        public readonly string SecurityAttributeNamespaceId;
        /// <summary>
        /// The name of the security attribute namespace that contains the security attribute.
        /// </summary>
        public readonly string SecurityAttributeNamespaceName;
        /// <summary>
        /// The security attribute's current state. After creating a security attribute, make sure its `lifecycleState` is ACTIVE before using it. After retiring a security attribute, make sure its `lifecycleState` is INACTIVE before using it. If you delete a security attribute, you cannot delete another security attribute until the deleted security attribute's `lifecycleState` changes from DELETING to DELETED.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Date and time the security attribute was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The data type of the security attribute.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Validates a security attribute value. Each validator performs validation steps in addition to the standard validation for security attribute values. For more information, see [Limits on Security Attributes](https://docs.cloud.oracle.com/iaas/Content/zero-trust-packet-routing/overview.htm).
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSecurityAttributeValidatorResult> Validators;

        [OutputConstructor]
        private GetSecurityAttributeResult(
            string compartmentId,

            string description,

            string id,

            bool isRetired,

            string name,

            string securityAttributeName,

            string securityAttributeNamespaceId,

            string securityAttributeNamespaceName,

            string state,

            string timeCreated,

            string type,

            ImmutableArray<Outputs.GetSecurityAttributeValidatorResult> validators)
        {
            CompartmentId = compartmentId;
            Description = description;
            Id = id;
            IsRetired = isRetired;
            Name = name;
            SecurityAttributeName = securityAttributeName;
            SecurityAttributeNamespaceId = securityAttributeNamespaceId;
            SecurityAttributeNamespaceName = securityAttributeNamespaceName;
            State = state;
            TimeCreated = timeCreated;
            Type = type;
            Validators = validators;
        }
    }
}
