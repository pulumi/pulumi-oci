// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.SecurityAttribute
{
    public static class GetSecurityAttributeNamespace
    {
        /// <summary>
        /// This data source provides details about a specific Security Attribute Namespace resource in Oracle Cloud Infrastructure Security Attribute service.
        /// 
        /// Gets the specified security attribute namespace's information.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSecurityAttributeNamespace = Oci.SecurityAttribute.GetSecurityAttributeNamespace.Invoke(new()
        ///     {
        ///         SecurityAttributeNamespaceId = testSecurityAttributeNamespaceOciSecurityAttributeSecurityAttributeNamespace.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSecurityAttributeNamespaceResult> InvokeAsync(GetSecurityAttributeNamespaceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSecurityAttributeNamespaceResult>("oci:SecurityAttribute/getSecurityAttributeNamespace:getSecurityAttributeNamespace", args ?? new GetSecurityAttributeNamespaceArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Security Attribute Namespace resource in Oracle Cloud Infrastructure Security Attribute service.
        /// 
        /// Gets the specified security attribute namespace's information.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSecurityAttributeNamespace = Oci.SecurityAttribute.GetSecurityAttributeNamespace.Invoke(new()
        ///     {
        ///         SecurityAttributeNamespaceId = testSecurityAttributeNamespaceOciSecurityAttributeSecurityAttributeNamespace.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSecurityAttributeNamespaceResult> Invoke(GetSecurityAttributeNamespaceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSecurityAttributeNamespaceResult>("oci:SecurityAttribute/getSecurityAttributeNamespace:getSecurityAttributeNamespace", args ?? new GetSecurityAttributeNamespaceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSecurityAttributeNamespaceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the security attribute namespace.
        /// </summary>
        [Input("securityAttributeNamespaceId", required: true)]
        public string SecurityAttributeNamespaceId { get; set; } = null!;

        public GetSecurityAttributeNamespaceArgs()
        {
        }
        public static new GetSecurityAttributeNamespaceArgs Empty => new GetSecurityAttributeNamespaceArgs();
    }

    public sealed class GetSecurityAttributeNamespaceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the security attribute namespace.
        /// </summary>
        [Input("securityAttributeNamespaceId", required: true)]
        public Input<string> SecurityAttributeNamespaceId { get; set; } = null!;

        public GetSecurityAttributeNamespaceInvokeArgs()
        {
        }
        public static new GetSecurityAttributeNamespaceInvokeArgs Empty => new GetSecurityAttributeNamespaceInvokeArgs();
    }


    [OutputType]
    public sealed class GetSecurityAttributeNamespaceResult
    {
        /// <summary>
        /// The OCID of the compartment that contains the security attribute namespace.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// Description of the Security Attribute Namespace.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The OCID of the security attribute namespace.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Indicates whether the security attribute namespace is retired. See [Managing Security Attribute Namespaces](https://docs.cloud.oracle.com/iaas/Content/zero-trust-packet-routing/managing-security-attribute-namespaces.htm).
        /// </summary>
        public readonly bool IsRetired;
        /// <summary>
        /// Indicates possible modes the security attributes in this namespace is set to. Supported values are `enforce` and `audit`. Currently mode cannot be controlled by the user
        /// </summary>
        public readonly ImmutableArray<string> Modes;
        /// <summary>
        /// The name of the security attribute namespace. It must be unique across all security attribute namespaces in the tenancy and cannot be changed.
        /// </summary>
        public readonly string Name;
        public readonly string SecurityAttributeNamespaceId;
        /// <summary>
        /// The security attribute namespace's current state. After creating a security attribute namespace, `lifecycleState` is in ACTIVE state. After retiring a security attribute namespace, its `lifecycleState` becomes INACTIVE. Security Attributes from a retired namespace cannot be attached to more resources.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// Date and time the security attribute namespace was created, in the format defined by RFC3339. Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        public readonly string TimeCreated;

        [OutputConstructor]
        private GetSecurityAttributeNamespaceResult(
            string compartmentId,

            ImmutableDictionary<string, string> definedTags,

            string description,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            bool isRetired,

            ImmutableArray<string> modes,

            string name,

            string securityAttributeNamespaceId,

            string state,

            ImmutableDictionary<string, string> systemTags,

            string timeCreated)
        {
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            Description = description;
            FreeformTags = freeformTags;
            Id = id;
            IsRetired = isRetired;
            Modes = modes;
            Name = name;
            SecurityAttributeNamespaceId = securityAttributeNamespaceId;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
        }
    }
}
