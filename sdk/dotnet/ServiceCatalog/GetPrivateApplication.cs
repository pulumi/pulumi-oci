// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ServiceCatalog
{
    public static class GetPrivateApplication
    {
        /// <summary>
        /// This data source provides details about a specific Private Application resource in Oracle Cloud Infrastructure Service Catalog service.
        /// 
        /// Gets the details of the specified private application.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testPrivateApplication = Oci.ServiceCatalog.GetPrivateApplication.Invoke(new()
        ///     {
        ///         PrivateApplicationId = testPrivateApplicationOciServiceCatalogPrivateApplication.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetPrivateApplicationResult> InvokeAsync(GetPrivateApplicationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPrivateApplicationResult>("oci:ServiceCatalog/getPrivateApplication:getPrivateApplication", args ?? new GetPrivateApplicationArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Private Application resource in Oracle Cloud Infrastructure Service Catalog service.
        /// 
        /// Gets the details of the specified private application.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testPrivateApplication = Oci.ServiceCatalog.GetPrivateApplication.Invoke(new()
        ///     {
        ///         PrivateApplicationId = testPrivateApplicationOciServiceCatalogPrivateApplication.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetPrivateApplicationResult> Invoke(GetPrivateApplicationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPrivateApplicationResult>("oci:ServiceCatalog/getPrivateApplication:getPrivateApplication", args ?? new GetPrivateApplicationInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Private Application resource in Oracle Cloud Infrastructure Service Catalog service.
        /// 
        /// Gets the details of the specified private application.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testPrivateApplication = Oci.ServiceCatalog.GetPrivateApplication.Invoke(new()
        ///     {
        ///         PrivateApplicationId = testPrivateApplicationOciServiceCatalogPrivateApplication.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetPrivateApplicationResult> Invoke(GetPrivateApplicationInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetPrivateApplicationResult>("oci:ServiceCatalog/getPrivateApplication:getPrivateApplication", args ?? new GetPrivateApplicationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPrivateApplicationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique identifier for the private application.
        /// </summary>
        [Input("privateApplicationId", required: true)]
        public string PrivateApplicationId { get; set; } = null!;

        public GetPrivateApplicationArgs()
        {
        }
        public static new GetPrivateApplicationArgs Empty => new GetPrivateApplicationArgs();
    }

    public sealed class GetPrivateApplicationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique identifier for the private application.
        /// </summary>
        [Input("privateApplicationId", required: true)]
        public Input<string> PrivateApplicationId { get; set; } = null!;

        public GetPrivateApplicationInvokeArgs()
        {
        }
        public static new GetPrivateApplicationInvokeArgs Empty => new GetPrivateApplicationInvokeArgs();
    }


    [OutputType]
    public sealed class GetPrivateApplicationResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where the private application resides.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// The name used to refer to the uploaded data.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The unique identifier for the private application in Marketplace.
        /// </summary>
        public readonly string Id;
        public readonly string LogoFileBase64encoded;
        /// <summary>
        /// The model for uploaded binary data, like logos and images.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPrivateApplicationLogoResult> Logos;
        /// <summary>
        /// A long description of the private application.
        /// </summary>
        public readonly string LongDescription;
        public readonly ImmutableArray<Outputs.GetPrivateApplicationPackageDetailResult> PackageDetails;
        /// <summary>
        /// Type of packages within this private application.
        /// </summary>
        public readonly string PackageType;
        public readonly string PrivateApplicationId;
        /// <summary>
        /// A short description of the private application.
        /// </summary>
        public readonly string ShortDescription;
        /// <summary>
        /// The lifecycle state of the private application.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The date and time the private application was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2021-05-26T21:10:29.600Z`
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The date and time the private application was last modified, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2021-12-10T05:10:29.721Z`
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetPrivateApplicationResult(
            string compartmentId,

            ImmutableDictionary<string, string> definedTags,

            string displayName,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            string logoFileBase64encoded,

            ImmutableArray<Outputs.GetPrivateApplicationLogoResult> logos,

            string longDescription,

            ImmutableArray<Outputs.GetPrivateApplicationPackageDetailResult> packageDetails,

            string packageType,

            string privateApplicationId,

            string shortDescription,

            string state,

            string timeCreated,

            string timeUpdated)
        {
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            LogoFileBase64encoded = logoFileBase64encoded;
            Logos = logos;
            LongDescription = longDescription;
            PackageDetails = packageDetails;
            PackageType = packageType;
            PrivateApplicationId = privateApplicationId;
            ShortDescription = shortDescription;
            State = state;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
