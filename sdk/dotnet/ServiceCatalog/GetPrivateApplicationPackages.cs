// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ServiceCatalog
{
    public static class GetPrivateApplicationPackages
    {
        /// <summary>
        /// This data source provides the list of Private Application Packages in Oracle Cloud Infrastructure Service Catalog service.
        /// 
        /// Lists the packages in the specified private application.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testPrivateApplicationPackages = Oci.ServiceCatalog.GetPrivateApplicationPackages.Invoke(new()
        ///     {
        ///         PrivateApplicationId = testPrivateApplication.Id,
        ///         DisplayName = privateApplicationPackageDisplayName,
        ///         PackageTypes = privateApplicationPackagePackageType,
        ///         PrivateApplicationPackageId = testPrivateApplicationPackage.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetPrivateApplicationPackagesResult> InvokeAsync(GetPrivateApplicationPackagesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPrivateApplicationPackagesResult>("oci:ServiceCatalog/getPrivateApplicationPackages:getPrivateApplicationPackages", args ?? new GetPrivateApplicationPackagesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Private Application Packages in Oracle Cloud Infrastructure Service Catalog service.
        /// 
        /// Lists the packages in the specified private application.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testPrivateApplicationPackages = Oci.ServiceCatalog.GetPrivateApplicationPackages.Invoke(new()
        ///     {
        ///         PrivateApplicationId = testPrivateApplication.Id,
        ///         DisplayName = privateApplicationPackageDisplayName,
        ///         PackageTypes = privateApplicationPackagePackageType,
        ///         PrivateApplicationPackageId = testPrivateApplicationPackage.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetPrivateApplicationPackagesResult> Invoke(GetPrivateApplicationPackagesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPrivateApplicationPackagesResult>("oci:ServiceCatalog/getPrivateApplicationPackages:getPrivateApplicationPackages", args ?? new GetPrivateApplicationPackagesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Private Application Packages in Oracle Cloud Infrastructure Service Catalog service.
        /// 
        /// Lists the packages in the specified private application.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testPrivateApplicationPackages = Oci.ServiceCatalog.GetPrivateApplicationPackages.Invoke(new()
        ///     {
        ///         PrivateApplicationId = testPrivateApplication.Id,
        ///         DisplayName = privateApplicationPackageDisplayName,
        ///         PackageTypes = privateApplicationPackagePackageType,
        ///         PrivateApplicationPackageId = testPrivateApplicationPackage.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetPrivateApplicationPackagesResult> Invoke(GetPrivateApplicationPackagesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetPrivateApplicationPackagesResult>("oci:ServiceCatalog/getPrivateApplicationPackages:getPrivateApplicationPackages", args ?? new GetPrivateApplicationPackagesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPrivateApplicationPackagesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Exact match name filter.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetPrivateApplicationPackagesFilterArgs>? _filters;
        public List<Inputs.GetPrivateApplicationPackagesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetPrivateApplicationPackagesFilterArgs>());
            set => _filters = value;
        }

        [Input("packageTypes")]
        private List<string>? _packageTypes;

        /// <summary>
        /// Name of the package type. If multiple package types are provided, then any resource with one or more matching package types will be returned.
        /// </summary>
        public List<string> PackageTypes
        {
            get => _packageTypes ?? (_packageTypes = new List<string>());
            set => _packageTypes = value;
        }

        /// <summary>
        /// The unique identifier for the private application.
        /// </summary>
        [Input("privateApplicationId", required: true)]
        public string PrivateApplicationId { get; set; } = null!;

        /// <summary>
        /// The unique identifier for the private application package.
        /// </summary>
        [Input("privateApplicationPackageId")]
        public string? PrivateApplicationPackageId { get; set; }

        public GetPrivateApplicationPackagesArgs()
        {
        }
        public static new GetPrivateApplicationPackagesArgs Empty => new GetPrivateApplicationPackagesArgs();
    }

    public sealed class GetPrivateApplicationPackagesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Exact match name filter.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetPrivateApplicationPackagesFilterInputArgs>? _filters;
        public InputList<Inputs.GetPrivateApplicationPackagesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetPrivateApplicationPackagesFilterInputArgs>());
            set => _filters = value;
        }

        [Input("packageTypes")]
        private InputList<string>? _packageTypes;

        /// <summary>
        /// Name of the package type. If multiple package types are provided, then any resource with one or more matching package types will be returned.
        /// </summary>
        public InputList<string> PackageTypes
        {
            get => _packageTypes ?? (_packageTypes = new InputList<string>());
            set => _packageTypes = value;
        }

        /// <summary>
        /// The unique identifier for the private application.
        /// </summary>
        [Input("privateApplicationId", required: true)]
        public Input<string> PrivateApplicationId { get; set; } = null!;

        /// <summary>
        /// The unique identifier for the private application package.
        /// </summary>
        [Input("privateApplicationPackageId")]
        public Input<string>? PrivateApplicationPackageId { get; set; }

        public GetPrivateApplicationPackagesInvokeArgs()
        {
        }
        public static new GetPrivateApplicationPackagesInvokeArgs Empty => new GetPrivateApplicationPackagesInvokeArgs();
    }


    [OutputType]
    public sealed class GetPrivateApplicationPackagesResult
    {
        /// <summary>
        /// The display name of the package.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetPrivateApplicationPackagesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The specified package's type.
        /// </summary>
        public readonly ImmutableArray<string> PackageTypes;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the private application where the package is hosted.
        /// </summary>
        public readonly string PrivateApplicationId;
        /// <summary>
        /// The list of private_application_package_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPrivateApplicationPackagesPrivateApplicationPackageCollectionResult> PrivateApplicationPackageCollections;
        public readonly string? PrivateApplicationPackageId;

        [OutputConstructor]
        private GetPrivateApplicationPackagesResult(
            string? displayName,

            ImmutableArray<Outputs.GetPrivateApplicationPackagesFilterResult> filters,

            string id,

            ImmutableArray<string> packageTypes,

            string privateApplicationId,

            ImmutableArray<Outputs.GetPrivateApplicationPackagesPrivateApplicationPackageCollectionResult> privateApplicationPackageCollections,

            string? privateApplicationPackageId)
        {
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            PackageTypes = packageTypes;
            PrivateApplicationId = privateApplicationId;
            PrivateApplicationPackageCollections = privateApplicationPackageCollections;
            PrivateApplicationPackageId = privateApplicationPackageId;
        }
    }
}
