// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ServiceCatalog
{
    /// <summary>
    /// This resource provides the Private Application resource in Oracle Cloud Infrastructure Service Catalog service.
    /// 
    /// Creates a private application along with a single package to be hosted.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testPrivateApplication = new Oci.ServiceCatalog.PrivateApplication("testPrivateApplication", new()
    ///     {
    ///         CompartmentId = @var.Compartment_id,
    ///         DisplayName = @var.Private_application_display_name,
    ///         PackageDetails = new Oci.ServiceCatalog.Inputs.PrivateApplicationPackageDetailsArgs
    ///         {
    ///             PackageType = @var.Private_application_package_details_package_type,
    ///             Version = @var.Private_application_package_details_version,
    ///             ZipFileBase64encoded = @var.Private_application_package_details_zip_file_base64encoded,
    ///         },
    ///         ShortDescription = @var.Private_application_short_description,
    ///         DefinedTags = 
    ///         {
    ///             { "foo-namespace.bar-key", "value" },
    ///         },
    ///         FreeformTags = 
    ///         {
    ///             { "bar-key", "value" },
    ///         },
    ///         LogoFileBase64encoded = @var.Private_application_logo_file_base64encoded,
    ///         LongDescription = @var.Private_application_long_description,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// PrivateApplications can be imported using the `id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import oci:ServiceCatalog/privateApplication:PrivateApplication test_private_application "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:ServiceCatalog/privateApplication:PrivateApplication")]
    public partial class PrivateApplication : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the private application.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, object>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The name of the private application.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, object>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Base64-encoded logo to use as the private application icon. Template icon file requirements: PNG format, 50 KB maximum, 130 x 130 pixels.
        /// </summary>
        [Output("logoFileBase64encoded")]
        public Output<string> LogoFileBase64encoded { get; private set; } = null!;

        /// <summary>
        /// The model for uploaded binary data, like logos and images.
        /// </summary>
        [Output("logos")]
        public Output<ImmutableArray<Outputs.PrivateApplicationLogo>> Logos { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A long description of the private application.
        /// </summary>
        [Output("longDescription")]
        public Output<string> LongDescription { get; private set; } = null!;

        /// <summary>
        /// A base object for creating a private application package.
        /// </summary>
        [Output("packageDetails")]
        public Output<Outputs.PrivateApplicationPackageDetails> PackageDetails { get; private set; } = null!;

        /// <summary>
        /// The package's type.
        /// </summary>
        [Output("packageType")]
        public Output<string> PackageType { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A short description of the private application.
        /// </summary>
        [Output("shortDescription")]
        public Output<string> ShortDescription { get; private set; } = null!;

        /// <summary>
        /// The lifecycle state of the private application.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The date and time the private application was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2021-05-26T21:10:29.600Z`
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The date and time the private application was last modified, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2021-12-10T05:10:29.721Z`
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;


        /// <summary>
        /// Create a PrivateApplication resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PrivateApplication(string name, PrivateApplicationArgs args, CustomResourceOptions? options = null)
            : base("oci:ServiceCatalog/privateApplication:PrivateApplication", name, args ?? new PrivateApplicationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PrivateApplication(string name, Input<string> id, PrivateApplicationState? state = null, CustomResourceOptions? options = null)
            : base("oci:ServiceCatalog/privateApplication:PrivateApplication", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PrivateApplication resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PrivateApplication Get(string name, Input<string> id, PrivateApplicationState? state = null, CustomResourceOptions? options = null)
        {
            return new PrivateApplication(name, id, state, options);
        }
    }

    public sealed class PrivateApplicationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the private application.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) The name of the private application.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) Base64-encoded logo to use as the private application icon. Template icon file requirements: PNG format, 50 KB maximum, 130 x 130 pixels.
        /// </summary>
        [Input("logoFileBase64encoded")]
        public Input<string>? LogoFileBase64encoded { get; set; }

        /// <summary>
        /// (Updatable) A long description of the private application.
        /// </summary>
        [Input("longDescription")]
        public Input<string>? LongDescription { get; set; }

        /// <summary>
        /// A base object for creating a private application package.
        /// </summary>
        [Input("packageDetails", required: true)]
        public Input<Inputs.PrivateApplicationPackageDetailsArgs> PackageDetails { get; set; } = null!;

        /// <summary>
        /// (Updatable) A short description of the private application.
        /// </summary>
        [Input("shortDescription", required: true)]
        public Input<string> ShortDescription { get; set; } = null!;

        public PrivateApplicationArgs()
        {
        }
        public static new PrivateApplicationArgs Empty => new PrivateApplicationArgs();
    }

    public sealed class PrivateApplicationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the private application.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) The name of the private application.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) Base64-encoded logo to use as the private application icon. Template icon file requirements: PNG format, 50 KB maximum, 130 x 130 pixels.
        /// </summary>
        [Input("logoFileBase64encoded")]
        public Input<string>? LogoFileBase64encoded { get; set; }

        [Input("logos")]
        private InputList<Inputs.PrivateApplicationLogoGetArgs>? _logos;

        /// <summary>
        /// The model for uploaded binary data, like logos and images.
        /// </summary>
        public InputList<Inputs.PrivateApplicationLogoGetArgs> Logos
        {
            get => _logos ?? (_logos = new InputList<Inputs.PrivateApplicationLogoGetArgs>());
            set => _logos = value;
        }

        /// <summary>
        /// (Updatable) A long description of the private application.
        /// </summary>
        [Input("longDescription")]
        public Input<string>? LongDescription { get; set; }

        /// <summary>
        /// A base object for creating a private application package.
        /// </summary>
        [Input("packageDetails")]
        public Input<Inputs.PrivateApplicationPackageDetailsGetArgs>? PackageDetails { get; set; }

        /// <summary>
        /// The package's type.
        /// </summary>
        [Input("packageType")]
        public Input<string>? PackageType { get; set; }

        /// <summary>
        /// (Updatable) A short description of the private application.
        /// </summary>
        [Input("shortDescription")]
        public Input<string>? ShortDescription { get; set; }

        /// <summary>
        /// The lifecycle state of the private application.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The date and time the private application was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2021-05-26T21:10:29.600Z`
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The date and time the private application was last modified, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2021-12-10T05:10:29.721Z`
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        public PrivateApplicationState()
        {
        }
        public static new PrivateApplicationState Empty => new PrivateApplicationState();
    }
}
