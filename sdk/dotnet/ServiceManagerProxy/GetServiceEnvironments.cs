// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ServiceManagerProxy
{
    public static class GetServiceEnvironments
    {
        /// <summary>
        /// This data source provides the list of Service Environments in Oracle Cloud Infrastructure Service Manager Proxy service.
        /// 
        /// List the details of Software as a Service (SaaS) environments provisioned by Service Manager.
        /// Information includes the service instance endpoints and service definition details.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testServiceEnvironments = Oci.ServiceManagerProxy.GetServiceEnvironments.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         DisplayName = @var.Service_environment_display_name,
        ///         ServiceEnvironmentId = oci_service_manager_proxy_service_environment.Test_service_environment.Id,
        ///         ServiceEnvironmentType = @var.Service_environment_service_environment_type,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetServiceEnvironmentsResult> InvokeAsync(GetServiceEnvironmentsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetServiceEnvironmentsResult>("oci:ServiceManagerProxy/getServiceEnvironments:getServiceEnvironments", args ?? new GetServiceEnvironmentsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Service Environments in Oracle Cloud Infrastructure Service Manager Proxy service.
        /// 
        /// List the details of Software as a Service (SaaS) environments provisioned by Service Manager.
        /// Information includes the service instance endpoints and service definition details.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testServiceEnvironments = Oci.ServiceManagerProxy.GetServiceEnvironments.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         DisplayName = @var.Service_environment_display_name,
        ///         ServiceEnvironmentId = oci_service_manager_proxy_service_environment.Test_service_environment.Id,
        ///         ServiceEnvironmentType = @var.Service_environment_service_environment_type,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetServiceEnvironmentsResult> Invoke(GetServiceEnvironmentsInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetServiceEnvironmentsResult>("oci:ServiceManagerProxy/getServiceEnvironments:getServiceEnvironments", args ?? new GetServiceEnvironmentsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetServiceEnvironmentsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// The display name of the resource.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetServiceEnvironmentsFilterArgs>? _filters;
        public List<Inputs.GetServiceEnvironmentsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetServiceEnvironmentsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The unique identifier associated with the service environment.
        /// </summary>
        [Input("serviceEnvironmentId")]
        public string? ServiceEnvironmentId { get; set; }

        /// <summary>
        /// The environment's service definition type.  For example, "RGBUOROMS" is the service definition type for "Oracle Retail Order Management Cloud Service".
        /// </summary>
        [Input("serviceEnvironmentType")]
        public string? ServiceEnvironmentType { get; set; }

        public GetServiceEnvironmentsArgs()
        {
        }
        public static new GetServiceEnvironmentsArgs Empty => new GetServiceEnvironmentsArgs();
    }

    public sealed class GetServiceEnvironmentsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// The display name of the resource.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetServiceEnvironmentsFilterInputArgs>? _filters;
        public InputList<Inputs.GetServiceEnvironmentsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetServiceEnvironmentsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The unique identifier associated with the service environment.
        /// </summary>
        [Input("serviceEnvironmentId")]
        public Input<string>? ServiceEnvironmentId { get; set; }

        /// <summary>
        /// The environment's service definition type.  For example, "RGBUOROMS" is the service definition type for "Oracle Retail Order Management Cloud Service".
        /// </summary>
        [Input("serviceEnvironmentType")]
        public Input<string>? ServiceEnvironmentType { get; set; }

        public GetServiceEnvironmentsInvokeArgs()
        {
        }
        public static new GetServiceEnvironmentsInvokeArgs Empty => new GetServiceEnvironmentsInvokeArgs();
    }


    [OutputType]
    public sealed class GetServiceEnvironmentsResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the compartment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Display name of the service. For example, "Oracle Retail Order Management Cloud Service".
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetServiceEnvironmentsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of service_environment_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetServiceEnvironmentsServiceEnvironmentCollectionResult> ServiceEnvironmentCollections;
        public readonly string? ServiceEnvironmentId;
        public readonly string? ServiceEnvironmentType;

        [OutputConstructor]
        private GetServiceEnvironmentsResult(
            string compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetServiceEnvironmentsFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetServiceEnvironmentsServiceEnvironmentCollectionResult> serviceEnvironmentCollections,

            string? serviceEnvironmentId,

            string? serviceEnvironmentType)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            ServiceEnvironmentCollections = serviceEnvironmentCollections;
            ServiceEnvironmentId = serviceEnvironmentId;
            ServiceEnvironmentType = serviceEnvironmentType;
        }
    }
}
