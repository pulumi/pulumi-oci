// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ServiceMesh
{
    public static class GetAccessPolicies
    {
        /// <summary>
        /// This data source provides the list of Access Policies in Oracle Cloud Infrastructure Service Mesh service.
        /// 
        /// Returns a list of AccessPolicy objects.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAccessPolicies = Oci.ServiceMesh.GetAccessPolicies.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         Id = accessPolicyId,
        ///         MeshId = testMesh.Id,
        ///         Name = accessPolicyName,
        ///         State = accessPolicyState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetAccessPoliciesResult> InvokeAsync(GetAccessPoliciesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAccessPoliciesResult>("oci:ServiceMesh/getAccessPolicies:getAccessPolicies", args ?? new GetAccessPoliciesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Access Policies in Oracle Cloud Infrastructure Service Mesh service.
        /// 
        /// Returns a list of AccessPolicy objects.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAccessPolicies = Oci.ServiceMesh.GetAccessPolicies.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         Id = accessPolicyId,
        ///         MeshId = testMesh.Id,
        ///         Name = accessPolicyName,
        ///         State = accessPolicyState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAccessPoliciesResult> Invoke(GetAccessPoliciesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAccessPoliciesResult>("oci:ServiceMesh/getAccessPolicies:getAccessPolicies", args ?? new GetAccessPoliciesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Access Policies in Oracle Cloud Infrastructure Service Mesh service.
        /// 
        /// Returns a list of AccessPolicy objects.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testAccessPolicies = Oci.ServiceMesh.GetAccessPolicies.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         Id = accessPolicyId,
        ///         MeshId = testMesh.Id,
        ///         Name = accessPolicyName,
        ///         State = accessPolicyState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAccessPoliciesResult> Invoke(GetAccessPoliciesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAccessPoliciesResult>("oci:ServiceMesh/getAccessPolicies:getAccessPolicies", args ?? new GetAccessPoliciesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAccessPoliciesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetAccessPoliciesFilterArgs>? _filters;
        public List<Inputs.GetAccessPoliciesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetAccessPoliciesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Unique AccessPolicy identifier.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// Unique Mesh identifier.
        /// </summary>
        [Input("meshId")]
        public string? MeshId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the entire name given.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// A filter to return only resources that match the life cycle state given.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetAccessPoliciesArgs()
        {
        }
        public static new GetAccessPoliciesArgs Empty => new GetAccessPoliciesArgs();
    }

    public sealed class GetAccessPoliciesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetAccessPoliciesFilterInputArgs>? _filters;
        public InputList<Inputs.GetAccessPoliciesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetAccessPoliciesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Unique AccessPolicy identifier.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Unique Mesh identifier.
        /// </summary>
        [Input("meshId")]
        public Input<string>? MeshId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the entire name given.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A filter to return only resources that match the life cycle state given.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetAccessPoliciesInvokeArgs()
        {
        }
        public static new GetAccessPoliciesInvokeArgs Empty => new GetAccessPoliciesInvokeArgs();
    }


    [OutputType]
    public sealed class GetAccessPoliciesResult
    {
        /// <summary>
        /// The list of access_policy_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAccessPoliciesAccessPolicyCollectionResult> AccessPolicyCollections;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        public readonly string CompartmentId;
        public readonly ImmutableArray<Outputs.GetAccessPoliciesFilterResult> Filters;
        /// <summary>
        /// Unique identifier that is immutable on creation.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The OCID of the service mesh in which this access policy is created.
        /// </summary>
        public readonly string? MeshId;
        /// <summary>
        /// A user-friendly name. The name has to be unique within the same service mesh and cannot be changed after creation. Avoid entering confidential information.  Example: `My unique resource name`
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The current state of the Resource.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetAccessPoliciesResult(
            ImmutableArray<Outputs.GetAccessPoliciesAccessPolicyCollectionResult> accessPolicyCollections,

            string compartmentId,

            ImmutableArray<Outputs.GetAccessPoliciesFilterResult> filters,

            string? id,

            string? meshId,

            string? name,

            string? state)
        {
            AccessPolicyCollections = accessPolicyCollections;
            CompartmentId = compartmentId;
            Filters = filters;
            Id = id;
            MeshId = meshId;
            Name = name;
            State = state;
        }
    }
}
