// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ServiceMesh
{
    public static class GetIngressGateway
    {
        /// <summary>
        /// This data source provides details about a specific Ingress Gateway resource in Oracle Cloud Infrastructure Service Mesh service.
        /// 
        /// Gets an IngressGateway by identifier.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testIngressGateway = Oci.ServiceMesh.GetIngressGateway.Invoke(new()
        ///     {
        ///         IngressGatewayId = testIngressGatewayOciServiceMeshIngressGateway.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetIngressGatewayResult> InvokeAsync(GetIngressGatewayArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIngressGatewayResult>("oci:ServiceMesh/getIngressGateway:getIngressGateway", args ?? new GetIngressGatewayArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Ingress Gateway resource in Oracle Cloud Infrastructure Service Mesh service.
        /// 
        /// Gets an IngressGateway by identifier.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testIngressGateway = Oci.ServiceMesh.GetIngressGateway.Invoke(new()
        ///     {
        ///         IngressGatewayId = testIngressGatewayOciServiceMeshIngressGateway.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetIngressGatewayResult> Invoke(GetIngressGatewayInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIngressGatewayResult>("oci:ServiceMesh/getIngressGateway:getIngressGateway", args ?? new GetIngressGatewayInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIngressGatewayArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique IngressGateway identifier.
        /// </summary>
        [Input("ingressGatewayId", required: true)]
        public string IngressGatewayId { get; set; } = null!;

        public GetIngressGatewayArgs()
        {
        }
        public static new GetIngressGatewayArgs Empty => new GetIngressGatewayArgs();
    }

    public sealed class GetIngressGatewayInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique IngressGateway identifier.
        /// </summary>
        [Input("ingressGatewayId", required: true)]
        public Input<string> IngressGatewayId { get; set; } = null!;

        public GetIngressGatewayInvokeArgs()
        {
        }
        public static new GetIngressGatewayInvokeArgs Empty => new GetIngressGatewayInvokeArgs();
    }


    [OutputType]
    public sealed class GetIngressGatewayResult
    {
        /// <summary>
        /// This configuration determines if logging is enabled and where the logs will be output.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetIngressGatewayAccessLoggingResult> AccessLoggings;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// Description of the resource. It can be changed after creation. Avoid entering confidential information.  Example: `This is my new resource`
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// Array of hostnames and their listener configuration that this gateway will bind to.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetIngressGatewayHostResult> Hosts;
        /// <summary>
        /// Unique identifier that is immutable on creation.
        /// </summary>
        public readonly string Id;
        public readonly string IngressGatewayId;
        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed state.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// The OCID of the service mesh in which this ingress gateway is created.
        /// </summary>
        public readonly string MeshId;
        /// <summary>
        /// Mutual TLS settings used when sending requests to virtual services within the mesh.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetIngressGatewayMtlResult> Mtls;
        /// <summary>
        /// A user-friendly name. The name has to be unique within the same service mesh and cannot be changed after creation. Avoid entering confidential information.  Example: `My unique resource name`
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The current state of the Resource.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> SystemTags;
        /// <summary>
        /// The time when this resource was created in an RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time when this resource was updated in an RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetIngressGatewayResult(
            ImmutableArray<Outputs.GetIngressGatewayAccessLoggingResult> accessLoggings,

            string compartmentId,

            ImmutableDictionary<string, object> definedTags,

            string description,

            ImmutableDictionary<string, object> freeformTags,

            ImmutableArray<Outputs.GetIngressGatewayHostResult> hosts,

            string id,

            string ingressGatewayId,

            string lifecycleDetails,

            string meshId,

            ImmutableArray<Outputs.GetIngressGatewayMtlResult> mtls,

            string name,

            string state,

            ImmutableDictionary<string, object> systemTags,

            string timeCreated,

            string timeUpdated)
        {
            AccessLoggings = accessLoggings;
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            Description = description;
            FreeformTags = freeformTags;
            Hosts = hosts;
            Id = id;
            IngressGatewayId = ingressGatewayId;
            LifecycleDetails = lifecycleDetails;
            MeshId = meshId;
            Mtls = mtls;
            Name = name;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
