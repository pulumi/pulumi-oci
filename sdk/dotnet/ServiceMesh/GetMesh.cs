// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ServiceMesh
{
    public static class GetMesh
    {
        /// <summary>
        /// This data source provides details about a specific Mesh resource in Oracle Cloud Infrastructure Service Mesh service.
        /// 
        /// Gets a Mesh by identifier.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMesh = Oci.ServiceMesh.GetMesh.Invoke(new()
        ///     {
        ///         MeshId = testMeshOciServiceMeshMesh.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetMeshResult> InvokeAsync(GetMeshArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMeshResult>("oci:ServiceMesh/getMesh:getMesh", args ?? new GetMeshArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Mesh resource in Oracle Cloud Infrastructure Service Mesh service.
        /// 
        /// Gets a Mesh by identifier.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMesh = Oci.ServiceMesh.GetMesh.Invoke(new()
        ///     {
        ///         MeshId = testMeshOciServiceMeshMesh.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetMeshResult> Invoke(GetMeshInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMeshResult>("oci:ServiceMesh/getMesh:getMesh", args ?? new GetMeshInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMeshArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique Mesh identifier.
        /// </summary>
        [Input("meshId", required: true)]
        public string MeshId { get; set; } = null!;

        public GetMeshArgs()
        {
        }
        public static new GetMeshArgs Empty => new GetMeshArgs();
    }

    public sealed class GetMeshInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique Mesh identifier.
        /// </summary>
        [Input("meshId", required: true)]
        public Input<string> MeshId { get; set; } = null!;

        public GetMeshInvokeArgs()
        {
        }
        public static new GetMeshInvokeArgs Empty => new GetMeshInvokeArgs();
    }


    [OutputType]
    public sealed class GetMeshResult
    {
        /// <summary>
        /// A list of certificate authority resources to use for creating leaf certificates for mTLS authentication. Currently we only support one certificate authority, but this may expand in future releases. Request with more than one certificate authority will be rejected.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMeshCertificateAuthorityResult> CertificateAuthorities;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// Description of the resource. It can be changed after creation. Avoid entering confidential information.  Example: `This is my new resource`
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// A user-friendly name. The name does not have to be unique and can be changed after creation. Avoid entering confidential information.  Example: `My new resource`
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// Unique identifier that is immutable on creation.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed state.
        /// </summary>
        public readonly string LifecycleDetails;
        public readonly string MeshId;
        /// <summary>
        /// Sets a minimum level of mTLS authentication for all virtual services within the mesh.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMeshMtlResult> Mtls;
        /// <summary>
        /// The current state of the Resource.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// The time when this resource was created in an RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time when this resource was updated in an RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetMeshResult(
            ImmutableArray<Outputs.GetMeshCertificateAuthorityResult> certificateAuthorities,

            string compartmentId,

            ImmutableDictionary<string, string> definedTags,

            string description,

            string displayName,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            string lifecycleDetails,

            string meshId,

            ImmutableArray<Outputs.GetMeshMtlResult> mtls,

            string state,

            ImmutableDictionary<string, string> systemTags,

            string timeCreated,

            string timeUpdated)
        {
            CertificateAuthorities = certificateAuthorities;
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            LifecycleDetails = lifecycleDetails;
            MeshId = meshId;
            Mtls = mtls;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
