// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ServiceMesh
{
    public static class GetMeshes
    {
        /// <summary>
        /// This data source provides the list of Meshes in Oracle Cloud Infrastructure Service Mesh service.
        /// 
        /// Returns a list of Mesh objects.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMeshes = Oci.ServiceMesh.GetMeshes.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         DisplayName = @var.Mesh_display_name,
        ///         Id = @var.Mesh_id,
        ///         State = @var.Mesh_state,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetMeshesResult> InvokeAsync(GetMeshesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMeshesResult>("oci:ServiceMesh/getMeshes:getMeshes", args ?? new GetMeshesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Meshes in Oracle Cloud Infrastructure Service Mesh service.
        /// 
        /// Returns a list of Mesh objects.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMeshes = Oci.ServiceMesh.GetMeshes.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         DisplayName = @var.Mesh_display_name,
        ///         Id = @var.Mesh_id,
        ///         State = @var.Mesh_state,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetMeshesResult> Invoke(GetMeshesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMeshesResult>("oci:ServiceMesh/getMeshes:getMeshes", args ?? new GetMeshesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMeshesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire displayName given.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetMeshesFilterArgs>? _filters;
        public List<Inputs.GetMeshesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetMeshesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Unique Mesh identifier.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// A filter to return only resources that match the life cycle state given.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetMeshesArgs()
        {
        }
        public static new GetMeshesArgs Empty => new GetMeshesArgs();
    }

    public sealed class GetMeshesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire displayName given.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetMeshesFilterInputArgs>? _filters;
        public InputList<Inputs.GetMeshesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetMeshesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Unique Mesh identifier.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// A filter to return only resources that match the life cycle state given.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetMeshesInvokeArgs()
        {
        }
        public static new GetMeshesInvokeArgs Empty => new GetMeshesInvokeArgs();
    }


    [OutputType]
    public sealed class GetMeshesResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// A user-friendly name. The name does not have to be unique and can be changed after creation. Avoid entering confidential information.  Example: `My new resource`
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetMeshesFilterResult> Filters;
        /// <summary>
        /// Unique identifier that is immutable on creation.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The list of mesh_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMeshesMeshCollectionResult> MeshCollections;
        /// <summary>
        /// The current state of the Resource.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetMeshesResult(
            string compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetMeshesFilterResult> filters,

            string? id,

            ImmutableArray<Outputs.GetMeshesMeshCollectionResult> meshCollections,

            string? state)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            MeshCollections = meshCollections;
            State = state;
        }
    }
}
