// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ServiceMesh.Inputs
{

    public sealed class VirtualServiceMtlsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The OCID of the certificate resource that will be used for mTLS authentication with other virtual services in the mesh.
        /// </summary>
        [Input("certificateId")]
        public Input<string>? CertificateId { get; set; }

        /// <summary>
        /// (Updatable) The number of days the mTLS certificate is valid.  This value should be less than the Maximum Validity Duration  for Certificates (Days) setting on the Certificate Authority associated with this Mesh.  The certificate will be automatically renewed after 2/3 of the validity period, so a certificate with a maximum validity of 45 days will be renewed every 30 days.
        /// </summary>
        [Input("maximumValidity")]
        public Input<int>? MaximumValidity { get; set; }

        /// <summary>
        /// (Updatable) DISABLED: Connection is not tunneled. PERMISSIVE: Connection can be either plaintext or an mTLS tunnel. STRICT: Connection is an mTLS tunnel.  Clients without a valid certificate will be rejected.
        /// </summary>
        [Input("mode", required: true)]
        public Input<string> Mode { get; set; } = null!;

        public VirtualServiceMtlsArgs()
        {
        }
        public static new VirtualServiceMtlsArgs Empty => new VirtualServiceMtlsArgs();
    }
}
