// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ServiceMesh.Outputs
{

    [OutputType]
    public sealed class GetIngressGatewayRouteTablesIngressGatewayRouteTableCollectionItemRouteRuleResult
    {
        /// <summary>
        /// The destination of the request.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetIngressGatewayRouteTablesIngressGatewayRouteTableCollectionItemRouteRuleDestinationResult> Destinations;
        /// <summary>
        /// The ingress gateway host to which the route rule attaches. If not specified, the route rule gets attached to all hosts on the ingress gateway.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetIngressGatewayRouteTablesIngressGatewayRouteTableCollectionItemRouteRuleIngressGatewayHostResult> IngressGatewayHosts;
        /// <summary>
        /// If true, the rule will check that the content-type header has a application/grpc or one of the various application/grpc+ values.
        /// </summary>
        public readonly bool IsGrpc;
        /// <summary>
        /// If true, the hostname will be rewritten to the target virtual deployment's DNS hostname.
        /// </summary>
        public readonly bool IsHostRewriteEnabled;
        /// <summary>
        /// If true, the matched path prefix will be rewritten to '/' before being directed to the target virtual deployment.
        /// </summary>
        public readonly bool IsPathRewriteEnabled;
        /// <summary>
        /// Route to match
        /// </summary>
        public readonly string Path;
        /// <summary>
        /// Match type for the route
        /// </summary>
        public readonly string PathType;
        /// <summary>
        /// Type of protocol.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetIngressGatewayRouteTablesIngressGatewayRouteTableCollectionItemRouteRuleResult(
            ImmutableArray<Outputs.GetIngressGatewayRouteTablesIngressGatewayRouteTableCollectionItemRouteRuleDestinationResult> destinations,

            ImmutableArray<Outputs.GetIngressGatewayRouteTablesIngressGatewayRouteTableCollectionItemRouteRuleIngressGatewayHostResult> ingressGatewayHosts,

            bool isGrpc,

            bool isHostRewriteEnabled,

            bool isPathRewriteEnabled,

            string path,

            string pathType,

            string type)
        {
            Destinations = destinations;
            IngressGatewayHosts = ingressGatewayHosts;
            IsGrpc = isGrpc;
            IsHostRewriteEnabled = isHostRewriteEnabled;
            IsPathRewriteEnabled = isPathRewriteEnabled;
            Path = path;
            PathType = pathType;
            Type = type;
        }
    }
}
