// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ServiceMesh
{
    /// <summary>
    /// This resource provides the Virtual Deployment resource in Oracle Cloud Infrastructure Service Mesh service.
    /// 
    /// Creates a new VirtualDeployment.
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testVirtualDeployment = new Oci.ServiceMesh.VirtualDeployment("testVirtualDeployment", new()
    ///     {
    ///         CompartmentId = @var.Compartment_id,
    ///         VirtualServiceId = oci_service_mesh_virtual_service.Test_virtual_service.Id,
    ///         AccessLogging = new Oci.ServiceMesh.Inputs.VirtualDeploymentAccessLoggingArgs
    ///         {
    ///             IsEnabled = @var.Virtual_deployment_access_logging_is_enabled,
    ///         },
    ///         DefinedTags = 
    ///         {
    ///             { "foo-namespace.bar-key", "value" },
    ///         },
    ///         Description = @var.Virtual_deployment_description,
    ///         FreeformTags = 
    ///         {
    ///             { "bar-key", "value" },
    ///         },
    ///         Listeners = new[]
    ///         {
    ///             new Oci.ServiceMesh.Inputs.VirtualDeploymentListenerArgs
    ///             {
    ///                 Port = @var.Virtual_deployment_listeners_port,
    ///                 Protocol = @var.Virtual_deployment_listeners_protocol,
    ///                 IdleTimeoutInMs = @var.Virtual_deployment_listeners_idle_timeout_in_ms,
    ///                 RequestTimeoutInMs = @var.Virtual_deployment_listeners_request_timeout_in_ms,
    ///             },
    ///         },
    ///         ServiceDiscovery = new Oci.ServiceMesh.Inputs.VirtualDeploymentServiceDiscoveryArgs
    ///         {
    ///             Type = @var.Virtual_deployment_service_discovery_type,
    ///             Hostname = @var.Virtual_deployment_service_discovery_hostname,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// VirtualDeployments can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:ServiceMesh/virtualDeployment:VirtualDeployment test_virtual_deployment "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:ServiceMesh/virtualDeployment:VirtualDeployment")]
    public partial class VirtualDeployment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) This configuration determines if logging is enabled and where the logs will be output.
        /// </summary>
        [Output("accessLogging")]
        public Output<Outputs.VirtualDeploymentAccessLogging> AccessLogging { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, object>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Description of the resource. It can be changed after creation. Avoid entering confidential information.  Example: `This is my new resource`
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, object>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed state.
        /// </summary>
        [Output("lifecycleDetails")]
        public Output<string> LifecycleDetails { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The listeners for the virtual deployment.
        /// </summary>
        [Output("listeners")]
        public Output<ImmutableArray<Outputs.VirtualDeploymentListener>> Listeners { get; private set; } = null!;

        /// <summary>
        /// A user-friendly name. The name must be unique within the same virtual service and cannot be changed after creation. Avoid entering confidential information.  Example: `My unique resource name`
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Service Discovery configuration for virtual deployments.
        /// </summary>
        [Output("serviceDiscovery")]
        public Output<Outputs.VirtualDeploymentServiceDiscovery> ServiceDiscovery { get; private set; } = null!;

        /// <summary>
        /// The current state of the Resource.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        [Output("systemTags")]
        public Output<ImmutableDictionary<string, object>> SystemTags { get; private set; } = null!;

        /// <summary>
        /// The time when this resource was created in an RFC3339 formatted datetime string.
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The time when this resource was updated in an RFC3339 formatted datetime string.
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;

        /// <summary>
        /// The OCID of the service mesh in which this access policy is created.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("virtualServiceId")]
        public Output<string> VirtualServiceId { get; private set; } = null!;


        /// <summary>
        /// Create a VirtualDeployment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VirtualDeployment(string name, VirtualDeploymentArgs args, CustomResourceOptions? options = null)
            : base("oci:ServiceMesh/virtualDeployment:VirtualDeployment", name, args ?? new VirtualDeploymentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VirtualDeployment(string name, Input<string> id, VirtualDeploymentState? state = null, CustomResourceOptions? options = null)
            : base("oci:ServiceMesh/virtualDeployment:VirtualDeployment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VirtualDeployment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VirtualDeployment Get(string name, Input<string> id, VirtualDeploymentState? state = null, CustomResourceOptions? options = null)
        {
            return new VirtualDeployment(name, id, state, options);
        }
    }

    public sealed class VirtualDeploymentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) This configuration determines if logging is enabled and where the logs will be output.
        /// </summary>
        [Input("accessLogging")]
        public Input<Inputs.VirtualDeploymentAccessLoggingArgs>? AccessLogging { get; set; }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) Description of the resource. It can be changed after creation. Avoid entering confidential information.  Example: `This is my new resource`
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        [Input("listeners")]
        private InputList<Inputs.VirtualDeploymentListenerArgs>? _listeners;

        /// <summary>
        /// (Updatable) The listeners for the virtual deployment.
        /// </summary>
        public InputList<Inputs.VirtualDeploymentListenerArgs> Listeners
        {
            get => _listeners ?? (_listeners = new InputList<Inputs.VirtualDeploymentListenerArgs>());
            set => _listeners = value;
        }

        /// <summary>
        /// A user-friendly name. The name must be unique within the same virtual service and cannot be changed after creation. Avoid entering confidential information.  Example: `My unique resource name`
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// (Updatable) Service Discovery configuration for virtual deployments.
        /// </summary>
        [Input("serviceDiscovery")]
        public Input<Inputs.VirtualDeploymentServiceDiscoveryArgs>? ServiceDiscovery { get; set; }

        /// <summary>
        /// The OCID of the service mesh in which this access policy is created.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("virtualServiceId", required: true)]
        public Input<string> VirtualServiceId { get; set; } = null!;

        public VirtualDeploymentArgs()
        {
        }
        public static new VirtualDeploymentArgs Empty => new VirtualDeploymentArgs();
    }

    public sealed class VirtualDeploymentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) This configuration determines if logging is enabled and where the logs will be output.
        /// </summary>
        [Input("accessLogging")]
        public Input<Inputs.VirtualDeploymentAccessLoggingGetArgs>? AccessLogging { get; set; }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) Description of the resource. It can be changed after creation. Avoid entering confidential information.  Example: `This is my new resource`
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed state.
        /// </summary>
        [Input("lifecycleDetails")]
        public Input<string>? LifecycleDetails { get; set; }

        [Input("listeners")]
        private InputList<Inputs.VirtualDeploymentListenerGetArgs>? _listeners;

        /// <summary>
        /// (Updatable) The listeners for the virtual deployment.
        /// </summary>
        public InputList<Inputs.VirtualDeploymentListenerGetArgs> Listeners
        {
            get => _listeners ?? (_listeners = new InputList<Inputs.VirtualDeploymentListenerGetArgs>());
            set => _listeners = value;
        }

        /// <summary>
        /// A user-friendly name. The name must be unique within the same virtual service and cannot be changed after creation. Avoid entering confidential information.  Example: `My unique resource name`
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// (Updatable) Service Discovery configuration for virtual deployments.
        /// </summary>
        [Input("serviceDiscovery")]
        public Input<Inputs.VirtualDeploymentServiceDiscoveryGetArgs>? ServiceDiscovery { get; set; }

        /// <summary>
        /// The current state of the Resource.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("systemTags")]
        private InputMap<object>? _systemTags;

        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public InputMap<object> SystemTags
        {
            get => _systemTags ?? (_systemTags = new InputMap<object>());
            set => _systemTags = value;
        }

        /// <summary>
        /// The time when this resource was created in an RFC3339 formatted datetime string.
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The time when this resource was updated in an RFC3339 formatted datetime string.
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        /// <summary>
        /// The OCID of the service mesh in which this access policy is created.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("virtualServiceId")]
        public Input<string>? VirtualServiceId { get; set; }

        public VirtualDeploymentState()
        {
        }
        public static new VirtualDeploymentState Empty => new VirtualDeploymentState();
    }
}
