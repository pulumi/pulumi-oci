// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.StackMonitoring
{
    /// <summary>
    /// This resource provides the Baselineable Metric resource in Oracle Cloud Infrastructure Stack Monitoring service.
    /// 
    /// Creates the specified Baseline-able metric
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testBaselineableMetric = new Oci.StackMonitoring.BaselineableMetric("testBaselineableMetric", new()
    ///     {
    ///         Column = @var.Baselineable_metric_column,
    ///         CompartmentId = @var.Compartment_id,
    ///         Namespace = @var.Baselineable_metric_namespace,
    ///         ResourceGroup = @var.Baselineable_metric_resource_group,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// BaselineableMetrics can be imported using the `id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import oci:StackMonitoring/baselineableMetric:BaselineableMetric test_baselineable_metric "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:StackMonitoring/baselineableMetric:BaselineableMetric")]
    public partial class BaselineableMetric : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) metric column name
        /// </summary>
        [Output("column")]
        public Output<string> Column { get; private set; } = null!;

        /// <summary>
        /// (Updatable) OCID of the compartment
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// Created user id
        /// </summary>
        [Output("createdBy")]
        public Output<string> CreatedBy { get; private set; } = null!;

        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, object>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, object>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// Is the metric created out of box, default false
        /// </summary>
        [Output("isOutOfBox")]
        public Output<bool> IsOutOfBox { get; private set; } = null!;

        /// <summary>
        /// last Updated user id
        /// </summary>
        [Output("lastUpdatedBy")]
        public Output<string> LastUpdatedBy { get; private set; } = null!;

        /// <summary>
        /// (Updatable) name of the metric
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// (Updatable) namespace of the metric
        /// </summary>
        [Output("namespace")]
        public Output<string> Namespace { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Resource group of the metric
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("resourceGroup")]
        public Output<string> ResourceGroup { get; private set; } = null!;

        /// <summary>
        /// The current lifecycle state of the metric extension
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        [Output("systemTags")]
        public Output<ImmutableDictionary<string, object>> SystemTags { get; private set; } = null!;

        /// <summary>
        /// OCID of the tenancy
        /// </summary>
        [Output("tenancyId")]
        public Output<string> TenancyId { get; private set; } = null!;

        /// <summary>
        /// creation date
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// last updated time
        /// </summary>
        [Output("timeLastUpdated")]
        public Output<string> TimeLastUpdated { get; private set; } = null!;


        /// <summary>
        /// Create a BaselineableMetric resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BaselineableMetric(string name, BaselineableMetricArgs args, CustomResourceOptions? options = null)
            : base("oci:StackMonitoring/baselineableMetric:BaselineableMetric", name, args ?? new BaselineableMetricArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BaselineableMetric(string name, Input<string> id, BaselineableMetricState? state = null, CustomResourceOptions? options = null)
            : base("oci:StackMonitoring/baselineableMetric:BaselineableMetric", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BaselineableMetric resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BaselineableMetric Get(string name, Input<string> id, BaselineableMetricState? state = null, CustomResourceOptions? options = null)
        {
            return new BaselineableMetric(name, id, state, options);
        }
    }

    public sealed class BaselineableMetricArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) metric column name
        /// </summary>
        [Input("column", required: true)]
        public Input<string> Column { get; set; } = null!;

        /// <summary>
        /// (Updatable) OCID of the compartment
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// (Updatable) name of the metric
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// (Updatable) namespace of the metric
        /// </summary>
        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        /// <summary>
        /// (Updatable) Resource group of the metric
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("resourceGroup", required: true)]
        public Input<string> ResourceGroup { get; set; } = null!;

        public BaselineableMetricArgs()
        {
        }
        public static new BaselineableMetricArgs Empty => new BaselineableMetricArgs();
    }

    public sealed class BaselineableMetricState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) metric column name
        /// </summary>
        [Input("column")]
        public Input<string>? Column { get; set; }

        /// <summary>
        /// (Updatable) OCID of the compartment
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// Created user id
        /// </summary>
        [Input("createdBy")]
        public Input<string>? CreatedBy { get; set; }

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// Is the metric created out of box, default false
        /// </summary>
        [Input("isOutOfBox")]
        public Input<bool>? IsOutOfBox { get; set; }

        /// <summary>
        /// last Updated user id
        /// </summary>
        [Input("lastUpdatedBy")]
        public Input<string>? LastUpdatedBy { get; set; }

        /// <summary>
        /// (Updatable) name of the metric
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// (Updatable) namespace of the metric
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        /// <summary>
        /// (Updatable) Resource group of the metric
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("resourceGroup")]
        public Input<string>? ResourceGroup { get; set; }

        /// <summary>
        /// The current lifecycle state of the metric extension
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("systemTags")]
        private InputMap<object>? _systemTags;

        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public InputMap<object> SystemTags
        {
            get => _systemTags ?? (_systemTags = new InputMap<object>());
            set => _systemTags = value;
        }

        /// <summary>
        /// OCID of the tenancy
        /// </summary>
        [Input("tenancyId")]
        public Input<string>? TenancyId { get; set; }

        /// <summary>
        /// creation date
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// last updated time
        /// </summary>
        [Input("timeLastUpdated")]
        public Input<string>? TimeLastUpdated { get; set; }

        public BaselineableMetricState()
        {
        }
        public static new BaselineableMetricState Empty => new BaselineableMetricState();
    }
}
