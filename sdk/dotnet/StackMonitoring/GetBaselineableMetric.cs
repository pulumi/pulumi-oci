// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.StackMonitoring
{
    public static class GetBaselineableMetric
    {
        /// <summary>
        /// This data source provides details about a specific Baselineable Metric resource in Oracle Cloud Infrastructure Stack Monitoring service.
        /// 
        /// Get the Baseline-able metric for the given id
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testBaselineableMetric = Oci.StackMonitoring.GetBaselineableMetric.Invoke(new()
        ///     {
        ///         BaselineableMetricId = oci_stack_monitoring_baselineable_metric.Test_baselineable_metric.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetBaselineableMetricResult> InvokeAsync(GetBaselineableMetricArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBaselineableMetricResult>("oci:StackMonitoring/getBaselineableMetric:getBaselineableMetric", args ?? new GetBaselineableMetricArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Baselineable Metric resource in Oracle Cloud Infrastructure Stack Monitoring service.
        /// 
        /// Get the Baseline-able metric for the given id
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testBaselineableMetric = Oci.StackMonitoring.GetBaselineableMetric.Invoke(new()
        ///     {
        ///         BaselineableMetricId = oci_stack_monitoring_baselineable_metric.Test_baselineable_metric.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetBaselineableMetricResult> Invoke(GetBaselineableMetricInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBaselineableMetricResult>("oci:StackMonitoring/getBaselineableMetric:getBaselineableMetric", args ?? new GetBaselineableMetricInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBaselineableMetricArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier for the metric
        /// </summary>
        [Input("baselineableMetricId", required: true)]
        public string BaselineableMetricId { get; set; } = null!;

        public GetBaselineableMetricArgs()
        {
        }
        public static new GetBaselineableMetricArgs Empty => new GetBaselineableMetricArgs();
    }

    public sealed class GetBaselineableMetricInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier for the metric
        /// </summary>
        [Input("baselineableMetricId", required: true)]
        public Input<string> BaselineableMetricId { get; set; } = null!;

        public GetBaselineableMetricInvokeArgs()
        {
        }
        public static new GetBaselineableMetricInvokeArgs Empty => new GetBaselineableMetricInvokeArgs();
    }


    [OutputType]
    public sealed class GetBaselineableMetricResult
    {
        public readonly string BaselineableMetricId;
        /// <summary>
        /// metric column name
        /// </summary>
        public readonly string Column;
        /// <summary>
        /// OCID of the compartment
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Created user id
        /// </summary>
        public readonly string CreatedBy;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// OCID of the metric
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Is the metric created out of box, default false
        /// </summary>
        public readonly bool IsOutOfBox;
        /// <summary>
        /// last Updated user id
        /// </summary>
        public readonly string LastUpdatedBy;
        /// <summary>
        /// name of the metric
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// namespace of the metric
        /// </summary>
        public readonly string Namespace;
        /// <summary>
        /// Resource group of the metric
        /// </summary>
        public readonly string ResourceGroup;
        /// <summary>
        /// The current lifecycle state of the metric extension
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> SystemTags;
        /// <summary>
        /// OCID of the tenancy
        /// </summary>
        public readonly string TenancyId;
        /// <summary>
        /// creation date
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// last updated time
        /// </summary>
        public readonly string TimeLastUpdated;

        [OutputConstructor]
        private GetBaselineableMetricResult(
            string baselineableMetricId,

            string column,

            string compartmentId,

            string createdBy,

            ImmutableDictionary<string, object> definedTags,

            ImmutableDictionary<string, object> freeformTags,

            string id,

            bool isOutOfBox,

            string lastUpdatedBy,

            string name,

            string @namespace,

            string resourceGroup,

            string state,

            ImmutableDictionary<string, object> systemTags,

            string tenancyId,

            string timeCreated,

            string timeLastUpdated)
        {
            BaselineableMetricId = baselineableMetricId;
            Column = column;
            CompartmentId = compartmentId;
            CreatedBy = createdBy;
            DefinedTags = definedTags;
            FreeformTags = freeformTags;
            Id = id;
            IsOutOfBox = isOutOfBox;
            LastUpdatedBy = lastUpdatedBy;
            Name = name;
            Namespace = @namespace;
            ResourceGroup = resourceGroup;
            State = state;
            SystemTags = systemTags;
            TenancyId = tenancyId;
            TimeCreated = timeCreated;
            TimeLastUpdated = timeLastUpdated;
        }
    }
}
