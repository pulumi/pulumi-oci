// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.StackMonitoring
{
    public static class GetBaselineableMetrics
    {
        /// <summary>
        /// This data source provides the list of Baselineable Metrics in Oracle Cloud Infrastructure Stack Monitoring service.
        /// 
        /// List of summary of baseline-able metrics for a given resource group if specified.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testBaselineableMetrics = Oci.StackMonitoring.GetBaselineableMetrics.Invoke(new()
        ///     {
        ///         BaselineableMetricId = testBaselineableMetric.Id,
        ///         CompartmentId = compartmentId,
        ///         IsOutOfBox = baselineableMetricIsOutOfBox,
        ///         MetricNamespace = baselineableMetricMetricNamespace,
        ///         Name = baselineableMetricName,
        ///         ResourceGroup = baselineableMetricResourceGroup,
        ///         ResourceType = baselineableMetricResourceType,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetBaselineableMetricsResult> InvokeAsync(GetBaselineableMetricsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBaselineableMetricsResult>("oci:StackMonitoring/getBaselineableMetrics:getBaselineableMetrics", args ?? new GetBaselineableMetricsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Baselineable Metrics in Oracle Cloud Infrastructure Stack Monitoring service.
        /// 
        /// List of summary of baseline-able metrics for a given resource group if specified.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testBaselineableMetrics = Oci.StackMonitoring.GetBaselineableMetrics.Invoke(new()
        ///     {
        ///         BaselineableMetricId = testBaselineableMetric.Id,
        ///         CompartmentId = compartmentId,
        ///         IsOutOfBox = baselineableMetricIsOutOfBox,
        ///         MetricNamespace = baselineableMetricMetricNamespace,
        ///         Name = baselineableMetricName,
        ///         ResourceGroup = baselineableMetricResourceGroup,
        ///         ResourceType = baselineableMetricResourceType,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetBaselineableMetricsResult> Invoke(GetBaselineableMetricsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBaselineableMetricsResult>("oci:StackMonitoring/getBaselineableMetrics:getBaselineableMetrics", args ?? new GetBaselineableMetricsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Baselineable Metrics in Oracle Cloud Infrastructure Stack Monitoring service.
        /// 
        /// List of summary of baseline-able metrics for a given resource group if specified.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testBaselineableMetrics = Oci.StackMonitoring.GetBaselineableMetrics.Invoke(new()
        ///     {
        ///         BaselineableMetricId = testBaselineableMetric.Id,
        ///         CompartmentId = compartmentId,
        ///         IsOutOfBox = baselineableMetricIsOutOfBox,
        ///         MetricNamespace = baselineableMetricMetricNamespace,
        ///         Name = baselineableMetricName,
        ///         ResourceGroup = baselineableMetricResourceGroup,
        ///         ResourceType = baselineableMetricResourceType,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetBaselineableMetricsResult> Invoke(GetBaselineableMetricsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetBaselineableMetricsResult>("oci:StackMonitoring/getBaselineableMetrics:getBaselineableMetrics", args ?? new GetBaselineableMetricsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBaselineableMetricsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier for the metric
        /// </summary>
        [Input("baselineableMetricId")]
        public string? BaselineableMetricId { get; set; }

        /// <summary>
        /// The ID of the compartment in which data is listed.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        [Input("filters")]
        private List<Inputs.GetBaselineableMetricsFilterArgs>? _filters;
        public List<Inputs.GetBaselineableMetricsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetBaselineableMetricsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Is the baseline enabled metric defined out of box by Oracle or by end-user
        /// </summary>
        [Input("isOutOfBox")]
        public bool? IsOutOfBox { get; set; }

        /// <summary>
        /// A filter to return monitored resource types that has the matching namespace.
        /// </summary>
        [Input("metricNamespace")]
        public string? MetricNamespace { get; set; }

        /// <summary>
        /// Metric Name
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// Resource Group
        /// </summary>
        [Input("resourceGroup")]
        public string? ResourceGroup { get; set; }

        /// <summary>
        /// Resource Type
        /// </summary>
        [Input("resourceType")]
        public string? ResourceType { get; set; }

        public GetBaselineableMetricsArgs()
        {
        }
        public static new GetBaselineableMetricsArgs Empty => new GetBaselineableMetricsArgs();
    }

    public sealed class GetBaselineableMetricsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier for the metric
        /// </summary>
        [Input("baselineableMetricId")]
        public Input<string>? BaselineableMetricId { get; set; }

        /// <summary>
        /// The ID of the compartment in which data is listed.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetBaselineableMetricsFilterInputArgs>? _filters;
        public InputList<Inputs.GetBaselineableMetricsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetBaselineableMetricsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Is the baseline enabled metric defined out of box by Oracle or by end-user
        /// </summary>
        [Input("isOutOfBox")]
        public Input<bool>? IsOutOfBox { get; set; }

        /// <summary>
        /// A filter to return monitored resource types that has the matching namespace.
        /// </summary>
        [Input("metricNamespace")]
        public Input<string>? MetricNamespace { get; set; }

        /// <summary>
        /// Metric Name
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Resource Group
        /// </summary>
        [Input("resourceGroup")]
        public Input<string>? ResourceGroup { get; set; }

        /// <summary>
        /// Resource Type
        /// </summary>
        [Input("resourceType")]
        public Input<string>? ResourceType { get; set; }

        public GetBaselineableMetricsInvokeArgs()
        {
        }
        public static new GetBaselineableMetricsInvokeArgs Empty => new GetBaselineableMetricsInvokeArgs();
    }


    [OutputType]
    public sealed class GetBaselineableMetricsResult
    {
        public readonly string? BaselineableMetricId;
        /// <summary>
        /// The list of baselineable_metric_summary_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBaselineableMetricsBaselineableMetricSummaryCollectionResult> BaselineableMetricSummaryCollections;
        /// <summary>
        /// OCID of the compartment
        /// </summary>
        public readonly string? CompartmentId;
        public readonly ImmutableArray<Outputs.GetBaselineableMetricsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Is the metric created out of box, default false
        /// </summary>
        public readonly bool? IsOutOfBox;
        public readonly string? MetricNamespace;
        /// <summary>
        /// name of the metric
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Resource group of the metric
        /// </summary>
        public readonly string? ResourceGroup;
        /// <summary>
        /// Resource type of the metric
        /// </summary>
        public readonly string? ResourceType;

        [OutputConstructor]
        private GetBaselineableMetricsResult(
            string? baselineableMetricId,

            ImmutableArray<Outputs.GetBaselineableMetricsBaselineableMetricSummaryCollectionResult> baselineableMetricSummaryCollections,

            string? compartmentId,

            ImmutableArray<Outputs.GetBaselineableMetricsFilterResult> filters,

            string id,

            bool? isOutOfBox,

            string? metricNamespace,

            string? name,

            string? resourceGroup,

            string? resourceType)
        {
            BaselineableMetricId = baselineableMetricId;
            BaselineableMetricSummaryCollections = baselineableMetricSummaryCollections;
            CompartmentId = compartmentId;
            Filters = filters;
            Id = id;
            IsOutOfBox = isOutOfBox;
            MetricNamespace = metricNamespace;
            Name = name;
            ResourceGroup = resourceGroup;
            ResourceType = resourceType;
        }
    }
}
