// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.StackMonitoring
{
    public static class GetDefinedMonitoringTemplates
    {
        /// <summary>
        /// This data source provides the list of Defined Monitoring Templates in Oracle Cloud Infrastructure Stack Monitoring service.
        /// 
        /// List Defined Monitoring Templates.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDefinedMonitoringTemplates = Oci.StackMonitoring.GetDefinedMonitoringTemplates.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = definedMonitoringTemplateDisplayName,
        ///         ResourceTypes = definedMonitoringTemplateResourceTypes,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetDefinedMonitoringTemplatesResult> InvokeAsync(GetDefinedMonitoringTemplatesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDefinedMonitoringTemplatesResult>("oci:StackMonitoring/getDefinedMonitoringTemplates:getDefinedMonitoringTemplates", args ?? new GetDefinedMonitoringTemplatesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Defined Monitoring Templates in Oracle Cloud Infrastructure Stack Monitoring service.
        /// 
        /// List Defined Monitoring Templates.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDefinedMonitoringTemplates = Oci.StackMonitoring.GetDefinedMonitoringTemplates.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = definedMonitoringTemplateDisplayName,
        ///         ResourceTypes = definedMonitoringTemplateResourceTypes,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDefinedMonitoringTemplatesResult> Invoke(GetDefinedMonitoringTemplatesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDefinedMonitoringTemplatesResult>("oci:StackMonitoring/getDefinedMonitoringTemplates:getDefinedMonitoringTemplates", args ?? new GetDefinedMonitoringTemplatesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Defined Monitoring Templates in Oracle Cloud Infrastructure Stack Monitoring service.
        /// 
        /// List Defined Monitoring Templates.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDefinedMonitoringTemplates = Oci.StackMonitoring.GetDefinedMonitoringTemplates.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = definedMonitoringTemplateDisplayName,
        ///         ResourceTypes = definedMonitoringTemplateResourceTypes,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDefinedMonitoringTemplatesResult> Invoke(GetDefinedMonitoringTemplatesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDefinedMonitoringTemplatesResult>("oci:StackMonitoring/getDefinedMonitoringTemplates:getDefinedMonitoringTemplates", args ?? new GetDefinedMonitoringTemplatesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDefinedMonitoringTemplatesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tenancy(root) for which  defined monitored templates should be listed.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return monitoring template based on name.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetDefinedMonitoringTemplatesFilterArgs>? _filters;
        public List<Inputs.GetDefinedMonitoringTemplatesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetDefinedMonitoringTemplatesFilterArgs>());
            set => _filters = value;
        }

        [Input("resourceTypes")]
        private List<string>? _resourceTypes;

        /// <summary>
        /// Multiple resource types filter.
        /// </summary>
        public List<string> ResourceTypes
        {
            get => _resourceTypes ?? (_resourceTypes = new List<string>());
            set => _resourceTypes = value;
        }

        public GetDefinedMonitoringTemplatesArgs()
        {
        }
        public static new GetDefinedMonitoringTemplatesArgs Empty => new GetDefinedMonitoringTemplatesArgs();
    }

    public sealed class GetDefinedMonitoringTemplatesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tenancy(root) for which  defined monitored templates should be listed.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return monitoring template based on name.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetDefinedMonitoringTemplatesFilterInputArgs>? _filters;
        public InputList<Inputs.GetDefinedMonitoringTemplatesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetDefinedMonitoringTemplatesFilterInputArgs>());
            set => _filters = value;
        }

        [Input("resourceTypes")]
        private InputList<string>? _resourceTypes;

        /// <summary>
        /// Multiple resource types filter.
        /// </summary>
        public InputList<string> ResourceTypes
        {
            get => _resourceTypes ?? (_resourceTypes = new InputList<string>());
            set => _resourceTypes = value;
        }

        public GetDefinedMonitoringTemplatesInvokeArgs()
        {
        }
        public static new GetDefinedMonitoringTemplatesInvokeArgs Empty => new GetDefinedMonitoringTemplatesInvokeArgs();
    }


    [OutputType]
    public sealed class GetDefinedMonitoringTemplatesResult
    {
        public readonly string CompartmentId;
        /// <summary>
        /// The list of defined_monitoring_template_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDefinedMonitoringTemplatesDefinedMonitoringTemplateCollectionResult> DefinedMonitoringTemplateCollections;
        /// <summary>
        /// The name of the definedMonitoringTemplate.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetDefinedMonitoringTemplatesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> ResourceTypes;

        [OutputConstructor]
        private GetDefinedMonitoringTemplatesResult(
            string compartmentId,

            ImmutableArray<Outputs.GetDefinedMonitoringTemplatesDefinedMonitoringTemplateCollectionResult> definedMonitoringTemplateCollections,

            string? displayName,

            ImmutableArray<Outputs.GetDefinedMonitoringTemplatesFilterResult> filters,

            string id,

            ImmutableArray<string> resourceTypes)
        {
            CompartmentId = compartmentId;
            DefinedMonitoringTemplateCollections = definedMonitoringTemplateCollections;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            ResourceTypes = resourceTypes;
        }
    }
}
