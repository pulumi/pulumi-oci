// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.StackMonitoring
{
    public static class GetDiscoveryJobs
    {
        /// <summary>
        /// This data source provides the list of Discovery Jobs in Oracle Cloud Infrastructure Stack Monitoring service.
        /// 
        /// API to get the details of all Discovery Jobs.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDiscoveryJobs = Oci.StackMonitoring.GetDiscoveryJobs.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         Name = @var.Discovery_job_name,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetDiscoveryJobsResult> InvokeAsync(GetDiscoveryJobsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDiscoveryJobsResult>("oci:StackMonitoring/getDiscoveryJobs:getDiscoveryJobs", args ?? new GetDiscoveryJobsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Discovery Jobs in Oracle Cloud Infrastructure Stack Monitoring service.
        /// 
        /// API to get the details of all Discovery Jobs.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDiscoveryJobs = Oci.StackMonitoring.GetDiscoveryJobs.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         Name = @var.Discovery_job_name,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetDiscoveryJobsResult> Invoke(GetDiscoveryJobsInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetDiscoveryJobsResult>("oci:StackMonitoring/getDiscoveryJobs:getDiscoveryJobs", args ?? new GetDiscoveryJobsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDiscoveryJobsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which data is listed.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetDiscoveryJobsFilterArgs>? _filters;
        public List<Inputs.GetDiscoveryJobsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetDiscoveryJobsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only discovery jobs that match the entire resource name given.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        public GetDiscoveryJobsArgs()
        {
        }
        public static new GetDiscoveryJobsArgs Empty => new GetDiscoveryJobsArgs();
    }

    public sealed class GetDiscoveryJobsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which data is listed.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetDiscoveryJobsFilterInputArgs>? _filters;
        public InputList<Inputs.GetDiscoveryJobsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetDiscoveryJobsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only discovery jobs that match the entire resource name given.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetDiscoveryJobsInvokeArgs()
        {
        }
        public static new GetDiscoveryJobsInvokeArgs Empty => new GetDiscoveryJobsInvokeArgs();
    }


    [OutputType]
    public sealed class GetDiscoveryJobsResult
    {
        /// <summary>
        /// The OCID of the Compartment
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The list of discovery_job_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDiscoveryJobsDiscoveryJobCollectionResult> DiscoveryJobCollections;
        public readonly ImmutableArray<Outputs.GetDiscoveryJobsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? Name;

        [OutputConstructor]
        private GetDiscoveryJobsResult(
            string compartmentId,

            ImmutableArray<Outputs.GetDiscoveryJobsDiscoveryJobCollectionResult> discoveryJobCollections,

            ImmutableArray<Outputs.GetDiscoveryJobsFilterResult> filters,

            string id,

            string? name)
        {
            CompartmentId = compartmentId;
            DiscoveryJobCollections = discoveryJobCollections;
            Filters = filters;
            Id = id;
            Name = name;
        }
    }
}
