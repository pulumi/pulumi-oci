// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.StackMonitoring
{
    public static class GetMaintenanceWindows
    {
        /// <summary>
        /// This data source provides the list of Maintenance Windows in Oracle Cloud Infrastructure Stack Monitoring service.
        /// 
        /// Returns a list of maintenance windows.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMaintenanceWindows = Oci.StackMonitoring.GetMaintenanceWindows.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         LifecycleDetails = maintenanceWindowLifecycleDetails,
        ///         Name = maintenanceWindowName,
        ///         Status = maintenanceWindowStatus,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetMaintenanceWindowsResult> InvokeAsync(GetMaintenanceWindowsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMaintenanceWindowsResult>("oci:StackMonitoring/getMaintenanceWindows:getMaintenanceWindows", args ?? new GetMaintenanceWindowsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Maintenance Windows in Oracle Cloud Infrastructure Stack Monitoring service.
        /// 
        /// Returns a list of maintenance windows.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMaintenanceWindows = Oci.StackMonitoring.GetMaintenanceWindows.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         LifecycleDetails = maintenanceWindowLifecycleDetails,
        ///         Name = maintenanceWindowName,
        ///         Status = maintenanceWindowStatus,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetMaintenanceWindowsResult> Invoke(GetMaintenanceWindowsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMaintenanceWindowsResult>("oci:StackMonitoring/getMaintenanceWindows:getMaintenanceWindows", args ?? new GetMaintenanceWindowsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Maintenance Windows in Oracle Cloud Infrastructure Stack Monitoring service.
        /// 
        /// Returns a list of maintenance windows.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMaintenanceWindows = Oci.StackMonitoring.GetMaintenanceWindows.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         LifecycleDetails = maintenanceWindowLifecycleDetails,
        ///         Name = maintenanceWindowName,
        ///         Status = maintenanceWindowStatus,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetMaintenanceWindowsResult> Invoke(GetMaintenanceWindowsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetMaintenanceWindowsResult>("oci:StackMonitoring/getMaintenanceWindows:getMaintenanceWindows", args ?? new GetMaintenanceWindowsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMaintenanceWindowsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which data is listed.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetMaintenanceWindowsFilterArgs>? _filters;
        public List<Inputs.GetMaintenanceWindowsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetMaintenanceWindowsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return maintenance windows with matching lifecycleDetails.
        /// </summary>
        [Input("lifecycleDetails")]
        public string? LifecycleDetails { get; set; }

        /// <summary>
        /// A filter to return maintenance windows that match exact resource name.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// A filter to return only maintenance windows with matching lifecycleState.
        /// </summary>
        [Input("status")]
        public string? Status { get; set; }

        public GetMaintenanceWindowsArgs()
        {
        }
        public static new GetMaintenanceWindowsArgs Empty => new GetMaintenanceWindowsArgs();
    }

    public sealed class GetMaintenanceWindowsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which data is listed.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetMaintenanceWindowsFilterInputArgs>? _filters;
        public InputList<Inputs.GetMaintenanceWindowsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetMaintenanceWindowsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return maintenance windows with matching lifecycleDetails.
        /// </summary>
        [Input("lifecycleDetails")]
        public Input<string>? LifecycleDetails { get; set; }

        /// <summary>
        /// A filter to return maintenance windows that match exact resource name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A filter to return only maintenance windows with matching lifecycleState.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public GetMaintenanceWindowsInvokeArgs()
        {
        }
        public static new GetMaintenanceWindowsInvokeArgs Empty => new GetMaintenanceWindowsInvokeArgs();
    }


    [OutputType]
    public sealed class GetMaintenanceWindowsResult
    {
        /// <summary>
        /// Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        public readonly string CompartmentId;
        public readonly ImmutableArray<Outputs.GetMaintenanceWindowsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Lifecycle Details of the Maintenance Window.
        /// </summary>
        public readonly string? LifecycleDetails;
        /// <summary>
        /// The list of maintenance_window_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMaintenanceWindowsMaintenanceWindowCollectionResult> MaintenanceWindowCollections;
        /// <summary>
        /// Name of the monitored resource
        /// </summary>
        public readonly string? Name;
        public readonly string? Status;

        [OutputConstructor]
        private GetMaintenanceWindowsResult(
            string compartmentId,

            ImmutableArray<Outputs.GetMaintenanceWindowsFilterResult> filters,

            string id,

            string? lifecycleDetails,

            ImmutableArray<Outputs.GetMaintenanceWindowsMaintenanceWindowCollectionResult> maintenanceWindowCollections,

            string? name,

            string? status)
        {
            CompartmentId = compartmentId;
            Filters = filters;
            Id = id;
            LifecycleDetails = lifecycleDetails;
            MaintenanceWindowCollections = maintenanceWindowCollections;
            Name = name;
            Status = status;
        }
    }
}
