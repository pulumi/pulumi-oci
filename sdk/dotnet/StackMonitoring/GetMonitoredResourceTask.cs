// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.StackMonitoring
{
    public static class GetMonitoredResourceTask
    {
        /// <summary>
        /// This data source provides details about a specific Monitored Resource Task resource in Oracle Cloud Infrastructure Stack Monitoring service.
        /// 
        /// Gets stack monitoring resource task details by identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMonitoredResourceTask = Oci.StackMonitoring.GetMonitoredResourceTask.Invoke(new()
        ///     {
        ///         MonitoredResourceTaskId = testMonitoredResourceTaskOciStackMonitoringMonitoredResourceTask.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetMonitoredResourceTaskResult> InvokeAsync(GetMonitoredResourceTaskArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMonitoredResourceTaskResult>("oci:StackMonitoring/getMonitoredResourceTask:getMonitoredResourceTask", args ?? new GetMonitoredResourceTaskArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Monitored Resource Task resource in Oracle Cloud Infrastructure Stack Monitoring service.
        /// 
        /// Gets stack monitoring resource task details by identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMonitoredResourceTask = Oci.StackMonitoring.GetMonitoredResourceTask.Invoke(new()
        ///     {
        ///         MonitoredResourceTaskId = testMonitoredResourceTaskOciStackMonitoringMonitoredResourceTask.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetMonitoredResourceTaskResult> Invoke(GetMonitoredResourceTaskInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMonitoredResourceTaskResult>("oci:StackMonitoring/getMonitoredResourceTask:getMonitoredResourceTask", args ?? new GetMonitoredResourceTaskInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMonitoredResourceTaskArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of stack monitoring resource task.
        /// </summary>
        [Input("monitoredResourceTaskId", required: true)]
        public string MonitoredResourceTaskId { get; set; } = null!;

        public GetMonitoredResourceTaskArgs()
        {
        }
        public static new GetMonitoredResourceTaskArgs Empty => new GetMonitoredResourceTaskArgs();
    }

    public sealed class GetMonitoredResourceTaskInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of stack monitoring resource task.
        /// </summary>
        [Input("monitoredResourceTaskId", required: true)]
        public Input<string> MonitoredResourceTaskId { get; set; } = null!;

        public GetMonitoredResourceTaskInvokeArgs()
        {
        }
        public static new GetMonitoredResourceTaskInvokeArgs Empty => new GetMonitoredResourceTaskInvokeArgs();
    }


    [OutputType]
    public sealed class GetMonitoredResourceTaskResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment identifier.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// Task identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        public readonly string Id;
        public readonly string MonitoredResourceTaskId;
        /// <summary>
        /// Name of the task.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The current state of the stack monitoring resource task.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// The request details for the performing the task.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMonitoredResourceTaskTaskDetailResult> TaskDetails;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tenancy.
        /// </summary>
        public readonly string TenantId;
        /// <summary>
        /// The date and time when the stack monitoring resource task was created, expressed in  [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The date and time when the stack monitoring resource task was last updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
        /// </summary>
        public readonly string TimeUpdated;
        /// <summary>
        /// Identifiers [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for work requests submitted for this task.
        /// </summary>
        public readonly ImmutableArray<string> WorkRequestIds;

        [OutputConstructor]
        private GetMonitoredResourceTaskResult(
            string compartmentId,

            ImmutableDictionary<string, string> definedTags,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            string monitoredResourceTaskId,

            string name,

            string state,

            ImmutableDictionary<string, string> systemTags,

            ImmutableArray<Outputs.GetMonitoredResourceTaskTaskDetailResult> taskDetails,

            string tenantId,

            string timeCreated,

            string timeUpdated,

            ImmutableArray<string> workRequestIds)
        {
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            FreeformTags = freeformTags;
            Id = id;
            MonitoredResourceTaskId = monitoredResourceTaskId;
            Name = name;
            State = state;
            SystemTags = systemTags;
            TaskDetails = taskDetails;
            TenantId = tenantId;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            WorkRequestIds = workRequestIds;
        }
    }
}
