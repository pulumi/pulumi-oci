// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.StackMonitoring
{
    public static class GetMonitoredResourceTasks
    {
        /// <summary>
        /// This data source provides the list of Monitored Resource Tasks in Oracle Cloud Infrastructure Stack Monitoring service.
        /// 
        /// Returns a list of stack monitoring resource tasks in the compartment.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMonitoredResourceTasks = Oci.StackMonitoring.GetMonitoredResourceTasks.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         Status = @var.Monitored_resource_task_status,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetMonitoredResourceTasksResult> InvokeAsync(GetMonitoredResourceTasksArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMonitoredResourceTasksResult>("oci:StackMonitoring/getMonitoredResourceTasks:getMonitoredResourceTasks", args ?? new GetMonitoredResourceTasksArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Monitored Resource Tasks in Oracle Cloud Infrastructure Stack Monitoring service.
        /// 
        /// Returns a list of stack monitoring resource tasks in the compartment.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMonitoredResourceTasks = Oci.StackMonitoring.GetMonitoredResourceTasks.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         Status = @var.Monitored_resource_task_status,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetMonitoredResourceTasksResult> Invoke(GetMonitoredResourceTasksInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMonitoredResourceTasksResult>("oci:StackMonitoring/getMonitoredResourceTasks:getMonitoredResourceTasks", args ?? new GetMonitoredResourceTasksInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMonitoredResourceTasksArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for which  stack monitoring resource tasks should be listed.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetMonitoredResourceTasksFilterArgs>? _filters;
        public List<Inputs.GetMonitoredResourceTasksFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetMonitoredResourceTasksFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only resources that matches with lifecycleState given.
        /// </summary>
        [Input("status")]
        public string? Status { get; set; }

        public GetMonitoredResourceTasksArgs()
        {
        }
        public static new GetMonitoredResourceTasksArgs Empty => new GetMonitoredResourceTasksArgs();
    }

    public sealed class GetMonitoredResourceTasksInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for which  stack monitoring resource tasks should be listed.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetMonitoredResourceTasksFilterInputArgs>? _filters;
        public InputList<Inputs.GetMonitoredResourceTasksFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetMonitoredResourceTasksFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only resources that matches with lifecycleState given.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public GetMonitoredResourceTasksInvokeArgs()
        {
        }
        public static new GetMonitoredResourceTasksInvokeArgs Empty => new GetMonitoredResourceTasksInvokeArgs();
    }


    [OutputType]
    public sealed class GetMonitoredResourceTasksResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment identifier.
        /// </summary>
        public readonly string CompartmentId;
        public readonly ImmutableArray<Outputs.GetMonitoredResourceTasksFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of monitored_resource_tasks_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMonitoredResourceTasksMonitoredResourceTasksCollectionResult> MonitoredResourceTasksCollections;
        public readonly string? Status;

        [OutputConstructor]
        private GetMonitoredResourceTasksResult(
            string compartmentId,

            ImmutableArray<Outputs.GetMonitoredResourceTasksFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetMonitoredResourceTasksMonitoredResourceTasksCollectionResult> monitoredResourceTasksCollections,

            string? status)
        {
            CompartmentId = compartmentId;
            Filters = filters;
            Id = id;
            MonitoredResourceTasksCollections = monitoredResourceTasksCollections;
            Status = status;
        }
    }
}
