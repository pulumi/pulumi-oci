// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.StackMonitoring
{
    public static class GetMonitoredResourceType
    {
        /// <summary>
        /// This data source provides details about a specific Monitored Resource Type resource in Oracle Cloud Infrastructure Stack Monitoring service.
        /// 
        /// Gets a monitored resource type by identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMonitoredResourceType = Oci.StackMonitoring.GetMonitoredResourceType.Invoke(new()
        ///     {
        ///         MonitoredResourceTypeId = testMonitoredResourceTypeOciStackMonitoringMonitoredResourceType.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetMonitoredResourceTypeResult> InvokeAsync(GetMonitoredResourceTypeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMonitoredResourceTypeResult>("oci:StackMonitoring/getMonitoredResourceType:getMonitoredResourceType", args ?? new GetMonitoredResourceTypeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Monitored Resource Type resource in Oracle Cloud Infrastructure Stack Monitoring service.
        /// 
        /// Gets a monitored resource type by identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMonitoredResourceType = Oci.StackMonitoring.GetMonitoredResourceType.Invoke(new()
        ///     {
        ///         MonitoredResourceTypeId = testMonitoredResourceTypeOciStackMonitoringMonitoredResourceType.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetMonitoredResourceTypeResult> Invoke(GetMonitoredResourceTypeInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMonitoredResourceTypeResult>("oci:StackMonitoring/getMonitoredResourceType:getMonitoredResourceType", args ?? new GetMonitoredResourceTypeInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMonitoredResourceTypeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of monitored resource type.
        /// </summary>
        [Input("monitoredResourceTypeId", required: true)]
        public string MonitoredResourceTypeId { get; set; } = null!;

        public GetMonitoredResourceTypeArgs()
        {
        }
        public static new GetMonitoredResourceTypeArgs Empty => new GetMonitoredResourceTypeArgs();
    }

    public sealed class GetMonitoredResourceTypeInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of monitored resource type.
        /// </summary>
        [Input("monitoredResourceTypeId", required: true)]
        public Input<string> MonitoredResourceTypeId { get; set; } = null!;

        public GetMonitoredResourceTypeInvokeArgs()
        {
        }
        public static new GetMonitoredResourceTypeInvokeArgs Empty => new GetMonitoredResourceTypeInvokeArgs();
    }


    [OutputType]
    public sealed class GetMonitoredResourceTypeResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tenancy containing the resource type.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// A friendly description.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Monitored resource type display name.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// Monitored resource type identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The metadata details for resource type.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMonitoredResourceTypeMetadataResult> Metadatas;
        /// <summary>
        /// Metric namespace for resource type.
        /// </summary>
        public readonly string MetricNamespace;
        public readonly string MonitoredResourceTypeId;
        /// <summary>
        /// A unique monitored resource type name. The name must be unique across tenancy.  Name can not be changed.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Resource Category to indicate the kind of resource type.
        /// </summary>
        public readonly string ResourceCategory;
        /// <summary>
        /// Source type to indicate if the resource is stack monitoring discovered, Oracle Cloud Infrastructure native resource, etc.
        /// </summary>
        public readonly string SourceType;
        /// <summary>
        /// Lifecycle state of the monitored resource type.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// The date and time when the monitored resource type was created, expressed in  [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The date and time when the monitored resource was updated, expressed in  [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetMonitoredResourceTypeResult(
            string compartmentId,

            ImmutableDictionary<string, string> definedTags,

            string description,

            string displayName,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            ImmutableArray<Outputs.GetMonitoredResourceTypeMetadataResult> metadatas,

            string metricNamespace,

            string monitoredResourceTypeId,

            string name,

            string resourceCategory,

            string sourceType,

            string state,

            ImmutableDictionary<string, string> systemTags,

            string timeCreated,

            string timeUpdated)
        {
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            Metadatas = metadatas;
            MetricNamespace = metricNamespace;
            MonitoredResourceTypeId = monitoredResourceTypeId;
            Name = name;
            ResourceCategory = resourceCategory;
            SourceType = sourceType;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
