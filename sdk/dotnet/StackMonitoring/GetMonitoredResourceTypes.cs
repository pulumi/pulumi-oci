// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.StackMonitoring
{
    public static class GetMonitoredResourceTypes
    {
        /// <summary>
        /// This data source provides the list of Monitored Resource Types in Oracle Cloud Infrastructure Stack Monitoring service.
        /// 
        /// Returns list of resource types accessible to the customer. 
        /// There are two types of resource types - System resource types and User resource types. 
        /// System resource types are available out of the box in the stack monitoring resource service 
        /// and are accessible to all the tenant users. User resource types are created in the context 
        /// of a tenancy and are visible only for the tenancy. By default, both System resource types 
        /// and User resource types are returned.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMonitoredResourceTypes = Oci.StackMonitoring.GetMonitoredResourceTypes.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         ExcludeFields = monitoredResourceTypeExcludeFields,
        ///         Fields = monitoredResourceTypeFields,
        ///         IsExcludeSystemTypes = monitoredResourceTypeIsExcludeSystemTypes,
        ///         MetricNamespace = monitoredResourceTypeMetricNamespace,
        ///         Name = monitoredResourceTypeName,
        ///         Status = monitoredResourceTypeStatus,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetMonitoredResourceTypesResult> InvokeAsync(GetMonitoredResourceTypesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMonitoredResourceTypesResult>("oci:StackMonitoring/getMonitoredResourceTypes:getMonitoredResourceTypes", args ?? new GetMonitoredResourceTypesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Monitored Resource Types in Oracle Cloud Infrastructure Stack Monitoring service.
        /// 
        /// Returns list of resource types accessible to the customer. 
        /// There are two types of resource types - System resource types and User resource types. 
        /// System resource types are available out of the box in the stack monitoring resource service 
        /// and are accessible to all the tenant users. User resource types are created in the context 
        /// of a tenancy and are visible only for the tenancy. By default, both System resource types 
        /// and User resource types are returned.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMonitoredResourceTypes = Oci.StackMonitoring.GetMonitoredResourceTypes.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         ExcludeFields = monitoredResourceTypeExcludeFields,
        ///         Fields = monitoredResourceTypeFields,
        ///         IsExcludeSystemTypes = monitoredResourceTypeIsExcludeSystemTypes,
        ///         MetricNamespace = monitoredResourceTypeMetricNamespace,
        ///         Name = monitoredResourceTypeName,
        ///         Status = monitoredResourceTypeStatus,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetMonitoredResourceTypesResult> Invoke(GetMonitoredResourceTypesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMonitoredResourceTypesResult>("oci:StackMonitoring/getMonitoredResourceTypes:getMonitoredResourceTypes", args ?? new GetMonitoredResourceTypesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Monitored Resource Types in Oracle Cloud Infrastructure Stack Monitoring service.
        /// 
        /// Returns list of resource types accessible to the customer. 
        /// There are two types of resource types - System resource types and User resource types. 
        /// System resource types are available out of the box in the stack monitoring resource service 
        /// and are accessible to all the tenant users. User resource types are created in the context 
        /// of a tenancy and are visible only for the tenancy. By default, both System resource types 
        /// and User resource types are returned.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMonitoredResourceTypes = Oci.StackMonitoring.GetMonitoredResourceTypes.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         ExcludeFields = monitoredResourceTypeExcludeFields,
        ///         Fields = monitoredResourceTypeFields,
        ///         IsExcludeSystemTypes = monitoredResourceTypeIsExcludeSystemTypes,
        ///         MetricNamespace = monitoredResourceTypeMetricNamespace,
        ///         Name = monitoredResourceTypeName,
        ///         Status = monitoredResourceTypeStatus,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetMonitoredResourceTypesResult> Invoke(GetMonitoredResourceTypesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetMonitoredResourceTypesResult>("oci:StackMonitoring/getMonitoredResourceTypes:getMonitoredResourceTypes", args ?? new GetMonitoredResourceTypesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMonitoredResourceTypesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tenancy for which  monitored resource types should be listed.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        [Input("excludeFields")]
        private List<string>? _excludeFields;

        /// <summary>
        /// Partial response refers to an optimization technique offered by the RESTful web APIs, to return all the information except the fields requested to be excluded (excludeFields) by the client. In this mechanism, the client sends the exclude field names as the query parameters for an API to the server, and the server trims down the default response content by removing the fields that are not required by the client. The parameter controls which fields to exlude and to return and should be a query string parameter called "excludeFields" of an array type, provide the values as enums, and use collectionFormat.
        /// </summary>
        public List<string> ExcludeFields
        {
            get => _excludeFields ?? (_excludeFields = new List<string>());
            set => _excludeFields = value;
        }

        [Input("fields")]
        private List<string>? _fields;

        /// <summary>
        /// Partial response refers to an optimization technique offered by the RESTful web APIs, to return only the information (fields) required by the client. In this mechanism, the client sends the required field names as the query parameters for an API to the server, and the server trims down the default response content by removing the fields that are not required by the client. The parameter controls which fields to return and should be a query string parameter called "fields" of an array type, provide the values as enums, and use collectionFormat.
        /// 
        /// MonitoredResourceType Id, name and compartment will be added by default.
        /// </summary>
        public List<string> Fields
        {
            get => _fields ?? (_fields = new List<string>());
            set => _fields = value;
        }

        [Input("filters")]
        private List<Inputs.GetMonitoredResourceTypesFilterArgs>? _filters;
        public List<Inputs.GetMonitoredResourceTypesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetMonitoredResourceTypesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to exclude system resource types. If set to true, system resource types will be excluded.
        /// </summary>
        [Input("isExcludeSystemTypes")]
        public bool? IsExcludeSystemTypes { get; set; }

        /// <summary>
        /// A filter to return monitored resource types that has the matching namespace.
        /// </summary>
        [Input("metricNamespace")]
        public string? MetricNamespace { get; set; }

        /// <summary>
        /// A filter to return monitored resource types that match exactly with the resource type name given.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// A filter to return only resources that matches with lifecycleState given.
        /// </summary>
        [Input("status")]
        public string? Status { get; set; }

        public GetMonitoredResourceTypesArgs()
        {
        }
        public static new GetMonitoredResourceTypesArgs Empty => new GetMonitoredResourceTypesArgs();
    }

    public sealed class GetMonitoredResourceTypesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tenancy for which  monitored resource types should be listed.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("excludeFields")]
        private InputList<string>? _excludeFields;

        /// <summary>
        /// Partial response refers to an optimization technique offered by the RESTful web APIs, to return all the information except the fields requested to be excluded (excludeFields) by the client. In this mechanism, the client sends the exclude field names as the query parameters for an API to the server, and the server trims down the default response content by removing the fields that are not required by the client. The parameter controls which fields to exlude and to return and should be a query string parameter called "excludeFields" of an array type, provide the values as enums, and use collectionFormat.
        /// </summary>
        public InputList<string> ExcludeFields
        {
            get => _excludeFields ?? (_excludeFields = new InputList<string>());
            set => _excludeFields = value;
        }

        [Input("fields")]
        private InputList<string>? _fields;

        /// <summary>
        /// Partial response refers to an optimization technique offered by the RESTful web APIs, to return only the information (fields) required by the client. In this mechanism, the client sends the required field names as the query parameters for an API to the server, and the server trims down the default response content by removing the fields that are not required by the client. The parameter controls which fields to return and should be a query string parameter called "fields" of an array type, provide the values as enums, and use collectionFormat.
        /// 
        /// MonitoredResourceType Id, name and compartment will be added by default.
        /// </summary>
        public InputList<string> Fields
        {
            get => _fields ?? (_fields = new InputList<string>());
            set => _fields = value;
        }

        [Input("filters")]
        private InputList<Inputs.GetMonitoredResourceTypesFilterInputArgs>? _filters;
        public InputList<Inputs.GetMonitoredResourceTypesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetMonitoredResourceTypesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to exclude system resource types. If set to true, system resource types will be excluded.
        /// </summary>
        [Input("isExcludeSystemTypes")]
        public Input<bool>? IsExcludeSystemTypes { get; set; }

        /// <summary>
        /// A filter to return monitored resource types that has the matching namespace.
        /// </summary>
        [Input("metricNamespace")]
        public Input<string>? MetricNamespace { get; set; }

        /// <summary>
        /// A filter to return monitored resource types that match exactly with the resource type name given.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A filter to return only resources that matches with lifecycleState given.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public GetMonitoredResourceTypesInvokeArgs()
        {
        }
        public static new GetMonitoredResourceTypesInvokeArgs Empty => new GetMonitoredResourceTypesInvokeArgs();
    }


    [OutputType]
    public sealed class GetMonitoredResourceTypesResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tenancy containing the resource type.
        /// </summary>
        public readonly string CompartmentId;
        public readonly ImmutableArray<string> ExcludeFields;
        public readonly ImmutableArray<string> Fields;
        public readonly ImmutableArray<Outputs.GetMonitoredResourceTypesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool? IsExcludeSystemTypes;
        /// <summary>
        /// Metric namespace for resource type.
        /// </summary>
        public readonly string? MetricNamespace;
        /// <summary>
        /// The list of monitored_resource_types_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMonitoredResourceTypesMonitoredResourceTypesCollectionResult> MonitoredResourceTypesCollections;
        /// <summary>
        /// A unique monitored resource type name. The name must be unique across tenancy.  Name can not be changed.
        /// </summary>
        public readonly string? Name;
        public readonly string? Status;

        [OutputConstructor]
        private GetMonitoredResourceTypesResult(
            string compartmentId,

            ImmutableArray<string> excludeFields,

            ImmutableArray<string> fields,

            ImmutableArray<Outputs.GetMonitoredResourceTypesFilterResult> filters,

            string id,

            bool? isExcludeSystemTypes,

            string? metricNamespace,

            ImmutableArray<Outputs.GetMonitoredResourceTypesMonitoredResourceTypesCollectionResult> monitoredResourceTypesCollections,

            string? name,

            string? status)
        {
            CompartmentId = compartmentId;
            ExcludeFields = excludeFields;
            Fields = fields;
            Filters = filters;
            Id = id;
            IsExcludeSystemTypes = isExcludeSystemTypes;
            MetricNamespace = metricNamespace;
            MonitoredResourceTypesCollections = monitoredResourceTypesCollections;
            Name = name;
            Status = status;
        }
    }
}
