// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.StackMonitoring
{
    public static class GetMonitoringTemplateAlarmConditions
    {
        /// <summary>
        /// This data source provides the list of Monitoring Template Alarm Conditions in Oracle Cloud Infrastructure Stack Monitoring service.
        /// 
        /// Returns a list of Alarm Conditions.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMonitoringTemplateAlarmConditions = Oci.StackMonitoring.GetMonitoringTemplateAlarmConditions.Invoke(new()
        ///     {
        ///         MonitoringTemplateId = testMonitoringTemplate.Id,
        ///         MetricNames = testMetric.Name,
        ///         ResourceTypes = monitoringTemplateAlarmConditionResourceTypes,
        ///         State = monitoringTemplateAlarmConditionState,
        ///         Status = monitoringTemplateAlarmConditionStatus,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetMonitoringTemplateAlarmConditionsResult> InvokeAsync(GetMonitoringTemplateAlarmConditionsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMonitoringTemplateAlarmConditionsResult>("oci:StackMonitoring/getMonitoringTemplateAlarmConditions:getMonitoringTemplateAlarmConditions", args ?? new GetMonitoringTemplateAlarmConditionsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Monitoring Template Alarm Conditions in Oracle Cloud Infrastructure Stack Monitoring service.
        /// 
        /// Returns a list of Alarm Conditions.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMonitoringTemplateAlarmConditions = Oci.StackMonitoring.GetMonitoringTemplateAlarmConditions.Invoke(new()
        ///     {
        ///         MonitoringTemplateId = testMonitoringTemplate.Id,
        ///         MetricNames = testMetric.Name,
        ///         ResourceTypes = monitoringTemplateAlarmConditionResourceTypes,
        ///         State = monitoringTemplateAlarmConditionState,
        ///         Status = monitoringTemplateAlarmConditionStatus,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetMonitoringTemplateAlarmConditionsResult> Invoke(GetMonitoringTemplateAlarmConditionsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMonitoringTemplateAlarmConditionsResult>("oci:StackMonitoring/getMonitoringTemplateAlarmConditions:getMonitoringTemplateAlarmConditions", args ?? new GetMonitoringTemplateAlarmConditionsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Monitoring Template Alarm Conditions in Oracle Cloud Infrastructure Stack Monitoring service.
        /// 
        /// Returns a list of Alarm Conditions.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testMonitoringTemplateAlarmConditions = Oci.StackMonitoring.GetMonitoringTemplateAlarmConditions.Invoke(new()
        ///     {
        ///         MonitoringTemplateId = testMonitoringTemplate.Id,
        ///         MetricNames = testMetric.Name,
        ///         ResourceTypes = monitoringTemplateAlarmConditionResourceTypes,
        ///         State = monitoringTemplateAlarmConditionState,
        ///         Status = monitoringTemplateAlarmConditionStatus,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetMonitoringTemplateAlarmConditionsResult> Invoke(GetMonitoringTemplateAlarmConditionsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetMonitoringTemplateAlarmConditionsResult>("oci:StackMonitoring/getMonitoringTemplateAlarmConditions:getMonitoringTemplateAlarmConditions", args ?? new GetMonitoringTemplateAlarmConditionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMonitoringTemplateAlarmConditionsArgs : global::Pulumi.InvokeArgs
    {
        [Input("alarmConditionId", required: true)]
        public string AlarmConditionId { get; set; } = null!;

        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        [Input("filters")]
        private List<Inputs.GetMonitoringTemplateAlarmConditionsFilterArgs>? _filters;
        public List<Inputs.GetMonitoringTemplateAlarmConditionsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetMonitoringTemplateAlarmConditionsFilterArgs>());
            set => _filters = value;
        }

        [Input("metricNames")]
        private List<string>? _metricNames;

        /// <summary>
        /// metricName filter.
        /// </summary>
        public List<string> MetricNames
        {
            get => _metricNames ?? (_metricNames = new List<string>());
            set => _metricNames = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the monitoring template.
        /// </summary>
        [Input("monitoringTemplateId", required: true)]
        public string MonitoringTemplateId { get; set; } = null!;

        [Input("resourceTypes")]
        private List<string>? _resourceTypes;

        /// <summary>
        /// Multiple resource types filter.
        /// </summary>
        public List<string> ResourceTypes
        {
            get => _resourceTypes ?? (_resourceTypes = new List<string>());
            set => _resourceTypes = value;
        }

        /// <summary>
        /// A filter to return alarm condition based on Lifecycle State.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        /// <summary>
        /// A filter to return alarm condition based on input status.
        /// </summary>
        [Input("status")]
        public string? Status { get; set; }

        public GetMonitoringTemplateAlarmConditionsArgs()
        {
        }
        public static new GetMonitoringTemplateAlarmConditionsArgs Empty => new GetMonitoringTemplateAlarmConditionsArgs();
    }

    public sealed class GetMonitoringTemplateAlarmConditionsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("alarmConditionId", required: true)]
        public Input<string> AlarmConditionId { get; set; } = null!;

        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetMonitoringTemplateAlarmConditionsFilterInputArgs>? _filters;
        public InputList<Inputs.GetMonitoringTemplateAlarmConditionsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetMonitoringTemplateAlarmConditionsFilterInputArgs>());
            set => _filters = value;
        }

        [Input("metricNames")]
        private InputList<string>? _metricNames;

        /// <summary>
        /// metricName filter.
        /// </summary>
        public InputList<string> MetricNames
        {
            get => _metricNames ?? (_metricNames = new InputList<string>());
            set => _metricNames = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the monitoring template.
        /// </summary>
        [Input("monitoringTemplateId", required: true)]
        public Input<string> MonitoringTemplateId { get; set; } = null!;

        [Input("resourceTypes")]
        private InputList<string>? _resourceTypes;

        /// <summary>
        /// Multiple resource types filter.
        /// </summary>
        public InputList<string> ResourceTypes
        {
            get => _resourceTypes ?? (_resourceTypes = new InputList<string>());
            set => _resourceTypes = value;
        }

        /// <summary>
        /// A filter to return alarm condition based on Lifecycle State.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// A filter to return alarm condition based on input status.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public GetMonitoringTemplateAlarmConditionsInvokeArgs()
        {
        }
        public static new GetMonitoringTemplateAlarmConditionsInvokeArgs Empty => new GetMonitoringTemplateAlarmConditionsInvokeArgs();
    }


    [OutputType]
    public sealed class GetMonitoringTemplateAlarmConditionsResult
    {
        /// <summary>
        /// The list of alarm_condition_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMonitoringTemplateAlarmConditionsAlarmConditionCollectionResult> AlarmConditionCollections;
        public readonly string AlarmConditionId;
        public readonly string? CompartmentId;
        public readonly ImmutableArray<Outputs.GetMonitoringTemplateAlarmConditionsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The metric name.
        /// </summary>
        public readonly ImmutableArray<string> MetricNames;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the monitoring template.
        /// </summary>
        public readonly string MonitoringTemplateId;
        public readonly ImmutableArray<string> ResourceTypes;
        /// <summary>
        /// The current lifecycle state of the monitoring template
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// The current status of the monitoring template i.e. whether it is Published or Unpublished
        /// </summary>
        public readonly string? Status;

        [OutputConstructor]
        private GetMonitoringTemplateAlarmConditionsResult(
            ImmutableArray<Outputs.GetMonitoringTemplateAlarmConditionsAlarmConditionCollectionResult> alarmConditionCollections,

            string alarmConditionId,

            string? compartmentId,

            ImmutableArray<Outputs.GetMonitoringTemplateAlarmConditionsFilterResult> filters,

            string id,

            ImmutableArray<string> metricNames,

            string monitoringTemplateId,

            ImmutableArray<string> resourceTypes,

            string? state,

            string? status)
        {
            AlarmConditionCollections = alarmConditionCollections;
            AlarmConditionId = alarmConditionId;
            CompartmentId = compartmentId;
            Filters = filters;
            Id = id;
            MetricNames = metricNames;
            MonitoringTemplateId = monitoringTemplateId;
            ResourceTypes = resourceTypes;
            State = state;
            Status = status;
        }
    }
}
