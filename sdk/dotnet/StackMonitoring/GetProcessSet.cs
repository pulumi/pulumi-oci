// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.StackMonitoring
{
    public static class GetProcessSet
    {
        /// <summary>
        /// This data source provides details about a specific Process Set resource in Oracle Cloud Infrastructure Stack Monitoring service.
        /// 
        /// API to get the details of a Process Set by identifier.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testProcessSet = Oci.StackMonitoring.GetProcessSet.Invoke(new()
        ///     {
        ///         ProcessSetId = testProcessSetOciStackMonitoringProcessSet.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetProcessSetResult> InvokeAsync(GetProcessSetArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetProcessSetResult>("oci:StackMonitoring/getProcessSet:getProcessSet", args ?? new GetProcessSetArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Process Set resource in Oracle Cloud Infrastructure Stack Monitoring service.
        /// 
        /// API to get the details of a Process Set by identifier.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testProcessSet = Oci.StackMonitoring.GetProcessSet.Invoke(new()
        ///     {
        ///         ProcessSetId = testProcessSetOciStackMonitoringProcessSet.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetProcessSetResult> Invoke(GetProcessSetInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetProcessSetResult>("oci:StackMonitoring/getProcessSet:getProcessSet", args ?? new GetProcessSetInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetProcessSetArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Process Set ID
        /// </summary>
        [Input("processSetId", required: true)]
        public string ProcessSetId { get; set; } = null!;

        public GetProcessSetArgs()
        {
        }
        public static new GetProcessSetArgs Empty => new GetProcessSetArgs();
    }

    public sealed class GetProcessSetInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Process Set ID
        /// </summary>
        [Input("processSetId", required: true)]
        public Input<string> ProcessSetId { get; set; } = null!;

        public GetProcessSetInvokeArgs()
        {
        }
        public static new GetProcessSetInvokeArgs Empty => new GetProcessSetInvokeArgs();
    }


    [OutputType]
    public sealed class GetProcessSetResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// Name of the Process Set.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Process Set.
        /// </summary>
        public readonly string Id;
        public readonly string ProcessSetId;
        /// <summary>
        /// The current revision of the Process Set.
        /// </summary>
        public readonly string Revision;
        /// <summary>
        /// Collection of regular expression specifications used to identify the processes to be monitored.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProcessSetSpecificationResult> Specifications;
        /// <summary>
        /// The current state of the Resource.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// The time the process set was created. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time the process set was last updated. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetProcessSetResult(
            string compartmentId,

            ImmutableDictionary<string, string> definedTags,

            string displayName,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            string processSetId,

            string revision,

            ImmutableArray<Outputs.GetProcessSetSpecificationResult> specifications,

            string state,

            ImmutableDictionary<string, string> systemTags,

            string timeCreated,

            string timeUpdated)
        {
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            ProcessSetId = processSetId;
            Revision = revision;
            Specifications = specifications;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
