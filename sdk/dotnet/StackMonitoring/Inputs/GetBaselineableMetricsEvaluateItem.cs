// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.StackMonitoring.Inputs
{

    public sealed class GetBaselineableMetricsEvaluateItemArgs : global::Pulumi.InvokeArgs
    {
        [Input("dataPoints", required: true)]
        private List<Inputs.GetBaselineableMetricsEvaluateItemDataPointArgs>? _dataPoints;

        /// <summary>
        /// list of anomaly data points for the metric
        /// </summary>
        public List<Inputs.GetBaselineableMetricsEvaluateItemDataPointArgs> DataPoints
        {
            get => _dataPoints ?? (_dataPoints = new List<Inputs.GetBaselineableMetricsEvaluateItemDataPointArgs>());
            set => _dataPoints = value;
        }

        [Input("dimensions", required: true)]
        private Dictionary<string, string>? _dimensions;

        /// <summary>
        /// list of dimensions for the metric
        /// </summary>
        public Dictionary<string, string> Dimensions
        {
            get => _dimensions ?? (_dimensions = new Dictionary<string, string>());
            set => _dimensions = value;
        }

        [Input("evaluationDataPoints", required: true)]
        private List<Inputs.GetBaselineableMetricsEvaluateItemEvaluationDataPointArgs>? _evaluationDataPoints;

        /// <summary>
        /// list of data points for the metric for evaluation of anomalies
        /// </summary>
        public List<Inputs.GetBaselineableMetricsEvaluateItemEvaluationDataPointArgs> EvaluationDataPoints
        {
            get => _evaluationDataPoints ?? (_evaluationDataPoints = new List<Inputs.GetBaselineableMetricsEvaluateItemEvaluationDataPointArgs>());
            set => _evaluationDataPoints = value;
        }

        [Input("trainingDataPoints", required: true)]
        private List<Inputs.GetBaselineableMetricsEvaluateItemTrainingDataPointArgs>? _trainingDataPoints;

        /// <summary>
        /// list of data points for the metric for training of baseline
        /// </summary>
        public List<Inputs.GetBaselineableMetricsEvaluateItemTrainingDataPointArgs> TrainingDataPoints
        {
            get => _trainingDataPoints ?? (_trainingDataPoints = new List<Inputs.GetBaselineableMetricsEvaluateItemTrainingDataPointArgs>());
            set => _trainingDataPoints = value;
        }

        public GetBaselineableMetricsEvaluateItemArgs()
        {
        }
        public static new GetBaselineableMetricsEvaluateItemArgs Empty => new GetBaselineableMetricsEvaluateItemArgs();
    }
}
