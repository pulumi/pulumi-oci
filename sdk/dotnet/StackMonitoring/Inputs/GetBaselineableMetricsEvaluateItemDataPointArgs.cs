// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.StackMonitoring.Inputs
{

    public sealed class GetBaselineableMetricsEvaluateItemDataPointInputArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// if the value is anomaly or not 0 indicates not an anomaly -1 indicates value is below the threshold +1 indicates value is above the threshold
        /// </summary>
        [Input("anomaly", required: true)]
        public Input<double> Anomaly { get; set; } = null!;

        /// <summary>
        /// upper threshold for the metric value
        /// </summary>
        [Input("high", required: true)]
        public Input<double> High { get; set; } = null!;

        /// <summary>
        /// lower threshold for the metric value
        /// </summary>
        [Input("low", required: true)]
        public Input<double> Low { get; set; } = null!;

        /// <summary>
        /// timestamp of when the metric was collected
        /// </summary>
        [Input("timestamp", required: true)]
        public Input<string> Timestamp { get; set; } = null!;

        /// <summary>
        /// value for the metric data point
        /// </summary>
        [Input("value", required: true)]
        public Input<double> Value { get; set; } = null!;

        public GetBaselineableMetricsEvaluateItemDataPointInputArgs()
        {
        }
        public static new GetBaselineableMetricsEvaluateItemDataPointInputArgs Empty => new GetBaselineableMetricsEvaluateItemDataPointInputArgs();
    }
}
