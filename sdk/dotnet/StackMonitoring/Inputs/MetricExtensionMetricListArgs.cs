// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.StackMonitoring.Inputs
{

    public sealed class MetricExtensionMetricListArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) Compute Expression to calculate the value of this metric
        /// </summary>
        [Input("computeExpression")]
        public Input<string>? ComputeExpression { get; set; }

        /// <summary>
        /// (Updatable) Data type of value of this metric
        /// </summary>
        [Input("dataType", required: true)]
        public Input<string> DataType { get; set; } = null!;

        /// <summary>
        /// (Updatable) Display name of the metric.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// (Updatable) Current metric need to be included as dimension or not
        /// </summary>
        [Input("isDimension")]
        public Input<bool>? IsDimension { get; set; }

        /// <summary>
        /// (Updatable) Flag to marks whether a metric has to be uploaded or not. When isHidden = false &gt; Metric is uploaded, isHidden = true &gt; Metric is NOT uploaded
        /// </summary>
        [Input("isHidden")]
        public Input<bool>? IsHidden { get; set; }

        /// <summary>
        /// (Updatable) Metric category
        /// </summary>
        [Input("metricCategory")]
        public Input<string>? MetricCategory { get; set; }

        /// <summary>
        /// (Updatable) Name of the script file
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// (Updatable) Unit of metric value
        /// </summary>
        [Input("unit")]
        public Input<string>? Unit { get; set; }

        public MetricExtensionMetricListArgs()
        {
        }
        public static new MetricExtensionMetricListArgs Empty => new MetricExtensionMetricListArgs();
    }
}
