// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.StackMonitoring.Inputs
{

    public sealed class MetricExtensionQueryPropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) Arguments required by either command or script
        /// </summary>
        [Input("arguments")]
        public Input<string>? Arguments { get; set; }

        /// <summary>
        /// (Updatable) Prefix for an auto generated metric, in case multiple rows with non unique key values are returned
        /// </summary>
        [Input("autoRowPrefix")]
        public Input<string>? AutoRowPrefix { get; set; }

        /// <summary>
        /// (Updatable) Type of possible collection methods.
        /// </summary>
        [Input("collectionMethod", required: true)]
        public Input<string> CollectionMethod { get; set; } = null!;

        /// <summary>
        /// (Updatable) OS command to execute without arguments
        /// </summary>
        [Input("command")]
        public Input<string>? Command { get; set; }

        /// <summary>
        /// (Updatable) Character used to delimit multiple metric values in single line of output
        /// </summary>
        [Input("delimiter")]
        public Input<string>? Delimiter { get; set; }

        /// <summary>
        /// (Updatable) Semi-colon separated list of key properties from Managed Bean ObjectName to be used as key metrics
        /// </summary>
        [Input("identityMetric")]
        public Input<string>? IdentityMetric { get; set; }

        [Input("inParamDetails")]
        private InputList<Inputs.MetricExtensionQueryPropertiesInParamDetailArgs>? _inParamDetails;

        /// <summary>
        /// (Updatable) List of values and position of PL/SQL procedure IN parameters
        /// </summary>
        public InputList<Inputs.MetricExtensionQueryPropertiesInParamDetailArgs> InParamDetails
        {
            get => _inParamDetails ?? (_inParamDetails = new InputList<Inputs.MetricExtensionQueryPropertiesInParamDetailArgs>());
            set => _inParamDetails = value;
        }

        /// <summary>
        /// (Updatable) Indicates if Metric Service is enabled on server domain
        /// </summary>
        [Input("isMetricServiceEnabled")]
        public Input<bool>? IsMetricServiceEnabled { get; set; }

        /// <summary>
        /// (Updatable) List of JMX attributes or Metric Service Table columns separated by semi-colon
        /// </summary>
        [Input("jmxAttributes")]
        public Input<string>? JmxAttributes { get; set; }

        /// <summary>
        /// (Updatable) JMX Managed Bean Query or Metric Service Table name
        /// </summary>
        [Input("managedBeanQuery")]
        public Input<string>? ManagedBeanQuery { get; set; }

        /// <summary>
        /// (Updatable) Position and SQL Type of PL/SQL OUT parameter
        /// </summary>
        [Input("outParamDetails")]
        public Input<Inputs.MetricExtensionQueryPropertiesOutParamDetailsArgs>? OutParamDetails { get; set; }

        /// <summary>
        /// (Updatable) Supported protocol of resources to be associated with this metric extension. This is optional and defaults to HTTPS, which uses secure connection to the URL
        /// </summary>
        [Input("protocolType")]
        public Input<string>? ProtocolType { get; set; }

        /// <summary>
        /// (Updatable) Type of content response given by the http(s) URL
        /// </summary>
        [Input("responseContentType")]
        public Input<string>? ResponseContentType { get; set; }

        /// <summary>
        /// (Updatable) Script details applicable to any OS Command/HTTP based Metric Extension which needs to run a script to collect data. For removing it during OS Command based Metric Extension update, set its "content" property to an empty string. In that case, "name" property value is ignored.
        /// </summary>
        [Input("scriptDetails")]
        public Input<Inputs.MetricExtensionQueryPropertiesScriptDetailsArgs>? ScriptDetails { get; set; }

        /// <summary>
        /// (Updatable) Details of Sql content which needs to execute to collect Metric Extension data
        /// </summary>
        [Input("sqlDetails")]
        public Input<Inputs.MetricExtensionQueryPropertiesSqlDetailsArgs>? SqlDetails { get; set; }

        /// <summary>
        /// (Updatable) Type of SQL data collection method i.e. either a Statement or SQL Script File
        /// </summary>
        [Input("sqlType")]
        public Input<string>? SqlType { get; set; }

        /// <summary>
        /// (Updatable) String prefix used to identify metric output of the OS Command
        /// </summary>
        [Input("startsWith")]
        public Input<string>? StartsWith { get; set; }

        /// <summary>
        /// (Updatable) Http(s) end point URL
        /// </summary>
        [Input("url")]
        public Input<string>? Url { get; set; }

        public MetricExtensionQueryPropertiesArgs()
        {
        }
        public static new MetricExtensionQueryPropertiesArgs Empty => new MetricExtensionQueryPropertiesArgs();
    }
}
