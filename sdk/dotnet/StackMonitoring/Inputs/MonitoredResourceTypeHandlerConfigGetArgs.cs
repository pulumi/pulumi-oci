// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.StackMonitoring.Inputs
{

    public sealed class MonitoredResourceTypeHandlerConfigGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("collectdResourceNameConfigs")]
        private InputList<Inputs.MonitoredResourceTypeHandlerConfigCollectdResourceNameConfigGetArgs>? _collectdResourceNameConfigs;

        /// <summary>
        /// Resource name generation overriding configurations for collectd resource types.
        /// </summary>
        public InputList<Inputs.MonitoredResourceTypeHandlerConfigCollectdResourceNameConfigGetArgs> CollectdResourceNameConfigs
        {
            get => _collectdResourceNameConfigs ?? (_collectdResourceNameConfigs = new InputList<Inputs.MonitoredResourceTypeHandlerConfigCollectdResourceNameConfigGetArgs>());
            set => _collectdResourceNameConfigs = value;
        }

        [Input("collectorTypes")]
        private InputList<string>? _collectorTypes;

        /// <summary>
        /// List of collector/plugin names.
        /// </summary>
        public InputList<string> CollectorTypes
        {
            get => _collectorTypes ?? (_collectorTypes = new InputList<string>());
            set => _collectorTypes = value;
        }

        [Input("handlerProperties")]
        private InputList<Inputs.MonitoredResourceTypeHandlerConfigHandlerPropertyGetArgs>? _handlerProperties;

        /// <summary>
        /// List of handler configuration properties
        /// </summary>
        public InputList<Inputs.MonitoredResourceTypeHandlerConfigHandlerPropertyGetArgs> HandlerProperties
        {
            get => _handlerProperties ?? (_handlerProperties = new InputList<Inputs.MonitoredResourceTypeHandlerConfigHandlerPropertyGetArgs>());
            set => _handlerProperties = value;
        }

        [Input("metricMappings")]
        private InputList<Inputs.MonitoredResourceTypeHandlerConfigMetricMappingGetArgs>? _metricMappings;

        /// <summary>
        /// List of AgentExtensionHandlerMetricMappingDetails.
        /// </summary>
        public InputList<Inputs.MonitoredResourceTypeHandlerConfigMetricMappingGetArgs> MetricMappings
        {
            get => _metricMappings ?? (_metricMappings = new InputList<Inputs.MonitoredResourceTypeHandlerConfigMetricMappingGetArgs>());
            set => _metricMappings = value;
        }

        [Input("metricNameConfigs")]
        private InputList<Inputs.MonitoredResourceTypeHandlerConfigMetricNameConfigGetArgs>? _metricNameConfigs;

        /// <summary>
        /// Metric name generation overriding configurations.
        /// </summary>
        public InputList<Inputs.MonitoredResourceTypeHandlerConfigMetricNameConfigGetArgs> MetricNameConfigs
        {
            get => _metricNameConfigs ?? (_metricNameConfigs = new InputList<Inputs.MonitoredResourceTypeHandlerConfigMetricNameConfigGetArgs>());
            set => _metricNameConfigs = value;
        }

        /// <summary>
        /// Metric upload interval in seconds. Any metric sent by telegraf/collectd before the  configured interval expires will be dropped.
        /// </summary>
        [Input("metricUploadIntervalInSeconds")]
        public Input<int>? MetricUploadIntervalInSeconds { get; set; }

        [Input("telegrafResourceNameConfigs")]
        private InputList<Inputs.MonitoredResourceTypeHandlerConfigTelegrafResourceNameConfigGetArgs>? _telegrafResourceNameConfigs;

        /// <summary>
        /// Resource name generation overriding configurations for telegraf resource types.
        /// </summary>
        public InputList<Inputs.MonitoredResourceTypeHandlerConfigTelegrafResourceNameConfigGetArgs> TelegrafResourceNameConfigs
        {
            get => _telegrafResourceNameConfigs ?? (_telegrafResourceNameConfigs = new InputList<Inputs.MonitoredResourceTypeHandlerConfigTelegrafResourceNameConfigGetArgs>());
            set => _telegrafResourceNameConfigs = value;
        }

        /// <summary>
        /// Resource group string; if not specified, the resource group string will be generated by the handler.
        /// </summary>
        [Input("telemetryResourceGroup")]
        public Input<string>? TelemetryResourceGroup { get; set; }

        public MonitoredResourceTypeHandlerConfigGetArgs()
        {
        }
        public static new MonitoredResourceTypeHandlerConfigGetArgs Empty => new MonitoredResourceTypeHandlerConfigGetArgs();
    }
}
