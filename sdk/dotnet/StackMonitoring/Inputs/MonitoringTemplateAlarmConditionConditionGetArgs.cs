// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.StackMonitoring.Inputs
{

    public sealed class MonitoringTemplateAlarmConditionConditionGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The human-readable content of the delivered alarm notification. Oracle recommends providing guidance to operators for resolving the alarm condition. Consider adding links to standard runbook practices. Avoid entering confidential information.
        /// </summary>
        [Input("body")]
        public Input<string>? Body { get; set; }

        /// <summary>
        /// (Updatable) The Monitoring Query Language (MQL) expression to evaluate for the alarm.
        /// </summary>
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        /// <summary>
        /// (Updatable) Severity - Critical/Warning
        /// </summary>
        [Input("severity", required: true)]
        public Input<string> Severity { get; set; } = null!;

        /// <summary>
        /// (Updatable) Whether the note need to add into bottom of the body for mapping the alarms information with template or not.
        /// </summary>
        [Input("shouldAppendNote")]
        public Input<bool>? ShouldAppendNote { get; set; }

        /// <summary>
        /// (Updatable) Whether the URL need to add into bottom of the body for mapping the alarms information with template or not.
        /// </summary>
        [Input("shouldAppendUrl")]
        public Input<bool>? ShouldAppendUrl { get; set; }

        /// <summary>
        /// (Updatable) The period of time that the condition defined in the alarm must persist before the alarm state changes from "OK" to "FIRING".
        /// </summary>
        [Input("triggerDelay")]
        public Input<string>? TriggerDelay { get; set; }

        public MonitoringTemplateAlarmConditionConditionGetArgs()
        {
        }
        public static new MonitoringTemplateAlarmConditionConditionGetArgs Empty => new MonitoringTemplateAlarmConditionConditionGetArgs();
    }
}
