// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.StackMonitoring
{
    /// <summary>
    /// This resource provides the Metric Extension resource in Oracle Cloud Infrastructure Stack Monitoring service.
    /// 
    /// Creates a new metric extension resource for a given compartment
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testMetricExtension = new Oci.StackMonitoring.MetricExtension("testMetricExtension", new()
    ///     {
    ///         CollectionRecurrences = @var.Metric_extension_collection_recurrences,
    ///         CompartmentId = @var.Compartment_id,
    ///         DisplayName = @var.Metric_extension_display_name,
    ///         MetricLists = new[]
    ///         {
    ///             new Oci.StackMonitoring.Inputs.MetricExtensionMetricListArgs
    ///             {
    ///                 DataType = @var.Metric_extension_metric_list_data_type,
    ///                 Name = @var.Metric_extension_metric_list_name,
    ///                 ComputeExpression = @var.Metric_extension_metric_list_compute_expression,
    ///                 DisplayName = @var.Metric_extension_metric_list_display_name,
    ///                 IsDimension = @var.Metric_extension_metric_list_is_dimension,
    ///                 IsHidden = @var.Metric_extension_metric_list_is_hidden,
    ///                 MetricCategory = @var.Metric_extension_metric_list_metric_category,
    ///                 Unit = @var.Metric_extension_metric_list_unit,
    ///             },
    ///         },
    ///         QueryProperties = new Oci.StackMonitoring.Inputs.MetricExtensionQueryPropertiesArgs
    ///         {
    ///             CollectionMethod = @var.Metric_extension_query_properties_collection_method,
    ///             Arguments = @var.Metric_extension_query_properties_arguments,
    ///             AutoRowPrefix = @var.Metric_extension_query_properties_auto_row_prefix,
    ///             Command = @var.Metric_extension_query_properties_command,
    ///             Delimiter = @var.Metric_extension_query_properties_delimiter,
    ///             IdentityMetric = @var.Metric_extension_query_properties_identity_metric,
    ///             InParamDetails = new[]
    ///             {
    ///                 new Oci.StackMonitoring.Inputs.MetricExtensionQueryPropertiesInParamDetailArgs
    ///                 {
    ///                     InParamPosition = @var.Metric_extension_query_properties_in_param_details_in_param_position,
    ///                     InParamValue = @var.Metric_extension_query_properties_in_param_details_in_param_value,
    ///                 },
    ///             },
    ///             IsMetricServiceEnabled = @var.Metric_extension_query_properties_is_metric_service_enabled,
    ///             JmxAttributes = @var.Metric_extension_query_properties_jmx_attributes,
    ///             ManagedBeanQuery = @var.Metric_extension_query_properties_managed_bean_query,
    ///             OutParamDetails = new Oci.StackMonitoring.Inputs.MetricExtensionQueryPropertiesOutParamDetailsArgs
    ///             {
    ///                 OutParamPosition = @var.Metric_extension_query_properties_out_param_details_out_param_position,
    ///                 OutParamType = @var.Metric_extension_query_properties_out_param_details_out_param_type,
    ///             },
    ///             ScriptDetails = new Oci.StackMonitoring.Inputs.MetricExtensionQueryPropertiesScriptDetailsArgs
    ///             {
    ///                 Content = @var.Metric_extension_query_properties_script_details_content,
    ///                 Name = @var.Metric_extension_query_properties_script_details_name,
    ///             },
    ///             SqlDetails = new Oci.StackMonitoring.Inputs.MetricExtensionQueryPropertiesSqlDetailsArgs
    ///             {
    ///                 Content = @var.Metric_extension_query_properties_sql_details_content,
    ///                 ScriptFileName = @var.Metric_extension_query_properties_sql_details_script_file_name,
    ///             },
    ///             SqlType = @var.Metric_extension_query_properties_sql_type,
    ///             StartsWith = @var.Metric_extension_query_properties_starts_with,
    ///         },
    ///         ResourceType = @var.Metric_extension_resource_type,
    ///         Description = @var.Metric_extension_description,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// MetricExtensions can be imported using the `id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import oci:StackMonitoring/metricExtension:MetricExtension test_metric_extension "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:StackMonitoring/metricExtension:MetricExtension")]
    public partial class MetricExtension : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) Type of possible collection methods.
        /// </summary>
        [Output("collectionMethod")]
        public Output<string> CollectionMethod { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Schedule of metric extension should use RFC 5545 format i.e. recur-rule-part = "FREQ";INTERVAL where FREQ rule part identifies the type of recurrence rule. Valid values are "MINUTELY","HOURLY","DAILY" to specify repeating events based on an interval of a minute, an hour and a day or more. Example- FREQ=DAILY;INTERVAL=1
        /// </summary>
        [Output("collectionRecurrences")]
        public Output<string> CollectionRecurrences { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// Created by user
        /// </summary>
        [Output("createdBy")]
        public Output<string> CreatedBy { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Description of the metric extension.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Display name of the metric.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// List of resource objects on which this metric extension is enabled.
        /// </summary>
        [Output("enabledOnResources")]
        public Output<ImmutableArray<Outputs.MetricExtensionEnabledOnResource>> EnabledOnResources { get; private set; } = null!;

        /// <summary>
        /// Count of resources on which this metric extension is enabled.
        /// </summary>
        [Output("enabledOnResourcesCount")]
        public Output<int> EnabledOnResourcesCount { get; private set; } = null!;

        /// <summary>
        /// Last updated by user
        /// </summary>
        [Output("lastUpdatedBy")]
        public Output<string> LastUpdatedBy { get; private set; } = null!;

        /// <summary>
        /// (Updatable) List of metrics which are part of this metric extension
        /// </summary>
        [Output("metricLists")]
        public Output<ImmutableArray<Outputs.MetricExtensionMetricList>> MetricLists { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Name of the script file
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// (Updatable) An optional property when set to `true` triggers Publish of a metric extension. Once set to `true`, it cannot be changed back to `false`. Update of publish_trigger cannot be combined with other updates in the same request. A metric extension cannot be tested and its definition cannot be updated once it is marked published or publish_trigger is updated to `true`.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("publishTrigger")]
        public Output<bool?> PublishTrigger { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Collection method and query properties details of metric extension
        /// </summary>
        [Output("queryProperties")]
        public Output<Outputs.MetricExtensionQueryProperties> QueryProperties { get; private set; } = null!;

        /// <summary>
        /// Resource type to which Metric Extension applies
        /// </summary>
        [Output("resourceType")]
        public Output<string> ResourceType { get; private set; } = null!;

        /// <summary>
        /// The URI path that the user can do a GET on to access the metric extension metadata
        /// </summary>
        [Output("resourceUri")]
        public Output<string> ResourceUri { get; private set; } = null!;

        /// <summary>
        /// The current lifecycle state of the metric extension
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The current status of the metric extension i.e. whether it is Draft or Published
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Tenant Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
        /// </summary>
        [Output("tenantId")]
        public Output<string> TenantId { get; private set; } = null!;

        /// <summary>
        /// Metric Extension creation time. An RFC3339 formatted datetime string.
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// Metric Extension update time. An RFC3339 formatted datetime string.
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;


        /// <summary>
        /// Create a MetricExtension resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MetricExtension(string name, MetricExtensionArgs args, CustomResourceOptions? options = null)
            : base("oci:StackMonitoring/metricExtension:MetricExtension", name, args ?? new MetricExtensionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MetricExtension(string name, Input<string> id, MetricExtensionState? state = null, CustomResourceOptions? options = null)
            : base("oci:StackMonitoring/metricExtension:MetricExtension", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MetricExtension resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MetricExtension Get(string name, Input<string> id, MetricExtensionState? state = null, CustomResourceOptions? options = null)
        {
            return new MetricExtension(name, id, state, options);
        }
    }

    public sealed class MetricExtensionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) Schedule of metric extension should use RFC 5545 format i.e. recur-rule-part = "FREQ";INTERVAL where FREQ rule part identifies the type of recurrence rule. Valid values are "MINUTELY","HOURLY","DAILY" to specify repeating events based on an interval of a minute, an hour and a day or more. Example- FREQ=DAILY;INTERVAL=1
        /// </summary>
        [Input("collectionRecurrences", required: true)]
        public Input<string> CollectionRecurrences { get; set; } = null!;

        /// <summary>
        /// (Updatable) Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// (Updatable) Description of the metric extension.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) Display name of the metric.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        [Input("metricLists", required: true)]
        private InputList<Inputs.MetricExtensionMetricListArgs>? _metricLists;

        /// <summary>
        /// (Updatable) List of metrics which are part of this metric extension
        /// </summary>
        public InputList<Inputs.MetricExtensionMetricListArgs> MetricLists
        {
            get => _metricLists ?? (_metricLists = new InputList<Inputs.MetricExtensionMetricListArgs>());
            set => _metricLists = value;
        }

        /// <summary>
        /// (Updatable) Name of the script file
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// (Updatable) An optional property when set to `true` triggers Publish of a metric extension. Once set to `true`, it cannot be changed back to `false`. Update of publish_trigger cannot be combined with other updates in the same request. A metric extension cannot be tested and its definition cannot be updated once it is marked published or publish_trigger is updated to `true`.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("publishTrigger")]
        public Input<bool>? PublishTrigger { get; set; }

        /// <summary>
        /// (Updatable) Collection method and query properties details of metric extension
        /// </summary>
        [Input("queryProperties", required: true)]
        public Input<Inputs.MetricExtensionQueryPropertiesArgs> QueryProperties { get; set; } = null!;

        /// <summary>
        /// Resource type to which Metric Extension applies
        /// </summary>
        [Input("resourceType", required: true)]
        public Input<string> ResourceType { get; set; } = null!;

        public MetricExtensionArgs()
        {
        }
        public static new MetricExtensionArgs Empty => new MetricExtensionArgs();
    }

    public sealed class MetricExtensionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) Type of possible collection methods.
        /// </summary>
        [Input("collectionMethod")]
        public Input<string>? CollectionMethod { get; set; }

        /// <summary>
        /// (Updatable) Schedule of metric extension should use RFC 5545 format i.e. recur-rule-part = "FREQ";INTERVAL where FREQ rule part identifies the type of recurrence rule. Valid values are "MINUTELY","HOURLY","DAILY" to specify repeating events based on an interval of a minute, an hour and a day or more. Example- FREQ=DAILY;INTERVAL=1
        /// </summary>
        [Input("collectionRecurrences")]
        public Input<string>? CollectionRecurrences { get; set; }

        /// <summary>
        /// (Updatable) Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// Created by user
        /// </summary>
        [Input("createdBy")]
        public Input<string>? CreatedBy { get; set; }

        /// <summary>
        /// (Updatable) Description of the metric extension.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) Display name of the metric.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("enabledOnResources")]
        private InputList<Inputs.MetricExtensionEnabledOnResourceGetArgs>? _enabledOnResources;

        /// <summary>
        /// List of resource objects on which this metric extension is enabled.
        /// </summary>
        public InputList<Inputs.MetricExtensionEnabledOnResourceGetArgs> EnabledOnResources
        {
            get => _enabledOnResources ?? (_enabledOnResources = new InputList<Inputs.MetricExtensionEnabledOnResourceGetArgs>());
            set => _enabledOnResources = value;
        }

        /// <summary>
        /// Count of resources on which this metric extension is enabled.
        /// </summary>
        [Input("enabledOnResourcesCount")]
        public Input<int>? EnabledOnResourcesCount { get; set; }

        /// <summary>
        /// Last updated by user
        /// </summary>
        [Input("lastUpdatedBy")]
        public Input<string>? LastUpdatedBy { get; set; }

        [Input("metricLists")]
        private InputList<Inputs.MetricExtensionMetricListGetArgs>? _metricLists;

        /// <summary>
        /// (Updatable) List of metrics which are part of this metric extension
        /// </summary>
        public InputList<Inputs.MetricExtensionMetricListGetArgs> MetricLists
        {
            get => _metricLists ?? (_metricLists = new InputList<Inputs.MetricExtensionMetricListGetArgs>());
            set => _metricLists = value;
        }

        /// <summary>
        /// (Updatable) Name of the script file
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// (Updatable) An optional property when set to `true` triggers Publish of a metric extension. Once set to `true`, it cannot be changed back to `false`. Update of publish_trigger cannot be combined with other updates in the same request. A metric extension cannot be tested and its definition cannot be updated once it is marked published or publish_trigger is updated to `true`.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("publishTrigger")]
        public Input<bool>? PublishTrigger { get; set; }

        /// <summary>
        /// (Updatable) Collection method and query properties details of metric extension
        /// </summary>
        [Input("queryProperties")]
        public Input<Inputs.MetricExtensionQueryPropertiesGetArgs>? QueryProperties { get; set; }

        /// <summary>
        /// Resource type to which Metric Extension applies
        /// </summary>
        [Input("resourceType")]
        public Input<string>? ResourceType { get; set; }

        /// <summary>
        /// The URI path that the user can do a GET on to access the metric extension metadata
        /// </summary>
        [Input("resourceUri")]
        public Input<string>? ResourceUri { get; set; }

        /// <summary>
        /// The current lifecycle state of the metric extension
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The current status of the metric extension i.e. whether it is Draft or Published
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Tenant Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
        /// </summary>
        [Input("tenantId")]
        public Input<string>? TenantId { get; set; }

        /// <summary>
        /// Metric Extension creation time. An RFC3339 formatted datetime string.
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// Metric Extension update time. An RFC3339 formatted datetime string.
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        public MetricExtensionState()
        {
        }
        public static new MetricExtensionState Empty => new MetricExtensionState();
    }
}
