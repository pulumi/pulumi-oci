// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.StackMonitoring
{
    /// <summary>
    /// This resource provides the Metric Extensions Test Management resource in Oracle Cloud Infrastructure Stack Monitoring service.
    /// 
    /// Performs test of Metric Extension on a specific resource Id
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testMetricExtensionsTestManagement = new Oci.StackMonitoring.MetricExtensionsTestManagement("test_metric_extensions_test_management", new()
    ///     {
    ///         MetricExtensionId = testMetricExtension.Id,
    ///         ResourceIds = metricExtensionsTestManagementResourceIds[0],
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Import is not supported for this resource.
    /// </summary>
    [OciResourceType("oci:StackMonitoring/metricExtensionsTestManagement:MetricExtensionsTestManagement")]
    public partial class MetricExtensionsTestManagement : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the metric extension resource.
        /// </summary>
        [Output("metricExtensionId")]
        public Output<string> MetricExtensionId { get; private set; } = null!;

        /// <summary>
        /// List of Resource IDs [OCID]. Currently, supports only one resource id per request.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("resourceIds")]
        public Output<string> ResourceIds { get; private set; } = null!;

        /// <summary>
        /// Test Run Id
        /// </summary>
        [Output("testRunId")]
        public Output<string> TestRunId { get; private set; } = null!;

        /// <summary>
        /// Test Run Metric Suffix
        /// </summary>
        [Output("testRunMetricSuffix")]
        public Output<string> TestRunMetricSuffix { get; private set; } = null!;

        /// <summary>
        /// Test Run Namespace name
        /// </summary>
        [Output("testRunNamespaceName")]
        public Output<string> TestRunNamespaceName { get; private set; } = null!;

        /// <summary>
        /// Test Run Resource Group name
        /// </summary>
        [Output("testRunResourceGroupName")]
        public Output<string> TestRunResourceGroupName { get; private set; } = null!;


        /// <summary>
        /// Create a MetricExtensionsTestManagement resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MetricExtensionsTestManagement(string name, MetricExtensionsTestManagementArgs args, CustomResourceOptions? options = null)
            : base("oci:StackMonitoring/metricExtensionsTestManagement:MetricExtensionsTestManagement", name, args ?? new MetricExtensionsTestManagementArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MetricExtensionsTestManagement(string name, Input<string> id, MetricExtensionsTestManagementState? state = null, CustomResourceOptions? options = null)
            : base("oci:StackMonitoring/metricExtensionsTestManagement:MetricExtensionsTestManagement", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MetricExtensionsTestManagement resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MetricExtensionsTestManagement Get(string name, Input<string> id, MetricExtensionsTestManagementState? state = null, CustomResourceOptions? options = null)
        {
            return new MetricExtensionsTestManagement(name, id, state, options);
        }
    }

    public sealed class MetricExtensionsTestManagementArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the metric extension resource.
        /// </summary>
        [Input("metricExtensionId", required: true)]
        public Input<string> MetricExtensionId { get; set; } = null!;

        /// <summary>
        /// List of Resource IDs [OCID]. Currently, supports only one resource id per request.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("resourceIds", required: true)]
        public Input<string> ResourceIds { get; set; } = null!;

        public MetricExtensionsTestManagementArgs()
        {
        }
        public static new MetricExtensionsTestManagementArgs Empty => new MetricExtensionsTestManagementArgs();
    }

    public sealed class MetricExtensionsTestManagementState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the metric extension resource.
        /// </summary>
        [Input("metricExtensionId")]
        public Input<string>? MetricExtensionId { get; set; }

        /// <summary>
        /// List of Resource IDs [OCID]. Currently, supports only one resource id per request.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("resourceIds")]
        public Input<string>? ResourceIds { get; set; }

        /// <summary>
        /// Test Run Id
        /// </summary>
        [Input("testRunId")]
        public Input<string>? TestRunId { get; set; }

        /// <summary>
        /// Test Run Metric Suffix
        /// </summary>
        [Input("testRunMetricSuffix")]
        public Input<string>? TestRunMetricSuffix { get; set; }

        /// <summary>
        /// Test Run Namespace name
        /// </summary>
        [Input("testRunNamespaceName")]
        public Input<string>? TestRunNamespaceName { get; set; }

        /// <summary>
        /// Test Run Resource Group name
        /// </summary>
        [Input("testRunResourceGroupName")]
        public Input<string>? TestRunResourceGroupName { get; set; }

        public MetricExtensionsTestManagementState()
        {
        }
        public static new MetricExtensionsTestManagementState Empty => new MetricExtensionsTestManagementState();
    }
}
