// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.StackMonitoring
{
    /// <summary>
    /// This resource provides the Monitored Resource resource in Oracle Cloud Infrastructure Stack Monitoring service.
    /// 
    /// Creates a new monitored resource for the given resource type with the details and submits
    /// a work request for promoting the resource to agent. Once the resource is successfully
    /// added to agent, resource state will be marked active.
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testMonitoredResource = new Oci.StackMonitoring.MonitoredResource("testMonitoredResource", new()
    ///     {
    ///         CompartmentId = @var.Compartment_id,
    ///         Type = @var.Monitored_resource_type,
    ///         AdditionalAliases = new[]
    ///         {
    ///             new Oci.StackMonitoring.Inputs.MonitoredResourceAdditionalAliasArgs
    ///             {
    ///                 Credential = new Oci.StackMonitoring.Inputs.MonitoredResourceAdditionalAliasCredentialArgs
    ///                 {
    ///                     Name = @var.Monitored_resource_additional_aliases_credential_name,
    ///                     Service = @var.Monitored_resource_additional_aliases_credential_service,
    ///                     Source = @var.Monitored_resource_additional_aliases_credential_source,
    ///                 },
    ///                 Name = @var.Monitored_resource_additional_aliases_name,
    ///                 Source = @var.Monitored_resource_additional_aliases_source,
    ///             },
    ///         },
    ///         AdditionalCredentials = new[]
    ///         {
    ///             new Oci.StackMonitoring.Inputs.MonitoredResourceAdditionalCredentialArgs
    ///             {
    ///                 CredentialType = @var.Monitored_resource_additional_credentials_credential_type,
    ///                 Description = @var.Monitored_resource_additional_credentials_description,
    ///                 KeyId = oci_kms_key.Test_key.Id,
    ///                 Name = @var.Monitored_resource_additional_credentials_name,
    ///                 Properties = new[]
    ///                 {
    ///                     new Oci.StackMonitoring.Inputs.MonitoredResourceAdditionalCredentialPropertyArgs
    ///                     {
    ///                         Name = @var.Monitored_resource_additional_credentials_properties_name,
    ///                         Value = @var.Monitored_resource_additional_credentials_properties_value,
    ///                     },
    ///                 },
    ///                 Source = @var.Monitored_resource_additional_credentials_source,
    ///                 Type = @var.Monitored_resource_additional_credentials_type,
    ///             },
    ///         },
    ///         Aliases = new Oci.StackMonitoring.Inputs.MonitoredResourceAliasesArgs
    ///         {
    ///             Credential = new Oci.StackMonitoring.Inputs.MonitoredResourceAliasesCredentialArgs
    ///             {
    ///                 Name = @var.Monitored_resource_aliases_credential_name,
    ///                 Service = @var.Monitored_resource_aliases_credential_service,
    ///                 Source = @var.Monitored_resource_aliases_credential_source,
    ///             },
    ///             Name = @var.Monitored_resource_aliases_name,
    ///             Source = @var.Monitored_resource_aliases_source,
    ///         },
    ///         Credentials = new Oci.StackMonitoring.Inputs.MonitoredResourceCredentialsArgs
    ///         {
    ///             CredentialType = @var.Monitored_resource_credentials_credential_type,
    ///             Description = @var.Monitored_resource_credentials_description,
    ///             KeyId = @var.Monitored_resource_credentials_key_id,
    ///             Name = @var.Monitored_resource_credentials_name,
    ///             Properties = new[]
    ///             {
    ///                 new Oci.StackMonitoring.Inputs.MonitoredResourceCredentialsPropertyArgs
    ///                 {
    ///                     Name = @var.Monitored_resource_credentials_properties_name,
    ///                     Value = @var.Monitored_resource_credentials_properties_value,
    ///                 },
    ///             },
    ///             Source = @var.Monitored_resource_credentials_source,
    ///             Type = @var.Monitored_resource_credentials_type,
    ///         },
    ///         DatabaseConnectionDetails = new Oci.StackMonitoring.Inputs.MonitoredResourceDatabaseConnectionDetailsArgs
    ///         {
    ///             Port = @var.Monitored_resource_database_connection_details_port,
    ///             Protocol = @var.Monitored_resource_database_connection_details_protocol,
    ///             ServiceName = @var.Monitored_resource_database_service_name,
    ///             ConnectorId = @var.Monitored_resource_database_connector_id,
    ///             DbId = @var.Monitored_resource_database_id,
    ///             DbUniqueName = @var.Monitored_resource_database_connection_details_db_unique_name,
    ///             SslSecretId = oci_vault_secret.Test_secret.Id,
    ///         },
    ///         DefinedTags = 
    ///         {
    ///             { "foo-namespace.bar-key", "value" },
    ///         },
    ///         DisplayName = @var.Monitored_resource_display_name,
    ///         ExternalResourceId = @var.Monitored_resource_external_resource_id,
    ///         ExternalId = oci_stack_monitoring_external.Test_external.Id,
    ///         FreeformTags = 
    ///         {
    ///             { "bar-key", "value" },
    ///         },
    ///         HostName = @var.Monitored_resource_host_name,
    ///         License = @var.Monitored_resource_license,
    ///         ManagementAgentId = oci_management_agent_management_agent.Test_management_agent.Id,
    ///         Properties = new[]
    ///         {
    ///             new Oci.StackMonitoring.Inputs.MonitoredResourcePropertyArgs
    ///             {
    ///                 Name = @var.Monitored_resource_properties_name,
    ///                 Value = @var.Monitored_resource_properties_value,
    ///             },
    ///         },
    ///         ResourceTimeZone = @var.Monitored_resource_resource_time_zone,
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// MonitoredResources can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:StackMonitoring/monitoredResource:MonitoredResource test_monitored_resource "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:StackMonitoring/monitoredResource:MonitoredResource")]
    public partial class MonitoredResource : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) List of MonitoredResourceAliasCredentials. This property complements the existing  "aliases" property by allowing user to specify more than one credential alias.  If both "aliases" and "additionalAliases" are specified, union of the  values is used as list of aliases applicable for this resource. If any duplicate found in the combined list of "alias" and "additionalAliases",  an error will be thrown.
        /// </summary>
        [Output("additionalAliases")]
        public Output<ImmutableArray<Outputs.MonitoredResourceAdditionalAlias>> AdditionalAliases { get; private set; } = null!;

        /// <summary>
        /// (Updatable) List of MonitoredResourceCredentials. This property complements the existing  "credentials" property by allowing user to specify more than one credential.  If both "credential" and "additionalCredentials" are specified, union of the  values is used as list of credentials applicable for this resource. If any duplicate found in the combined list of "credentials" and "additionalCredentials",  an error will be thrown.
        /// </summary>
        [Output("additionalCredentials")]
        public Output<ImmutableArray<Outputs.MonitoredResourceAdditionalCredential>> AdditionalCredentials { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Monitored Resource Alias Credential Details
        /// </summary>
        [Output("aliases")]
        public Output<Outputs.MonitoredResourceAliases?> Aliases { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Monitored Resource Credential Details.
        /// </summary>
        [Output("credentials")]
        public Output<Outputs.MonitoredResourceCredentials?> Credentials { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Connection details for the database.
        /// </summary>
        [Output("databaseConnectionDetails")]
        public Output<Outputs.MonitoredResourceDatabaseConnectionDetails?> DatabaseConnectionDetails { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, object>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Monitored resource display name.
        /// </summary>
        [Output("displayName")]
        public Output<string?> DisplayName { get; private set; } = null!;

        /// <summary>
        /// External resource is any Oracle Cloud Infrastructure resource identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) which is not a Stack Monitoring service resource. Currently supports only Oracle Cloud Infrastructure compute instance.
        /// </summary>
        [Output("externalId")]
        public Output<string?> ExternalId { get; private set; } = null!;

        /// <summary>
        /// Generally used by DBaaS to send the Database OCID stored on the DBaaS. The same will be passed to resource service to enable Stack Monitoring Service on DBM. This will be stored in Stack Monitoring Resource Service data store as identifier for monitored resource. If this header is not set as part of the request, then an id will be generated and stored for the resource.
        /// </summary>
        [Output("externalResourceId")]
        public Output<string?> ExternalResourceId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, object>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Host name of the monitored resource.
        /// </summary>
        [Output("hostName")]
        public Output<string?> HostName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) License edition of the monitored resource. If not provided  the default license type for the compartment will be used.
        /// </summary>
        [Output("license")]
        public Output<string> License { get; private set; } = null!;

        /// <summary>
        /// Management Agent Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Output("managementAgentId")]
        public Output<string?> ManagementAgentId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Property Name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// (Updatable) List of monitored resource properties.
        /// </summary>
        [Output("properties")]
        public Output<ImmutableArray<Outputs.MonitoredResourceProperty>> Properties { get; private set; } = null!;

        /// <summary>
        /// Resource Category to indicate the kind of resource type.
        /// </summary>
        [Output("resourceCategory")]
        public Output<string> ResourceCategory { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Time zone in the form of tz database canonical zone ID. Specifies the preference with a value that uses the IANA Time Zone Database format (x-obmcs-time-zone). For example - America/Los_Angeles
        /// </summary>
        [Output("resourceTimeZone")]
        public Output<string?> ResourceTimeZone { get; private set; } = null!;

        /// <summary>
        /// Source type to indicate if the resource is stack monitoring discovered, Oracle Cloud Infrastructure native resource, etc.
        /// </summary>
        [Output("sourceType")]
        public Output<string> SourceType { get; private set; } = null!;

        /// <summary>
        /// Lifecycle state of the monitored resource.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        [Output("systemTags")]
        public Output<ImmutableDictionary<string, object>> SystemTags { get; private set; } = null!;

        /// <summary>
        /// Tenancy Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Output("tenantId")]
        public Output<string> TenantId { get; private set; } = null!;

        /// <summary>
        /// The date and time when the monitored resource was created, expressed in  [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The date and time when the monitored resource was last updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;

        /// <summary>
        /// Monitored Resource Type. 
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a MonitoredResource resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MonitoredResource(string name, MonitoredResourceArgs args, CustomResourceOptions? options = null)
            : base("oci:StackMonitoring/monitoredResource:MonitoredResource", name, args ?? new MonitoredResourceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MonitoredResource(string name, Input<string> id, MonitoredResourceState? state = null, CustomResourceOptions? options = null)
            : base("oci:StackMonitoring/monitoredResource:MonitoredResource", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MonitoredResource resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MonitoredResource Get(string name, Input<string> id, MonitoredResourceState? state = null, CustomResourceOptions? options = null)
        {
            return new MonitoredResource(name, id, state, options);
        }
    }

    public sealed class MonitoredResourceArgs : global::Pulumi.ResourceArgs
    {
        [Input("additionalAliases")]
        private InputList<Inputs.MonitoredResourceAdditionalAliasArgs>? _additionalAliases;

        /// <summary>
        /// (Updatable) List of MonitoredResourceAliasCredentials. This property complements the existing  "aliases" property by allowing user to specify more than one credential alias.  If both "aliases" and "additionalAliases" are specified, union of the  values is used as list of aliases applicable for this resource. If any duplicate found in the combined list of "alias" and "additionalAliases",  an error will be thrown.
        /// </summary>
        public InputList<Inputs.MonitoredResourceAdditionalAliasArgs> AdditionalAliases
        {
            get => _additionalAliases ?? (_additionalAliases = new InputList<Inputs.MonitoredResourceAdditionalAliasArgs>());
            set => _additionalAliases = value;
        }

        [Input("additionalCredentials")]
        private InputList<Inputs.MonitoredResourceAdditionalCredentialArgs>? _additionalCredentials;

        /// <summary>
        /// (Updatable) List of MonitoredResourceCredentials. This property complements the existing  "credentials" property by allowing user to specify more than one credential.  If both "credential" and "additionalCredentials" are specified, union of the  values is used as list of credentials applicable for this resource. If any duplicate found in the combined list of "credentials" and "additionalCredentials",  an error will be thrown.
        /// </summary>
        public InputList<Inputs.MonitoredResourceAdditionalCredentialArgs> AdditionalCredentials
        {
            get => _additionalCredentials ?? (_additionalCredentials = new InputList<Inputs.MonitoredResourceAdditionalCredentialArgs>());
            set => _additionalCredentials = value;
        }

        /// <summary>
        /// (Updatable) Monitored Resource Alias Credential Details
        /// </summary>
        [Input("aliases")]
        public Input<Inputs.MonitoredResourceAliasesArgs>? Aliases { get; set; }

        /// <summary>
        /// (Updatable) Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// (Updatable) Monitored Resource Credential Details.
        /// </summary>
        [Input("credentials")]
        public Input<Inputs.MonitoredResourceCredentialsArgs>? Credentials { get; set; }

        /// <summary>
        /// (Updatable) Connection details for the database.
        /// </summary>
        [Input("databaseConnectionDetails")]
        public Input<Inputs.MonitoredResourceDatabaseConnectionDetailsArgs>? DatabaseConnectionDetails { get; set; }

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) Monitored resource display name.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// External resource is any Oracle Cloud Infrastructure resource identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) which is not a Stack Monitoring service resource. Currently supports only Oracle Cloud Infrastructure compute instance.
        /// </summary>
        [Input("externalId")]
        public Input<string>? ExternalId { get; set; }

        /// <summary>
        /// Generally used by DBaaS to send the Database OCID stored on the DBaaS. The same will be passed to resource service to enable Stack Monitoring Service on DBM. This will be stored in Stack Monitoring Resource Service data store as identifier for monitored resource. If this header is not set as part of the request, then an id will be generated and stored for the resource.
        /// </summary>
        [Input("externalResourceId")]
        public Input<string>? ExternalResourceId { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) Host name of the monitored resource.
        /// </summary>
        [Input("hostName")]
        public Input<string>? HostName { get; set; }

        /// <summary>
        /// (Updatable) License edition of the monitored resource. If not provided  the default license type for the compartment will be used.
        /// </summary>
        [Input("license")]
        public Input<string>? License { get; set; }

        /// <summary>
        /// Management Agent Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("managementAgentId")]
        public Input<string>? ManagementAgentId { get; set; }

        /// <summary>
        /// (Updatable) Property Name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("properties")]
        private InputList<Inputs.MonitoredResourcePropertyArgs>? _properties;

        /// <summary>
        /// (Updatable) List of monitored resource properties.
        /// </summary>
        public InputList<Inputs.MonitoredResourcePropertyArgs> Properties
        {
            get => _properties ?? (_properties = new InputList<Inputs.MonitoredResourcePropertyArgs>());
            set => _properties = value;
        }

        /// <summary>
        /// (Updatable) Time zone in the form of tz database canonical zone ID. Specifies the preference with a value that uses the IANA Time Zone Database format (x-obmcs-time-zone). For example - America/Los_Angeles
        /// </summary>
        [Input("resourceTimeZone")]
        public Input<string>? ResourceTimeZone { get; set; }

        /// <summary>
        /// Monitored Resource Type. 
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public MonitoredResourceArgs()
        {
        }
        public static new MonitoredResourceArgs Empty => new MonitoredResourceArgs();
    }

    public sealed class MonitoredResourceState : global::Pulumi.ResourceArgs
    {
        [Input("additionalAliases")]
        private InputList<Inputs.MonitoredResourceAdditionalAliasGetArgs>? _additionalAliases;

        /// <summary>
        /// (Updatable) List of MonitoredResourceAliasCredentials. This property complements the existing  "aliases" property by allowing user to specify more than one credential alias.  If both "aliases" and "additionalAliases" are specified, union of the  values is used as list of aliases applicable for this resource. If any duplicate found in the combined list of "alias" and "additionalAliases",  an error will be thrown.
        /// </summary>
        public InputList<Inputs.MonitoredResourceAdditionalAliasGetArgs> AdditionalAliases
        {
            get => _additionalAliases ?? (_additionalAliases = new InputList<Inputs.MonitoredResourceAdditionalAliasGetArgs>());
            set => _additionalAliases = value;
        }

        [Input("additionalCredentials")]
        private InputList<Inputs.MonitoredResourceAdditionalCredentialGetArgs>? _additionalCredentials;

        /// <summary>
        /// (Updatable) List of MonitoredResourceCredentials. This property complements the existing  "credentials" property by allowing user to specify more than one credential.  If both "credential" and "additionalCredentials" are specified, union of the  values is used as list of credentials applicable for this resource. If any duplicate found in the combined list of "credentials" and "additionalCredentials",  an error will be thrown.
        /// </summary>
        public InputList<Inputs.MonitoredResourceAdditionalCredentialGetArgs> AdditionalCredentials
        {
            get => _additionalCredentials ?? (_additionalCredentials = new InputList<Inputs.MonitoredResourceAdditionalCredentialGetArgs>());
            set => _additionalCredentials = value;
        }

        /// <summary>
        /// (Updatable) Monitored Resource Alias Credential Details
        /// </summary>
        [Input("aliases")]
        public Input<Inputs.MonitoredResourceAliasesGetArgs>? Aliases { get; set; }

        /// <summary>
        /// (Updatable) Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// (Updatable) Monitored Resource Credential Details.
        /// </summary>
        [Input("credentials")]
        public Input<Inputs.MonitoredResourceCredentialsGetArgs>? Credentials { get; set; }

        /// <summary>
        /// (Updatable) Connection details for the database.
        /// </summary>
        [Input("databaseConnectionDetails")]
        public Input<Inputs.MonitoredResourceDatabaseConnectionDetailsGetArgs>? DatabaseConnectionDetails { get; set; }

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) Monitored resource display name.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// External resource is any Oracle Cloud Infrastructure resource identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) which is not a Stack Monitoring service resource. Currently supports only Oracle Cloud Infrastructure compute instance.
        /// </summary>
        [Input("externalId")]
        public Input<string>? ExternalId { get; set; }

        /// <summary>
        /// Generally used by DBaaS to send the Database OCID stored on the DBaaS. The same will be passed to resource service to enable Stack Monitoring Service on DBM. This will be stored in Stack Monitoring Resource Service data store as identifier for monitored resource. If this header is not set as part of the request, then an id will be generated and stored for the resource.
        /// </summary>
        [Input("externalResourceId")]
        public Input<string>? ExternalResourceId { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) Host name of the monitored resource.
        /// </summary>
        [Input("hostName")]
        public Input<string>? HostName { get; set; }

        /// <summary>
        /// (Updatable) License edition of the monitored resource. If not provided  the default license type for the compartment will be used.
        /// </summary>
        [Input("license")]
        public Input<string>? License { get; set; }

        /// <summary>
        /// Management Agent Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("managementAgentId")]
        public Input<string>? ManagementAgentId { get; set; }

        /// <summary>
        /// (Updatable) Property Name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("properties")]
        private InputList<Inputs.MonitoredResourcePropertyGetArgs>? _properties;

        /// <summary>
        /// (Updatable) List of monitored resource properties.
        /// </summary>
        public InputList<Inputs.MonitoredResourcePropertyGetArgs> Properties
        {
            get => _properties ?? (_properties = new InputList<Inputs.MonitoredResourcePropertyGetArgs>());
            set => _properties = value;
        }

        /// <summary>
        /// Resource Category to indicate the kind of resource type.
        /// </summary>
        [Input("resourceCategory")]
        public Input<string>? ResourceCategory { get; set; }

        /// <summary>
        /// (Updatable) Time zone in the form of tz database canonical zone ID. Specifies the preference with a value that uses the IANA Time Zone Database format (x-obmcs-time-zone). For example - America/Los_Angeles
        /// </summary>
        [Input("resourceTimeZone")]
        public Input<string>? ResourceTimeZone { get; set; }

        /// <summary>
        /// Source type to indicate if the resource is stack monitoring discovered, Oracle Cloud Infrastructure native resource, etc.
        /// </summary>
        [Input("sourceType")]
        public Input<string>? SourceType { get; set; }

        /// <summary>
        /// Lifecycle state of the monitored resource.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("systemTags")]
        private InputMap<object>? _systemTags;

        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public InputMap<object> SystemTags
        {
            get => _systemTags ?? (_systemTags = new InputMap<object>());
            set => _systemTags = value;
        }

        /// <summary>
        /// Tenancy Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("tenantId")]
        public Input<string>? TenantId { get; set; }

        /// <summary>
        /// The date and time when the monitored resource was created, expressed in  [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The date and time when the monitored resource was last updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        /// <summary>
        /// Monitored Resource Type. 
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public MonitoredResourceState()
        {
        }
        public static new MonitoredResourceState Empty => new MonitoredResourceState();
    }
}
