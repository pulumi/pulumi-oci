// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.StackMonitoring
{
    /// <summary>
    /// This resource provides the Monitored Resource Type resource in Oracle Cloud Infrastructure Stack Monitoring service.
    /// 
    /// Creates a new monitored resource type.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testMonitoredResourceType = new Oci.StackMonitoring.MonitoredResourceType("testMonitoredResourceType", new()
    ///     {
    ///         CompartmentId = @var.Compartment_id,
    ///         DefinedTags = 
    ///         {
    ///             { "foo-namespace.bar-key", "value" },
    ///         },
    ///         Description = @var.Monitored_resource_type_description,
    ///         DisplayName = @var.Monitored_resource_type_display_name,
    ///         FreeformTags = 
    ///         {
    ///             { "bar-key", "value" },
    ///         },
    ///         Metadata = new Oci.StackMonitoring.Inputs.MonitoredResourceTypeMetadataArgs
    ///         {
    ///             Format = @var.Monitored_resource_type_metadata_format,
    ///             AgentProperties = @var.Monitored_resource_type_metadata_agent_properties,
    ///             RequiredProperties = @var.Monitored_resource_type_metadata_required_properties,
    ///             UniquePropertySets = new[]
    ///             {
    ///                 new Oci.StackMonitoring.Inputs.MonitoredResourceTypeMetadataUniquePropertySetArgs
    ///                 {
    ///                     Properties = @var.Monitored_resource_type_metadata_unique_property_sets_properties,
    ///                 },
    ///             },
    ///             ValidPropertiesForCreates = @var.Monitored_resource_type_metadata_valid_properties_for_create,
    ///             ValidPropertiesForUpdates = @var.Monitored_resource_type_metadata_valid_properties_for_update,
    ///             ValidPropertyValues = @var.Monitored_resource_type_metadata_valid_property_values,
    ///         },
    ///         MetricNamespace = @var.Monitored_resource_type_metric_namespace,
    ///         ResourceCategory = @var.Monitored_resource_type_resource_category,
    ///         SourceType = @var.Monitored_resource_type_source_type,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// MonitoredResourceTypes can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:StackMonitoring/monitoredResourceType:MonitoredResourceType test_monitored_resource_type "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:StackMonitoring/monitoredResourceType:MonitoredResourceType")]
    public partial class MonitoredResourceType : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tenancy containing the resource type.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, object>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A friendly description.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Monitored resource type display name.
        /// </summary>
        [Output("displayName")]
        public Output<string?> DisplayName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, object>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The metadata details for resource type.
        /// </summary>
        [Output("metadata")]
        public Output<Outputs.MonitoredResourceTypeMetadata> Metadata { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Metric namespace for resource type.
        /// </summary>
        [Output("metricNamespace")]
        public Output<string> MetricNamespace { get; private set; } = null!;

        /// <summary>
        /// A unique monitored resource type name. The name must be unique across tenancy.  Name can not be changed.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Resource Category to indicate the kind of resource type.
        /// </summary>
        [Output("resourceCategory")]
        public Output<string> ResourceCategory { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Source type to indicate if the resource is stack monitoring discovered, Oracle Cloud Infrastructure native resource, etc. 
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("sourceType")]
        public Output<string> SourceType { get; private set; } = null!;

        /// <summary>
        /// Lifecycle state of the monitored resource type.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        [Output("systemTags")]
        public Output<ImmutableDictionary<string, object>> SystemTags { get; private set; } = null!;

        /// <summary>
        /// The date and time when the monitored resource type was created, expressed in  [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The date and time when the monitored resource was updated, expressed in  [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;


        /// <summary>
        /// Create a MonitoredResourceType resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MonitoredResourceType(string name, MonitoredResourceTypeArgs args, CustomResourceOptions? options = null)
            : base("oci:StackMonitoring/monitoredResourceType:MonitoredResourceType", name, args ?? new MonitoredResourceTypeArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MonitoredResourceType(string name, Input<string> id, MonitoredResourceTypeState? state = null, CustomResourceOptions? options = null)
            : base("oci:StackMonitoring/monitoredResourceType:MonitoredResourceType", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MonitoredResourceType resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MonitoredResourceType Get(string name, Input<string> id, MonitoredResourceTypeState? state = null, CustomResourceOptions? options = null)
        {
            return new MonitoredResourceType(name, id, state, options);
        }
    }

    public sealed class MonitoredResourceTypeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tenancy containing the resource type.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) A friendly description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) Monitored resource type display name.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) The metadata details for resource type.
        /// </summary>
        [Input("metadata")]
        public Input<Inputs.MonitoredResourceTypeMetadataArgs>? Metadata { get; set; }

        /// <summary>
        /// (Updatable) Metric namespace for resource type.
        /// </summary>
        [Input("metricNamespace")]
        public Input<string>? MetricNamespace { get; set; }

        /// <summary>
        /// A unique monitored resource type name. The name must be unique across tenancy.  Name can not be changed.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// (Updatable) Resource Category to indicate the kind of resource type.
        /// </summary>
        [Input("resourceCategory")]
        public Input<string>? ResourceCategory { get; set; }

        /// <summary>
        /// (Updatable) Source type to indicate if the resource is stack monitoring discovered, Oracle Cloud Infrastructure native resource, etc. 
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("sourceType")]
        public Input<string>? SourceType { get; set; }

        public MonitoredResourceTypeArgs()
        {
        }
        public static new MonitoredResourceTypeArgs Empty => new MonitoredResourceTypeArgs();
    }

    public sealed class MonitoredResourceTypeState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tenancy containing the resource type.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) A friendly description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Updatable) Monitored resource type display name.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) The metadata details for resource type.
        /// </summary>
        [Input("metadata")]
        public Input<Inputs.MonitoredResourceTypeMetadataGetArgs>? Metadata { get; set; }

        /// <summary>
        /// (Updatable) Metric namespace for resource type.
        /// </summary>
        [Input("metricNamespace")]
        public Input<string>? MetricNamespace { get; set; }

        /// <summary>
        /// A unique monitored resource type name. The name must be unique across tenancy.  Name can not be changed.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// (Updatable) Resource Category to indicate the kind of resource type.
        /// </summary>
        [Input("resourceCategory")]
        public Input<string>? ResourceCategory { get; set; }

        /// <summary>
        /// (Updatable) Source type to indicate if the resource is stack monitoring discovered, Oracle Cloud Infrastructure native resource, etc. 
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("sourceType")]
        public Input<string>? SourceType { get; set; }

        /// <summary>
        /// Lifecycle state of the monitored resource type.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("systemTags")]
        private InputMap<object>? _systemTags;

        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public InputMap<object> SystemTags
        {
            get => _systemTags ?? (_systemTags = new InputMap<object>());
            set => _systemTags = value;
        }

        /// <summary>
        /// The date and time when the monitored resource type was created, expressed in  [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The date and time when the monitored resource was updated, expressed in  [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        public MonitoredResourceTypeState()
        {
        }
        public static new MonitoredResourceTypeState Empty => new MonitoredResourceTypeState();
    }
}
