// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.StackMonitoring
{
    /// <summary>
    /// This resource provides the Monitored Resources Search resource in Oracle Cloud Infrastructure Stack Monitoring service.
    /// 
    /// Gets a list of all monitored resources in a compartment for the given search criteria.
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testMonitoredResourcesSearch = new Oci.StackMonitoring.MonitoredResourcesSearch("testMonitoredResourcesSearch", new()
    ///     {
    ///         CompartmentId = @var.Compartment_id,
    ///         CompartmentIds = @var.Monitored_resources_search_compartment_ids,
    ///         ExcludeFields = @var.Monitored_resources_search_exclude_fields,
    ///         ExternalId = oci_stack_monitoring_external.Test_external.Id,
    ///         Fields = @var.Monitored_resources_search_fields,
    ///         HostName = @var.Monitored_resources_search_host_name,
    ///         HostNameContains = @var.Monitored_resources_search_host_name_contains,
    ///         License = @var.Monitored_resources_search_license,
    ///         LifecycleStates = @var.Monitored_resources_search_lifecycle_states,
    ///         ManagementAgentId = oci_management_agent_management_agent.Test_management_agent.Id,
    ///         NameContains = @var.Monitored_resources_search_name_contains,
    ///         PropertyEquals = @var.Monitored_resources_search_property_equals,
    ///         ResourceCategory = @var.Monitored_resources_search_resource_category,
    ///         ResourceTimeZone = @var.Monitored_resources_search_resource_time_zone,
    ///         SourceType = @var.Monitored_resources_search_source_type,
    ///         State = @var.Monitored_resources_search_state,
    ///         TimeCreatedGreaterThanOrEqualTo = @var.Monitored_resources_search_time_created_greater_than_or_equal_to,
    ///         TimeCreatedLessThan = @var.Monitored_resources_search_time_created_less_than,
    ///         TimeUpdatedGreaterThanOrEqualTo = @var.Monitored_resources_search_time_updated_greater_than_or_equal_to,
    ///         TimeUpdatedLessThan = @var.Monitored_resources_search_time_updated_less_than,
    ///         Type = @var.Monitored_resources_search_type,
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// MonitoredResourcesSearch can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:StackMonitoring/monitoredResourcesSearch:MonitoredResourcesSearch test_monitored_resources_search "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:StackMonitoring/monitoredResourcesSearch:MonitoredResourcesSearch")]
    public partial class MonitoredResourcesSearch : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// Multiple compartment identifiers [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Output("compartmentIds")]
        public Output<ImmutableArray<string>> CompartmentIds { get; private set; } = null!;

        /// <summary>
        /// Partial response refers to an optimization technique offered by the RESTful web APIs, to return all the information except the fields requested to be excluded (excludeFields) by the client. In this mechanism, the client sends the exclude field names as the query parameters for an API to the server, and the server trims down the default response content by removing the fields that are not required by the client. The parameter controls which fields to exlude and to return and should be a query string parameter called "excludeFields" of an array type, provide the values as enums, and use collectionFormat.
        /// </summary>
        [Output("excludeFields")]
        public Output<ImmutableArray<string>> ExcludeFields { get; private set; } = null!;

        /// <summary>
        /// External resource is any Oracle Cloud Infrastructure resource identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) which is not a Stack Monitoring service resource. Currently supports only following resource types - Container database, non-container database,  pluggable database and Oracle Cloud Infrastructure compute instance.
        /// </summary>
        [Output("externalId")]
        public Output<string?> ExternalId { get; private set; } = null!;

        /// <summary>
        /// Partial response refers to an optimization technique offered by the RESTful web APIs, to return only the information (fields) required by the client. In this mechanism, the client sends the required field names as the query parameters for an API to the server, and the server trims down the default response content by removing the fields that are not required by the client. The parameter controls which fields to return and should be a query string parameter called "fields" of an array type, provide the values as enums, and use collectionFormat.
        /// </summary>
        [Output("fields")]
        public Output<ImmutableArray<string>> Fields { get; private set; } = null!;

        /// <summary>
        /// A filter to return resources with host name match.
        /// </summary>
        [Output("hostName")]
        public Output<string?> HostName { get; private set; } = null!;

        /// <summary>
        /// A filter to return resources with host name pattern.
        /// </summary>
        [Output("hostNameContains")]
        public Output<string?> HostNameContains { get; private set; } = null!;

        /// <summary>
        /// List of monitored resources.
        /// </summary>
        [Output("items")]
        public Output<ImmutableArray<Outputs.MonitoredResourcesSearchItem>> Items { get; private set; } = null!;

        /// <summary>
        /// License edition of the monitored resource.
        /// </summary>
        [Output("license")]
        public Output<string?> License { get; private set; } = null!;

        /// <summary>
        /// Multiple lifecycle states filter.
        /// </summary>
        [Output("lifecycleStates")]
        public Output<ImmutableArray<string>> LifecycleStates { get; private set; } = null!;

        /// <summary>
        /// A filter to return resources with matching management agent id.
        /// </summary>
        [Output("managementAgentId")]
        public Output<string?> ManagementAgentId { get; private set; } = null!;

        /// <summary>
        /// A filter to return resources that match exact resource name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// A filter to return resources that match resource name pattern given. The match is not case sensitive.
        /// </summary>
        [Output("nameContains")]
        public Output<string?> NameContains { get; private set; } = null!;

        /// <summary>
        /// Criteria based on resource property.
        /// </summary>
        [Output("propertyEquals")]
        public Output<ImmutableDictionary<string, object>?> PropertyEquals { get; private set; } = null!;

        /// <summary>
        /// Resource category filter.
        /// </summary>
        [Output("resourceCategory")]
        public Output<string?> ResourceCategory { get; private set; } = null!;

        /// <summary>
        /// Time zone in the form of tz database canonical zone ID. Specifies the preference with a value that uses the IANA Time Zone Database format (x-obmcs-time-zone). For example - America/Los_Angeles
        /// </summary>
        [Output("resourceTimeZone")]
        public Output<string?> ResourceTimeZone { get; private set; } = null!;

        /// <summary>
        /// Source type filter.
        /// </summary>
        [Output("sourceType")]
        public Output<string?> SourceType { get; private set; } = null!;

        /// <summary>
        /// A filter to return resources with matching lifecycle state.
        /// </summary>
        [Output("state")]
        public Output<string?> State { get; private set; } = null!;

        /// <summary>
        /// Search for resources that were created within a specific date range, using this parameter to specify the earliest creation date for the returned list (inclusive). Specifying this parameter without the corresponding `timeCreatedLessThan` parameter will retrieve resources created from the given `timeCreatedGreaterThanOrEqualTo` to the current time, in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).
        /// 
        /// **Example:** 2016-12-19T16:39:57.600Z
        /// </summary>
        [Output("timeCreatedGreaterThanOrEqualTo")]
        public Output<string?> TimeCreatedGreaterThanOrEqualTo { get; private set; } = null!;

        /// <summary>
        /// Search for resources that were created within a specific date range, using this parameter to specify the latest creation date for the returned list (exclusive). Specifying this parameter without the corresponding `timeCreatedGreaterThanOrEqualTo` parameter will retrieve all resources created before the specified end date, in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).
        /// 
        /// **Example:** 2016-12-19T16:39:57.600Z
        /// </summary>
        [Output("timeCreatedLessThan")]
        public Output<string?> TimeCreatedLessThan { get; private set; } = null!;

        /// <summary>
        /// Search for resources that were updated within a specific date range, using this parameter to specify the earliest update date for the returned list (inclusive). Specifying this parameter without the corresponding `timeUpdatedLessThan` parameter will retrieve resources updated from the given `timeUpdatedGreaterThanOrEqualTo` to the current time, in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).
        /// 
        /// **Example:** 2016-12-19T16:39:57.600Z
        /// </summary>
        [Output("timeUpdatedGreaterThanOrEqualTo")]
        public Output<string?> TimeUpdatedGreaterThanOrEqualTo { get; private set; } = null!;

        /// <summary>
        /// Search for resources that were updated within a specific date range, using this parameter to specify the latest creation date for the returned list (exclusive). Specifying this parameter without the corresponding `timeUpdatedGreaterThanOrEqualTo` parameter will retrieve all resources updated before the specified end date, in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).
        /// 
        /// **Example:** 2016-12-19T16:39:57.600Z
        /// </summary>
        [Output("timeUpdatedLessThan")]
        public Output<string?> TimeUpdatedLessThan { get; private set; } = null!;

        /// <summary>
        /// A filter to return resources that match resource type. 
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("type")]
        public Output<string?> Type { get; private set; } = null!;


        /// <summary>
        /// Create a MonitoredResourcesSearch resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MonitoredResourcesSearch(string name, MonitoredResourcesSearchArgs args, CustomResourceOptions? options = null)
            : base("oci:StackMonitoring/monitoredResourcesSearch:MonitoredResourcesSearch", name, args ?? new MonitoredResourcesSearchArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MonitoredResourcesSearch(string name, Input<string> id, MonitoredResourcesSearchState? state = null, CustomResourceOptions? options = null)
            : base("oci:StackMonitoring/monitoredResourcesSearch:MonitoredResourcesSearch", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MonitoredResourcesSearch resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MonitoredResourcesSearch Get(string name, Input<string> id, MonitoredResourcesSearchState? state = null, CustomResourceOptions? options = null)
        {
            return new MonitoredResourcesSearch(name, id, state, options);
        }
    }

    public sealed class MonitoredResourcesSearchArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("compartmentIds")]
        private InputList<string>? _compartmentIds;

        /// <summary>
        /// Multiple compartment identifiers [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        public InputList<string> CompartmentIds
        {
            get => _compartmentIds ?? (_compartmentIds = new InputList<string>());
            set => _compartmentIds = value;
        }

        [Input("excludeFields")]
        private InputList<string>? _excludeFields;

        /// <summary>
        /// Partial response refers to an optimization technique offered by the RESTful web APIs, to return all the information except the fields requested to be excluded (excludeFields) by the client. In this mechanism, the client sends the exclude field names as the query parameters for an API to the server, and the server trims down the default response content by removing the fields that are not required by the client. The parameter controls which fields to exlude and to return and should be a query string parameter called "excludeFields" of an array type, provide the values as enums, and use collectionFormat.
        /// </summary>
        public InputList<string> ExcludeFields
        {
            get => _excludeFields ?? (_excludeFields = new InputList<string>());
            set => _excludeFields = value;
        }

        /// <summary>
        /// External resource is any Oracle Cloud Infrastructure resource identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) which is not a Stack Monitoring service resource. Currently supports only following resource types - Container database, non-container database,  pluggable database and Oracle Cloud Infrastructure compute instance.
        /// </summary>
        [Input("externalId")]
        public Input<string>? ExternalId { get; set; }

        [Input("fields")]
        private InputList<string>? _fields;

        /// <summary>
        /// Partial response refers to an optimization technique offered by the RESTful web APIs, to return only the information (fields) required by the client. In this mechanism, the client sends the required field names as the query parameters for an API to the server, and the server trims down the default response content by removing the fields that are not required by the client. The parameter controls which fields to return and should be a query string parameter called "fields" of an array type, provide the values as enums, and use collectionFormat.
        /// </summary>
        public InputList<string> Fields
        {
            get => _fields ?? (_fields = new InputList<string>());
            set => _fields = value;
        }

        /// <summary>
        /// A filter to return resources with host name match.
        /// </summary>
        [Input("hostName")]
        public Input<string>? HostName { get; set; }

        /// <summary>
        /// A filter to return resources with host name pattern.
        /// </summary>
        [Input("hostNameContains")]
        public Input<string>? HostNameContains { get; set; }

        /// <summary>
        /// License edition of the monitored resource.
        /// </summary>
        [Input("license")]
        public Input<string>? License { get; set; }

        [Input("lifecycleStates")]
        private InputList<string>? _lifecycleStates;

        /// <summary>
        /// Multiple lifecycle states filter.
        /// </summary>
        public InputList<string> LifecycleStates
        {
            get => _lifecycleStates ?? (_lifecycleStates = new InputList<string>());
            set => _lifecycleStates = value;
        }

        /// <summary>
        /// A filter to return resources with matching management agent id.
        /// </summary>
        [Input("managementAgentId")]
        public Input<string>? ManagementAgentId { get; set; }

        /// <summary>
        /// A filter to return resources that match exact resource name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A filter to return resources that match resource name pattern given. The match is not case sensitive.
        /// </summary>
        [Input("nameContains")]
        public Input<string>? NameContains { get; set; }

        [Input("propertyEquals")]
        private InputMap<object>? _propertyEquals;

        /// <summary>
        /// Criteria based on resource property.
        /// </summary>
        public InputMap<object> PropertyEquals
        {
            get => _propertyEquals ?? (_propertyEquals = new InputMap<object>());
            set => _propertyEquals = value;
        }

        /// <summary>
        /// Resource category filter.
        /// </summary>
        [Input("resourceCategory")]
        public Input<string>? ResourceCategory { get; set; }

        /// <summary>
        /// Time zone in the form of tz database canonical zone ID. Specifies the preference with a value that uses the IANA Time Zone Database format (x-obmcs-time-zone). For example - America/Los_Angeles
        /// </summary>
        [Input("resourceTimeZone")]
        public Input<string>? ResourceTimeZone { get; set; }

        /// <summary>
        /// Source type filter.
        /// </summary>
        [Input("sourceType")]
        public Input<string>? SourceType { get; set; }

        /// <summary>
        /// A filter to return resources with matching lifecycle state.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// Search for resources that were created within a specific date range, using this parameter to specify the earliest creation date for the returned list (inclusive). Specifying this parameter without the corresponding `timeCreatedLessThan` parameter will retrieve resources created from the given `timeCreatedGreaterThanOrEqualTo` to the current time, in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).
        /// 
        /// **Example:** 2016-12-19T16:39:57.600Z
        /// </summary>
        [Input("timeCreatedGreaterThanOrEqualTo")]
        public Input<string>? TimeCreatedGreaterThanOrEqualTo { get; set; }

        /// <summary>
        /// Search for resources that were created within a specific date range, using this parameter to specify the latest creation date for the returned list (exclusive). Specifying this parameter without the corresponding `timeCreatedGreaterThanOrEqualTo` parameter will retrieve all resources created before the specified end date, in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).
        /// 
        /// **Example:** 2016-12-19T16:39:57.600Z
        /// </summary>
        [Input("timeCreatedLessThan")]
        public Input<string>? TimeCreatedLessThan { get; set; }

        /// <summary>
        /// Search for resources that were updated within a specific date range, using this parameter to specify the earliest update date for the returned list (inclusive). Specifying this parameter without the corresponding `timeUpdatedLessThan` parameter will retrieve resources updated from the given `timeUpdatedGreaterThanOrEqualTo` to the current time, in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).
        /// 
        /// **Example:** 2016-12-19T16:39:57.600Z
        /// </summary>
        [Input("timeUpdatedGreaterThanOrEqualTo")]
        public Input<string>? TimeUpdatedGreaterThanOrEqualTo { get; set; }

        /// <summary>
        /// Search for resources that were updated within a specific date range, using this parameter to specify the latest creation date for the returned list (exclusive). Specifying this parameter without the corresponding `timeUpdatedGreaterThanOrEqualTo` parameter will retrieve all resources updated before the specified end date, in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).
        /// 
        /// **Example:** 2016-12-19T16:39:57.600Z
        /// </summary>
        [Input("timeUpdatedLessThan")]
        public Input<string>? TimeUpdatedLessThan { get; set; }

        /// <summary>
        /// A filter to return resources that match resource type. 
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public MonitoredResourcesSearchArgs()
        {
        }
        public static new MonitoredResourcesSearchArgs Empty => new MonitoredResourcesSearchArgs();
    }

    public sealed class MonitoredResourcesSearchState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("compartmentIds")]
        private InputList<string>? _compartmentIds;

        /// <summary>
        /// Multiple compartment identifiers [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        public InputList<string> CompartmentIds
        {
            get => _compartmentIds ?? (_compartmentIds = new InputList<string>());
            set => _compartmentIds = value;
        }

        [Input("excludeFields")]
        private InputList<string>? _excludeFields;

        /// <summary>
        /// Partial response refers to an optimization technique offered by the RESTful web APIs, to return all the information except the fields requested to be excluded (excludeFields) by the client. In this mechanism, the client sends the exclude field names as the query parameters for an API to the server, and the server trims down the default response content by removing the fields that are not required by the client. The parameter controls which fields to exlude and to return and should be a query string parameter called "excludeFields" of an array type, provide the values as enums, and use collectionFormat.
        /// </summary>
        public InputList<string> ExcludeFields
        {
            get => _excludeFields ?? (_excludeFields = new InputList<string>());
            set => _excludeFields = value;
        }

        /// <summary>
        /// External resource is any Oracle Cloud Infrastructure resource identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) which is not a Stack Monitoring service resource. Currently supports only following resource types - Container database, non-container database,  pluggable database and Oracle Cloud Infrastructure compute instance.
        /// </summary>
        [Input("externalId")]
        public Input<string>? ExternalId { get; set; }

        [Input("fields")]
        private InputList<string>? _fields;

        /// <summary>
        /// Partial response refers to an optimization technique offered by the RESTful web APIs, to return only the information (fields) required by the client. In this mechanism, the client sends the required field names as the query parameters for an API to the server, and the server trims down the default response content by removing the fields that are not required by the client. The parameter controls which fields to return and should be a query string parameter called "fields" of an array type, provide the values as enums, and use collectionFormat.
        /// </summary>
        public InputList<string> Fields
        {
            get => _fields ?? (_fields = new InputList<string>());
            set => _fields = value;
        }

        /// <summary>
        /// A filter to return resources with host name match.
        /// </summary>
        [Input("hostName")]
        public Input<string>? HostName { get; set; }

        /// <summary>
        /// A filter to return resources with host name pattern.
        /// </summary>
        [Input("hostNameContains")]
        public Input<string>? HostNameContains { get; set; }

        [Input("items")]
        private InputList<Inputs.MonitoredResourcesSearchItemGetArgs>? _items;

        /// <summary>
        /// List of monitored resources.
        /// </summary>
        public InputList<Inputs.MonitoredResourcesSearchItemGetArgs> Items
        {
            get => _items ?? (_items = new InputList<Inputs.MonitoredResourcesSearchItemGetArgs>());
            set => _items = value;
        }

        /// <summary>
        /// License edition of the monitored resource.
        /// </summary>
        [Input("license")]
        public Input<string>? License { get; set; }

        [Input("lifecycleStates")]
        private InputList<string>? _lifecycleStates;

        /// <summary>
        /// Multiple lifecycle states filter.
        /// </summary>
        public InputList<string> LifecycleStates
        {
            get => _lifecycleStates ?? (_lifecycleStates = new InputList<string>());
            set => _lifecycleStates = value;
        }

        /// <summary>
        /// A filter to return resources with matching management agent id.
        /// </summary>
        [Input("managementAgentId")]
        public Input<string>? ManagementAgentId { get; set; }

        /// <summary>
        /// A filter to return resources that match exact resource name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A filter to return resources that match resource name pattern given. The match is not case sensitive.
        /// </summary>
        [Input("nameContains")]
        public Input<string>? NameContains { get; set; }

        [Input("propertyEquals")]
        private InputMap<object>? _propertyEquals;

        /// <summary>
        /// Criteria based on resource property.
        /// </summary>
        public InputMap<object> PropertyEquals
        {
            get => _propertyEquals ?? (_propertyEquals = new InputMap<object>());
            set => _propertyEquals = value;
        }

        /// <summary>
        /// Resource category filter.
        /// </summary>
        [Input("resourceCategory")]
        public Input<string>? ResourceCategory { get; set; }

        /// <summary>
        /// Time zone in the form of tz database canonical zone ID. Specifies the preference with a value that uses the IANA Time Zone Database format (x-obmcs-time-zone). For example - America/Los_Angeles
        /// </summary>
        [Input("resourceTimeZone")]
        public Input<string>? ResourceTimeZone { get; set; }

        /// <summary>
        /// Source type filter.
        /// </summary>
        [Input("sourceType")]
        public Input<string>? SourceType { get; set; }

        /// <summary>
        /// A filter to return resources with matching lifecycle state.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// Search for resources that were created within a specific date range, using this parameter to specify the earliest creation date for the returned list (inclusive). Specifying this parameter without the corresponding `timeCreatedLessThan` parameter will retrieve resources created from the given `timeCreatedGreaterThanOrEqualTo` to the current time, in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).
        /// 
        /// **Example:** 2016-12-19T16:39:57.600Z
        /// </summary>
        [Input("timeCreatedGreaterThanOrEqualTo")]
        public Input<string>? TimeCreatedGreaterThanOrEqualTo { get; set; }

        /// <summary>
        /// Search for resources that were created within a specific date range, using this parameter to specify the latest creation date for the returned list (exclusive). Specifying this parameter without the corresponding `timeCreatedGreaterThanOrEqualTo` parameter will retrieve all resources created before the specified end date, in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).
        /// 
        /// **Example:** 2016-12-19T16:39:57.600Z
        /// </summary>
        [Input("timeCreatedLessThan")]
        public Input<string>? TimeCreatedLessThan { get; set; }

        /// <summary>
        /// Search for resources that were updated within a specific date range, using this parameter to specify the earliest update date for the returned list (inclusive). Specifying this parameter without the corresponding `timeUpdatedLessThan` parameter will retrieve resources updated from the given `timeUpdatedGreaterThanOrEqualTo` to the current time, in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).
        /// 
        /// **Example:** 2016-12-19T16:39:57.600Z
        /// </summary>
        [Input("timeUpdatedGreaterThanOrEqualTo")]
        public Input<string>? TimeUpdatedGreaterThanOrEqualTo { get; set; }

        /// <summary>
        /// Search for resources that were updated within a specific date range, using this parameter to specify the latest creation date for the returned list (exclusive). Specifying this parameter without the corresponding `timeUpdatedGreaterThanOrEqualTo` parameter will retrieve all resources updated before the specified end date, in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).
        /// 
        /// **Example:** 2016-12-19T16:39:57.600Z
        /// </summary>
        [Input("timeUpdatedLessThan")]
        public Input<string>? TimeUpdatedLessThan { get; set; }

        /// <summary>
        /// A filter to return resources that match resource type. 
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public MonitoredResourcesSearchState()
        {
        }
        public static new MonitoredResourcesSearchState Empty => new MonitoredResourcesSearchState();
    }
}
