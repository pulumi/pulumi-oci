// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.StackMonitoring.Outputs
{

    [OutputType]
    public sealed class GetConfigsConfigCollectionItemResult
    {
        /// <summary>
        /// Property Details
        /// </summary>
        public readonly ImmutableArray<Outputs.GetConfigsConfigCollectionItemAdditionalConfigurationResult> AdditionalConfigurations;
        /// <summary>
        /// The ID of the compartment in which data is listed.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The type of configuration.
        /// </summary>
        public readonly string ConfigType;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// List of dynamic groups dedicated for Stack Monitoring.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetConfigsConfigCollectionItemDynamicGroupResult> DynamicGroups;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The Unique Oracle ID (OCID) that is immutable on creation.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// True if automatic activation of the Management Agent plugin, automatic promotion or enterprise extensibility is enabled, false if it is not enabled.
        /// </summary>
        public readonly bool IsEnabled;
        /// <summary>
        /// True if customer decides marks configuration as manually configured.
        /// </summary>
        public readonly bool IsManuallyOnboarded;
        /// <summary>
        /// License edition.
        /// </summary>
        public readonly string License;
        /// <summary>
        /// List of policy names assigned for onboarding
        /// </summary>
        public readonly ImmutableArray<string> PolicyNames;
        /// <summary>
        /// The type of resource to configure for automatic promotion.
        /// </summary>
        public readonly string ResourceType;
        /// <summary>
        /// The current state of the Config.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// The time the configuration was created. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time the Config was updated.
        /// </summary>
        public readonly string TimeUpdated;
        /// <summary>
        /// List of user groups dedicated for Stack Monitoring.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetConfigsConfigCollectionItemUserGroupResult> UserGroups;
        /// <summary>
        /// Assigned version to given onboard configuration.
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private GetConfigsConfigCollectionItemResult(
            ImmutableArray<Outputs.GetConfigsConfigCollectionItemAdditionalConfigurationResult> additionalConfigurations,

            string compartmentId,

            string configType,

            ImmutableDictionary<string, string> definedTags,

            string displayName,

            ImmutableArray<Outputs.GetConfigsConfigCollectionItemDynamicGroupResult> dynamicGroups,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            bool isEnabled,

            bool isManuallyOnboarded,

            string license,

            ImmutableArray<string> policyNames,

            string resourceType,

            string state,

            ImmutableDictionary<string, string> systemTags,

            string timeCreated,

            string timeUpdated,

            ImmutableArray<Outputs.GetConfigsConfigCollectionItemUserGroupResult> userGroups,

            string version)
        {
            AdditionalConfigurations = additionalConfigurations;
            CompartmentId = compartmentId;
            ConfigType = configType;
            DefinedTags = definedTags;
            DisplayName = displayName;
            DynamicGroups = dynamicGroups;
            FreeformTags = freeformTags;
            Id = id;
            IsEnabled = isEnabled;
            IsManuallyOnboarded = isManuallyOnboarded;
            License = license;
            PolicyNames = policyNames;
            ResourceType = resourceType;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            UserGroups = userGroups;
            Version = version;
        }
    }
}
