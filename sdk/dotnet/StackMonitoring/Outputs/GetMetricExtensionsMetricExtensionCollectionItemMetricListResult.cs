// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.StackMonitoring.Outputs
{

    [OutputType]
    public sealed class GetMetricExtensionsMetricExtensionCollectionItemMetricListResult
    {
        /// <summary>
        /// Compute Expression to calculate the value of this metric
        /// </summary>
        public readonly string ComputeExpression;
        /// <summary>
        /// Data type of value of this metric
        /// </summary>
        public readonly string DataType;
        /// <summary>
        /// Display name of the metric.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Current metric need to be included as dimension or not
        /// </summary>
        public readonly bool IsDimension;
        /// <summary>
        /// Flag to marks whether a metric has to be uploaded or not. When isHidden = false &gt; Metric is uploaded, isHidden = true &gt; Metric is NOT uploaded
        /// </summary>
        public readonly bool IsHidden;
        /// <summary>
        /// Metric category
        /// </summary>
        public readonly string MetricCategory;
        /// <summary>
        /// A filter to return resources based on name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Unit of metric value
        /// </summary>
        public readonly string Unit;

        [OutputConstructor]
        private GetMetricExtensionsMetricExtensionCollectionItemMetricListResult(
            string computeExpression,

            string dataType,

            string displayName,

            bool isDimension,

            bool isHidden,

            string metricCategory,

            string name,

            string unit)
        {
            ComputeExpression = computeExpression;
            DataType = dataType;
            DisplayName = displayName;
            IsDimension = isDimension;
            IsHidden = isHidden;
            MetricCategory = metricCategory;
            Name = name;
            Unit = unit;
        }
    }
}
