// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.StackMonitoring.Outputs
{

    [OutputType]
    public sealed class GetMonitoredResourceTypesMonitoredResourceTypesCollectionItemMetadataResult
    {
        /// <summary>
        /// List of properties needed by the agent for monitoring the resource.  Valid only if resource type is Oracle Cloud Infrastructure management agent based. When specified,  these properties are passed to the management agent during resource create or update.
        /// </summary>
        public readonly ImmutableArray<string> AgentProperties;
        /// <summary>
        /// ResourceType metadata format to be used. Currently supports only one format. Possible values - SYSTEM_FORMAT.
        /// * SYSTEM_FORMAT - The resource type metadata is defined in machine friendly format.
        /// </summary>
        public readonly string? Format;
        /// <summary>
        /// List of required properties for resource type.
        /// </summary>
        public readonly ImmutableArray<string> RequiredProperties;
        /// <summary>
        /// List of property sets used to uniquely identify the resources.  This check is made during create or update of stack monitoring resource.  The resource has to pass unique check for each set in the list.  For example, database can have user, password and SID as one unique set.  Another unique set would be user, password and service name.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMonitoredResourceTypesMonitoredResourceTypesCollectionItemMetadataUniquePropertySetResult> UniquePropertySets;
        /// <summary>
        /// List of valid properties for resource type while creating the monitored resource.  If resources of this type specifies any other properties during create operation,  the operation will fail.
        /// </summary>
        public readonly ImmutableArray<string> ValidPropertiesForCreates;
        /// <summary>
        /// List of valid properties for resource type while updating the monitored resource.  If resources of this type specifies any other properties during update operation,  the operation will fail.
        /// </summary>
        public readonly ImmutableArray<string> ValidPropertiesForUpdates;
        /// <summary>
        /// List of valid values for the properties. This is useful when resource type wants to restrict only certain values for some properties. For instance for 'osType' property,  supported values can be restricted to be either Linux or Windows. Example: `{"osType": "Linux,Windows,Solaris", "osVersion": "v6.0,v7.0"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? ValidPropertyValues;

        [OutputConstructor]
        private GetMonitoredResourceTypesMonitoredResourceTypesCollectionItemMetadataResult(
            ImmutableArray<string> agentProperties,

            string? format,

            ImmutableArray<string> requiredProperties,

            ImmutableArray<Outputs.GetMonitoredResourceTypesMonitoredResourceTypesCollectionItemMetadataUniquePropertySetResult> uniquePropertySets,

            ImmutableArray<string> validPropertiesForCreates,

            ImmutableArray<string> validPropertiesForUpdates,

            ImmutableDictionary<string, object>? validPropertyValues)
        {
            AgentProperties = agentProperties;
            Format = format;
            RequiredProperties = requiredProperties;
            UniquePropertySets = uniquePropertySets;
            ValidPropertiesForCreates = validPropertiesForCreates;
            ValidPropertiesForUpdates = validPropertiesForUpdates;
            ValidPropertyValues = validPropertyValues;
        }
    }
}
