// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.StackMonitoring.Outputs
{

    [OutputType]
    public sealed class GetMonitoredResourceTypesMonitoredResourceTypesCollectionItemResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tenancy for which  monitored resource types should be listed.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// A friendly description.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Monitored resource type display name.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// Monitored resource type identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The metadata details for resource type.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMonitoredResourceTypesMonitoredResourceTypesCollectionItemMetadataResult> Metadatas;
        /// <summary>
        /// A filter to return monitored resource types that has the matching namespace.
        /// </summary>
        public readonly string MetricNamespace;
        /// <summary>
        /// A filter to return monitored resource types that match exactly with the resource type name given.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Lifecycle state of the monitored resource type.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> SystemTags;
        /// <summary>
        /// The date and time when the monitored resource type was created, expressed in  [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The date and time when the monitored resource was updated, expressed in  [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetMonitoredResourceTypesMonitoredResourceTypesCollectionItemResult(
            string compartmentId,

            ImmutableDictionary<string, object> definedTags,

            string description,

            string displayName,

            ImmutableDictionary<string, object> freeformTags,

            string id,

            ImmutableArray<Outputs.GetMonitoredResourceTypesMonitoredResourceTypesCollectionItemMetadataResult> metadatas,

            string metricNamespace,

            string name,

            string state,

            ImmutableDictionary<string, object> systemTags,

            string timeCreated,

            string timeUpdated)
        {
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            Metadatas = metadatas;
            MetricNamespace = metricNamespace;
            Name = name;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
