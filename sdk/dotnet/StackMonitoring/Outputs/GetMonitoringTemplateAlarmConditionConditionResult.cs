// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.StackMonitoring.Outputs
{

    [OutputType]
    public sealed class GetMonitoringTemplateAlarmConditionConditionResult
    {
        /// <summary>
        /// The human-readable content of the delivered alarm notification. Oracle recommends providing guidance to operators for resolving the alarm condition. Consider adding links to standard runbook practices. Avoid entering confidential information.
        /// </summary>
        public readonly string Body;
        /// <summary>
        /// The Monitoring Query Language (MQL) expression to evaluate for the alarm.
        /// </summary>
        public readonly string Query;
        /// <summary>
        /// Severity - Critical/Warning
        /// </summary>
        public readonly string Severity;
        /// <summary>
        /// Whether the note need to add into bottom of the body for mapping the alarms information with template or not.
        /// </summary>
        public readonly bool ShouldAppendNote;
        /// <summary>
        /// Whether the URL need to add into bottom of the body for mapping the alarms information with template or not.
        /// </summary>
        public readonly bool ShouldAppendUrl;
        /// <summary>
        /// The period of time that the condition defined in the alarm must persist before the alarm state changes from "OK" to "FIRING".
        /// </summary>
        public readonly string TriggerDelay;

        [OutputConstructor]
        private GetMonitoringTemplateAlarmConditionConditionResult(
            string body,

            string query,

            string severity,

            bool shouldAppendNote,

            bool shouldAppendUrl,

            string triggerDelay)
        {
            Body = body;
            Query = query;
            Severity = severity;
            ShouldAppendNote = shouldAppendNote;
            ShouldAppendUrl = shouldAppendUrl;
            TriggerDelay = triggerDelay;
        }
    }
}
