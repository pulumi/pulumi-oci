// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.StackMonitoring.Outputs
{

    [OutputType]
    public sealed class MetricExtensionMetricList
    {
        /// <summary>
        /// (Updatable) Compute Expression to calculate the value of this metric
        /// </summary>
        public readonly string? ComputeExpression;
        /// <summary>
        /// (Updatable) Data type of value of this metric
        /// </summary>
        public readonly string DataType;
        /// <summary>
        /// (Updatable) Display name of the metric.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// (Updatable) Current metric need to be included as dimension or not
        /// </summary>
        public readonly bool? IsDimension;
        /// <summary>
        /// (Updatable) Flag to marks whether a metric has to be uploaded or not. When isHidden = false &gt; Metric is uploaded, isHidden = true &gt; Metric is NOT uploaded
        /// </summary>
        public readonly bool? IsHidden;
        /// <summary>
        /// (Updatable) Metric category
        /// </summary>
        public readonly string? MetricCategory;
        /// <summary>
        /// (Updatable) Name of the script file
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// (Updatable) Unit of metric value
        /// </summary>
        public readonly string? Unit;

        [OutputConstructor]
        private MetricExtensionMetricList(
            string? computeExpression,

            string dataType,

            string? displayName,

            bool? isDimension,

            bool? isHidden,

            string? metricCategory,

            string name,

            string? unit)
        {
            ComputeExpression = computeExpression;
            DataType = dataType;
            DisplayName = displayName;
            IsDimension = isDimension;
            IsHidden = isHidden;
            MetricCategory = metricCategory;
            Name = name;
            Unit = unit;
        }
    }
}
