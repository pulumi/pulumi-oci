// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.StackMonitoring.Outputs
{

    [OutputType]
    public sealed class MonitoredResourcesListMemberItem
    {
        /// <summary>
        /// Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string>? DefinedTags;
        /// <summary>
        /// External resource is any Oracle Cloud Infrastructure resource identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) which is not a Stack Monitoring service resource. Currently supports only following resource types - Container database, non-container database,  pluggable database and Oracle Cloud Infrastructure compute instance.
        /// </summary>
        public readonly string? ExternalId;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string>? FreeformTags;
        /// <summary>
        /// Monitored Resource Host Name.
        /// </summary>
        public readonly string? HostName;
        /// <summary>
        /// License edition of the monitored resource.
        /// </summary>
        public readonly string? License;
        /// <summary>
        /// Parent monitored resource identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        public readonly string? ParentId;
        /// <summary>
        /// Resource Category to indicate the kind of resource type.
        /// </summary>
        public readonly string? ResourceCategory;
        /// <summary>
        /// Monitored resource display name.
        /// </summary>
        public readonly string? ResourceDisplayName;
        /// <summary>
        /// Monitored resource identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        public readonly string? ResourceId;
        /// <summary>
        /// Monitored Resource Name.
        /// </summary>
        public readonly string? ResourceName;
        /// <summary>
        /// Monitored Resource Type.
        /// </summary>
        public readonly string? ResourceType;
        /// <summary>
        /// Source type to indicate if the resource is stack monitoring discovered, Oracle Cloud Infrastructure native resource, etc.
        /// </summary>
        public readonly string? SourceType;
        /// <summary>
        /// The current state of the Resource.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string>? SystemTags;

        [OutputConstructor]
        private MonitoredResourcesListMemberItem(
            string? compartmentId,

            ImmutableDictionary<string, string>? definedTags,

            string? externalId,

            ImmutableDictionary<string, string>? freeformTags,

            string? hostName,

            string? license,

            string? parentId,

            string? resourceCategory,

            string? resourceDisplayName,

            string? resourceId,

            string? resourceName,

            string? resourceType,

            string? sourceType,

            string? state,

            ImmutableDictionary<string, string>? systemTags)
        {
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            ExternalId = externalId;
            FreeformTags = freeformTags;
            HostName = hostName;
            License = license;
            ParentId = parentId;
            ResourceCategory = resourceCategory;
            ResourceDisplayName = resourceDisplayName;
            ResourceId = resourceId;
            ResourceName = resourceName;
            ResourceType = resourceType;
            SourceType = sourceType;
            State = state;
            SystemTags = systemTags;
        }
    }
}
