// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Streaming
{
    public static class GetConnectHarness
    {
        /// <summary>
        /// This data source provides details about a specific Connect Harness resource in Oracle Cloud Infrastructure Streaming service.
        /// 
        /// Gets detailed information about a connect harness.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testConnectHarness = Oci.Streaming.GetConnectHarness.Invoke(new()
        ///     {
        ///         ConnectHarnessId = oci_streaming_connect_harnes.Test_connect_harnes.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetConnectHarnessResult> InvokeAsync(GetConnectHarnessArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetConnectHarnessResult>("oci:Streaming/getConnectHarness:getConnectHarness", args ?? new GetConnectHarnessArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Connect Harness resource in Oracle Cloud Infrastructure Streaming service.
        /// 
        /// Gets detailed information about a connect harness.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testConnectHarness = Oci.Streaming.GetConnectHarness.Invoke(new()
        ///     {
        ///         ConnectHarnessId = oci_streaming_connect_harnes.Test_connect_harnes.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetConnectHarnessResult> Invoke(GetConnectHarnessInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetConnectHarnessResult>("oci:Streaming/getConnectHarness:getConnectHarness", args ?? new GetConnectHarnessInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetConnectHarnessArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the connect harness.
        /// </summary>
        [Input("connectHarnessId", required: true)]
        public string ConnectHarnessId { get; set; } = null!;

        public GetConnectHarnessArgs()
        {
        }
        public static new GetConnectHarnessArgs Empty => new GetConnectHarnessArgs();
    }

    public sealed class GetConnectHarnessInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the connect harness.
        /// </summary>
        [Input("connectHarnessId", required: true)]
        public Input<string> ConnectHarnessId { get; set; } = null!;

        public GetConnectHarnessInvokeArgs()
        {
        }
        public static new GetConnectHarnessInvokeArgs Empty => new GetConnectHarnessInvokeArgs();
    }


    [OutputType]
    public sealed class GetConnectHarnessResult
    {
        /// <summary>
        /// The OCID of the compartment that contains the connect harness.
        /// </summary>
        public readonly string CompartmentId;
        public readonly string ConnectHarnessId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations": {"CostCenter": "42"}}'
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair that is applied with no predefined name, type, or namespace. Exists for cross-compatibility only. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// The OCID of the connect harness.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Any additional details about the current state of the connect harness.
        /// </summary>
        public readonly string LifecycleStateDetails;
        /// <summary>
        /// The name of the connect harness. Avoid entering confidential information.  Example: `JDBCConnector`
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The current state of the connect harness.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The date and time the connect harness was created, expressed in in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2018-04-20T00:00:07.405Z`
        /// </summary>
        public readonly string TimeCreated;

        [OutputConstructor]
        private GetConnectHarnessResult(
            string compartmentId,

            string connectHarnessId,

            ImmutableDictionary<string, object> definedTags,

            ImmutableDictionary<string, object> freeformTags,

            string id,

            string lifecycleStateDetails,

            string name,

            string state,

            string timeCreated)
        {
            CompartmentId = compartmentId;
            ConnectHarnessId = connectHarnessId;
            DefinedTags = definedTags;
            FreeformTags = freeformTags;
            Id = id;
            LifecycleStateDetails = lifecycleStateDetails;
            Name = name;
            State = state;
            TimeCreated = timeCreated;
        }
    }
}
