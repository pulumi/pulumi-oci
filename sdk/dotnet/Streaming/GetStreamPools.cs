// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Streaming
{
    public static class GetStreamPools
    {
        /// <summary>
        /// This data source provides the list of Stream Pools in Oracle Cloud Infrastructure Streaming service.
        /// 
        /// List the stream pools for a given compartment ID.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testStreamPools = Oci.Streaming.GetStreamPools.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         Id = streamPoolId,
        ///         Name = streamPoolName,
        ///         State = streamPoolState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetStreamPoolsResult> InvokeAsync(GetStreamPoolsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetStreamPoolsResult>("oci:Streaming/getStreamPools:getStreamPools", args ?? new GetStreamPoolsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Stream Pools in Oracle Cloud Infrastructure Streaming service.
        /// 
        /// List the stream pools for a given compartment ID.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testStreamPools = Oci.Streaming.GetStreamPools.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         Id = streamPoolId,
        ///         Name = streamPoolName,
        ///         State = streamPoolState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetStreamPoolsResult> Invoke(GetStreamPoolsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetStreamPoolsResult>("oci:Streaming/getStreamPools:getStreamPools", args ?? new GetStreamPoolsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Stream Pools in Oracle Cloud Infrastructure Streaming service.
        /// 
        /// List the stream pools for a given compartment ID.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testStreamPools = Oci.Streaming.GetStreamPools.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         Id = streamPoolId,
        ///         Name = streamPoolName,
        ///         State = streamPoolState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetStreamPoolsResult> Invoke(GetStreamPoolsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetStreamPoolsResult>("oci:Streaming/getStreamPools:getStreamPools", args ?? new GetStreamPoolsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetStreamPoolsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetStreamPoolsFilterArgs>? _filters;
        public List<Inputs.GetStreamPoolsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetStreamPoolsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only resources that match the given ID exactly.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given name exactly.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetStreamPoolsArgs()
        {
        }
        public static new GetStreamPoolsArgs Empty => new GetStreamPoolsArgs();
    }

    public sealed class GetStreamPoolsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetStreamPoolsFilterInputArgs>? _filters;
        public InputList<Inputs.GetStreamPoolsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetStreamPoolsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only resources that match the given ID exactly.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given name exactly.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetStreamPoolsInvokeArgs()
        {
        }
        public static new GetStreamPoolsInvokeArgs Empty => new GetStreamPoolsInvokeArgs();
    }


    [OutputType]
    public sealed class GetStreamPoolsResult
    {
        /// <summary>
        /// Compartment OCID that the pool belongs to.
        /// </summary>
        public readonly string CompartmentId;
        public readonly ImmutableArray<Outputs.GetStreamPoolsFilterResult> Filters;
        /// <summary>
        /// The OCID of the stream pool.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The name of the stream pool.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The current state of the stream pool.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// The list of stream_pools.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetStreamPoolsStreamPoolResult> StreamPools;

        [OutputConstructor]
        private GetStreamPoolsResult(
            string compartmentId,

            ImmutableArray<Outputs.GetStreamPoolsFilterResult> filters,

            string? id,

            string? name,

            string? state,

            ImmutableArray<Outputs.GetStreamPoolsStreamPoolResult> streamPools)
        {
            CompartmentId = compartmentId;
            Filters = filters;
            Id = id;
            Name = name;
            State = state;
            StreamPools = streamPools;
        }
    }
}
