// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Tenantmanagercontrolplane
{
    public static class GetDomain
    {
        /// <summary>
        /// This data source provides details about a specific Domain resource in Oracle Cloud Infrastructure Tenantmanagercontrolplane service.
        /// 
        /// Gets information about the domain.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDomain = Oci.Tenantmanagercontrolplane.GetDomain.Invoke(new()
        ///     {
        ///         DomainId = testDomainOciTenantmanagercontrolplaneDomain.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetDomainResult> InvokeAsync(GetDomainArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDomainResult>("oci:Tenantmanagercontrolplane/getDomain:getDomain", args ?? new GetDomainArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Domain resource in Oracle Cloud Infrastructure Tenantmanagercontrolplane service.
        /// 
        /// Gets information about the domain.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDomain = Oci.Tenantmanagercontrolplane.GetDomain.Invoke(new()
        ///     {
        ///         DomainId = testDomainOciTenantmanagercontrolplaneDomain.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDomainResult> Invoke(GetDomainInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDomainResult>("oci:Tenantmanagercontrolplane/getDomain:getDomain", args ?? new GetDomainInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Domain resource in Oracle Cloud Infrastructure Tenantmanagercontrolplane service.
        /// 
        /// Gets information about the domain.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testDomain = Oci.Tenantmanagercontrolplane.GetDomain.Invoke(new()
        ///     {
        ///         DomainId = testDomainOciTenantmanagercontrolplaneDomain.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDomainResult> Invoke(GetDomainInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDomainResult>("oci:Tenantmanagercontrolplane/getDomain:getDomain", args ?? new GetDomainInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDomainArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The domain OCID.
        /// </summary>
        [Input("domainId", required: true)]
        public string DomainId { get; set; } = null!;

        public GetDomainArgs()
        {
        }
        public static new GetDomainArgs Empty => new GetDomainArgs();
    }

    public sealed class GetDomainInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The domain OCID.
        /// </summary>
        [Input("domainId", required: true)]
        public Input<string> DomainId { get; set; } = null!;

        public GetDomainInvokeArgs()
        {
        }
        public static new GetDomainInvokeArgs Empty => new GetDomainInvokeArgs();
    }


    [OutputType]
    public sealed class GetDomainResult
    {
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        public readonly string DomainId;
        /// <summary>
        /// The domain name.
        /// </summary>
        public readonly string DomainName;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The OCID of the tenancy that has started the registration process for this domain.
        /// </summary>
        public readonly string OwnerId;
        /// <summary>
        /// Lifecycle state of the domain.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Status of the domain.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// Date-time when this domain was created. An RFC 3339-formatted date and time string.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// Date-time when this domain was last updated. An RFC 3339-formatted date and time string.
        /// </summary>
        public readonly string TimeUpdated;
        /// <summary>
        /// The code that the owner of the domain will need to add as a TXT record to their domain.
        /// </summary>
        public readonly string TxtRecord;

        [OutputConstructor]
        private GetDomainResult(
            ImmutableDictionary<string, string> definedTags,

            string domainId,

            string domainName,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            string ownerId,

            string state,

            string status,

            ImmutableDictionary<string, string> systemTags,

            string timeCreated,

            string timeUpdated,

            string txtRecord)
        {
            DefinedTags = definedTags;
            DomainId = domainId;
            DomainName = domainName;
            FreeformTags = freeformTags;
            Id = id;
            OwnerId = ownerId;
            State = state;
            Status = status;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            TxtRecord = txtRecord;
        }
    }
}
