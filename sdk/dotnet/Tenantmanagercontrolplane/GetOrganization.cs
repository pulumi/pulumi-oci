// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Tenantmanagercontrolplane
{
    public static class GetOrganization
    {
        /// <summary>
        /// This data source provides details about a specific Organization resource in Oracle Cloud Infrastructure Tenantmanagercontrolplane service.
        /// 
        /// Gets information about the organization.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOrganization = Oci.Tenantmanagercontrolplane.GetOrganization.Invoke(new()
        ///     {
        ///         OrganizationId = testOrganizationOciTenantmanagercontrolplaneOrganization.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetOrganizationResult> InvokeAsync(GetOrganizationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOrganizationResult>("oci:Tenantmanagercontrolplane/getOrganization:getOrganization", args ?? new GetOrganizationArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Organization resource in Oracle Cloud Infrastructure Tenantmanagercontrolplane service.
        /// 
        /// Gets information about the organization.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOrganization = Oci.Tenantmanagercontrolplane.GetOrganization.Invoke(new()
        ///     {
        ///         OrganizationId = testOrganizationOciTenantmanagercontrolplaneOrganization.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOrganizationResult> Invoke(GetOrganizationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOrganizationResult>("oci:Tenantmanagercontrolplane/getOrganization:getOrganization", args ?? new GetOrganizationInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Organization resource in Oracle Cloud Infrastructure Tenantmanagercontrolplane service.
        /// 
        /// Gets information about the organization.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOrganization = Oci.Tenantmanagercontrolplane.GetOrganization.Invoke(new()
        ///     {
        ///         OrganizationId = testOrganizationOciTenantmanagercontrolplaneOrganization.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOrganizationResult> Invoke(GetOrganizationInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetOrganizationResult>("oci:Tenantmanagercontrolplane/getOrganization:getOrganization", args ?? new GetOrganizationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOrganizationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// OCID of the organization to retrieve.
        /// </summary>
        [Input("organizationId", required: true)]
        public string OrganizationId { get; set; } = null!;

        public GetOrganizationArgs()
        {
        }
        public static new GetOrganizationArgs Empty => new GetOrganizationArgs();
    }

    public sealed class GetOrganizationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// OCID of the organization to retrieve.
        /// </summary>
        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        public GetOrganizationInvokeArgs()
        {
        }
        public static new GetOrganizationInvokeArgs Empty => new GetOrganizationInvokeArgs();
    }


    [OutputType]
    public sealed class GetOrganizationResult
    {
        /// <summary>
        /// OCID of the compartment containing the organization. Always a tenancy OCID.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// OCID of the default Universal Credits Model subscription. Any tenancy joining the organization will automatically get assigned this subscription, if a subscription is not explictly assigned.
        /// </summary>
        public readonly string DefaultUcmSubscriptionId;
        /// <summary>
        /// A display name for the organization. Avoid entering confidential information.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string OrganizationId;
        /// <summary>
        /// The name of the tenancy that is the organization parent.
        /// </summary>
        public readonly string ParentName;
        /// <summary>
        /// Lifecycle state of the organization.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Date and time when the organization was created.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// Date and time when the organization was last updated.
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetOrganizationResult(
            string compartmentId,

            string defaultUcmSubscriptionId,

            string displayName,

            string id,

            string organizationId,

            string parentName,

            string state,

            string timeCreated,

            string timeUpdated)
        {
            CompartmentId = compartmentId;
            DefaultUcmSubscriptionId = defaultUcmSubscriptionId;
            DisplayName = displayName;
            Id = id;
            OrganizationId = organizationId;
            ParentName = parentName;
            State = state;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
