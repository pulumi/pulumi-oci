// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Tenantmanagercontrolplane
{
    public static class GetOrganizationTenancies
    {
        /// <summary>
        /// This data source provides the list of Organization Tenancies in Oracle Cloud Infrastructure Tenantmanagercontrolplane service.
        /// 
        /// Gets a list of tenancies in the organization.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOrganizationTenancies = Oci.Tenantmanagercontrolplane.GetOrganizationTenancies.Invoke(new()
        ///     {
        ///         OrganizationId = testOrganization.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetOrganizationTenanciesResult> InvokeAsync(GetOrganizationTenanciesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOrganizationTenanciesResult>("oci:Tenantmanagercontrolplane/getOrganizationTenancies:getOrganizationTenancies", args ?? new GetOrganizationTenanciesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Organization Tenancies in Oracle Cloud Infrastructure Tenantmanagercontrolplane service.
        /// 
        /// Gets a list of tenancies in the organization.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOrganizationTenancies = Oci.Tenantmanagercontrolplane.GetOrganizationTenancies.Invoke(new()
        ///     {
        ///         OrganizationId = testOrganization.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOrganizationTenanciesResult> Invoke(GetOrganizationTenanciesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOrganizationTenanciesResult>("oci:Tenantmanagercontrolplane/getOrganizationTenancies:getOrganizationTenancies", args ?? new GetOrganizationTenanciesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Organization Tenancies in Oracle Cloud Infrastructure Tenantmanagercontrolplane service.
        /// 
        /// Gets a list of tenancies in the organization.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOrganizationTenancies = Oci.Tenantmanagercontrolplane.GetOrganizationTenancies.Invoke(new()
        ///     {
        ///         OrganizationId = testOrganization.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOrganizationTenanciesResult> Invoke(GetOrganizationTenanciesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetOrganizationTenanciesResult>("oci:Tenantmanagercontrolplane/getOrganizationTenancies:getOrganizationTenancies", args ?? new GetOrganizationTenanciesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOrganizationTenanciesArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetOrganizationTenanciesFilterArgs>? _filters;
        public List<Inputs.GetOrganizationTenanciesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetOrganizationTenanciesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// OCID of the organization.
        /// </summary>
        [Input("organizationId", required: true)]
        public string OrganizationId { get; set; } = null!;

        public GetOrganizationTenanciesArgs()
        {
        }
        public static new GetOrganizationTenanciesArgs Empty => new GetOrganizationTenanciesArgs();
    }

    public sealed class GetOrganizationTenanciesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetOrganizationTenanciesFilterInputArgs>? _filters;
        public InputList<Inputs.GetOrganizationTenanciesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetOrganizationTenanciesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// OCID of the organization.
        /// </summary>
        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        public GetOrganizationTenanciesInvokeArgs()
        {
        }
        public static new GetOrganizationTenanciesInvokeArgs Empty => new GetOrganizationTenanciesInvokeArgs();
    }


    [OutputType]
    public sealed class GetOrganizationTenanciesResult
    {
        public readonly ImmutableArray<Outputs.GetOrganizationTenanciesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string OrganizationId;
        /// <summary>
        /// The list of organization_tenancy_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetOrganizationTenanciesOrganizationTenancyCollectionResult> OrganizationTenancyCollections;

        [OutputConstructor]
        private GetOrganizationTenanciesResult(
            ImmutableArray<Outputs.GetOrganizationTenanciesFilterResult> filters,

            string id,

            string organizationId,

            ImmutableArray<Outputs.GetOrganizationTenanciesOrganizationTenancyCollectionResult> organizationTenancyCollections)
        {
            Filters = filters;
            Id = id;
            OrganizationId = organizationId;
            OrganizationTenancyCollections = organizationTenancyCollections;
        }
    }
}
