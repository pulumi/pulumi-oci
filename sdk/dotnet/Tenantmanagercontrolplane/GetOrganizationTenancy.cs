// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Tenantmanagercontrolplane
{
    public static class GetOrganizationTenancy
    {
        /// <summary>
        /// This data source provides details about a specific Organization Tenancy resource in Oracle Cloud Infrastructure Tenantmanagercontrolplane service.
        /// 
        /// Gets information about the organization's tenancy.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOrganizationTenancy = Oci.Tenantmanagercontrolplane.GetOrganizationTenancy.Invoke(new()
        ///     {
        ///         OrganizationId = testOrganization.Id,
        ///         TenancyId = testTenancy.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetOrganizationTenancyResult> InvokeAsync(GetOrganizationTenancyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOrganizationTenancyResult>("oci:Tenantmanagercontrolplane/getOrganizationTenancy:getOrganizationTenancy", args ?? new GetOrganizationTenancyArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Organization Tenancy resource in Oracle Cloud Infrastructure Tenantmanagercontrolplane service.
        /// 
        /// Gets information about the organization's tenancy.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOrganizationTenancy = Oci.Tenantmanagercontrolplane.GetOrganizationTenancy.Invoke(new()
        ///     {
        ///         OrganizationId = testOrganization.Id,
        ///         TenancyId = testTenancy.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOrganizationTenancyResult> Invoke(GetOrganizationTenancyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOrganizationTenancyResult>("oci:Tenantmanagercontrolplane/getOrganizationTenancy:getOrganizationTenancy", args ?? new GetOrganizationTenancyInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Organization Tenancy resource in Oracle Cloud Infrastructure Tenantmanagercontrolplane service.
        /// 
        /// Gets information about the organization's tenancy.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOrganizationTenancy = Oci.Tenantmanagercontrolplane.GetOrganizationTenancy.Invoke(new()
        ///     {
        ///         OrganizationId = testOrganization.Id,
        ///         TenancyId = testTenancy.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOrganizationTenancyResult> Invoke(GetOrganizationTenancyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetOrganizationTenancyResult>("oci:Tenantmanagercontrolplane/getOrganizationTenancy:getOrganizationTenancy", args ?? new GetOrganizationTenancyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOrganizationTenancyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// OCID of the organization.
        /// </summary>
        [Input("organizationId", required: true)]
        public string OrganizationId { get; set; } = null!;

        /// <summary>
        /// OCID of the tenancy to retrieve.
        /// </summary>
        [Input("tenancyId", required: true)]
        public string TenancyId { get; set; } = null!;

        public GetOrganizationTenancyArgs()
        {
        }
        public static new GetOrganizationTenancyArgs Empty => new GetOrganizationTenancyArgs();
    }

    public sealed class GetOrganizationTenancyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// OCID of the organization.
        /// </summary>
        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        /// <summary>
        /// OCID of the tenancy to retrieve.
        /// </summary>
        [Input("tenancyId", required: true)]
        public Input<string> TenancyId { get; set; } = null!;

        public GetOrganizationTenancyInvokeArgs()
        {
        }
        public static new GetOrganizationTenancyInvokeArgs Empty => new GetOrganizationTenancyInvokeArgs();
    }


    [OutputType]
    public sealed class GetOrganizationTenancyResult
    {
        /// <summary>
        /// The governance status of the tenancy.
        /// </summary>
        public readonly string GovernanceStatus;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Parameter to indicate the tenancy is approved for transfer to another organization.
        /// </summary>
        public readonly bool IsApprovedForTransfer;
        /// <summary>
        /// Name of the tenancy.
        /// </summary>
        public readonly string Name;
        public readonly string OrganizationId;
        /// <summary>
        /// Role of the organization tenancy.
        /// </summary>
        public readonly string Role;
        /// <summary>
        /// Lifecycle state of the organization tenancy.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// OCID of the tenancy.
        /// </summary>
        public readonly string TenancyId;
        /// <summary>
        /// Date and time when the tenancy joined the organization.
        /// </summary>
        public readonly string TimeJoined;
        /// <summary>
        /// Date and time when the tenancy left the organization.
        /// </summary>
        public readonly string TimeLeft;

        [OutputConstructor]
        private GetOrganizationTenancyResult(
            string governanceStatus,

            string id,

            bool isApprovedForTransfer,

            string name,

            string organizationId,

            string role,

            string state,

            string tenancyId,

            string timeJoined,

            string timeLeft)
        {
            GovernanceStatus = governanceStatus;
            Id = id;
            IsApprovedForTransfer = isApprovedForTransfer;
            Name = name;
            OrganizationId = organizationId;
            Role = role;
            State = state;
            TenancyId = tenancyId;
            TimeJoined = timeJoined;
            TimeLeft = timeLeft;
        }
    }
}
