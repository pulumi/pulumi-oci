// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Tenantmanagercontrolplane
{
    public static class GetOrganizations
    {
        /// <summary>
        /// This data source provides the list of Organizations in Oracle Cloud Infrastructure Tenantmanagercontrolplane service.
        /// 
        /// Lists organizations associated with the caller.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOrganizations = Oci.Tenantmanagercontrolplane.GetOrganizations.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetOrganizationsResult> InvokeAsync(GetOrganizationsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOrganizationsResult>("oci:Tenantmanagercontrolplane/getOrganizations:getOrganizations", args ?? new GetOrganizationsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Organizations in Oracle Cloud Infrastructure Tenantmanagercontrolplane service.
        /// 
        /// Lists organizations associated with the caller.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOrganizations = Oci.Tenantmanagercontrolplane.GetOrganizations.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOrganizationsResult> Invoke(GetOrganizationsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOrganizationsResult>("oci:Tenantmanagercontrolplane/getOrganizations:getOrganizations", args ?? new GetOrganizationsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Organizations in Oracle Cloud Infrastructure Tenantmanagercontrolplane service.
        /// 
        /// Lists organizations associated with the caller.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testOrganizations = Oci.Tenantmanagercontrolplane.GetOrganizations.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOrganizationsResult> Invoke(GetOrganizationsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetOrganizationsResult>("oci:Tenantmanagercontrolplane/getOrganizations:getOrganizations", args ?? new GetOrganizationsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOrganizationsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetOrganizationsFilterArgs>? _filters;
        public List<Inputs.GetOrganizationsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetOrganizationsFilterArgs>());
            set => _filters = value;
        }

        public GetOrganizationsArgs()
        {
        }
        public static new GetOrganizationsArgs Empty => new GetOrganizationsArgs();
    }

    public sealed class GetOrganizationsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetOrganizationsFilterInputArgs>? _filters;
        public InputList<Inputs.GetOrganizationsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetOrganizationsFilterInputArgs>());
            set => _filters = value;
        }

        public GetOrganizationsInvokeArgs()
        {
        }
        public static new GetOrganizationsInvokeArgs Empty => new GetOrganizationsInvokeArgs();
    }


    [OutputType]
    public sealed class GetOrganizationsResult
    {
        /// <summary>
        /// OCID of the compartment containing the organization. Always a tenancy OCID.
        /// </summary>
        public readonly string CompartmentId;
        public readonly ImmutableArray<Outputs.GetOrganizationsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of organization_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetOrganizationsOrganizationCollectionResult> OrganizationCollections;

        [OutputConstructor]
        private GetOrganizationsResult(
            string compartmentId,

            ImmutableArray<Outputs.GetOrganizationsFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetOrganizationsOrganizationCollectionResult> organizationCollections)
        {
            CompartmentId = compartmentId;
            Filters = filters;
            Id = id;
            OrganizationCollections = organizationCollections;
        }
    }
}
