// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Tenantmanagercontrolplane
{
    public static class GetSenderInvitations
    {
        /// <summary>
        /// This data source provides the list of Sender Invitations in Oracle Cloud Infrastructure Tenantmanagercontrolplane service.
        /// 
        /// Return a (paginated) list of sender invitations.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSenderInvitations = Oci.Tenantmanagercontrolplane.GetSenderInvitations.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = senderInvitationDisplayName,
        ///         RecipientTenancyId = testTenancy.Id,
        ///         State = senderInvitationState,
        ///         Status = senderInvitationStatus,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSenderInvitationsResult> InvokeAsync(GetSenderInvitationsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSenderInvitationsResult>("oci:Tenantmanagercontrolplane/getSenderInvitations:getSenderInvitations", args ?? new GetSenderInvitationsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Sender Invitations in Oracle Cloud Infrastructure Tenantmanagercontrolplane service.
        /// 
        /// Return a (paginated) list of sender invitations.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSenderInvitations = Oci.Tenantmanagercontrolplane.GetSenderInvitations.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = senderInvitationDisplayName,
        ///         RecipientTenancyId = testTenancy.Id,
        ///         State = senderInvitationState,
        ///         Status = senderInvitationStatus,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSenderInvitationsResult> Invoke(GetSenderInvitationsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSenderInvitationsResult>("oci:Tenantmanagercontrolplane/getSenderInvitations:getSenderInvitations", args ?? new GetSenderInvitationsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Sender Invitations in Oracle Cloud Infrastructure Tenantmanagercontrolplane service.
        /// 
        /// Return a (paginated) list of sender invitations.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSenderInvitations = Oci.Tenantmanagercontrolplane.GetSenderInvitations.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = senderInvitationDisplayName,
        ///         RecipientTenancyId = testTenancy.Id,
        ///         State = senderInvitationState,
        ///         Status = senderInvitationStatus,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSenderInvitationsResult> Invoke(GetSenderInvitationsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSenderInvitationsResult>("oci:Tenantmanagercontrolplane/getSenderInvitations:getSenderInvitations", args ?? new GetSenderInvitationsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSenderInvitationsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetSenderInvitationsFilterArgs>? _filters;
        public List<Inputs.GetSenderInvitationsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetSenderInvitationsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The tenancy that the invitation is addressed to.
        /// </summary>
        [Input("recipientTenancyId")]
        public string? RecipientTenancyId { get; set; }

        /// <summary>
        /// The lifecycle state of the resource.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        /// <summary>
        /// The status of the sender invitation.
        /// </summary>
        [Input("status")]
        public string? Status { get; set; }

        public GetSenderInvitationsArgs()
        {
        }
        public static new GetSenderInvitationsArgs Empty => new GetSenderInvitationsArgs();
    }

    public sealed class GetSenderInvitationsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetSenderInvitationsFilterInputArgs>? _filters;
        public InputList<Inputs.GetSenderInvitationsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetSenderInvitationsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The tenancy that the invitation is addressed to.
        /// </summary>
        [Input("recipientTenancyId")]
        public Input<string>? RecipientTenancyId { get; set; }

        /// <summary>
        /// The lifecycle state of the resource.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The status of the sender invitation.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public GetSenderInvitationsInvokeArgs()
        {
        }
        public static new GetSenderInvitationsInvokeArgs Empty => new GetSenderInvitationsInvokeArgs();
    }


    [OutputType]
    public sealed class GetSenderInvitationsResult
    {
        /// <summary>
        /// OCID of the sender tenancy.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// A user-created name to describe the invitation. Avoid entering confidential information.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetSenderInvitationsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// OCID of the recipient tenancy.
        /// </summary>
        public readonly string? RecipientTenancyId;
        /// <summary>
        /// The list of sender_invitation_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSenderInvitationsSenderInvitationCollectionResult> SenderInvitationCollections;
        /// <summary>
        /// Lifecycle state of the sender invitation.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// Status of the sender invitation.
        /// </summary>
        public readonly string? Status;

        [OutputConstructor]
        private GetSenderInvitationsResult(
            string compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetSenderInvitationsFilterResult> filters,

            string id,

            string? recipientTenancyId,

            ImmutableArray<Outputs.GetSenderInvitationsSenderInvitationCollectionResult> senderInvitationCollections,

            string? state,

            string? status)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            RecipientTenancyId = recipientTenancyId;
            SenderInvitationCollections = senderInvitationCollections;
            State = state;
            Status = status;
        }
    }
}
