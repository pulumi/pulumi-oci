// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Tenantmanagercontrolplane
{
    public static class GetSubscription
    {
        /// <summary>
        /// This data source provides details about a specific Subscription resource in Oracle Cloud Infrastructure Tenantmanagercontrolplane service.
        /// 
        /// Gets the subscription details by subscription ID.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSubscription = Oci.Tenantmanagercontrolplane.GetSubscription.Invoke(new()
        ///     {
        ///         SubscriptionId = testSubscriptionOciTenantmanagercontrolplaneSubscription.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSubscriptionResult> InvokeAsync(GetSubscriptionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSubscriptionResult>("oci:Tenantmanagercontrolplane/getSubscription:getSubscription", args ?? new GetSubscriptionArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Subscription resource in Oracle Cloud Infrastructure Tenantmanagercontrolplane service.
        /// 
        /// Gets the subscription details by subscription ID.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSubscription = Oci.Tenantmanagercontrolplane.GetSubscription.Invoke(new()
        ///     {
        ///         SubscriptionId = testSubscriptionOciTenantmanagercontrolplaneSubscription.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSubscriptionResult> Invoke(GetSubscriptionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSubscriptionResult>("oci:Tenantmanagercontrolplane/getSubscription:getSubscription", args ?? new GetSubscriptionInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Subscription resource in Oracle Cloud Infrastructure Tenantmanagercontrolplane service.
        /// 
        /// Gets the subscription details by subscription ID.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSubscription = Oci.Tenantmanagercontrolplane.GetSubscription.Invoke(new()
        ///     {
        ///         SubscriptionId = testSubscriptionOciTenantmanagercontrolplaneSubscription.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSubscriptionResult> Invoke(GetSubscriptionInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSubscriptionResult>("oci:Tenantmanagercontrolplane/getSubscription:getSubscription", args ?? new GetSubscriptionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSubscriptionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// OCID of the subscription.
        /// </summary>
        [Input("subscriptionId", required: true)]
        public string SubscriptionId { get; set; } = null!;

        public GetSubscriptionArgs()
        {
        }
        public static new GetSubscriptionArgs Empty => new GetSubscriptionArgs();
    }

    public sealed class GetSubscriptionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// OCID of the subscription.
        /// </summary>
        [Input("subscriptionId", required: true)]
        public Input<string> SubscriptionId { get; set; } = null!;

        public GetSubscriptionInvokeArgs()
        {
        }
        public static new GetSubscriptionInvokeArgs Empty => new GetSubscriptionInvokeArgs();
    }


    [OutputType]
    public sealed class GetSubscriptionResult
    {
        /// <summary>
        /// Classic subscription ID.
        /// </summary>
        public readonly string ClassicSubscriptionId;
        /// <summary>
        /// The currency code for the customer associated with the subscription.
        /// </summary>
        public readonly string CloudAmountCurrency;
        /// <summary>
        /// The Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the owning compartment. Always a tenancy OCID.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Customer service identifier for the customer associated with the subscription.
        /// </summary>
        public readonly string CsiNumber;
        /// <summary>
        /// Currency code. For example USD, MXN.
        /// </summary>
        public readonly string CurrencyCode;
        /// <summary>
        /// The country code for the customer associated with the subscription.
        /// </summary>
        public readonly string CustomerCountryCode;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// Date and time when the SKU ended.
        /// </summary>
        public readonly string EndDate;
        /// <summary>
        /// The entity version of the subscription, whether V1 (the legacy schema version), or V2 (the latest 20230401 API version).
        /// </summary>
        public readonly string EntityVersion;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Specifies whether or not the subscription is from classic systems.
        /// </summary>
        public readonly bool IsClassicSubscription;
        /// <summary>
        /// Specifies whether or not the subscription is a government subscription.
        /// </summary>
        public readonly bool IsGovernmentSubscription;
        /// <summary>
        /// The pay model of the subscription, such as 'Pay as you go' or 'Monthly'.
        /// </summary>
        public readonly string PaymentModel;
        /// <summary>
        /// Specifies any program that is associated with the subscription.
        /// </summary>
        public readonly string ProgramType;
        /// <summary>
        /// List of promotions related to the subscription.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSubscriptionPromotionResult> Promotions;
        /// <summary>
        /// Purchase entitlement ID associated with the subscription.
        /// </summary>
        public readonly string PurchaseEntitlementId;
        /// <summary>
        /// Region for the subscription.
        /// </summary>
        public readonly string RegionAssignment;
        /// <summary>
        /// The type of subscription, such as 'UCM', 'SAAS', 'ERP', 'CRM'.
        /// </summary>
        public readonly string ServiceName;
        /// <summary>
        /// List of SKUs linked to this subscription.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSubscriptionSkusResult> Skuses;
        /// <summary>
        /// Subscription start time.
        /// </summary>
        public readonly string StartDate;
        /// <summary>
        /// Lifecycle state of the subscription.
        /// </summary>
        public readonly string State;
        public readonly string SubscriptionId;
        /// <summary>
        /// Unique Oracle Cloud Subscriptions identifier that is immutable on creation.
        /// </summary>
        public readonly string SubscriptionNumber;
        /// <summary>
        /// Tier for the subscription, whether a free promotion subscription or a paid subscription.
        /// </summary>
        public readonly string SubscriptionTier;
        /// <summary>
        /// The date and time of creation, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The date and time of update, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetSubscriptionResult(
            string classicSubscriptionId,

            string cloudAmountCurrency,

            string compartmentId,

            string csiNumber,

            string currencyCode,

            string customerCountryCode,

            ImmutableDictionary<string, string> definedTags,

            string endDate,

            string entityVersion,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            bool isClassicSubscription,

            bool isGovernmentSubscription,

            string paymentModel,

            string programType,

            ImmutableArray<Outputs.GetSubscriptionPromotionResult> promotions,

            string purchaseEntitlementId,

            string regionAssignment,

            string serviceName,

            ImmutableArray<Outputs.GetSubscriptionSkusResult> skuses,

            string startDate,

            string state,

            string subscriptionId,

            string subscriptionNumber,

            string subscriptionTier,

            string timeCreated,

            string timeUpdated)
        {
            ClassicSubscriptionId = classicSubscriptionId;
            CloudAmountCurrency = cloudAmountCurrency;
            CompartmentId = compartmentId;
            CsiNumber = csiNumber;
            CurrencyCode = currencyCode;
            CustomerCountryCode = customerCountryCode;
            DefinedTags = definedTags;
            EndDate = endDate;
            EntityVersion = entityVersion;
            FreeformTags = freeformTags;
            Id = id;
            IsClassicSubscription = isClassicSubscription;
            IsGovernmentSubscription = isGovernmentSubscription;
            PaymentModel = paymentModel;
            ProgramType = programType;
            Promotions = promotions;
            PurchaseEntitlementId = purchaseEntitlementId;
            RegionAssignment = regionAssignment;
            ServiceName = serviceName;
            Skuses = skuses;
            StartDate = startDate;
            State = state;
            SubscriptionId = subscriptionId;
            SubscriptionNumber = subscriptionNumber;
            SubscriptionTier = subscriptionTier;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
