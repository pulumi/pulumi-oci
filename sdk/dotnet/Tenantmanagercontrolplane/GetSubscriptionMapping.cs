// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Tenantmanagercontrolplane
{
    public static class GetSubscriptionMapping
    {
        /// <summary>
        /// This data source provides details about a specific Subscription Mapping resource in Oracle Cloud Infrastructure Tenantmanagercontrolplane service.
        /// 
        /// Get the subscription mapping details by subscription mapping ID.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSubscriptionMapping = Oci.Tenantmanagercontrolplane.GetSubscriptionMapping.Invoke(new()
        ///     {
        ///         SubscriptionMappingId = testSubscriptionMappingOciTenantmanagercontrolplaneSubscriptionMapping.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSubscriptionMappingResult> InvokeAsync(GetSubscriptionMappingArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSubscriptionMappingResult>("oci:Tenantmanagercontrolplane/getSubscriptionMapping:getSubscriptionMapping", args ?? new GetSubscriptionMappingArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Subscription Mapping resource in Oracle Cloud Infrastructure Tenantmanagercontrolplane service.
        /// 
        /// Get the subscription mapping details by subscription mapping ID.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSubscriptionMapping = Oci.Tenantmanagercontrolplane.GetSubscriptionMapping.Invoke(new()
        ///     {
        ///         SubscriptionMappingId = testSubscriptionMappingOciTenantmanagercontrolplaneSubscriptionMapping.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSubscriptionMappingResult> Invoke(GetSubscriptionMappingInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSubscriptionMappingResult>("oci:Tenantmanagercontrolplane/getSubscriptionMapping:getSubscriptionMapping", args ?? new GetSubscriptionMappingInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Subscription Mapping resource in Oracle Cloud Infrastructure Tenantmanagercontrolplane service.
        /// 
        /// Get the subscription mapping details by subscription mapping ID.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSubscriptionMapping = Oci.Tenantmanagercontrolplane.GetSubscriptionMapping.Invoke(new()
        ///     {
        ///         SubscriptionMappingId = testSubscriptionMappingOciTenantmanagercontrolplaneSubscriptionMapping.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSubscriptionMappingResult> Invoke(GetSubscriptionMappingInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSubscriptionMappingResult>("oci:Tenantmanagercontrolplane/getSubscriptionMapping:getSubscriptionMapping", args ?? new GetSubscriptionMappingInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSubscriptionMappingArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// OCID of the subscriptionMappingId.
        /// </summary>
        [Input("subscriptionMappingId", required: true)]
        public string SubscriptionMappingId { get; set; } = null!;

        public GetSubscriptionMappingArgs()
        {
        }
        public static new GetSubscriptionMappingArgs Empty => new GetSubscriptionMappingArgs();
    }

    public sealed class GetSubscriptionMappingInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// OCID of the subscriptionMappingId.
        /// </summary>
        [Input("subscriptionMappingId", required: true)]
        public Input<string> SubscriptionMappingId { get; set; } = null!;

        public GetSubscriptionMappingInvokeArgs()
        {
        }
        public static new GetSubscriptionMappingInvokeArgs Empty => new GetSubscriptionMappingInvokeArgs();
    }


    [OutputType]
    public sealed class GetSubscriptionMappingResult
    {
        /// <summary>
        /// OCID of the compartment. Always a tenancy OCID.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// OCID of the mapping between subscription and compartment identified by the tenancy.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Denotes if the subscription is explicity assigned to the root compartment or tenancy.
        /// </summary>
        public readonly bool IsExplicitlyAssigned;
        /// <summary>
        /// Lifecycle state of the subscriptionMapping.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// OCID of the subscription.
        /// </summary>
        public readonly string SubscriptionId;
        public readonly string SubscriptionMappingId;
        /// <summary>
        /// Date-time when subscription mapping was created.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// Date-time when subscription mapping was terminated.
        /// </summary>
        public readonly string TimeTerminated;
        /// <summary>
        /// Date-time when subscription mapping was updated.
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetSubscriptionMappingResult(
            string compartmentId,

            string id,

            bool isExplicitlyAssigned,

            string state,

            string subscriptionId,

            string subscriptionMappingId,

            string timeCreated,

            string timeTerminated,

            string timeUpdated)
        {
            CompartmentId = compartmentId;
            Id = id;
            IsExplicitlyAssigned = isExplicitlyAssigned;
            State = state;
            SubscriptionId = subscriptionId;
            SubscriptionMappingId = subscriptionMappingId;
            TimeCreated = timeCreated;
            TimeTerminated = timeTerminated;
            TimeUpdated = timeUpdated;
        }
    }
}
