// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Tenantmanagercontrolplane
{
    public static class GetSubscriptionMappings
    {
        /// <summary>
        /// This data source provides the list of Subscription Mappings in Oracle Cloud Infrastructure Tenantmanagercontrolplane service.
        /// 
        /// Lists the subscription mappings for all the subscriptions owned by a given compartmentId. Only the root compartment is allowed.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSubscriptionMappings = Oci.Tenantmanagercontrolplane.GetSubscriptionMappings.Invoke(new()
        ///     {
        ///         SubscriptionId = testSubscription.Id,
        ///         CompartmentId = compartmentId,
        ///         State = subscriptionMappingState,
        ///         SubscriptionMappingId = testSubscriptionMapping.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSubscriptionMappingsResult> InvokeAsync(GetSubscriptionMappingsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSubscriptionMappingsResult>("oci:Tenantmanagercontrolplane/getSubscriptionMappings:getSubscriptionMappings", args ?? new GetSubscriptionMappingsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Subscription Mappings in Oracle Cloud Infrastructure Tenantmanagercontrolplane service.
        /// 
        /// Lists the subscription mappings for all the subscriptions owned by a given compartmentId. Only the root compartment is allowed.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSubscriptionMappings = Oci.Tenantmanagercontrolplane.GetSubscriptionMappings.Invoke(new()
        ///     {
        ///         SubscriptionId = testSubscription.Id,
        ///         CompartmentId = compartmentId,
        ///         State = subscriptionMappingState,
        ///         SubscriptionMappingId = testSubscriptionMapping.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSubscriptionMappingsResult> Invoke(GetSubscriptionMappingsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSubscriptionMappingsResult>("oci:Tenantmanagercontrolplane/getSubscriptionMappings:getSubscriptionMappings", args ?? new GetSubscriptionMappingsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Subscription Mappings in Oracle Cloud Infrastructure Tenantmanagercontrolplane service.
        /// 
        /// Lists the subscription mappings for all the subscriptions owned by a given compartmentId. Only the root compartment is allowed.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSubscriptionMappings = Oci.Tenantmanagercontrolplane.GetSubscriptionMappings.Invoke(new()
        ///     {
        ///         SubscriptionId = testSubscription.Id,
        ///         CompartmentId = compartmentId,
        ///         State = subscriptionMappingState,
        ///         SubscriptionMappingId = testSubscriptionMapping.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSubscriptionMappingsResult> Invoke(GetSubscriptionMappingsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSubscriptionMappingsResult>("oci:Tenantmanagercontrolplane/getSubscriptionMappings:getSubscriptionMappings", args ?? new GetSubscriptionMappingsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSubscriptionMappingsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        [Input("filters")]
        private List<Inputs.GetSubscriptionMappingsFilterArgs>? _filters;
        public List<Inputs.GetSubscriptionMappingsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetSubscriptionMappingsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The lifecycle state of the resource.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        /// <summary>
        /// OCID of the subscription.
        /// </summary>
        [Input("subscriptionId", required: true)]
        public string SubscriptionId { get; set; } = null!;

        /// <summary>
        /// A unique ID for subscription and tenancy mapping.
        /// </summary>
        [Input("subscriptionMappingId")]
        public string? SubscriptionMappingId { get; set; }

        public GetSubscriptionMappingsArgs()
        {
        }
        public static new GetSubscriptionMappingsArgs Empty => new GetSubscriptionMappingsArgs();
    }

    public sealed class GetSubscriptionMappingsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetSubscriptionMappingsFilterInputArgs>? _filters;
        public InputList<Inputs.GetSubscriptionMappingsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetSubscriptionMappingsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The lifecycle state of the resource.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// OCID of the subscription.
        /// </summary>
        [Input("subscriptionId", required: true)]
        public Input<string> SubscriptionId { get; set; } = null!;

        /// <summary>
        /// A unique ID for subscription and tenancy mapping.
        /// </summary>
        [Input("subscriptionMappingId")]
        public Input<string>? SubscriptionMappingId { get; set; }

        public GetSubscriptionMappingsInvokeArgs()
        {
        }
        public static new GetSubscriptionMappingsInvokeArgs Empty => new GetSubscriptionMappingsInvokeArgs();
    }


    [OutputType]
    public sealed class GetSubscriptionMappingsResult
    {
        /// <summary>
        /// OCID of the compartment. Always a tenancy OCID.
        /// </summary>
        public readonly string? CompartmentId;
        public readonly ImmutableArray<Outputs.GetSubscriptionMappingsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Lifecycle state of the subscriptionMapping.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// OCID of the subscription.
        /// </summary>
        public readonly string SubscriptionId;
        /// <summary>
        /// The list of subscription_mapping_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSubscriptionMappingsSubscriptionMappingCollectionResult> SubscriptionMappingCollections;
        public readonly string? SubscriptionMappingId;

        [OutputConstructor]
        private GetSubscriptionMappingsResult(
            string? compartmentId,

            ImmutableArray<Outputs.GetSubscriptionMappingsFilterResult> filters,

            string id,

            string? state,

            string subscriptionId,

            ImmutableArray<Outputs.GetSubscriptionMappingsSubscriptionMappingCollectionResult> subscriptionMappingCollections,

            string? subscriptionMappingId)
        {
            CompartmentId = compartmentId;
            Filters = filters;
            Id = id;
            State = state;
            SubscriptionId = subscriptionId;
            SubscriptionMappingCollections = subscriptionMappingCollections;
            SubscriptionMappingId = subscriptionMappingId;
        }
    }
}
