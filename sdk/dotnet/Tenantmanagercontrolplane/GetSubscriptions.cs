// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Tenantmanagercontrolplane
{
    public static class GetSubscriptions
    {
        /// <summary>
        /// This data source provides the list of Subscriptions in Oracle Cloud Infrastructure Tenantmanagercontrolplane service.
        /// 
        /// List the subscriptions that a compartment owns. Only the root compartment is allowed.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSubscriptions = Oci.Tenantmanagercontrolplane.GetSubscriptions.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         EntityVersion = subscriptionEntityVersion,
        ///         SubscriptionId = testSubscription.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSubscriptionsResult> InvokeAsync(GetSubscriptionsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSubscriptionsResult>("oci:Tenantmanagercontrolplane/getSubscriptions:getSubscriptions", args ?? new GetSubscriptionsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Subscriptions in Oracle Cloud Infrastructure Tenantmanagercontrolplane service.
        /// 
        /// List the subscriptions that a compartment owns. Only the root compartment is allowed.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSubscriptions = Oci.Tenantmanagercontrolplane.GetSubscriptions.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         EntityVersion = subscriptionEntityVersion,
        ///         SubscriptionId = testSubscription.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSubscriptionsResult> Invoke(GetSubscriptionsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSubscriptionsResult>("oci:Tenantmanagercontrolplane/getSubscriptions:getSubscriptions", args ?? new GetSubscriptionsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Subscriptions in Oracle Cloud Infrastructure Tenantmanagercontrolplane service.
        /// 
        /// List the subscriptions that a compartment owns. Only the root compartment is allowed.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSubscriptions = Oci.Tenantmanagercontrolplane.GetSubscriptions.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         EntityVersion = subscriptionEntityVersion,
        ///         SubscriptionId = testSubscription.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSubscriptionsResult> Invoke(GetSubscriptionsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSubscriptionsResult>("oci:Tenantmanagercontrolplane/getSubscriptions:getSubscriptions", args ?? new GetSubscriptionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSubscriptionsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        /// <summary>
        /// The version of the subscription entity.
        /// </summary>
        [Input("entityVersion")]
        public string? EntityVersion { get; set; }

        [Input("filters")]
        private List<Inputs.GetSubscriptionsFilterArgs>? _filters;
        public List<Inputs.GetSubscriptionsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetSubscriptionsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The ID of the subscription to which the tenancy is associated.
        /// </summary>
        [Input("subscriptionId")]
        public string? SubscriptionId { get; set; }

        public GetSubscriptionsArgs()
        {
        }
        public static new GetSubscriptionsArgs Empty => new GetSubscriptionsArgs();
    }

    public sealed class GetSubscriptionsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// The version of the subscription entity.
        /// </summary>
        [Input("entityVersion")]
        public Input<string>? EntityVersion { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetSubscriptionsFilterInputArgs>? _filters;
        public InputList<Inputs.GetSubscriptionsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetSubscriptionsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The ID of the subscription to which the tenancy is associated.
        /// </summary>
        [Input("subscriptionId")]
        public Input<string>? SubscriptionId { get; set; }

        public GetSubscriptionsInvokeArgs()
        {
        }
        public static new GetSubscriptionsInvokeArgs Empty => new GetSubscriptionsInvokeArgs();
    }


    [OutputType]
    public sealed class GetSubscriptionsResult
    {
        /// <summary>
        /// The Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the owning compartment. Always a tenancy OCID.
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// The entity version of the subscription, whether V1 (the legacy schema version), or V2 (the latest 20230401 API version).
        /// </summary>
        public readonly string? EntityVersion;
        public readonly ImmutableArray<Outputs.GetSubscriptionsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of subscription_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSubscriptionsSubscriptionCollectionResult> SubscriptionCollections;
        public readonly string? SubscriptionId;

        [OutputConstructor]
        private GetSubscriptionsResult(
            string? compartmentId,

            string? entityVersion,

            ImmutableArray<Outputs.GetSubscriptionsFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetSubscriptionsSubscriptionCollectionResult> subscriptionCollections,

            string? subscriptionId)
        {
            CompartmentId = compartmentId;
            EntityVersion = entityVersion;
            Filters = filters;
            Id = id;
            SubscriptionCollections = subscriptionCollections;
            SubscriptionId = subscriptionId;
        }
    }
}
