// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Tenantmanagercontrolplane.Outputs
{

    [OutputType]
    public sealed class GetAssignedSubscriptionPromotionResult
    {
        /// <summary>
        /// If a subscription is present, indicates the total amount of promotional subscription credits.
        /// </summary>
        public readonly double Amount;
        /// <summary>
        /// Currency unit associated with the promotion.
        /// </summary>
        public readonly string CurrencyUnit;
        /// <summary>
        /// Specifies how long the promotion related to the subscription, if any, is valid in duration units.
        /// </summary>
        public readonly int Duration;
        /// <summary>
        /// Unit for the duration.
        /// </summary>
        public readonly string DurationUnit;
        /// <summary>
        /// Speficies whether or not the customer intends to pay after the promotion has expired.
        /// </summary>
        public readonly bool IsIntentToPay;
        /// <summary>
        /// If a subscription is present, indicates the current status of the subscription promotion.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Date and time when the promotion ends.
        /// </summary>
        public readonly string TimeExpired;
        /// <summary>
        /// Date and time when the promotion starts.
        /// </summary>
        public readonly string TimeStarted;

        [OutputConstructor]
        private GetAssignedSubscriptionPromotionResult(
            double amount,

            string currencyUnit,

            int duration,

            string durationUnit,

            bool isIntentToPay,

            string status,

            string timeExpired,

            string timeStarted)
        {
            Amount = amount;
            CurrencyUnit = currencyUnit;
            Duration = duration;
            DurationUnit = durationUnit;
            IsIntentToPay = isIntentToPay;
            Status = status;
            TimeExpired = timeExpired;
            TimeStarted = timeStarted;
        }
    }
}
