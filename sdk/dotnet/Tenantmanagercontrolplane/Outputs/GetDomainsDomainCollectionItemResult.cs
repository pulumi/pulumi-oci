// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Tenantmanagercontrolplane.Outputs
{

    [OutputType]
    public sealed class GetDomainsDomainCollectionItemResult
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// The domain name.
        /// </summary>
        public readonly string DomainName;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The OCID of the domain.
        /// </summary>
        public readonly string Id;
        public readonly bool IsGovernanceEnabled;
        /// <summary>
        /// The OCID of the tenancy that has started the registration process for this domain.
        /// </summary>
        public readonly string OwnerId;
        /// <summary>
        /// The lifecycle state of the resource.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The status of the domain.
        /// </summary>
        public readonly string Status;
        public readonly string SubscriptionEmail;
        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// Date-time when this domain was created. An RFC 3339-formatted date and time string.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// Date-time when this domain was last updated. An RFC 3339-formatted date and time string.
        /// </summary>
        public readonly string TimeUpdated;
        /// <summary>
        /// The code that the owner of the domain will need to add as a TXT record to their domain.
        /// </summary>
        public readonly string TxtRecord;

        [OutputConstructor]
        private GetDomainsDomainCollectionItemResult(
            string compartmentId,

            ImmutableDictionary<string, string> definedTags,

            string domainName,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            bool isGovernanceEnabled,

            string ownerId,

            string state,

            string status,

            string subscriptionEmail,

            ImmutableDictionary<string, string> systemTags,

            string timeCreated,

            string timeUpdated,

            string txtRecord)
        {
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            DomainName = domainName;
            FreeformTags = freeformTags;
            Id = id;
            IsGovernanceEnabled = isGovernanceEnabled;
            OwnerId = ownerId;
            State = state;
            Status = status;
            SubscriptionEmail = subscriptionEmail;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            TxtRecord = txtRecord;
        }
    }
}
