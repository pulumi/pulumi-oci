// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Tenantmanagercontrolplane
{
    /// <summary>
    /// This resource provides the Subscription Mapping resource in Oracle Cloud Infrastructure Tenantmanagercontrolplane service.
    /// 
    /// Assign the tenancy record identified by the compartment ID to the given subscription ID.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testSubscriptionMapping = new Oci.Tenantmanagercontrolplane.SubscriptionMapping("test_subscription_mapping", new()
    ///     {
    ///         CompartmentId = compartmentId,
    ///         SubscriptionId = testSubscription.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// SubscriptionMappings can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:Tenantmanagercontrolplane/subscriptionMapping:SubscriptionMapping test_subscription_mapping "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:Tenantmanagercontrolplane/subscriptionMapping:SubscriptionMapping")]
    public partial class SubscriptionMapping : global::Pulumi.CustomResource
    {
        /// <summary>
        /// OCID of the compartment. Always a tenancy OCID.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// Denotes if the subscription is explicity assigned to the root compartment or tenancy.
        /// </summary>
        [Output("isExplicitlyAssigned")]
        public Output<bool> IsExplicitlyAssigned { get; private set; } = null!;

        /// <summary>
        /// Lifecycle state of the subscriptionMapping.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// OCID of Subscription.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Output("subscriptionId")]
        public Output<string> SubscriptionId { get; private set; } = null!;

        /// <summary>
        /// Date-time when subscription mapping was created.
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// Date-time when subscription mapping was terminated.
        /// </summary>
        [Output("timeTerminated")]
        public Output<string> TimeTerminated { get; private set; } = null!;

        /// <summary>
        /// Date-time when subscription mapping was updated.
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;


        /// <summary>
        /// Create a SubscriptionMapping resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SubscriptionMapping(string name, SubscriptionMappingArgs args, CustomResourceOptions? options = null)
            : base("oci:Tenantmanagercontrolplane/subscriptionMapping:SubscriptionMapping", name, args ?? new SubscriptionMappingArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SubscriptionMapping(string name, Input<string> id, SubscriptionMappingState? state = null, CustomResourceOptions? options = null)
            : base("oci:Tenantmanagercontrolplane/subscriptionMapping:SubscriptionMapping", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SubscriptionMapping resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SubscriptionMapping Get(string name, Input<string> id, SubscriptionMappingState? state = null, CustomResourceOptions? options = null)
        {
            return new SubscriptionMapping(name, id, state, options);
        }
    }

    public sealed class SubscriptionMappingArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// OCID of the compartment. Always a tenancy OCID.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// OCID of Subscription.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("subscriptionId", required: true)]
        public Input<string> SubscriptionId { get; set; } = null!;

        public SubscriptionMappingArgs()
        {
        }
        public static new SubscriptionMappingArgs Empty => new SubscriptionMappingArgs();
    }

    public sealed class SubscriptionMappingState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// OCID of the compartment. Always a tenancy OCID.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// Denotes if the subscription is explicity assigned to the root compartment or tenancy.
        /// </summary>
        [Input("isExplicitlyAssigned")]
        public Input<bool>? IsExplicitlyAssigned { get; set; }

        /// <summary>
        /// Lifecycle state of the subscriptionMapping.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// OCID of Subscription.
        /// 
        /// 
        /// ** IMPORTANT **
        /// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
        /// </summary>
        [Input("subscriptionId")]
        public Input<string>? SubscriptionId { get; set; }

        /// <summary>
        /// Date-time when subscription mapping was created.
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// Date-time when subscription mapping was terminated.
        /// </summary>
        [Input("timeTerminated")]
        public Input<string>? TimeTerminated { get; set; }

        /// <summary>
        /// Date-time when subscription mapping was updated.
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        public SubscriptionMappingState()
        {
        }
        public static new SubscriptionMappingState Empty => new SubscriptionMappingState();
    }
}
