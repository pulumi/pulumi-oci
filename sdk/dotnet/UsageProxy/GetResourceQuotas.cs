// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.UsageProxy
{
    public static class GetResourceQuotas
    {
        /// <summary>
        /// This data source provides the list of Resource Quotas in Oracle Cloud Infrastructure Usage Proxy service.
        /// 
        /// Returns the resource quota details under a tenancy
        /// &gt; **Important**: Calls to this API will only succeed against the endpoint in the home region.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testResourceQuotas = Oci.UsageProxy.GetResourceQuotas.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         ServiceName = oci_core_service.Test_service.Name,
        ///         ServiceEntitlement = @var.Resource_quota_service_entitlement,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetResourceQuotasResult> InvokeAsync(GetResourceQuotasArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetResourceQuotasResult>("oci:UsageProxy/getResourceQuotas:getResourceQuotas", args ?? new GetResourceQuotasArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Resource Quotas in Oracle Cloud Infrastructure Usage Proxy service.
        /// 
        /// Returns the resource quota details under a tenancy
        /// &gt; **Important**: Calls to this API will only succeed against the endpoint in the home region.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testResourceQuotas = Oci.UsageProxy.GetResourceQuotas.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         ServiceName = oci_core_service.Test_service.Name,
        ///         ServiceEntitlement = @var.Resource_quota_service_entitlement,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetResourceQuotasResult> Invoke(GetResourceQuotasInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetResourceQuotasResult>("oci:UsageProxy/getResourceQuotas:getResourceQuotas", args ?? new GetResourceQuotasInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetResourceQuotasArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the root compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetResourceQuotasFilterArgs>? _filters;
        public List<Inputs.GetResourceQuotasFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetResourceQuotasFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Service entitlement Id.
        /// </summary>
        [Input("serviceEntitlement")]
        public string? ServiceEntitlement { get; set; }

        /// <summary>
        /// Service Name.
        /// </summary>
        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        public GetResourceQuotasArgs()
        {
        }
        public static new GetResourceQuotasArgs Empty => new GetResourceQuotasArgs();
    }

    public sealed class GetResourceQuotasInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the root compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetResourceQuotasFilterInputArgs>? _filters;
        public InputList<Inputs.GetResourceQuotasFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetResourceQuotasFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Service entitlement Id.
        /// </summary>
        [Input("serviceEntitlement")]
        public Input<string>? ServiceEntitlement { get; set; }

        /// <summary>
        /// Service Name.
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        public GetResourceQuotasInvokeArgs()
        {
        }
        public static new GetResourceQuotasInvokeArgs Empty => new GetResourceQuotasInvokeArgs();
    }


    [OutputType]
    public sealed class GetResourceQuotasResult
    {
        public readonly string CompartmentId;
        public readonly ImmutableArray<Outputs.GetResourceQuotasFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of resource_quotum_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetResourceQuotasResourceQuotumCollectionResult> ResourceQuotumCollections;
        public readonly string? ServiceEntitlement;
        public readonly string ServiceName;

        [OutputConstructor]
        private GetResourceQuotasResult(
            string compartmentId,

            ImmutableArray<Outputs.GetResourceQuotasFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetResourceQuotasResourceQuotumCollectionResult> resourceQuotumCollections,

            string? serviceEntitlement,

            string serviceName)
        {
            CompartmentId = compartmentId;
            Filters = filters;
            Id = id;
            ResourceQuotumCollections = resourceQuotumCollections;
            ServiceEntitlement = serviceEntitlement;
            ServiceName = serviceName;
        }
    }
}
