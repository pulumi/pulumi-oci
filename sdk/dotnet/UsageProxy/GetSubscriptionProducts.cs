// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.UsageProxy
{
    public static class GetSubscriptionProducts
    {
        /// <summary>
        /// This data source provides the list of Subscription Products in Oracle Cloud Infrastructure Usage Proxy service.
        /// 
        /// Provides product information that is specific to a reward usage period and its usage details.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSubscriptionProducts = Oci.UsageProxy.GetSubscriptionProducts.Invoke(new()
        ///     {
        ///         SubscriptionId = oci_ons_subscription.Test_subscription.Id,
        ///         TenancyId = oci_identity_tenancy.Test_tenancy.Id,
        ///         UsagePeriodKey = @var.Subscription_product_usage_period_key,
        ///         Producttype = @var.Subscription_product_producttype,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSubscriptionProductsResult> InvokeAsync(GetSubscriptionProductsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSubscriptionProductsResult>("oci:UsageProxy/getSubscriptionProducts:getSubscriptionProducts", args ?? new GetSubscriptionProductsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Subscription Products in Oracle Cloud Infrastructure Usage Proxy service.
        /// 
        /// Provides product information that is specific to a reward usage period and its usage details.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSubscriptionProducts = Oci.UsageProxy.GetSubscriptionProducts.Invoke(new()
        ///     {
        ///         SubscriptionId = oci_ons_subscription.Test_subscription.Id,
        ///         TenancyId = oci_identity_tenancy.Test_tenancy.Id,
        ///         UsagePeriodKey = @var.Subscription_product_usage_period_key,
        ///         Producttype = @var.Subscription_product_producttype,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSubscriptionProductsResult> Invoke(GetSubscriptionProductsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSubscriptionProductsResult>("oci:UsageProxy/getSubscriptionProducts:getSubscriptionProducts", args ?? new GetSubscriptionProductsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSubscriptionProductsArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetSubscriptionProductsFilterArgs>? _filters;
        public List<Inputs.GetSubscriptionProductsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetSubscriptionProductsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The field to specify the type of product.
        /// </summary>
        [Input("producttype")]
        public string? Producttype { get; set; }

        /// <summary>
        /// The subscription ID for which rewards information is requested for.
        /// </summary>
        [Input("subscriptionId", required: true)]
        public string SubscriptionId { get; set; } = null!;

        /// <summary>
        /// The OCID of the tenancy.
        /// </summary>
        [Input("tenancyId", required: true)]
        public string TenancyId { get; set; } = null!;

        /// <summary>
        /// The SPM Identifier for the usage period.
        /// </summary>
        [Input("usagePeriodKey", required: true)]
        public string UsagePeriodKey { get; set; } = null!;

        public GetSubscriptionProductsArgs()
        {
        }
        public static new GetSubscriptionProductsArgs Empty => new GetSubscriptionProductsArgs();
    }

    public sealed class GetSubscriptionProductsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetSubscriptionProductsFilterInputArgs>? _filters;
        public InputList<Inputs.GetSubscriptionProductsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetSubscriptionProductsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The field to specify the type of product.
        /// </summary>
        [Input("producttype")]
        public Input<string>? Producttype { get; set; }

        /// <summary>
        /// The subscription ID for which rewards information is requested for.
        /// </summary>
        [Input("subscriptionId", required: true)]
        public Input<string> SubscriptionId { get; set; } = null!;

        /// <summary>
        /// The OCID of the tenancy.
        /// </summary>
        [Input("tenancyId", required: true)]
        public Input<string> TenancyId { get; set; } = null!;

        /// <summary>
        /// The SPM Identifier for the usage period.
        /// </summary>
        [Input("usagePeriodKey", required: true)]
        public Input<string> UsagePeriodKey { get; set; } = null!;

        public GetSubscriptionProductsInvokeArgs()
        {
        }
        public static new GetSubscriptionProductsInvokeArgs Empty => new GetSubscriptionProductsInvokeArgs();
    }


    [OutputType]
    public sealed class GetSubscriptionProductsResult
    {
        public readonly ImmutableArray<Outputs.GetSubscriptionProductsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of product_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSubscriptionProductsProductCollectionResult> ProductCollections;
        public readonly string? Producttype;
        public readonly string SubscriptionId;
        public readonly string TenancyId;
        public readonly string UsagePeriodKey;

        [OutputConstructor]
        private GetSubscriptionProductsResult(
            ImmutableArray<Outputs.GetSubscriptionProductsFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetSubscriptionProductsProductCollectionResult> productCollections,

            string? producttype,

            string subscriptionId,

            string tenancyId,

            string usagePeriodKey)
        {
            Filters = filters;
            Id = id;
            ProductCollections = productCollections;
            Producttype = producttype;
            SubscriptionId = subscriptionId;
            TenancyId = tenancyId;
            UsagePeriodKey = usagePeriodKey;
        }
    }
}
