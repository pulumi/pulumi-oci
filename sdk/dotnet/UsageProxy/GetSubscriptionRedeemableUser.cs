// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.UsageProxy
{
    public static class GetSubscriptionRedeemableUser
    {
        /// <summary>
        /// This data source provides details about a specific Subscription Redeemable User resource in Oracle Cloud Infrastructure Usage Proxy service.
        /// 
        /// Provides the list of user summary that can redeem rewards for the given subscription ID.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSubscriptionRedeemableUser = Oci.UsageProxy.GetSubscriptionRedeemableUser.Invoke(new()
        ///     {
        ///         SubscriptionId = testSubscription.Id,
        ///         TenancyId = testTenancy.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSubscriptionRedeemableUserResult> InvokeAsync(GetSubscriptionRedeemableUserArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSubscriptionRedeemableUserResult>("oci:UsageProxy/getSubscriptionRedeemableUser:getSubscriptionRedeemableUser", args ?? new GetSubscriptionRedeemableUserArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Subscription Redeemable User resource in Oracle Cloud Infrastructure Usage Proxy service.
        /// 
        /// Provides the list of user summary that can redeem rewards for the given subscription ID.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSubscriptionRedeemableUser = Oci.UsageProxy.GetSubscriptionRedeemableUser.Invoke(new()
        ///     {
        ///         SubscriptionId = testSubscription.Id,
        ///         TenancyId = testTenancy.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSubscriptionRedeemableUserResult> Invoke(GetSubscriptionRedeemableUserInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSubscriptionRedeemableUserResult>("oci:UsageProxy/getSubscriptionRedeemableUser:getSubscriptionRedeemableUser", args ?? new GetSubscriptionRedeemableUserInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Subscription Redeemable User resource in Oracle Cloud Infrastructure Usage Proxy service.
        /// 
        /// Provides the list of user summary that can redeem rewards for the given subscription ID.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSubscriptionRedeemableUser = Oci.UsageProxy.GetSubscriptionRedeemableUser.Invoke(new()
        ///     {
        ///         SubscriptionId = testSubscription.Id,
        ///         TenancyId = testTenancy.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSubscriptionRedeemableUserResult> Invoke(GetSubscriptionRedeemableUserInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSubscriptionRedeemableUserResult>("oci:UsageProxy/getSubscriptionRedeemableUser:getSubscriptionRedeemableUser", args ?? new GetSubscriptionRedeemableUserInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSubscriptionRedeemableUserArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The subscription ID for which rewards information is requested for.
        /// </summary>
        [Input("subscriptionId", required: true)]
        public string SubscriptionId { get; set; } = null!;

        /// <summary>
        /// The OCID of the tenancy.
        /// </summary>
        [Input("tenancyId", required: true)]
        public string TenancyId { get; set; } = null!;

        public GetSubscriptionRedeemableUserArgs()
        {
        }
        public static new GetSubscriptionRedeemableUserArgs Empty => new GetSubscriptionRedeemableUserArgs();
    }

    public sealed class GetSubscriptionRedeemableUserInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The subscription ID for which rewards information is requested for.
        /// </summary>
        [Input("subscriptionId", required: true)]
        public Input<string> SubscriptionId { get; set; } = null!;

        /// <summary>
        /// The OCID of the tenancy.
        /// </summary>
        [Input("tenancyId", required: true)]
        public Input<string> TenancyId { get; set; } = null!;

        public GetSubscriptionRedeemableUserInvokeArgs()
        {
        }
        public static new GetSubscriptionRedeemableUserInvokeArgs Empty => new GetSubscriptionRedeemableUserInvokeArgs();
    }


    [OutputType]
    public sealed class GetSubscriptionRedeemableUserResult
    {
        public readonly string Id;
        /// <summary>
        /// The list of user summary that can redeem rewards.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSubscriptionRedeemableUserItemResult> Items;
        public readonly string SubscriptionId;
        public readonly string TenancyId;
        public readonly string UserId;

        [OutputConstructor]
        private GetSubscriptionRedeemableUserResult(
            string id,

            ImmutableArray<Outputs.GetSubscriptionRedeemableUserItemResult> items,

            string subscriptionId,

            string tenancyId,

            string userId)
        {
            Id = id;
            Items = items;
            SubscriptionId = subscriptionId;
            TenancyId = tenancyId;
            UserId = userId;
        }
    }
}
