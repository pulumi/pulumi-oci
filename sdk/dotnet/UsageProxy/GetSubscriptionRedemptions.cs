// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.UsageProxy
{
    public static class GetSubscriptionRedemptions
    {
        /// <summary>
        /// This data source provides the list of Subscription Redemptions in Oracle Cloud Infrastructure Usage Proxy service.
        /// 
        /// Returns the list of redemption for the subscription ID.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSubscriptionRedemptions = Oci.UsageProxy.GetSubscriptionRedemptions.Invoke(new()
        ///     {
        ///         SubscriptionId = testSubscription.Id,
        ///         TenancyId = testTenancy.Id,
        ///         TimeRedeemedGreaterThanOrEqualTo = subscriptionRedemptionTimeRedeemedGreaterThanOrEqualTo,
        ///         TimeRedeemedLessThan = subscriptionRedemptionTimeRedeemedLessThan,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSubscriptionRedemptionsResult> InvokeAsync(GetSubscriptionRedemptionsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSubscriptionRedemptionsResult>("oci:UsageProxy/getSubscriptionRedemptions:getSubscriptionRedemptions", args ?? new GetSubscriptionRedemptionsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Subscription Redemptions in Oracle Cloud Infrastructure Usage Proxy service.
        /// 
        /// Returns the list of redemption for the subscription ID.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSubscriptionRedemptions = Oci.UsageProxy.GetSubscriptionRedemptions.Invoke(new()
        ///     {
        ///         SubscriptionId = testSubscription.Id,
        ///         TenancyId = testTenancy.Id,
        ///         TimeRedeemedGreaterThanOrEqualTo = subscriptionRedemptionTimeRedeemedGreaterThanOrEqualTo,
        ///         TimeRedeemedLessThan = subscriptionRedemptionTimeRedeemedLessThan,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSubscriptionRedemptionsResult> Invoke(GetSubscriptionRedemptionsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSubscriptionRedemptionsResult>("oci:UsageProxy/getSubscriptionRedemptions:getSubscriptionRedemptions", args ?? new GetSubscriptionRedemptionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSubscriptionRedemptionsArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetSubscriptionRedemptionsFilterArgs>? _filters;
        public List<Inputs.GetSubscriptionRedemptionsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetSubscriptionRedemptionsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The subscription ID for which rewards information is requested for.
        /// </summary>
        [Input("subscriptionId", required: true)]
        public string SubscriptionId { get; set; } = null!;

        /// <summary>
        /// The OCID of the tenancy.
        /// </summary>
        [Input("tenancyId", required: true)]
        public string TenancyId { get; set; } = null!;

        /// <summary>
        /// The starting redeemed date filter for the redemption history.
        /// </summary>
        [Input("timeRedeemedGreaterThanOrEqualTo")]
        public string? TimeRedeemedGreaterThanOrEqualTo { get; set; }

        /// <summary>
        /// The ending redeemed date filter for the redemption history.
        /// </summary>
        [Input("timeRedeemedLessThan")]
        public string? TimeRedeemedLessThan { get; set; }

        public GetSubscriptionRedemptionsArgs()
        {
        }
        public static new GetSubscriptionRedemptionsArgs Empty => new GetSubscriptionRedemptionsArgs();
    }

    public sealed class GetSubscriptionRedemptionsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetSubscriptionRedemptionsFilterInputArgs>? _filters;
        public InputList<Inputs.GetSubscriptionRedemptionsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetSubscriptionRedemptionsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The subscription ID for which rewards information is requested for.
        /// </summary>
        [Input("subscriptionId", required: true)]
        public Input<string> SubscriptionId { get; set; } = null!;

        /// <summary>
        /// The OCID of the tenancy.
        /// </summary>
        [Input("tenancyId", required: true)]
        public Input<string> TenancyId { get; set; } = null!;

        /// <summary>
        /// The starting redeemed date filter for the redemption history.
        /// </summary>
        [Input("timeRedeemedGreaterThanOrEqualTo")]
        public Input<string>? TimeRedeemedGreaterThanOrEqualTo { get; set; }

        /// <summary>
        /// The ending redeemed date filter for the redemption history.
        /// </summary>
        [Input("timeRedeemedLessThan")]
        public Input<string>? TimeRedeemedLessThan { get; set; }

        public GetSubscriptionRedemptionsInvokeArgs()
        {
        }
        public static new GetSubscriptionRedemptionsInvokeArgs Empty => new GetSubscriptionRedemptionsInvokeArgs();
    }


    [OutputType]
    public sealed class GetSubscriptionRedemptionsResult
    {
        public readonly ImmutableArray<Outputs.GetSubscriptionRedemptionsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of redemption_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSubscriptionRedemptionsRedemptionCollectionResult> RedemptionCollections;
        public readonly string SubscriptionId;
        public readonly string TenancyId;
        public readonly string? TimeRedeemedGreaterThanOrEqualTo;
        public readonly string? TimeRedeemedLessThan;

        [OutputConstructor]
        private GetSubscriptionRedemptionsResult(
            ImmutableArray<Outputs.GetSubscriptionRedemptionsFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetSubscriptionRedemptionsRedemptionCollectionResult> redemptionCollections,

            string subscriptionId,

            string tenancyId,

            string? timeRedeemedGreaterThanOrEqualTo,

            string? timeRedeemedLessThan)
        {
            Filters = filters;
            Id = id;
            RedemptionCollections = redemptionCollections;
            SubscriptionId = subscriptionId;
            TenancyId = tenancyId;
            TimeRedeemedGreaterThanOrEqualTo = timeRedeemedGreaterThanOrEqualTo;
            TimeRedeemedLessThan = timeRedeemedLessThan;
        }
    }
}
