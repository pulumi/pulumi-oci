// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.UsageProxy
{
    public static class GetSubscriptionReward
    {
        /// <summary>
        /// This data source provides details about a specific Subscription Reward resource in Oracle Cloud Infrastructure Usage Proxy service.
        /// 
        /// Returns the list of rewards for a subscription ID.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSubscriptionReward = Oci.UsageProxy.GetSubscriptionReward.Invoke(new()
        ///     {
        ///         SubscriptionId = oci_ons_subscription.Test_subscription.Id,
        ///         TenancyId = oci_identity_tenancy.Test_tenancy.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetSubscriptionRewardResult> InvokeAsync(GetSubscriptionRewardArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSubscriptionRewardResult>("oci:UsageProxy/getSubscriptionReward:getSubscriptionReward", args ?? new GetSubscriptionRewardArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Subscription Reward resource in Oracle Cloud Infrastructure Usage Proxy service.
        /// 
        /// Returns the list of rewards for a subscription ID.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testSubscriptionReward = Oci.UsageProxy.GetSubscriptionReward.Invoke(new()
        ///     {
        ///         SubscriptionId = oci_ons_subscription.Test_subscription.Id,
        ///         TenancyId = oci_identity_tenancy.Test_tenancy.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetSubscriptionRewardResult> Invoke(GetSubscriptionRewardInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetSubscriptionRewardResult>("oci:UsageProxy/getSubscriptionReward:getSubscriptionReward", args ?? new GetSubscriptionRewardInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSubscriptionRewardArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The subscription ID for which rewards information is requested for.
        /// </summary>
        [Input("subscriptionId", required: true)]
        public string SubscriptionId { get; set; } = null!;

        /// <summary>
        /// The OCID of the tenancy.
        /// </summary>
        [Input("tenancyId", required: true)]
        public string TenancyId { get; set; } = null!;

        public GetSubscriptionRewardArgs()
        {
        }
        public static new GetSubscriptionRewardArgs Empty => new GetSubscriptionRewardArgs();
    }

    public sealed class GetSubscriptionRewardInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The subscription ID for which rewards information is requested for.
        /// </summary>
        [Input("subscriptionId", required: true)]
        public Input<string> SubscriptionId { get; set; } = null!;

        /// <summary>
        /// The OCID of the tenancy.
        /// </summary>
        [Input("tenancyId", required: true)]
        public Input<string> TenancyId { get; set; } = null!;

        public GetSubscriptionRewardInvokeArgs()
        {
        }
        public static new GetSubscriptionRewardInvokeArgs Empty => new GetSubscriptionRewardInvokeArgs();
    }


    [OutputType]
    public sealed class GetSubscriptionRewardResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The monthly summary of rewards.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSubscriptionRewardItemResult> Items;
        /// <summary>
        /// The entitlement ID from MQS, which is the same as the subcription ID.
        /// </summary>
        public readonly string SubscriptionId;
        /// <summary>
        /// The overall monthly reward summary.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSubscriptionRewardSummaryResult> Summaries;
        /// <summary>
        /// The OCID of the target tenancy.
        /// </summary>
        public readonly string TenancyId;

        [OutputConstructor]
        private GetSubscriptionRewardResult(
            string id,

            ImmutableArray<Outputs.GetSubscriptionRewardItemResult> items,

            string subscriptionId,

            ImmutableArray<Outputs.GetSubscriptionRewardSummaryResult> summaries,

            string tenancyId)
        {
            Id = id;
            Items = items;
            SubscriptionId = subscriptionId;
            Summaries = summaries;
            TenancyId = tenancyId;
        }
    }
}
