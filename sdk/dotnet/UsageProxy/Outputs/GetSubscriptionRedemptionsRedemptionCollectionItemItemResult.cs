// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.UsageProxy.Outputs
{

    [OutputType]
    public sealed class GetSubscriptionRedemptionsRedemptionCollectionItemItemResult
    {
        /// <summary>
        /// It provides the redeemed rewards in base/subscription currency.
        /// </summary>
        public readonly double? BaseRewards;
        /// <summary>
        /// It provides the fxRate between invoice currency and subscription currency.
        /// </summary>
        public readonly double? FxRate;
        /// <summary>
        /// The currency associated with invoice.
        /// </summary>
        public readonly string? InvoiceCurrency;
        /// <summary>
        /// It provides the invoice number against the redemption.
        /// </summary>
        public readonly string? InvoiceNumber;
        /// <summary>
        /// It provides the invoice total amount of given redemption.
        /// </summary>
        public readonly double? InvoiceTotalAmount;
        /// <summary>
        /// It provides the redeemed rewards in invoice currency.
        /// </summary>
        public readonly double? RedeemedRewards;
        /// <summary>
        /// The redemption code used in the Billing Center during the reward redemption process.
        /// </summary>
        public readonly string? RedemptionCode;
        /// <summary>
        /// It provides the redemption email id.
        /// </summary>
        public readonly string? RedemptionEmail;
        /// <summary>
        /// It provides the invoice date.
        /// </summary>
        public readonly string? TimeInvoiced;
        /// <summary>
        /// It provides redeem date.
        /// </summary>
        public readonly string? TimeRedeemed;

        [OutputConstructor]
        private GetSubscriptionRedemptionsRedemptionCollectionItemItemResult(
            double? baseRewards,

            double? fxRate,

            string? invoiceCurrency,

            string? invoiceNumber,

            double? invoiceTotalAmount,

            double? redeemedRewards,

            string? redemptionCode,

            string? redemptionEmail,

            string? timeInvoiced,

            string? timeRedeemed)
        {
            BaseRewards = baseRewards;
            FxRate = fxRate;
            InvoiceCurrency = invoiceCurrency;
            InvoiceNumber = invoiceNumber;
            InvoiceTotalAmount = invoiceTotalAmount;
            RedeemedRewards = redeemedRewards;
            RedemptionCode = redemptionCode;
            RedemptionEmail = redemptionEmail;
            TimeInvoiced = timeInvoiced;
            TimeRedeemed = timeRedeemed;
        }
    }
}
