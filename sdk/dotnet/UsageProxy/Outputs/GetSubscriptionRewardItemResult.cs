// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.UsageProxy.Outputs
{

    [OutputType]
    public sealed class GetSubscriptionRewardItemResult
    {
        /// <summary>
        /// The number of rewards available for a specific usage period.
        /// </summary>
        public readonly double AvailableRewards;
        /// <summary>
        /// The number of rewards earned for the specific usage period.
        /// </summary>
        public readonly double EarnedRewards;
        /// <summary>
        /// The eligible usage amount for the usage period.
        /// </summary>
        public readonly double EligibleUsageAmount;
        /// <summary>
        /// The ineligible usage amount for the usage period.
        /// </summary>
        public readonly double IneligibleUsageAmount;
        /// <summary>
        /// The boolean parameter to indicate whether or not the available rewards are manually posted.
        /// </summary>
        public readonly bool IsManual;
        /// <summary>
        /// The number of rewards redeemed for a specific month.
        /// </summary>
        public readonly double RedeemedRewards;
        /// <summary>
        /// The date and time when rewards accrue.
        /// </summary>
        public readonly string TimeRewardsEarned;
        /// <summary>
        /// The date and time when rewards expire.
        /// </summary>
        public readonly string TimeRewardsExpired;
        /// <summary>
        /// The end date and time for the usage period.
        /// </summary>
        public readonly string TimeUsageEnded;
        /// <summary>
        /// The start date and time for the usage period.
        /// </summary>
        public readonly string TimeUsageStarted;
        /// <summary>
        /// The usage amount for the usage period.
        /// </summary>
        public readonly double UsageAmount;
        /// <summary>
        /// The usage period ID.
        /// </summary>
        public readonly string UsagePeriodKey;

        [OutputConstructor]
        private GetSubscriptionRewardItemResult(
            double availableRewards,

            double earnedRewards,

            double eligibleUsageAmount,

            double ineligibleUsageAmount,

            bool isManual,

            double redeemedRewards,

            string timeRewardsEarned,

            string timeRewardsExpired,

            string timeUsageEnded,

            string timeUsageStarted,

            double usageAmount,

            string usagePeriodKey)
        {
            AvailableRewards = availableRewards;
            EarnedRewards = earnedRewards;
            EligibleUsageAmount = eligibleUsageAmount;
            IneligibleUsageAmount = ineligibleUsageAmount;
            IsManual = isManual;
            RedeemedRewards = redeemedRewards;
            TimeRewardsEarned = timeRewardsEarned;
            TimeRewardsExpired = timeRewardsExpired;
            TimeUsageEnded = timeUsageEnded;
            TimeUsageStarted = timeUsageStarted;
            UsageAmount = usageAmount;
            UsagePeriodKey = usagePeriodKey;
        }
    }
}
