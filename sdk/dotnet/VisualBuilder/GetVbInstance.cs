// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.VisualBuilder
{
    public static class GetVbInstance
    {
        /// <summary>
        /// This data source provides details about a specific Vb Instance resource in Oracle Cloud Infrastructure Visual Builder service.
        /// 
        /// Gets a VbInstance by identifier
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testVbInstance = Oci.VisualBuilder.GetVbInstance.Invoke(new()
        ///     {
        ///         VbInstanceId = oci_visual_builder_vb_instance.Test_vb_instance.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetVbInstanceResult> InvokeAsync(GetVbInstanceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVbInstanceResult>("oci:VisualBuilder/getVbInstance:getVbInstance", args ?? new GetVbInstanceArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Vb Instance resource in Oracle Cloud Infrastructure Visual Builder service.
        /// 
        /// Gets a VbInstance by identifier
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testVbInstance = Oci.VisualBuilder.GetVbInstance.Invoke(new()
        ///     {
        ///         VbInstanceId = oci_visual_builder_vb_instance.Test_vb_instance.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetVbInstanceResult> Invoke(GetVbInstanceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVbInstanceResult>("oci:VisualBuilder/getVbInstance:getVbInstance", args ?? new GetVbInstanceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVbInstanceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique Vb Instance identifier.
        /// </summary>
        [Input("vbInstanceId", required: true)]
        public string VbInstanceId { get; set; } = null!;

        public GetVbInstanceArgs()
        {
        }
        public static new GetVbInstanceArgs Empty => new GetVbInstanceArgs();
    }

    public sealed class GetVbInstanceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique Vb Instance identifier.
        /// </summary>
        [Input("vbInstanceId", required: true)]
        public Input<string> VbInstanceId { get; set; } = null!;

        public GetVbInstanceInvokeArgs()
        {
        }
        public static new GetVbInstanceInvokeArgs Empty => new GetVbInstanceInvokeArgs();
    }


    [OutputType]
    public sealed class GetVbInstanceResult
    {
        /// <summary>
        /// A list of alternate custom endpoints used for the vb instance URL.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetVbInstanceAlternateCustomEndpointResult> AlternateCustomEndpoints;
        /// <summary>
        /// Compartment Identifier.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The entitlement used for billing purposes.
        /// </summary>
        public readonly string ConsumptionModel;
        /// <summary>
        /// Details for a custom endpoint for the vb instance.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetVbInstanceCustomEndpointResult> CustomEndpoints;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// Vb Instance Identifier, can be renamed.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// Unique identifier that is immutable on creation.
        /// </summary>
        public readonly string Id;
        public readonly string IdcsOpenId;
        /// <summary>
        /// The Vb Instance URL.
        /// </summary>
        public readonly string InstanceUrl;
        /// <summary>
        /// Visual Builder is enabled or not.
        /// </summary>
        public readonly bool IsVisualBuilderEnabled;
        /// <summary>
        /// The number of Nodes
        /// </summary>
        public readonly int NodeCount;
        /// <summary>
        /// The current state of the vb instance.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        public readonly string StateMessage;
        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> SystemTags;
        /// <summary>
        /// The time the the VbInstance was created. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time the VbInstance was updated. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeUpdated;
        public readonly string VbInstanceId;

        [OutputConstructor]
        private GetVbInstanceResult(
            ImmutableArray<Outputs.GetVbInstanceAlternateCustomEndpointResult> alternateCustomEndpoints,

            string compartmentId,

            string consumptionModel,

            ImmutableArray<Outputs.GetVbInstanceCustomEndpointResult> customEndpoints,

            ImmutableDictionary<string, object> definedTags,

            string displayName,

            ImmutableDictionary<string, object> freeformTags,

            string id,

            string idcsOpenId,

            string instanceUrl,

            bool isVisualBuilderEnabled,

            int nodeCount,

            string state,

            string stateMessage,

            ImmutableDictionary<string, object> systemTags,

            string timeCreated,

            string timeUpdated,

            string vbInstanceId)
        {
            AlternateCustomEndpoints = alternateCustomEndpoints;
            CompartmentId = compartmentId;
            ConsumptionModel = consumptionModel;
            CustomEndpoints = customEndpoints;
            DefinedTags = definedTags;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            IdcsOpenId = idcsOpenId;
            InstanceUrl = instanceUrl;
            IsVisualBuilderEnabled = isVisualBuilderEnabled;
            NodeCount = nodeCount;
            State = state;
            StateMessage = stateMessage;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            VbInstanceId = vbInstanceId;
        }
    }
}
