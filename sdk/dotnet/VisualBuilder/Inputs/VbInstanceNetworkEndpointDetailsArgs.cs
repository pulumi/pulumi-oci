// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.VisualBuilder.Inputs
{

    public sealed class VbInstanceNetworkEndpointDetailsArgs : global::Pulumi.ResourceArgs
    {
        [Input("allowlistedHttpIps")]
        private InputList<string>? _allowlistedHttpIps;

        /// <summary>
        /// (Updatable) Source IP addresses or IP address ranges ingress rules. (ex: "168.122.59.5/32", "10.20.30.0/26") An invalid IP or CIDR block will result in a 400 response.
        /// </summary>
        public InputList<string> AllowlistedHttpIps
        {
            get => _allowlistedHttpIps ?? (_allowlistedHttpIps = new InputList<string>());
            set => _allowlistedHttpIps = value;
        }

        [Input("allowlistedHttpVcns")]
        private InputList<Inputs.VbInstanceNetworkEndpointDetailsAllowlistedHttpVcnArgs>? _allowlistedHttpVcns;

        /// <summary>
        /// (Updatable) Virtual Cloud Networks allowed to access this network endpoint.
        /// </summary>
        public InputList<Inputs.VbInstanceNetworkEndpointDetailsAllowlistedHttpVcnArgs> AllowlistedHttpVcns
        {
            get => _allowlistedHttpVcns ?? (_allowlistedHttpVcns = new InputList<Inputs.VbInstanceNetworkEndpointDetailsAllowlistedHttpVcnArgs>());
            set => _allowlistedHttpVcns = value;
        }

        /// <summary>
        /// (Updatable) The type of network endpoint.
        /// 
        /// For private endpoint access
        /// </summary>
        [Input("networkEndpointType", required: true)]
        public Input<string> NetworkEndpointType { get; set; } = null!;

        [Input("networkSecurityGroupIds")]
        private InputList<string>? _networkSecurityGroupIds;

        /// <summary>
        /// (Updatable) Network Security Group OCIDs for the Private Endpoint.
        /// </summary>
        public InputList<string> NetworkSecurityGroupIds
        {
            get => _networkSecurityGroupIds ?? (_networkSecurityGroupIds = new InputList<string>());
            set => _networkSecurityGroupIds = value;
        }

        /// <summary>
        /// The IP address to be assigned to Private Endpoint
        /// </summary>
        [Input("privateEndpointIp")]
        public Input<string>? PrivateEndpointIp { get; set; }

        /// <summary>
        /// (Updatable) The subnet OCID for the private endpoint.
        /// 
        /// For public network access control
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        public VbInstanceNetworkEndpointDetailsArgs()
        {
        }
        public static new VbInstanceNetworkEndpointDetailsArgs Empty => new VbInstanceNetworkEndpointDetailsArgs();
    }
}
