// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.VnMonitoring
{
    public static class GetPathAnalyzerTests
    {
        /// <summary>
        /// This data source provides the list of Path Analyzer Tests in Oracle Cloud Infrastructure Vn Monitoring service.
        /// 
        /// Returns a list of all `PathAnalyzerTests` in a compartment.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testPathAnalyzerTests = Oci.VnMonitoring.GetPathAnalyzerTests.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         DisplayName = @var.Path_analyzer_test_display_name,
        ///         State = @var.Path_analyzer_test_state,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetPathAnalyzerTestsResult> InvokeAsync(GetPathAnalyzerTestsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetPathAnalyzerTestsResult>("oci:VnMonitoring/getPathAnalyzerTests:GetPathAnalyzerTests", args ?? new GetPathAnalyzerTestsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Path Analyzer Tests in Oracle Cloud Infrastructure Vn Monitoring service.
        /// 
        /// Returns a list of all `PathAnalyzerTests` in a compartment.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testPathAnalyzerTests = Oci.VnMonitoring.GetPathAnalyzerTests.Invoke(new()
        ///     {
        ///         CompartmentId = @var.Compartment_id,
        ///         DisplayName = @var.Path_analyzer_test_display_name,
        ///         State = @var.Path_analyzer_test_state,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetPathAnalyzerTestsResult> Invoke(GetPathAnalyzerTestsInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetPathAnalyzerTestsResult>("oci:VnMonitoring/getPathAnalyzerTests:GetPathAnalyzerTests", args ?? new GetPathAnalyzerTestsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPathAnalyzerTestsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter that returns only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetPathAnalyzerTestsFilterArgs>? _filters;
        public List<Inputs.GetPathAnalyzerTestsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetPathAnalyzerTestsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter that returns only resources whose `lifecycleState` matches the given `lifecycleState`.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetPathAnalyzerTestsArgs()
        {
        }
        public static new GetPathAnalyzerTestsArgs Empty => new GetPathAnalyzerTestsArgs();
    }

    public sealed class GetPathAnalyzerTestsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter that returns only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetPathAnalyzerTestsFilterInputArgs>? _filters;
        public InputList<Inputs.GetPathAnalyzerTestsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetPathAnalyzerTestsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter that returns only resources whose `lifecycleState` matches the given `lifecycleState`.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetPathAnalyzerTestsInvokeArgs()
        {
        }
        public static new GetPathAnalyzerTestsInvokeArgs Empty => new GetPathAnalyzerTestsInvokeArgs();
    }


    [OutputType]
    public sealed class GetPathAnalyzerTestsResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PathAnalyzerTest` resource's compartment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetPathAnalyzerTestsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of path_analyzer_test_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPathAnalyzerTestsPathAnalyzerTestCollectionResult> PathAnalyzerTestCollections;
        /// <summary>
        /// The current state of the `PathAnalyzerTest` resource.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetPathAnalyzerTestsResult(
            string compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetPathAnalyzerTestsFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetPathAnalyzerTestsPathAnalyzerTestCollectionResult> pathAnalyzerTestCollections,

            string? state)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            PathAnalyzerTestCollections = pathAnalyzerTestCollections;
            State = state;
        }
    }
}
