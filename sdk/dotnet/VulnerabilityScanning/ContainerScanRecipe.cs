// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.VulnerabilityScanning
{
    /// <summary>
    /// This resource provides the Container Scan Recipe resource in Oracle Cloud Infrastructure Vulnerability Scanning service.
    /// 
    /// Creates a new ContainerScanRecipe. A recipe determines the types of security issues that you want scanned.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testContainerScanRecipe = new Oci.VulnerabilityScanning.ContainerScanRecipe("test_container_scan_recipe", new()
    ///     {
    ///         CompartmentId = compartmentId,
    ///         ScanSettings = new Oci.VulnerabilityScanning.Inputs.ContainerScanRecipeScanSettingsArgs
    ///         {
    ///             ScanLevel = containerScanRecipeScanSettingsScanLevel,
    ///         },
    ///         DefinedTags = 
    ///         {
    ///             { "foo-namespace.bar-key", "value" },
    ///         },
    ///         DisplayName = containerScanRecipeDisplayName,
    ///         FreeformTags = 
    ///         {
    ///             { "bar-key", "value" },
    ///         },
    ///         ImageCount = containerScanRecipeImageCount,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ContainerScanRecipes can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:VulnerabilityScanning/containerScanRecipe:ContainerScanRecipe test_container_scan_recipe "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:VulnerabilityScanning/containerScanRecipe:ContainerScanRecipe")]
    public partial class ContainerScanRecipe : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the container scan recipe's compartment
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, string>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) User friendly name of container scan recipe. If not present, will be auto-generated.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, string>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) This field is set equal to the number of images we want to scan in the first go when the recipe is created
        /// </summary>
        [Output("imageCount")]
        public Output<int> ImageCount { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A collection of container scan settings
        /// </summary>
        [Output("scanSettings")]
        public Output<Outputs.ContainerScanRecipeScanSettings> ScanSettings { get; private set; } = null!;

        /// <summary>
        /// The current state of the config.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        [Output("systemTags")]
        public Output<ImmutableDictionary<string, string>> SystemTags { get; private set; } = null!;

        /// <summary>
        /// Date and time the recipe was created, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// Date and time the recipe was last updated, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;


        /// <summary>
        /// Create a ContainerScanRecipe resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ContainerScanRecipe(string name, ContainerScanRecipeArgs args, CustomResourceOptions? options = null)
            : base("oci:VulnerabilityScanning/containerScanRecipe:ContainerScanRecipe", name, args ?? new ContainerScanRecipeArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ContainerScanRecipe(string name, Input<string> id, ContainerScanRecipeState? state = null, CustomResourceOptions? options = null)
            : base("oci:VulnerabilityScanning/containerScanRecipe:ContainerScanRecipe", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ContainerScanRecipe resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ContainerScanRecipe Get(string name, Input<string> id, ContainerScanRecipeState? state = null, CustomResourceOptions? options = null)
        {
            return new ContainerScanRecipe(name, id, state, options);
        }
    }

    public sealed class ContainerScanRecipeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the container scan recipe's compartment
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) User friendly name of container scan recipe. If not present, will be auto-generated.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) This field is set equal to the number of images we want to scan in the first go when the recipe is created
        /// </summary>
        [Input("imageCount")]
        public Input<int>? ImageCount { get; set; }

        /// <summary>
        /// (Updatable) A collection of container scan settings
        /// </summary>
        [Input("scanSettings", required: true)]
        public Input<Inputs.ContainerScanRecipeScanSettingsArgs> ScanSettings { get; set; } = null!;

        public ContainerScanRecipeArgs()
        {
        }
        public static new ContainerScanRecipeArgs Empty => new ContainerScanRecipeArgs();
    }

    public sealed class ContainerScanRecipeState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the container scan recipe's compartment
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("definedTags")]
        private InputMap<string>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<string> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<string>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) User friendly name of container scan recipe. If not present, will be auto-generated.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<string>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<string> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<string>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) This field is set equal to the number of images we want to scan in the first go when the recipe is created
        /// </summary>
        [Input("imageCount")]
        public Input<int>? ImageCount { get; set; }

        /// <summary>
        /// (Updatable) A collection of container scan settings
        /// </summary>
        [Input("scanSettings")]
        public Input<Inputs.ContainerScanRecipeScanSettingsGetArgs>? ScanSettings { get; set; }

        /// <summary>
        /// The current state of the config.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("systemTags")]
        private InputMap<string>? _systemTags;

        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public InputMap<string> SystemTags
        {
            get => _systemTags ?? (_systemTags = new InputMap<string>());
            set => _systemTags = value;
        }

        /// <summary>
        /// Date and time the recipe was created, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// Date and time the recipe was last updated, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        public ContainerScanRecipeState()
        {
        }
        public static new ContainerScanRecipeState Empty => new ContainerScanRecipeState();
    }
}
