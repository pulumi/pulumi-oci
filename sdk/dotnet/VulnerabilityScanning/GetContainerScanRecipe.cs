// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.VulnerabilityScanning
{
    public static class GetContainerScanRecipe
    {
        /// <summary>
        /// This data source provides details about a specific Container Scan Recipe resource in Oracle Cloud Infrastructure Vulnerability Scanning service.
        /// 
        /// Retrieves a ContainerScanRecipe identified by the recipe ID. A recipe determines the types of security issues that you want scanned.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testContainerScanRecipe = Oci.VulnerabilityScanning.GetContainerScanRecipe.Invoke(new()
        ///     {
        ///         ContainerScanRecipeId = oci_vulnerability_scanning_container_scan_recipe.Test_container_scan_recipe.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetContainerScanRecipeResult> InvokeAsync(GetContainerScanRecipeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetContainerScanRecipeResult>("oci:VulnerabilityScanning/getContainerScanRecipe:getContainerScanRecipe", args ?? new GetContainerScanRecipeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Container Scan Recipe resource in Oracle Cloud Infrastructure Vulnerability Scanning service.
        /// 
        /// Retrieves a ContainerScanRecipe identified by the recipe ID. A recipe determines the types of security issues that you want scanned.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testContainerScanRecipe = Oci.VulnerabilityScanning.GetContainerScanRecipe.Invoke(new()
        ///     {
        ///         ContainerScanRecipeId = oci_vulnerability_scanning_container_scan_recipe.Test_container_scan_recipe.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetContainerScanRecipeResult> Invoke(GetContainerScanRecipeInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetContainerScanRecipeResult>("oci:VulnerabilityScanning/getContainerScanRecipe:getContainerScanRecipe", args ?? new GetContainerScanRecipeInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetContainerScanRecipeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// unique ContainerScanRecipe identifier
        /// </summary>
        [Input("containerScanRecipeId", required: true)]
        public string ContainerScanRecipeId { get; set; } = null!;

        public GetContainerScanRecipeArgs()
        {
        }
        public static new GetContainerScanRecipeArgs Empty => new GetContainerScanRecipeArgs();
    }

    public sealed class GetContainerScanRecipeInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// unique ContainerScanRecipe identifier
        /// </summary>
        [Input("containerScanRecipeId", required: true)]
        public Input<string> ContainerScanRecipeId { get; set; } = null!;

        public GetContainerScanRecipeInvokeArgs()
        {
        }
        public static new GetContainerScanRecipeInvokeArgs Empty => new GetContainerScanRecipeInvokeArgs();
    }


    [OutputType]
    public sealed class GetContainerScanRecipeResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the container scan recipe's compartment
        /// </summary>
        public readonly string? CompartmentId;
        public readonly string ContainerScanRecipeId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? DefinedTags;
        /// <summary>
        /// User friendly name of container scan recipe
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? FreeformTags;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of container scan recipe. Immutable and generated on creation.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// This field is set equal to the number of images we want to scan in the first go when the recipe is created
        /// </summary>
        public readonly int? ImageCount;
        /// <summary>
        /// A collection of container scan settings
        /// </summary>
        public readonly ImmutableArray<Outputs.GetContainerScanRecipeScanSettingResult> ScanSettings;
        /// <summary>
        /// The current state of the config.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? SystemTags;
        /// <summary>
        /// Date and time the recipe was created, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
        /// </summary>
        public readonly string? TimeCreated;
        /// <summary>
        /// Date and time the recipe was last updated, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
        /// </summary>
        public readonly string? TimeUpdated;

        [OutputConstructor]
        private GetContainerScanRecipeResult(
            string? compartmentId,

            string containerScanRecipeId,

            ImmutableDictionary<string, object>? definedTags,

            string? displayName,

            ImmutableDictionary<string, object>? freeformTags,

            string? id,

            int? imageCount,

            ImmutableArray<Outputs.GetContainerScanRecipeScanSettingResult> scanSettings,

            string? state,

            ImmutableDictionary<string, object>? systemTags,

            string? timeCreated,

            string? timeUpdated)
        {
            CompartmentId = compartmentId;
            ContainerScanRecipeId = containerScanRecipeId;
            DefinedTags = definedTags;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            ImageCount = imageCount;
            ScanSettings = scanSettings;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
