// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.VulnerabilityScanning
{
    public static class GetHostScanRecipes
    {
        /// <summary>
        /// This data source provides the list of Host Scan Recipes in Oracle Cloud Infrastructure Vulnerability Scanning service.
        /// 
        /// Retrieves a list of HostScanRecipeSummary objects in a compartment. A recipe determines the types of security issues that you want scanned, and how often to scan.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testHostScanRecipes = Oci.VulnerabilityScanning.GetHostScanRecipes.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = hostScanRecipeDisplayName,
        ///         State = hostScanRecipeState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetHostScanRecipesResult> InvokeAsync(GetHostScanRecipesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetHostScanRecipesResult>("oci:VulnerabilityScanning/getHostScanRecipes:getHostScanRecipes", args ?? new GetHostScanRecipesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Host Scan Recipes in Oracle Cloud Infrastructure Vulnerability Scanning service.
        /// 
        /// Retrieves a list of HostScanRecipeSummary objects in a compartment. A recipe determines the types of security issues that you want scanned, and how often to scan.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testHostScanRecipes = Oci.VulnerabilityScanning.GetHostScanRecipes.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = hostScanRecipeDisplayName,
        ///         State = hostScanRecipeState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetHostScanRecipesResult> Invoke(GetHostScanRecipesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetHostScanRecipesResult>("oci:VulnerabilityScanning/getHostScanRecipes:getHostScanRecipes", args ?? new GetHostScanRecipesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Host Scan Recipes in Oracle Cloud Infrastructure Vulnerability Scanning service.
        /// 
        /// Retrieves a list of HostScanRecipeSummary objects in a compartment. A recipe determines the types of security issues that you want scanned, and how often to scan.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testHostScanRecipes = Oci.VulnerabilityScanning.GetHostScanRecipes.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         DisplayName = hostScanRecipeDisplayName,
        ///         State = hostScanRecipeState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetHostScanRecipesResult> Invoke(GetHostScanRecipesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetHostScanRecipesResult>("oci:VulnerabilityScanning/getHostScanRecipes:getHostScanRecipes", args ?? new GetHostScanRecipesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetHostScanRecipesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetHostScanRecipesFilterArgs>? _filters;
        public List<Inputs.GetHostScanRecipesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetHostScanRecipesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only resources whose lifecycleState matches the given lifecycleState.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetHostScanRecipesArgs()
        {
        }
        public static new GetHostScanRecipesArgs Empty => new GetHostScanRecipesArgs();
    }

    public sealed class GetHostScanRecipesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetHostScanRecipesFilterInputArgs>? _filters;
        public InputList<Inputs.GetHostScanRecipesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetHostScanRecipesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only resources whose lifecycleState matches the given lifecycleState.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetHostScanRecipesInvokeArgs()
        {
        }
        public static new GetHostScanRecipesInvokeArgs Empty => new GetHostScanRecipesInvokeArgs();
    }


    [OutputType]
    public sealed class GetHostScanRecipesResult
    {
        /// <summary>
        /// Compartment ID of the scan recipe
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Recipe identifier, which can be renamed
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetHostScanRecipesFilterResult> Filters;
        /// <summary>
        /// The list of host_scan_recipe_summary_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetHostScanRecipesHostScanRecipeSummaryCollectionResult> HostScanRecipeSummaryCollections;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The current state of the config.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetHostScanRecipesResult(
            string compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetHostScanRecipesFilterResult> filters,

            ImmutableArray<Outputs.GetHostScanRecipesHostScanRecipeSummaryCollectionResult> hostScanRecipeSummaryCollections,

            string id,

            string? state)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            HostScanRecipeSummaryCollections = hostScanRecipeSummaryCollections;
            Id = id;
            State = state;
        }
    }
}
