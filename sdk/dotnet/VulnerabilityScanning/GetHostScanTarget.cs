// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.VulnerabilityScanning
{
    public static class GetHostScanTarget
    {
        /// <summary>
        /// This data source provides details about a specific Host Scan Target resource in Oracle Cloud Infrastructure Vulnerability Scanning service.
        /// 
        /// Retrieves a HostScanTarget identified by the target ID. A host scan target is a collection of compute instances that you want routinely scanned for security vulnerabilities.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testHostScanTarget = Oci.VulnerabilityScanning.GetHostScanTarget.Invoke(new()
        ///     {
        ///         HostScanTargetId = oci_vulnerability_scanning_host_scan_target.Test_host_scan_target.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetHostScanTargetResult> InvokeAsync(GetHostScanTargetArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetHostScanTargetResult>("oci:VulnerabilityScanning/getHostScanTarget:getHostScanTarget", args ?? new GetHostScanTargetArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Host Scan Target resource in Oracle Cloud Infrastructure Vulnerability Scanning service.
        /// 
        /// Retrieves a HostScanTarget identified by the target ID. A host scan target is a collection of compute instances that you want routinely scanned for security vulnerabilities.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testHostScanTarget = Oci.VulnerabilityScanning.GetHostScanTarget.Invoke(new()
        ///     {
        ///         HostScanTargetId = oci_vulnerability_scanning_host_scan_target.Test_host_scan_target.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetHostScanTargetResult> Invoke(GetHostScanTargetInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetHostScanTargetResult>("oci:VulnerabilityScanning/getHostScanTarget:getHostScanTarget", args ?? new GetHostScanTargetInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetHostScanTargetArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// unique HostScanTarget identifier
        /// </summary>
        [Input("hostScanTargetId", required: true)]
        public string HostScanTargetId { get; set; } = null!;

        public GetHostScanTargetArgs()
        {
        }
        public static new GetHostScanTargetArgs Empty => new GetHostScanTargetArgs();
    }

    public sealed class GetHostScanTargetInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// unique HostScanTarget identifier
        /// </summary>
        [Input("hostScanTargetId", required: true)]
        public Input<string> HostScanTargetId { get; set; } = null!;

        public GetHostScanTargetInvokeArgs()
        {
        }
        public static new GetHostScanTargetInvokeArgs Empty => new GetHostScanTargetInvokeArgs();
    }


    [OutputType]
    public sealed class GetHostScanTargetResult
    {
        /// <summary>
        /// Compartment ID of the object (this).
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? DefinedTags;
        /// <summary>
        /// Target description.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Target identifier, which can be renamed.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? FreeformTags;
        /// <summary>
        /// ID of the host scan recipe this target applies.
        /// </summary>
        public readonly string? HostScanRecipeId;
        public readonly string HostScanTargetId;
        /// <summary>
        /// Unique identifier of the config that is immutable on creation
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// List of compute instance IDs to target (optional). If empty, targets the entire targetCompartmentId.
        /// </summary>
        public readonly ImmutableArray<string> InstanceIds;
        /// <summary>
        /// The current state of the config.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? SystemTags;
        /// <summary>
        /// Compartment ID to target. If a list of hosts is provided, all hosts must be in this compartment.
        /// </summary>
        public readonly string? TargetCompartmentId;
        /// <summary>
        /// Date and time the target was created, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
        /// </summary>
        public readonly string? TimeCreated;
        /// <summary>
        /// Date and time the target was last updated, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
        /// </summary>
        public readonly string? TimeUpdated;

        [OutputConstructor]
        private GetHostScanTargetResult(
            string? compartmentId,

            ImmutableDictionary<string, object>? definedTags,

            string? description,

            string? displayName,

            ImmutableDictionary<string, object>? freeformTags,

            string? hostScanRecipeId,

            string hostScanTargetId,

            string? id,

            ImmutableArray<string> instanceIds,

            string? state,

            ImmutableDictionary<string, object>? systemTags,

            string? targetCompartmentId,

            string? timeCreated,

            string? timeUpdated)
        {
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            HostScanRecipeId = hostScanRecipeId;
            HostScanTargetId = hostScanTargetId;
            Id = id;
            InstanceIds = instanceIds;
            State = state;
            SystemTags = systemTags;
            TargetCompartmentId = targetCompartmentId;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
