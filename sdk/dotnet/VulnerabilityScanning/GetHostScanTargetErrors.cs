// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.VulnerabilityScanning
{
    public static class GetHostScanTargetErrors
    {
        /// <summary>
        /// This data source provides the list of Host Scan Target Errors in Oracle Cloud Infrastructure Vulnerability Scanning service.
        /// 
        /// Retrieves list of errors during scanning on instances associated with HostScanTarget identified by the target ID. A host scan target is a collection of compute instances that you want routinely scanned for security vulnerabilities.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testHostScanTargetErrors = Oci.VulnerabilityScanning.GetHostScanTargetErrors.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         HostScanTargetId = testHostScanTarget.Id,
        ///         State = hostScanTargetErrorState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetHostScanTargetErrorsResult> InvokeAsync(GetHostScanTargetErrorsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetHostScanTargetErrorsResult>("oci:VulnerabilityScanning/getHostScanTargetErrors:getHostScanTargetErrors", args ?? new GetHostScanTargetErrorsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Host Scan Target Errors in Oracle Cloud Infrastructure Vulnerability Scanning service.
        /// 
        /// Retrieves list of errors during scanning on instances associated with HostScanTarget identified by the target ID. A host scan target is a collection of compute instances that you want routinely scanned for security vulnerabilities.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testHostScanTargetErrors = Oci.VulnerabilityScanning.GetHostScanTargetErrors.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         HostScanTargetId = testHostScanTarget.Id,
        ///         State = hostScanTargetErrorState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetHostScanTargetErrorsResult> Invoke(GetHostScanTargetErrorsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetHostScanTargetErrorsResult>("oci:VulnerabilityScanning/getHostScanTargetErrors:getHostScanTargetErrors", args ?? new GetHostScanTargetErrorsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Host Scan Target Errors in Oracle Cloud Infrastructure Vulnerability Scanning service.
        /// 
        /// Retrieves list of errors during scanning on instances associated with HostScanTarget identified by the target ID. A host scan target is a collection of compute instances that you want routinely scanned for security vulnerabilities.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testHostScanTargetErrors = Oci.VulnerabilityScanning.GetHostScanTargetErrors.Invoke(new()
        ///     {
        ///         CompartmentId = compartmentId,
        ///         HostScanTargetId = testHostScanTarget.Id,
        ///         State = hostScanTargetErrorState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetHostScanTargetErrorsResult> Invoke(GetHostScanTargetErrorsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetHostScanTargetErrorsResult>("oci:VulnerabilityScanning/getHostScanTargetErrors:getHostScanTargetErrors", args ?? new GetHostScanTargetErrorsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetHostScanTargetErrorsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetHostScanTargetErrorsFilterArgs>? _filters;
        public List<Inputs.GetHostScanTargetErrorsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetHostScanTargetErrorsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// unique HostScanTarget identifier
        /// </summary>
        [Input("hostScanTargetId", required: true)]
        public string HostScanTargetId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources whose lifecycleState matches the given lifecycleState.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetHostScanTargetErrorsArgs()
        {
        }
        public static new GetHostScanTargetErrorsArgs Empty => new GetHostScanTargetErrorsArgs();
    }

    public sealed class GetHostScanTargetErrorsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetHostScanTargetErrorsFilterInputArgs>? _filters;
        public InputList<Inputs.GetHostScanTargetErrorsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetHostScanTargetErrorsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// unique HostScanTarget identifier
        /// </summary>
        [Input("hostScanTargetId", required: true)]
        public Input<string> HostScanTargetId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources whose lifecycleState matches the given lifecycleState.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetHostScanTargetErrorsInvokeArgs()
        {
        }
        public static new GetHostScanTargetErrorsInvokeArgs Empty => new GetHostScanTargetErrorsInvokeArgs();
    }


    [OutputType]
    public sealed class GetHostScanTargetErrorsResult
    {
        public readonly string CompartmentId;
        public readonly ImmutableArray<Outputs.GetHostScanTargetErrorsFilterResult> Filters;
        /// <summary>
        /// The list of host_scan_target_error_summary_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetHostScanTargetErrorsHostScanTargetErrorSummaryCollectionResult> HostScanTargetErrorSummaryCollections;
        public readonly string HostScanTargetId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The current state of the config.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetHostScanTargetErrorsResult(
            string compartmentId,

            ImmutableArray<Outputs.GetHostScanTargetErrorsFilterResult> filters,

            ImmutableArray<Outputs.GetHostScanTargetErrorsHostScanTargetErrorSummaryCollectionResult> hostScanTargetErrorSummaryCollections,

            string hostScanTargetId,

            string id,

            string? state)
        {
            CompartmentId = compartmentId;
            Filters = filters;
            HostScanTargetErrorSummaryCollections = hostScanTargetErrorSummaryCollections;
            HostScanTargetId = hostScanTargetId;
            Id = id;
            State = state;
        }
    }
}
