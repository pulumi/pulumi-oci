// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.VulnerabilityScanning
{
    /// <summary>
    /// This resource provides the Host Scan Recipe resource in Oracle Cloud Infrastructure Vulnerability Scanning service.
    /// 
    /// Creates a new HostScanRecipe. A recipe determines the types of security issues that you want scanned, and how often to scan.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testHostScanRecipe = new Oci.VulnerabilityScanning.HostScanRecipe("test_host_scan_recipe", new()
    ///     {
    ///         AgentSettings = new Oci.VulnerabilityScanning.Inputs.HostScanRecipeAgentSettingsArgs
    ///         {
    ///             ScanLevel = hostScanRecipeAgentSettingsScanLevel,
    ///             AgentConfiguration = new Oci.VulnerabilityScanning.Inputs.HostScanRecipeAgentSettingsAgentConfigurationArgs
    ///             {
    ///                 Vendor = hostScanRecipeAgentSettingsAgentConfigurationVendor,
    ///                 CisBenchmarkSettings = new Oci.VulnerabilityScanning.Inputs.HostScanRecipeAgentSettingsAgentConfigurationCisBenchmarkSettingsArgs
    ///                 {
    ///                     ScanLevel = hostScanRecipeAgentSettingsAgentConfigurationCisBenchmarkSettingsScanLevel,
    ///                 },
    ///                 EndpointProtectionSettings = new Oci.VulnerabilityScanning.Inputs.HostScanRecipeAgentSettingsAgentConfigurationEndpointProtectionSettingsArgs
    ///                 {
    ///                     ScanLevel = hostScanRecipeAgentSettingsAgentConfigurationEndpointProtectionSettingsScanLevel,
    ///                 },
    ///                 ShouldUnInstall = hostScanRecipeAgentSettingsAgentConfigurationShouldUnInstall,
    ///                 VaultSecretId = testSecret.Id,
    ///                 VendorType = hostScanRecipeAgentSettingsAgentConfigurationVendorType,
    ///             },
    ///         },
    ///         CompartmentId = compartmentId,
    ///         PortSettings = new Oci.VulnerabilityScanning.Inputs.HostScanRecipePortSettingsArgs
    ///         {
    ///             ScanLevel = hostScanRecipePortSettingsScanLevel,
    ///         },
    ///         Schedule = new Oci.VulnerabilityScanning.Inputs.HostScanRecipeScheduleArgs
    ///         {
    ///             Type = hostScanRecipeScheduleType,
    ///             DayOfWeek = hostScanRecipeScheduleDayOfWeek,
    ///         },
    ///         ApplicationSettings = new Oci.VulnerabilityScanning.Inputs.HostScanRecipeApplicationSettingsArgs
    ///         {
    ///             ApplicationScanRecurrence = hostScanRecipeApplicationSettingsApplicationScanRecurrence,
    ///             FoldersToScans = new[]
    ///             {
    ///                 new Oci.VulnerabilityScanning.Inputs.HostScanRecipeApplicationSettingsFoldersToScanArgs
    ///                 {
    ///                     Folder = hostScanRecipeApplicationSettingsFoldersToScanFolder,
    ///                     Operatingsystem = hostScanRecipeApplicationSettingsFoldersToScanOperatingsystem,
    ///                 },
    ///             },
    ///             IsEnabled = hostScanRecipeApplicationSettingsIsEnabled,
    ///         },
    ///         DefinedTags = 
    ///         {
    ///             { "foo-namespace.bar-key", "value" },
    ///         },
    ///         DisplayName = hostScanRecipeDisplayName,
    ///         FreeformTags = 
    ///         {
    ///             { "bar-key", "value" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// HostScanRecipes can be imported using the `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import oci:VulnerabilityScanning/hostScanRecipe:HostScanRecipe test_host_scan_recipe "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:VulnerabilityScanning/hostScanRecipe:HostScanRecipe")]
    public partial class HostScanRecipe : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) Agent scan settings for a host scan
        /// </summary>
        [Output("agentSettings")]
        public Output<Outputs.HostScanRecipeAgentSettings> AgentSettings { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Agent scan settings for an application scan (as a part of a host scan)
        /// </summary>
        [Output("applicationSettings")]
        public Output<Outputs.HostScanRecipeApplicationSettings> ApplicationSettings { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Compartment ID of the scanning config. If no individual hosts are specified, all hosts in this compartment are scanned
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, object>> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Recipe identifier, which can be renamed. If not present, it will be auto-generated. Avoid entering confidential information.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, object>> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Port scan settings for a host scan
        /// </summary>
        [Output("portSettings")]
        public Output<Outputs.HostScanRecipePortSettings> PortSettings { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A scanning schedule
        /// </summary>
        [Output("schedule")]
        public Output<Outputs.HostScanRecipeSchedule> Schedule { get; private set; } = null!;

        /// <summary>
        /// The current state of the config.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        [Output("systemTags")]
        public Output<ImmutableDictionary<string, object>> SystemTags { get; private set; } = null!;

        /// <summary>
        /// Date and time the recipe was created, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// Date and time the recipe was last updated, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
        /// </summary>
        [Output("timeUpdated")]
        public Output<string> TimeUpdated { get; private set; } = null!;


        /// <summary>
        /// Create a HostScanRecipe resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public HostScanRecipe(string name, HostScanRecipeArgs args, CustomResourceOptions? options = null)
            : base("oci:VulnerabilityScanning/hostScanRecipe:HostScanRecipe", name, args ?? new HostScanRecipeArgs(), MakeResourceOptions(options, ""))
        {
        }

        private HostScanRecipe(string name, Input<string> id, HostScanRecipeState? state = null, CustomResourceOptions? options = null)
            : base("oci:VulnerabilityScanning/hostScanRecipe:HostScanRecipe", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing HostScanRecipe resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static HostScanRecipe Get(string name, Input<string> id, HostScanRecipeState? state = null, CustomResourceOptions? options = null)
        {
            return new HostScanRecipe(name, id, state, options);
        }
    }

    public sealed class HostScanRecipeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) Agent scan settings for a host scan
        /// </summary>
        [Input("agentSettings", required: true)]
        public Input<Inputs.HostScanRecipeAgentSettingsArgs> AgentSettings { get; set; } = null!;

        /// <summary>
        /// (Updatable) Agent scan settings for an application scan (as a part of a host scan)
        /// </summary>
        [Input("applicationSettings")]
        public Input<Inputs.HostScanRecipeApplicationSettingsArgs>? ApplicationSettings { get; set; }

        /// <summary>
        /// (Updatable) Compartment ID of the scanning config. If no individual hosts are specified, all hosts in this compartment are scanned
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) Recipe identifier, which can be renamed. If not present, it will be auto-generated. Avoid entering confidential information.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) Port scan settings for a host scan
        /// </summary>
        [Input("portSettings", required: true)]
        public Input<Inputs.HostScanRecipePortSettingsArgs> PortSettings { get; set; } = null!;

        /// <summary>
        /// (Updatable) A scanning schedule
        /// </summary>
        [Input("schedule", required: true)]
        public Input<Inputs.HostScanRecipeScheduleArgs> Schedule { get; set; } = null!;

        public HostScanRecipeArgs()
        {
        }
        public static new HostScanRecipeArgs Empty => new HostScanRecipeArgs();
    }

    public sealed class HostScanRecipeState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Updatable) Agent scan settings for a host scan
        /// </summary>
        [Input("agentSettings")]
        public Input<Inputs.HostScanRecipeAgentSettingsGetArgs>? AgentSettings { get; set; }

        /// <summary>
        /// (Updatable) Agent scan settings for an application scan (as a part of a host scan)
        /// </summary>
        [Input("applicationSettings")]
        public Input<Inputs.HostScanRecipeApplicationSettingsGetArgs>? ApplicationSettings { get; set; }

        /// <summary>
        /// (Updatable) Compartment ID of the scanning config. If no individual hosts are specified, all hosts in this compartment are scanned
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) Recipe identifier, which can be renamed. If not present, it will be auto-generated. Avoid entering confidential information.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        /// <summary>
        /// (Updatable) Port scan settings for a host scan
        /// </summary>
        [Input("portSettings")]
        public Input<Inputs.HostScanRecipePortSettingsGetArgs>? PortSettings { get; set; }

        /// <summary>
        /// (Updatable) A scanning schedule
        /// </summary>
        [Input("schedule")]
        public Input<Inputs.HostScanRecipeScheduleGetArgs>? Schedule { get; set; }

        /// <summary>
        /// The current state of the config.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("systemTags")]
        private InputMap<object>? _systemTags;

        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public InputMap<object> SystemTags
        {
            get => _systemTags ?? (_systemTags = new InputMap<object>());
            set => _systemTags = value;
        }

        /// <summary>
        /// Date and time the recipe was created, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// Date and time the recipe was last updated, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
        /// </summary>
        [Input("timeUpdated")]
        public Input<string>? TimeUpdated { get; set; }

        public HostScanRecipeState()
        {
        }
        public static new HostScanRecipeState Empty => new HostScanRecipeState();
    }
}
