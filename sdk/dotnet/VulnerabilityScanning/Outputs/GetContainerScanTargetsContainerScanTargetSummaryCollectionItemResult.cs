// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.VulnerabilityScanning.Outputs
{

    [OutputType]
    public sealed class GetContainerScanTargetsContainerScanTargetSummaryCollectionItemResult
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// ID of the container scan recipe this target applies.
        /// </summary>
        public readonly string ContainerScanRecipeId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// Target description.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of container scan target. Immutable and generated on creation.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A filter to return only resources whose lifecycleState matches the given lifecycleState.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// Registry information for a container scan target
        /// </summary>
        public readonly ImmutableArray<Outputs.GetContainerScanTargetsContainerScanTargetSummaryCollectionItemTargetRegistryResult> TargetRegistries;
        /// <summary>
        /// Date and time the target was created, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// Date and time the target was last updated, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetContainerScanTargetsContainerScanTargetSummaryCollectionItemResult(
            string compartmentId,

            string containerScanRecipeId,

            ImmutableDictionary<string, string> definedTags,

            string description,

            string displayName,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            string state,

            ImmutableDictionary<string, string> systemTags,

            ImmutableArray<Outputs.GetContainerScanTargetsContainerScanTargetSummaryCollectionItemTargetRegistryResult> targetRegistries,

            string timeCreated,

            string timeUpdated)
        {
            CompartmentId = compartmentId;
            ContainerScanRecipeId = containerScanRecipeId;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            State = state;
            SystemTags = systemTags;
            TargetRegistries = targetRegistries;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
