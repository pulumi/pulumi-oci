// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Waa
{
    public static class GetAppAccelerationPolicy
    {
        /// <summary>
        /// This data source provides details about a specific Web App Acceleration Policy resource in Oracle Cloud Infrastructure Waa service.
        /// 
        /// Gets a WebAppAccelerationPolicy with the given OCID.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testWebAppAccelerationPolicy = Oci.Waa.GetAppAccelerationPolicy.Invoke(new()
        ///     {
        ///         WebAppAccelerationPolicyId = oci_waa_web_app_acceleration_policy.Test_web_app_acceleration_policy.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetAppAccelerationPolicyResult> InvokeAsync(GetAppAccelerationPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAppAccelerationPolicyResult>("oci:Waa/getAppAccelerationPolicy:getAppAccelerationPolicy", args ?? new GetAppAccelerationPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Web App Acceleration Policy resource in Oracle Cloud Infrastructure Waa service.
        /// 
        /// Gets a WebAppAccelerationPolicy with the given OCID.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testWebAppAccelerationPolicy = Oci.Waa.GetAppAccelerationPolicy.Invoke(new()
        ///     {
        ///         WebAppAccelerationPolicyId = oci_waa_web_app_acceleration_policy.Test_web_app_acceleration_policy.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetAppAccelerationPolicyResult> Invoke(GetAppAccelerationPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAppAccelerationPolicyResult>("oci:Waa/getAppAccelerationPolicy:getAppAccelerationPolicy", args ?? new GetAppAccelerationPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAppAccelerationPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the WebAppAccelerationPolicy.
        /// </summary>
        [Input("webAppAccelerationPolicyId", required: true)]
        public string WebAppAccelerationPolicyId { get; set; } = null!;

        public GetAppAccelerationPolicyArgs()
        {
        }
        public static new GetAppAccelerationPolicyArgs Empty => new GetAppAccelerationPolicyArgs();
    }

    public sealed class GetAppAccelerationPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the WebAppAccelerationPolicy.
        /// </summary>
        [Input("webAppAccelerationPolicyId", required: true)]
        public Input<string> WebAppAccelerationPolicyId { get; set; } = null!;

        public GetAppAccelerationPolicyInvokeArgs()
        {
        }
        public static new GetAppAccelerationPolicyInvokeArgs Empty => new GetAppAccelerationPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetAppAccelerationPolicyResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? DefinedTags;
        /// <summary>
        /// WebAppAccelerationPolicy display name, can be renamed.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? FreeformTags;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the WebAppAccelerationPolicy.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in FAILED state.
        /// </summary>
        public readonly string? LifecycleDetails;
        /// <summary>
        /// An object that specifies an HTTP response caching policy.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAppAccelerationPolicyResponseCachingPolicyResult> ResponseCachingPolicies;
        /// <summary>
        /// An object that specifies a compression policy for HTTP response from ENABLEMENT POINT to the client.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAppAccelerationPolicyResponseCompressionPolicyResult> ResponseCompressionPolicies;
        /// <summary>
        /// The current state of the WebAppAccelerationPolicy.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object>? SystemTags;
        /// <summary>
        /// The time the WebAppAccelerationPolicy was created. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string? TimeCreated;
        /// <summary>
        /// The time the WebAppAccelerationPolicy was updated. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string? TimeUpdated;
        public readonly string WebAppAccelerationPolicyId;

        [OutputConstructor]
        private GetAppAccelerationPolicyResult(
            string? compartmentId,

            ImmutableDictionary<string, object>? definedTags,

            string? displayName,

            ImmutableDictionary<string, object>? freeformTags,

            string? id,

            string? lifecycleDetails,

            ImmutableArray<Outputs.GetAppAccelerationPolicyResponseCachingPolicyResult> responseCachingPolicies,

            ImmutableArray<Outputs.GetAppAccelerationPolicyResponseCompressionPolicyResult> responseCompressionPolicies,

            string? state,

            ImmutableDictionary<string, object>? systemTags,

            string? timeCreated,

            string? timeUpdated,

            string webAppAccelerationPolicyId)
        {
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            LifecycleDetails = lifecycleDetails;
            ResponseCachingPolicies = responseCachingPolicies;
            ResponseCompressionPolicies = responseCompressionPolicies;
            State = state;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            WebAppAccelerationPolicyId = webAppAccelerationPolicyId;
        }
    }
}
