// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Waas.Inputs
{

    public sealed class PolicyPolicyConfigHealthChecksArgs : global::Pulumi.ResourceArgs
    {
        [Input("expectedResponseCodeGroups")]
        private InputList<string>? _expectedResponseCodeGroups;

        /// <summary>
        /// (Updatable) The HTTP response codes that signify a healthy state.
        /// * **2XX:** Success response code group.
        /// * **3XX:** Redirection response code group.
        /// * **4XX:** Client errors response code group.
        /// * **5XX:** Server errors response code group.
        /// </summary>
        public InputList<string> ExpectedResponseCodeGroups
        {
            get => _expectedResponseCodeGroups ?? (_expectedResponseCodeGroups = new InputList<string>());
            set => _expectedResponseCodeGroups = value;
        }

        /// <summary>
        /// (Updatable) Health check will search for the given text in a case-sensitive manner within the response body and will fail if the text is not found.
        /// </summary>
        [Input("expectedResponseText")]
        public Input<string>? ExpectedResponseText { get; set; }

        [Input("headers")]
        private InputMap<string>? _headers;

        /// <summary>
        /// (Updatable) HTTP header fields to include in health check requests, expressed as `"name": "value"` properties. Because HTTP header field names are case-insensitive, any use of names that are case-insensitive equal to other names will be rejected. If Host is not specified, requests will include a Host header field with value matching the policy's protected domain. If User-Agent is not specified, requests will include a User-Agent header field with value "waf health checks".
        /// 
        /// **Note:** The only currently-supported header fields are Host and User-Agent.
        /// </summary>
        public InputMap<string> Headers
        {
            get => _headers ?? (_headers = new InputMap<string>());
            set => _headers = value;
        }

        /// <summary>
        /// (Updatable) Number of successful health checks after which the server is marked up.
        /// </summary>
        [Input("healthyThreshold")]
        public Input<int>? HealthyThreshold { get; set; }

        /// <summary>
        /// (Updatable) Time between health checks of an individual origin server, in seconds.
        /// </summary>
        [Input("intervalInSeconds")]
        public Input<int>? IntervalInSeconds { get; set; }

        /// <summary>
        /// (Updatable) Enables or disables the health checks.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// (Updatable) Enables or disables additional check for predefined text in addition to response code.
        /// </summary>
        [Input("isResponseTextCheckEnabled")]
        public Input<bool>? IsResponseTextCheckEnabled { get; set; }

        /// <summary>
        /// (Updatable) An HTTP verb (i.e. HEAD, GET, or POST) to use when performing the health check.
        /// </summary>
        [Input("method")]
        public Input<string>? Method { get; set; }

        /// <summary>
        /// (Updatable) Path to visit on your origins when performing the health check.
        /// </summary>
        [Input("path")]
        public Input<string>? Path { get; set; }

        /// <summary>
        /// (Updatable) Response timeout represents wait time until request is considered failed, in seconds.
        /// </summary>
        [Input("timeoutInSeconds")]
        public Input<int>? TimeoutInSeconds { get; set; }

        /// <summary>
        /// (Updatable) Number of failed health checks after which the server is marked down.
        /// </summary>
        [Input("unhealthyThreshold")]
        public Input<int>? UnhealthyThreshold { get; set; }

        public PolicyPolicyConfigHealthChecksArgs()
        {
        }
        public static new PolicyPolicyConfigHealthChecksArgs Empty => new PolicyPolicyConfigHealthChecksArgs();
    }
}
