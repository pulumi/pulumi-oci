// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Waas.Outputs
{

    [OutputType]
    public sealed class GetCertificateIssuerNameResult
    {
        /// <summary>
        /// The fully qualified domain name used for DNS lookups of the server.
        /// </summary>
        public readonly string CommonName;
        /// <summary>
        /// ISO 3166-1 alpha-2 code of the country where the organization is located. For a list of codes, see [ISO's website](https://www.iso.org/obp/ui/#search/code/).
        /// </summary>
        public readonly string Country;
        /// <summary>
        /// The email address of the server's administrator.
        /// </summary>
        public readonly string EmailAddress;
        /// <summary>
        /// The city in which the organization is located.
        /// </summary>
        public readonly string Locality;
        /// <summary>
        /// The organization name.
        /// </summary>
        public readonly string Organization;
        /// <summary>
        /// The field to differentiate between divisions within an organization.
        /// </summary>
        public readonly string OrganizationalUnit;
        /// <summary>
        /// The province where the organization is located.
        /// </summary>
        public readonly string StateProvince;

        [OutputConstructor]
        private GetCertificateIssuerNameResult(
            string commonName,

            string country,

            string emailAddress,

            string locality,

            string organization,

            string organizationalUnit,

            string stateProvince)
        {
            CommonName = commonName;
            Country = country;
            EmailAddress = emailAddress;
            Locality = locality;
            Organization = organization;
            OrganizationalUnit = organizationalUnit;
            StateProvince = stateProvince;
        }
    }
}
