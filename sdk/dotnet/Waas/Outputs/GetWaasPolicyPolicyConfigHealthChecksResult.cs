// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Waas.Outputs
{

    [OutputType]
    public sealed class GetWaasPolicyPolicyConfigHealthChecksResult
    {
        /// <summary>
        /// The HTTP response codes that signify a healthy state.
        /// * **2XX:** Success response code group.
        /// * **3XX:** Redirection response code group.
        /// * **4XX:** Client errors response code group.
        /// * **5XX:** Server errors response code group.
        /// </summary>
        public readonly ImmutableArray<string> ExpectedResponseCodeGroups;
        /// <summary>
        /// Health check will search for the given text in a case-sensitive manner within the response body and will fail if the text is not found.
        /// </summary>
        public readonly string ExpectedResponseText;
        /// <summary>
        /// HTTP header fields to include in health check requests, expressed as `"name": "value"` properties. Because HTTP header field names are case-insensitive, any use of names that are case-insensitive equal to other names will be rejected. If Host is not specified, requests will include a Host header field with value matching the policy's protected domain. If User-Agent is not specified, requests will include a User-Agent header field with value "waf health checks".
        /// </summary>
        public readonly ImmutableDictionary<string, object> Headers;
        /// <summary>
        /// Number of successful health checks after which the server is marked up.
        /// </summary>
        public readonly int HealthyThreshold;
        /// <summary>
        /// Time between health checks of an individual origin server, in seconds.
        /// </summary>
        public readonly int IntervalInSeconds;
        /// <summary>
        /// Enables or disables the JavaScript challenge Web Application Firewall feature.
        /// </summary>
        public readonly bool IsEnabled;
        /// <summary>
        /// Enables or disables additional check for predefined text in addition to response code.
        /// </summary>
        public readonly bool IsResponseTextCheckEnabled;
        /// <summary>
        /// Load balancing methods are algorithms used to efficiently distribute traffic among origin servers.
        /// * **[IP_HASH](https://www.terraform.io/iaas/api/#/en/waas/latest/datatypes/IPHashLoadBalancingMethod):** All the incoming requests from the same client IP address should go to the same content origination server. IP_HASH load balancing method uses origin weights when choosing which origin should the hash be assigned to initially.
        /// * **[ROUND_ROBIN](https://www.terraform.io/iaas/api/#/en/waas/latest/datatypes/RoundRobinLoadBalancingMethod):** Forwards requests sequentially to the available origin servers. The first request - to the first origin server, the second request - to the next origin server, and so on. After it sends a request to the last origin server, it starts again with the first origin server. When using weights on origins, Weighted Round Robin assigns more requests to origins with a greater weight. Over a period of time, origins will receive a number of requests in proportion to their weight.
        /// * **[STICKY_COOKIE](https://www.terraform.io/iaas/api/#/en/waas/latest/datatypes/StickyCookieLoadBalancingMethod):** Adds a session cookie to the first response from the origin server and identifies the server that sent the response. The client's next request contains the cookie value, and nginx routes the request to the origin server that responded to the first request. STICKY_COOKIE load balancing method falls back to Round Robin for the first request.
        /// </summary>
        public readonly string Method;
        /// <summary>
        /// Path to visit on your origins when performing the health check.
        /// </summary>
        public readonly string Path;
        /// <summary>
        /// Response timeout represents wait time until request is considered failed, in seconds.
        /// </summary>
        public readonly int TimeoutInSeconds;
        /// <summary>
        /// Number of failed health checks after which the server is marked down.
        /// </summary>
        public readonly int UnhealthyThreshold;

        [OutputConstructor]
        private GetWaasPolicyPolicyConfigHealthChecksResult(
            ImmutableArray<string> expectedResponseCodeGroups,

            string expectedResponseText,

            ImmutableDictionary<string, object> headers,

            int healthyThreshold,

            int intervalInSeconds,

            bool isEnabled,

            bool isResponseTextCheckEnabled,

            string method,

            string path,

            int timeoutInSeconds,

            int unhealthyThreshold)
        {
            ExpectedResponseCodeGroups = expectedResponseCodeGroups;
            ExpectedResponseText = expectedResponseText;
            Headers = headers;
            HealthyThreshold = healthyThreshold;
            IntervalInSeconds = intervalInSeconds;
            IsEnabled = isEnabled;
            IsResponseTextCheckEnabled = isResponseTextCheckEnabled;
            Method = method;
            Path = path;
            TimeoutInSeconds = timeoutInSeconds;
            UnhealthyThreshold = unhealthyThreshold;
        }
    }
}
