// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Waas.Outputs
{

    [OutputType]
    public sealed class GetWaasPolicyWafConfigResult
    {
        /// <summary>
        /// The access rules applied to the Web Application Firewall. Used for defining custom access policies with the combination of `ALLOW`, `DETECT`, and `BLOCK` rules, based on different criteria.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWaasPolicyWafConfigAccessRuleResult> AccessRules;
        /// <summary>
        /// The IP address rate limiting settings used to limit the number of requests from an address.
        /// </summary>
        public readonly Outputs.GetWaasPolicyWafConfigAddressRateLimitingResult AddressRateLimiting;
        /// <summary>
        /// A list of caching rules applied to the web application.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWaasPolicyWafConfigCachingRuleResult> CachingRules;
        /// <summary>
        /// A list of CAPTCHA challenge settings. These are used to challenge requests with a CAPTCHA to block bots.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWaasPolicyWafConfigCaptchaResult> Captchas;
        /// <summary>
        /// A list of the custom protection rule OCIDs and their actions.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWaasPolicyWafConfigCustomProtectionRuleResult> CustomProtectionRules;
        /// <summary>
        /// The device fingerprint challenge settings. Used to detect unique devices based on the device fingerprint information collected in order to block bots.
        /// </summary>
        public readonly Outputs.GetWaasPolicyWafConfigDeviceFingerprintChallengeResult DeviceFingerprintChallenge;
        /// <summary>
        /// The human interaction challenge settings. Used to look for natural human interactions such as mouse movements, time on site, and page scrolling to identify bots.
        /// </summary>
        public readonly Outputs.GetWaasPolicyWafConfigHumanInteractionChallengeResult HumanInteractionChallenge;
        /// <summary>
        /// The JavaScript challenge settings. Used to challenge requests with a JavaScript challenge and take the action if a browser has no JavaScript support in order to block bots.
        /// </summary>
        public readonly Outputs.GetWaasPolicyWafConfigJsChallengeResult JsChallenge;
        /// <summary>
        /// The key in the map of origins referencing the origin used for the Web Application Firewall. The origin must already be included in `Origins`. Required when creating the `WafConfig` resource, but not on update.
        /// </summary>
        public readonly string Origin;
        /// <summary>
        /// The map of origin groups and their keys used to associate origins to the `wafConfig`. Origin groups allow you to apply weights to groups of origins for load balancing purposes. Origins with higher weights will receive larger proportions of client requests. To add additional origins to your WAAS policy, update the `origins` field of a `UpdateWaasPolicy` request.
        /// </summary>
        public readonly ImmutableArray<string> OriginGroups;
        /// <summary>
        /// The settings to apply to protection rules.
        /// </summary>
        public readonly Outputs.GetWaasPolicyWafConfigProtectionSettingsResult ProtectionSettings;
        /// <summary>
        /// A list of IP addresses that bypass the Web Application Firewall.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWaasPolicyWafConfigWhitelistResult> Whitelists;

        [OutputConstructor]
        private GetWaasPolicyWafConfigResult(
            ImmutableArray<Outputs.GetWaasPolicyWafConfigAccessRuleResult> accessRules,

            Outputs.GetWaasPolicyWafConfigAddressRateLimitingResult addressRateLimiting,

            ImmutableArray<Outputs.GetWaasPolicyWafConfigCachingRuleResult> cachingRules,

            ImmutableArray<Outputs.GetWaasPolicyWafConfigCaptchaResult> captchas,

            ImmutableArray<Outputs.GetWaasPolicyWafConfigCustomProtectionRuleResult> customProtectionRules,

            Outputs.GetWaasPolicyWafConfigDeviceFingerprintChallengeResult deviceFingerprintChallenge,

            Outputs.GetWaasPolicyWafConfigHumanInteractionChallengeResult humanInteractionChallenge,

            Outputs.GetWaasPolicyWafConfigJsChallengeResult jsChallenge,

            string origin,

            ImmutableArray<string> originGroups,

            Outputs.GetWaasPolicyWafConfigProtectionSettingsResult protectionSettings,

            ImmutableArray<Outputs.GetWaasPolicyWafConfigWhitelistResult> whitelists)
        {
            AccessRules = accessRules;
            AddressRateLimiting = addressRateLimiting;
            CachingRules = cachingRules;
            Captchas = captchas;
            CustomProtectionRules = customProtectionRules;
            DeviceFingerprintChallenge = deviceFingerprintChallenge;
            HumanInteractionChallenge = humanInteractionChallenge;
            JsChallenge = jsChallenge;
            Origin = origin;
            OriginGroups = originGroups;
            ProtectionSettings = protectionSettings;
            Whitelists = whitelists;
        }
    }
}
