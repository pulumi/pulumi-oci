// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Waas.Outputs
{

    [OutputType]
    public sealed class PolicyPolicyConfigHealthChecks
    {
        /// <summary>
        /// (Updatable) The HTTP response codes that signify a healthy state.
        /// * **2XX:** Success response code group.
        /// * **3XX:** Redirection response code group.
        /// * **4XX:** Client errors response code group.
        /// * **5XX:** Server errors response code group.
        /// </summary>
        public readonly ImmutableArray<string> ExpectedResponseCodeGroups;
        /// <summary>
        /// (Updatable) Health check will search for the given text in a case-sensitive manner within the response body and will fail if the text is not found.
        /// </summary>
        public readonly string? ExpectedResponseText;
        /// <summary>
        /// (Updatable) HTTP header fields to include in health check requests, expressed as `"name": "value"` properties. Because HTTP header field names are case-insensitive, any use of names that are case-insensitive equal to other names will be rejected. If Host is not specified, requests will include a Host header field with value matching the policy's protected domain. If User-Agent is not specified, requests will include a User-Agent header field with value "waf health checks".
        /// 
        /// **Note:** The only currently-supported header fields are Host and User-Agent.
        /// </summary>
        public readonly ImmutableDictionary<string, object>? Headers;
        /// <summary>
        /// (Updatable) Number of successful health checks after which the server is marked up.
        /// </summary>
        public readonly int? HealthyThreshold;
        /// <summary>
        /// (Updatable) Time between health checks of an individual origin server, in seconds.
        /// </summary>
        public readonly int? IntervalInSeconds;
        /// <summary>
        /// (Updatable) Enables or disables the health checks.
        /// </summary>
        public readonly bool? IsEnabled;
        /// <summary>
        /// (Updatable) Enables or disables additional check for predefined text in addition to response code.
        /// </summary>
        public readonly bool? IsResponseTextCheckEnabled;
        /// <summary>
        /// (Updatable) An HTTP verb (i.e. HEAD, GET, or POST) to use when performing the health check.
        /// </summary>
        public readonly string? Method;
        /// <summary>
        /// (Updatable) Path to visit on your origins when performing the health check.
        /// </summary>
        public readonly string? Path;
        /// <summary>
        /// (Updatable) Response timeout represents wait time until request is considered failed, in seconds.
        /// </summary>
        public readonly int? TimeoutInSeconds;
        /// <summary>
        /// (Updatable) Number of failed health checks after which the server is marked down.
        /// </summary>
        public readonly int? UnhealthyThreshold;

        [OutputConstructor]
        private PolicyPolicyConfigHealthChecks(
            ImmutableArray<string> expectedResponseCodeGroups,

            string? expectedResponseText,

            ImmutableDictionary<string, object>? headers,

            int? healthyThreshold,

            int? intervalInSeconds,

            bool? isEnabled,

            bool? isResponseTextCheckEnabled,

            string? method,

            string? path,

            int? timeoutInSeconds,

            int? unhealthyThreshold)
        {
            ExpectedResponseCodeGroups = expectedResponseCodeGroups;
            ExpectedResponseText = expectedResponseText;
            Headers = headers;
            HealthyThreshold = healthyThreshold;
            IntervalInSeconds = intervalInSeconds;
            IsEnabled = isEnabled;
            IsResponseTextCheckEnabled = isResponseTextCheckEnabled;
            Method = method;
            Path = path;
            TimeoutInSeconds = timeoutInSeconds;
            UnhealthyThreshold = unhealthyThreshold;
        }
    }
}
