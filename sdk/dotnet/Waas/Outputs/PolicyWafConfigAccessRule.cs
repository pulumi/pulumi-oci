// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Waas.Outputs
{

    [OutputType]
    public sealed class PolicyWafConfigAccessRule
    {
        /// <summary>
        /// (Updatable) The action to take when the access criteria are met for a rule. If unspecified, defaults to `ALLOW`.
        /// * **ALLOW:** Takes no action, just logs the request.
        /// * **DETECT:** Takes no action, but creates an alert for the request.
        /// * **BLOCK:** Blocks the request by returning specified response code or showing error page.
        /// * **BYPASS:** Bypasses some or all challenges.
        /// * **REDIRECT:** Redirects the request to the specified URL. These fields are required when `REDIRECT` is selected: `redirectUrl`, `redirectResponseCode`.
        /// * **SHOW_CAPTCHA:** Show a CAPTCHA Challenge page instead of the requested page.
        /// 
        /// Regardless of action, no further rules are processed once a rule is matched.
        /// </summary>
        public readonly string Action;
        /// <summary>
        /// (Updatable) The method used to block requests if `action` is set to `BLOCK` and the access criteria are met. If unspecified, defaults to `SET_RESPONSE_CODE`.
        /// </summary>
        public readonly string? BlockAction;
        /// <summary>
        /// (Updatable) The error code to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the access criteria are met. If unspecified, defaults to 'Access rules'.
        /// </summary>
        public readonly string? BlockErrorPageCode;
        /// <summary>
        /// (Updatable) The description text to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the access criteria are met. If unspecified, defaults to 'Access blocked by website owner. Please contact support.'
        /// </summary>
        public readonly string? BlockErrorPageDescription;
        /// <summary>
        /// (Updatable) The message to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the access criteria are met. If unspecified, defaults to 'Access to the website is blocked.'
        /// </summary>
        public readonly string? BlockErrorPageMessage;
        /// <summary>
        /// (Updatable) The response status code to return when `action` is set to `BLOCK`, `blockAction` is set to `SET_RESPONSE_CODE`, and the access criteria are met. If unspecified, defaults to `403`. The list of available response codes: `200`, `201`, `202`, `204`, `206`, `300`, `301`, `302`, `303`, `304`, `307`, `400`, `401`, `403`, `404`, `405`, `408`, `409`, `411`, `412`, `413`, `414`, `415`, `416`, `422`, `444`, `494`, `495`, `496`, `497`, `499`, `500`, `501`, `502`, `503`, `504`, `507`.
        /// </summary>
        public readonly int? BlockResponseCode;
        /// <summary>
        /// (Updatable) The list of challenges to bypass when `action` is set to `BYPASS`. If unspecified or empty, all challenges are bypassed.
        /// * **JS_CHALLENGE:** Bypasses JavaScript Challenge.
        /// * **DEVICE_FINGERPRINT_CHALLENGE:** Bypasses Device Fingerprint Challenge.
        /// * **HUMAN_INTERACTION_CHALLENGE:** Bypasses Human Interaction Challenge.
        /// * **CAPTCHA:** Bypasses CAPTCHA Challenge.
        /// </summary>
        public readonly ImmutableArray<string> BypassChallenges;
        /// <summary>
        /// (Updatable) The text to show in the footer when showing a CAPTCHA challenge when `action` is set to `SHOW_CAPTCHA` and the request is challenged.
        /// </summary>
        public readonly string? CaptchaFooter;
        /// <summary>
        /// (Updatable) The text to show in the header when showing a CAPTCHA challenge when `action` is set to `SHOW_CAPTCHA` and the request is challenged.
        /// </summary>
        public readonly string? CaptchaHeader;
        /// <summary>
        /// (Updatable) The text to show on the label of the CAPTCHA challenge submit button when `action` is set to `SHOW_CAPTCHA` and the request is challenged.
        /// </summary>
        public readonly string? CaptchaSubmitLabel;
        /// <summary>
        /// (Updatable) The title used when showing a CAPTCHA challenge when `action` is set to `SHOW_CAPTCHA` and the request is challenged.
        /// </summary>
        public readonly string? CaptchaTitle;
        /// <summary>
        /// (Updatable) The list of access rule criteria. The rule would be applied only for the requests that matched all the listed conditions.
        /// </summary>
        public readonly ImmutableArray<Outputs.PolicyWafConfigAccessRuleCriteria> Criterias;
        /// <summary>
        /// (Updatable) The unique name of the access rule.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// (Updatable) The response status code to return when `action` is set to `REDIRECT`.
        /// * **MOVED_PERMANENTLY:** Used for designating the permanent movement of a page (numerical code - 301).
        /// * **FOUND:** Used for designating the temporary movement of a page (numerical code - 302).
        /// </summary>
        public readonly string? RedirectResponseCode;
        /// <summary>
        /// (Updatable) The target to which the request should be redirected, represented as a URI reference. Required when `action` is `REDIRECT`.
        /// </summary>
        public readonly string? RedirectUrl;
        /// <summary>
        /// (Updatable) An object that represents an action to apply to an HTTP response headers if all rule criteria will be matched regardless of `action` value.
        /// </summary>
        public readonly ImmutableArray<Outputs.PolicyWafConfigAccessRuleResponseHeaderManipulation> ResponseHeaderManipulations;

        [OutputConstructor]
        private PolicyWafConfigAccessRule(
            string action,

            string? blockAction,

            string? blockErrorPageCode,

            string? blockErrorPageDescription,

            string? blockErrorPageMessage,

            int? blockResponseCode,

            ImmutableArray<string> bypassChallenges,

            string? captchaFooter,

            string? captchaHeader,

            string? captchaSubmitLabel,

            string? captchaTitle,

            ImmutableArray<Outputs.PolicyWafConfigAccessRuleCriteria> criterias,

            string name,

            string? redirectResponseCode,

            string? redirectUrl,

            ImmutableArray<Outputs.PolicyWafConfigAccessRuleResponseHeaderManipulation> responseHeaderManipulations)
        {
            Action = action;
            BlockAction = blockAction;
            BlockErrorPageCode = blockErrorPageCode;
            BlockErrorPageDescription = blockErrorPageDescription;
            BlockErrorPageMessage = blockErrorPageMessage;
            BlockResponseCode = blockResponseCode;
            BypassChallenges = bypassChallenges;
            CaptchaFooter = captchaFooter;
            CaptchaHeader = captchaHeader;
            CaptchaSubmitLabel = captchaSubmitLabel;
            CaptchaTitle = captchaTitle;
            Criterias = criterias;
            Name = name;
            RedirectResponseCode = redirectResponseCode;
            RedirectUrl = redirectUrl;
            ResponseHeaderManipulations = responseHeaderManipulations;
        }
    }
}
