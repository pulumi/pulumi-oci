// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Waas
{
    /// <summary>
    /// This resource provides the Waas Policy resource in Oracle Cloud Infrastructure Web Application Acceleration and Security service.
    /// 
    /// Creates a new Web Application Acceleration and Security (WAAS) policy in the specified compartment. A WAAS policy must be established before creating Web Application Firewall (WAF) rules. To use WAF rules, your web application's origin servers must defined in the `WaasPolicy` schema.
    /// 
    /// A domain name must be specified when creating a WAAS policy. The domain name should be different from the origins specified in your `WaasPolicy`. Once domain name is entered and stored, it is unchangeable.
    /// 
    /// Use the record data returned in the `cname` field of the `WaasPolicy` object to create a CNAME record in your DNS configuration that will direct your domain's traffic through the WAF.
    /// 
    /// For the purposes of access control, you must provide the OCID of the compartment where you want the service to reside. For information about access control and compartments, see [Overview of the IAM Service](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/overview.htm).
    /// 
    /// You must specify a display name and domain for the WAAS policy. The display name does not have to be unique and can be changed. The domain name should be different from every origin specified in `WaasPolicy`.
    /// 
    /// All Oracle Cloud Infrastructure resources, including WAAS policies, receive a unique, Oracle-assigned ID called an Oracle Cloud Identifier (OCID). When a resource is created, you can find its OCID in the response. You can also retrieve a resource's OCID by using a list API operation for that resource type, or by viewing the resource in the Console. Fore more information, see [Resource Identifiers](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
    /// 
    /// **Note:** After sending the POST request, the new object's state will temporarily be `CREATING`. Ensure that the resource's state has changed to `ACTIVE` before use.
    /// 
    /// ## Import
    /// 
    /// WaasPolicies can be imported using the `id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import oci:Waas/policy:Policy test_waas_policy "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:Waas/policy:Policy")]
    public partial class Policy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Updatable) An array of additional domains for the specified web application.
        /// </summary>
        [Output("additionalDomains")]
        public Output<ImmutableArray<string>> AdditionalDomains { get; private set; } = null!;

        /// <summary>
        /// The CNAME record to add to your DNS configuration to route traffic for the domain, and all additional domains, through the WAF.
        /// </summary>
        [Output("cname")]
        public Output<string?> Cname { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to create the WAAS policy.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        [Output("definedTags")]
        public Output<ImmutableDictionary<string, object>?> DefinedTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A user-friendly name for the WAAS policy. The name can be changed and does not need to be unique.
        /// </summary>
        [Output("displayName")]
        public Output<string?> DisplayName { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The domain for which the cookie is set, defaults to WAAS policy domain.
        /// </summary>
        [Output("domain")]
        public Output<string> Domain { get; private set; } = null!;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, object>?> FreeformTags { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The map of origin groups and their keys used to associate origins to the `wafConfig`. Origin groups allow you to apply weights to groups of origins for load balancing purposes. Origins with higher weights will receive larger proportions of client requests. To add additional origins to your WAAS policy, update the `origins` field of a `UpdateWaasPolicy` request.
        /// </summary>
        [Output("originGroups")]
        public Output<ImmutableArray<Outputs.PolicyOriginGroup>> OriginGroups { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A map of host to origin for the web application. The key should be a customer friendly name for the host, ex. primary, secondary, etc.
        /// </summary>
        [Output("origins")]
        public Output<ImmutableArray<Outputs.PolicyOrigin>> Origins { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The configuration details for the WAAS policy.
        /// </summary>
        [Output("policyConfig")]
        public Output<Outputs.PolicyPolicyConfig?> PolicyConfig { get; private set; } = null!;

        /// <summary>
        /// The current lifecycle state of the WAAS policy.
        /// </summary>
        [Output("state")]
        public Output<string?> State { get; private set; } = null!;

        /// <summary>
        /// The date and time the policy was created, expressed in RFC 3339 timestamp format.
        /// </summary>
        [Output("timeCreated")]
        public Output<string?> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The Web Application Firewall configuration for the WAAS policy creation.
        /// </summary>
        [Output("wafConfig")]
        public Output<Outputs.PolicyWafConfig?> WafConfig { get; private set; } = null!;


        /// <summary>
        /// Create a Policy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Policy(string name, PolicyArgs args, CustomResourceOptions? options = null)
            : base("oci:Waas/policy:Policy", name, args ?? new PolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Policy(string name, Input<string> id, PolicyState? state = null, CustomResourceOptions? options = null)
            : base("oci:Waas/policy:Policy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Policy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Policy Get(string name, Input<string> id, PolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new Policy(name, id, state, options);
        }
    }

    public sealed class PolicyArgs : global::Pulumi.ResourceArgs
    {
        [Input("additionalDomains")]
        private InputList<string>? _additionalDomains;

        /// <summary>
        /// (Updatable) An array of additional domains for the specified web application.
        /// </summary>
        public InputList<string> AdditionalDomains
        {
            get => _additionalDomains ?? (_additionalDomains = new InputList<string>());
            set => _additionalDomains = value;
        }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to create the WAAS policy.
        /// </summary>
        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) A user-friendly name for the WAAS policy. The name can be changed and does not need to be unique.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// (Updatable) The domain for which the cookie is set, defaults to WAAS policy domain.
        /// </summary>
        [Input("domain", required: true)]
        public Input<string> Domain { get; set; } = null!;

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        [Input("originGroups")]
        private InputList<Inputs.PolicyOriginGroupArgs>? _originGroups;

        /// <summary>
        /// (Updatable) The map of origin groups and their keys used to associate origins to the `wafConfig`. Origin groups allow you to apply weights to groups of origins for load balancing purposes. Origins with higher weights will receive larger proportions of client requests. To add additional origins to your WAAS policy, update the `origins` field of a `UpdateWaasPolicy` request.
        /// </summary>
        public InputList<Inputs.PolicyOriginGroupArgs> OriginGroups
        {
            get => _originGroups ?? (_originGroups = new InputList<Inputs.PolicyOriginGroupArgs>());
            set => _originGroups = value;
        }

        [Input("origins")]
        private InputList<Inputs.PolicyOriginArgs>? _origins;

        /// <summary>
        /// (Updatable) A map of host to origin for the web application. The key should be a customer friendly name for the host, ex. primary, secondary, etc.
        /// </summary>
        public InputList<Inputs.PolicyOriginArgs> Origins
        {
            get => _origins ?? (_origins = new InputList<Inputs.PolicyOriginArgs>());
            set => _origins = value;
        }

        /// <summary>
        /// (Updatable) The configuration details for the WAAS policy.
        /// </summary>
        [Input("policyConfig")]
        public Input<Inputs.PolicyPolicyConfigArgs>? PolicyConfig { get; set; }

        /// <summary>
        /// (Updatable) The Web Application Firewall configuration for the WAAS policy creation.
        /// </summary>
        [Input("wafConfig")]
        public Input<Inputs.PolicyWafConfigArgs>? WafConfig { get; set; }

        public PolicyArgs()
        {
        }
        public static new PolicyArgs Empty => new PolicyArgs();
    }

    public sealed class PolicyState : global::Pulumi.ResourceArgs
    {
        [Input("additionalDomains")]
        private InputList<string>? _additionalDomains;

        /// <summary>
        /// (Updatable) An array of additional domains for the specified web application.
        /// </summary>
        public InputList<string> AdditionalDomains
        {
            get => _additionalDomains ?? (_additionalDomains = new InputList<string>());
            set => _additionalDomains = value;
        }

        /// <summary>
        /// The CNAME record to add to your DNS configuration to route traffic for the domain, and all additional domains, through the WAF.
        /// </summary>
        [Input("cname")]
        public Input<string>? Cname { get; set; }

        /// <summary>
        /// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to create the WAAS policy.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("definedTags")]
        private InputMap<object>? _definedTags;

        /// <summary>
        /// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// (Updatable) A user-friendly name for the WAAS policy. The name can be changed and does not need to be unique.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// (Updatable) The domain for which the cookie is set, defaults to WAAS policy domain.
        /// </summary>
        [Input("domain")]
        public Input<string>? Domain { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;

        /// <summary>
        /// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        [Input("originGroups")]
        private InputList<Inputs.PolicyOriginGroupGetArgs>? _originGroups;

        /// <summary>
        /// (Updatable) The map of origin groups and their keys used to associate origins to the `wafConfig`. Origin groups allow you to apply weights to groups of origins for load balancing purposes. Origins with higher weights will receive larger proportions of client requests. To add additional origins to your WAAS policy, update the `origins` field of a `UpdateWaasPolicy` request.
        /// </summary>
        public InputList<Inputs.PolicyOriginGroupGetArgs> OriginGroups
        {
            get => _originGroups ?? (_originGroups = new InputList<Inputs.PolicyOriginGroupGetArgs>());
            set => _originGroups = value;
        }

        [Input("origins")]
        private InputList<Inputs.PolicyOriginGetArgs>? _origins;

        /// <summary>
        /// (Updatable) A map of host to origin for the web application. The key should be a customer friendly name for the host, ex. primary, secondary, etc.
        /// </summary>
        public InputList<Inputs.PolicyOriginGetArgs> Origins
        {
            get => _origins ?? (_origins = new InputList<Inputs.PolicyOriginGetArgs>());
            set => _origins = value;
        }

        /// <summary>
        /// (Updatable) The configuration details for the WAAS policy.
        /// </summary>
        [Input("policyConfig")]
        public Input<Inputs.PolicyPolicyConfigGetArgs>? PolicyConfig { get; set; }

        /// <summary>
        /// The current lifecycle state of the WAAS policy.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The date and time the policy was created, expressed in RFC 3339 timestamp format.
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// (Updatable) The Web Application Firewall configuration for the WAAS policy creation.
        /// </summary>
        [Input("wafConfig")]
        public Input<Inputs.PolicyWafConfigGetArgs>? WafConfig { get; set; }

        public PolicyState()
        {
        }
        public static new PolicyState Empty => new PolicyState();
    }
}
