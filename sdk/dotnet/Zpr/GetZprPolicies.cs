// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Zpr
{
    public static class GetZprPolicies
    {
        /// <summary>
        /// This data source provides the list of Zpr Policies in Oracle Cloud Infrastructure Zpr service.
        /// 
        /// Gets a list of ZprPolicies.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testZprPolicies = Oci.Zpr.GetZprPolicies.Invoke(new()
        ///     {
        ///         CompartmentId = tenancyOcid,
        ///         Name = zprPolicyName,
        ///         State = zprPolicyState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetZprPoliciesResult> InvokeAsync(GetZprPoliciesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetZprPoliciesResult>("oci:Zpr/getZprPolicies:getZprPolicies", args ?? new GetZprPoliciesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Zpr Policies in Oracle Cloud Infrastructure Zpr service.
        /// 
        /// Gets a list of ZprPolicies.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testZprPolicies = Oci.Zpr.GetZprPolicies.Invoke(new()
        ///     {
        ///         CompartmentId = tenancyOcid,
        ///         Name = zprPolicyName,
        ///         State = zprPolicyState,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetZprPoliciesResult> Invoke(GetZprPoliciesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetZprPoliciesResult>("oci:Zpr/getZprPolicies:getZprPolicies", args ?? new GetZprPoliciesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetZprPoliciesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        [Input("filters")]
        private List<Inputs.GetZprPoliciesFilterArgs>? _filters;
        public List<Inputs.GetZprPoliciesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetZprPoliciesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetZprPoliciesArgs()
        {
        }
        public static new GetZprPoliciesArgs Empty => new GetZprPoliciesArgs();
    }

    public sealed class GetZprPoliciesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetZprPoliciesFilterInputArgs>? _filters;
        public InputList<Inputs.GetZprPoliciesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetZprPoliciesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GetZprPoliciesInvokeArgs()
        {
        }
        public static new GetZprPoliciesInvokeArgs Empty => new GetZprPoliciesInvokeArgs();
    }


    [OutputType]
    public sealed class GetZprPoliciesResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        public readonly string? CompartmentId;
        public readonly ImmutableArray<Outputs.GetZprPoliciesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name you assign to the ZprPolicy during creation. The name must be unique across all ZPL policies in the tenancy.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The current state of the ZprPolicy.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// The list of zpr_policies.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetZprPoliciesZprPolicyResult> ZprPolicies;

        [OutputConstructor]
        private GetZprPoliciesResult(
            string? compartmentId,

            ImmutableArray<Outputs.GetZprPoliciesFilterResult> filters,

            string id,

            string? name,

            string? state,

            ImmutableArray<Outputs.GetZprPoliciesZprPolicyResult> zprPolicies)
        {
            CompartmentId = compartmentId;
            Filters = filters;
            Id = id;
            Name = name;
            State = state;
            ZprPolicies = zprPolicies;
        }
    }
}
