// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Zpr
{
    public static class GetZprPolicy
    {
        /// <summary>
        /// This data source provides details about a specific Zpr Policy resource in Oracle Cloud Infrastructure Zpr service.
        /// 
        /// Gets information about a ZprPolicy.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testZprPolicy = Oci.Zpr.GetZprPolicy.Invoke(new()
        ///     {
        ///         ZprPolicyId = testZprPolicyOciZprZprPolicy.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetZprPolicyResult> InvokeAsync(GetZprPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetZprPolicyResult>("oci:Zpr/getZprPolicy:getZprPolicy", args ?? new GetZprPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Zpr Policy resource in Oracle Cloud Infrastructure Zpr service.
        /// 
        /// Gets information about a ZprPolicy.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testZprPolicy = Oci.Zpr.GetZprPolicy.Invoke(new()
        ///     {
        ///         ZprPolicyId = testZprPolicyOciZprZprPolicy.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetZprPolicyResult> Invoke(GetZprPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetZprPolicyResult>("oci:Zpr/getZprPolicy:getZprPolicy", args ?? new GetZprPolicyInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides details about a specific Zpr Policy resource in Oracle Cloud Infrastructure Zpr service.
        /// 
        /// Gets information about a ZprPolicy.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testZprPolicy = Oci.Zpr.GetZprPolicy.Invoke(new()
        ///     {
        ///         ZprPolicyId = testZprPolicyOciZprZprPolicy.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetZprPolicyResult> Invoke(GetZprPolicyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetZprPolicyResult>("oci:Zpr/getZprPolicy:getZprPolicy", args ?? new GetZprPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetZprPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the ZprPolicy.
        /// </summary>
        [Input("zprPolicyId", required: true)]
        public string ZprPolicyId { get; set; } = null!;

        public GetZprPolicyArgs()
        {
        }
        public static new GetZprPolicyArgs Empty => new GetZprPolicyArgs();
    }

    public sealed class GetZprPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the ZprPolicy.
        /// </summary>
        [Input("zprPolicyId", required: true)]
        public Input<string> ZprPolicyId { get; set; } = null!;

        public GetZprPolicyInvokeArgs()
        {
        }
        public static new GetZprPolicyInvokeArgs Empty => new GetZprPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetZprPolicyResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefinedTags;
        /// <summary>
        /// The description you assign to the ZprPolicy during creation. Does not have to be unique, and it's changeable.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> FreeformTags;
        public readonly string Id;
        /// <summary>
        /// A message that describes the current state of the ZprPolicy in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// The name you assign to the ZprPolicy during creation. The name must be unique across all ZPL policies in the tenancy.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The current state of the ZprPolicy.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// An array of ZprPolicy statements (up to 25 statements per ZprPolicy) written in the Zero Trust Packet Routing Policy Language.
        /// </summary>
        public readonly ImmutableArray<string> Statements;
        /// <summary>
        /// System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
        /// </summary>
        public readonly ImmutableDictionary<string, string> SystemTags;
        /// <summary>
        /// The date and time the ZprPolicy was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The date and time the ZprPolicy was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        public readonly string TimeUpdated;
        public readonly string ZprPolicyId;

        [OutputConstructor]
        private GetZprPolicyResult(
            string compartmentId,

            ImmutableDictionary<string, string> definedTags,

            string description,

            ImmutableDictionary<string, string> freeformTags,

            string id,

            string lifecycleDetails,

            string name,

            string state,

            ImmutableArray<string> statements,

            ImmutableDictionary<string, string> systemTags,

            string timeCreated,

            string timeUpdated,

            string zprPolicyId)
        {
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            Description = description;
            FreeformTags = freeformTags;
            Id = id;
            LifecycleDetails = lifecycleDetails;
            Name = name;
            State = state;
            Statements = statements;
            SystemTags = systemTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            ZprPolicyId = zprPolicyId;
        }
    }
}
