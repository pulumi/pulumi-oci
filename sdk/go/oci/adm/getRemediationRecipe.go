// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package adm

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Remediation Recipe resource in Oracle Cloud Infrastructure Adm service.
//
// Returns the details of the specified RemediationRecipe.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/adm"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := adm.GetRemediationRecipe(ctx, &adm.GetRemediationRecipeArgs{
//				RemediationRecipeId: testRemediationRecipeOciAdmRemediationRecipe.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupRemediationRecipe(ctx *pulumi.Context, args *LookupRemediationRecipeArgs, opts ...pulumi.InvokeOption) (*LookupRemediationRecipeResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRemediationRecipeResult
	err := ctx.Invoke("oci:Adm/getRemediationRecipe:getRemediationRecipe", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRemediationRecipe.
type LookupRemediationRecipeArgs struct {
	// The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of a Remediation Recipe, as a URL path parameter.
	RemediationRecipeId string `pulumi:"remediationRecipeId"`
}

// A collection of values returned by getRemediationRecipe.
type LookupRemediationRecipeResult struct {
	// The compartment Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the remediation recipe.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// A configuration to define the constraints when detecting vulnerable dependencies and recommending remediations.
	DetectConfigurations []GetRemediationRecipeDetectConfiguration `pulumi:"detectConfigurations"`
	// The name of the Remediation Recipe.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the remediation recipe.
	Id string `pulumi:"id"`
	// Boolean indicating if a run should be automatically triggered once the Knowledge Base contents are updated.
	IsRunTriggeredOnKbChange bool `pulumi:"isRunTriggeredOnKbChange"`
	// The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the knowledge base.
	KnowledgeBaseId string `pulumi:"knowledgeBaseId"`
	// A network configuration defines the required network characteristics for the remediation run of the recipe to access the source repository and/or verify build services.
	NetworkConfigurations []GetRemediationRecipeNetworkConfiguration `pulumi:"networkConfigurations"`
	RemediationRecipeId   string                                     `pulumi:"remediationRecipeId"`
	// A configuration for the Source Code Management tool/platform used by a remediation recipe.
	ScmConfigurations []GetRemediationRecipeScmConfiguration `pulumi:"scmConfigurations"`
	// The current lifecycle state of the Remediation Recipe.
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The creation date and time of the Remediation Recipe (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the Remediation Recipe was last updated (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
	TimeUpdated string `pulumi:"timeUpdated"`
	// The Verify stage configuration specifies a build service to run a pipeline for the recommended code changes. The build pipeline will be initiated to ensure that there is no breaking change after the dependency versions have been updated in source to avoid vulnerabilities.
	VerifyConfigurations []GetRemediationRecipeVerifyConfiguration `pulumi:"verifyConfigurations"`
}

func LookupRemediationRecipeOutput(ctx *pulumi.Context, args LookupRemediationRecipeOutputArgs, opts ...pulumi.InvokeOption) LookupRemediationRecipeResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupRemediationRecipeResultOutput, error) {
			args := v.(LookupRemediationRecipeArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Adm/getRemediationRecipe:getRemediationRecipe", args, LookupRemediationRecipeResultOutput{}, options).(LookupRemediationRecipeResultOutput), nil
		}).(LookupRemediationRecipeResultOutput)
}

// A collection of arguments for invoking getRemediationRecipe.
type LookupRemediationRecipeOutputArgs struct {
	// The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of a Remediation Recipe, as a URL path parameter.
	RemediationRecipeId pulumi.StringInput `pulumi:"remediationRecipeId"`
}

func (LookupRemediationRecipeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRemediationRecipeArgs)(nil)).Elem()
}

// A collection of values returned by getRemediationRecipe.
type LookupRemediationRecipeResultOutput struct{ *pulumi.OutputState }

func (LookupRemediationRecipeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRemediationRecipeResult)(nil)).Elem()
}

func (o LookupRemediationRecipeResultOutput) ToLookupRemediationRecipeResultOutput() LookupRemediationRecipeResultOutput {
	return o
}

func (o LookupRemediationRecipeResultOutput) ToLookupRemediationRecipeResultOutputWithContext(ctx context.Context) LookupRemediationRecipeResultOutput {
	return o
}

// The compartment Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the remediation recipe.
func (o LookupRemediationRecipeResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRemediationRecipeResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupRemediationRecipeResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupRemediationRecipeResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// A configuration to define the constraints when detecting vulnerable dependencies and recommending remediations.
func (o LookupRemediationRecipeResultOutput) DetectConfigurations() GetRemediationRecipeDetectConfigurationArrayOutput {
	return o.ApplyT(func(v LookupRemediationRecipeResult) []GetRemediationRecipeDetectConfiguration {
		return v.DetectConfigurations
	}).(GetRemediationRecipeDetectConfigurationArrayOutput)
}

// The name of the Remediation Recipe.
func (o LookupRemediationRecipeResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRemediationRecipeResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o LookupRemediationRecipeResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupRemediationRecipeResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the remediation recipe.
func (o LookupRemediationRecipeResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRemediationRecipeResult) string { return v.Id }).(pulumi.StringOutput)
}

// Boolean indicating if a run should be automatically triggered once the Knowledge Base contents are updated.
func (o LookupRemediationRecipeResultOutput) IsRunTriggeredOnKbChange() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupRemediationRecipeResult) bool { return v.IsRunTriggeredOnKbChange }).(pulumi.BoolOutput)
}

// The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the knowledge base.
func (o LookupRemediationRecipeResultOutput) KnowledgeBaseId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRemediationRecipeResult) string { return v.KnowledgeBaseId }).(pulumi.StringOutput)
}

// A network configuration defines the required network characteristics for the remediation run of the recipe to access the source repository and/or verify build services.
func (o LookupRemediationRecipeResultOutput) NetworkConfigurations() GetRemediationRecipeNetworkConfigurationArrayOutput {
	return o.ApplyT(func(v LookupRemediationRecipeResult) []GetRemediationRecipeNetworkConfiguration {
		return v.NetworkConfigurations
	}).(GetRemediationRecipeNetworkConfigurationArrayOutput)
}

func (o LookupRemediationRecipeResultOutput) RemediationRecipeId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRemediationRecipeResult) string { return v.RemediationRecipeId }).(pulumi.StringOutput)
}

// A configuration for the Source Code Management tool/platform used by a remediation recipe.
func (o LookupRemediationRecipeResultOutput) ScmConfigurations() GetRemediationRecipeScmConfigurationArrayOutput {
	return o.ApplyT(func(v LookupRemediationRecipeResult) []GetRemediationRecipeScmConfiguration {
		return v.ScmConfigurations
	}).(GetRemediationRecipeScmConfigurationArrayOutput)
}

// The current lifecycle state of the Remediation Recipe.
func (o LookupRemediationRecipeResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRemediationRecipeResult) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupRemediationRecipeResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupRemediationRecipeResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The creation date and time of the Remediation Recipe (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
func (o LookupRemediationRecipeResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRemediationRecipeResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the Remediation Recipe was last updated (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
func (o LookupRemediationRecipeResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRemediationRecipeResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// The Verify stage configuration specifies a build service to run a pipeline for the recommended code changes. The build pipeline will be initiated to ensure that there is no breaking change after the dependency versions have been updated in source to avoid vulnerabilities.
func (o LookupRemediationRecipeResultOutput) VerifyConfigurations() GetRemediationRecipeVerifyConfigurationArrayOutput {
	return o.ApplyT(func(v LookupRemediationRecipeResult) []GetRemediationRecipeVerifyConfiguration {
		return v.VerifyConfigurations
	}).(GetRemediationRecipeVerifyConfigurationArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRemediationRecipeResultOutput{})
}
