// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package adm

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Knowledge Base resource in Oracle Cloud Infrastructure Adm service.
//
// Creates a new Knowledge Base.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Adm"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Adm.NewKnowledgeBase(ctx, "testKnowledgeBase", &Adm.KnowledgeBaseArgs{
//				CompartmentId: pulumi.Any(_var.Compartment_id),
//				DefinedTags: pulumi.Map{
//					"foo-namespace.bar-key": pulumi.Any("value"),
//				},
//				DisplayName: pulumi.Any(_var.Knowledge_base_display_name),
//				FreeformTags: pulumi.Map{
//					"bar-key": pulumi.Any("value"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// KnowledgeBases can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:Adm/knowledgeBase:KnowledgeBase test_knowledge_base "id"
//
// ```
type KnowledgeBase struct {
	pulumi.CustomResourceState

	// (Updatable) The compartment Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the knowledge base.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) The name of the knowledge base.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// The current lifecycle state of the knowledge base.
	State pulumi.StringOutput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapOutput `pulumi:"systemTags"`
	// The creation date and time of the knowledge base (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The date and time the knowledge base was last updated (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewKnowledgeBase registers a new resource with the given unique name, arguments, and options.
func NewKnowledgeBase(ctx *pulumi.Context,
	name string, args *KnowledgeBaseArgs, opts ...pulumi.ResourceOption) (*KnowledgeBase, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource KnowledgeBase
	err := ctx.RegisterResource("oci:Adm/knowledgeBase:KnowledgeBase", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKnowledgeBase gets an existing KnowledgeBase resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKnowledgeBase(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KnowledgeBaseState, opts ...pulumi.ResourceOption) (*KnowledgeBase, error) {
	var resource KnowledgeBase
	err := ctx.ReadResource("oci:Adm/knowledgeBase:KnowledgeBase", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KnowledgeBase resources.
type knowledgeBaseState struct {
	// (Updatable) The compartment Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the knowledge base.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The name of the knowledge base.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The current lifecycle state of the knowledge base.
	State *string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The creation date and time of the knowledge base (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the knowledge base was last updated (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type KnowledgeBaseState struct {
	// (Updatable) The compartment Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the knowledge base.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) The name of the knowledge base.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	FreeformTags pulumi.MapInput
	// The current lifecycle state of the knowledge base.
	State pulumi.StringPtrInput
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput
	// The creation date and time of the knowledge base (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
	TimeCreated pulumi.StringPtrInput
	// The date and time the knowledge base was last updated (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
	TimeUpdated pulumi.StringPtrInput
}

func (KnowledgeBaseState) ElementType() reflect.Type {
	return reflect.TypeOf((*knowledgeBaseState)(nil)).Elem()
}

type knowledgeBaseArgs struct {
	// (Updatable) The compartment Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the knowledge base.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The name of the knowledge base.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
}

// The set of arguments for constructing a KnowledgeBase resource.
type KnowledgeBaseArgs struct {
	// (Updatable) The compartment Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the knowledge base.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) The name of the knowledge base.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	FreeformTags pulumi.MapInput
}

func (KnowledgeBaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*knowledgeBaseArgs)(nil)).Elem()
}

type KnowledgeBaseInput interface {
	pulumi.Input

	ToKnowledgeBaseOutput() KnowledgeBaseOutput
	ToKnowledgeBaseOutputWithContext(ctx context.Context) KnowledgeBaseOutput
}

func (*KnowledgeBase) ElementType() reflect.Type {
	return reflect.TypeOf((**KnowledgeBase)(nil)).Elem()
}

func (i *KnowledgeBase) ToKnowledgeBaseOutput() KnowledgeBaseOutput {
	return i.ToKnowledgeBaseOutputWithContext(context.Background())
}

func (i *KnowledgeBase) ToKnowledgeBaseOutputWithContext(ctx context.Context) KnowledgeBaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBaseOutput)
}

// KnowledgeBaseArrayInput is an input type that accepts KnowledgeBaseArray and KnowledgeBaseArrayOutput values.
// You can construct a concrete instance of `KnowledgeBaseArrayInput` via:
//
//	KnowledgeBaseArray{ KnowledgeBaseArgs{...} }
type KnowledgeBaseArrayInput interface {
	pulumi.Input

	ToKnowledgeBaseArrayOutput() KnowledgeBaseArrayOutput
	ToKnowledgeBaseArrayOutputWithContext(context.Context) KnowledgeBaseArrayOutput
}

type KnowledgeBaseArray []KnowledgeBaseInput

func (KnowledgeBaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KnowledgeBase)(nil)).Elem()
}

func (i KnowledgeBaseArray) ToKnowledgeBaseArrayOutput() KnowledgeBaseArrayOutput {
	return i.ToKnowledgeBaseArrayOutputWithContext(context.Background())
}

func (i KnowledgeBaseArray) ToKnowledgeBaseArrayOutputWithContext(ctx context.Context) KnowledgeBaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBaseArrayOutput)
}

// KnowledgeBaseMapInput is an input type that accepts KnowledgeBaseMap and KnowledgeBaseMapOutput values.
// You can construct a concrete instance of `KnowledgeBaseMapInput` via:
//
//	KnowledgeBaseMap{ "key": KnowledgeBaseArgs{...} }
type KnowledgeBaseMapInput interface {
	pulumi.Input

	ToKnowledgeBaseMapOutput() KnowledgeBaseMapOutput
	ToKnowledgeBaseMapOutputWithContext(context.Context) KnowledgeBaseMapOutput
}

type KnowledgeBaseMap map[string]KnowledgeBaseInput

func (KnowledgeBaseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KnowledgeBase)(nil)).Elem()
}

func (i KnowledgeBaseMap) ToKnowledgeBaseMapOutput() KnowledgeBaseMapOutput {
	return i.ToKnowledgeBaseMapOutputWithContext(context.Background())
}

func (i KnowledgeBaseMap) ToKnowledgeBaseMapOutputWithContext(ctx context.Context) KnowledgeBaseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBaseMapOutput)
}

type KnowledgeBaseOutput struct{ *pulumi.OutputState }

func (KnowledgeBaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KnowledgeBase)(nil)).Elem()
}

func (o KnowledgeBaseOutput) ToKnowledgeBaseOutput() KnowledgeBaseOutput {
	return o
}

func (o KnowledgeBaseOutput) ToKnowledgeBaseOutputWithContext(ctx context.Context) KnowledgeBaseOutput {
	return o
}

// (Updatable) The compartment Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the knowledge base.
func (o KnowledgeBaseOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *KnowledgeBase) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o KnowledgeBaseOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v *KnowledgeBase) pulumi.MapOutput { return v.DefinedTags }).(pulumi.MapOutput)
}

// (Updatable) The name of the knowledge base.
func (o KnowledgeBaseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *KnowledgeBase) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o KnowledgeBaseOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v *KnowledgeBase) pulumi.MapOutput { return v.FreeformTags }).(pulumi.MapOutput)
}

// The current lifecycle state of the knowledge base.
func (o KnowledgeBaseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *KnowledgeBase) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o KnowledgeBaseOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v *KnowledgeBase) pulumi.MapOutput { return v.SystemTags }).(pulumi.MapOutput)
}

// The creation date and time of the knowledge base (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
func (o KnowledgeBaseOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *KnowledgeBase) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the knowledge base was last updated (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
func (o KnowledgeBaseOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *KnowledgeBase) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

type KnowledgeBaseArrayOutput struct{ *pulumi.OutputState }

func (KnowledgeBaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KnowledgeBase)(nil)).Elem()
}

func (o KnowledgeBaseArrayOutput) ToKnowledgeBaseArrayOutput() KnowledgeBaseArrayOutput {
	return o
}

func (o KnowledgeBaseArrayOutput) ToKnowledgeBaseArrayOutputWithContext(ctx context.Context) KnowledgeBaseArrayOutput {
	return o
}

func (o KnowledgeBaseArrayOutput) Index(i pulumi.IntInput) KnowledgeBaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *KnowledgeBase {
		return vs[0].([]*KnowledgeBase)[vs[1].(int)]
	}).(KnowledgeBaseOutput)
}

type KnowledgeBaseMapOutput struct{ *pulumi.OutputState }

func (KnowledgeBaseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KnowledgeBase)(nil)).Elem()
}

func (o KnowledgeBaseMapOutput) ToKnowledgeBaseMapOutput() KnowledgeBaseMapOutput {
	return o
}

func (o KnowledgeBaseMapOutput) ToKnowledgeBaseMapOutputWithContext(ctx context.Context) KnowledgeBaseMapOutput {
	return o
}

func (o KnowledgeBaseMapOutput) MapIndex(k pulumi.StringInput) KnowledgeBaseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *KnowledgeBase {
		return vs[0].(map[string]*KnowledgeBase)[vs[1].(string)]
	}).(KnowledgeBaseOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KnowledgeBaseInput)(nil)).Elem(), &KnowledgeBase{})
	pulumi.RegisterInputType(reflect.TypeOf((*KnowledgeBaseArrayInput)(nil)).Elem(), KnowledgeBaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KnowledgeBaseMapInput)(nil)).Elem(), KnowledgeBaseMap{})
	pulumi.RegisterOutputType(KnowledgeBaseOutput{})
	pulumi.RegisterOutputType(KnowledgeBaseArrayOutput{})
	pulumi.RegisterOutputType(KnowledgeBaseMapOutput{})
}
