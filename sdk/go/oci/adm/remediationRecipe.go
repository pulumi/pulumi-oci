// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package adm

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Remediation Recipe resource in Oracle Cloud Infrastructure Adm service.
//
// Creates a new Remediation Recipe.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/adm"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := adm.NewRemediationRecipe(ctx, "test_remediation_recipe", &adm.RemediationRecipeArgs{
//				CompartmentId: pulumi.Any(compartmentId),
//				DetectConfiguration: &adm.RemediationRecipeDetectConfigurationArgs{
//					Exclusions:                pulumi.Any(remediationRecipeDetectConfigurationExclusions),
//					MaxPermissibleCvssV2score: pulumi.Any(remediationRecipeDetectConfigurationMaxPermissibleCvssV2score),
//					MaxPermissibleCvssV3score: pulumi.Any(remediationRecipeDetectConfigurationMaxPermissibleCvssV3score),
//					MaxPermissibleSeverity:    pulumi.Any(remediationRecipeDetectConfigurationMaxPermissibleSeverity),
//					UpgradePolicy:             pulumi.Any(remediationRecipeDetectConfigurationUpgradePolicy),
//				},
//				IsRunTriggeredOnKbChange: pulumi.Any(remediationRecipeIsRunTriggeredOnKbChange),
//				KnowledgeBaseId:          pulumi.Any(testKnowledgeBase.Id),
//				NetworkConfiguration: &adm.RemediationRecipeNetworkConfigurationArgs{
//					SubnetId: pulumi.Any(testSubnet.Id),
//					NsgIds:   pulumi.Any(remediationRecipeNetworkConfigurationNsgIds),
//				},
//				ScmConfiguration: &adm.RemediationRecipeScmConfigurationArgs{
//					Branch:              pulumi.Any(remediationRecipeScmConfigurationBranch),
//					IsAutomergeEnabled:  pulumi.Any(remediationRecipeScmConfigurationIsAutomergeEnabled),
//					ScmType:             pulumi.Any(remediationRecipeScmConfigurationScmType),
//					BuildFileLocation:   pulumi.Any(remediationRecipeScmConfigurationBuildFileLocation),
//					ExternalScmType:     pulumi.Any(remediationRecipeScmConfigurationExternalScmType),
//					OciCodeRepositoryId: pulumi.Any(testRepository.Id),
//					PatSecretId:         pulumi.Any(testSecret.Id),
//					RepositoryUrl:       pulumi.Any(remediationRecipeScmConfigurationRepositoryUrl),
//					Username:            pulumi.Any(remediationRecipeScmConfigurationUsername),
//				},
//				VerifyConfiguration: &adm.RemediationRecipeVerifyConfigurationArgs{
//					BuildServiceType:     pulumi.Any(remediationRecipeVerifyConfigurationBuildServiceType),
//					AdditionalParameters: pulumi.Any(remediationRecipeVerifyConfigurationAdditionalParameters),
//					JenkinsUrl:           pulumi.Any(remediationRecipeVerifyConfigurationJenkinsUrl),
//					JobName:              pulumi.Any(testJob.Name),
//					PatSecretId:          pulumi.Any(testSecret.Id),
//					PipelineId:           pulumi.Any(testPipeline.Id),
//					RepositoryUrl:        pulumi.Any(remediationRecipeVerifyConfigurationRepositoryUrl),
//					TriggerSecretId:      pulumi.Any(testSecret.Id),
//					Username:             pulumi.Any(remediationRecipeVerifyConfigurationUsername),
//					WorkflowName:         pulumi.Any(remediationRecipeVerifyConfigurationWorkflowName),
//				},
//				DefinedTags: pulumi.StringMap{
//					"foo-namespace.bar-key": pulumi.String("value"),
//				},
//				DisplayName: pulumi.Any(remediationRecipeDisplayName),
//				FreeformTags: pulumi.StringMap{
//					"bar-key": pulumi.String("value"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// RemediationRecipes can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:Adm/remediationRecipe:RemediationRecipe test_remediation_recipe "id"
// ```
type RemediationRecipe struct {
	pulumi.CustomResourceState

	// (Updatable) The compartment Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the remediation recipe.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapOutput `pulumi:"definedTags"`
	// (Updatable) A configuration to define the constraints when detecting vulnerable dependencies.
	DetectConfiguration RemediationRecipeDetectConfigurationOutput `pulumi:"detectConfiguration"`
	// (Updatable) The name of the remediation recipe.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapOutput `pulumi:"freeformTags"`
	// (Updatable) Boolean indicating if a run should be automatically triggered once the knowledge base is updated.
	IsRunTriggeredOnKbChange pulumi.BoolOutput `pulumi:"isRunTriggeredOnKbChange"`
	// (Updatable) The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the knowledge base.
	KnowledgeBaseId pulumi.StringOutput `pulumi:"knowledgeBaseId"`
	// (Updatable) A network configuration defines the required network characteristics for an ADM remediation recipe. A network configuration is required if the build service is one of: GitHub Actions, GitLab Pipeline, or Jenkins Pipeline.
	NetworkConfiguration RemediationRecipeNetworkConfigurationOutput `pulumi:"networkConfiguration"`
	// (Updatable) A configuration for the Source Code Management tool/platform used by a remediation recipe.
	ScmConfiguration RemediationRecipeScmConfigurationOutput `pulumi:"scmConfiguration"`
	// (Updatable) The target state for the Remediation Recipe. Could be set to `ACTIVE` or `INACTIVE`.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	State pulumi.StringOutput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapOutput `pulumi:"systemTags"`
	// The creation date and time of the Remediation Recipe (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The date and time the Remediation Recipe was last updated (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
	// (Updatable) The Verify stage configuration specifies a build service to run a pipeline for the recommended code changes. The build pipeline will be initiated to ensure that there is no breaking change after the dependency versions have been updated in source to avoid vulnerabilities.
	VerifyConfiguration RemediationRecipeVerifyConfigurationOutput `pulumi:"verifyConfiguration"`
}

// NewRemediationRecipe registers a new resource with the given unique name, arguments, and options.
func NewRemediationRecipe(ctx *pulumi.Context,
	name string, args *RemediationRecipeArgs, opts ...pulumi.ResourceOption) (*RemediationRecipe, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.DetectConfiguration == nil {
		return nil, errors.New("invalid value for required argument 'DetectConfiguration'")
	}
	if args.IsRunTriggeredOnKbChange == nil {
		return nil, errors.New("invalid value for required argument 'IsRunTriggeredOnKbChange'")
	}
	if args.KnowledgeBaseId == nil {
		return nil, errors.New("invalid value for required argument 'KnowledgeBaseId'")
	}
	if args.NetworkConfiguration == nil {
		return nil, errors.New("invalid value for required argument 'NetworkConfiguration'")
	}
	if args.ScmConfiguration == nil {
		return nil, errors.New("invalid value for required argument 'ScmConfiguration'")
	}
	if args.VerifyConfiguration == nil {
		return nil, errors.New("invalid value for required argument 'VerifyConfiguration'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RemediationRecipe
	err := ctx.RegisterResource("oci:Adm/remediationRecipe:RemediationRecipe", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRemediationRecipe gets an existing RemediationRecipe resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRemediationRecipe(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RemediationRecipeState, opts ...pulumi.ResourceOption) (*RemediationRecipe, error) {
	var resource RemediationRecipe
	err := ctx.ReadResource("oci:Adm/remediationRecipe:RemediationRecipe", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RemediationRecipe resources.
type remediationRecipeState struct {
	// (Updatable) The compartment Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the remediation recipe.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) A configuration to define the constraints when detecting vulnerable dependencies.
	DetectConfiguration *RemediationRecipeDetectConfiguration `pulumi:"detectConfiguration"`
	// (Updatable) The name of the remediation recipe.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// (Updatable) Boolean indicating if a run should be automatically triggered once the knowledge base is updated.
	IsRunTriggeredOnKbChange *bool `pulumi:"isRunTriggeredOnKbChange"`
	// (Updatable) The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the knowledge base.
	KnowledgeBaseId *string `pulumi:"knowledgeBaseId"`
	// (Updatable) A network configuration defines the required network characteristics for an ADM remediation recipe. A network configuration is required if the build service is one of: GitHub Actions, GitLab Pipeline, or Jenkins Pipeline.
	NetworkConfiguration *RemediationRecipeNetworkConfiguration `pulumi:"networkConfiguration"`
	// (Updatable) A configuration for the Source Code Management tool/platform used by a remediation recipe.
	ScmConfiguration *RemediationRecipeScmConfiguration `pulumi:"scmConfiguration"`
	// (Updatable) The target state for the Remediation Recipe. Could be set to `ACTIVE` or `INACTIVE`.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	State *string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The creation date and time of the Remediation Recipe (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the Remediation Recipe was last updated (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
	TimeUpdated *string `pulumi:"timeUpdated"`
	// (Updatable) The Verify stage configuration specifies a build service to run a pipeline for the recommended code changes. The build pipeline will be initiated to ensure that there is no breaking change after the dependency versions have been updated in source to avoid vulnerabilities.
	VerifyConfiguration *RemediationRecipeVerifyConfiguration `pulumi:"verifyConfiguration"`
}

type RemediationRecipeState struct {
	// (Updatable) The compartment Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the remediation recipe.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) A configuration to define the constraints when detecting vulnerable dependencies.
	DetectConfiguration RemediationRecipeDetectConfigurationPtrInput
	// (Updatable) The name of the remediation recipe.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput
	// (Updatable) Boolean indicating if a run should be automatically triggered once the knowledge base is updated.
	IsRunTriggeredOnKbChange pulumi.BoolPtrInput
	// (Updatable) The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the knowledge base.
	KnowledgeBaseId pulumi.StringPtrInput
	// (Updatable) A network configuration defines the required network characteristics for an ADM remediation recipe. A network configuration is required if the build service is one of: GitHub Actions, GitLab Pipeline, or Jenkins Pipeline.
	NetworkConfiguration RemediationRecipeNetworkConfigurationPtrInput
	// (Updatable) A configuration for the Source Code Management tool/platform used by a remediation recipe.
	ScmConfiguration RemediationRecipeScmConfigurationPtrInput
	// (Updatable) The target state for the Remediation Recipe. Could be set to `ACTIVE` or `INACTIVE`.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	State pulumi.StringPtrInput
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput
	// The creation date and time of the Remediation Recipe (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
	TimeCreated pulumi.StringPtrInput
	// The date and time the Remediation Recipe was last updated (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
	TimeUpdated pulumi.StringPtrInput
	// (Updatable) The Verify stage configuration specifies a build service to run a pipeline for the recommended code changes. The build pipeline will be initiated to ensure that there is no breaking change after the dependency versions have been updated in source to avoid vulnerabilities.
	VerifyConfiguration RemediationRecipeVerifyConfigurationPtrInput
}

func (RemediationRecipeState) ElementType() reflect.Type {
	return reflect.TypeOf((*remediationRecipeState)(nil)).Elem()
}

type remediationRecipeArgs struct {
	// (Updatable) The compartment Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the remediation recipe.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) A configuration to define the constraints when detecting vulnerable dependencies.
	DetectConfiguration RemediationRecipeDetectConfiguration `pulumi:"detectConfiguration"`
	// (Updatable) The name of the remediation recipe.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// (Updatable) Boolean indicating if a run should be automatically triggered once the knowledge base is updated.
	IsRunTriggeredOnKbChange bool `pulumi:"isRunTriggeredOnKbChange"`
	// (Updatable) The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the knowledge base.
	KnowledgeBaseId string `pulumi:"knowledgeBaseId"`
	// (Updatable) A network configuration defines the required network characteristics for an ADM remediation recipe. A network configuration is required if the build service is one of: GitHub Actions, GitLab Pipeline, or Jenkins Pipeline.
	NetworkConfiguration RemediationRecipeNetworkConfiguration `pulumi:"networkConfiguration"`
	// (Updatable) A configuration for the Source Code Management tool/platform used by a remediation recipe.
	ScmConfiguration RemediationRecipeScmConfiguration `pulumi:"scmConfiguration"`
	// (Updatable) The target state for the Remediation Recipe. Could be set to `ACTIVE` or `INACTIVE`.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	State *string `pulumi:"state"`
	// (Updatable) The Verify stage configuration specifies a build service to run a pipeline for the recommended code changes. The build pipeline will be initiated to ensure that there is no breaking change after the dependency versions have been updated in source to avoid vulnerabilities.
	VerifyConfiguration RemediationRecipeVerifyConfiguration `pulumi:"verifyConfiguration"`
}

// The set of arguments for constructing a RemediationRecipe resource.
type RemediationRecipeArgs struct {
	// (Updatable) The compartment Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the remediation recipe.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) A configuration to define the constraints when detecting vulnerable dependencies.
	DetectConfiguration RemediationRecipeDetectConfigurationInput
	// (Updatable) The name of the remediation recipe.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput
	// (Updatable) Boolean indicating if a run should be automatically triggered once the knowledge base is updated.
	IsRunTriggeredOnKbChange pulumi.BoolInput
	// (Updatable) The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the knowledge base.
	KnowledgeBaseId pulumi.StringInput
	// (Updatable) A network configuration defines the required network characteristics for an ADM remediation recipe. A network configuration is required if the build service is one of: GitHub Actions, GitLab Pipeline, or Jenkins Pipeline.
	NetworkConfiguration RemediationRecipeNetworkConfigurationInput
	// (Updatable) A configuration for the Source Code Management tool/platform used by a remediation recipe.
	ScmConfiguration RemediationRecipeScmConfigurationInput
	// (Updatable) The target state for the Remediation Recipe. Could be set to `ACTIVE` or `INACTIVE`.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	State pulumi.StringPtrInput
	// (Updatable) The Verify stage configuration specifies a build service to run a pipeline for the recommended code changes. The build pipeline will be initiated to ensure that there is no breaking change after the dependency versions have been updated in source to avoid vulnerabilities.
	VerifyConfiguration RemediationRecipeVerifyConfigurationInput
}

func (RemediationRecipeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*remediationRecipeArgs)(nil)).Elem()
}

type RemediationRecipeInput interface {
	pulumi.Input

	ToRemediationRecipeOutput() RemediationRecipeOutput
	ToRemediationRecipeOutputWithContext(ctx context.Context) RemediationRecipeOutput
}

func (*RemediationRecipe) ElementType() reflect.Type {
	return reflect.TypeOf((**RemediationRecipe)(nil)).Elem()
}

func (i *RemediationRecipe) ToRemediationRecipeOutput() RemediationRecipeOutput {
	return i.ToRemediationRecipeOutputWithContext(context.Background())
}

func (i *RemediationRecipe) ToRemediationRecipeOutputWithContext(ctx context.Context) RemediationRecipeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemediationRecipeOutput)
}

// RemediationRecipeArrayInput is an input type that accepts RemediationRecipeArray and RemediationRecipeArrayOutput values.
// You can construct a concrete instance of `RemediationRecipeArrayInput` via:
//
//	RemediationRecipeArray{ RemediationRecipeArgs{...} }
type RemediationRecipeArrayInput interface {
	pulumi.Input

	ToRemediationRecipeArrayOutput() RemediationRecipeArrayOutput
	ToRemediationRecipeArrayOutputWithContext(context.Context) RemediationRecipeArrayOutput
}

type RemediationRecipeArray []RemediationRecipeInput

func (RemediationRecipeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RemediationRecipe)(nil)).Elem()
}

func (i RemediationRecipeArray) ToRemediationRecipeArrayOutput() RemediationRecipeArrayOutput {
	return i.ToRemediationRecipeArrayOutputWithContext(context.Background())
}

func (i RemediationRecipeArray) ToRemediationRecipeArrayOutputWithContext(ctx context.Context) RemediationRecipeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemediationRecipeArrayOutput)
}

// RemediationRecipeMapInput is an input type that accepts RemediationRecipeMap and RemediationRecipeMapOutput values.
// You can construct a concrete instance of `RemediationRecipeMapInput` via:
//
//	RemediationRecipeMap{ "key": RemediationRecipeArgs{...} }
type RemediationRecipeMapInput interface {
	pulumi.Input

	ToRemediationRecipeMapOutput() RemediationRecipeMapOutput
	ToRemediationRecipeMapOutputWithContext(context.Context) RemediationRecipeMapOutput
}

type RemediationRecipeMap map[string]RemediationRecipeInput

func (RemediationRecipeMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RemediationRecipe)(nil)).Elem()
}

func (i RemediationRecipeMap) ToRemediationRecipeMapOutput() RemediationRecipeMapOutput {
	return i.ToRemediationRecipeMapOutputWithContext(context.Background())
}

func (i RemediationRecipeMap) ToRemediationRecipeMapOutputWithContext(ctx context.Context) RemediationRecipeMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemediationRecipeMapOutput)
}

type RemediationRecipeOutput struct{ *pulumi.OutputState }

func (RemediationRecipeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RemediationRecipe)(nil)).Elem()
}

func (o RemediationRecipeOutput) ToRemediationRecipeOutput() RemediationRecipeOutput {
	return o
}

func (o RemediationRecipeOutput) ToRemediationRecipeOutputWithContext(ctx context.Context) RemediationRecipeOutput {
	return o
}

// (Updatable) The compartment Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the remediation recipe.
func (o RemediationRecipeOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *RemediationRecipe) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o RemediationRecipeOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RemediationRecipe) pulumi.StringMapOutput { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// (Updatable) A configuration to define the constraints when detecting vulnerable dependencies.
func (o RemediationRecipeOutput) DetectConfiguration() RemediationRecipeDetectConfigurationOutput {
	return o.ApplyT(func(v *RemediationRecipe) RemediationRecipeDetectConfigurationOutput { return v.DetectConfiguration }).(RemediationRecipeDetectConfigurationOutput)
}

// (Updatable) The name of the remediation recipe.
func (o RemediationRecipeOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *RemediationRecipe) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o RemediationRecipeOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RemediationRecipe) pulumi.StringMapOutput { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// (Updatable) Boolean indicating if a run should be automatically triggered once the knowledge base is updated.
func (o RemediationRecipeOutput) IsRunTriggeredOnKbChange() pulumi.BoolOutput {
	return o.ApplyT(func(v *RemediationRecipe) pulumi.BoolOutput { return v.IsRunTriggeredOnKbChange }).(pulumi.BoolOutput)
}

// (Updatable) The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the knowledge base.
func (o RemediationRecipeOutput) KnowledgeBaseId() pulumi.StringOutput {
	return o.ApplyT(func(v *RemediationRecipe) pulumi.StringOutput { return v.KnowledgeBaseId }).(pulumi.StringOutput)
}

// (Updatable) A network configuration defines the required network characteristics for an ADM remediation recipe. A network configuration is required if the build service is one of: GitHub Actions, GitLab Pipeline, or Jenkins Pipeline.
func (o RemediationRecipeOutput) NetworkConfiguration() RemediationRecipeNetworkConfigurationOutput {
	return o.ApplyT(func(v *RemediationRecipe) RemediationRecipeNetworkConfigurationOutput { return v.NetworkConfiguration }).(RemediationRecipeNetworkConfigurationOutput)
}

// (Updatable) A configuration for the Source Code Management tool/platform used by a remediation recipe.
func (o RemediationRecipeOutput) ScmConfiguration() RemediationRecipeScmConfigurationOutput {
	return o.ApplyT(func(v *RemediationRecipe) RemediationRecipeScmConfigurationOutput { return v.ScmConfiguration }).(RemediationRecipeScmConfigurationOutput)
}

// (Updatable) The target state for the Remediation Recipe. Could be set to `ACTIVE` or `INACTIVE`.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o RemediationRecipeOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *RemediationRecipe) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o RemediationRecipeOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RemediationRecipe) pulumi.StringMapOutput { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The creation date and time of the Remediation Recipe (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
func (o RemediationRecipeOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *RemediationRecipe) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the Remediation Recipe was last updated (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
func (o RemediationRecipeOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *RemediationRecipe) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

// (Updatable) The Verify stage configuration specifies a build service to run a pipeline for the recommended code changes. The build pipeline will be initiated to ensure that there is no breaking change after the dependency versions have been updated in source to avoid vulnerabilities.
func (o RemediationRecipeOutput) VerifyConfiguration() RemediationRecipeVerifyConfigurationOutput {
	return o.ApplyT(func(v *RemediationRecipe) RemediationRecipeVerifyConfigurationOutput { return v.VerifyConfiguration }).(RemediationRecipeVerifyConfigurationOutput)
}

type RemediationRecipeArrayOutput struct{ *pulumi.OutputState }

func (RemediationRecipeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RemediationRecipe)(nil)).Elem()
}

func (o RemediationRecipeArrayOutput) ToRemediationRecipeArrayOutput() RemediationRecipeArrayOutput {
	return o
}

func (o RemediationRecipeArrayOutput) ToRemediationRecipeArrayOutputWithContext(ctx context.Context) RemediationRecipeArrayOutput {
	return o
}

func (o RemediationRecipeArrayOutput) Index(i pulumi.IntInput) RemediationRecipeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RemediationRecipe {
		return vs[0].([]*RemediationRecipe)[vs[1].(int)]
	}).(RemediationRecipeOutput)
}

type RemediationRecipeMapOutput struct{ *pulumi.OutputState }

func (RemediationRecipeMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RemediationRecipe)(nil)).Elem()
}

func (o RemediationRecipeMapOutput) ToRemediationRecipeMapOutput() RemediationRecipeMapOutput {
	return o
}

func (o RemediationRecipeMapOutput) ToRemediationRecipeMapOutputWithContext(ctx context.Context) RemediationRecipeMapOutput {
	return o
}

func (o RemediationRecipeMapOutput) MapIndex(k pulumi.StringInput) RemediationRecipeOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RemediationRecipe {
		return vs[0].(map[string]*RemediationRecipe)[vs[1].(string)]
	}).(RemediationRecipeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RemediationRecipeInput)(nil)).Elem(), &RemediationRecipe{})
	pulumi.RegisterInputType(reflect.TypeOf((*RemediationRecipeArrayInput)(nil)).Elem(), RemediationRecipeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RemediationRecipeMapInput)(nil)).Elem(), RemediationRecipeMap{})
	pulumi.RegisterOutputType(RemediationRecipeOutput{})
	pulumi.RegisterOutputType(RemediationRecipeArrayOutput{})
	pulumi.RegisterOutputType(RemediationRecipeMapOutput{})
}
