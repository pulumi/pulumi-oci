// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package adm

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Vulnerability Audit resource in Oracle Cloud Infrastructure Adm service.
//
// Creates a new Vulnerability Audit by providing a tree of Application Dependencies.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Adm"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Adm.NewVulnerabilityAudit(ctx, "testVulnerabilityAudit", &Adm.VulnerabilityAuditArgs{
//				BuildType:       pulumi.Any(_var.Vulnerability_audit_build_type),
//				KnowledgeBaseId: pulumi.Any(oci_adm_knowledge_base.Test_knowledge_base.Id),
//				ApplicationDependencies: adm.VulnerabilityAuditApplicationDependencyArray{
//					&adm.VulnerabilityAuditApplicationDependencyArgs{
//						Gav:                          pulumi.Any(_var.Vulnerability_audit_application_dependencies_gav),
//						NodeId:                       pulumi.Any(oci_adm_node.Test_node.Id),
//						ApplicationDependencyNodeIds: pulumi.Any(_var.Vulnerability_audit_application_dependencies_application_dependency_node_ids),
//					},
//				},
//				CompartmentId: pulumi.Any(_var.Compartment_id),
//				Configuration: &adm.VulnerabilityAuditConfigurationArgs{
//					Exclusions:                pulumi.Any(_var.Vulnerability_audit_configuration_exclusions),
//					MaxPermissibleCvssV2score: pulumi.Any(_var.Vulnerability_audit_configuration_max_permissible_cvss_v2score),
//					MaxPermissibleCvssV3score: pulumi.Any(_var.Vulnerability_audit_configuration_max_permissible_cvss_v3score),
//				},
//				DefinedTags: pulumi.AnyMap{
//					"foo-namespace.bar-key": pulumi.Any("value"),
//				},
//				DisplayName: pulumi.Any(_var.Vulnerability_audit_display_name),
//				FreeformTags: pulumi.AnyMap{
//					"bar-key": pulumi.Any("value"),
//				},
//				Source: &adm.VulnerabilityAuditSourceArgs{
//					Type:          pulumi.Any(_var.Vulnerability_audit_source_type),
//					Description:   pulumi.Any(_var.Vulnerability_audit_source_description),
//					OciResourceId: pulumi.Any(oci_adm_oci_resource.Test_oci_resource.Id),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// VulnerabilityAudits can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:Adm/vulnerabilityAudit:VulnerabilityAudit test_vulnerability_audit "id"
//
// ```
type VulnerabilityAudit struct {
	pulumi.CustomResourceState

	// List of Application Dependencies (without vulnerabilities).
	ApplicationDependencies VulnerabilityAuditApplicationDependencyArrayOutput `pulumi:"applicationDependencies"`
	// The type of the build tool.
	BuildType pulumi.StringOutput `pulumi:"buildType"`
	// (Updatable) The Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the compartment associated with the Vulnerability Audit.  If compartment identifier is not provided the compartment of the associated Knowledge Base will be used instead.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// Configuration for a Vulnerability Audit. A vulnerable Application Dependency is ignored if its name does match any of the items in `exclusions`, or all of the associated Vulnerabilies have a CVSS v2 score below `maxPermissibleCvssV2Score` and a CVSS v3 score below `maxPermissibleCvssV3Score`. type: object
	Configuration VulnerabilityAuditConfigurationOutput `pulumi:"configuration"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) The name of the Vulnerability Audit.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// Indicates if an audit succeeded according to the configuration. The value is `null` if the audit is in the `CREATING` state.
	IsSuccess pulumi.BoolOutput `pulumi:"isSuccess"`
	// The Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the Knowledge Base.
	KnowledgeBaseId pulumi.StringOutput `pulumi:"knowledgeBaseId"`
	// Maximum Common Vulnerability Scoring System Version 2 score observed for non-ignored vulnerable Application Dependencies.
	MaxObservedCvssV2score pulumi.Float64Output `pulumi:"maxObservedCvssV2score"`
	// Maximum Common Vulnerability Scoring System Version 2 score observed for vulnerable Application Dependencies including ignored ones.
	MaxObservedCvssV2scoreWithIgnored pulumi.Float64Output `pulumi:"maxObservedCvssV2scoreWithIgnored"`
	// Maximum Common Vulnerability Scoring System Version 3 score observed for non-ignored vulnerable Application Dependencies.
	MaxObservedCvssV3score pulumi.Float64Output `pulumi:"maxObservedCvssV3score"`
	// Maximum Common Vulnerability Scoring System Version 3 score observed for vulnerable Application Dependencies including ignored ones.
	MaxObservedCvssV3scoreWithIgnored pulumi.Float64Output `pulumi:"maxObservedCvssV3scoreWithIgnored"`
	// Vulnerability Audit source.
	Source VulnerabilityAuditSourceOutput `pulumi:"source"`
	// The current lifecycle state of the Vulnerability Audit.
	State pulumi.StringOutput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapOutput `pulumi:"systemTags"`
	// The creation date and time of the Vulnerability Audit (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The update date and time of the Vulnerability Audit (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
	// List of vulnerabilities found in the Vulnerability Audit.
	Vulnerabilities VulnerabilityAuditVulnerabilityArrayOutput `pulumi:"vulnerabilities"`
	// Count of non-ignored vulnerable Application Dependencies.
	VulnerableArtifactsCount pulumi.IntOutput `pulumi:"vulnerableArtifactsCount"`
	// Count of all vulnerable Application Dependencies.
	VulnerableArtifactsCountWithIgnored pulumi.IntOutput `pulumi:"vulnerableArtifactsCountWithIgnored"`
}

// NewVulnerabilityAudit registers a new resource with the given unique name, arguments, and options.
func NewVulnerabilityAudit(ctx *pulumi.Context,
	name string, args *VulnerabilityAuditArgs, opts ...pulumi.ResourceOption) (*VulnerabilityAudit, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BuildType == nil {
		return nil, errors.New("invalid value for required argument 'BuildType'")
	}
	if args.KnowledgeBaseId == nil {
		return nil, errors.New("invalid value for required argument 'KnowledgeBaseId'")
	}
	var resource VulnerabilityAudit
	err := ctx.RegisterResource("oci:Adm/vulnerabilityAudit:VulnerabilityAudit", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVulnerabilityAudit gets an existing VulnerabilityAudit resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVulnerabilityAudit(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VulnerabilityAuditState, opts ...pulumi.ResourceOption) (*VulnerabilityAudit, error) {
	var resource VulnerabilityAudit
	err := ctx.ReadResource("oci:Adm/vulnerabilityAudit:VulnerabilityAudit", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VulnerabilityAudit resources.
type vulnerabilityAuditState struct {
	// List of Application Dependencies (without vulnerabilities).
	ApplicationDependencies []VulnerabilityAuditApplicationDependency `pulumi:"applicationDependencies"`
	// The type of the build tool.
	BuildType *string `pulumi:"buildType"`
	// (Updatable) The Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the compartment associated with the Vulnerability Audit.  If compartment identifier is not provided the compartment of the associated Knowledge Base will be used instead.
	CompartmentId *string `pulumi:"compartmentId"`
	// Configuration for a Vulnerability Audit. A vulnerable Application Dependency is ignored if its name does match any of the items in `exclusions`, or all of the associated Vulnerabilies have a CVSS v2 score below `maxPermissibleCvssV2Score` and a CVSS v3 score below `maxPermissibleCvssV3Score`. type: object
	Configuration *VulnerabilityAuditConfiguration `pulumi:"configuration"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The name of the Vulnerability Audit.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Indicates if an audit succeeded according to the configuration. The value is `null` if the audit is in the `CREATING` state.
	IsSuccess *bool `pulumi:"isSuccess"`
	// The Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the Knowledge Base.
	KnowledgeBaseId *string `pulumi:"knowledgeBaseId"`
	// Maximum Common Vulnerability Scoring System Version 2 score observed for non-ignored vulnerable Application Dependencies.
	MaxObservedCvssV2score *float64 `pulumi:"maxObservedCvssV2score"`
	// Maximum Common Vulnerability Scoring System Version 2 score observed for vulnerable Application Dependencies including ignored ones.
	MaxObservedCvssV2scoreWithIgnored *float64 `pulumi:"maxObservedCvssV2scoreWithIgnored"`
	// Maximum Common Vulnerability Scoring System Version 3 score observed for non-ignored vulnerable Application Dependencies.
	MaxObservedCvssV3score *float64 `pulumi:"maxObservedCvssV3score"`
	// Maximum Common Vulnerability Scoring System Version 3 score observed for vulnerable Application Dependencies including ignored ones.
	MaxObservedCvssV3scoreWithIgnored *float64 `pulumi:"maxObservedCvssV3scoreWithIgnored"`
	// Vulnerability Audit source.
	Source *VulnerabilityAuditSource `pulumi:"source"`
	// The current lifecycle state of the Vulnerability Audit.
	State *string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The creation date and time of the Vulnerability Audit (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
	TimeCreated *string `pulumi:"timeCreated"`
	// The update date and time of the Vulnerability Audit (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
	TimeUpdated *string `pulumi:"timeUpdated"`
	// List of vulnerabilities found in the Vulnerability Audit.
	Vulnerabilities []VulnerabilityAuditVulnerability `pulumi:"vulnerabilities"`
	// Count of non-ignored vulnerable Application Dependencies.
	VulnerableArtifactsCount *int `pulumi:"vulnerableArtifactsCount"`
	// Count of all vulnerable Application Dependencies.
	VulnerableArtifactsCountWithIgnored *int `pulumi:"vulnerableArtifactsCountWithIgnored"`
}

type VulnerabilityAuditState struct {
	// List of Application Dependencies (without vulnerabilities).
	ApplicationDependencies VulnerabilityAuditApplicationDependencyArrayInput
	// The type of the build tool.
	BuildType pulumi.StringPtrInput
	// (Updatable) The Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the compartment associated with the Vulnerability Audit.  If compartment identifier is not provided the compartment of the associated Knowledge Base will be used instead.
	CompartmentId pulumi.StringPtrInput
	// Configuration for a Vulnerability Audit. A vulnerable Application Dependency is ignored if its name does match any of the items in `exclusions`, or all of the associated Vulnerabilies have a CVSS v2 score below `maxPermissibleCvssV2Score` and a CVSS v3 score below `maxPermissibleCvssV3Score`. type: object
	Configuration VulnerabilityAuditConfigurationPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) The name of the Vulnerability Audit.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// Indicates if an audit succeeded according to the configuration. The value is `null` if the audit is in the `CREATING` state.
	IsSuccess pulumi.BoolPtrInput
	// The Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the Knowledge Base.
	KnowledgeBaseId pulumi.StringPtrInput
	// Maximum Common Vulnerability Scoring System Version 2 score observed for non-ignored vulnerable Application Dependencies.
	MaxObservedCvssV2score pulumi.Float64PtrInput
	// Maximum Common Vulnerability Scoring System Version 2 score observed for vulnerable Application Dependencies including ignored ones.
	MaxObservedCvssV2scoreWithIgnored pulumi.Float64PtrInput
	// Maximum Common Vulnerability Scoring System Version 3 score observed for non-ignored vulnerable Application Dependencies.
	MaxObservedCvssV3score pulumi.Float64PtrInput
	// Maximum Common Vulnerability Scoring System Version 3 score observed for vulnerable Application Dependencies including ignored ones.
	MaxObservedCvssV3scoreWithIgnored pulumi.Float64PtrInput
	// Vulnerability Audit source.
	Source VulnerabilityAuditSourcePtrInput
	// The current lifecycle state of the Vulnerability Audit.
	State pulumi.StringPtrInput
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput
	// The creation date and time of the Vulnerability Audit (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
	TimeCreated pulumi.StringPtrInput
	// The update date and time of the Vulnerability Audit (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
	TimeUpdated pulumi.StringPtrInput
	// List of vulnerabilities found in the Vulnerability Audit.
	Vulnerabilities VulnerabilityAuditVulnerabilityArrayInput
	// Count of non-ignored vulnerable Application Dependencies.
	VulnerableArtifactsCount pulumi.IntPtrInput
	// Count of all vulnerable Application Dependencies.
	VulnerableArtifactsCountWithIgnored pulumi.IntPtrInput
}

func (VulnerabilityAuditState) ElementType() reflect.Type {
	return reflect.TypeOf((*vulnerabilityAuditState)(nil)).Elem()
}

type vulnerabilityAuditArgs struct {
	// List of Application Dependencies (without vulnerabilities).
	ApplicationDependencies []VulnerabilityAuditApplicationDependency `pulumi:"applicationDependencies"`
	// The type of the build tool.
	BuildType string `pulumi:"buildType"`
	// (Updatable) The Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the compartment associated with the Vulnerability Audit.  If compartment identifier is not provided the compartment of the associated Knowledge Base will be used instead.
	CompartmentId *string `pulumi:"compartmentId"`
	// Configuration for a Vulnerability Audit. A vulnerable Application Dependency is ignored if its name does match any of the items in `exclusions`, or all of the associated Vulnerabilies have a CVSS v2 score below `maxPermissibleCvssV2Score` and a CVSS v3 score below `maxPermissibleCvssV3Score`. type: object
	Configuration *VulnerabilityAuditConfiguration `pulumi:"configuration"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The name of the Vulnerability Audit.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the Knowledge Base.
	KnowledgeBaseId string `pulumi:"knowledgeBaseId"`
	// Vulnerability Audit source.
	Source *VulnerabilityAuditSource `pulumi:"source"`
}

// The set of arguments for constructing a VulnerabilityAudit resource.
type VulnerabilityAuditArgs struct {
	// List of Application Dependencies (without vulnerabilities).
	ApplicationDependencies VulnerabilityAuditApplicationDependencyArrayInput
	// The type of the build tool.
	BuildType pulumi.StringInput
	// (Updatable) The Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the compartment associated with the Vulnerability Audit.  If compartment identifier is not provided the compartment of the associated Knowledge Base will be used instead.
	CompartmentId pulumi.StringPtrInput
	// Configuration for a Vulnerability Audit. A vulnerable Application Dependency is ignored if its name does match any of the items in `exclusions`, or all of the associated Vulnerabilies have a CVSS v2 score below `maxPermissibleCvssV2Score` and a CVSS v3 score below `maxPermissibleCvssV3Score`. type: object
	Configuration VulnerabilityAuditConfigurationPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) The name of the Vulnerability Audit.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// The Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the Knowledge Base.
	KnowledgeBaseId pulumi.StringInput
	// Vulnerability Audit source.
	Source VulnerabilityAuditSourcePtrInput
}

func (VulnerabilityAuditArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vulnerabilityAuditArgs)(nil)).Elem()
}

type VulnerabilityAuditInput interface {
	pulumi.Input

	ToVulnerabilityAuditOutput() VulnerabilityAuditOutput
	ToVulnerabilityAuditOutputWithContext(ctx context.Context) VulnerabilityAuditOutput
}

func (*VulnerabilityAudit) ElementType() reflect.Type {
	return reflect.TypeOf((**VulnerabilityAudit)(nil)).Elem()
}

func (i *VulnerabilityAudit) ToVulnerabilityAuditOutput() VulnerabilityAuditOutput {
	return i.ToVulnerabilityAuditOutputWithContext(context.Background())
}

func (i *VulnerabilityAudit) ToVulnerabilityAuditOutputWithContext(ctx context.Context) VulnerabilityAuditOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VulnerabilityAuditOutput)
}

// VulnerabilityAuditArrayInput is an input type that accepts VulnerabilityAuditArray and VulnerabilityAuditArrayOutput values.
// You can construct a concrete instance of `VulnerabilityAuditArrayInput` via:
//
//	VulnerabilityAuditArray{ VulnerabilityAuditArgs{...} }
type VulnerabilityAuditArrayInput interface {
	pulumi.Input

	ToVulnerabilityAuditArrayOutput() VulnerabilityAuditArrayOutput
	ToVulnerabilityAuditArrayOutputWithContext(context.Context) VulnerabilityAuditArrayOutput
}

type VulnerabilityAuditArray []VulnerabilityAuditInput

func (VulnerabilityAuditArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VulnerabilityAudit)(nil)).Elem()
}

func (i VulnerabilityAuditArray) ToVulnerabilityAuditArrayOutput() VulnerabilityAuditArrayOutput {
	return i.ToVulnerabilityAuditArrayOutputWithContext(context.Background())
}

func (i VulnerabilityAuditArray) ToVulnerabilityAuditArrayOutputWithContext(ctx context.Context) VulnerabilityAuditArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VulnerabilityAuditArrayOutput)
}

// VulnerabilityAuditMapInput is an input type that accepts VulnerabilityAuditMap and VulnerabilityAuditMapOutput values.
// You can construct a concrete instance of `VulnerabilityAuditMapInput` via:
//
//	VulnerabilityAuditMap{ "key": VulnerabilityAuditArgs{...} }
type VulnerabilityAuditMapInput interface {
	pulumi.Input

	ToVulnerabilityAuditMapOutput() VulnerabilityAuditMapOutput
	ToVulnerabilityAuditMapOutputWithContext(context.Context) VulnerabilityAuditMapOutput
}

type VulnerabilityAuditMap map[string]VulnerabilityAuditInput

func (VulnerabilityAuditMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VulnerabilityAudit)(nil)).Elem()
}

func (i VulnerabilityAuditMap) ToVulnerabilityAuditMapOutput() VulnerabilityAuditMapOutput {
	return i.ToVulnerabilityAuditMapOutputWithContext(context.Background())
}

func (i VulnerabilityAuditMap) ToVulnerabilityAuditMapOutputWithContext(ctx context.Context) VulnerabilityAuditMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VulnerabilityAuditMapOutput)
}

type VulnerabilityAuditOutput struct{ *pulumi.OutputState }

func (VulnerabilityAuditOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VulnerabilityAudit)(nil)).Elem()
}

func (o VulnerabilityAuditOutput) ToVulnerabilityAuditOutput() VulnerabilityAuditOutput {
	return o
}

func (o VulnerabilityAuditOutput) ToVulnerabilityAuditOutputWithContext(ctx context.Context) VulnerabilityAuditOutput {
	return o
}

// List of Application Dependencies (without vulnerabilities).
func (o VulnerabilityAuditOutput) ApplicationDependencies() VulnerabilityAuditApplicationDependencyArrayOutput {
	return o.ApplyT(func(v *VulnerabilityAudit) VulnerabilityAuditApplicationDependencyArrayOutput {
		return v.ApplicationDependencies
	}).(VulnerabilityAuditApplicationDependencyArrayOutput)
}

// The type of the build tool.
func (o VulnerabilityAuditOutput) BuildType() pulumi.StringOutput {
	return o.ApplyT(func(v *VulnerabilityAudit) pulumi.StringOutput { return v.BuildType }).(pulumi.StringOutput)
}

// (Updatable) The Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the compartment associated with the Vulnerability Audit.  If compartment identifier is not provided the compartment of the associated Knowledge Base will be used instead.
func (o VulnerabilityAuditOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *VulnerabilityAudit) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// Configuration for a Vulnerability Audit. A vulnerable Application Dependency is ignored if its name does match any of the items in `exclusions`, or all of the associated Vulnerabilies have a CVSS v2 score below `maxPermissibleCvssV2Score` and a CVSS v3 score below `maxPermissibleCvssV3Score`. type: object
func (o VulnerabilityAuditOutput) Configuration() VulnerabilityAuditConfigurationOutput {
	return o.ApplyT(func(v *VulnerabilityAudit) VulnerabilityAuditConfigurationOutput { return v.Configuration }).(VulnerabilityAuditConfigurationOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o VulnerabilityAuditOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v *VulnerabilityAudit) pulumi.MapOutput { return v.DefinedTags }).(pulumi.MapOutput)
}

// (Updatable) The name of the Vulnerability Audit.
func (o VulnerabilityAuditOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *VulnerabilityAudit) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o VulnerabilityAuditOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v *VulnerabilityAudit) pulumi.MapOutput { return v.FreeformTags }).(pulumi.MapOutput)
}

// Indicates if an audit succeeded according to the configuration. The value is `null` if the audit is in the `CREATING` state.
func (o VulnerabilityAuditOutput) IsSuccess() pulumi.BoolOutput {
	return o.ApplyT(func(v *VulnerabilityAudit) pulumi.BoolOutput { return v.IsSuccess }).(pulumi.BoolOutput)
}

// The Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the Knowledge Base.
func (o VulnerabilityAuditOutput) KnowledgeBaseId() pulumi.StringOutput {
	return o.ApplyT(func(v *VulnerabilityAudit) pulumi.StringOutput { return v.KnowledgeBaseId }).(pulumi.StringOutput)
}

// Maximum Common Vulnerability Scoring System Version 2 score observed for non-ignored vulnerable Application Dependencies.
func (o VulnerabilityAuditOutput) MaxObservedCvssV2score() pulumi.Float64Output {
	return o.ApplyT(func(v *VulnerabilityAudit) pulumi.Float64Output { return v.MaxObservedCvssV2score }).(pulumi.Float64Output)
}

// Maximum Common Vulnerability Scoring System Version 2 score observed for vulnerable Application Dependencies including ignored ones.
func (o VulnerabilityAuditOutput) MaxObservedCvssV2scoreWithIgnored() pulumi.Float64Output {
	return o.ApplyT(func(v *VulnerabilityAudit) pulumi.Float64Output { return v.MaxObservedCvssV2scoreWithIgnored }).(pulumi.Float64Output)
}

// Maximum Common Vulnerability Scoring System Version 3 score observed for non-ignored vulnerable Application Dependencies.
func (o VulnerabilityAuditOutput) MaxObservedCvssV3score() pulumi.Float64Output {
	return o.ApplyT(func(v *VulnerabilityAudit) pulumi.Float64Output { return v.MaxObservedCvssV3score }).(pulumi.Float64Output)
}

// Maximum Common Vulnerability Scoring System Version 3 score observed for vulnerable Application Dependencies including ignored ones.
func (o VulnerabilityAuditOutput) MaxObservedCvssV3scoreWithIgnored() pulumi.Float64Output {
	return o.ApplyT(func(v *VulnerabilityAudit) pulumi.Float64Output { return v.MaxObservedCvssV3scoreWithIgnored }).(pulumi.Float64Output)
}

// Vulnerability Audit source.
func (o VulnerabilityAuditOutput) Source() VulnerabilityAuditSourceOutput {
	return o.ApplyT(func(v *VulnerabilityAudit) VulnerabilityAuditSourceOutput { return v.Source }).(VulnerabilityAuditSourceOutput)
}

// The current lifecycle state of the Vulnerability Audit.
func (o VulnerabilityAuditOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *VulnerabilityAudit) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o VulnerabilityAuditOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v *VulnerabilityAudit) pulumi.MapOutput { return v.SystemTags }).(pulumi.MapOutput)
}

// The creation date and time of the Vulnerability Audit (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
func (o VulnerabilityAuditOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *VulnerabilityAudit) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The update date and time of the Vulnerability Audit (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
func (o VulnerabilityAuditOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *VulnerabilityAudit) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

// List of vulnerabilities found in the Vulnerability Audit.
func (o VulnerabilityAuditOutput) Vulnerabilities() VulnerabilityAuditVulnerabilityArrayOutput {
	return o.ApplyT(func(v *VulnerabilityAudit) VulnerabilityAuditVulnerabilityArrayOutput { return v.Vulnerabilities }).(VulnerabilityAuditVulnerabilityArrayOutput)
}

// Count of non-ignored vulnerable Application Dependencies.
func (o VulnerabilityAuditOutput) VulnerableArtifactsCount() pulumi.IntOutput {
	return o.ApplyT(func(v *VulnerabilityAudit) pulumi.IntOutput { return v.VulnerableArtifactsCount }).(pulumi.IntOutput)
}

// Count of all vulnerable Application Dependencies.
func (o VulnerabilityAuditOutput) VulnerableArtifactsCountWithIgnored() pulumi.IntOutput {
	return o.ApplyT(func(v *VulnerabilityAudit) pulumi.IntOutput { return v.VulnerableArtifactsCountWithIgnored }).(pulumi.IntOutput)
}

type VulnerabilityAuditArrayOutput struct{ *pulumi.OutputState }

func (VulnerabilityAuditArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VulnerabilityAudit)(nil)).Elem()
}

func (o VulnerabilityAuditArrayOutput) ToVulnerabilityAuditArrayOutput() VulnerabilityAuditArrayOutput {
	return o
}

func (o VulnerabilityAuditArrayOutput) ToVulnerabilityAuditArrayOutputWithContext(ctx context.Context) VulnerabilityAuditArrayOutput {
	return o
}

func (o VulnerabilityAuditArrayOutput) Index(i pulumi.IntInput) VulnerabilityAuditOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VulnerabilityAudit {
		return vs[0].([]*VulnerabilityAudit)[vs[1].(int)]
	}).(VulnerabilityAuditOutput)
}

type VulnerabilityAuditMapOutput struct{ *pulumi.OutputState }

func (VulnerabilityAuditMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VulnerabilityAudit)(nil)).Elem()
}

func (o VulnerabilityAuditMapOutput) ToVulnerabilityAuditMapOutput() VulnerabilityAuditMapOutput {
	return o
}

func (o VulnerabilityAuditMapOutput) ToVulnerabilityAuditMapOutputWithContext(ctx context.Context) VulnerabilityAuditMapOutput {
	return o
}

func (o VulnerabilityAuditMapOutput) MapIndex(k pulumi.StringInput) VulnerabilityAuditOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VulnerabilityAudit {
		return vs[0].(map[string]*VulnerabilityAudit)[vs[1].(string)]
	}).(VulnerabilityAuditOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VulnerabilityAuditInput)(nil)).Elem(), &VulnerabilityAudit{})
	pulumi.RegisterInputType(reflect.TypeOf((*VulnerabilityAuditArrayInput)(nil)).Elem(), VulnerabilityAuditArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VulnerabilityAuditMapInput)(nil)).Elem(), VulnerabilityAuditMap{})
	pulumi.RegisterOutputType(VulnerabilityAuditOutput{})
	pulumi.RegisterOutputType(VulnerabilityAuditArrayOutput{})
	pulumi.RegisterOutputType(VulnerabilityAuditMapOutput{})
}
