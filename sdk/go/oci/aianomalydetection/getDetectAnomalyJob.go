// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aianomalydetection

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Detect Anomaly Job resource in Oracle Cloud Infrastructure Ai Anomaly Detection service.
//
// Gets a detect anomaly asynchronous job by identifier.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/AiAnomalyDetection"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := AiAnomalyDetection.GetDetectAnomalyJob(ctx, &aianomalydetection.GetDetectAnomalyJobArgs{
//				DetectAnomalyJobId: oci_ai_anomaly_detection_detect_anomaly_job.Test_detect_anomaly_job.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func LookupDetectAnomalyJob(ctx *pulumi.Context, args *LookupDetectAnomalyJobArgs, opts ...pulumi.InvokeOption) (*LookupDetectAnomalyJobResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDetectAnomalyJobResult
	err := ctx.Invoke("oci:AiAnomalyDetection/getDetectAnomalyJob:getDetectAnomalyJob", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDetectAnomalyJob.
type LookupDetectAnomalyJobArgs struct {
	// Unique asynchronous job identifier.
	DetectAnomalyJobId string `pulumi:"detectAnomalyJobId"`
}

// A collection of values returned by getDetectAnomalyJob.
type LookupDetectAnomalyJobResult struct {
	// The OCID of the compartment that starts the job.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// Detect anomaly job description.
	Description        string `pulumi:"description"`
	DetectAnomalyJobId string `pulumi:"detectAnomalyJobId"`
	// Detect anomaly job display name.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Id of the job.
	Id string `pulumi:"id"`
	// Input details for detect anomaly job.
	InputDetails []GetDetectAnomalyJobInputDetail `pulumi:"inputDetails"`
	// The current state details of the batch document job.
	LifecycleStateDetails string `pulumi:"lifecycleStateDetails"`
	// The OCID of the trained model.
	ModelId string `pulumi:"modelId"`
	// Output details for detect anomaly job.
	OutputDetails []GetDetectAnomalyJobOutputDetail `pulumi:"outputDetails"`
	// The OCID of the project.
	ProjectId string `pulumi:"projectId"`
	// The value that customer can adjust to control the sensitivity of anomaly detection
	Sensitivity float64 `pulumi:"sensitivity"`
	// The current state of the batch document job.
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// Job accepted time
	TimeAccepted string `pulumi:"timeAccepted"`
	// Job finished time
	TimeFinished string `pulumi:"timeFinished"`
	// Job started time
	TimeStarted string `pulumi:"timeStarted"`
}

func LookupDetectAnomalyJobOutput(ctx *pulumi.Context, args LookupDetectAnomalyJobOutputArgs, opts ...pulumi.InvokeOption) LookupDetectAnomalyJobResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDetectAnomalyJobResult, error) {
			args := v.(LookupDetectAnomalyJobArgs)
			r, err := LookupDetectAnomalyJob(ctx, &args, opts...)
			var s LookupDetectAnomalyJobResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDetectAnomalyJobResultOutput)
}

// A collection of arguments for invoking getDetectAnomalyJob.
type LookupDetectAnomalyJobOutputArgs struct {
	// Unique asynchronous job identifier.
	DetectAnomalyJobId pulumi.StringInput `pulumi:"detectAnomalyJobId"`
}

func (LookupDetectAnomalyJobOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDetectAnomalyJobArgs)(nil)).Elem()
}

// A collection of values returned by getDetectAnomalyJob.
type LookupDetectAnomalyJobResultOutput struct{ *pulumi.OutputState }

func (LookupDetectAnomalyJobResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDetectAnomalyJobResult)(nil)).Elem()
}

func (o LookupDetectAnomalyJobResultOutput) ToLookupDetectAnomalyJobResultOutput() LookupDetectAnomalyJobResultOutput {
	return o
}

func (o LookupDetectAnomalyJobResultOutput) ToLookupDetectAnomalyJobResultOutputWithContext(ctx context.Context) LookupDetectAnomalyJobResultOutput {
	return o
}

// The OCID of the compartment that starts the job.
func (o LookupDetectAnomalyJobResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDetectAnomalyJobResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupDetectAnomalyJobResultOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupDetectAnomalyJobResult) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// Detect anomaly job description.
func (o LookupDetectAnomalyJobResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDetectAnomalyJobResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupDetectAnomalyJobResultOutput) DetectAnomalyJobId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDetectAnomalyJobResult) string { return v.DetectAnomalyJobId }).(pulumi.StringOutput)
}

// Detect anomaly job display name.
func (o LookupDetectAnomalyJobResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDetectAnomalyJobResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o LookupDetectAnomalyJobResultOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupDetectAnomalyJobResult) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// Id of the job.
func (o LookupDetectAnomalyJobResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDetectAnomalyJobResult) string { return v.Id }).(pulumi.StringOutput)
}

// Input details for detect anomaly job.
func (o LookupDetectAnomalyJobResultOutput) InputDetails() GetDetectAnomalyJobInputDetailArrayOutput {
	return o.ApplyT(func(v LookupDetectAnomalyJobResult) []GetDetectAnomalyJobInputDetail { return v.InputDetails }).(GetDetectAnomalyJobInputDetailArrayOutput)
}

// The current state details of the batch document job.
func (o LookupDetectAnomalyJobResultOutput) LifecycleStateDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDetectAnomalyJobResult) string { return v.LifecycleStateDetails }).(pulumi.StringOutput)
}

// The OCID of the trained model.
func (o LookupDetectAnomalyJobResultOutput) ModelId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDetectAnomalyJobResult) string { return v.ModelId }).(pulumi.StringOutput)
}

// Output details for detect anomaly job.
func (o LookupDetectAnomalyJobResultOutput) OutputDetails() GetDetectAnomalyJobOutputDetailArrayOutput {
	return o.ApplyT(func(v LookupDetectAnomalyJobResult) []GetDetectAnomalyJobOutputDetail { return v.OutputDetails }).(GetDetectAnomalyJobOutputDetailArrayOutput)
}

// The OCID of the project.
func (o LookupDetectAnomalyJobResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDetectAnomalyJobResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// The value that customer can adjust to control the sensitivity of anomaly detection
func (o LookupDetectAnomalyJobResultOutput) Sensitivity() pulumi.Float64Output {
	return o.ApplyT(func(v LookupDetectAnomalyJobResult) float64 { return v.Sensitivity }).(pulumi.Float64Output)
}

// The current state of the batch document job.
func (o LookupDetectAnomalyJobResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDetectAnomalyJobResult) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupDetectAnomalyJobResultOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupDetectAnomalyJobResult) map[string]interface{} { return v.SystemTags }).(pulumi.MapOutput)
}

// Job accepted time
func (o LookupDetectAnomalyJobResultOutput) TimeAccepted() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDetectAnomalyJobResult) string { return v.TimeAccepted }).(pulumi.StringOutput)
}

// Job finished time
func (o LookupDetectAnomalyJobResultOutput) TimeFinished() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDetectAnomalyJobResult) string { return v.TimeFinished }).(pulumi.StringOutput)
}

// Job started time
func (o LookupDetectAnomalyJobResultOutput) TimeStarted() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDetectAnomalyJobResult) string { return v.TimeStarted }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDetectAnomalyJobResultOutput{})
}
