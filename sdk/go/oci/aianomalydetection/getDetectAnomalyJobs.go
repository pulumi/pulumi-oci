// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aianomalydetection

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Detect Anomaly Jobs in Oracle Cloud Infrastructure Ai Anomaly Detection service.
//
// Returns a list of all the Anomaly Detection jobs in the specified compartment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/AiAnomalyDetection"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := AiAnomalyDetection.GetDetectAnomalyJobs(ctx, &aianomalydetection.GetDetectAnomalyJobsArgs{
//				CompartmentId:      compartmentId,
//				DetectAnomalyJobId: pulumi.StringRef(testDetectAnomalyJob.Id),
//				DisplayName:        pulumi.StringRef(detectAnomalyJobDisplayName),
//				ModelId:            pulumi.StringRef(testModel.Id),
//				ProjectId:          pulumi.StringRef(testProject.Id),
//				State:              pulumi.StringRef(detectAnomalyJobState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDetectAnomalyJobs(ctx *pulumi.Context, args *GetDetectAnomalyJobsArgs, opts ...pulumi.InvokeOption) (*GetDetectAnomalyJobsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDetectAnomalyJobsResult
	err := ctx.Invoke("oci:AiAnomalyDetection/getDetectAnomalyJobs:getDetectAnomalyJobs", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDetectAnomalyJobs.
type GetDetectAnomalyJobsArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Unique Async Job identifier
	DetectAnomalyJobId *string `pulumi:"detectAnomalyJobId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName *string                      `pulumi:"displayName"`
	Filters     []GetDetectAnomalyJobsFilter `pulumi:"filters"`
	// The ID of the trained model for which to list the resources.
	ModelId *string `pulumi:"modelId"`
	// The ID of the project for which to list the objects.
	ProjectId *string `pulumi:"projectId"`
	// <b>Filter</b> results by the specified lifecycle state. Must be a valid state for the resource type.
	State *string `pulumi:"state"`
}

// A collection of values returned by getDetectAnomalyJobs.
type GetDetectAnomalyJobsResult struct {
	// The OCID of the compartment that starts the job.
	CompartmentId string `pulumi:"compartmentId"`
	// The list of detect_anomaly_job_collection.
	DetectAnomalyJobCollections []GetDetectAnomalyJobsDetectAnomalyJobCollection `pulumi:"detectAnomalyJobCollections"`
	DetectAnomalyJobId          *string                                          `pulumi:"detectAnomalyJobId"`
	// Detect anomaly job display name.
	DisplayName *string                      `pulumi:"displayName"`
	Filters     []GetDetectAnomalyJobsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The OCID of the trained model.
	ModelId *string `pulumi:"modelId"`
	// The OCID of the project.
	ProjectId *string `pulumi:"projectId"`
	// The current state of the batch document job.
	State *string `pulumi:"state"`
}

func GetDetectAnomalyJobsOutput(ctx *pulumi.Context, args GetDetectAnomalyJobsOutputArgs, opts ...pulumi.InvokeOption) GetDetectAnomalyJobsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetDetectAnomalyJobsResultOutput, error) {
			args := v.(GetDetectAnomalyJobsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:AiAnomalyDetection/getDetectAnomalyJobs:getDetectAnomalyJobs", args, GetDetectAnomalyJobsResultOutput{}, options).(GetDetectAnomalyJobsResultOutput), nil
		}).(GetDetectAnomalyJobsResultOutput)
}

// A collection of arguments for invoking getDetectAnomalyJobs.
type GetDetectAnomalyJobsOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Unique Async Job identifier
	DetectAnomalyJobId pulumi.StringPtrInput `pulumi:"detectAnomalyJobId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringPtrInput                `pulumi:"displayName"`
	Filters     GetDetectAnomalyJobsFilterArrayInput `pulumi:"filters"`
	// The ID of the trained model for which to list the resources.
	ModelId pulumi.StringPtrInput `pulumi:"modelId"`
	// The ID of the project for which to list the objects.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// <b>Filter</b> results by the specified lifecycle state. Must be a valid state for the resource type.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetDetectAnomalyJobsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectAnomalyJobsArgs)(nil)).Elem()
}

// A collection of values returned by getDetectAnomalyJobs.
type GetDetectAnomalyJobsResultOutput struct{ *pulumi.OutputState }

func (GetDetectAnomalyJobsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectAnomalyJobsResult)(nil)).Elem()
}

func (o GetDetectAnomalyJobsResultOutput) ToGetDetectAnomalyJobsResultOutput() GetDetectAnomalyJobsResultOutput {
	return o
}

func (o GetDetectAnomalyJobsResultOutput) ToGetDetectAnomalyJobsResultOutputWithContext(ctx context.Context) GetDetectAnomalyJobsResultOutput {
	return o
}

// The OCID of the compartment that starts the job.
func (o GetDetectAnomalyJobsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectAnomalyJobsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The list of detect_anomaly_job_collection.
func (o GetDetectAnomalyJobsResultOutput) DetectAnomalyJobCollections() GetDetectAnomalyJobsDetectAnomalyJobCollectionArrayOutput {
	return o.ApplyT(func(v GetDetectAnomalyJobsResult) []GetDetectAnomalyJobsDetectAnomalyJobCollection {
		return v.DetectAnomalyJobCollections
	}).(GetDetectAnomalyJobsDetectAnomalyJobCollectionArrayOutput)
}

func (o GetDetectAnomalyJobsResultOutput) DetectAnomalyJobId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDetectAnomalyJobsResult) *string { return v.DetectAnomalyJobId }).(pulumi.StringPtrOutput)
}

// Detect anomaly job display name.
func (o GetDetectAnomalyJobsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDetectAnomalyJobsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetDetectAnomalyJobsResultOutput) Filters() GetDetectAnomalyJobsFilterArrayOutput {
	return o.ApplyT(func(v GetDetectAnomalyJobsResult) []GetDetectAnomalyJobsFilter { return v.Filters }).(GetDetectAnomalyJobsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDetectAnomalyJobsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectAnomalyJobsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The OCID of the trained model.
func (o GetDetectAnomalyJobsResultOutput) ModelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDetectAnomalyJobsResult) *string { return v.ModelId }).(pulumi.StringPtrOutput)
}

// The OCID of the project.
func (o GetDetectAnomalyJobsResultOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDetectAnomalyJobsResult) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// The current state of the batch document job.
func (o GetDetectAnomalyJobsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDetectAnomalyJobsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDetectAnomalyJobsResultOutput{})
}
