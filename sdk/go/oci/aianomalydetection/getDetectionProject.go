// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aianomalydetection

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Project resource in Oracle Cloud Infrastructure Ai Anomaly Detection service.
//
// # Gets a Project by identifier
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/AiAnomalyDetection"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := AiAnomalyDetection.GetDetectionProject(ctx, &aianomalydetection.GetDetectionProjectArgs{
//				ProjectId: oci_ai_anomaly_detection_project.Test_project.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDetectionProject(ctx *pulumi.Context, args *GetDetectionProjectArgs, opts ...pulumi.InvokeOption) (*GetDetectionProjectResult, error) {
	var rv GetDetectionProjectResult
	err := ctx.Invoke("oci:AiAnomalyDetection/getDetectionProject:getDetectionProject", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDetectionProject.
type GetDetectionProjectArgs struct {
	// The OCID of the Project.
	ProjectId string `pulumi:"projectId"`
}

// A collection of values returned by getDetectionProject.
type GetDetectionProjectResult struct {
	// The OCID for the project's compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// A short description of the project.
	Description string `pulumi:"description"`
	// A user-friendly display name for the resource. It does not have to be unique and can be modified. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The OCID of the project that is immutable on creation.
	Id        string `pulumi:"id"`
	ProjectId string `pulumi:"projectId"`
	// The lifecycle state of the Project.
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The date and time the resource was created in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the resource was updated in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeUpdated string `pulumi:"timeUpdated"`
}

func GetDetectionProjectOutput(ctx *pulumi.Context, args GetDetectionProjectOutputArgs, opts ...pulumi.InvokeOption) GetDetectionProjectResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDetectionProjectResult, error) {
			args := v.(GetDetectionProjectArgs)
			r, err := GetDetectionProject(ctx, &args, opts...)
			var s GetDetectionProjectResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDetectionProjectResultOutput)
}

// A collection of arguments for invoking getDetectionProject.
type GetDetectionProjectOutputArgs struct {
	// The OCID of the Project.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
}

func (GetDetectionProjectOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectionProjectArgs)(nil)).Elem()
}

// A collection of values returned by getDetectionProject.
type GetDetectionProjectResultOutput struct{ *pulumi.OutputState }

func (GetDetectionProjectResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectionProjectResult)(nil)).Elem()
}

func (o GetDetectionProjectResultOutput) ToGetDetectionProjectResultOutput() GetDetectionProjectResultOutput {
	return o
}

func (o GetDetectionProjectResultOutput) ToGetDetectionProjectResultOutputWithContext(ctx context.Context) GetDetectionProjectResultOutput {
	return o
}

// The OCID for the project's compartment.
func (o GetDetectionProjectResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectionProjectResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetDetectionProjectResultOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetDetectionProjectResult) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// A short description of the project.
func (o GetDetectionProjectResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectionProjectResult) string { return v.Description }).(pulumi.StringOutput)
}

// A user-friendly display name for the resource. It does not have to be unique and can be modified. Avoid entering confidential information.
func (o GetDetectionProjectResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectionProjectResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetDetectionProjectResultOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetDetectionProjectResult) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The OCID of the project that is immutable on creation.
func (o GetDetectionProjectResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectionProjectResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDetectionProjectResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectionProjectResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// The lifecycle state of the Project.
func (o GetDetectionProjectResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectionProjectResult) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetDetectionProjectResultOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetDetectionProjectResult) map[string]interface{} { return v.SystemTags }).(pulumi.MapOutput)
}

// The date and time the resource was created in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
func (o GetDetectionProjectResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectionProjectResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the resource was updated in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
func (o GetDetectionProjectResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectionProjectResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDetectionProjectResultOutput{})
}
