// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aianomalydetection

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source provides the list of Projects in Oracle Cloud Infrastructure Ai Anomaly Detection service.
//
// Returns a list of  Projects.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/AiAnomalyDetection"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := AiAnomalyDetection.GetDetectionProjects(ctx, &aianomalydetection.GetDetectionProjectsArgs{
//				CompartmentId: _var.Compartment_id,
//				DisplayName:   pulumi.StringRef(_var.Project_display_name),
//				State:         pulumi.StringRef(_var.Project_state),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDetectionProjects(ctx *pulumi.Context, args *GetDetectionProjectsArgs, opts ...pulumi.InvokeOption) (*GetDetectionProjectsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDetectionProjectsResult
	err := ctx.Invoke("oci:AiAnomalyDetection/getDetectionProjects:getDetectionProjects", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDetectionProjects.
type GetDetectionProjectsArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName *string                      `pulumi:"displayName"`
	Filters     []GetDetectionProjectsFilter `pulumi:"filters"`
	// <b>Filter</b> results by the specified lifecycle state. Must be a valid state for the resource type.
	State *string `pulumi:"state"`
}

// A collection of values returned by getDetectionProjects.
type GetDetectionProjectsResult struct {
	// The OCID for the project's compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// A user-friendly display name for the resource. It does not have to be unique and can be modified. Avoid entering confidential information.
	DisplayName *string                      `pulumi:"displayName"`
	Filters     []GetDetectionProjectsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of project_collection.
	ProjectCollections []GetDetectionProjectsProjectCollection `pulumi:"projectCollections"`
	// The lifecycle state of the Project.
	State *string `pulumi:"state"`
}

func GetDetectionProjectsOutput(ctx *pulumi.Context, args GetDetectionProjectsOutputArgs, opts ...pulumi.InvokeOption) GetDetectionProjectsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDetectionProjectsResult, error) {
			args := v.(GetDetectionProjectsArgs)
			r, err := GetDetectionProjects(ctx, &args, opts...)
			var s GetDetectionProjectsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDetectionProjectsResultOutput)
}

// A collection of arguments for invoking getDetectionProjects.
type GetDetectionProjectsOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringPtrInput                `pulumi:"displayName"`
	Filters     GetDetectionProjectsFilterArrayInput `pulumi:"filters"`
	// <b>Filter</b> results by the specified lifecycle state. Must be a valid state for the resource type.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetDetectionProjectsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectionProjectsArgs)(nil)).Elem()
}

// A collection of values returned by getDetectionProjects.
type GetDetectionProjectsResultOutput struct{ *pulumi.OutputState }

func (GetDetectionProjectsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectionProjectsResult)(nil)).Elem()
}

func (o GetDetectionProjectsResultOutput) ToGetDetectionProjectsResultOutput() GetDetectionProjectsResultOutput {
	return o
}

func (o GetDetectionProjectsResultOutput) ToGetDetectionProjectsResultOutputWithContext(ctx context.Context) GetDetectionProjectsResultOutput {
	return o
}

func (o GetDetectionProjectsResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetDetectionProjectsResult] {
	return pulumix.Output[GetDetectionProjectsResult]{
		OutputState: o.OutputState,
	}
}

// The OCID for the project's compartment.
func (o GetDetectionProjectsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectionProjectsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// A user-friendly display name for the resource. It does not have to be unique and can be modified. Avoid entering confidential information.
func (o GetDetectionProjectsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDetectionProjectsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetDetectionProjectsResultOutput) Filters() GetDetectionProjectsFilterArrayOutput {
	return o.ApplyT(func(v GetDetectionProjectsResult) []GetDetectionProjectsFilter { return v.Filters }).(GetDetectionProjectsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDetectionProjectsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectionProjectsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of project_collection.
func (o GetDetectionProjectsResultOutput) ProjectCollections() GetDetectionProjectsProjectCollectionArrayOutput {
	return o.ApplyT(func(v GetDetectionProjectsResult) []GetDetectionProjectsProjectCollection {
		return v.ProjectCollections
	}).(GetDetectionProjectsProjectCollectionArrayOutput)
}

// The lifecycle state of the Project.
func (o GetDetectionProjectsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDetectionProjectsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDetectionProjectsResultOutput{})
}
