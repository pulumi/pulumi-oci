// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aidocument

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Model resource in Oracle Cloud Infrastructure Ai Document service.
//
// Get a model by identifier.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/AiDocument"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := AiDocument.GetModel(ctx, &aidocument.GetModelArgs{
//				ModelId: oci_ai_document_model.Test_model.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupModel(ctx *pulumi.Context, args *LookupModelArgs, opts ...pulumi.InvokeOption) (*LookupModelResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupModelResult
	err := ctx.Invoke("oci:AiDocument/getModel:getModel", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getModel.
type LookupModelArgs struct {
	// A unique model identifier.
	ModelId string `pulumi:"modelId"`
}

// A collection of values returned by getModel.
type LookupModelResult struct {
	// The compartment identifier.
	CompartmentId *string `pulumi:"compartmentId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) collection of active custom Key Value models that need to be composed.
	ComponentModels []GetModelComponentModel `pulumi:"componentModels"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For example: `{"foo-namespace": {"bar-key": "value"}}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// An optional description of the model.
	Description *string `pulumi:"description"`
	// A human-friendly name for the model, which can be changed.
	DisplayName *string `pulumi:"displayName"`
	// A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// A unique identifier that is immutable after creation.
	Id *string `pulumi:"id"`
	// Set to true when the model is created by using multiple key value extraction models.
	IsComposedModel *bool `pulumi:"isComposedModel"`
	// Set to true when experimenting with a new model type or dataset, so model training is quick, with a predefined low number of passes through the training data.
	IsQuickMode *bool `pulumi:"isQuickMode"`
	// The collection of labels used to train the custom model.
	Labels []string `pulumi:"labels"`
	// A message describing the current state in more detail, that can provide actionable information if training failed.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// The maximum model training time in hours, expressed as a decimal fraction.
	MaxTrainingTimeInHours *float64 `pulumi:"maxTrainingTimeInHours"`
	// Trained Model Metrics.
	Metrics []GetModelMetric `pulumi:"metrics"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of active custom Key Value model that need to be composed.
	ModelId string `pulumi:"modelId"`
	// The type of the Document model.
	ModelType *string `pulumi:"modelType"`
	// The version of the model.
	ModelVersion *string `pulumi:"modelVersion"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project that contains the model.
	ProjectId *string `pulumi:"projectId"`
	// The current state of the model.
	State *string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. For example: `{"orcl-cloud": {"free-tier-retained": "true"}}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The tenancy id of the model.
	TenancyId *string `pulumi:"tenancyId"`
	// The base entity which is the input for creating and training a model.
	TestingDatasets []GetModelTestingDataset `pulumi:"testingDatasets"`
	// When the model was created, as an RFC3339 datetime string.
	TimeCreated *string `pulumi:"timeCreated"`
	// When the model was updated, as an RFC3339 datetime string.
	TimeUpdated *string `pulumi:"timeUpdated"`
	// The total hours actually used for model training.
	TrainedTimeInHours *float64 `pulumi:"trainedTimeInHours"`
	// The base entity which is the input for creating and training a model.
	TrainingDatasets []GetModelTrainingDataset `pulumi:"trainingDatasets"`
	// The base entity which is the input for creating and training a model.
	ValidationDatasets []GetModelValidationDataset `pulumi:"validationDatasets"`
}

func LookupModelOutput(ctx *pulumi.Context, args LookupModelOutputArgs, opts ...pulumi.InvokeOption) LookupModelResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupModelResult, error) {
			args := v.(LookupModelArgs)
			r, err := LookupModel(ctx, &args, opts...)
			var s LookupModelResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupModelResultOutput)
}

// A collection of arguments for invoking getModel.
type LookupModelOutputArgs struct {
	// A unique model identifier.
	ModelId pulumi.StringInput `pulumi:"modelId"`
}

func (LookupModelOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupModelArgs)(nil)).Elem()
}

// A collection of values returned by getModel.
type LookupModelResultOutput struct{ *pulumi.OutputState }

func (LookupModelResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupModelResult)(nil)).Elem()
}

func (o LookupModelResultOutput) ToLookupModelResultOutput() LookupModelResultOutput {
	return o
}

func (o LookupModelResultOutput) ToLookupModelResultOutputWithContext(ctx context.Context) LookupModelResultOutput {
	return o
}

// The compartment identifier.
func (o LookupModelResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupModelResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) collection of active custom Key Value models that need to be composed.
func (o LookupModelResultOutput) ComponentModels() GetModelComponentModelArrayOutput {
	return o.ApplyT(func(v LookupModelResult) []GetModelComponentModel { return v.ComponentModels }).(GetModelComponentModelArrayOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For example: `{"foo-namespace": {"bar-key": "value"}}`
func (o LookupModelResultOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupModelResult) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// An optional description of the model.
func (o LookupModelResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupModelResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A human-friendly name for the model, which can be changed.
func (o LookupModelResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupModelResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{"bar-key": "value"}`
func (o LookupModelResultOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupModelResult) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// A unique identifier that is immutable after creation.
func (o LookupModelResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupModelResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Set to true when the model is created by using multiple key value extraction models.
func (o LookupModelResultOutput) IsComposedModel() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupModelResult) *bool { return v.IsComposedModel }).(pulumi.BoolPtrOutput)
}

// Set to true when experimenting with a new model type or dataset, so model training is quick, with a predefined low number of passes through the training data.
func (o LookupModelResultOutput) IsQuickMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupModelResult) *bool { return v.IsQuickMode }).(pulumi.BoolPtrOutput)
}

// The collection of labels used to train the custom model.
func (o LookupModelResultOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupModelResult) []string { return v.Labels }).(pulumi.StringArrayOutput)
}

// A message describing the current state in more detail, that can provide actionable information if training failed.
func (o LookupModelResultOutput) LifecycleDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupModelResult) *string { return v.LifecycleDetails }).(pulumi.StringPtrOutput)
}

// The maximum model training time in hours, expressed as a decimal fraction.
func (o LookupModelResultOutput) MaxTrainingTimeInHours() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v LookupModelResult) *float64 { return v.MaxTrainingTimeInHours }).(pulumi.Float64PtrOutput)
}

// Trained Model Metrics.
func (o LookupModelResultOutput) Metrics() GetModelMetricArrayOutput {
	return o.ApplyT(func(v LookupModelResult) []GetModelMetric { return v.Metrics }).(GetModelMetricArrayOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of active custom Key Value model that need to be composed.
func (o LookupModelResultOutput) ModelId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupModelResult) string { return v.ModelId }).(pulumi.StringOutput)
}

// The type of the Document model.
func (o LookupModelResultOutput) ModelType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupModelResult) *string { return v.ModelType }).(pulumi.StringPtrOutput)
}

// The version of the model.
func (o LookupModelResultOutput) ModelVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupModelResult) *string { return v.ModelVersion }).(pulumi.StringPtrOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project that contains the model.
func (o LookupModelResultOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupModelResult) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// The current state of the model.
func (o LookupModelResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupModelResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. For example: `{"orcl-cloud": {"free-tier-retained": "true"}}`
func (o LookupModelResultOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupModelResult) map[string]interface{} { return v.SystemTags }).(pulumi.MapOutput)
}

// The tenancy id of the model.
func (o LookupModelResultOutput) TenancyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupModelResult) *string { return v.TenancyId }).(pulumi.StringPtrOutput)
}

// The base entity which is the input for creating and training a model.
func (o LookupModelResultOutput) TestingDatasets() GetModelTestingDatasetArrayOutput {
	return o.ApplyT(func(v LookupModelResult) []GetModelTestingDataset { return v.TestingDatasets }).(GetModelTestingDatasetArrayOutput)
}

// When the model was created, as an RFC3339 datetime string.
func (o LookupModelResultOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupModelResult) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// When the model was updated, as an RFC3339 datetime string.
func (o LookupModelResultOutput) TimeUpdated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupModelResult) *string { return v.TimeUpdated }).(pulumi.StringPtrOutput)
}

// The total hours actually used for model training.
func (o LookupModelResultOutput) TrainedTimeInHours() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v LookupModelResult) *float64 { return v.TrainedTimeInHours }).(pulumi.Float64PtrOutput)
}

// The base entity which is the input for creating and training a model.
func (o LookupModelResultOutput) TrainingDatasets() GetModelTrainingDatasetArrayOutput {
	return o.ApplyT(func(v LookupModelResult) []GetModelTrainingDataset { return v.TrainingDatasets }).(GetModelTrainingDatasetArrayOutput)
}

// The base entity which is the input for creating and training a model.
func (o LookupModelResultOutput) ValidationDatasets() GetModelValidationDatasetArrayOutput {
	return o.ApplyT(func(v LookupModelResult) []GetModelValidationDataset { return v.ValidationDatasets }).(GetModelValidationDatasetArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupModelResultOutput{})
}
