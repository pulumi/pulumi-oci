// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aidocument

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Models in Oracle Cloud Infrastructure Ai Document service.
//
// Returns a list of models in a compartment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/AiDocument"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := AiDocument.GetModels(ctx, &aidocument.GetModelsArgs{
//				CompartmentId: pulumi.StringRef(compartmentId),
//				DisplayName:   pulumi.StringRef(modelDisplayName),
//				Id:            pulumi.StringRef(modelId),
//				ProjectId:     pulumi.StringRef(testProject.Id),
//				State:         pulumi.StringRef(modelState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetModels(ctx *pulumi.Context, args *GetModelsArgs, opts ...pulumi.InvokeOption) (*GetModelsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetModelsResult
	err := ctx.Invoke("oci:AiDocument/getModels:getModels", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getModels.
type GetModelsArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId *string `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName *string           `pulumi:"displayName"`
	Filters     []GetModelsFilter `pulumi:"filters"`
	// The filter to find the model with the given identifier.
	Id *string `pulumi:"id"`
	// The ID of the project for which to list the objects.
	ProjectId *string `pulumi:"projectId"`
	// The filter to match models with the given lifecycleState.
	State *string `pulumi:"state"`
}

// A collection of values returned by getModels.
type GetModelsResult struct {
	// The compartment identifier.
	CompartmentId *string `pulumi:"compartmentId"`
	// A human-friendly name for the model, which can be changed.
	DisplayName *string           `pulumi:"displayName"`
	Filters     []GetModelsFilter `pulumi:"filters"`
	// A unique identifier that is immutable after creation.
	Id *string `pulumi:"id"`
	// The list of model_collection.
	ModelCollections []GetModelsModelCollection `pulumi:"modelCollections"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project that contains the model.
	ProjectId *string `pulumi:"projectId"`
	// The current state of the model.
	State *string `pulumi:"state"`
}

func GetModelsOutput(ctx *pulumi.Context, args GetModelsOutputArgs, opts ...pulumi.InvokeOption) GetModelsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetModelsResult, error) {
			args := v.(GetModelsArgs)
			r, err := GetModels(ctx, &args, opts...)
			var s GetModelsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetModelsResultOutput)
}

// A collection of arguments for invoking getModels.
type GetModelsOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringPtrInput     `pulumi:"displayName"`
	Filters     GetModelsFilterArrayInput `pulumi:"filters"`
	// The filter to find the model with the given identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The ID of the project for which to list the objects.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// The filter to match models with the given lifecycleState.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetModelsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsArgs)(nil)).Elem()
}

// A collection of values returned by getModels.
type GetModelsResultOutput struct{ *pulumi.OutputState }

func (GetModelsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsResult)(nil)).Elem()
}

func (o GetModelsResultOutput) ToGetModelsResultOutput() GetModelsResultOutput {
	return o
}

func (o GetModelsResultOutput) ToGetModelsResultOutputWithContext(ctx context.Context) GetModelsResultOutput {
	return o
}

// The compartment identifier.
func (o GetModelsResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetModelsResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// A human-friendly name for the model, which can be changed.
func (o GetModelsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetModelsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetModelsResultOutput) Filters() GetModelsFilterArrayOutput {
	return o.ApplyT(func(v GetModelsResult) []GetModelsFilter { return v.Filters }).(GetModelsFilterArrayOutput)
}

// A unique identifier that is immutable after creation.
func (o GetModelsResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetModelsResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The list of model_collection.
func (o GetModelsResultOutput) ModelCollections() GetModelsModelCollectionArrayOutput {
	return o.ApplyT(func(v GetModelsResult) []GetModelsModelCollection { return v.ModelCollections }).(GetModelsModelCollectionArrayOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project that contains the model.
func (o GetModelsResultOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetModelsResult) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// The current state of the model.
func (o GetModelsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetModelsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetModelsResultOutput{})
}
