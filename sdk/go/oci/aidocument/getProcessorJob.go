// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aidocument

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source provides details about a specific Processor Job resource in Oracle Cloud Infrastructure Ai Document service.
//
// Get the details of a processor job.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/AiDocument"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := AiDocument.GetProcessorJob(ctx, &aidocument.GetProcessorJobArgs{
//				ProcessorJobId: oci_ai_document_processor_job.Test_processor_job.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupProcessorJob(ctx *pulumi.Context, args *LookupProcessorJobArgs, opts ...pulumi.InvokeOption) (*LookupProcessorJobResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupProcessorJobResult
	err := ctx.Invoke("oci:AiDocument/getProcessorJob:getProcessorJob", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getProcessorJob.
type LookupProcessorJobArgs struct {
	// Processor job id.
	ProcessorJobId string `pulumi:"processorJobId"`
}

// A collection of values returned by getProcessorJob.
type LookupProcessorJobResult struct {
	// The compartment identifier.
	CompartmentId string `pulumi:"compartmentId"`
	// The display name of the processor job.
	DisplayName string `pulumi:"displayName"`
	// The id of the processor job.
	Id string `pulumi:"id"`
	// The location of the inputs.
	InputLocations []GetProcessorJobInputLocation `pulumi:"inputLocations"`
	// The detailed status of FAILED state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// The object storage location where to store analysis results.
	OutputLocations []GetProcessorJobOutputLocation `pulumi:"outputLocations"`
	// How much progress the operation has made, compared to the total amount of work to be performed.
	PercentComplete float64 `pulumi:"percentComplete"`
	// The configuration of a processor.
	ProcessorConfigs []GetProcessorJobProcessorConfig `pulumi:"processorConfigs"`
	ProcessorJobId   string                           `pulumi:"processorJobId"`
	// The current state of the processor job.
	State string `pulumi:"state"`
	// The job acceptance time.
	TimeAccepted string `pulumi:"timeAccepted"`
	// The job finish time.
	TimeFinished string `pulumi:"timeFinished"`
	// The job start time.
	TimeStarted string `pulumi:"timeStarted"`
}

func LookupProcessorJobOutput(ctx *pulumi.Context, args LookupProcessorJobOutputArgs, opts ...pulumi.InvokeOption) LookupProcessorJobResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupProcessorJobResult, error) {
			args := v.(LookupProcessorJobArgs)
			r, err := LookupProcessorJob(ctx, &args, opts...)
			var s LookupProcessorJobResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupProcessorJobResultOutput)
}

// A collection of arguments for invoking getProcessorJob.
type LookupProcessorJobOutputArgs struct {
	// Processor job id.
	ProcessorJobId pulumi.StringInput `pulumi:"processorJobId"`
}

func (LookupProcessorJobOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProcessorJobArgs)(nil)).Elem()
}

// A collection of values returned by getProcessorJob.
type LookupProcessorJobResultOutput struct{ *pulumi.OutputState }

func (LookupProcessorJobResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProcessorJobResult)(nil)).Elem()
}

func (o LookupProcessorJobResultOutput) ToLookupProcessorJobResultOutput() LookupProcessorJobResultOutput {
	return o
}

func (o LookupProcessorJobResultOutput) ToLookupProcessorJobResultOutputWithContext(ctx context.Context) LookupProcessorJobResultOutput {
	return o
}

func (o LookupProcessorJobResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupProcessorJobResult] {
	return pulumix.Output[LookupProcessorJobResult]{
		OutputState: o.OutputState,
	}
}

// The compartment identifier.
func (o LookupProcessorJobResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProcessorJobResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The display name of the processor job.
func (o LookupProcessorJobResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProcessorJobResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The id of the processor job.
func (o LookupProcessorJobResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProcessorJobResult) string { return v.Id }).(pulumi.StringOutput)
}

// The location of the inputs.
func (o LookupProcessorJobResultOutput) InputLocations() GetProcessorJobInputLocationArrayOutput {
	return o.ApplyT(func(v LookupProcessorJobResult) []GetProcessorJobInputLocation { return v.InputLocations }).(GetProcessorJobInputLocationArrayOutput)
}

// The detailed status of FAILED state.
func (o LookupProcessorJobResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProcessorJobResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The object storage location where to store analysis results.
func (o LookupProcessorJobResultOutput) OutputLocations() GetProcessorJobOutputLocationArrayOutput {
	return o.ApplyT(func(v LookupProcessorJobResult) []GetProcessorJobOutputLocation { return v.OutputLocations }).(GetProcessorJobOutputLocationArrayOutput)
}

// How much progress the operation has made, compared to the total amount of work to be performed.
func (o LookupProcessorJobResultOutput) PercentComplete() pulumi.Float64Output {
	return o.ApplyT(func(v LookupProcessorJobResult) float64 { return v.PercentComplete }).(pulumi.Float64Output)
}

// The configuration of a processor.
func (o LookupProcessorJobResultOutput) ProcessorConfigs() GetProcessorJobProcessorConfigArrayOutput {
	return o.ApplyT(func(v LookupProcessorJobResult) []GetProcessorJobProcessorConfig { return v.ProcessorConfigs }).(GetProcessorJobProcessorConfigArrayOutput)
}

func (o LookupProcessorJobResultOutput) ProcessorJobId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProcessorJobResult) string { return v.ProcessorJobId }).(pulumi.StringOutput)
}

// The current state of the processor job.
func (o LookupProcessorJobResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProcessorJobResult) string { return v.State }).(pulumi.StringOutput)
}

// The job acceptance time.
func (o LookupProcessorJobResultOutput) TimeAccepted() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProcessorJobResult) string { return v.TimeAccepted }).(pulumi.StringOutput)
}

// The job finish time.
func (o LookupProcessorJobResultOutput) TimeFinished() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProcessorJobResult) string { return v.TimeFinished }).(pulumi.StringOutput)
}

// The job start time.
func (o LookupProcessorJobResultOutput) TimeStarted() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProcessorJobResult) string { return v.TimeStarted }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupProcessorJobResultOutput{})
}
