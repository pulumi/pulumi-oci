// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aidocument

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ModelComponentModel struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of active custom Key Value model that need to be composed.
	ModelId *string `pulumi:"modelId"`
}

// ModelComponentModelInput is an input type that accepts ModelComponentModelArgs and ModelComponentModelOutput values.
// You can construct a concrete instance of `ModelComponentModelInput` via:
//
//	ModelComponentModelArgs{...}
type ModelComponentModelInput interface {
	pulumi.Input

	ToModelComponentModelOutput() ModelComponentModelOutput
	ToModelComponentModelOutputWithContext(context.Context) ModelComponentModelOutput
}

type ModelComponentModelArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of active custom Key Value model that need to be composed.
	ModelId pulumi.StringPtrInput `pulumi:"modelId"`
}

func (ModelComponentModelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelComponentModel)(nil)).Elem()
}

func (i ModelComponentModelArgs) ToModelComponentModelOutput() ModelComponentModelOutput {
	return i.ToModelComponentModelOutputWithContext(context.Background())
}

func (i ModelComponentModelArgs) ToModelComponentModelOutputWithContext(ctx context.Context) ModelComponentModelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelComponentModelOutput)
}

// ModelComponentModelArrayInput is an input type that accepts ModelComponentModelArray and ModelComponentModelArrayOutput values.
// You can construct a concrete instance of `ModelComponentModelArrayInput` via:
//
//	ModelComponentModelArray{ ModelComponentModelArgs{...} }
type ModelComponentModelArrayInput interface {
	pulumi.Input

	ToModelComponentModelArrayOutput() ModelComponentModelArrayOutput
	ToModelComponentModelArrayOutputWithContext(context.Context) ModelComponentModelArrayOutput
}

type ModelComponentModelArray []ModelComponentModelInput

func (ModelComponentModelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelComponentModel)(nil)).Elem()
}

func (i ModelComponentModelArray) ToModelComponentModelArrayOutput() ModelComponentModelArrayOutput {
	return i.ToModelComponentModelArrayOutputWithContext(context.Background())
}

func (i ModelComponentModelArray) ToModelComponentModelArrayOutputWithContext(ctx context.Context) ModelComponentModelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelComponentModelArrayOutput)
}

type ModelComponentModelOutput struct{ *pulumi.OutputState }

func (ModelComponentModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelComponentModel)(nil)).Elem()
}

func (o ModelComponentModelOutput) ToModelComponentModelOutput() ModelComponentModelOutput {
	return o
}

func (o ModelComponentModelOutput) ToModelComponentModelOutputWithContext(ctx context.Context) ModelComponentModelOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of active custom Key Value model that need to be composed.
func (o ModelComponentModelOutput) ModelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelComponentModel) *string { return v.ModelId }).(pulumi.StringPtrOutput)
}

type ModelComponentModelArrayOutput struct{ *pulumi.OutputState }

func (ModelComponentModelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelComponentModel)(nil)).Elem()
}

func (o ModelComponentModelArrayOutput) ToModelComponentModelArrayOutput() ModelComponentModelArrayOutput {
	return o
}

func (o ModelComponentModelArrayOutput) ToModelComponentModelArrayOutputWithContext(ctx context.Context) ModelComponentModelArrayOutput {
	return o
}

func (o ModelComponentModelArrayOutput) Index(i pulumi.IntInput) ModelComponentModelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ModelComponentModel {
		return vs[0].([]ModelComponentModel)[vs[1].(int)]
	}).(ModelComponentModelOutput)
}

type ModelMetric struct {
	// Summary of count of samples used during model training.
	DatasetSummaries []ModelMetricDatasetSummary `pulumi:"datasetSummaries"`
	// List of metrics entries per label.
	LabelMetricsReports []ModelMetricLabelMetricsReport `pulumi:"labelMetricsReports"`
	// The type of the Document model.
	ModelType *string `pulumi:"modelType"`
	// Overall Metrics report for Document Classification Model.
	OverallMetricsReports []ModelMetricOverallMetricsReport `pulumi:"overallMetricsReports"`
}

// ModelMetricInput is an input type that accepts ModelMetricArgs and ModelMetricOutput values.
// You can construct a concrete instance of `ModelMetricInput` via:
//
//	ModelMetricArgs{...}
type ModelMetricInput interface {
	pulumi.Input

	ToModelMetricOutput() ModelMetricOutput
	ToModelMetricOutputWithContext(context.Context) ModelMetricOutput
}

type ModelMetricArgs struct {
	// Summary of count of samples used during model training.
	DatasetSummaries ModelMetricDatasetSummaryArrayInput `pulumi:"datasetSummaries"`
	// List of metrics entries per label.
	LabelMetricsReports ModelMetricLabelMetricsReportArrayInput `pulumi:"labelMetricsReports"`
	// The type of the Document model.
	ModelType pulumi.StringPtrInput `pulumi:"modelType"`
	// Overall Metrics report for Document Classification Model.
	OverallMetricsReports ModelMetricOverallMetricsReportArrayInput `pulumi:"overallMetricsReports"`
}

func (ModelMetricArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelMetric)(nil)).Elem()
}

func (i ModelMetricArgs) ToModelMetricOutput() ModelMetricOutput {
	return i.ToModelMetricOutputWithContext(context.Background())
}

func (i ModelMetricArgs) ToModelMetricOutputWithContext(ctx context.Context) ModelMetricOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelMetricOutput)
}

// ModelMetricArrayInput is an input type that accepts ModelMetricArray and ModelMetricArrayOutput values.
// You can construct a concrete instance of `ModelMetricArrayInput` via:
//
//	ModelMetricArray{ ModelMetricArgs{...} }
type ModelMetricArrayInput interface {
	pulumi.Input

	ToModelMetricArrayOutput() ModelMetricArrayOutput
	ToModelMetricArrayOutputWithContext(context.Context) ModelMetricArrayOutput
}

type ModelMetricArray []ModelMetricInput

func (ModelMetricArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelMetric)(nil)).Elem()
}

func (i ModelMetricArray) ToModelMetricArrayOutput() ModelMetricArrayOutput {
	return i.ToModelMetricArrayOutputWithContext(context.Background())
}

func (i ModelMetricArray) ToModelMetricArrayOutputWithContext(ctx context.Context) ModelMetricArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelMetricArrayOutput)
}

type ModelMetricOutput struct{ *pulumi.OutputState }

func (ModelMetricOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelMetric)(nil)).Elem()
}

func (o ModelMetricOutput) ToModelMetricOutput() ModelMetricOutput {
	return o
}

func (o ModelMetricOutput) ToModelMetricOutputWithContext(ctx context.Context) ModelMetricOutput {
	return o
}

// Summary of count of samples used during model training.
func (o ModelMetricOutput) DatasetSummaries() ModelMetricDatasetSummaryArrayOutput {
	return o.ApplyT(func(v ModelMetric) []ModelMetricDatasetSummary { return v.DatasetSummaries }).(ModelMetricDatasetSummaryArrayOutput)
}

// List of metrics entries per label.
func (o ModelMetricOutput) LabelMetricsReports() ModelMetricLabelMetricsReportArrayOutput {
	return o.ApplyT(func(v ModelMetric) []ModelMetricLabelMetricsReport { return v.LabelMetricsReports }).(ModelMetricLabelMetricsReportArrayOutput)
}

// The type of the Document model.
func (o ModelMetricOutput) ModelType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelMetric) *string { return v.ModelType }).(pulumi.StringPtrOutput)
}

// Overall Metrics report for Document Classification Model.
func (o ModelMetricOutput) OverallMetricsReports() ModelMetricOverallMetricsReportArrayOutput {
	return o.ApplyT(func(v ModelMetric) []ModelMetricOverallMetricsReport { return v.OverallMetricsReports }).(ModelMetricOverallMetricsReportArrayOutput)
}

type ModelMetricArrayOutput struct{ *pulumi.OutputState }

func (ModelMetricArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelMetric)(nil)).Elem()
}

func (o ModelMetricArrayOutput) ToModelMetricArrayOutput() ModelMetricArrayOutput {
	return o
}

func (o ModelMetricArrayOutput) ToModelMetricArrayOutputWithContext(ctx context.Context) ModelMetricArrayOutput {
	return o
}

func (o ModelMetricArrayOutput) Index(i pulumi.IntInput) ModelMetricOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ModelMetric {
		return vs[0].([]ModelMetric)[vs[1].(int)]
	}).(ModelMetricOutput)
}

type ModelMetricDatasetSummary struct {
	// Number of samples used for testing the model.
	TestSampleCount *int `pulumi:"testSampleCount"`
	// Number of samples used for training the model.
	TrainingSampleCount *int `pulumi:"trainingSampleCount"`
	// Number of samples used for validating the model.
	ValidationSampleCount *int `pulumi:"validationSampleCount"`
}

// ModelMetricDatasetSummaryInput is an input type that accepts ModelMetricDatasetSummaryArgs and ModelMetricDatasetSummaryOutput values.
// You can construct a concrete instance of `ModelMetricDatasetSummaryInput` via:
//
//	ModelMetricDatasetSummaryArgs{...}
type ModelMetricDatasetSummaryInput interface {
	pulumi.Input

	ToModelMetricDatasetSummaryOutput() ModelMetricDatasetSummaryOutput
	ToModelMetricDatasetSummaryOutputWithContext(context.Context) ModelMetricDatasetSummaryOutput
}

type ModelMetricDatasetSummaryArgs struct {
	// Number of samples used for testing the model.
	TestSampleCount pulumi.IntPtrInput `pulumi:"testSampleCount"`
	// Number of samples used for training the model.
	TrainingSampleCount pulumi.IntPtrInput `pulumi:"trainingSampleCount"`
	// Number of samples used for validating the model.
	ValidationSampleCount pulumi.IntPtrInput `pulumi:"validationSampleCount"`
}

func (ModelMetricDatasetSummaryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelMetricDatasetSummary)(nil)).Elem()
}

func (i ModelMetricDatasetSummaryArgs) ToModelMetricDatasetSummaryOutput() ModelMetricDatasetSummaryOutput {
	return i.ToModelMetricDatasetSummaryOutputWithContext(context.Background())
}

func (i ModelMetricDatasetSummaryArgs) ToModelMetricDatasetSummaryOutputWithContext(ctx context.Context) ModelMetricDatasetSummaryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelMetricDatasetSummaryOutput)
}

// ModelMetricDatasetSummaryArrayInput is an input type that accepts ModelMetricDatasetSummaryArray and ModelMetricDatasetSummaryArrayOutput values.
// You can construct a concrete instance of `ModelMetricDatasetSummaryArrayInput` via:
//
//	ModelMetricDatasetSummaryArray{ ModelMetricDatasetSummaryArgs{...} }
type ModelMetricDatasetSummaryArrayInput interface {
	pulumi.Input

	ToModelMetricDatasetSummaryArrayOutput() ModelMetricDatasetSummaryArrayOutput
	ToModelMetricDatasetSummaryArrayOutputWithContext(context.Context) ModelMetricDatasetSummaryArrayOutput
}

type ModelMetricDatasetSummaryArray []ModelMetricDatasetSummaryInput

func (ModelMetricDatasetSummaryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelMetricDatasetSummary)(nil)).Elem()
}

func (i ModelMetricDatasetSummaryArray) ToModelMetricDatasetSummaryArrayOutput() ModelMetricDatasetSummaryArrayOutput {
	return i.ToModelMetricDatasetSummaryArrayOutputWithContext(context.Background())
}

func (i ModelMetricDatasetSummaryArray) ToModelMetricDatasetSummaryArrayOutputWithContext(ctx context.Context) ModelMetricDatasetSummaryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelMetricDatasetSummaryArrayOutput)
}

type ModelMetricDatasetSummaryOutput struct{ *pulumi.OutputState }

func (ModelMetricDatasetSummaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelMetricDatasetSummary)(nil)).Elem()
}

func (o ModelMetricDatasetSummaryOutput) ToModelMetricDatasetSummaryOutput() ModelMetricDatasetSummaryOutput {
	return o
}

func (o ModelMetricDatasetSummaryOutput) ToModelMetricDatasetSummaryOutputWithContext(ctx context.Context) ModelMetricDatasetSummaryOutput {
	return o
}

// Number of samples used for testing the model.
func (o ModelMetricDatasetSummaryOutput) TestSampleCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ModelMetricDatasetSummary) *int { return v.TestSampleCount }).(pulumi.IntPtrOutput)
}

// Number of samples used for training the model.
func (o ModelMetricDatasetSummaryOutput) TrainingSampleCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ModelMetricDatasetSummary) *int { return v.TrainingSampleCount }).(pulumi.IntPtrOutput)
}

// Number of samples used for validating the model.
func (o ModelMetricDatasetSummaryOutput) ValidationSampleCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ModelMetricDatasetSummary) *int { return v.ValidationSampleCount }).(pulumi.IntPtrOutput)
}

type ModelMetricDatasetSummaryArrayOutput struct{ *pulumi.OutputState }

func (ModelMetricDatasetSummaryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelMetricDatasetSummary)(nil)).Elem()
}

func (o ModelMetricDatasetSummaryArrayOutput) ToModelMetricDatasetSummaryArrayOutput() ModelMetricDatasetSummaryArrayOutput {
	return o
}

func (o ModelMetricDatasetSummaryArrayOutput) ToModelMetricDatasetSummaryArrayOutputWithContext(ctx context.Context) ModelMetricDatasetSummaryArrayOutput {
	return o
}

func (o ModelMetricDatasetSummaryArrayOutput) Index(i pulumi.IntInput) ModelMetricDatasetSummaryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ModelMetricDatasetSummary {
		return vs[0].([]ModelMetricDatasetSummary)[vs[1].(int)]
	}).(ModelMetricDatasetSummaryOutput)
}

type ModelMetricLabelMetricsReport struct {
	// List of document classification confidence report.
	ConfidenceEntries []ModelMetricLabelMetricsReportConfidenceEntry `pulumi:"confidenceEntries"`
	// Total test documents in the label.
	DocumentCount *int `pulumi:"documentCount"`
	// Label name
	Label *string `pulumi:"label"`
	// Mean average precision under different thresholds
	MeanAveragePrecision *float64 `pulumi:"meanAveragePrecision"`
}

// ModelMetricLabelMetricsReportInput is an input type that accepts ModelMetricLabelMetricsReportArgs and ModelMetricLabelMetricsReportOutput values.
// You can construct a concrete instance of `ModelMetricLabelMetricsReportInput` via:
//
//	ModelMetricLabelMetricsReportArgs{...}
type ModelMetricLabelMetricsReportInput interface {
	pulumi.Input

	ToModelMetricLabelMetricsReportOutput() ModelMetricLabelMetricsReportOutput
	ToModelMetricLabelMetricsReportOutputWithContext(context.Context) ModelMetricLabelMetricsReportOutput
}

type ModelMetricLabelMetricsReportArgs struct {
	// List of document classification confidence report.
	ConfidenceEntries ModelMetricLabelMetricsReportConfidenceEntryArrayInput `pulumi:"confidenceEntries"`
	// Total test documents in the label.
	DocumentCount pulumi.IntPtrInput `pulumi:"documentCount"`
	// Label name
	Label pulumi.StringPtrInput `pulumi:"label"`
	// Mean average precision under different thresholds
	MeanAveragePrecision pulumi.Float64PtrInput `pulumi:"meanAveragePrecision"`
}

func (ModelMetricLabelMetricsReportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelMetricLabelMetricsReport)(nil)).Elem()
}

func (i ModelMetricLabelMetricsReportArgs) ToModelMetricLabelMetricsReportOutput() ModelMetricLabelMetricsReportOutput {
	return i.ToModelMetricLabelMetricsReportOutputWithContext(context.Background())
}

func (i ModelMetricLabelMetricsReportArgs) ToModelMetricLabelMetricsReportOutputWithContext(ctx context.Context) ModelMetricLabelMetricsReportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelMetricLabelMetricsReportOutput)
}

// ModelMetricLabelMetricsReportArrayInput is an input type that accepts ModelMetricLabelMetricsReportArray and ModelMetricLabelMetricsReportArrayOutput values.
// You can construct a concrete instance of `ModelMetricLabelMetricsReportArrayInput` via:
//
//	ModelMetricLabelMetricsReportArray{ ModelMetricLabelMetricsReportArgs{...} }
type ModelMetricLabelMetricsReportArrayInput interface {
	pulumi.Input

	ToModelMetricLabelMetricsReportArrayOutput() ModelMetricLabelMetricsReportArrayOutput
	ToModelMetricLabelMetricsReportArrayOutputWithContext(context.Context) ModelMetricLabelMetricsReportArrayOutput
}

type ModelMetricLabelMetricsReportArray []ModelMetricLabelMetricsReportInput

func (ModelMetricLabelMetricsReportArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelMetricLabelMetricsReport)(nil)).Elem()
}

func (i ModelMetricLabelMetricsReportArray) ToModelMetricLabelMetricsReportArrayOutput() ModelMetricLabelMetricsReportArrayOutput {
	return i.ToModelMetricLabelMetricsReportArrayOutputWithContext(context.Background())
}

func (i ModelMetricLabelMetricsReportArray) ToModelMetricLabelMetricsReportArrayOutputWithContext(ctx context.Context) ModelMetricLabelMetricsReportArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelMetricLabelMetricsReportArrayOutput)
}

type ModelMetricLabelMetricsReportOutput struct{ *pulumi.OutputState }

func (ModelMetricLabelMetricsReportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelMetricLabelMetricsReport)(nil)).Elem()
}

func (o ModelMetricLabelMetricsReportOutput) ToModelMetricLabelMetricsReportOutput() ModelMetricLabelMetricsReportOutput {
	return o
}

func (o ModelMetricLabelMetricsReportOutput) ToModelMetricLabelMetricsReportOutputWithContext(ctx context.Context) ModelMetricLabelMetricsReportOutput {
	return o
}

// List of document classification confidence report.
func (o ModelMetricLabelMetricsReportOutput) ConfidenceEntries() ModelMetricLabelMetricsReportConfidenceEntryArrayOutput {
	return o.ApplyT(func(v ModelMetricLabelMetricsReport) []ModelMetricLabelMetricsReportConfidenceEntry {
		return v.ConfidenceEntries
	}).(ModelMetricLabelMetricsReportConfidenceEntryArrayOutput)
}

// Total test documents in the label.
func (o ModelMetricLabelMetricsReportOutput) DocumentCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ModelMetricLabelMetricsReport) *int { return v.DocumentCount }).(pulumi.IntPtrOutput)
}

// Label name
func (o ModelMetricLabelMetricsReportOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelMetricLabelMetricsReport) *string { return v.Label }).(pulumi.StringPtrOutput)
}

// Mean average precision under different thresholds
func (o ModelMetricLabelMetricsReportOutput) MeanAveragePrecision() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ModelMetricLabelMetricsReport) *float64 { return v.MeanAveragePrecision }).(pulumi.Float64PtrOutput)
}

type ModelMetricLabelMetricsReportArrayOutput struct{ *pulumi.OutputState }

func (ModelMetricLabelMetricsReportArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelMetricLabelMetricsReport)(nil)).Elem()
}

func (o ModelMetricLabelMetricsReportArrayOutput) ToModelMetricLabelMetricsReportArrayOutput() ModelMetricLabelMetricsReportArrayOutput {
	return o
}

func (o ModelMetricLabelMetricsReportArrayOutput) ToModelMetricLabelMetricsReportArrayOutputWithContext(ctx context.Context) ModelMetricLabelMetricsReportArrayOutput {
	return o
}

func (o ModelMetricLabelMetricsReportArrayOutput) Index(i pulumi.IntInput) ModelMetricLabelMetricsReportOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ModelMetricLabelMetricsReport {
		return vs[0].([]ModelMetricLabelMetricsReport)[vs[1].(int)]
	}).(ModelMetricLabelMetricsReportOutput)
}

type ModelMetricLabelMetricsReportConfidenceEntry struct {
	// accuracy under the threshold
	Accuracy *float64 `pulumi:"accuracy"`
	// f1Score under the threshold
	F1score *float64 `pulumi:"f1score"`
	// Precision under the threshold
	Precision *float64 `pulumi:"precision"`
	// Recall under the threshold
	Recall *float64 `pulumi:"recall"`
	// Threshold used to calculate precision and recall.
	Threshold *float64 `pulumi:"threshold"`
}

// ModelMetricLabelMetricsReportConfidenceEntryInput is an input type that accepts ModelMetricLabelMetricsReportConfidenceEntryArgs and ModelMetricLabelMetricsReportConfidenceEntryOutput values.
// You can construct a concrete instance of `ModelMetricLabelMetricsReportConfidenceEntryInput` via:
//
//	ModelMetricLabelMetricsReportConfidenceEntryArgs{...}
type ModelMetricLabelMetricsReportConfidenceEntryInput interface {
	pulumi.Input

	ToModelMetricLabelMetricsReportConfidenceEntryOutput() ModelMetricLabelMetricsReportConfidenceEntryOutput
	ToModelMetricLabelMetricsReportConfidenceEntryOutputWithContext(context.Context) ModelMetricLabelMetricsReportConfidenceEntryOutput
}

type ModelMetricLabelMetricsReportConfidenceEntryArgs struct {
	// accuracy under the threshold
	Accuracy pulumi.Float64PtrInput `pulumi:"accuracy"`
	// f1Score under the threshold
	F1score pulumi.Float64PtrInput `pulumi:"f1score"`
	// Precision under the threshold
	Precision pulumi.Float64PtrInput `pulumi:"precision"`
	// Recall under the threshold
	Recall pulumi.Float64PtrInput `pulumi:"recall"`
	// Threshold used to calculate precision and recall.
	Threshold pulumi.Float64PtrInput `pulumi:"threshold"`
}

func (ModelMetricLabelMetricsReportConfidenceEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelMetricLabelMetricsReportConfidenceEntry)(nil)).Elem()
}

func (i ModelMetricLabelMetricsReportConfidenceEntryArgs) ToModelMetricLabelMetricsReportConfidenceEntryOutput() ModelMetricLabelMetricsReportConfidenceEntryOutput {
	return i.ToModelMetricLabelMetricsReportConfidenceEntryOutputWithContext(context.Background())
}

func (i ModelMetricLabelMetricsReportConfidenceEntryArgs) ToModelMetricLabelMetricsReportConfidenceEntryOutputWithContext(ctx context.Context) ModelMetricLabelMetricsReportConfidenceEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelMetricLabelMetricsReportConfidenceEntryOutput)
}

// ModelMetricLabelMetricsReportConfidenceEntryArrayInput is an input type that accepts ModelMetricLabelMetricsReportConfidenceEntryArray and ModelMetricLabelMetricsReportConfidenceEntryArrayOutput values.
// You can construct a concrete instance of `ModelMetricLabelMetricsReportConfidenceEntryArrayInput` via:
//
//	ModelMetricLabelMetricsReportConfidenceEntryArray{ ModelMetricLabelMetricsReportConfidenceEntryArgs{...} }
type ModelMetricLabelMetricsReportConfidenceEntryArrayInput interface {
	pulumi.Input

	ToModelMetricLabelMetricsReportConfidenceEntryArrayOutput() ModelMetricLabelMetricsReportConfidenceEntryArrayOutput
	ToModelMetricLabelMetricsReportConfidenceEntryArrayOutputWithContext(context.Context) ModelMetricLabelMetricsReportConfidenceEntryArrayOutput
}

type ModelMetricLabelMetricsReportConfidenceEntryArray []ModelMetricLabelMetricsReportConfidenceEntryInput

func (ModelMetricLabelMetricsReportConfidenceEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelMetricLabelMetricsReportConfidenceEntry)(nil)).Elem()
}

func (i ModelMetricLabelMetricsReportConfidenceEntryArray) ToModelMetricLabelMetricsReportConfidenceEntryArrayOutput() ModelMetricLabelMetricsReportConfidenceEntryArrayOutput {
	return i.ToModelMetricLabelMetricsReportConfidenceEntryArrayOutputWithContext(context.Background())
}

func (i ModelMetricLabelMetricsReportConfidenceEntryArray) ToModelMetricLabelMetricsReportConfidenceEntryArrayOutputWithContext(ctx context.Context) ModelMetricLabelMetricsReportConfidenceEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelMetricLabelMetricsReportConfidenceEntryArrayOutput)
}

type ModelMetricLabelMetricsReportConfidenceEntryOutput struct{ *pulumi.OutputState }

func (ModelMetricLabelMetricsReportConfidenceEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelMetricLabelMetricsReportConfidenceEntry)(nil)).Elem()
}

func (o ModelMetricLabelMetricsReportConfidenceEntryOutput) ToModelMetricLabelMetricsReportConfidenceEntryOutput() ModelMetricLabelMetricsReportConfidenceEntryOutput {
	return o
}

func (o ModelMetricLabelMetricsReportConfidenceEntryOutput) ToModelMetricLabelMetricsReportConfidenceEntryOutputWithContext(ctx context.Context) ModelMetricLabelMetricsReportConfidenceEntryOutput {
	return o
}

// accuracy under the threshold
func (o ModelMetricLabelMetricsReportConfidenceEntryOutput) Accuracy() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ModelMetricLabelMetricsReportConfidenceEntry) *float64 { return v.Accuracy }).(pulumi.Float64PtrOutput)
}

// f1Score under the threshold
func (o ModelMetricLabelMetricsReportConfidenceEntryOutput) F1score() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ModelMetricLabelMetricsReportConfidenceEntry) *float64 { return v.F1score }).(pulumi.Float64PtrOutput)
}

// Precision under the threshold
func (o ModelMetricLabelMetricsReportConfidenceEntryOutput) Precision() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ModelMetricLabelMetricsReportConfidenceEntry) *float64 { return v.Precision }).(pulumi.Float64PtrOutput)
}

// Recall under the threshold
func (o ModelMetricLabelMetricsReportConfidenceEntryOutput) Recall() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ModelMetricLabelMetricsReportConfidenceEntry) *float64 { return v.Recall }).(pulumi.Float64PtrOutput)
}

// Threshold used to calculate precision and recall.
func (o ModelMetricLabelMetricsReportConfidenceEntryOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ModelMetricLabelMetricsReportConfidenceEntry) *float64 { return v.Threshold }).(pulumi.Float64PtrOutput)
}

type ModelMetricLabelMetricsReportConfidenceEntryArrayOutput struct{ *pulumi.OutputState }

func (ModelMetricLabelMetricsReportConfidenceEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelMetricLabelMetricsReportConfidenceEntry)(nil)).Elem()
}

func (o ModelMetricLabelMetricsReportConfidenceEntryArrayOutput) ToModelMetricLabelMetricsReportConfidenceEntryArrayOutput() ModelMetricLabelMetricsReportConfidenceEntryArrayOutput {
	return o
}

func (o ModelMetricLabelMetricsReportConfidenceEntryArrayOutput) ToModelMetricLabelMetricsReportConfidenceEntryArrayOutputWithContext(ctx context.Context) ModelMetricLabelMetricsReportConfidenceEntryArrayOutput {
	return o
}

func (o ModelMetricLabelMetricsReportConfidenceEntryArrayOutput) Index(i pulumi.IntInput) ModelMetricLabelMetricsReportConfidenceEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ModelMetricLabelMetricsReportConfidenceEntry {
		return vs[0].([]ModelMetricLabelMetricsReportConfidenceEntry)[vs[1].(int)]
	}).(ModelMetricLabelMetricsReportConfidenceEntryOutput)
}

type ModelMetricOverallMetricsReport struct {
	// List of document classification confidence report.
	ConfidenceEntries []ModelMetricOverallMetricsReportConfidenceEntry `pulumi:"confidenceEntries"`
	// Total test documents in the label.
	DocumentCount *int `pulumi:"documentCount"`
	// Mean average precision under different thresholds
	MeanAveragePrecision *float64 `pulumi:"meanAveragePrecision"`
}

// ModelMetricOverallMetricsReportInput is an input type that accepts ModelMetricOverallMetricsReportArgs and ModelMetricOverallMetricsReportOutput values.
// You can construct a concrete instance of `ModelMetricOverallMetricsReportInput` via:
//
//	ModelMetricOverallMetricsReportArgs{...}
type ModelMetricOverallMetricsReportInput interface {
	pulumi.Input

	ToModelMetricOverallMetricsReportOutput() ModelMetricOverallMetricsReportOutput
	ToModelMetricOverallMetricsReportOutputWithContext(context.Context) ModelMetricOverallMetricsReportOutput
}

type ModelMetricOverallMetricsReportArgs struct {
	// List of document classification confidence report.
	ConfidenceEntries ModelMetricOverallMetricsReportConfidenceEntryArrayInput `pulumi:"confidenceEntries"`
	// Total test documents in the label.
	DocumentCount pulumi.IntPtrInput `pulumi:"documentCount"`
	// Mean average precision under different thresholds
	MeanAveragePrecision pulumi.Float64PtrInput `pulumi:"meanAveragePrecision"`
}

func (ModelMetricOverallMetricsReportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelMetricOverallMetricsReport)(nil)).Elem()
}

func (i ModelMetricOverallMetricsReportArgs) ToModelMetricOverallMetricsReportOutput() ModelMetricOverallMetricsReportOutput {
	return i.ToModelMetricOverallMetricsReportOutputWithContext(context.Background())
}

func (i ModelMetricOverallMetricsReportArgs) ToModelMetricOverallMetricsReportOutputWithContext(ctx context.Context) ModelMetricOverallMetricsReportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelMetricOverallMetricsReportOutput)
}

// ModelMetricOverallMetricsReportArrayInput is an input type that accepts ModelMetricOverallMetricsReportArray and ModelMetricOverallMetricsReportArrayOutput values.
// You can construct a concrete instance of `ModelMetricOverallMetricsReportArrayInput` via:
//
//	ModelMetricOverallMetricsReportArray{ ModelMetricOverallMetricsReportArgs{...} }
type ModelMetricOverallMetricsReportArrayInput interface {
	pulumi.Input

	ToModelMetricOverallMetricsReportArrayOutput() ModelMetricOverallMetricsReportArrayOutput
	ToModelMetricOverallMetricsReportArrayOutputWithContext(context.Context) ModelMetricOverallMetricsReportArrayOutput
}

type ModelMetricOverallMetricsReportArray []ModelMetricOverallMetricsReportInput

func (ModelMetricOverallMetricsReportArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelMetricOverallMetricsReport)(nil)).Elem()
}

func (i ModelMetricOverallMetricsReportArray) ToModelMetricOverallMetricsReportArrayOutput() ModelMetricOverallMetricsReportArrayOutput {
	return i.ToModelMetricOverallMetricsReportArrayOutputWithContext(context.Background())
}

func (i ModelMetricOverallMetricsReportArray) ToModelMetricOverallMetricsReportArrayOutputWithContext(ctx context.Context) ModelMetricOverallMetricsReportArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelMetricOverallMetricsReportArrayOutput)
}

type ModelMetricOverallMetricsReportOutput struct{ *pulumi.OutputState }

func (ModelMetricOverallMetricsReportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelMetricOverallMetricsReport)(nil)).Elem()
}

func (o ModelMetricOverallMetricsReportOutput) ToModelMetricOverallMetricsReportOutput() ModelMetricOverallMetricsReportOutput {
	return o
}

func (o ModelMetricOverallMetricsReportOutput) ToModelMetricOverallMetricsReportOutputWithContext(ctx context.Context) ModelMetricOverallMetricsReportOutput {
	return o
}

// List of document classification confidence report.
func (o ModelMetricOverallMetricsReportOutput) ConfidenceEntries() ModelMetricOverallMetricsReportConfidenceEntryArrayOutput {
	return o.ApplyT(func(v ModelMetricOverallMetricsReport) []ModelMetricOverallMetricsReportConfidenceEntry {
		return v.ConfidenceEntries
	}).(ModelMetricOverallMetricsReportConfidenceEntryArrayOutput)
}

// Total test documents in the label.
func (o ModelMetricOverallMetricsReportOutput) DocumentCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ModelMetricOverallMetricsReport) *int { return v.DocumentCount }).(pulumi.IntPtrOutput)
}

// Mean average precision under different thresholds
func (o ModelMetricOverallMetricsReportOutput) MeanAveragePrecision() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ModelMetricOverallMetricsReport) *float64 { return v.MeanAveragePrecision }).(pulumi.Float64PtrOutput)
}

type ModelMetricOverallMetricsReportArrayOutput struct{ *pulumi.OutputState }

func (ModelMetricOverallMetricsReportArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelMetricOverallMetricsReport)(nil)).Elem()
}

func (o ModelMetricOverallMetricsReportArrayOutput) ToModelMetricOverallMetricsReportArrayOutput() ModelMetricOverallMetricsReportArrayOutput {
	return o
}

func (o ModelMetricOverallMetricsReportArrayOutput) ToModelMetricOverallMetricsReportArrayOutputWithContext(ctx context.Context) ModelMetricOverallMetricsReportArrayOutput {
	return o
}

func (o ModelMetricOverallMetricsReportArrayOutput) Index(i pulumi.IntInput) ModelMetricOverallMetricsReportOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ModelMetricOverallMetricsReport {
		return vs[0].([]ModelMetricOverallMetricsReport)[vs[1].(int)]
	}).(ModelMetricOverallMetricsReportOutput)
}

type ModelMetricOverallMetricsReportConfidenceEntry struct {
	// accuracy under the threshold
	Accuracy *float64 `pulumi:"accuracy"`
	// f1Score under the threshold
	F1score *float64 `pulumi:"f1score"`
	// Precision under the threshold
	Precision *float64 `pulumi:"precision"`
	// Recall under the threshold
	Recall *float64 `pulumi:"recall"`
	// Threshold used to calculate precision and recall.
	Threshold *float64 `pulumi:"threshold"`
}

// ModelMetricOverallMetricsReportConfidenceEntryInput is an input type that accepts ModelMetricOverallMetricsReportConfidenceEntryArgs and ModelMetricOverallMetricsReportConfidenceEntryOutput values.
// You can construct a concrete instance of `ModelMetricOverallMetricsReportConfidenceEntryInput` via:
//
//	ModelMetricOverallMetricsReportConfidenceEntryArgs{...}
type ModelMetricOverallMetricsReportConfidenceEntryInput interface {
	pulumi.Input

	ToModelMetricOverallMetricsReportConfidenceEntryOutput() ModelMetricOverallMetricsReportConfidenceEntryOutput
	ToModelMetricOverallMetricsReportConfidenceEntryOutputWithContext(context.Context) ModelMetricOverallMetricsReportConfidenceEntryOutput
}

type ModelMetricOverallMetricsReportConfidenceEntryArgs struct {
	// accuracy under the threshold
	Accuracy pulumi.Float64PtrInput `pulumi:"accuracy"`
	// f1Score under the threshold
	F1score pulumi.Float64PtrInput `pulumi:"f1score"`
	// Precision under the threshold
	Precision pulumi.Float64PtrInput `pulumi:"precision"`
	// Recall under the threshold
	Recall pulumi.Float64PtrInput `pulumi:"recall"`
	// Threshold used to calculate precision and recall.
	Threshold pulumi.Float64PtrInput `pulumi:"threshold"`
}

func (ModelMetricOverallMetricsReportConfidenceEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelMetricOverallMetricsReportConfidenceEntry)(nil)).Elem()
}

func (i ModelMetricOverallMetricsReportConfidenceEntryArgs) ToModelMetricOverallMetricsReportConfidenceEntryOutput() ModelMetricOverallMetricsReportConfidenceEntryOutput {
	return i.ToModelMetricOverallMetricsReportConfidenceEntryOutputWithContext(context.Background())
}

func (i ModelMetricOverallMetricsReportConfidenceEntryArgs) ToModelMetricOverallMetricsReportConfidenceEntryOutputWithContext(ctx context.Context) ModelMetricOverallMetricsReportConfidenceEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelMetricOverallMetricsReportConfidenceEntryOutput)
}

// ModelMetricOverallMetricsReportConfidenceEntryArrayInput is an input type that accepts ModelMetricOverallMetricsReportConfidenceEntryArray and ModelMetricOverallMetricsReportConfidenceEntryArrayOutput values.
// You can construct a concrete instance of `ModelMetricOverallMetricsReportConfidenceEntryArrayInput` via:
//
//	ModelMetricOverallMetricsReportConfidenceEntryArray{ ModelMetricOverallMetricsReportConfidenceEntryArgs{...} }
type ModelMetricOverallMetricsReportConfidenceEntryArrayInput interface {
	pulumi.Input

	ToModelMetricOverallMetricsReportConfidenceEntryArrayOutput() ModelMetricOverallMetricsReportConfidenceEntryArrayOutput
	ToModelMetricOverallMetricsReportConfidenceEntryArrayOutputWithContext(context.Context) ModelMetricOverallMetricsReportConfidenceEntryArrayOutput
}

type ModelMetricOverallMetricsReportConfidenceEntryArray []ModelMetricOverallMetricsReportConfidenceEntryInput

func (ModelMetricOverallMetricsReportConfidenceEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelMetricOverallMetricsReportConfidenceEntry)(nil)).Elem()
}

func (i ModelMetricOverallMetricsReportConfidenceEntryArray) ToModelMetricOverallMetricsReportConfidenceEntryArrayOutput() ModelMetricOverallMetricsReportConfidenceEntryArrayOutput {
	return i.ToModelMetricOverallMetricsReportConfidenceEntryArrayOutputWithContext(context.Background())
}

func (i ModelMetricOverallMetricsReportConfidenceEntryArray) ToModelMetricOverallMetricsReportConfidenceEntryArrayOutputWithContext(ctx context.Context) ModelMetricOverallMetricsReportConfidenceEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelMetricOverallMetricsReportConfidenceEntryArrayOutput)
}

type ModelMetricOverallMetricsReportConfidenceEntryOutput struct{ *pulumi.OutputState }

func (ModelMetricOverallMetricsReportConfidenceEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelMetricOverallMetricsReportConfidenceEntry)(nil)).Elem()
}

func (o ModelMetricOverallMetricsReportConfidenceEntryOutput) ToModelMetricOverallMetricsReportConfidenceEntryOutput() ModelMetricOverallMetricsReportConfidenceEntryOutput {
	return o
}

func (o ModelMetricOverallMetricsReportConfidenceEntryOutput) ToModelMetricOverallMetricsReportConfidenceEntryOutputWithContext(ctx context.Context) ModelMetricOverallMetricsReportConfidenceEntryOutput {
	return o
}

// accuracy under the threshold
func (o ModelMetricOverallMetricsReportConfidenceEntryOutput) Accuracy() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ModelMetricOverallMetricsReportConfidenceEntry) *float64 { return v.Accuracy }).(pulumi.Float64PtrOutput)
}

// f1Score under the threshold
func (o ModelMetricOverallMetricsReportConfidenceEntryOutput) F1score() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ModelMetricOverallMetricsReportConfidenceEntry) *float64 { return v.F1score }).(pulumi.Float64PtrOutput)
}

// Precision under the threshold
func (o ModelMetricOverallMetricsReportConfidenceEntryOutput) Precision() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ModelMetricOverallMetricsReportConfidenceEntry) *float64 { return v.Precision }).(pulumi.Float64PtrOutput)
}

// Recall under the threshold
func (o ModelMetricOverallMetricsReportConfidenceEntryOutput) Recall() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ModelMetricOverallMetricsReportConfidenceEntry) *float64 { return v.Recall }).(pulumi.Float64PtrOutput)
}

// Threshold used to calculate precision and recall.
func (o ModelMetricOverallMetricsReportConfidenceEntryOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ModelMetricOverallMetricsReportConfidenceEntry) *float64 { return v.Threshold }).(pulumi.Float64PtrOutput)
}

type ModelMetricOverallMetricsReportConfidenceEntryArrayOutput struct{ *pulumi.OutputState }

func (ModelMetricOverallMetricsReportConfidenceEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelMetricOverallMetricsReportConfidenceEntry)(nil)).Elem()
}

func (o ModelMetricOverallMetricsReportConfidenceEntryArrayOutput) ToModelMetricOverallMetricsReportConfidenceEntryArrayOutput() ModelMetricOverallMetricsReportConfidenceEntryArrayOutput {
	return o
}

func (o ModelMetricOverallMetricsReportConfidenceEntryArrayOutput) ToModelMetricOverallMetricsReportConfidenceEntryArrayOutputWithContext(ctx context.Context) ModelMetricOverallMetricsReportConfidenceEntryArrayOutput {
	return o
}

func (o ModelMetricOverallMetricsReportConfidenceEntryArrayOutput) Index(i pulumi.IntInput) ModelMetricOverallMetricsReportConfidenceEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ModelMetricOverallMetricsReportConfidenceEntry {
		return vs[0].([]ModelMetricOverallMetricsReportConfidenceEntry)[vs[1].(int)]
	}).(ModelMetricOverallMetricsReportConfidenceEntryOutput)
}

type ModelTestingDataset struct {
	// The name of the Object Storage bucket that contains the input data file.
	Bucket *string `pulumi:"bucket"`
	// OCID of the Data Labeling dataset.
	DatasetId *string `pulumi:"datasetId"`
	// The dataset type, based on where it is stored.
	DatasetType string `pulumi:"datasetType"`
	// The namespace name of the Object Storage bucket that contains the input data file.
	Namespace *string `pulumi:"namespace"`
	// The object name of the input data file.
	Object *string `pulumi:"object"`
}

// ModelTestingDatasetInput is an input type that accepts ModelTestingDatasetArgs and ModelTestingDatasetOutput values.
// You can construct a concrete instance of `ModelTestingDatasetInput` via:
//
//	ModelTestingDatasetArgs{...}
type ModelTestingDatasetInput interface {
	pulumi.Input

	ToModelTestingDatasetOutput() ModelTestingDatasetOutput
	ToModelTestingDatasetOutputWithContext(context.Context) ModelTestingDatasetOutput
}

type ModelTestingDatasetArgs struct {
	// The name of the Object Storage bucket that contains the input data file.
	Bucket pulumi.StringPtrInput `pulumi:"bucket"`
	// OCID of the Data Labeling dataset.
	DatasetId pulumi.StringPtrInput `pulumi:"datasetId"`
	// The dataset type, based on where it is stored.
	DatasetType pulumi.StringInput `pulumi:"datasetType"`
	// The namespace name of the Object Storage bucket that contains the input data file.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// The object name of the input data file.
	Object pulumi.StringPtrInput `pulumi:"object"`
}

func (ModelTestingDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelTestingDataset)(nil)).Elem()
}

func (i ModelTestingDatasetArgs) ToModelTestingDatasetOutput() ModelTestingDatasetOutput {
	return i.ToModelTestingDatasetOutputWithContext(context.Background())
}

func (i ModelTestingDatasetArgs) ToModelTestingDatasetOutputWithContext(ctx context.Context) ModelTestingDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelTestingDatasetOutput)
}

func (i ModelTestingDatasetArgs) ToModelTestingDatasetPtrOutput() ModelTestingDatasetPtrOutput {
	return i.ToModelTestingDatasetPtrOutputWithContext(context.Background())
}

func (i ModelTestingDatasetArgs) ToModelTestingDatasetPtrOutputWithContext(ctx context.Context) ModelTestingDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelTestingDatasetOutput).ToModelTestingDatasetPtrOutputWithContext(ctx)
}

// ModelTestingDatasetPtrInput is an input type that accepts ModelTestingDatasetArgs, ModelTestingDatasetPtr and ModelTestingDatasetPtrOutput values.
// You can construct a concrete instance of `ModelTestingDatasetPtrInput` via:
//
//	        ModelTestingDatasetArgs{...}
//
//	or:
//
//	        nil
type ModelTestingDatasetPtrInput interface {
	pulumi.Input

	ToModelTestingDatasetPtrOutput() ModelTestingDatasetPtrOutput
	ToModelTestingDatasetPtrOutputWithContext(context.Context) ModelTestingDatasetPtrOutput
}

type modelTestingDatasetPtrType ModelTestingDatasetArgs

func ModelTestingDatasetPtr(v *ModelTestingDatasetArgs) ModelTestingDatasetPtrInput {
	return (*modelTestingDatasetPtrType)(v)
}

func (*modelTestingDatasetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelTestingDataset)(nil)).Elem()
}

func (i *modelTestingDatasetPtrType) ToModelTestingDatasetPtrOutput() ModelTestingDatasetPtrOutput {
	return i.ToModelTestingDatasetPtrOutputWithContext(context.Background())
}

func (i *modelTestingDatasetPtrType) ToModelTestingDatasetPtrOutputWithContext(ctx context.Context) ModelTestingDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelTestingDatasetPtrOutput)
}

type ModelTestingDatasetOutput struct{ *pulumi.OutputState }

func (ModelTestingDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelTestingDataset)(nil)).Elem()
}

func (o ModelTestingDatasetOutput) ToModelTestingDatasetOutput() ModelTestingDatasetOutput {
	return o
}

func (o ModelTestingDatasetOutput) ToModelTestingDatasetOutputWithContext(ctx context.Context) ModelTestingDatasetOutput {
	return o
}

func (o ModelTestingDatasetOutput) ToModelTestingDatasetPtrOutput() ModelTestingDatasetPtrOutput {
	return o.ToModelTestingDatasetPtrOutputWithContext(context.Background())
}

func (o ModelTestingDatasetOutput) ToModelTestingDatasetPtrOutputWithContext(ctx context.Context) ModelTestingDatasetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelTestingDataset) *ModelTestingDataset {
		return &v
	}).(ModelTestingDatasetPtrOutput)
}

// The name of the Object Storage bucket that contains the input data file.
func (o ModelTestingDatasetOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelTestingDataset) *string { return v.Bucket }).(pulumi.StringPtrOutput)
}

// OCID of the Data Labeling dataset.
func (o ModelTestingDatasetOutput) DatasetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelTestingDataset) *string { return v.DatasetId }).(pulumi.StringPtrOutput)
}

// The dataset type, based on where it is stored.
func (o ModelTestingDatasetOutput) DatasetType() pulumi.StringOutput {
	return o.ApplyT(func(v ModelTestingDataset) string { return v.DatasetType }).(pulumi.StringOutput)
}

// The namespace name of the Object Storage bucket that contains the input data file.
func (o ModelTestingDatasetOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelTestingDataset) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// The object name of the input data file.
func (o ModelTestingDatasetOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelTestingDataset) *string { return v.Object }).(pulumi.StringPtrOutput)
}

type ModelTestingDatasetPtrOutput struct{ *pulumi.OutputState }

func (ModelTestingDatasetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelTestingDataset)(nil)).Elem()
}

func (o ModelTestingDatasetPtrOutput) ToModelTestingDatasetPtrOutput() ModelTestingDatasetPtrOutput {
	return o
}

func (o ModelTestingDatasetPtrOutput) ToModelTestingDatasetPtrOutputWithContext(ctx context.Context) ModelTestingDatasetPtrOutput {
	return o
}

func (o ModelTestingDatasetPtrOutput) Elem() ModelTestingDatasetOutput {
	return o.ApplyT(func(v *ModelTestingDataset) ModelTestingDataset {
		if v != nil {
			return *v
		}
		var ret ModelTestingDataset
		return ret
	}).(ModelTestingDatasetOutput)
}

// The name of the Object Storage bucket that contains the input data file.
func (o ModelTestingDatasetPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelTestingDataset) *string {
		if v == nil {
			return nil
		}
		return v.Bucket
	}).(pulumi.StringPtrOutput)
}

// OCID of the Data Labeling dataset.
func (o ModelTestingDatasetPtrOutput) DatasetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelTestingDataset) *string {
		if v == nil {
			return nil
		}
		return v.DatasetId
	}).(pulumi.StringPtrOutput)
}

// The dataset type, based on where it is stored.
func (o ModelTestingDatasetPtrOutput) DatasetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelTestingDataset) *string {
		if v == nil {
			return nil
		}
		return &v.DatasetType
	}).(pulumi.StringPtrOutput)
}

// The namespace name of the Object Storage bucket that contains the input data file.
func (o ModelTestingDatasetPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelTestingDataset) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The object name of the input data file.
func (o ModelTestingDatasetPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelTestingDataset) *string {
		if v == nil {
			return nil
		}
		return v.Object
	}).(pulumi.StringPtrOutput)
}

type ModelTrainingDataset struct {
	// The name of the Object Storage bucket that contains the input data file.
	Bucket *string `pulumi:"bucket"`
	// OCID of the Data Labeling dataset.
	DatasetId *string `pulumi:"datasetId"`
	// The dataset type, based on where it is stored.
	DatasetType string `pulumi:"datasetType"`
	// The namespace name of the Object Storage bucket that contains the input data file.
	Namespace *string `pulumi:"namespace"`
	// The object name of the input data file.
	Object *string `pulumi:"object"`
}

// ModelTrainingDatasetInput is an input type that accepts ModelTrainingDatasetArgs and ModelTrainingDatasetOutput values.
// You can construct a concrete instance of `ModelTrainingDatasetInput` via:
//
//	ModelTrainingDatasetArgs{...}
type ModelTrainingDatasetInput interface {
	pulumi.Input

	ToModelTrainingDatasetOutput() ModelTrainingDatasetOutput
	ToModelTrainingDatasetOutputWithContext(context.Context) ModelTrainingDatasetOutput
}

type ModelTrainingDatasetArgs struct {
	// The name of the Object Storage bucket that contains the input data file.
	Bucket pulumi.StringPtrInput `pulumi:"bucket"`
	// OCID of the Data Labeling dataset.
	DatasetId pulumi.StringPtrInput `pulumi:"datasetId"`
	// The dataset type, based on where it is stored.
	DatasetType pulumi.StringInput `pulumi:"datasetType"`
	// The namespace name of the Object Storage bucket that contains the input data file.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// The object name of the input data file.
	Object pulumi.StringPtrInput `pulumi:"object"`
}

func (ModelTrainingDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelTrainingDataset)(nil)).Elem()
}

func (i ModelTrainingDatasetArgs) ToModelTrainingDatasetOutput() ModelTrainingDatasetOutput {
	return i.ToModelTrainingDatasetOutputWithContext(context.Background())
}

func (i ModelTrainingDatasetArgs) ToModelTrainingDatasetOutputWithContext(ctx context.Context) ModelTrainingDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelTrainingDatasetOutput)
}

func (i ModelTrainingDatasetArgs) ToModelTrainingDatasetPtrOutput() ModelTrainingDatasetPtrOutput {
	return i.ToModelTrainingDatasetPtrOutputWithContext(context.Background())
}

func (i ModelTrainingDatasetArgs) ToModelTrainingDatasetPtrOutputWithContext(ctx context.Context) ModelTrainingDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelTrainingDatasetOutput).ToModelTrainingDatasetPtrOutputWithContext(ctx)
}

// ModelTrainingDatasetPtrInput is an input type that accepts ModelTrainingDatasetArgs, ModelTrainingDatasetPtr and ModelTrainingDatasetPtrOutput values.
// You can construct a concrete instance of `ModelTrainingDatasetPtrInput` via:
//
//	        ModelTrainingDatasetArgs{...}
//
//	or:
//
//	        nil
type ModelTrainingDatasetPtrInput interface {
	pulumi.Input

	ToModelTrainingDatasetPtrOutput() ModelTrainingDatasetPtrOutput
	ToModelTrainingDatasetPtrOutputWithContext(context.Context) ModelTrainingDatasetPtrOutput
}

type modelTrainingDatasetPtrType ModelTrainingDatasetArgs

func ModelTrainingDatasetPtr(v *ModelTrainingDatasetArgs) ModelTrainingDatasetPtrInput {
	return (*modelTrainingDatasetPtrType)(v)
}

func (*modelTrainingDatasetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelTrainingDataset)(nil)).Elem()
}

func (i *modelTrainingDatasetPtrType) ToModelTrainingDatasetPtrOutput() ModelTrainingDatasetPtrOutput {
	return i.ToModelTrainingDatasetPtrOutputWithContext(context.Background())
}

func (i *modelTrainingDatasetPtrType) ToModelTrainingDatasetPtrOutputWithContext(ctx context.Context) ModelTrainingDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelTrainingDatasetPtrOutput)
}

type ModelTrainingDatasetOutput struct{ *pulumi.OutputState }

func (ModelTrainingDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelTrainingDataset)(nil)).Elem()
}

func (o ModelTrainingDatasetOutput) ToModelTrainingDatasetOutput() ModelTrainingDatasetOutput {
	return o
}

func (o ModelTrainingDatasetOutput) ToModelTrainingDatasetOutputWithContext(ctx context.Context) ModelTrainingDatasetOutput {
	return o
}

func (o ModelTrainingDatasetOutput) ToModelTrainingDatasetPtrOutput() ModelTrainingDatasetPtrOutput {
	return o.ToModelTrainingDatasetPtrOutputWithContext(context.Background())
}

func (o ModelTrainingDatasetOutput) ToModelTrainingDatasetPtrOutputWithContext(ctx context.Context) ModelTrainingDatasetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelTrainingDataset) *ModelTrainingDataset {
		return &v
	}).(ModelTrainingDatasetPtrOutput)
}

// The name of the Object Storage bucket that contains the input data file.
func (o ModelTrainingDatasetOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelTrainingDataset) *string { return v.Bucket }).(pulumi.StringPtrOutput)
}

// OCID of the Data Labeling dataset.
func (o ModelTrainingDatasetOutput) DatasetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelTrainingDataset) *string { return v.DatasetId }).(pulumi.StringPtrOutput)
}

// The dataset type, based on where it is stored.
func (o ModelTrainingDatasetOutput) DatasetType() pulumi.StringOutput {
	return o.ApplyT(func(v ModelTrainingDataset) string { return v.DatasetType }).(pulumi.StringOutput)
}

// The namespace name of the Object Storage bucket that contains the input data file.
func (o ModelTrainingDatasetOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelTrainingDataset) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// The object name of the input data file.
func (o ModelTrainingDatasetOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelTrainingDataset) *string { return v.Object }).(pulumi.StringPtrOutput)
}

type ModelTrainingDatasetPtrOutput struct{ *pulumi.OutputState }

func (ModelTrainingDatasetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelTrainingDataset)(nil)).Elem()
}

func (o ModelTrainingDatasetPtrOutput) ToModelTrainingDatasetPtrOutput() ModelTrainingDatasetPtrOutput {
	return o
}

func (o ModelTrainingDatasetPtrOutput) ToModelTrainingDatasetPtrOutputWithContext(ctx context.Context) ModelTrainingDatasetPtrOutput {
	return o
}

func (o ModelTrainingDatasetPtrOutput) Elem() ModelTrainingDatasetOutput {
	return o.ApplyT(func(v *ModelTrainingDataset) ModelTrainingDataset {
		if v != nil {
			return *v
		}
		var ret ModelTrainingDataset
		return ret
	}).(ModelTrainingDatasetOutput)
}

// The name of the Object Storage bucket that contains the input data file.
func (o ModelTrainingDatasetPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelTrainingDataset) *string {
		if v == nil {
			return nil
		}
		return v.Bucket
	}).(pulumi.StringPtrOutput)
}

// OCID of the Data Labeling dataset.
func (o ModelTrainingDatasetPtrOutput) DatasetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelTrainingDataset) *string {
		if v == nil {
			return nil
		}
		return v.DatasetId
	}).(pulumi.StringPtrOutput)
}

// The dataset type, based on where it is stored.
func (o ModelTrainingDatasetPtrOutput) DatasetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelTrainingDataset) *string {
		if v == nil {
			return nil
		}
		return &v.DatasetType
	}).(pulumi.StringPtrOutput)
}

// The namespace name of the Object Storage bucket that contains the input data file.
func (o ModelTrainingDatasetPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelTrainingDataset) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The object name of the input data file.
func (o ModelTrainingDatasetPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelTrainingDataset) *string {
		if v == nil {
			return nil
		}
		return v.Object
	}).(pulumi.StringPtrOutput)
}

type ModelValidationDataset struct {
	// The name of the Object Storage bucket that contains the input data file.
	Bucket *string `pulumi:"bucket"`
	// OCID of the Data Labeling dataset.
	DatasetId *string `pulumi:"datasetId"`
	// The dataset type, based on where it is stored.
	DatasetType string `pulumi:"datasetType"`
	// The namespace name of the Object Storage bucket that contains the input data file.
	Namespace *string `pulumi:"namespace"`
	// The object name of the input data file.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Object *string `pulumi:"object"`
}

// ModelValidationDatasetInput is an input type that accepts ModelValidationDatasetArgs and ModelValidationDatasetOutput values.
// You can construct a concrete instance of `ModelValidationDatasetInput` via:
//
//	ModelValidationDatasetArgs{...}
type ModelValidationDatasetInput interface {
	pulumi.Input

	ToModelValidationDatasetOutput() ModelValidationDatasetOutput
	ToModelValidationDatasetOutputWithContext(context.Context) ModelValidationDatasetOutput
}

type ModelValidationDatasetArgs struct {
	// The name of the Object Storage bucket that contains the input data file.
	Bucket pulumi.StringPtrInput `pulumi:"bucket"`
	// OCID of the Data Labeling dataset.
	DatasetId pulumi.StringPtrInput `pulumi:"datasetId"`
	// The dataset type, based on where it is stored.
	DatasetType pulumi.StringInput `pulumi:"datasetType"`
	// The namespace name of the Object Storage bucket that contains the input data file.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// The object name of the input data file.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Object pulumi.StringPtrInput `pulumi:"object"`
}

func (ModelValidationDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelValidationDataset)(nil)).Elem()
}

func (i ModelValidationDatasetArgs) ToModelValidationDatasetOutput() ModelValidationDatasetOutput {
	return i.ToModelValidationDatasetOutputWithContext(context.Background())
}

func (i ModelValidationDatasetArgs) ToModelValidationDatasetOutputWithContext(ctx context.Context) ModelValidationDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelValidationDatasetOutput)
}

func (i ModelValidationDatasetArgs) ToModelValidationDatasetPtrOutput() ModelValidationDatasetPtrOutput {
	return i.ToModelValidationDatasetPtrOutputWithContext(context.Background())
}

func (i ModelValidationDatasetArgs) ToModelValidationDatasetPtrOutputWithContext(ctx context.Context) ModelValidationDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelValidationDatasetOutput).ToModelValidationDatasetPtrOutputWithContext(ctx)
}

// ModelValidationDatasetPtrInput is an input type that accepts ModelValidationDatasetArgs, ModelValidationDatasetPtr and ModelValidationDatasetPtrOutput values.
// You can construct a concrete instance of `ModelValidationDatasetPtrInput` via:
//
//	        ModelValidationDatasetArgs{...}
//
//	or:
//
//	        nil
type ModelValidationDatasetPtrInput interface {
	pulumi.Input

	ToModelValidationDatasetPtrOutput() ModelValidationDatasetPtrOutput
	ToModelValidationDatasetPtrOutputWithContext(context.Context) ModelValidationDatasetPtrOutput
}

type modelValidationDatasetPtrType ModelValidationDatasetArgs

func ModelValidationDatasetPtr(v *ModelValidationDatasetArgs) ModelValidationDatasetPtrInput {
	return (*modelValidationDatasetPtrType)(v)
}

func (*modelValidationDatasetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelValidationDataset)(nil)).Elem()
}

func (i *modelValidationDatasetPtrType) ToModelValidationDatasetPtrOutput() ModelValidationDatasetPtrOutput {
	return i.ToModelValidationDatasetPtrOutputWithContext(context.Background())
}

func (i *modelValidationDatasetPtrType) ToModelValidationDatasetPtrOutputWithContext(ctx context.Context) ModelValidationDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelValidationDatasetPtrOutput)
}

type ModelValidationDatasetOutput struct{ *pulumi.OutputState }

func (ModelValidationDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelValidationDataset)(nil)).Elem()
}

func (o ModelValidationDatasetOutput) ToModelValidationDatasetOutput() ModelValidationDatasetOutput {
	return o
}

func (o ModelValidationDatasetOutput) ToModelValidationDatasetOutputWithContext(ctx context.Context) ModelValidationDatasetOutput {
	return o
}

func (o ModelValidationDatasetOutput) ToModelValidationDatasetPtrOutput() ModelValidationDatasetPtrOutput {
	return o.ToModelValidationDatasetPtrOutputWithContext(context.Background())
}

func (o ModelValidationDatasetOutput) ToModelValidationDatasetPtrOutputWithContext(ctx context.Context) ModelValidationDatasetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelValidationDataset) *ModelValidationDataset {
		return &v
	}).(ModelValidationDatasetPtrOutput)
}

// The name of the Object Storage bucket that contains the input data file.
func (o ModelValidationDatasetOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelValidationDataset) *string { return v.Bucket }).(pulumi.StringPtrOutput)
}

// OCID of the Data Labeling dataset.
func (o ModelValidationDatasetOutput) DatasetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelValidationDataset) *string { return v.DatasetId }).(pulumi.StringPtrOutput)
}

// The dataset type, based on where it is stored.
func (o ModelValidationDatasetOutput) DatasetType() pulumi.StringOutput {
	return o.ApplyT(func(v ModelValidationDataset) string { return v.DatasetType }).(pulumi.StringOutput)
}

// The namespace name of the Object Storage bucket that contains the input data file.
func (o ModelValidationDatasetOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelValidationDataset) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// The object name of the input data file.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ModelValidationDatasetOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelValidationDataset) *string { return v.Object }).(pulumi.StringPtrOutput)
}

type ModelValidationDatasetPtrOutput struct{ *pulumi.OutputState }

func (ModelValidationDatasetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelValidationDataset)(nil)).Elem()
}

func (o ModelValidationDatasetPtrOutput) ToModelValidationDatasetPtrOutput() ModelValidationDatasetPtrOutput {
	return o
}

func (o ModelValidationDatasetPtrOutput) ToModelValidationDatasetPtrOutputWithContext(ctx context.Context) ModelValidationDatasetPtrOutput {
	return o
}

func (o ModelValidationDatasetPtrOutput) Elem() ModelValidationDatasetOutput {
	return o.ApplyT(func(v *ModelValidationDataset) ModelValidationDataset {
		if v != nil {
			return *v
		}
		var ret ModelValidationDataset
		return ret
	}).(ModelValidationDatasetOutput)
}

// The name of the Object Storage bucket that contains the input data file.
func (o ModelValidationDatasetPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelValidationDataset) *string {
		if v == nil {
			return nil
		}
		return v.Bucket
	}).(pulumi.StringPtrOutput)
}

// OCID of the Data Labeling dataset.
func (o ModelValidationDatasetPtrOutput) DatasetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelValidationDataset) *string {
		if v == nil {
			return nil
		}
		return v.DatasetId
	}).(pulumi.StringPtrOutput)
}

// The dataset type, based on where it is stored.
func (o ModelValidationDatasetPtrOutput) DatasetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelValidationDataset) *string {
		if v == nil {
			return nil
		}
		return &v.DatasetType
	}).(pulumi.StringPtrOutput)
}

// The namespace name of the Object Storage bucket that contains the input data file.
func (o ModelValidationDatasetPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelValidationDataset) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The object name of the input data file.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ModelValidationDatasetPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelValidationDataset) *string {
		if v == nil {
			return nil
		}
		return v.Object
	}).(pulumi.StringPtrOutput)
}

type ProcessorJobInputLocation struct {
	// Raw document data with Base64 encoding.
	Data *string `pulumi:"data"`
	// The list of ObjectLocations.
	ObjectLocations []ProcessorJobInputLocationObjectLocation `pulumi:"objectLocations"`
	// The type of input location. The allowed values are:
	// * `OBJECT_STORAGE_LOCATIONS`: A list of object locations in Object Storage.
	// * `INLINE_DOCUMENT_CONTENT`: The content of an inline document.
	SourceType string `pulumi:"sourceType"`
}

// ProcessorJobInputLocationInput is an input type that accepts ProcessorJobInputLocationArgs and ProcessorJobInputLocationOutput values.
// You can construct a concrete instance of `ProcessorJobInputLocationInput` via:
//
//	ProcessorJobInputLocationArgs{...}
type ProcessorJobInputLocationInput interface {
	pulumi.Input

	ToProcessorJobInputLocationOutput() ProcessorJobInputLocationOutput
	ToProcessorJobInputLocationOutputWithContext(context.Context) ProcessorJobInputLocationOutput
}

type ProcessorJobInputLocationArgs struct {
	// Raw document data with Base64 encoding.
	Data pulumi.StringPtrInput `pulumi:"data"`
	// The list of ObjectLocations.
	ObjectLocations ProcessorJobInputLocationObjectLocationArrayInput `pulumi:"objectLocations"`
	// The type of input location. The allowed values are:
	// * `OBJECT_STORAGE_LOCATIONS`: A list of object locations in Object Storage.
	// * `INLINE_DOCUMENT_CONTENT`: The content of an inline document.
	SourceType pulumi.StringInput `pulumi:"sourceType"`
}

func (ProcessorJobInputLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessorJobInputLocation)(nil)).Elem()
}

func (i ProcessorJobInputLocationArgs) ToProcessorJobInputLocationOutput() ProcessorJobInputLocationOutput {
	return i.ToProcessorJobInputLocationOutputWithContext(context.Background())
}

func (i ProcessorJobInputLocationArgs) ToProcessorJobInputLocationOutputWithContext(ctx context.Context) ProcessorJobInputLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessorJobInputLocationOutput)
}

func (i ProcessorJobInputLocationArgs) ToProcessorJobInputLocationPtrOutput() ProcessorJobInputLocationPtrOutput {
	return i.ToProcessorJobInputLocationPtrOutputWithContext(context.Background())
}

func (i ProcessorJobInputLocationArgs) ToProcessorJobInputLocationPtrOutputWithContext(ctx context.Context) ProcessorJobInputLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessorJobInputLocationOutput).ToProcessorJobInputLocationPtrOutputWithContext(ctx)
}

// ProcessorJobInputLocationPtrInput is an input type that accepts ProcessorJobInputLocationArgs, ProcessorJobInputLocationPtr and ProcessorJobInputLocationPtrOutput values.
// You can construct a concrete instance of `ProcessorJobInputLocationPtrInput` via:
//
//	        ProcessorJobInputLocationArgs{...}
//
//	or:
//
//	        nil
type ProcessorJobInputLocationPtrInput interface {
	pulumi.Input

	ToProcessorJobInputLocationPtrOutput() ProcessorJobInputLocationPtrOutput
	ToProcessorJobInputLocationPtrOutputWithContext(context.Context) ProcessorJobInputLocationPtrOutput
}

type processorJobInputLocationPtrType ProcessorJobInputLocationArgs

func ProcessorJobInputLocationPtr(v *ProcessorJobInputLocationArgs) ProcessorJobInputLocationPtrInput {
	return (*processorJobInputLocationPtrType)(v)
}

func (*processorJobInputLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProcessorJobInputLocation)(nil)).Elem()
}

func (i *processorJobInputLocationPtrType) ToProcessorJobInputLocationPtrOutput() ProcessorJobInputLocationPtrOutput {
	return i.ToProcessorJobInputLocationPtrOutputWithContext(context.Background())
}

func (i *processorJobInputLocationPtrType) ToProcessorJobInputLocationPtrOutputWithContext(ctx context.Context) ProcessorJobInputLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessorJobInputLocationPtrOutput)
}

type ProcessorJobInputLocationOutput struct{ *pulumi.OutputState }

func (ProcessorJobInputLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessorJobInputLocation)(nil)).Elem()
}

func (o ProcessorJobInputLocationOutput) ToProcessorJobInputLocationOutput() ProcessorJobInputLocationOutput {
	return o
}

func (o ProcessorJobInputLocationOutput) ToProcessorJobInputLocationOutputWithContext(ctx context.Context) ProcessorJobInputLocationOutput {
	return o
}

func (o ProcessorJobInputLocationOutput) ToProcessorJobInputLocationPtrOutput() ProcessorJobInputLocationPtrOutput {
	return o.ToProcessorJobInputLocationPtrOutputWithContext(context.Background())
}

func (o ProcessorJobInputLocationOutput) ToProcessorJobInputLocationPtrOutputWithContext(ctx context.Context) ProcessorJobInputLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProcessorJobInputLocation) *ProcessorJobInputLocation {
		return &v
	}).(ProcessorJobInputLocationPtrOutput)
}

// Raw document data with Base64 encoding.
func (o ProcessorJobInputLocationOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessorJobInputLocation) *string { return v.Data }).(pulumi.StringPtrOutput)
}

// The list of ObjectLocations.
func (o ProcessorJobInputLocationOutput) ObjectLocations() ProcessorJobInputLocationObjectLocationArrayOutput {
	return o.ApplyT(func(v ProcessorJobInputLocation) []ProcessorJobInputLocationObjectLocation { return v.ObjectLocations }).(ProcessorJobInputLocationObjectLocationArrayOutput)
}

// The type of input location. The allowed values are:
// * `OBJECT_STORAGE_LOCATIONS`: A list of object locations in Object Storage.
// * `INLINE_DOCUMENT_CONTENT`: The content of an inline document.
func (o ProcessorJobInputLocationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessorJobInputLocation) string { return v.SourceType }).(pulumi.StringOutput)
}

type ProcessorJobInputLocationPtrOutput struct{ *pulumi.OutputState }

func (ProcessorJobInputLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProcessorJobInputLocation)(nil)).Elem()
}

func (o ProcessorJobInputLocationPtrOutput) ToProcessorJobInputLocationPtrOutput() ProcessorJobInputLocationPtrOutput {
	return o
}

func (o ProcessorJobInputLocationPtrOutput) ToProcessorJobInputLocationPtrOutputWithContext(ctx context.Context) ProcessorJobInputLocationPtrOutput {
	return o
}

func (o ProcessorJobInputLocationPtrOutput) Elem() ProcessorJobInputLocationOutput {
	return o.ApplyT(func(v *ProcessorJobInputLocation) ProcessorJobInputLocation {
		if v != nil {
			return *v
		}
		var ret ProcessorJobInputLocation
		return ret
	}).(ProcessorJobInputLocationOutput)
}

// Raw document data with Base64 encoding.
func (o ProcessorJobInputLocationPtrOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProcessorJobInputLocation) *string {
		if v == nil {
			return nil
		}
		return v.Data
	}).(pulumi.StringPtrOutput)
}

// The list of ObjectLocations.
func (o ProcessorJobInputLocationPtrOutput) ObjectLocations() ProcessorJobInputLocationObjectLocationArrayOutput {
	return o.ApplyT(func(v *ProcessorJobInputLocation) []ProcessorJobInputLocationObjectLocation {
		if v == nil {
			return nil
		}
		return v.ObjectLocations
	}).(ProcessorJobInputLocationObjectLocationArrayOutput)
}

// The type of input location. The allowed values are:
// * `OBJECT_STORAGE_LOCATIONS`: A list of object locations in Object Storage.
// * `INLINE_DOCUMENT_CONTENT`: The content of an inline document.
func (o ProcessorJobInputLocationPtrOutput) SourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProcessorJobInputLocation) *string {
		if v == nil {
			return nil
		}
		return &v.SourceType
	}).(pulumi.StringPtrOutput)
}

type ProcessorJobInputLocationObjectLocation struct {
	// The Object Storage bucket name.
	Bucket *string `pulumi:"bucket"`
	// The Object Storage namespace name.
	Namespace *string `pulumi:"namespace"`
	// The Object Storage object name.
	Object *string `pulumi:"object"`
}

// ProcessorJobInputLocationObjectLocationInput is an input type that accepts ProcessorJobInputLocationObjectLocationArgs and ProcessorJobInputLocationObjectLocationOutput values.
// You can construct a concrete instance of `ProcessorJobInputLocationObjectLocationInput` via:
//
//	ProcessorJobInputLocationObjectLocationArgs{...}
type ProcessorJobInputLocationObjectLocationInput interface {
	pulumi.Input

	ToProcessorJobInputLocationObjectLocationOutput() ProcessorJobInputLocationObjectLocationOutput
	ToProcessorJobInputLocationObjectLocationOutputWithContext(context.Context) ProcessorJobInputLocationObjectLocationOutput
}

type ProcessorJobInputLocationObjectLocationArgs struct {
	// The Object Storage bucket name.
	Bucket pulumi.StringPtrInput `pulumi:"bucket"`
	// The Object Storage namespace name.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// The Object Storage object name.
	Object pulumi.StringPtrInput `pulumi:"object"`
}

func (ProcessorJobInputLocationObjectLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessorJobInputLocationObjectLocation)(nil)).Elem()
}

func (i ProcessorJobInputLocationObjectLocationArgs) ToProcessorJobInputLocationObjectLocationOutput() ProcessorJobInputLocationObjectLocationOutput {
	return i.ToProcessorJobInputLocationObjectLocationOutputWithContext(context.Background())
}

func (i ProcessorJobInputLocationObjectLocationArgs) ToProcessorJobInputLocationObjectLocationOutputWithContext(ctx context.Context) ProcessorJobInputLocationObjectLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessorJobInputLocationObjectLocationOutput)
}

// ProcessorJobInputLocationObjectLocationArrayInput is an input type that accepts ProcessorJobInputLocationObjectLocationArray and ProcessorJobInputLocationObjectLocationArrayOutput values.
// You can construct a concrete instance of `ProcessorJobInputLocationObjectLocationArrayInput` via:
//
//	ProcessorJobInputLocationObjectLocationArray{ ProcessorJobInputLocationObjectLocationArgs{...} }
type ProcessorJobInputLocationObjectLocationArrayInput interface {
	pulumi.Input

	ToProcessorJobInputLocationObjectLocationArrayOutput() ProcessorJobInputLocationObjectLocationArrayOutput
	ToProcessorJobInputLocationObjectLocationArrayOutputWithContext(context.Context) ProcessorJobInputLocationObjectLocationArrayOutput
}

type ProcessorJobInputLocationObjectLocationArray []ProcessorJobInputLocationObjectLocationInput

func (ProcessorJobInputLocationObjectLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessorJobInputLocationObjectLocation)(nil)).Elem()
}

func (i ProcessorJobInputLocationObjectLocationArray) ToProcessorJobInputLocationObjectLocationArrayOutput() ProcessorJobInputLocationObjectLocationArrayOutput {
	return i.ToProcessorJobInputLocationObjectLocationArrayOutputWithContext(context.Background())
}

func (i ProcessorJobInputLocationObjectLocationArray) ToProcessorJobInputLocationObjectLocationArrayOutputWithContext(ctx context.Context) ProcessorJobInputLocationObjectLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessorJobInputLocationObjectLocationArrayOutput)
}

type ProcessorJobInputLocationObjectLocationOutput struct{ *pulumi.OutputState }

func (ProcessorJobInputLocationObjectLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessorJobInputLocationObjectLocation)(nil)).Elem()
}

func (o ProcessorJobInputLocationObjectLocationOutput) ToProcessorJobInputLocationObjectLocationOutput() ProcessorJobInputLocationObjectLocationOutput {
	return o
}

func (o ProcessorJobInputLocationObjectLocationOutput) ToProcessorJobInputLocationObjectLocationOutputWithContext(ctx context.Context) ProcessorJobInputLocationObjectLocationOutput {
	return o
}

// The Object Storage bucket name.
func (o ProcessorJobInputLocationObjectLocationOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessorJobInputLocationObjectLocation) *string { return v.Bucket }).(pulumi.StringPtrOutput)
}

// The Object Storage namespace name.
func (o ProcessorJobInputLocationObjectLocationOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessorJobInputLocationObjectLocation) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// The Object Storage object name.
func (o ProcessorJobInputLocationObjectLocationOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessorJobInputLocationObjectLocation) *string { return v.Object }).(pulumi.StringPtrOutput)
}

type ProcessorJobInputLocationObjectLocationArrayOutput struct{ *pulumi.OutputState }

func (ProcessorJobInputLocationObjectLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessorJobInputLocationObjectLocation)(nil)).Elem()
}

func (o ProcessorJobInputLocationObjectLocationArrayOutput) ToProcessorJobInputLocationObjectLocationArrayOutput() ProcessorJobInputLocationObjectLocationArrayOutput {
	return o
}

func (o ProcessorJobInputLocationObjectLocationArrayOutput) ToProcessorJobInputLocationObjectLocationArrayOutputWithContext(ctx context.Context) ProcessorJobInputLocationObjectLocationArrayOutput {
	return o
}

func (o ProcessorJobInputLocationObjectLocationArrayOutput) Index(i pulumi.IntInput) ProcessorJobInputLocationObjectLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessorJobInputLocationObjectLocation {
		return vs[0].([]ProcessorJobInputLocationObjectLocation)[vs[1].(int)]
	}).(ProcessorJobInputLocationObjectLocationOutput)
}

type ProcessorJobOutputLocation struct {
	// The Object Storage bucket name.
	Bucket string `pulumi:"bucket"`
	// The Object Storage namespace.
	Namespace string `pulumi:"namespace"`
	// The Object Storage folder name.
	Prefix string `pulumi:"prefix"`
}

// ProcessorJobOutputLocationInput is an input type that accepts ProcessorJobOutputLocationArgs and ProcessorJobOutputLocationOutput values.
// You can construct a concrete instance of `ProcessorJobOutputLocationInput` via:
//
//	ProcessorJobOutputLocationArgs{...}
type ProcessorJobOutputLocationInput interface {
	pulumi.Input

	ToProcessorJobOutputLocationOutput() ProcessorJobOutputLocationOutput
	ToProcessorJobOutputLocationOutputWithContext(context.Context) ProcessorJobOutputLocationOutput
}

type ProcessorJobOutputLocationArgs struct {
	// The Object Storage bucket name.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// The Object Storage namespace.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// The Object Storage folder name.
	Prefix pulumi.StringInput `pulumi:"prefix"`
}

func (ProcessorJobOutputLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessorJobOutputLocation)(nil)).Elem()
}

func (i ProcessorJobOutputLocationArgs) ToProcessorJobOutputLocationOutput() ProcessorJobOutputLocationOutput {
	return i.ToProcessorJobOutputLocationOutputWithContext(context.Background())
}

func (i ProcessorJobOutputLocationArgs) ToProcessorJobOutputLocationOutputWithContext(ctx context.Context) ProcessorJobOutputLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessorJobOutputLocationOutput)
}

func (i ProcessorJobOutputLocationArgs) ToProcessorJobOutputLocationPtrOutput() ProcessorJobOutputLocationPtrOutput {
	return i.ToProcessorJobOutputLocationPtrOutputWithContext(context.Background())
}

func (i ProcessorJobOutputLocationArgs) ToProcessorJobOutputLocationPtrOutputWithContext(ctx context.Context) ProcessorJobOutputLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessorJobOutputLocationOutput).ToProcessorJobOutputLocationPtrOutputWithContext(ctx)
}

// ProcessorJobOutputLocationPtrInput is an input type that accepts ProcessorJobOutputLocationArgs, ProcessorJobOutputLocationPtr and ProcessorJobOutputLocationPtrOutput values.
// You can construct a concrete instance of `ProcessorJobOutputLocationPtrInput` via:
//
//	        ProcessorJobOutputLocationArgs{...}
//
//	or:
//
//	        nil
type ProcessorJobOutputLocationPtrInput interface {
	pulumi.Input

	ToProcessorJobOutputLocationPtrOutput() ProcessorJobOutputLocationPtrOutput
	ToProcessorJobOutputLocationPtrOutputWithContext(context.Context) ProcessorJobOutputLocationPtrOutput
}

type processorJobOutputLocationPtrType ProcessorJobOutputLocationArgs

func ProcessorJobOutputLocationPtr(v *ProcessorJobOutputLocationArgs) ProcessorJobOutputLocationPtrInput {
	return (*processorJobOutputLocationPtrType)(v)
}

func (*processorJobOutputLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProcessorJobOutputLocation)(nil)).Elem()
}

func (i *processorJobOutputLocationPtrType) ToProcessorJobOutputLocationPtrOutput() ProcessorJobOutputLocationPtrOutput {
	return i.ToProcessorJobOutputLocationPtrOutputWithContext(context.Background())
}

func (i *processorJobOutputLocationPtrType) ToProcessorJobOutputLocationPtrOutputWithContext(ctx context.Context) ProcessorJobOutputLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessorJobOutputLocationPtrOutput)
}

type ProcessorJobOutputLocationOutput struct{ *pulumi.OutputState }

func (ProcessorJobOutputLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessorJobOutputLocation)(nil)).Elem()
}

func (o ProcessorJobOutputLocationOutput) ToProcessorJobOutputLocationOutput() ProcessorJobOutputLocationOutput {
	return o
}

func (o ProcessorJobOutputLocationOutput) ToProcessorJobOutputLocationOutputWithContext(ctx context.Context) ProcessorJobOutputLocationOutput {
	return o
}

func (o ProcessorJobOutputLocationOutput) ToProcessorJobOutputLocationPtrOutput() ProcessorJobOutputLocationPtrOutput {
	return o.ToProcessorJobOutputLocationPtrOutputWithContext(context.Background())
}

func (o ProcessorJobOutputLocationOutput) ToProcessorJobOutputLocationPtrOutputWithContext(ctx context.Context) ProcessorJobOutputLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProcessorJobOutputLocation) *ProcessorJobOutputLocation {
		return &v
	}).(ProcessorJobOutputLocationPtrOutput)
}

// The Object Storage bucket name.
func (o ProcessorJobOutputLocationOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessorJobOutputLocation) string { return v.Bucket }).(pulumi.StringOutput)
}

// The Object Storage namespace.
func (o ProcessorJobOutputLocationOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessorJobOutputLocation) string { return v.Namespace }).(pulumi.StringOutput)
}

// The Object Storage folder name.
func (o ProcessorJobOutputLocationOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessorJobOutputLocation) string { return v.Prefix }).(pulumi.StringOutput)
}

type ProcessorJobOutputLocationPtrOutput struct{ *pulumi.OutputState }

func (ProcessorJobOutputLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProcessorJobOutputLocation)(nil)).Elem()
}

func (o ProcessorJobOutputLocationPtrOutput) ToProcessorJobOutputLocationPtrOutput() ProcessorJobOutputLocationPtrOutput {
	return o
}

func (o ProcessorJobOutputLocationPtrOutput) ToProcessorJobOutputLocationPtrOutputWithContext(ctx context.Context) ProcessorJobOutputLocationPtrOutput {
	return o
}

func (o ProcessorJobOutputLocationPtrOutput) Elem() ProcessorJobOutputLocationOutput {
	return o.ApplyT(func(v *ProcessorJobOutputLocation) ProcessorJobOutputLocation {
		if v != nil {
			return *v
		}
		var ret ProcessorJobOutputLocation
		return ret
	}).(ProcessorJobOutputLocationOutput)
}

// The Object Storage bucket name.
func (o ProcessorJobOutputLocationPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProcessorJobOutputLocation) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

// The Object Storage namespace.
func (o ProcessorJobOutputLocationPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProcessorJobOutputLocation) *string {
		if v == nil {
			return nil
		}
		return &v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The Object Storage folder name.
func (o ProcessorJobOutputLocationPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProcessorJobOutputLocation) *string {
		if v == nil {
			return nil
		}
		return &v.Prefix
	}).(pulumi.StringPtrOutput)
}

type ProcessorJobProcessorConfig struct {
	// The document type.
	DocumentType *string `pulumi:"documentType"`
	// The types of document analysis requested.
	Features []ProcessorJobProcessorConfigFeature `pulumi:"features"`
	// Whether or not to generate a ZIP file containing the results.
	IsZipOutputEnabled *bool `pulumi:"isZipOutputEnabled"`
	// The document language, abbreviated according to the BCP 47 Language-Tag syntax.
	Language *string `pulumi:"language"`
	// The type of the processor.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ProcessorType string `pulumi:"processorType"`
}

// ProcessorJobProcessorConfigInput is an input type that accepts ProcessorJobProcessorConfigArgs and ProcessorJobProcessorConfigOutput values.
// You can construct a concrete instance of `ProcessorJobProcessorConfigInput` via:
//
//	ProcessorJobProcessorConfigArgs{...}
type ProcessorJobProcessorConfigInput interface {
	pulumi.Input

	ToProcessorJobProcessorConfigOutput() ProcessorJobProcessorConfigOutput
	ToProcessorJobProcessorConfigOutputWithContext(context.Context) ProcessorJobProcessorConfigOutput
}

type ProcessorJobProcessorConfigArgs struct {
	// The document type.
	DocumentType pulumi.StringPtrInput `pulumi:"documentType"`
	// The types of document analysis requested.
	Features ProcessorJobProcessorConfigFeatureArrayInput `pulumi:"features"`
	// Whether or not to generate a ZIP file containing the results.
	IsZipOutputEnabled pulumi.BoolPtrInput `pulumi:"isZipOutputEnabled"`
	// The document language, abbreviated according to the BCP 47 Language-Tag syntax.
	Language pulumi.StringPtrInput `pulumi:"language"`
	// The type of the processor.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ProcessorType pulumi.StringInput `pulumi:"processorType"`
}

func (ProcessorJobProcessorConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessorJobProcessorConfig)(nil)).Elem()
}

func (i ProcessorJobProcessorConfigArgs) ToProcessorJobProcessorConfigOutput() ProcessorJobProcessorConfigOutput {
	return i.ToProcessorJobProcessorConfigOutputWithContext(context.Background())
}

func (i ProcessorJobProcessorConfigArgs) ToProcessorJobProcessorConfigOutputWithContext(ctx context.Context) ProcessorJobProcessorConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessorJobProcessorConfigOutput)
}

func (i ProcessorJobProcessorConfigArgs) ToProcessorJobProcessorConfigPtrOutput() ProcessorJobProcessorConfigPtrOutput {
	return i.ToProcessorJobProcessorConfigPtrOutputWithContext(context.Background())
}

func (i ProcessorJobProcessorConfigArgs) ToProcessorJobProcessorConfigPtrOutputWithContext(ctx context.Context) ProcessorJobProcessorConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessorJobProcessorConfigOutput).ToProcessorJobProcessorConfigPtrOutputWithContext(ctx)
}

// ProcessorJobProcessorConfigPtrInput is an input type that accepts ProcessorJobProcessorConfigArgs, ProcessorJobProcessorConfigPtr and ProcessorJobProcessorConfigPtrOutput values.
// You can construct a concrete instance of `ProcessorJobProcessorConfigPtrInput` via:
//
//	        ProcessorJobProcessorConfigArgs{...}
//
//	or:
//
//	        nil
type ProcessorJobProcessorConfigPtrInput interface {
	pulumi.Input

	ToProcessorJobProcessorConfigPtrOutput() ProcessorJobProcessorConfigPtrOutput
	ToProcessorJobProcessorConfigPtrOutputWithContext(context.Context) ProcessorJobProcessorConfigPtrOutput
}

type processorJobProcessorConfigPtrType ProcessorJobProcessorConfigArgs

func ProcessorJobProcessorConfigPtr(v *ProcessorJobProcessorConfigArgs) ProcessorJobProcessorConfigPtrInput {
	return (*processorJobProcessorConfigPtrType)(v)
}

func (*processorJobProcessorConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProcessorJobProcessorConfig)(nil)).Elem()
}

func (i *processorJobProcessorConfigPtrType) ToProcessorJobProcessorConfigPtrOutput() ProcessorJobProcessorConfigPtrOutput {
	return i.ToProcessorJobProcessorConfigPtrOutputWithContext(context.Background())
}

func (i *processorJobProcessorConfigPtrType) ToProcessorJobProcessorConfigPtrOutputWithContext(ctx context.Context) ProcessorJobProcessorConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessorJobProcessorConfigPtrOutput)
}

type ProcessorJobProcessorConfigOutput struct{ *pulumi.OutputState }

func (ProcessorJobProcessorConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessorJobProcessorConfig)(nil)).Elem()
}

func (o ProcessorJobProcessorConfigOutput) ToProcessorJobProcessorConfigOutput() ProcessorJobProcessorConfigOutput {
	return o
}

func (o ProcessorJobProcessorConfigOutput) ToProcessorJobProcessorConfigOutputWithContext(ctx context.Context) ProcessorJobProcessorConfigOutput {
	return o
}

func (o ProcessorJobProcessorConfigOutput) ToProcessorJobProcessorConfigPtrOutput() ProcessorJobProcessorConfigPtrOutput {
	return o.ToProcessorJobProcessorConfigPtrOutputWithContext(context.Background())
}

func (o ProcessorJobProcessorConfigOutput) ToProcessorJobProcessorConfigPtrOutputWithContext(ctx context.Context) ProcessorJobProcessorConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProcessorJobProcessorConfig) *ProcessorJobProcessorConfig {
		return &v
	}).(ProcessorJobProcessorConfigPtrOutput)
}

// The document type.
func (o ProcessorJobProcessorConfigOutput) DocumentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessorJobProcessorConfig) *string { return v.DocumentType }).(pulumi.StringPtrOutput)
}

// The types of document analysis requested.
func (o ProcessorJobProcessorConfigOutput) Features() ProcessorJobProcessorConfigFeatureArrayOutput {
	return o.ApplyT(func(v ProcessorJobProcessorConfig) []ProcessorJobProcessorConfigFeature { return v.Features }).(ProcessorJobProcessorConfigFeatureArrayOutput)
}

// Whether or not to generate a ZIP file containing the results.
func (o ProcessorJobProcessorConfigOutput) IsZipOutputEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessorJobProcessorConfig) *bool { return v.IsZipOutputEnabled }).(pulumi.BoolPtrOutput)
}

// The document language, abbreviated according to the BCP 47 Language-Tag syntax.
func (o ProcessorJobProcessorConfigOutput) Language() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessorJobProcessorConfig) *string { return v.Language }).(pulumi.StringPtrOutput)
}

// The type of the processor.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ProcessorJobProcessorConfigOutput) ProcessorType() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessorJobProcessorConfig) string { return v.ProcessorType }).(pulumi.StringOutput)
}

type ProcessorJobProcessorConfigPtrOutput struct{ *pulumi.OutputState }

func (ProcessorJobProcessorConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProcessorJobProcessorConfig)(nil)).Elem()
}

func (o ProcessorJobProcessorConfigPtrOutput) ToProcessorJobProcessorConfigPtrOutput() ProcessorJobProcessorConfigPtrOutput {
	return o
}

func (o ProcessorJobProcessorConfigPtrOutput) ToProcessorJobProcessorConfigPtrOutputWithContext(ctx context.Context) ProcessorJobProcessorConfigPtrOutput {
	return o
}

func (o ProcessorJobProcessorConfigPtrOutput) Elem() ProcessorJobProcessorConfigOutput {
	return o.ApplyT(func(v *ProcessorJobProcessorConfig) ProcessorJobProcessorConfig {
		if v != nil {
			return *v
		}
		var ret ProcessorJobProcessorConfig
		return ret
	}).(ProcessorJobProcessorConfigOutput)
}

// The document type.
func (o ProcessorJobProcessorConfigPtrOutput) DocumentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProcessorJobProcessorConfig) *string {
		if v == nil {
			return nil
		}
		return v.DocumentType
	}).(pulumi.StringPtrOutput)
}

// The types of document analysis requested.
func (o ProcessorJobProcessorConfigPtrOutput) Features() ProcessorJobProcessorConfigFeatureArrayOutput {
	return o.ApplyT(func(v *ProcessorJobProcessorConfig) []ProcessorJobProcessorConfigFeature {
		if v == nil {
			return nil
		}
		return v.Features
	}).(ProcessorJobProcessorConfigFeatureArrayOutput)
}

// Whether or not to generate a ZIP file containing the results.
func (o ProcessorJobProcessorConfigPtrOutput) IsZipOutputEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProcessorJobProcessorConfig) *bool {
		if v == nil {
			return nil
		}
		return v.IsZipOutputEnabled
	}).(pulumi.BoolPtrOutput)
}

// The document language, abbreviated according to the BCP 47 Language-Tag syntax.
func (o ProcessorJobProcessorConfigPtrOutput) Language() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProcessorJobProcessorConfig) *string {
		if v == nil {
			return nil
		}
		return v.Language
	}).(pulumi.StringPtrOutput)
}

// The type of the processor.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ProcessorJobProcessorConfigPtrOutput) ProcessorType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProcessorJobProcessorConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ProcessorType
	}).(pulumi.StringPtrOutput)
}

type ProcessorJobProcessorConfigFeature struct {
	// The type of document analysis requested. The allowed values are:
	// * `LANGUAGE_CLASSIFICATION`: Detect the language.
	// * `TEXT_EXTRACTION`: Recognize text.
	// * `TABLE_EXTRACTION`: Detect and extract data in tables.
	// * `KEY_VALUE_EXTRACTION`: Extract form fields.
	// * `DOCUMENT_CLASSIFICATION`: Identify the type of document.
	FeatureType string `pulumi:"featureType"`
	// Whether or not to generate a searchable PDF file.
	GenerateSearchablePdf *bool `pulumi:"generateSearchablePdf"`
	// The maximum number of results to return.
	MaxResults *int `pulumi:"maxResults"`
	// The custom model ID.
	ModelId *string `pulumi:"modelId"`
	// The custom model tenancy ID when modelId represents aliasName.
	TenancyId *string `pulumi:"tenancyId"`
}

// ProcessorJobProcessorConfigFeatureInput is an input type that accepts ProcessorJobProcessorConfigFeatureArgs and ProcessorJobProcessorConfigFeatureOutput values.
// You can construct a concrete instance of `ProcessorJobProcessorConfigFeatureInput` via:
//
//	ProcessorJobProcessorConfigFeatureArgs{...}
type ProcessorJobProcessorConfigFeatureInput interface {
	pulumi.Input

	ToProcessorJobProcessorConfigFeatureOutput() ProcessorJobProcessorConfigFeatureOutput
	ToProcessorJobProcessorConfigFeatureOutputWithContext(context.Context) ProcessorJobProcessorConfigFeatureOutput
}

type ProcessorJobProcessorConfigFeatureArgs struct {
	// The type of document analysis requested. The allowed values are:
	// * `LANGUAGE_CLASSIFICATION`: Detect the language.
	// * `TEXT_EXTRACTION`: Recognize text.
	// * `TABLE_EXTRACTION`: Detect and extract data in tables.
	// * `KEY_VALUE_EXTRACTION`: Extract form fields.
	// * `DOCUMENT_CLASSIFICATION`: Identify the type of document.
	FeatureType pulumi.StringInput `pulumi:"featureType"`
	// Whether or not to generate a searchable PDF file.
	GenerateSearchablePdf pulumi.BoolPtrInput `pulumi:"generateSearchablePdf"`
	// The maximum number of results to return.
	MaxResults pulumi.IntPtrInput `pulumi:"maxResults"`
	// The custom model ID.
	ModelId pulumi.StringPtrInput `pulumi:"modelId"`
	// The custom model tenancy ID when modelId represents aliasName.
	TenancyId pulumi.StringPtrInput `pulumi:"tenancyId"`
}

func (ProcessorJobProcessorConfigFeatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessorJobProcessorConfigFeature)(nil)).Elem()
}

func (i ProcessorJobProcessorConfigFeatureArgs) ToProcessorJobProcessorConfigFeatureOutput() ProcessorJobProcessorConfigFeatureOutput {
	return i.ToProcessorJobProcessorConfigFeatureOutputWithContext(context.Background())
}

func (i ProcessorJobProcessorConfigFeatureArgs) ToProcessorJobProcessorConfigFeatureOutputWithContext(ctx context.Context) ProcessorJobProcessorConfigFeatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessorJobProcessorConfigFeatureOutput)
}

// ProcessorJobProcessorConfigFeatureArrayInput is an input type that accepts ProcessorJobProcessorConfigFeatureArray and ProcessorJobProcessorConfigFeatureArrayOutput values.
// You can construct a concrete instance of `ProcessorJobProcessorConfigFeatureArrayInput` via:
//
//	ProcessorJobProcessorConfigFeatureArray{ ProcessorJobProcessorConfigFeatureArgs{...} }
type ProcessorJobProcessorConfigFeatureArrayInput interface {
	pulumi.Input

	ToProcessorJobProcessorConfigFeatureArrayOutput() ProcessorJobProcessorConfigFeatureArrayOutput
	ToProcessorJobProcessorConfigFeatureArrayOutputWithContext(context.Context) ProcessorJobProcessorConfigFeatureArrayOutput
}

type ProcessorJobProcessorConfigFeatureArray []ProcessorJobProcessorConfigFeatureInput

func (ProcessorJobProcessorConfigFeatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessorJobProcessorConfigFeature)(nil)).Elem()
}

func (i ProcessorJobProcessorConfigFeatureArray) ToProcessorJobProcessorConfigFeatureArrayOutput() ProcessorJobProcessorConfigFeatureArrayOutput {
	return i.ToProcessorJobProcessorConfigFeatureArrayOutputWithContext(context.Background())
}

func (i ProcessorJobProcessorConfigFeatureArray) ToProcessorJobProcessorConfigFeatureArrayOutputWithContext(ctx context.Context) ProcessorJobProcessorConfigFeatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessorJobProcessorConfigFeatureArrayOutput)
}

type ProcessorJobProcessorConfigFeatureOutput struct{ *pulumi.OutputState }

func (ProcessorJobProcessorConfigFeatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessorJobProcessorConfigFeature)(nil)).Elem()
}

func (o ProcessorJobProcessorConfigFeatureOutput) ToProcessorJobProcessorConfigFeatureOutput() ProcessorJobProcessorConfigFeatureOutput {
	return o
}

func (o ProcessorJobProcessorConfigFeatureOutput) ToProcessorJobProcessorConfigFeatureOutputWithContext(ctx context.Context) ProcessorJobProcessorConfigFeatureOutput {
	return o
}

// The type of document analysis requested. The allowed values are:
// * `LANGUAGE_CLASSIFICATION`: Detect the language.
// * `TEXT_EXTRACTION`: Recognize text.
// * `TABLE_EXTRACTION`: Detect and extract data in tables.
// * `KEY_VALUE_EXTRACTION`: Extract form fields.
// * `DOCUMENT_CLASSIFICATION`: Identify the type of document.
func (o ProcessorJobProcessorConfigFeatureOutput) FeatureType() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessorJobProcessorConfigFeature) string { return v.FeatureType }).(pulumi.StringOutput)
}

// Whether or not to generate a searchable PDF file.
func (o ProcessorJobProcessorConfigFeatureOutput) GenerateSearchablePdf() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProcessorJobProcessorConfigFeature) *bool { return v.GenerateSearchablePdf }).(pulumi.BoolPtrOutput)
}

// The maximum number of results to return.
func (o ProcessorJobProcessorConfigFeatureOutput) MaxResults() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProcessorJobProcessorConfigFeature) *int { return v.MaxResults }).(pulumi.IntPtrOutput)
}

// The custom model ID.
func (o ProcessorJobProcessorConfigFeatureOutput) ModelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessorJobProcessorConfigFeature) *string { return v.ModelId }).(pulumi.StringPtrOutput)
}

// The custom model tenancy ID when modelId represents aliasName.
func (o ProcessorJobProcessorConfigFeatureOutput) TenancyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessorJobProcessorConfigFeature) *string { return v.TenancyId }).(pulumi.StringPtrOutput)
}

type ProcessorJobProcessorConfigFeatureArrayOutput struct{ *pulumi.OutputState }

func (ProcessorJobProcessorConfigFeatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessorJobProcessorConfigFeature)(nil)).Elem()
}

func (o ProcessorJobProcessorConfigFeatureArrayOutput) ToProcessorJobProcessorConfigFeatureArrayOutput() ProcessorJobProcessorConfigFeatureArrayOutput {
	return o
}

func (o ProcessorJobProcessorConfigFeatureArrayOutput) ToProcessorJobProcessorConfigFeatureArrayOutputWithContext(ctx context.Context) ProcessorJobProcessorConfigFeatureArrayOutput {
	return o
}

func (o ProcessorJobProcessorConfigFeatureArrayOutput) Index(i pulumi.IntInput) ProcessorJobProcessorConfigFeatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessorJobProcessorConfigFeature {
		return vs[0].([]ProcessorJobProcessorConfigFeature)[vs[1].(int)]
	}).(ProcessorJobProcessorConfigFeatureOutput)
}

type GetModelComponentModel struct {
	// A unique model identifier.
	ModelId string `pulumi:"modelId"`
}

// GetModelComponentModelInput is an input type that accepts GetModelComponentModelArgs and GetModelComponentModelOutput values.
// You can construct a concrete instance of `GetModelComponentModelInput` via:
//
//	GetModelComponentModelArgs{...}
type GetModelComponentModelInput interface {
	pulumi.Input

	ToGetModelComponentModelOutput() GetModelComponentModelOutput
	ToGetModelComponentModelOutputWithContext(context.Context) GetModelComponentModelOutput
}

type GetModelComponentModelArgs struct {
	// A unique model identifier.
	ModelId pulumi.StringInput `pulumi:"modelId"`
}

func (GetModelComponentModelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelComponentModel)(nil)).Elem()
}

func (i GetModelComponentModelArgs) ToGetModelComponentModelOutput() GetModelComponentModelOutput {
	return i.ToGetModelComponentModelOutputWithContext(context.Background())
}

func (i GetModelComponentModelArgs) ToGetModelComponentModelOutputWithContext(ctx context.Context) GetModelComponentModelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelComponentModelOutput)
}

// GetModelComponentModelArrayInput is an input type that accepts GetModelComponentModelArray and GetModelComponentModelArrayOutput values.
// You can construct a concrete instance of `GetModelComponentModelArrayInput` via:
//
//	GetModelComponentModelArray{ GetModelComponentModelArgs{...} }
type GetModelComponentModelArrayInput interface {
	pulumi.Input

	ToGetModelComponentModelArrayOutput() GetModelComponentModelArrayOutput
	ToGetModelComponentModelArrayOutputWithContext(context.Context) GetModelComponentModelArrayOutput
}

type GetModelComponentModelArray []GetModelComponentModelInput

func (GetModelComponentModelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelComponentModel)(nil)).Elem()
}

func (i GetModelComponentModelArray) ToGetModelComponentModelArrayOutput() GetModelComponentModelArrayOutput {
	return i.ToGetModelComponentModelArrayOutputWithContext(context.Background())
}

func (i GetModelComponentModelArray) ToGetModelComponentModelArrayOutputWithContext(ctx context.Context) GetModelComponentModelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelComponentModelArrayOutput)
}

type GetModelComponentModelOutput struct{ *pulumi.OutputState }

func (GetModelComponentModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelComponentModel)(nil)).Elem()
}

func (o GetModelComponentModelOutput) ToGetModelComponentModelOutput() GetModelComponentModelOutput {
	return o
}

func (o GetModelComponentModelOutput) ToGetModelComponentModelOutputWithContext(ctx context.Context) GetModelComponentModelOutput {
	return o
}

// A unique model identifier.
func (o GetModelComponentModelOutput) ModelId() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelComponentModel) string { return v.ModelId }).(pulumi.StringOutput)
}

type GetModelComponentModelArrayOutput struct{ *pulumi.OutputState }

func (GetModelComponentModelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelComponentModel)(nil)).Elem()
}

func (o GetModelComponentModelArrayOutput) ToGetModelComponentModelArrayOutput() GetModelComponentModelArrayOutput {
	return o
}

func (o GetModelComponentModelArrayOutput) ToGetModelComponentModelArrayOutputWithContext(ctx context.Context) GetModelComponentModelArrayOutput {
	return o
}

func (o GetModelComponentModelArrayOutput) Index(i pulumi.IntInput) GetModelComponentModelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelComponentModel {
		return vs[0].([]GetModelComponentModel)[vs[1].(int)]
	}).(GetModelComponentModelOutput)
}

type GetModelMetric struct {
	// Summary of count of samples used during model training.
	DatasetSummaries []GetModelMetricDatasetSummary `pulumi:"datasetSummaries"`
	// List of metrics entries per label.
	LabelMetricsReports []GetModelMetricLabelMetricsReport `pulumi:"labelMetricsReports"`
	// The type of the Document model.
	ModelType string `pulumi:"modelType"`
	// Overall Metrics report for Document Classification Model.
	OverallMetricsReports []GetModelMetricOverallMetricsReport `pulumi:"overallMetricsReports"`
}

// GetModelMetricInput is an input type that accepts GetModelMetricArgs and GetModelMetricOutput values.
// You can construct a concrete instance of `GetModelMetricInput` via:
//
//	GetModelMetricArgs{...}
type GetModelMetricInput interface {
	pulumi.Input

	ToGetModelMetricOutput() GetModelMetricOutput
	ToGetModelMetricOutputWithContext(context.Context) GetModelMetricOutput
}

type GetModelMetricArgs struct {
	// Summary of count of samples used during model training.
	DatasetSummaries GetModelMetricDatasetSummaryArrayInput `pulumi:"datasetSummaries"`
	// List of metrics entries per label.
	LabelMetricsReports GetModelMetricLabelMetricsReportArrayInput `pulumi:"labelMetricsReports"`
	// The type of the Document model.
	ModelType pulumi.StringInput `pulumi:"modelType"`
	// Overall Metrics report for Document Classification Model.
	OverallMetricsReports GetModelMetricOverallMetricsReportArrayInput `pulumi:"overallMetricsReports"`
}

func (GetModelMetricArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelMetric)(nil)).Elem()
}

func (i GetModelMetricArgs) ToGetModelMetricOutput() GetModelMetricOutput {
	return i.ToGetModelMetricOutputWithContext(context.Background())
}

func (i GetModelMetricArgs) ToGetModelMetricOutputWithContext(ctx context.Context) GetModelMetricOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelMetricOutput)
}

// GetModelMetricArrayInput is an input type that accepts GetModelMetricArray and GetModelMetricArrayOutput values.
// You can construct a concrete instance of `GetModelMetricArrayInput` via:
//
//	GetModelMetricArray{ GetModelMetricArgs{...} }
type GetModelMetricArrayInput interface {
	pulumi.Input

	ToGetModelMetricArrayOutput() GetModelMetricArrayOutput
	ToGetModelMetricArrayOutputWithContext(context.Context) GetModelMetricArrayOutput
}

type GetModelMetricArray []GetModelMetricInput

func (GetModelMetricArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelMetric)(nil)).Elem()
}

func (i GetModelMetricArray) ToGetModelMetricArrayOutput() GetModelMetricArrayOutput {
	return i.ToGetModelMetricArrayOutputWithContext(context.Background())
}

func (i GetModelMetricArray) ToGetModelMetricArrayOutputWithContext(ctx context.Context) GetModelMetricArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelMetricArrayOutput)
}

type GetModelMetricOutput struct{ *pulumi.OutputState }

func (GetModelMetricOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelMetric)(nil)).Elem()
}

func (o GetModelMetricOutput) ToGetModelMetricOutput() GetModelMetricOutput {
	return o
}

func (o GetModelMetricOutput) ToGetModelMetricOutputWithContext(ctx context.Context) GetModelMetricOutput {
	return o
}

// Summary of count of samples used during model training.
func (o GetModelMetricOutput) DatasetSummaries() GetModelMetricDatasetSummaryArrayOutput {
	return o.ApplyT(func(v GetModelMetric) []GetModelMetricDatasetSummary { return v.DatasetSummaries }).(GetModelMetricDatasetSummaryArrayOutput)
}

// List of metrics entries per label.
func (o GetModelMetricOutput) LabelMetricsReports() GetModelMetricLabelMetricsReportArrayOutput {
	return o.ApplyT(func(v GetModelMetric) []GetModelMetricLabelMetricsReport { return v.LabelMetricsReports }).(GetModelMetricLabelMetricsReportArrayOutput)
}

// The type of the Document model.
func (o GetModelMetricOutput) ModelType() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelMetric) string { return v.ModelType }).(pulumi.StringOutput)
}

// Overall Metrics report for Document Classification Model.
func (o GetModelMetricOutput) OverallMetricsReports() GetModelMetricOverallMetricsReportArrayOutput {
	return o.ApplyT(func(v GetModelMetric) []GetModelMetricOverallMetricsReport { return v.OverallMetricsReports }).(GetModelMetricOverallMetricsReportArrayOutput)
}

type GetModelMetricArrayOutput struct{ *pulumi.OutputState }

func (GetModelMetricArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelMetric)(nil)).Elem()
}

func (o GetModelMetricArrayOutput) ToGetModelMetricArrayOutput() GetModelMetricArrayOutput {
	return o
}

func (o GetModelMetricArrayOutput) ToGetModelMetricArrayOutputWithContext(ctx context.Context) GetModelMetricArrayOutput {
	return o
}

func (o GetModelMetricArrayOutput) Index(i pulumi.IntInput) GetModelMetricOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelMetric {
		return vs[0].([]GetModelMetric)[vs[1].(int)]
	}).(GetModelMetricOutput)
}

type GetModelMetricDatasetSummary struct {
	// Number of samples used for testing the model.
	TestSampleCount int `pulumi:"testSampleCount"`
	// Number of samples used for training the model.
	TrainingSampleCount int `pulumi:"trainingSampleCount"`
	// Number of samples used for validating the model.
	ValidationSampleCount int `pulumi:"validationSampleCount"`
}

// GetModelMetricDatasetSummaryInput is an input type that accepts GetModelMetricDatasetSummaryArgs and GetModelMetricDatasetSummaryOutput values.
// You can construct a concrete instance of `GetModelMetricDatasetSummaryInput` via:
//
//	GetModelMetricDatasetSummaryArgs{...}
type GetModelMetricDatasetSummaryInput interface {
	pulumi.Input

	ToGetModelMetricDatasetSummaryOutput() GetModelMetricDatasetSummaryOutput
	ToGetModelMetricDatasetSummaryOutputWithContext(context.Context) GetModelMetricDatasetSummaryOutput
}

type GetModelMetricDatasetSummaryArgs struct {
	// Number of samples used for testing the model.
	TestSampleCount pulumi.IntInput `pulumi:"testSampleCount"`
	// Number of samples used for training the model.
	TrainingSampleCount pulumi.IntInput `pulumi:"trainingSampleCount"`
	// Number of samples used for validating the model.
	ValidationSampleCount pulumi.IntInput `pulumi:"validationSampleCount"`
}

func (GetModelMetricDatasetSummaryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelMetricDatasetSummary)(nil)).Elem()
}

func (i GetModelMetricDatasetSummaryArgs) ToGetModelMetricDatasetSummaryOutput() GetModelMetricDatasetSummaryOutput {
	return i.ToGetModelMetricDatasetSummaryOutputWithContext(context.Background())
}

func (i GetModelMetricDatasetSummaryArgs) ToGetModelMetricDatasetSummaryOutputWithContext(ctx context.Context) GetModelMetricDatasetSummaryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelMetricDatasetSummaryOutput)
}

// GetModelMetricDatasetSummaryArrayInput is an input type that accepts GetModelMetricDatasetSummaryArray and GetModelMetricDatasetSummaryArrayOutput values.
// You can construct a concrete instance of `GetModelMetricDatasetSummaryArrayInput` via:
//
//	GetModelMetricDatasetSummaryArray{ GetModelMetricDatasetSummaryArgs{...} }
type GetModelMetricDatasetSummaryArrayInput interface {
	pulumi.Input

	ToGetModelMetricDatasetSummaryArrayOutput() GetModelMetricDatasetSummaryArrayOutput
	ToGetModelMetricDatasetSummaryArrayOutputWithContext(context.Context) GetModelMetricDatasetSummaryArrayOutput
}

type GetModelMetricDatasetSummaryArray []GetModelMetricDatasetSummaryInput

func (GetModelMetricDatasetSummaryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelMetricDatasetSummary)(nil)).Elem()
}

func (i GetModelMetricDatasetSummaryArray) ToGetModelMetricDatasetSummaryArrayOutput() GetModelMetricDatasetSummaryArrayOutput {
	return i.ToGetModelMetricDatasetSummaryArrayOutputWithContext(context.Background())
}

func (i GetModelMetricDatasetSummaryArray) ToGetModelMetricDatasetSummaryArrayOutputWithContext(ctx context.Context) GetModelMetricDatasetSummaryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelMetricDatasetSummaryArrayOutput)
}

type GetModelMetricDatasetSummaryOutput struct{ *pulumi.OutputState }

func (GetModelMetricDatasetSummaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelMetricDatasetSummary)(nil)).Elem()
}

func (o GetModelMetricDatasetSummaryOutput) ToGetModelMetricDatasetSummaryOutput() GetModelMetricDatasetSummaryOutput {
	return o
}

func (o GetModelMetricDatasetSummaryOutput) ToGetModelMetricDatasetSummaryOutputWithContext(ctx context.Context) GetModelMetricDatasetSummaryOutput {
	return o
}

// Number of samples used for testing the model.
func (o GetModelMetricDatasetSummaryOutput) TestSampleCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetModelMetricDatasetSummary) int { return v.TestSampleCount }).(pulumi.IntOutput)
}

// Number of samples used for training the model.
func (o GetModelMetricDatasetSummaryOutput) TrainingSampleCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetModelMetricDatasetSummary) int { return v.TrainingSampleCount }).(pulumi.IntOutput)
}

// Number of samples used for validating the model.
func (o GetModelMetricDatasetSummaryOutput) ValidationSampleCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetModelMetricDatasetSummary) int { return v.ValidationSampleCount }).(pulumi.IntOutput)
}

type GetModelMetricDatasetSummaryArrayOutput struct{ *pulumi.OutputState }

func (GetModelMetricDatasetSummaryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelMetricDatasetSummary)(nil)).Elem()
}

func (o GetModelMetricDatasetSummaryArrayOutput) ToGetModelMetricDatasetSummaryArrayOutput() GetModelMetricDatasetSummaryArrayOutput {
	return o
}

func (o GetModelMetricDatasetSummaryArrayOutput) ToGetModelMetricDatasetSummaryArrayOutputWithContext(ctx context.Context) GetModelMetricDatasetSummaryArrayOutput {
	return o
}

func (o GetModelMetricDatasetSummaryArrayOutput) Index(i pulumi.IntInput) GetModelMetricDatasetSummaryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelMetricDatasetSummary {
		return vs[0].([]GetModelMetricDatasetSummary)[vs[1].(int)]
	}).(GetModelMetricDatasetSummaryOutput)
}

type GetModelMetricLabelMetricsReport struct {
	// List of document classification confidence report.
	ConfidenceEntries []GetModelMetricLabelMetricsReportConfidenceEntry `pulumi:"confidenceEntries"`
	// Total test documents in the label.
	DocumentCount int `pulumi:"documentCount"`
	// Label name
	Label string `pulumi:"label"`
	// Mean average precision under different thresholds
	MeanAveragePrecision float64 `pulumi:"meanAveragePrecision"`
}

// GetModelMetricLabelMetricsReportInput is an input type that accepts GetModelMetricLabelMetricsReportArgs and GetModelMetricLabelMetricsReportOutput values.
// You can construct a concrete instance of `GetModelMetricLabelMetricsReportInput` via:
//
//	GetModelMetricLabelMetricsReportArgs{...}
type GetModelMetricLabelMetricsReportInput interface {
	pulumi.Input

	ToGetModelMetricLabelMetricsReportOutput() GetModelMetricLabelMetricsReportOutput
	ToGetModelMetricLabelMetricsReportOutputWithContext(context.Context) GetModelMetricLabelMetricsReportOutput
}

type GetModelMetricLabelMetricsReportArgs struct {
	// List of document classification confidence report.
	ConfidenceEntries GetModelMetricLabelMetricsReportConfidenceEntryArrayInput `pulumi:"confidenceEntries"`
	// Total test documents in the label.
	DocumentCount pulumi.IntInput `pulumi:"documentCount"`
	// Label name
	Label pulumi.StringInput `pulumi:"label"`
	// Mean average precision under different thresholds
	MeanAveragePrecision pulumi.Float64Input `pulumi:"meanAveragePrecision"`
}

func (GetModelMetricLabelMetricsReportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelMetricLabelMetricsReport)(nil)).Elem()
}

func (i GetModelMetricLabelMetricsReportArgs) ToGetModelMetricLabelMetricsReportOutput() GetModelMetricLabelMetricsReportOutput {
	return i.ToGetModelMetricLabelMetricsReportOutputWithContext(context.Background())
}

func (i GetModelMetricLabelMetricsReportArgs) ToGetModelMetricLabelMetricsReportOutputWithContext(ctx context.Context) GetModelMetricLabelMetricsReportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelMetricLabelMetricsReportOutput)
}

// GetModelMetricLabelMetricsReportArrayInput is an input type that accepts GetModelMetricLabelMetricsReportArray and GetModelMetricLabelMetricsReportArrayOutput values.
// You can construct a concrete instance of `GetModelMetricLabelMetricsReportArrayInput` via:
//
//	GetModelMetricLabelMetricsReportArray{ GetModelMetricLabelMetricsReportArgs{...} }
type GetModelMetricLabelMetricsReportArrayInput interface {
	pulumi.Input

	ToGetModelMetricLabelMetricsReportArrayOutput() GetModelMetricLabelMetricsReportArrayOutput
	ToGetModelMetricLabelMetricsReportArrayOutputWithContext(context.Context) GetModelMetricLabelMetricsReportArrayOutput
}

type GetModelMetricLabelMetricsReportArray []GetModelMetricLabelMetricsReportInput

func (GetModelMetricLabelMetricsReportArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelMetricLabelMetricsReport)(nil)).Elem()
}

func (i GetModelMetricLabelMetricsReportArray) ToGetModelMetricLabelMetricsReportArrayOutput() GetModelMetricLabelMetricsReportArrayOutput {
	return i.ToGetModelMetricLabelMetricsReportArrayOutputWithContext(context.Background())
}

func (i GetModelMetricLabelMetricsReportArray) ToGetModelMetricLabelMetricsReportArrayOutputWithContext(ctx context.Context) GetModelMetricLabelMetricsReportArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelMetricLabelMetricsReportArrayOutput)
}

type GetModelMetricLabelMetricsReportOutput struct{ *pulumi.OutputState }

func (GetModelMetricLabelMetricsReportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelMetricLabelMetricsReport)(nil)).Elem()
}

func (o GetModelMetricLabelMetricsReportOutput) ToGetModelMetricLabelMetricsReportOutput() GetModelMetricLabelMetricsReportOutput {
	return o
}

func (o GetModelMetricLabelMetricsReportOutput) ToGetModelMetricLabelMetricsReportOutputWithContext(ctx context.Context) GetModelMetricLabelMetricsReportOutput {
	return o
}

// List of document classification confidence report.
func (o GetModelMetricLabelMetricsReportOutput) ConfidenceEntries() GetModelMetricLabelMetricsReportConfidenceEntryArrayOutput {
	return o.ApplyT(func(v GetModelMetricLabelMetricsReport) []GetModelMetricLabelMetricsReportConfidenceEntry {
		return v.ConfidenceEntries
	}).(GetModelMetricLabelMetricsReportConfidenceEntryArrayOutput)
}

// Total test documents in the label.
func (o GetModelMetricLabelMetricsReportOutput) DocumentCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetModelMetricLabelMetricsReport) int { return v.DocumentCount }).(pulumi.IntOutput)
}

// Label name
func (o GetModelMetricLabelMetricsReportOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelMetricLabelMetricsReport) string { return v.Label }).(pulumi.StringOutput)
}

// Mean average precision under different thresholds
func (o GetModelMetricLabelMetricsReportOutput) MeanAveragePrecision() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelMetricLabelMetricsReport) float64 { return v.MeanAveragePrecision }).(pulumi.Float64Output)
}

type GetModelMetricLabelMetricsReportArrayOutput struct{ *pulumi.OutputState }

func (GetModelMetricLabelMetricsReportArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelMetricLabelMetricsReport)(nil)).Elem()
}

func (o GetModelMetricLabelMetricsReportArrayOutput) ToGetModelMetricLabelMetricsReportArrayOutput() GetModelMetricLabelMetricsReportArrayOutput {
	return o
}

func (o GetModelMetricLabelMetricsReportArrayOutput) ToGetModelMetricLabelMetricsReportArrayOutputWithContext(ctx context.Context) GetModelMetricLabelMetricsReportArrayOutput {
	return o
}

func (o GetModelMetricLabelMetricsReportArrayOutput) Index(i pulumi.IntInput) GetModelMetricLabelMetricsReportOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelMetricLabelMetricsReport {
		return vs[0].([]GetModelMetricLabelMetricsReport)[vs[1].(int)]
	}).(GetModelMetricLabelMetricsReportOutput)
}

type GetModelMetricLabelMetricsReportConfidenceEntry struct {
	// accuracy under the threshold
	Accuracy float64 `pulumi:"accuracy"`
	// f1Score under the threshold
	F1score float64 `pulumi:"f1score"`
	// Precision under the threshold
	Precision float64 `pulumi:"precision"`
	// Recall under the threshold
	Recall float64 `pulumi:"recall"`
	// Threshold used to calculate precision and recall.
	Threshold float64 `pulumi:"threshold"`
}

// GetModelMetricLabelMetricsReportConfidenceEntryInput is an input type that accepts GetModelMetricLabelMetricsReportConfidenceEntryArgs and GetModelMetricLabelMetricsReportConfidenceEntryOutput values.
// You can construct a concrete instance of `GetModelMetricLabelMetricsReportConfidenceEntryInput` via:
//
//	GetModelMetricLabelMetricsReportConfidenceEntryArgs{...}
type GetModelMetricLabelMetricsReportConfidenceEntryInput interface {
	pulumi.Input

	ToGetModelMetricLabelMetricsReportConfidenceEntryOutput() GetModelMetricLabelMetricsReportConfidenceEntryOutput
	ToGetModelMetricLabelMetricsReportConfidenceEntryOutputWithContext(context.Context) GetModelMetricLabelMetricsReportConfidenceEntryOutput
}

type GetModelMetricLabelMetricsReportConfidenceEntryArgs struct {
	// accuracy under the threshold
	Accuracy pulumi.Float64Input `pulumi:"accuracy"`
	// f1Score under the threshold
	F1score pulumi.Float64Input `pulumi:"f1score"`
	// Precision under the threshold
	Precision pulumi.Float64Input `pulumi:"precision"`
	// Recall under the threshold
	Recall pulumi.Float64Input `pulumi:"recall"`
	// Threshold used to calculate precision and recall.
	Threshold pulumi.Float64Input `pulumi:"threshold"`
}

func (GetModelMetricLabelMetricsReportConfidenceEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelMetricLabelMetricsReportConfidenceEntry)(nil)).Elem()
}

func (i GetModelMetricLabelMetricsReportConfidenceEntryArgs) ToGetModelMetricLabelMetricsReportConfidenceEntryOutput() GetModelMetricLabelMetricsReportConfidenceEntryOutput {
	return i.ToGetModelMetricLabelMetricsReportConfidenceEntryOutputWithContext(context.Background())
}

func (i GetModelMetricLabelMetricsReportConfidenceEntryArgs) ToGetModelMetricLabelMetricsReportConfidenceEntryOutputWithContext(ctx context.Context) GetModelMetricLabelMetricsReportConfidenceEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelMetricLabelMetricsReportConfidenceEntryOutput)
}

// GetModelMetricLabelMetricsReportConfidenceEntryArrayInput is an input type that accepts GetModelMetricLabelMetricsReportConfidenceEntryArray and GetModelMetricLabelMetricsReportConfidenceEntryArrayOutput values.
// You can construct a concrete instance of `GetModelMetricLabelMetricsReportConfidenceEntryArrayInput` via:
//
//	GetModelMetricLabelMetricsReportConfidenceEntryArray{ GetModelMetricLabelMetricsReportConfidenceEntryArgs{...} }
type GetModelMetricLabelMetricsReportConfidenceEntryArrayInput interface {
	pulumi.Input

	ToGetModelMetricLabelMetricsReportConfidenceEntryArrayOutput() GetModelMetricLabelMetricsReportConfidenceEntryArrayOutput
	ToGetModelMetricLabelMetricsReportConfidenceEntryArrayOutputWithContext(context.Context) GetModelMetricLabelMetricsReportConfidenceEntryArrayOutput
}

type GetModelMetricLabelMetricsReportConfidenceEntryArray []GetModelMetricLabelMetricsReportConfidenceEntryInput

func (GetModelMetricLabelMetricsReportConfidenceEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelMetricLabelMetricsReportConfidenceEntry)(nil)).Elem()
}

func (i GetModelMetricLabelMetricsReportConfidenceEntryArray) ToGetModelMetricLabelMetricsReportConfidenceEntryArrayOutput() GetModelMetricLabelMetricsReportConfidenceEntryArrayOutput {
	return i.ToGetModelMetricLabelMetricsReportConfidenceEntryArrayOutputWithContext(context.Background())
}

func (i GetModelMetricLabelMetricsReportConfidenceEntryArray) ToGetModelMetricLabelMetricsReportConfidenceEntryArrayOutputWithContext(ctx context.Context) GetModelMetricLabelMetricsReportConfidenceEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelMetricLabelMetricsReportConfidenceEntryArrayOutput)
}

type GetModelMetricLabelMetricsReportConfidenceEntryOutput struct{ *pulumi.OutputState }

func (GetModelMetricLabelMetricsReportConfidenceEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelMetricLabelMetricsReportConfidenceEntry)(nil)).Elem()
}

func (o GetModelMetricLabelMetricsReportConfidenceEntryOutput) ToGetModelMetricLabelMetricsReportConfidenceEntryOutput() GetModelMetricLabelMetricsReportConfidenceEntryOutput {
	return o
}

func (o GetModelMetricLabelMetricsReportConfidenceEntryOutput) ToGetModelMetricLabelMetricsReportConfidenceEntryOutputWithContext(ctx context.Context) GetModelMetricLabelMetricsReportConfidenceEntryOutput {
	return o
}

// accuracy under the threshold
func (o GetModelMetricLabelMetricsReportConfidenceEntryOutput) Accuracy() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelMetricLabelMetricsReportConfidenceEntry) float64 { return v.Accuracy }).(pulumi.Float64Output)
}

// f1Score under the threshold
func (o GetModelMetricLabelMetricsReportConfidenceEntryOutput) F1score() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelMetricLabelMetricsReportConfidenceEntry) float64 { return v.F1score }).(pulumi.Float64Output)
}

// Precision under the threshold
func (o GetModelMetricLabelMetricsReportConfidenceEntryOutput) Precision() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelMetricLabelMetricsReportConfidenceEntry) float64 { return v.Precision }).(pulumi.Float64Output)
}

// Recall under the threshold
func (o GetModelMetricLabelMetricsReportConfidenceEntryOutput) Recall() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelMetricLabelMetricsReportConfidenceEntry) float64 { return v.Recall }).(pulumi.Float64Output)
}

// Threshold used to calculate precision and recall.
func (o GetModelMetricLabelMetricsReportConfidenceEntryOutput) Threshold() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelMetricLabelMetricsReportConfidenceEntry) float64 { return v.Threshold }).(pulumi.Float64Output)
}

type GetModelMetricLabelMetricsReportConfidenceEntryArrayOutput struct{ *pulumi.OutputState }

func (GetModelMetricLabelMetricsReportConfidenceEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelMetricLabelMetricsReportConfidenceEntry)(nil)).Elem()
}

func (o GetModelMetricLabelMetricsReportConfidenceEntryArrayOutput) ToGetModelMetricLabelMetricsReportConfidenceEntryArrayOutput() GetModelMetricLabelMetricsReportConfidenceEntryArrayOutput {
	return o
}

func (o GetModelMetricLabelMetricsReportConfidenceEntryArrayOutput) ToGetModelMetricLabelMetricsReportConfidenceEntryArrayOutputWithContext(ctx context.Context) GetModelMetricLabelMetricsReportConfidenceEntryArrayOutput {
	return o
}

func (o GetModelMetricLabelMetricsReportConfidenceEntryArrayOutput) Index(i pulumi.IntInput) GetModelMetricLabelMetricsReportConfidenceEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelMetricLabelMetricsReportConfidenceEntry {
		return vs[0].([]GetModelMetricLabelMetricsReportConfidenceEntry)[vs[1].(int)]
	}).(GetModelMetricLabelMetricsReportConfidenceEntryOutput)
}

type GetModelMetricOverallMetricsReport struct {
	// List of document classification confidence report.
	ConfidenceEntries []GetModelMetricOverallMetricsReportConfidenceEntry `pulumi:"confidenceEntries"`
	// Total test documents in the label.
	DocumentCount int `pulumi:"documentCount"`
	// Mean average precision under different thresholds
	MeanAveragePrecision float64 `pulumi:"meanAveragePrecision"`
}

// GetModelMetricOverallMetricsReportInput is an input type that accepts GetModelMetricOverallMetricsReportArgs and GetModelMetricOverallMetricsReportOutput values.
// You can construct a concrete instance of `GetModelMetricOverallMetricsReportInput` via:
//
//	GetModelMetricOverallMetricsReportArgs{...}
type GetModelMetricOverallMetricsReportInput interface {
	pulumi.Input

	ToGetModelMetricOverallMetricsReportOutput() GetModelMetricOverallMetricsReportOutput
	ToGetModelMetricOverallMetricsReportOutputWithContext(context.Context) GetModelMetricOverallMetricsReportOutput
}

type GetModelMetricOverallMetricsReportArgs struct {
	// List of document classification confidence report.
	ConfidenceEntries GetModelMetricOverallMetricsReportConfidenceEntryArrayInput `pulumi:"confidenceEntries"`
	// Total test documents in the label.
	DocumentCount pulumi.IntInput `pulumi:"documentCount"`
	// Mean average precision under different thresholds
	MeanAveragePrecision pulumi.Float64Input `pulumi:"meanAveragePrecision"`
}

func (GetModelMetricOverallMetricsReportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelMetricOverallMetricsReport)(nil)).Elem()
}

func (i GetModelMetricOverallMetricsReportArgs) ToGetModelMetricOverallMetricsReportOutput() GetModelMetricOverallMetricsReportOutput {
	return i.ToGetModelMetricOverallMetricsReportOutputWithContext(context.Background())
}

func (i GetModelMetricOverallMetricsReportArgs) ToGetModelMetricOverallMetricsReportOutputWithContext(ctx context.Context) GetModelMetricOverallMetricsReportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelMetricOverallMetricsReportOutput)
}

// GetModelMetricOverallMetricsReportArrayInput is an input type that accepts GetModelMetricOverallMetricsReportArray and GetModelMetricOverallMetricsReportArrayOutput values.
// You can construct a concrete instance of `GetModelMetricOverallMetricsReportArrayInput` via:
//
//	GetModelMetricOverallMetricsReportArray{ GetModelMetricOverallMetricsReportArgs{...} }
type GetModelMetricOverallMetricsReportArrayInput interface {
	pulumi.Input

	ToGetModelMetricOverallMetricsReportArrayOutput() GetModelMetricOverallMetricsReportArrayOutput
	ToGetModelMetricOverallMetricsReportArrayOutputWithContext(context.Context) GetModelMetricOverallMetricsReportArrayOutput
}

type GetModelMetricOverallMetricsReportArray []GetModelMetricOverallMetricsReportInput

func (GetModelMetricOverallMetricsReportArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelMetricOverallMetricsReport)(nil)).Elem()
}

func (i GetModelMetricOverallMetricsReportArray) ToGetModelMetricOverallMetricsReportArrayOutput() GetModelMetricOverallMetricsReportArrayOutput {
	return i.ToGetModelMetricOverallMetricsReportArrayOutputWithContext(context.Background())
}

func (i GetModelMetricOverallMetricsReportArray) ToGetModelMetricOverallMetricsReportArrayOutputWithContext(ctx context.Context) GetModelMetricOverallMetricsReportArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelMetricOverallMetricsReportArrayOutput)
}

type GetModelMetricOverallMetricsReportOutput struct{ *pulumi.OutputState }

func (GetModelMetricOverallMetricsReportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelMetricOverallMetricsReport)(nil)).Elem()
}

func (o GetModelMetricOverallMetricsReportOutput) ToGetModelMetricOverallMetricsReportOutput() GetModelMetricOverallMetricsReportOutput {
	return o
}

func (o GetModelMetricOverallMetricsReportOutput) ToGetModelMetricOverallMetricsReportOutputWithContext(ctx context.Context) GetModelMetricOverallMetricsReportOutput {
	return o
}

// List of document classification confidence report.
func (o GetModelMetricOverallMetricsReportOutput) ConfidenceEntries() GetModelMetricOverallMetricsReportConfidenceEntryArrayOutput {
	return o.ApplyT(func(v GetModelMetricOverallMetricsReport) []GetModelMetricOverallMetricsReportConfidenceEntry {
		return v.ConfidenceEntries
	}).(GetModelMetricOverallMetricsReportConfidenceEntryArrayOutput)
}

// Total test documents in the label.
func (o GetModelMetricOverallMetricsReportOutput) DocumentCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetModelMetricOverallMetricsReport) int { return v.DocumentCount }).(pulumi.IntOutput)
}

// Mean average precision under different thresholds
func (o GetModelMetricOverallMetricsReportOutput) MeanAveragePrecision() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelMetricOverallMetricsReport) float64 { return v.MeanAveragePrecision }).(pulumi.Float64Output)
}

type GetModelMetricOverallMetricsReportArrayOutput struct{ *pulumi.OutputState }

func (GetModelMetricOverallMetricsReportArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelMetricOverallMetricsReport)(nil)).Elem()
}

func (o GetModelMetricOverallMetricsReportArrayOutput) ToGetModelMetricOverallMetricsReportArrayOutput() GetModelMetricOverallMetricsReportArrayOutput {
	return o
}

func (o GetModelMetricOverallMetricsReportArrayOutput) ToGetModelMetricOverallMetricsReportArrayOutputWithContext(ctx context.Context) GetModelMetricOverallMetricsReportArrayOutput {
	return o
}

func (o GetModelMetricOverallMetricsReportArrayOutput) Index(i pulumi.IntInput) GetModelMetricOverallMetricsReportOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelMetricOverallMetricsReport {
		return vs[0].([]GetModelMetricOverallMetricsReport)[vs[1].(int)]
	}).(GetModelMetricOverallMetricsReportOutput)
}

type GetModelMetricOverallMetricsReportConfidenceEntry struct {
	// accuracy under the threshold
	Accuracy float64 `pulumi:"accuracy"`
	// f1Score under the threshold
	F1score float64 `pulumi:"f1score"`
	// Precision under the threshold
	Precision float64 `pulumi:"precision"`
	// Recall under the threshold
	Recall float64 `pulumi:"recall"`
	// Threshold used to calculate precision and recall.
	Threshold float64 `pulumi:"threshold"`
}

// GetModelMetricOverallMetricsReportConfidenceEntryInput is an input type that accepts GetModelMetricOverallMetricsReportConfidenceEntryArgs and GetModelMetricOverallMetricsReportConfidenceEntryOutput values.
// You can construct a concrete instance of `GetModelMetricOverallMetricsReportConfidenceEntryInput` via:
//
//	GetModelMetricOverallMetricsReportConfidenceEntryArgs{...}
type GetModelMetricOverallMetricsReportConfidenceEntryInput interface {
	pulumi.Input

	ToGetModelMetricOverallMetricsReportConfidenceEntryOutput() GetModelMetricOverallMetricsReportConfidenceEntryOutput
	ToGetModelMetricOverallMetricsReportConfidenceEntryOutputWithContext(context.Context) GetModelMetricOverallMetricsReportConfidenceEntryOutput
}

type GetModelMetricOverallMetricsReportConfidenceEntryArgs struct {
	// accuracy under the threshold
	Accuracy pulumi.Float64Input `pulumi:"accuracy"`
	// f1Score under the threshold
	F1score pulumi.Float64Input `pulumi:"f1score"`
	// Precision under the threshold
	Precision pulumi.Float64Input `pulumi:"precision"`
	// Recall under the threshold
	Recall pulumi.Float64Input `pulumi:"recall"`
	// Threshold used to calculate precision and recall.
	Threshold pulumi.Float64Input `pulumi:"threshold"`
}

func (GetModelMetricOverallMetricsReportConfidenceEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelMetricOverallMetricsReportConfidenceEntry)(nil)).Elem()
}

func (i GetModelMetricOverallMetricsReportConfidenceEntryArgs) ToGetModelMetricOverallMetricsReportConfidenceEntryOutput() GetModelMetricOverallMetricsReportConfidenceEntryOutput {
	return i.ToGetModelMetricOverallMetricsReportConfidenceEntryOutputWithContext(context.Background())
}

func (i GetModelMetricOverallMetricsReportConfidenceEntryArgs) ToGetModelMetricOverallMetricsReportConfidenceEntryOutputWithContext(ctx context.Context) GetModelMetricOverallMetricsReportConfidenceEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelMetricOverallMetricsReportConfidenceEntryOutput)
}

// GetModelMetricOverallMetricsReportConfidenceEntryArrayInput is an input type that accepts GetModelMetricOverallMetricsReportConfidenceEntryArray and GetModelMetricOverallMetricsReportConfidenceEntryArrayOutput values.
// You can construct a concrete instance of `GetModelMetricOverallMetricsReportConfidenceEntryArrayInput` via:
//
//	GetModelMetricOverallMetricsReportConfidenceEntryArray{ GetModelMetricOverallMetricsReportConfidenceEntryArgs{...} }
type GetModelMetricOverallMetricsReportConfidenceEntryArrayInput interface {
	pulumi.Input

	ToGetModelMetricOverallMetricsReportConfidenceEntryArrayOutput() GetModelMetricOverallMetricsReportConfidenceEntryArrayOutput
	ToGetModelMetricOverallMetricsReportConfidenceEntryArrayOutputWithContext(context.Context) GetModelMetricOverallMetricsReportConfidenceEntryArrayOutput
}

type GetModelMetricOverallMetricsReportConfidenceEntryArray []GetModelMetricOverallMetricsReportConfidenceEntryInput

func (GetModelMetricOverallMetricsReportConfidenceEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelMetricOverallMetricsReportConfidenceEntry)(nil)).Elem()
}

func (i GetModelMetricOverallMetricsReportConfidenceEntryArray) ToGetModelMetricOverallMetricsReportConfidenceEntryArrayOutput() GetModelMetricOverallMetricsReportConfidenceEntryArrayOutput {
	return i.ToGetModelMetricOverallMetricsReportConfidenceEntryArrayOutputWithContext(context.Background())
}

func (i GetModelMetricOverallMetricsReportConfidenceEntryArray) ToGetModelMetricOverallMetricsReportConfidenceEntryArrayOutputWithContext(ctx context.Context) GetModelMetricOverallMetricsReportConfidenceEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelMetricOverallMetricsReportConfidenceEntryArrayOutput)
}

type GetModelMetricOverallMetricsReportConfidenceEntryOutput struct{ *pulumi.OutputState }

func (GetModelMetricOverallMetricsReportConfidenceEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelMetricOverallMetricsReportConfidenceEntry)(nil)).Elem()
}

func (o GetModelMetricOverallMetricsReportConfidenceEntryOutput) ToGetModelMetricOverallMetricsReportConfidenceEntryOutput() GetModelMetricOverallMetricsReportConfidenceEntryOutput {
	return o
}

func (o GetModelMetricOverallMetricsReportConfidenceEntryOutput) ToGetModelMetricOverallMetricsReportConfidenceEntryOutputWithContext(ctx context.Context) GetModelMetricOverallMetricsReportConfidenceEntryOutput {
	return o
}

// accuracy under the threshold
func (o GetModelMetricOverallMetricsReportConfidenceEntryOutput) Accuracy() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelMetricOverallMetricsReportConfidenceEntry) float64 { return v.Accuracy }).(pulumi.Float64Output)
}

// f1Score under the threshold
func (o GetModelMetricOverallMetricsReportConfidenceEntryOutput) F1score() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelMetricOverallMetricsReportConfidenceEntry) float64 { return v.F1score }).(pulumi.Float64Output)
}

// Precision under the threshold
func (o GetModelMetricOverallMetricsReportConfidenceEntryOutput) Precision() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelMetricOverallMetricsReportConfidenceEntry) float64 { return v.Precision }).(pulumi.Float64Output)
}

// Recall under the threshold
func (o GetModelMetricOverallMetricsReportConfidenceEntryOutput) Recall() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelMetricOverallMetricsReportConfidenceEntry) float64 { return v.Recall }).(pulumi.Float64Output)
}

// Threshold used to calculate precision and recall.
func (o GetModelMetricOverallMetricsReportConfidenceEntryOutput) Threshold() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelMetricOverallMetricsReportConfidenceEntry) float64 { return v.Threshold }).(pulumi.Float64Output)
}

type GetModelMetricOverallMetricsReportConfidenceEntryArrayOutput struct{ *pulumi.OutputState }

func (GetModelMetricOverallMetricsReportConfidenceEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelMetricOverallMetricsReportConfidenceEntry)(nil)).Elem()
}

func (o GetModelMetricOverallMetricsReportConfidenceEntryArrayOutput) ToGetModelMetricOverallMetricsReportConfidenceEntryArrayOutput() GetModelMetricOverallMetricsReportConfidenceEntryArrayOutput {
	return o
}

func (o GetModelMetricOverallMetricsReportConfidenceEntryArrayOutput) ToGetModelMetricOverallMetricsReportConfidenceEntryArrayOutputWithContext(ctx context.Context) GetModelMetricOverallMetricsReportConfidenceEntryArrayOutput {
	return o
}

func (o GetModelMetricOverallMetricsReportConfidenceEntryArrayOutput) Index(i pulumi.IntInput) GetModelMetricOverallMetricsReportConfidenceEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelMetricOverallMetricsReportConfidenceEntry {
		return vs[0].([]GetModelMetricOverallMetricsReportConfidenceEntry)[vs[1].(int)]
	}).(GetModelMetricOverallMetricsReportConfidenceEntryOutput)
}

type GetModelTestingDataset struct {
	// The name of the Object Storage bucket that contains the input data file.
	Bucket string `pulumi:"bucket"`
	// OCID of the Data Labeling dataset.
	DatasetId string `pulumi:"datasetId"`
	// The dataset type, based on where it is stored.
	DatasetType string `pulumi:"datasetType"`
	// The namespace name of the Object Storage bucket that contains the input data file.
	Namespace string `pulumi:"namespace"`
	// The object name of the input data file.
	Object string `pulumi:"object"`
}

// GetModelTestingDatasetInput is an input type that accepts GetModelTestingDatasetArgs and GetModelTestingDatasetOutput values.
// You can construct a concrete instance of `GetModelTestingDatasetInput` via:
//
//	GetModelTestingDatasetArgs{...}
type GetModelTestingDatasetInput interface {
	pulumi.Input

	ToGetModelTestingDatasetOutput() GetModelTestingDatasetOutput
	ToGetModelTestingDatasetOutputWithContext(context.Context) GetModelTestingDatasetOutput
}

type GetModelTestingDatasetArgs struct {
	// The name of the Object Storage bucket that contains the input data file.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// OCID of the Data Labeling dataset.
	DatasetId pulumi.StringInput `pulumi:"datasetId"`
	// The dataset type, based on where it is stored.
	DatasetType pulumi.StringInput `pulumi:"datasetType"`
	// The namespace name of the Object Storage bucket that contains the input data file.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// The object name of the input data file.
	Object pulumi.StringInput `pulumi:"object"`
}

func (GetModelTestingDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelTestingDataset)(nil)).Elem()
}

func (i GetModelTestingDatasetArgs) ToGetModelTestingDatasetOutput() GetModelTestingDatasetOutput {
	return i.ToGetModelTestingDatasetOutputWithContext(context.Background())
}

func (i GetModelTestingDatasetArgs) ToGetModelTestingDatasetOutputWithContext(ctx context.Context) GetModelTestingDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelTestingDatasetOutput)
}

// GetModelTestingDatasetArrayInput is an input type that accepts GetModelTestingDatasetArray and GetModelTestingDatasetArrayOutput values.
// You can construct a concrete instance of `GetModelTestingDatasetArrayInput` via:
//
//	GetModelTestingDatasetArray{ GetModelTestingDatasetArgs{...} }
type GetModelTestingDatasetArrayInput interface {
	pulumi.Input

	ToGetModelTestingDatasetArrayOutput() GetModelTestingDatasetArrayOutput
	ToGetModelTestingDatasetArrayOutputWithContext(context.Context) GetModelTestingDatasetArrayOutput
}

type GetModelTestingDatasetArray []GetModelTestingDatasetInput

func (GetModelTestingDatasetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelTestingDataset)(nil)).Elem()
}

func (i GetModelTestingDatasetArray) ToGetModelTestingDatasetArrayOutput() GetModelTestingDatasetArrayOutput {
	return i.ToGetModelTestingDatasetArrayOutputWithContext(context.Background())
}

func (i GetModelTestingDatasetArray) ToGetModelTestingDatasetArrayOutputWithContext(ctx context.Context) GetModelTestingDatasetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelTestingDatasetArrayOutput)
}

type GetModelTestingDatasetOutput struct{ *pulumi.OutputState }

func (GetModelTestingDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelTestingDataset)(nil)).Elem()
}

func (o GetModelTestingDatasetOutput) ToGetModelTestingDatasetOutput() GetModelTestingDatasetOutput {
	return o
}

func (o GetModelTestingDatasetOutput) ToGetModelTestingDatasetOutputWithContext(ctx context.Context) GetModelTestingDatasetOutput {
	return o
}

// The name of the Object Storage bucket that contains the input data file.
func (o GetModelTestingDatasetOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelTestingDataset) string { return v.Bucket }).(pulumi.StringOutput)
}

// OCID of the Data Labeling dataset.
func (o GetModelTestingDatasetOutput) DatasetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelTestingDataset) string { return v.DatasetId }).(pulumi.StringOutput)
}

// The dataset type, based on where it is stored.
func (o GetModelTestingDatasetOutput) DatasetType() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelTestingDataset) string { return v.DatasetType }).(pulumi.StringOutput)
}

// The namespace name of the Object Storage bucket that contains the input data file.
func (o GetModelTestingDatasetOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelTestingDataset) string { return v.Namespace }).(pulumi.StringOutput)
}

// The object name of the input data file.
func (o GetModelTestingDatasetOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelTestingDataset) string { return v.Object }).(pulumi.StringOutput)
}

type GetModelTestingDatasetArrayOutput struct{ *pulumi.OutputState }

func (GetModelTestingDatasetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelTestingDataset)(nil)).Elem()
}

func (o GetModelTestingDatasetArrayOutput) ToGetModelTestingDatasetArrayOutput() GetModelTestingDatasetArrayOutput {
	return o
}

func (o GetModelTestingDatasetArrayOutput) ToGetModelTestingDatasetArrayOutputWithContext(ctx context.Context) GetModelTestingDatasetArrayOutput {
	return o
}

func (o GetModelTestingDatasetArrayOutput) Index(i pulumi.IntInput) GetModelTestingDatasetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelTestingDataset {
		return vs[0].([]GetModelTestingDataset)[vs[1].(int)]
	}).(GetModelTestingDatasetOutput)
}

type GetModelTrainingDataset struct {
	// The name of the Object Storage bucket that contains the input data file.
	Bucket string `pulumi:"bucket"`
	// OCID of the Data Labeling dataset.
	DatasetId string `pulumi:"datasetId"`
	// The dataset type, based on where it is stored.
	DatasetType string `pulumi:"datasetType"`
	// The namespace name of the Object Storage bucket that contains the input data file.
	Namespace string `pulumi:"namespace"`
	// The object name of the input data file.
	Object string `pulumi:"object"`
}

// GetModelTrainingDatasetInput is an input type that accepts GetModelTrainingDatasetArgs and GetModelTrainingDatasetOutput values.
// You can construct a concrete instance of `GetModelTrainingDatasetInput` via:
//
//	GetModelTrainingDatasetArgs{...}
type GetModelTrainingDatasetInput interface {
	pulumi.Input

	ToGetModelTrainingDatasetOutput() GetModelTrainingDatasetOutput
	ToGetModelTrainingDatasetOutputWithContext(context.Context) GetModelTrainingDatasetOutput
}

type GetModelTrainingDatasetArgs struct {
	// The name of the Object Storage bucket that contains the input data file.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// OCID of the Data Labeling dataset.
	DatasetId pulumi.StringInput `pulumi:"datasetId"`
	// The dataset type, based on where it is stored.
	DatasetType pulumi.StringInput `pulumi:"datasetType"`
	// The namespace name of the Object Storage bucket that contains the input data file.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// The object name of the input data file.
	Object pulumi.StringInput `pulumi:"object"`
}

func (GetModelTrainingDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelTrainingDataset)(nil)).Elem()
}

func (i GetModelTrainingDatasetArgs) ToGetModelTrainingDatasetOutput() GetModelTrainingDatasetOutput {
	return i.ToGetModelTrainingDatasetOutputWithContext(context.Background())
}

func (i GetModelTrainingDatasetArgs) ToGetModelTrainingDatasetOutputWithContext(ctx context.Context) GetModelTrainingDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelTrainingDatasetOutput)
}

// GetModelTrainingDatasetArrayInput is an input type that accepts GetModelTrainingDatasetArray and GetModelTrainingDatasetArrayOutput values.
// You can construct a concrete instance of `GetModelTrainingDatasetArrayInput` via:
//
//	GetModelTrainingDatasetArray{ GetModelTrainingDatasetArgs{...} }
type GetModelTrainingDatasetArrayInput interface {
	pulumi.Input

	ToGetModelTrainingDatasetArrayOutput() GetModelTrainingDatasetArrayOutput
	ToGetModelTrainingDatasetArrayOutputWithContext(context.Context) GetModelTrainingDatasetArrayOutput
}

type GetModelTrainingDatasetArray []GetModelTrainingDatasetInput

func (GetModelTrainingDatasetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelTrainingDataset)(nil)).Elem()
}

func (i GetModelTrainingDatasetArray) ToGetModelTrainingDatasetArrayOutput() GetModelTrainingDatasetArrayOutput {
	return i.ToGetModelTrainingDatasetArrayOutputWithContext(context.Background())
}

func (i GetModelTrainingDatasetArray) ToGetModelTrainingDatasetArrayOutputWithContext(ctx context.Context) GetModelTrainingDatasetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelTrainingDatasetArrayOutput)
}

type GetModelTrainingDatasetOutput struct{ *pulumi.OutputState }

func (GetModelTrainingDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelTrainingDataset)(nil)).Elem()
}

func (o GetModelTrainingDatasetOutput) ToGetModelTrainingDatasetOutput() GetModelTrainingDatasetOutput {
	return o
}

func (o GetModelTrainingDatasetOutput) ToGetModelTrainingDatasetOutputWithContext(ctx context.Context) GetModelTrainingDatasetOutput {
	return o
}

// The name of the Object Storage bucket that contains the input data file.
func (o GetModelTrainingDatasetOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelTrainingDataset) string { return v.Bucket }).(pulumi.StringOutput)
}

// OCID of the Data Labeling dataset.
func (o GetModelTrainingDatasetOutput) DatasetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelTrainingDataset) string { return v.DatasetId }).(pulumi.StringOutput)
}

// The dataset type, based on where it is stored.
func (o GetModelTrainingDatasetOutput) DatasetType() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelTrainingDataset) string { return v.DatasetType }).(pulumi.StringOutput)
}

// The namespace name of the Object Storage bucket that contains the input data file.
func (o GetModelTrainingDatasetOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelTrainingDataset) string { return v.Namespace }).(pulumi.StringOutput)
}

// The object name of the input data file.
func (o GetModelTrainingDatasetOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelTrainingDataset) string { return v.Object }).(pulumi.StringOutput)
}

type GetModelTrainingDatasetArrayOutput struct{ *pulumi.OutputState }

func (GetModelTrainingDatasetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelTrainingDataset)(nil)).Elem()
}

func (o GetModelTrainingDatasetArrayOutput) ToGetModelTrainingDatasetArrayOutput() GetModelTrainingDatasetArrayOutput {
	return o
}

func (o GetModelTrainingDatasetArrayOutput) ToGetModelTrainingDatasetArrayOutputWithContext(ctx context.Context) GetModelTrainingDatasetArrayOutput {
	return o
}

func (o GetModelTrainingDatasetArrayOutput) Index(i pulumi.IntInput) GetModelTrainingDatasetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelTrainingDataset {
		return vs[0].([]GetModelTrainingDataset)[vs[1].(int)]
	}).(GetModelTrainingDatasetOutput)
}

type GetModelValidationDataset struct {
	// The name of the Object Storage bucket that contains the input data file.
	Bucket string `pulumi:"bucket"`
	// OCID of the Data Labeling dataset.
	DatasetId string `pulumi:"datasetId"`
	// The dataset type, based on where it is stored.
	DatasetType string `pulumi:"datasetType"`
	// The namespace name of the Object Storage bucket that contains the input data file.
	Namespace string `pulumi:"namespace"`
	// The object name of the input data file.
	Object string `pulumi:"object"`
}

// GetModelValidationDatasetInput is an input type that accepts GetModelValidationDatasetArgs and GetModelValidationDatasetOutput values.
// You can construct a concrete instance of `GetModelValidationDatasetInput` via:
//
//	GetModelValidationDatasetArgs{...}
type GetModelValidationDatasetInput interface {
	pulumi.Input

	ToGetModelValidationDatasetOutput() GetModelValidationDatasetOutput
	ToGetModelValidationDatasetOutputWithContext(context.Context) GetModelValidationDatasetOutput
}

type GetModelValidationDatasetArgs struct {
	// The name of the Object Storage bucket that contains the input data file.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// OCID of the Data Labeling dataset.
	DatasetId pulumi.StringInput `pulumi:"datasetId"`
	// The dataset type, based on where it is stored.
	DatasetType pulumi.StringInput `pulumi:"datasetType"`
	// The namespace name of the Object Storage bucket that contains the input data file.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// The object name of the input data file.
	Object pulumi.StringInput `pulumi:"object"`
}

func (GetModelValidationDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelValidationDataset)(nil)).Elem()
}

func (i GetModelValidationDatasetArgs) ToGetModelValidationDatasetOutput() GetModelValidationDatasetOutput {
	return i.ToGetModelValidationDatasetOutputWithContext(context.Background())
}

func (i GetModelValidationDatasetArgs) ToGetModelValidationDatasetOutputWithContext(ctx context.Context) GetModelValidationDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelValidationDatasetOutput)
}

// GetModelValidationDatasetArrayInput is an input type that accepts GetModelValidationDatasetArray and GetModelValidationDatasetArrayOutput values.
// You can construct a concrete instance of `GetModelValidationDatasetArrayInput` via:
//
//	GetModelValidationDatasetArray{ GetModelValidationDatasetArgs{...} }
type GetModelValidationDatasetArrayInput interface {
	pulumi.Input

	ToGetModelValidationDatasetArrayOutput() GetModelValidationDatasetArrayOutput
	ToGetModelValidationDatasetArrayOutputWithContext(context.Context) GetModelValidationDatasetArrayOutput
}

type GetModelValidationDatasetArray []GetModelValidationDatasetInput

func (GetModelValidationDatasetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelValidationDataset)(nil)).Elem()
}

func (i GetModelValidationDatasetArray) ToGetModelValidationDatasetArrayOutput() GetModelValidationDatasetArrayOutput {
	return i.ToGetModelValidationDatasetArrayOutputWithContext(context.Background())
}

func (i GetModelValidationDatasetArray) ToGetModelValidationDatasetArrayOutputWithContext(ctx context.Context) GetModelValidationDatasetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelValidationDatasetArrayOutput)
}

type GetModelValidationDatasetOutput struct{ *pulumi.OutputState }

func (GetModelValidationDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelValidationDataset)(nil)).Elem()
}

func (o GetModelValidationDatasetOutput) ToGetModelValidationDatasetOutput() GetModelValidationDatasetOutput {
	return o
}

func (o GetModelValidationDatasetOutput) ToGetModelValidationDatasetOutputWithContext(ctx context.Context) GetModelValidationDatasetOutput {
	return o
}

// The name of the Object Storage bucket that contains the input data file.
func (o GetModelValidationDatasetOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelValidationDataset) string { return v.Bucket }).(pulumi.StringOutput)
}

// OCID of the Data Labeling dataset.
func (o GetModelValidationDatasetOutput) DatasetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelValidationDataset) string { return v.DatasetId }).(pulumi.StringOutput)
}

// The dataset type, based on where it is stored.
func (o GetModelValidationDatasetOutput) DatasetType() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelValidationDataset) string { return v.DatasetType }).(pulumi.StringOutput)
}

// The namespace name of the Object Storage bucket that contains the input data file.
func (o GetModelValidationDatasetOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelValidationDataset) string { return v.Namespace }).(pulumi.StringOutput)
}

// The object name of the input data file.
func (o GetModelValidationDatasetOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelValidationDataset) string { return v.Object }).(pulumi.StringOutput)
}

type GetModelValidationDatasetArrayOutput struct{ *pulumi.OutputState }

func (GetModelValidationDatasetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelValidationDataset)(nil)).Elem()
}

func (o GetModelValidationDatasetArrayOutput) ToGetModelValidationDatasetArrayOutput() GetModelValidationDatasetArrayOutput {
	return o
}

func (o GetModelValidationDatasetArrayOutput) ToGetModelValidationDatasetArrayOutputWithContext(ctx context.Context) GetModelValidationDatasetArrayOutput {
	return o
}

func (o GetModelValidationDatasetArrayOutput) Index(i pulumi.IntInput) GetModelValidationDatasetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelValidationDataset {
		return vs[0].([]GetModelValidationDataset)[vs[1].(int)]
	}).(GetModelValidationDatasetOutput)
}

type GetModelsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetModelsFilterInput is an input type that accepts GetModelsFilterArgs and GetModelsFilterOutput values.
// You can construct a concrete instance of `GetModelsFilterInput` via:
//
//	GetModelsFilterArgs{...}
type GetModelsFilterInput interface {
	pulumi.Input

	ToGetModelsFilterOutput() GetModelsFilterOutput
	ToGetModelsFilterOutputWithContext(context.Context) GetModelsFilterOutput
}

type GetModelsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetModelsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsFilter)(nil)).Elem()
}

func (i GetModelsFilterArgs) ToGetModelsFilterOutput() GetModelsFilterOutput {
	return i.ToGetModelsFilterOutputWithContext(context.Background())
}

func (i GetModelsFilterArgs) ToGetModelsFilterOutputWithContext(ctx context.Context) GetModelsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsFilterOutput)
}

// GetModelsFilterArrayInput is an input type that accepts GetModelsFilterArray and GetModelsFilterArrayOutput values.
// You can construct a concrete instance of `GetModelsFilterArrayInput` via:
//
//	GetModelsFilterArray{ GetModelsFilterArgs{...} }
type GetModelsFilterArrayInput interface {
	pulumi.Input

	ToGetModelsFilterArrayOutput() GetModelsFilterArrayOutput
	ToGetModelsFilterArrayOutputWithContext(context.Context) GetModelsFilterArrayOutput
}

type GetModelsFilterArray []GetModelsFilterInput

func (GetModelsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsFilter)(nil)).Elem()
}

func (i GetModelsFilterArray) ToGetModelsFilterArrayOutput() GetModelsFilterArrayOutput {
	return i.ToGetModelsFilterArrayOutputWithContext(context.Background())
}

func (i GetModelsFilterArray) ToGetModelsFilterArrayOutputWithContext(ctx context.Context) GetModelsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsFilterArrayOutput)
}

type GetModelsFilterOutput struct{ *pulumi.OutputState }

func (GetModelsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsFilter)(nil)).Elem()
}

func (o GetModelsFilterOutput) ToGetModelsFilterOutput() GetModelsFilterOutput {
	return o
}

func (o GetModelsFilterOutput) ToGetModelsFilterOutputWithContext(ctx context.Context) GetModelsFilterOutput {
	return o
}

func (o GetModelsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetModelsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetModelsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetModelsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetModelsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetModelsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetModelsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsFilter)(nil)).Elem()
}

func (o GetModelsFilterArrayOutput) ToGetModelsFilterArrayOutput() GetModelsFilterArrayOutput {
	return o
}

func (o GetModelsFilterArrayOutput) ToGetModelsFilterArrayOutputWithContext(ctx context.Context) GetModelsFilterArrayOutput {
	return o
}

func (o GetModelsFilterArrayOutput) Index(i pulumi.IntInput) GetModelsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelsFilter {
		return vs[0].([]GetModelsFilter)[vs[1].(int)]
	}).(GetModelsFilterOutput)
}

type GetModelsModelCollection struct {
	Items []GetModelsModelCollectionItem `pulumi:"items"`
}

// GetModelsModelCollectionInput is an input type that accepts GetModelsModelCollectionArgs and GetModelsModelCollectionOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionInput` via:
//
//	GetModelsModelCollectionArgs{...}
type GetModelsModelCollectionInput interface {
	pulumi.Input

	ToGetModelsModelCollectionOutput() GetModelsModelCollectionOutput
	ToGetModelsModelCollectionOutputWithContext(context.Context) GetModelsModelCollectionOutput
}

type GetModelsModelCollectionArgs struct {
	Items GetModelsModelCollectionItemArrayInput `pulumi:"items"`
}

func (GetModelsModelCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollection)(nil)).Elem()
}

func (i GetModelsModelCollectionArgs) ToGetModelsModelCollectionOutput() GetModelsModelCollectionOutput {
	return i.ToGetModelsModelCollectionOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionArgs) ToGetModelsModelCollectionOutputWithContext(ctx context.Context) GetModelsModelCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionOutput)
}

// GetModelsModelCollectionArrayInput is an input type that accepts GetModelsModelCollectionArray and GetModelsModelCollectionArrayOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionArrayInput` via:
//
//	GetModelsModelCollectionArray{ GetModelsModelCollectionArgs{...} }
type GetModelsModelCollectionArrayInput interface {
	pulumi.Input

	ToGetModelsModelCollectionArrayOutput() GetModelsModelCollectionArrayOutput
	ToGetModelsModelCollectionArrayOutputWithContext(context.Context) GetModelsModelCollectionArrayOutput
}

type GetModelsModelCollectionArray []GetModelsModelCollectionInput

func (GetModelsModelCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollection)(nil)).Elem()
}

func (i GetModelsModelCollectionArray) ToGetModelsModelCollectionArrayOutput() GetModelsModelCollectionArrayOutput {
	return i.ToGetModelsModelCollectionArrayOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionArray) ToGetModelsModelCollectionArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionArrayOutput)
}

type GetModelsModelCollectionOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollection)(nil)).Elem()
}

func (o GetModelsModelCollectionOutput) ToGetModelsModelCollectionOutput() GetModelsModelCollectionOutput {
	return o
}

func (o GetModelsModelCollectionOutput) ToGetModelsModelCollectionOutputWithContext(ctx context.Context) GetModelsModelCollectionOutput {
	return o
}

func (o GetModelsModelCollectionOutput) Items() GetModelsModelCollectionItemArrayOutput {
	return o.ApplyT(func(v GetModelsModelCollection) []GetModelsModelCollectionItem { return v.Items }).(GetModelsModelCollectionItemArrayOutput)
}

type GetModelsModelCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollection)(nil)).Elem()
}

func (o GetModelsModelCollectionArrayOutput) ToGetModelsModelCollectionArrayOutput() GetModelsModelCollectionArrayOutput {
	return o
}

func (o GetModelsModelCollectionArrayOutput) ToGetModelsModelCollectionArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionArrayOutput {
	return o
}

func (o GetModelsModelCollectionArrayOutput) Index(i pulumi.IntInput) GetModelsModelCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelsModelCollection {
		return vs[0].([]GetModelsModelCollection)[vs[1].(int)]
	}).(GetModelsModelCollectionOutput)
}

type GetModelsModelCollectionItem struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) collection of active custom Key Value models that need to be composed.
	ComponentModels []GetModelsModelCollectionItemComponentModel `pulumi:"componentModels"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For example: `{"foo-namespace": {"bar-key": "value"}}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// An optional description of the model.
	Description string `pulumi:"description"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The filter to find the model with the given identifier.
	Id string `pulumi:"id"`
	// Set to true when the model is created by using multiple key value extraction models.
	IsComposedModel bool `pulumi:"isComposedModel"`
	// Set to true when experimenting with a new model type or dataset, so model training is quick, with a predefined low number of passes through the training data.
	IsQuickMode bool `pulumi:"isQuickMode"`
	// The collection of labels used to train the custom model.
	Labels []string `pulumi:"labels"`
	// A message describing the current state in more detail, that can provide actionable information if training failed.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// The maximum model training time in hours, expressed as a decimal fraction.
	MaxTrainingTimeInHours float64 `pulumi:"maxTrainingTimeInHours"`
	// Trained Model Metrics.
	Metrics []GetModelsModelCollectionItemMetric `pulumi:"metrics"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of active custom Key Value model that need to be composed.
	ModelId string `pulumi:"modelId"`
	// The type of the Document model.
	ModelType string `pulumi:"modelType"`
	// The version of the model.
	ModelVersion string `pulumi:"modelVersion"`
	// The ID of the project for which to list the objects.
	ProjectId string `pulumi:"projectId"`
	// The filter to match models with the given lifecycleState.
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. For example: `{"orcl-cloud": {"free-tier-retained": "true"}}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The tenancy id of the model.
	TenancyId string `pulumi:"tenancyId"`
	// The base entity which is the input for creating and training a model.
	TestingDatasets []GetModelsModelCollectionItemTestingDataset `pulumi:"testingDatasets"`
	// When the model was created, as an RFC3339 datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// When the model was updated, as an RFC3339 datetime string.
	TimeUpdated string `pulumi:"timeUpdated"`
	// The total hours actually used for model training.
	TrainedTimeInHours float64 `pulumi:"trainedTimeInHours"`
	// The base entity which is the input for creating and training a model.
	TrainingDatasets []GetModelsModelCollectionItemTrainingDataset `pulumi:"trainingDatasets"`
	// The base entity which is the input for creating and training a model.
	ValidationDatasets []GetModelsModelCollectionItemValidationDataset `pulumi:"validationDatasets"`
}

// GetModelsModelCollectionItemInput is an input type that accepts GetModelsModelCollectionItemArgs and GetModelsModelCollectionItemOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemInput` via:
//
//	GetModelsModelCollectionItemArgs{...}
type GetModelsModelCollectionItemInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemOutput() GetModelsModelCollectionItemOutput
	ToGetModelsModelCollectionItemOutputWithContext(context.Context) GetModelsModelCollectionItemOutput
}

type GetModelsModelCollectionItemArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) collection of active custom Key Value models that need to be composed.
	ComponentModels GetModelsModelCollectionItemComponentModelArrayInput `pulumi:"componentModels"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For example: `{"foo-namespace": {"bar-key": "value"}}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// An optional description of the model.
	Description pulumi.StringInput `pulumi:"description"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// The filter to find the model with the given identifier.
	Id pulumi.StringInput `pulumi:"id"`
	// Set to true when the model is created by using multiple key value extraction models.
	IsComposedModel pulumi.BoolInput `pulumi:"isComposedModel"`
	// Set to true when experimenting with a new model type or dataset, so model training is quick, with a predefined low number of passes through the training data.
	IsQuickMode pulumi.BoolInput `pulumi:"isQuickMode"`
	// The collection of labels used to train the custom model.
	Labels pulumi.StringArrayInput `pulumi:"labels"`
	// A message describing the current state in more detail, that can provide actionable information if training failed.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// The maximum model training time in hours, expressed as a decimal fraction.
	MaxTrainingTimeInHours pulumi.Float64Input `pulumi:"maxTrainingTimeInHours"`
	// Trained Model Metrics.
	Metrics GetModelsModelCollectionItemMetricArrayInput `pulumi:"metrics"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of active custom Key Value model that need to be composed.
	ModelId pulumi.StringInput `pulumi:"modelId"`
	// The type of the Document model.
	ModelType pulumi.StringInput `pulumi:"modelType"`
	// The version of the model.
	ModelVersion pulumi.StringInput `pulumi:"modelVersion"`
	// The ID of the project for which to list the objects.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// The filter to match models with the given lifecycleState.
	State pulumi.StringInput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. For example: `{"orcl-cloud": {"free-tier-retained": "true"}}`
	SystemTags pulumi.StringMapInput `pulumi:"systemTags"`
	// The tenancy id of the model.
	TenancyId pulumi.StringInput `pulumi:"tenancyId"`
	// The base entity which is the input for creating and training a model.
	TestingDatasets GetModelsModelCollectionItemTestingDatasetArrayInput `pulumi:"testingDatasets"`
	// When the model was created, as an RFC3339 datetime string.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// When the model was updated, as an RFC3339 datetime string.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
	// The total hours actually used for model training.
	TrainedTimeInHours pulumi.Float64Input `pulumi:"trainedTimeInHours"`
	// The base entity which is the input for creating and training a model.
	TrainingDatasets GetModelsModelCollectionItemTrainingDatasetArrayInput `pulumi:"trainingDatasets"`
	// The base entity which is the input for creating and training a model.
	ValidationDatasets GetModelsModelCollectionItemValidationDatasetArrayInput `pulumi:"validationDatasets"`
}

func (GetModelsModelCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItem)(nil)).Elem()
}

func (i GetModelsModelCollectionItemArgs) ToGetModelsModelCollectionItemOutput() GetModelsModelCollectionItemOutput {
	return i.ToGetModelsModelCollectionItemOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemArgs) ToGetModelsModelCollectionItemOutputWithContext(ctx context.Context) GetModelsModelCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemOutput)
}

// GetModelsModelCollectionItemArrayInput is an input type that accepts GetModelsModelCollectionItemArray and GetModelsModelCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemArrayInput` via:
//
//	GetModelsModelCollectionItemArray{ GetModelsModelCollectionItemArgs{...} }
type GetModelsModelCollectionItemArrayInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemArrayOutput() GetModelsModelCollectionItemArrayOutput
	ToGetModelsModelCollectionItemArrayOutputWithContext(context.Context) GetModelsModelCollectionItemArrayOutput
}

type GetModelsModelCollectionItemArray []GetModelsModelCollectionItemInput

func (GetModelsModelCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItem)(nil)).Elem()
}

func (i GetModelsModelCollectionItemArray) ToGetModelsModelCollectionItemArrayOutput() GetModelsModelCollectionItemArrayOutput {
	return i.ToGetModelsModelCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemArray) ToGetModelsModelCollectionItemArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemArrayOutput)
}

type GetModelsModelCollectionItemOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItem)(nil)).Elem()
}

func (o GetModelsModelCollectionItemOutput) ToGetModelsModelCollectionItemOutput() GetModelsModelCollectionItemOutput {
	return o
}

func (o GetModelsModelCollectionItemOutput) ToGetModelsModelCollectionItemOutputWithContext(ctx context.Context) GetModelsModelCollectionItemOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetModelsModelCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) collection of active custom Key Value models that need to be composed.
func (o GetModelsModelCollectionItemOutput) ComponentModels() GetModelsModelCollectionItemComponentModelArrayOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) []GetModelsModelCollectionItemComponentModel {
		return v.ComponentModels
	}).(GetModelsModelCollectionItemComponentModelArrayOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For example: `{"foo-namespace": {"bar-key": "value"}}`
func (o GetModelsModelCollectionItemOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// An optional description of the model.
func (o GetModelsModelCollectionItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) string { return v.Description }).(pulumi.StringOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetModelsModelCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{"bar-key": "value"}`
func (o GetModelsModelCollectionItemOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The filter to find the model with the given identifier.
func (o GetModelsModelCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// Set to true when the model is created by using multiple key value extraction models.
func (o GetModelsModelCollectionItemOutput) IsComposedModel() pulumi.BoolOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) bool { return v.IsComposedModel }).(pulumi.BoolOutput)
}

// Set to true when experimenting with a new model type or dataset, so model training is quick, with a predefined low number of passes through the training data.
func (o GetModelsModelCollectionItemOutput) IsQuickMode() pulumi.BoolOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) bool { return v.IsQuickMode }).(pulumi.BoolOutput)
}

// The collection of labels used to train the custom model.
func (o GetModelsModelCollectionItemOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) []string { return v.Labels }).(pulumi.StringArrayOutput)
}

// A message describing the current state in more detail, that can provide actionable information if training failed.
func (o GetModelsModelCollectionItemOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The maximum model training time in hours, expressed as a decimal fraction.
func (o GetModelsModelCollectionItemOutput) MaxTrainingTimeInHours() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelsModelCollectionItem) float64 { return v.MaxTrainingTimeInHours }).(pulumi.Float64Output)
}

// Trained Model Metrics.
func (o GetModelsModelCollectionItemOutput) Metrics() GetModelsModelCollectionItemMetricArrayOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) []GetModelsModelCollectionItemMetric { return v.Metrics }).(GetModelsModelCollectionItemMetricArrayOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of active custom Key Value model that need to be composed.
func (o GetModelsModelCollectionItemOutput) ModelId() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) string { return v.ModelId }).(pulumi.StringOutput)
}

// The type of the Document model.
func (o GetModelsModelCollectionItemOutput) ModelType() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) string { return v.ModelType }).(pulumi.StringOutput)
}

// The version of the model.
func (o GetModelsModelCollectionItemOutput) ModelVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) string { return v.ModelVersion }).(pulumi.StringOutput)
}

// The ID of the project for which to list the objects.
func (o GetModelsModelCollectionItemOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) string { return v.ProjectId }).(pulumi.StringOutput)
}

// The filter to match models with the given lifecycleState.
func (o GetModelsModelCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. For example: `{"orcl-cloud": {"free-tier-retained": "true"}}`
func (o GetModelsModelCollectionItemOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The tenancy id of the model.
func (o GetModelsModelCollectionItemOutput) TenancyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) string { return v.TenancyId }).(pulumi.StringOutput)
}

// The base entity which is the input for creating and training a model.
func (o GetModelsModelCollectionItemOutput) TestingDatasets() GetModelsModelCollectionItemTestingDatasetArrayOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) []GetModelsModelCollectionItemTestingDataset {
		return v.TestingDatasets
	}).(GetModelsModelCollectionItemTestingDatasetArrayOutput)
}

// When the model was created, as an RFC3339 datetime string.
func (o GetModelsModelCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// When the model was updated, as an RFC3339 datetime string.
func (o GetModelsModelCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// The total hours actually used for model training.
func (o GetModelsModelCollectionItemOutput) TrainedTimeInHours() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelsModelCollectionItem) float64 { return v.TrainedTimeInHours }).(pulumi.Float64Output)
}

// The base entity which is the input for creating and training a model.
func (o GetModelsModelCollectionItemOutput) TrainingDatasets() GetModelsModelCollectionItemTrainingDatasetArrayOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) []GetModelsModelCollectionItemTrainingDataset {
		return v.TrainingDatasets
	}).(GetModelsModelCollectionItemTrainingDatasetArrayOutput)
}

// The base entity which is the input for creating and training a model.
func (o GetModelsModelCollectionItemOutput) ValidationDatasets() GetModelsModelCollectionItemValidationDatasetArrayOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) []GetModelsModelCollectionItemValidationDataset {
		return v.ValidationDatasets
	}).(GetModelsModelCollectionItemValidationDatasetArrayOutput)
}

type GetModelsModelCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItem)(nil)).Elem()
}

func (o GetModelsModelCollectionItemArrayOutput) ToGetModelsModelCollectionItemArrayOutput() GetModelsModelCollectionItemArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemArrayOutput) ToGetModelsModelCollectionItemArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemArrayOutput) Index(i pulumi.IntInput) GetModelsModelCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelsModelCollectionItem {
		return vs[0].([]GetModelsModelCollectionItem)[vs[1].(int)]
	}).(GetModelsModelCollectionItemOutput)
}

type GetModelsModelCollectionItemComponentModel struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of active custom Key Value model that need to be composed.
	ModelId string `pulumi:"modelId"`
}

// GetModelsModelCollectionItemComponentModelInput is an input type that accepts GetModelsModelCollectionItemComponentModelArgs and GetModelsModelCollectionItemComponentModelOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemComponentModelInput` via:
//
//	GetModelsModelCollectionItemComponentModelArgs{...}
type GetModelsModelCollectionItemComponentModelInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemComponentModelOutput() GetModelsModelCollectionItemComponentModelOutput
	ToGetModelsModelCollectionItemComponentModelOutputWithContext(context.Context) GetModelsModelCollectionItemComponentModelOutput
}

type GetModelsModelCollectionItemComponentModelArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of active custom Key Value model that need to be composed.
	ModelId pulumi.StringInput `pulumi:"modelId"`
}

func (GetModelsModelCollectionItemComponentModelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItemComponentModel)(nil)).Elem()
}

func (i GetModelsModelCollectionItemComponentModelArgs) ToGetModelsModelCollectionItemComponentModelOutput() GetModelsModelCollectionItemComponentModelOutput {
	return i.ToGetModelsModelCollectionItemComponentModelOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemComponentModelArgs) ToGetModelsModelCollectionItemComponentModelOutputWithContext(ctx context.Context) GetModelsModelCollectionItemComponentModelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemComponentModelOutput)
}

// GetModelsModelCollectionItemComponentModelArrayInput is an input type that accepts GetModelsModelCollectionItemComponentModelArray and GetModelsModelCollectionItemComponentModelArrayOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemComponentModelArrayInput` via:
//
//	GetModelsModelCollectionItemComponentModelArray{ GetModelsModelCollectionItemComponentModelArgs{...} }
type GetModelsModelCollectionItemComponentModelArrayInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemComponentModelArrayOutput() GetModelsModelCollectionItemComponentModelArrayOutput
	ToGetModelsModelCollectionItemComponentModelArrayOutputWithContext(context.Context) GetModelsModelCollectionItemComponentModelArrayOutput
}

type GetModelsModelCollectionItemComponentModelArray []GetModelsModelCollectionItemComponentModelInput

func (GetModelsModelCollectionItemComponentModelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItemComponentModel)(nil)).Elem()
}

func (i GetModelsModelCollectionItemComponentModelArray) ToGetModelsModelCollectionItemComponentModelArrayOutput() GetModelsModelCollectionItemComponentModelArrayOutput {
	return i.ToGetModelsModelCollectionItemComponentModelArrayOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemComponentModelArray) ToGetModelsModelCollectionItemComponentModelArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemComponentModelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemComponentModelArrayOutput)
}

type GetModelsModelCollectionItemComponentModelOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemComponentModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItemComponentModel)(nil)).Elem()
}

func (o GetModelsModelCollectionItemComponentModelOutput) ToGetModelsModelCollectionItemComponentModelOutput() GetModelsModelCollectionItemComponentModelOutput {
	return o
}

func (o GetModelsModelCollectionItemComponentModelOutput) ToGetModelsModelCollectionItemComponentModelOutputWithContext(ctx context.Context) GetModelsModelCollectionItemComponentModelOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of active custom Key Value model that need to be composed.
func (o GetModelsModelCollectionItemComponentModelOutput) ModelId() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemComponentModel) string { return v.ModelId }).(pulumi.StringOutput)
}

type GetModelsModelCollectionItemComponentModelArrayOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemComponentModelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItemComponentModel)(nil)).Elem()
}

func (o GetModelsModelCollectionItemComponentModelArrayOutput) ToGetModelsModelCollectionItemComponentModelArrayOutput() GetModelsModelCollectionItemComponentModelArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemComponentModelArrayOutput) ToGetModelsModelCollectionItemComponentModelArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemComponentModelArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemComponentModelArrayOutput) Index(i pulumi.IntInput) GetModelsModelCollectionItemComponentModelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelsModelCollectionItemComponentModel {
		return vs[0].([]GetModelsModelCollectionItemComponentModel)[vs[1].(int)]
	}).(GetModelsModelCollectionItemComponentModelOutput)
}

type GetModelsModelCollectionItemMetric struct {
	// Summary of count of samples used during model training.
	DatasetSummaries []GetModelsModelCollectionItemMetricDatasetSummary `pulumi:"datasetSummaries"`
	// List of metrics entries per label.
	LabelMetricsReports []GetModelsModelCollectionItemMetricLabelMetricsReport `pulumi:"labelMetricsReports"`
	// The type of the Document model.
	ModelType string `pulumi:"modelType"`
	// Overall Metrics report for Document Classification Model.
	OverallMetricsReports []GetModelsModelCollectionItemMetricOverallMetricsReport `pulumi:"overallMetricsReports"`
}

// GetModelsModelCollectionItemMetricInput is an input type that accepts GetModelsModelCollectionItemMetricArgs and GetModelsModelCollectionItemMetricOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemMetricInput` via:
//
//	GetModelsModelCollectionItemMetricArgs{...}
type GetModelsModelCollectionItemMetricInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemMetricOutput() GetModelsModelCollectionItemMetricOutput
	ToGetModelsModelCollectionItemMetricOutputWithContext(context.Context) GetModelsModelCollectionItemMetricOutput
}

type GetModelsModelCollectionItemMetricArgs struct {
	// Summary of count of samples used during model training.
	DatasetSummaries GetModelsModelCollectionItemMetricDatasetSummaryArrayInput `pulumi:"datasetSummaries"`
	// List of metrics entries per label.
	LabelMetricsReports GetModelsModelCollectionItemMetricLabelMetricsReportArrayInput `pulumi:"labelMetricsReports"`
	// The type of the Document model.
	ModelType pulumi.StringInput `pulumi:"modelType"`
	// Overall Metrics report for Document Classification Model.
	OverallMetricsReports GetModelsModelCollectionItemMetricOverallMetricsReportArrayInput `pulumi:"overallMetricsReports"`
}

func (GetModelsModelCollectionItemMetricArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItemMetric)(nil)).Elem()
}

func (i GetModelsModelCollectionItemMetricArgs) ToGetModelsModelCollectionItemMetricOutput() GetModelsModelCollectionItemMetricOutput {
	return i.ToGetModelsModelCollectionItemMetricOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemMetricArgs) ToGetModelsModelCollectionItemMetricOutputWithContext(ctx context.Context) GetModelsModelCollectionItemMetricOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemMetricOutput)
}

// GetModelsModelCollectionItemMetricArrayInput is an input type that accepts GetModelsModelCollectionItemMetricArray and GetModelsModelCollectionItemMetricArrayOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemMetricArrayInput` via:
//
//	GetModelsModelCollectionItemMetricArray{ GetModelsModelCollectionItemMetricArgs{...} }
type GetModelsModelCollectionItemMetricArrayInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemMetricArrayOutput() GetModelsModelCollectionItemMetricArrayOutput
	ToGetModelsModelCollectionItemMetricArrayOutputWithContext(context.Context) GetModelsModelCollectionItemMetricArrayOutput
}

type GetModelsModelCollectionItemMetricArray []GetModelsModelCollectionItemMetricInput

func (GetModelsModelCollectionItemMetricArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItemMetric)(nil)).Elem()
}

func (i GetModelsModelCollectionItemMetricArray) ToGetModelsModelCollectionItemMetricArrayOutput() GetModelsModelCollectionItemMetricArrayOutput {
	return i.ToGetModelsModelCollectionItemMetricArrayOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemMetricArray) ToGetModelsModelCollectionItemMetricArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemMetricArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemMetricArrayOutput)
}

type GetModelsModelCollectionItemMetricOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemMetricOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItemMetric)(nil)).Elem()
}

func (o GetModelsModelCollectionItemMetricOutput) ToGetModelsModelCollectionItemMetricOutput() GetModelsModelCollectionItemMetricOutput {
	return o
}

func (o GetModelsModelCollectionItemMetricOutput) ToGetModelsModelCollectionItemMetricOutputWithContext(ctx context.Context) GetModelsModelCollectionItemMetricOutput {
	return o
}

// Summary of count of samples used during model training.
func (o GetModelsModelCollectionItemMetricOutput) DatasetSummaries() GetModelsModelCollectionItemMetricDatasetSummaryArrayOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemMetric) []GetModelsModelCollectionItemMetricDatasetSummary {
		return v.DatasetSummaries
	}).(GetModelsModelCollectionItemMetricDatasetSummaryArrayOutput)
}

// List of metrics entries per label.
func (o GetModelsModelCollectionItemMetricOutput) LabelMetricsReports() GetModelsModelCollectionItemMetricLabelMetricsReportArrayOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemMetric) []GetModelsModelCollectionItemMetricLabelMetricsReport {
		return v.LabelMetricsReports
	}).(GetModelsModelCollectionItemMetricLabelMetricsReportArrayOutput)
}

// The type of the Document model.
func (o GetModelsModelCollectionItemMetricOutput) ModelType() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemMetric) string { return v.ModelType }).(pulumi.StringOutput)
}

// Overall Metrics report for Document Classification Model.
func (o GetModelsModelCollectionItemMetricOutput) OverallMetricsReports() GetModelsModelCollectionItemMetricOverallMetricsReportArrayOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemMetric) []GetModelsModelCollectionItemMetricOverallMetricsReport {
		return v.OverallMetricsReports
	}).(GetModelsModelCollectionItemMetricOverallMetricsReportArrayOutput)
}

type GetModelsModelCollectionItemMetricArrayOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemMetricArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItemMetric)(nil)).Elem()
}

func (o GetModelsModelCollectionItemMetricArrayOutput) ToGetModelsModelCollectionItemMetricArrayOutput() GetModelsModelCollectionItemMetricArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemMetricArrayOutput) ToGetModelsModelCollectionItemMetricArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemMetricArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemMetricArrayOutput) Index(i pulumi.IntInput) GetModelsModelCollectionItemMetricOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelsModelCollectionItemMetric {
		return vs[0].([]GetModelsModelCollectionItemMetric)[vs[1].(int)]
	}).(GetModelsModelCollectionItemMetricOutput)
}

type GetModelsModelCollectionItemMetricDatasetSummary struct {
	// Number of samples used for testing the model.
	TestSampleCount int `pulumi:"testSampleCount"`
	// Number of samples used for training the model.
	TrainingSampleCount int `pulumi:"trainingSampleCount"`
	// Number of samples used for validating the model.
	ValidationSampleCount int `pulumi:"validationSampleCount"`
}

// GetModelsModelCollectionItemMetricDatasetSummaryInput is an input type that accepts GetModelsModelCollectionItemMetricDatasetSummaryArgs and GetModelsModelCollectionItemMetricDatasetSummaryOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemMetricDatasetSummaryInput` via:
//
//	GetModelsModelCollectionItemMetricDatasetSummaryArgs{...}
type GetModelsModelCollectionItemMetricDatasetSummaryInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemMetricDatasetSummaryOutput() GetModelsModelCollectionItemMetricDatasetSummaryOutput
	ToGetModelsModelCollectionItemMetricDatasetSummaryOutputWithContext(context.Context) GetModelsModelCollectionItemMetricDatasetSummaryOutput
}

type GetModelsModelCollectionItemMetricDatasetSummaryArgs struct {
	// Number of samples used for testing the model.
	TestSampleCount pulumi.IntInput `pulumi:"testSampleCount"`
	// Number of samples used for training the model.
	TrainingSampleCount pulumi.IntInput `pulumi:"trainingSampleCount"`
	// Number of samples used for validating the model.
	ValidationSampleCount pulumi.IntInput `pulumi:"validationSampleCount"`
}

func (GetModelsModelCollectionItemMetricDatasetSummaryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItemMetricDatasetSummary)(nil)).Elem()
}

func (i GetModelsModelCollectionItemMetricDatasetSummaryArgs) ToGetModelsModelCollectionItemMetricDatasetSummaryOutput() GetModelsModelCollectionItemMetricDatasetSummaryOutput {
	return i.ToGetModelsModelCollectionItemMetricDatasetSummaryOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemMetricDatasetSummaryArgs) ToGetModelsModelCollectionItemMetricDatasetSummaryOutputWithContext(ctx context.Context) GetModelsModelCollectionItemMetricDatasetSummaryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemMetricDatasetSummaryOutput)
}

// GetModelsModelCollectionItemMetricDatasetSummaryArrayInput is an input type that accepts GetModelsModelCollectionItemMetricDatasetSummaryArray and GetModelsModelCollectionItemMetricDatasetSummaryArrayOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemMetricDatasetSummaryArrayInput` via:
//
//	GetModelsModelCollectionItemMetricDatasetSummaryArray{ GetModelsModelCollectionItemMetricDatasetSummaryArgs{...} }
type GetModelsModelCollectionItemMetricDatasetSummaryArrayInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemMetricDatasetSummaryArrayOutput() GetModelsModelCollectionItemMetricDatasetSummaryArrayOutput
	ToGetModelsModelCollectionItemMetricDatasetSummaryArrayOutputWithContext(context.Context) GetModelsModelCollectionItemMetricDatasetSummaryArrayOutput
}

type GetModelsModelCollectionItemMetricDatasetSummaryArray []GetModelsModelCollectionItemMetricDatasetSummaryInput

func (GetModelsModelCollectionItemMetricDatasetSummaryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItemMetricDatasetSummary)(nil)).Elem()
}

func (i GetModelsModelCollectionItemMetricDatasetSummaryArray) ToGetModelsModelCollectionItemMetricDatasetSummaryArrayOutput() GetModelsModelCollectionItemMetricDatasetSummaryArrayOutput {
	return i.ToGetModelsModelCollectionItemMetricDatasetSummaryArrayOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemMetricDatasetSummaryArray) ToGetModelsModelCollectionItemMetricDatasetSummaryArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemMetricDatasetSummaryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemMetricDatasetSummaryArrayOutput)
}

type GetModelsModelCollectionItemMetricDatasetSummaryOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemMetricDatasetSummaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItemMetricDatasetSummary)(nil)).Elem()
}

func (o GetModelsModelCollectionItemMetricDatasetSummaryOutput) ToGetModelsModelCollectionItemMetricDatasetSummaryOutput() GetModelsModelCollectionItemMetricDatasetSummaryOutput {
	return o
}

func (o GetModelsModelCollectionItemMetricDatasetSummaryOutput) ToGetModelsModelCollectionItemMetricDatasetSummaryOutputWithContext(ctx context.Context) GetModelsModelCollectionItemMetricDatasetSummaryOutput {
	return o
}

// Number of samples used for testing the model.
func (o GetModelsModelCollectionItemMetricDatasetSummaryOutput) TestSampleCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemMetricDatasetSummary) int { return v.TestSampleCount }).(pulumi.IntOutput)
}

// Number of samples used for training the model.
func (o GetModelsModelCollectionItemMetricDatasetSummaryOutput) TrainingSampleCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemMetricDatasetSummary) int { return v.TrainingSampleCount }).(pulumi.IntOutput)
}

// Number of samples used for validating the model.
func (o GetModelsModelCollectionItemMetricDatasetSummaryOutput) ValidationSampleCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemMetricDatasetSummary) int { return v.ValidationSampleCount }).(pulumi.IntOutput)
}

type GetModelsModelCollectionItemMetricDatasetSummaryArrayOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemMetricDatasetSummaryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItemMetricDatasetSummary)(nil)).Elem()
}

func (o GetModelsModelCollectionItemMetricDatasetSummaryArrayOutput) ToGetModelsModelCollectionItemMetricDatasetSummaryArrayOutput() GetModelsModelCollectionItemMetricDatasetSummaryArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemMetricDatasetSummaryArrayOutput) ToGetModelsModelCollectionItemMetricDatasetSummaryArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemMetricDatasetSummaryArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemMetricDatasetSummaryArrayOutput) Index(i pulumi.IntInput) GetModelsModelCollectionItemMetricDatasetSummaryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelsModelCollectionItemMetricDatasetSummary {
		return vs[0].([]GetModelsModelCollectionItemMetricDatasetSummary)[vs[1].(int)]
	}).(GetModelsModelCollectionItemMetricDatasetSummaryOutput)
}

type GetModelsModelCollectionItemMetricLabelMetricsReport struct {
	// List of document classification confidence report.
	ConfidenceEntries []GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntry `pulumi:"confidenceEntries"`
	// Total test documents in the label.
	DocumentCount int `pulumi:"documentCount"`
	// Label name
	Label string `pulumi:"label"`
	// Mean average precision under different thresholds
	MeanAveragePrecision float64 `pulumi:"meanAveragePrecision"`
}

// GetModelsModelCollectionItemMetricLabelMetricsReportInput is an input type that accepts GetModelsModelCollectionItemMetricLabelMetricsReportArgs and GetModelsModelCollectionItemMetricLabelMetricsReportOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemMetricLabelMetricsReportInput` via:
//
//	GetModelsModelCollectionItemMetricLabelMetricsReportArgs{...}
type GetModelsModelCollectionItemMetricLabelMetricsReportInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemMetricLabelMetricsReportOutput() GetModelsModelCollectionItemMetricLabelMetricsReportOutput
	ToGetModelsModelCollectionItemMetricLabelMetricsReportOutputWithContext(context.Context) GetModelsModelCollectionItemMetricLabelMetricsReportOutput
}

type GetModelsModelCollectionItemMetricLabelMetricsReportArgs struct {
	// List of document classification confidence report.
	ConfidenceEntries GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryArrayInput `pulumi:"confidenceEntries"`
	// Total test documents in the label.
	DocumentCount pulumi.IntInput `pulumi:"documentCount"`
	// Label name
	Label pulumi.StringInput `pulumi:"label"`
	// Mean average precision under different thresholds
	MeanAveragePrecision pulumi.Float64Input `pulumi:"meanAveragePrecision"`
}

func (GetModelsModelCollectionItemMetricLabelMetricsReportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItemMetricLabelMetricsReport)(nil)).Elem()
}

func (i GetModelsModelCollectionItemMetricLabelMetricsReportArgs) ToGetModelsModelCollectionItemMetricLabelMetricsReportOutput() GetModelsModelCollectionItemMetricLabelMetricsReportOutput {
	return i.ToGetModelsModelCollectionItemMetricLabelMetricsReportOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemMetricLabelMetricsReportArgs) ToGetModelsModelCollectionItemMetricLabelMetricsReportOutputWithContext(ctx context.Context) GetModelsModelCollectionItemMetricLabelMetricsReportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemMetricLabelMetricsReportOutput)
}

// GetModelsModelCollectionItemMetricLabelMetricsReportArrayInput is an input type that accepts GetModelsModelCollectionItemMetricLabelMetricsReportArray and GetModelsModelCollectionItemMetricLabelMetricsReportArrayOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemMetricLabelMetricsReportArrayInput` via:
//
//	GetModelsModelCollectionItemMetricLabelMetricsReportArray{ GetModelsModelCollectionItemMetricLabelMetricsReportArgs{...} }
type GetModelsModelCollectionItemMetricLabelMetricsReportArrayInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemMetricLabelMetricsReportArrayOutput() GetModelsModelCollectionItemMetricLabelMetricsReportArrayOutput
	ToGetModelsModelCollectionItemMetricLabelMetricsReportArrayOutputWithContext(context.Context) GetModelsModelCollectionItemMetricLabelMetricsReportArrayOutput
}

type GetModelsModelCollectionItemMetricLabelMetricsReportArray []GetModelsModelCollectionItemMetricLabelMetricsReportInput

func (GetModelsModelCollectionItemMetricLabelMetricsReportArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItemMetricLabelMetricsReport)(nil)).Elem()
}

func (i GetModelsModelCollectionItemMetricLabelMetricsReportArray) ToGetModelsModelCollectionItemMetricLabelMetricsReportArrayOutput() GetModelsModelCollectionItemMetricLabelMetricsReportArrayOutput {
	return i.ToGetModelsModelCollectionItemMetricLabelMetricsReportArrayOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemMetricLabelMetricsReportArray) ToGetModelsModelCollectionItemMetricLabelMetricsReportArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemMetricLabelMetricsReportArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemMetricLabelMetricsReportArrayOutput)
}

type GetModelsModelCollectionItemMetricLabelMetricsReportOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemMetricLabelMetricsReportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItemMetricLabelMetricsReport)(nil)).Elem()
}

func (o GetModelsModelCollectionItemMetricLabelMetricsReportOutput) ToGetModelsModelCollectionItemMetricLabelMetricsReportOutput() GetModelsModelCollectionItemMetricLabelMetricsReportOutput {
	return o
}

func (o GetModelsModelCollectionItemMetricLabelMetricsReportOutput) ToGetModelsModelCollectionItemMetricLabelMetricsReportOutputWithContext(ctx context.Context) GetModelsModelCollectionItemMetricLabelMetricsReportOutput {
	return o
}

// List of document classification confidence report.
func (o GetModelsModelCollectionItemMetricLabelMetricsReportOutput) ConfidenceEntries() GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryArrayOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemMetricLabelMetricsReport) []GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntry {
		return v.ConfidenceEntries
	}).(GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryArrayOutput)
}

// Total test documents in the label.
func (o GetModelsModelCollectionItemMetricLabelMetricsReportOutput) DocumentCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemMetricLabelMetricsReport) int { return v.DocumentCount }).(pulumi.IntOutput)
}

// Label name
func (o GetModelsModelCollectionItemMetricLabelMetricsReportOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemMetricLabelMetricsReport) string { return v.Label }).(pulumi.StringOutput)
}

// Mean average precision under different thresholds
func (o GetModelsModelCollectionItemMetricLabelMetricsReportOutput) MeanAveragePrecision() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelsModelCollectionItemMetricLabelMetricsReport) float64 { return v.MeanAveragePrecision }).(pulumi.Float64Output)
}

type GetModelsModelCollectionItemMetricLabelMetricsReportArrayOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemMetricLabelMetricsReportArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItemMetricLabelMetricsReport)(nil)).Elem()
}

func (o GetModelsModelCollectionItemMetricLabelMetricsReportArrayOutput) ToGetModelsModelCollectionItemMetricLabelMetricsReportArrayOutput() GetModelsModelCollectionItemMetricLabelMetricsReportArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemMetricLabelMetricsReportArrayOutput) ToGetModelsModelCollectionItemMetricLabelMetricsReportArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemMetricLabelMetricsReportArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemMetricLabelMetricsReportArrayOutput) Index(i pulumi.IntInput) GetModelsModelCollectionItemMetricLabelMetricsReportOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelsModelCollectionItemMetricLabelMetricsReport {
		return vs[0].([]GetModelsModelCollectionItemMetricLabelMetricsReport)[vs[1].(int)]
	}).(GetModelsModelCollectionItemMetricLabelMetricsReportOutput)
}

type GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntry struct {
	// accuracy under the threshold
	Accuracy float64 `pulumi:"accuracy"`
	// f1Score under the threshold
	F1score float64 `pulumi:"f1score"`
	// Precision under the threshold
	Precision float64 `pulumi:"precision"`
	// Recall under the threshold
	Recall float64 `pulumi:"recall"`
	// Threshold used to calculate precision and recall.
	Threshold float64 `pulumi:"threshold"`
}

// GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryInput is an input type that accepts GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryArgs and GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryInput` via:
//
//	GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryArgs{...}
type GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryOutput() GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryOutput
	ToGetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryOutputWithContext(context.Context) GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryOutput
}

type GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryArgs struct {
	// accuracy under the threshold
	Accuracy pulumi.Float64Input `pulumi:"accuracy"`
	// f1Score under the threshold
	F1score pulumi.Float64Input `pulumi:"f1score"`
	// Precision under the threshold
	Precision pulumi.Float64Input `pulumi:"precision"`
	// Recall under the threshold
	Recall pulumi.Float64Input `pulumi:"recall"`
	// Threshold used to calculate precision and recall.
	Threshold pulumi.Float64Input `pulumi:"threshold"`
}

func (GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntry)(nil)).Elem()
}

func (i GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryArgs) ToGetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryOutput() GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryOutput {
	return i.ToGetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryArgs) ToGetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryOutputWithContext(ctx context.Context) GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryOutput)
}

// GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryArrayInput is an input type that accepts GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryArray and GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryArrayOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryArrayInput` via:
//
//	GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryArray{ GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryArgs{...} }
type GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryArrayInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryArrayOutput() GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryArrayOutput
	ToGetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryArrayOutputWithContext(context.Context) GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryArrayOutput
}

type GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryArray []GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryInput

func (GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntry)(nil)).Elem()
}

func (i GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryArray) ToGetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryArrayOutput() GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryArrayOutput {
	return i.ToGetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryArrayOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryArray) ToGetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryArrayOutput)
}

type GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntry)(nil)).Elem()
}

func (o GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryOutput) ToGetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryOutput() GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryOutput {
	return o
}

func (o GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryOutput) ToGetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryOutputWithContext(ctx context.Context) GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryOutput {
	return o
}

// accuracy under the threshold
func (o GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryOutput) Accuracy() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntry) float64 { return v.Accuracy }).(pulumi.Float64Output)
}

// f1Score under the threshold
func (o GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryOutput) F1score() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntry) float64 { return v.F1score }).(pulumi.Float64Output)
}

// Precision under the threshold
func (o GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryOutput) Precision() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntry) float64 {
		return v.Precision
	}).(pulumi.Float64Output)
}

// Recall under the threshold
func (o GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryOutput) Recall() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntry) float64 { return v.Recall }).(pulumi.Float64Output)
}

// Threshold used to calculate precision and recall.
func (o GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryOutput) Threshold() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntry) float64 {
		return v.Threshold
	}).(pulumi.Float64Output)
}

type GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryArrayOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntry)(nil)).Elem()
}

func (o GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryArrayOutput) ToGetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryArrayOutput() GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryArrayOutput) ToGetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryArrayOutput) Index(i pulumi.IntInput) GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntry {
		return vs[0].([]GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntry)[vs[1].(int)]
	}).(GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryOutput)
}

type GetModelsModelCollectionItemMetricOverallMetricsReport struct {
	// List of document classification confidence report.
	ConfidenceEntries []GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntry `pulumi:"confidenceEntries"`
	// Total test documents in the label.
	DocumentCount int `pulumi:"documentCount"`
	// Mean average precision under different thresholds
	MeanAveragePrecision float64 `pulumi:"meanAveragePrecision"`
}

// GetModelsModelCollectionItemMetricOverallMetricsReportInput is an input type that accepts GetModelsModelCollectionItemMetricOverallMetricsReportArgs and GetModelsModelCollectionItemMetricOverallMetricsReportOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemMetricOverallMetricsReportInput` via:
//
//	GetModelsModelCollectionItemMetricOverallMetricsReportArgs{...}
type GetModelsModelCollectionItemMetricOverallMetricsReportInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemMetricOverallMetricsReportOutput() GetModelsModelCollectionItemMetricOverallMetricsReportOutput
	ToGetModelsModelCollectionItemMetricOverallMetricsReportOutputWithContext(context.Context) GetModelsModelCollectionItemMetricOverallMetricsReportOutput
}

type GetModelsModelCollectionItemMetricOverallMetricsReportArgs struct {
	// List of document classification confidence report.
	ConfidenceEntries GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryArrayInput `pulumi:"confidenceEntries"`
	// Total test documents in the label.
	DocumentCount pulumi.IntInput `pulumi:"documentCount"`
	// Mean average precision under different thresholds
	MeanAveragePrecision pulumi.Float64Input `pulumi:"meanAveragePrecision"`
}

func (GetModelsModelCollectionItemMetricOverallMetricsReportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItemMetricOverallMetricsReport)(nil)).Elem()
}

func (i GetModelsModelCollectionItemMetricOverallMetricsReportArgs) ToGetModelsModelCollectionItemMetricOverallMetricsReportOutput() GetModelsModelCollectionItemMetricOverallMetricsReportOutput {
	return i.ToGetModelsModelCollectionItemMetricOverallMetricsReportOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemMetricOverallMetricsReportArgs) ToGetModelsModelCollectionItemMetricOverallMetricsReportOutputWithContext(ctx context.Context) GetModelsModelCollectionItemMetricOverallMetricsReportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemMetricOverallMetricsReportOutput)
}

// GetModelsModelCollectionItemMetricOverallMetricsReportArrayInput is an input type that accepts GetModelsModelCollectionItemMetricOverallMetricsReportArray and GetModelsModelCollectionItemMetricOverallMetricsReportArrayOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemMetricOverallMetricsReportArrayInput` via:
//
//	GetModelsModelCollectionItemMetricOverallMetricsReportArray{ GetModelsModelCollectionItemMetricOverallMetricsReportArgs{...} }
type GetModelsModelCollectionItemMetricOverallMetricsReportArrayInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemMetricOverallMetricsReportArrayOutput() GetModelsModelCollectionItemMetricOverallMetricsReportArrayOutput
	ToGetModelsModelCollectionItemMetricOverallMetricsReportArrayOutputWithContext(context.Context) GetModelsModelCollectionItemMetricOverallMetricsReportArrayOutput
}

type GetModelsModelCollectionItemMetricOverallMetricsReportArray []GetModelsModelCollectionItemMetricOverallMetricsReportInput

func (GetModelsModelCollectionItemMetricOverallMetricsReportArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItemMetricOverallMetricsReport)(nil)).Elem()
}

func (i GetModelsModelCollectionItemMetricOverallMetricsReportArray) ToGetModelsModelCollectionItemMetricOverallMetricsReportArrayOutput() GetModelsModelCollectionItemMetricOverallMetricsReportArrayOutput {
	return i.ToGetModelsModelCollectionItemMetricOverallMetricsReportArrayOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemMetricOverallMetricsReportArray) ToGetModelsModelCollectionItemMetricOverallMetricsReportArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemMetricOverallMetricsReportArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemMetricOverallMetricsReportArrayOutput)
}

type GetModelsModelCollectionItemMetricOverallMetricsReportOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemMetricOverallMetricsReportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItemMetricOverallMetricsReport)(nil)).Elem()
}

func (o GetModelsModelCollectionItemMetricOverallMetricsReportOutput) ToGetModelsModelCollectionItemMetricOverallMetricsReportOutput() GetModelsModelCollectionItemMetricOverallMetricsReportOutput {
	return o
}

func (o GetModelsModelCollectionItemMetricOverallMetricsReportOutput) ToGetModelsModelCollectionItemMetricOverallMetricsReportOutputWithContext(ctx context.Context) GetModelsModelCollectionItemMetricOverallMetricsReportOutput {
	return o
}

// List of document classification confidence report.
func (o GetModelsModelCollectionItemMetricOverallMetricsReportOutput) ConfidenceEntries() GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryArrayOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemMetricOverallMetricsReport) []GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntry {
		return v.ConfidenceEntries
	}).(GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryArrayOutput)
}

// Total test documents in the label.
func (o GetModelsModelCollectionItemMetricOverallMetricsReportOutput) DocumentCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemMetricOverallMetricsReport) int { return v.DocumentCount }).(pulumi.IntOutput)
}

// Mean average precision under different thresholds
func (o GetModelsModelCollectionItemMetricOverallMetricsReportOutput) MeanAveragePrecision() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelsModelCollectionItemMetricOverallMetricsReport) float64 { return v.MeanAveragePrecision }).(pulumi.Float64Output)
}

type GetModelsModelCollectionItemMetricOverallMetricsReportArrayOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemMetricOverallMetricsReportArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItemMetricOverallMetricsReport)(nil)).Elem()
}

func (o GetModelsModelCollectionItemMetricOverallMetricsReportArrayOutput) ToGetModelsModelCollectionItemMetricOverallMetricsReportArrayOutput() GetModelsModelCollectionItemMetricOverallMetricsReportArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemMetricOverallMetricsReportArrayOutput) ToGetModelsModelCollectionItemMetricOverallMetricsReportArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemMetricOverallMetricsReportArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemMetricOverallMetricsReportArrayOutput) Index(i pulumi.IntInput) GetModelsModelCollectionItemMetricOverallMetricsReportOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelsModelCollectionItemMetricOverallMetricsReport {
		return vs[0].([]GetModelsModelCollectionItemMetricOverallMetricsReport)[vs[1].(int)]
	}).(GetModelsModelCollectionItemMetricOverallMetricsReportOutput)
}

type GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntry struct {
	// accuracy under the threshold
	Accuracy float64 `pulumi:"accuracy"`
	// f1Score under the threshold
	F1score float64 `pulumi:"f1score"`
	// Precision under the threshold
	Precision float64 `pulumi:"precision"`
	// Recall under the threshold
	Recall float64 `pulumi:"recall"`
	// Threshold used to calculate precision and recall.
	Threshold float64 `pulumi:"threshold"`
}

// GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryInput is an input type that accepts GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryArgs and GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryInput` via:
//
//	GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryArgs{...}
type GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryOutput() GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryOutput
	ToGetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryOutputWithContext(context.Context) GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryOutput
}

type GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryArgs struct {
	// accuracy under the threshold
	Accuracy pulumi.Float64Input `pulumi:"accuracy"`
	// f1Score under the threshold
	F1score pulumi.Float64Input `pulumi:"f1score"`
	// Precision under the threshold
	Precision pulumi.Float64Input `pulumi:"precision"`
	// Recall under the threshold
	Recall pulumi.Float64Input `pulumi:"recall"`
	// Threshold used to calculate precision and recall.
	Threshold pulumi.Float64Input `pulumi:"threshold"`
}

func (GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntry)(nil)).Elem()
}

func (i GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryArgs) ToGetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryOutput() GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryOutput {
	return i.ToGetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryArgs) ToGetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryOutputWithContext(ctx context.Context) GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryOutput)
}

// GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryArrayInput is an input type that accepts GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryArray and GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryArrayOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryArrayInput` via:
//
//	GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryArray{ GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryArgs{...} }
type GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryArrayInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryArrayOutput() GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryArrayOutput
	ToGetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryArrayOutputWithContext(context.Context) GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryArrayOutput
}

type GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryArray []GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryInput

func (GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntry)(nil)).Elem()
}

func (i GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryArray) ToGetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryArrayOutput() GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryArrayOutput {
	return i.ToGetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryArrayOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryArray) ToGetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryArrayOutput)
}

type GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntry)(nil)).Elem()
}

func (o GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryOutput) ToGetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryOutput() GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryOutput {
	return o
}

func (o GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryOutput) ToGetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryOutputWithContext(ctx context.Context) GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryOutput {
	return o
}

// accuracy under the threshold
func (o GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryOutput) Accuracy() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntry) float64 {
		return v.Accuracy
	}).(pulumi.Float64Output)
}

// f1Score under the threshold
func (o GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryOutput) F1score() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntry) float64 {
		return v.F1score
	}).(pulumi.Float64Output)
}

// Precision under the threshold
func (o GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryOutput) Precision() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntry) float64 {
		return v.Precision
	}).(pulumi.Float64Output)
}

// Recall under the threshold
func (o GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryOutput) Recall() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntry) float64 { return v.Recall }).(pulumi.Float64Output)
}

// Threshold used to calculate precision and recall.
func (o GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryOutput) Threshold() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntry) float64 {
		return v.Threshold
	}).(pulumi.Float64Output)
}

type GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryArrayOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntry)(nil)).Elem()
}

func (o GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryArrayOutput) ToGetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryArrayOutput() GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryArrayOutput) ToGetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryArrayOutput) Index(i pulumi.IntInput) GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntry {
		return vs[0].([]GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntry)[vs[1].(int)]
	}).(GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryOutput)
}

type GetModelsModelCollectionItemTestingDataset struct {
	// The name of the Object Storage bucket that contains the input data file.
	Bucket string `pulumi:"bucket"`
	// OCID of the Data Labeling dataset.
	DatasetId string `pulumi:"datasetId"`
	// The dataset type, based on where it is stored.
	DatasetType string `pulumi:"datasetType"`
	// The namespace name of the Object Storage bucket that contains the input data file.
	Namespace string `pulumi:"namespace"`
	// The object name of the input data file.
	Object string `pulumi:"object"`
}

// GetModelsModelCollectionItemTestingDatasetInput is an input type that accepts GetModelsModelCollectionItemTestingDatasetArgs and GetModelsModelCollectionItemTestingDatasetOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemTestingDatasetInput` via:
//
//	GetModelsModelCollectionItemTestingDatasetArgs{...}
type GetModelsModelCollectionItemTestingDatasetInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemTestingDatasetOutput() GetModelsModelCollectionItemTestingDatasetOutput
	ToGetModelsModelCollectionItemTestingDatasetOutputWithContext(context.Context) GetModelsModelCollectionItemTestingDatasetOutput
}

type GetModelsModelCollectionItemTestingDatasetArgs struct {
	// The name of the Object Storage bucket that contains the input data file.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// OCID of the Data Labeling dataset.
	DatasetId pulumi.StringInput `pulumi:"datasetId"`
	// The dataset type, based on where it is stored.
	DatasetType pulumi.StringInput `pulumi:"datasetType"`
	// The namespace name of the Object Storage bucket that contains the input data file.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// The object name of the input data file.
	Object pulumi.StringInput `pulumi:"object"`
}

func (GetModelsModelCollectionItemTestingDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItemTestingDataset)(nil)).Elem()
}

func (i GetModelsModelCollectionItemTestingDatasetArgs) ToGetModelsModelCollectionItemTestingDatasetOutput() GetModelsModelCollectionItemTestingDatasetOutput {
	return i.ToGetModelsModelCollectionItemTestingDatasetOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemTestingDatasetArgs) ToGetModelsModelCollectionItemTestingDatasetOutputWithContext(ctx context.Context) GetModelsModelCollectionItemTestingDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemTestingDatasetOutput)
}

// GetModelsModelCollectionItemTestingDatasetArrayInput is an input type that accepts GetModelsModelCollectionItemTestingDatasetArray and GetModelsModelCollectionItemTestingDatasetArrayOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemTestingDatasetArrayInput` via:
//
//	GetModelsModelCollectionItemTestingDatasetArray{ GetModelsModelCollectionItemTestingDatasetArgs{...} }
type GetModelsModelCollectionItemTestingDatasetArrayInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemTestingDatasetArrayOutput() GetModelsModelCollectionItemTestingDatasetArrayOutput
	ToGetModelsModelCollectionItemTestingDatasetArrayOutputWithContext(context.Context) GetModelsModelCollectionItemTestingDatasetArrayOutput
}

type GetModelsModelCollectionItemTestingDatasetArray []GetModelsModelCollectionItemTestingDatasetInput

func (GetModelsModelCollectionItemTestingDatasetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItemTestingDataset)(nil)).Elem()
}

func (i GetModelsModelCollectionItemTestingDatasetArray) ToGetModelsModelCollectionItemTestingDatasetArrayOutput() GetModelsModelCollectionItemTestingDatasetArrayOutput {
	return i.ToGetModelsModelCollectionItemTestingDatasetArrayOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemTestingDatasetArray) ToGetModelsModelCollectionItemTestingDatasetArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemTestingDatasetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemTestingDatasetArrayOutput)
}

type GetModelsModelCollectionItemTestingDatasetOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemTestingDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItemTestingDataset)(nil)).Elem()
}

func (o GetModelsModelCollectionItemTestingDatasetOutput) ToGetModelsModelCollectionItemTestingDatasetOutput() GetModelsModelCollectionItemTestingDatasetOutput {
	return o
}

func (o GetModelsModelCollectionItemTestingDatasetOutput) ToGetModelsModelCollectionItemTestingDatasetOutputWithContext(ctx context.Context) GetModelsModelCollectionItemTestingDatasetOutput {
	return o
}

// The name of the Object Storage bucket that contains the input data file.
func (o GetModelsModelCollectionItemTestingDatasetOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemTestingDataset) string { return v.Bucket }).(pulumi.StringOutput)
}

// OCID of the Data Labeling dataset.
func (o GetModelsModelCollectionItemTestingDatasetOutput) DatasetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemTestingDataset) string { return v.DatasetId }).(pulumi.StringOutput)
}

// The dataset type, based on where it is stored.
func (o GetModelsModelCollectionItemTestingDatasetOutput) DatasetType() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemTestingDataset) string { return v.DatasetType }).(pulumi.StringOutput)
}

// The namespace name of the Object Storage bucket that contains the input data file.
func (o GetModelsModelCollectionItemTestingDatasetOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemTestingDataset) string { return v.Namespace }).(pulumi.StringOutput)
}

// The object name of the input data file.
func (o GetModelsModelCollectionItemTestingDatasetOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemTestingDataset) string { return v.Object }).(pulumi.StringOutput)
}

type GetModelsModelCollectionItemTestingDatasetArrayOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemTestingDatasetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItemTestingDataset)(nil)).Elem()
}

func (o GetModelsModelCollectionItemTestingDatasetArrayOutput) ToGetModelsModelCollectionItemTestingDatasetArrayOutput() GetModelsModelCollectionItemTestingDatasetArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemTestingDatasetArrayOutput) ToGetModelsModelCollectionItemTestingDatasetArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemTestingDatasetArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemTestingDatasetArrayOutput) Index(i pulumi.IntInput) GetModelsModelCollectionItemTestingDatasetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelsModelCollectionItemTestingDataset {
		return vs[0].([]GetModelsModelCollectionItemTestingDataset)[vs[1].(int)]
	}).(GetModelsModelCollectionItemTestingDatasetOutput)
}

type GetModelsModelCollectionItemTrainingDataset struct {
	// The name of the Object Storage bucket that contains the input data file.
	Bucket string `pulumi:"bucket"`
	// OCID of the Data Labeling dataset.
	DatasetId string `pulumi:"datasetId"`
	// The dataset type, based on where it is stored.
	DatasetType string `pulumi:"datasetType"`
	// The namespace name of the Object Storage bucket that contains the input data file.
	Namespace string `pulumi:"namespace"`
	// The object name of the input data file.
	Object string `pulumi:"object"`
}

// GetModelsModelCollectionItemTrainingDatasetInput is an input type that accepts GetModelsModelCollectionItemTrainingDatasetArgs and GetModelsModelCollectionItemTrainingDatasetOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemTrainingDatasetInput` via:
//
//	GetModelsModelCollectionItemTrainingDatasetArgs{...}
type GetModelsModelCollectionItemTrainingDatasetInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemTrainingDatasetOutput() GetModelsModelCollectionItemTrainingDatasetOutput
	ToGetModelsModelCollectionItemTrainingDatasetOutputWithContext(context.Context) GetModelsModelCollectionItemTrainingDatasetOutput
}

type GetModelsModelCollectionItemTrainingDatasetArgs struct {
	// The name of the Object Storage bucket that contains the input data file.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// OCID of the Data Labeling dataset.
	DatasetId pulumi.StringInput `pulumi:"datasetId"`
	// The dataset type, based on where it is stored.
	DatasetType pulumi.StringInput `pulumi:"datasetType"`
	// The namespace name of the Object Storage bucket that contains the input data file.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// The object name of the input data file.
	Object pulumi.StringInput `pulumi:"object"`
}

func (GetModelsModelCollectionItemTrainingDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItemTrainingDataset)(nil)).Elem()
}

func (i GetModelsModelCollectionItemTrainingDatasetArgs) ToGetModelsModelCollectionItemTrainingDatasetOutput() GetModelsModelCollectionItemTrainingDatasetOutput {
	return i.ToGetModelsModelCollectionItemTrainingDatasetOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemTrainingDatasetArgs) ToGetModelsModelCollectionItemTrainingDatasetOutputWithContext(ctx context.Context) GetModelsModelCollectionItemTrainingDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemTrainingDatasetOutput)
}

// GetModelsModelCollectionItemTrainingDatasetArrayInput is an input type that accepts GetModelsModelCollectionItemTrainingDatasetArray and GetModelsModelCollectionItemTrainingDatasetArrayOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemTrainingDatasetArrayInput` via:
//
//	GetModelsModelCollectionItemTrainingDatasetArray{ GetModelsModelCollectionItemTrainingDatasetArgs{...} }
type GetModelsModelCollectionItemTrainingDatasetArrayInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemTrainingDatasetArrayOutput() GetModelsModelCollectionItemTrainingDatasetArrayOutput
	ToGetModelsModelCollectionItemTrainingDatasetArrayOutputWithContext(context.Context) GetModelsModelCollectionItemTrainingDatasetArrayOutput
}

type GetModelsModelCollectionItemTrainingDatasetArray []GetModelsModelCollectionItemTrainingDatasetInput

func (GetModelsModelCollectionItemTrainingDatasetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItemTrainingDataset)(nil)).Elem()
}

func (i GetModelsModelCollectionItemTrainingDatasetArray) ToGetModelsModelCollectionItemTrainingDatasetArrayOutput() GetModelsModelCollectionItemTrainingDatasetArrayOutput {
	return i.ToGetModelsModelCollectionItemTrainingDatasetArrayOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemTrainingDatasetArray) ToGetModelsModelCollectionItemTrainingDatasetArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemTrainingDatasetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemTrainingDatasetArrayOutput)
}

type GetModelsModelCollectionItemTrainingDatasetOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemTrainingDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItemTrainingDataset)(nil)).Elem()
}

func (o GetModelsModelCollectionItemTrainingDatasetOutput) ToGetModelsModelCollectionItemTrainingDatasetOutput() GetModelsModelCollectionItemTrainingDatasetOutput {
	return o
}

func (o GetModelsModelCollectionItemTrainingDatasetOutput) ToGetModelsModelCollectionItemTrainingDatasetOutputWithContext(ctx context.Context) GetModelsModelCollectionItemTrainingDatasetOutput {
	return o
}

// The name of the Object Storage bucket that contains the input data file.
func (o GetModelsModelCollectionItemTrainingDatasetOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemTrainingDataset) string { return v.Bucket }).(pulumi.StringOutput)
}

// OCID of the Data Labeling dataset.
func (o GetModelsModelCollectionItemTrainingDatasetOutput) DatasetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemTrainingDataset) string { return v.DatasetId }).(pulumi.StringOutput)
}

// The dataset type, based on where it is stored.
func (o GetModelsModelCollectionItemTrainingDatasetOutput) DatasetType() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemTrainingDataset) string { return v.DatasetType }).(pulumi.StringOutput)
}

// The namespace name of the Object Storage bucket that contains the input data file.
func (o GetModelsModelCollectionItemTrainingDatasetOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemTrainingDataset) string { return v.Namespace }).(pulumi.StringOutput)
}

// The object name of the input data file.
func (o GetModelsModelCollectionItemTrainingDatasetOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemTrainingDataset) string { return v.Object }).(pulumi.StringOutput)
}

type GetModelsModelCollectionItemTrainingDatasetArrayOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemTrainingDatasetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItemTrainingDataset)(nil)).Elem()
}

func (o GetModelsModelCollectionItemTrainingDatasetArrayOutput) ToGetModelsModelCollectionItemTrainingDatasetArrayOutput() GetModelsModelCollectionItemTrainingDatasetArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemTrainingDatasetArrayOutput) ToGetModelsModelCollectionItemTrainingDatasetArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemTrainingDatasetArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemTrainingDatasetArrayOutput) Index(i pulumi.IntInput) GetModelsModelCollectionItemTrainingDatasetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelsModelCollectionItemTrainingDataset {
		return vs[0].([]GetModelsModelCollectionItemTrainingDataset)[vs[1].(int)]
	}).(GetModelsModelCollectionItemTrainingDatasetOutput)
}

type GetModelsModelCollectionItemValidationDataset struct {
	// The name of the Object Storage bucket that contains the input data file.
	Bucket string `pulumi:"bucket"`
	// OCID of the Data Labeling dataset.
	DatasetId string `pulumi:"datasetId"`
	// The dataset type, based on where it is stored.
	DatasetType string `pulumi:"datasetType"`
	// The namespace name of the Object Storage bucket that contains the input data file.
	Namespace string `pulumi:"namespace"`
	// The object name of the input data file.
	Object string `pulumi:"object"`
}

// GetModelsModelCollectionItemValidationDatasetInput is an input type that accepts GetModelsModelCollectionItemValidationDatasetArgs and GetModelsModelCollectionItemValidationDatasetOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemValidationDatasetInput` via:
//
//	GetModelsModelCollectionItemValidationDatasetArgs{...}
type GetModelsModelCollectionItemValidationDatasetInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemValidationDatasetOutput() GetModelsModelCollectionItemValidationDatasetOutput
	ToGetModelsModelCollectionItemValidationDatasetOutputWithContext(context.Context) GetModelsModelCollectionItemValidationDatasetOutput
}

type GetModelsModelCollectionItemValidationDatasetArgs struct {
	// The name of the Object Storage bucket that contains the input data file.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// OCID of the Data Labeling dataset.
	DatasetId pulumi.StringInput `pulumi:"datasetId"`
	// The dataset type, based on where it is stored.
	DatasetType pulumi.StringInput `pulumi:"datasetType"`
	// The namespace name of the Object Storage bucket that contains the input data file.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// The object name of the input data file.
	Object pulumi.StringInput `pulumi:"object"`
}

func (GetModelsModelCollectionItemValidationDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItemValidationDataset)(nil)).Elem()
}

func (i GetModelsModelCollectionItemValidationDatasetArgs) ToGetModelsModelCollectionItemValidationDatasetOutput() GetModelsModelCollectionItemValidationDatasetOutput {
	return i.ToGetModelsModelCollectionItemValidationDatasetOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemValidationDatasetArgs) ToGetModelsModelCollectionItemValidationDatasetOutputWithContext(ctx context.Context) GetModelsModelCollectionItemValidationDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemValidationDatasetOutput)
}

// GetModelsModelCollectionItemValidationDatasetArrayInput is an input type that accepts GetModelsModelCollectionItemValidationDatasetArray and GetModelsModelCollectionItemValidationDatasetArrayOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemValidationDatasetArrayInput` via:
//
//	GetModelsModelCollectionItemValidationDatasetArray{ GetModelsModelCollectionItemValidationDatasetArgs{...} }
type GetModelsModelCollectionItemValidationDatasetArrayInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemValidationDatasetArrayOutput() GetModelsModelCollectionItemValidationDatasetArrayOutput
	ToGetModelsModelCollectionItemValidationDatasetArrayOutputWithContext(context.Context) GetModelsModelCollectionItemValidationDatasetArrayOutput
}

type GetModelsModelCollectionItemValidationDatasetArray []GetModelsModelCollectionItemValidationDatasetInput

func (GetModelsModelCollectionItemValidationDatasetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItemValidationDataset)(nil)).Elem()
}

func (i GetModelsModelCollectionItemValidationDatasetArray) ToGetModelsModelCollectionItemValidationDatasetArrayOutput() GetModelsModelCollectionItemValidationDatasetArrayOutput {
	return i.ToGetModelsModelCollectionItemValidationDatasetArrayOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemValidationDatasetArray) ToGetModelsModelCollectionItemValidationDatasetArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemValidationDatasetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemValidationDatasetArrayOutput)
}

type GetModelsModelCollectionItemValidationDatasetOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemValidationDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItemValidationDataset)(nil)).Elem()
}

func (o GetModelsModelCollectionItemValidationDatasetOutput) ToGetModelsModelCollectionItemValidationDatasetOutput() GetModelsModelCollectionItemValidationDatasetOutput {
	return o
}

func (o GetModelsModelCollectionItemValidationDatasetOutput) ToGetModelsModelCollectionItemValidationDatasetOutputWithContext(ctx context.Context) GetModelsModelCollectionItemValidationDatasetOutput {
	return o
}

// The name of the Object Storage bucket that contains the input data file.
func (o GetModelsModelCollectionItemValidationDatasetOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemValidationDataset) string { return v.Bucket }).(pulumi.StringOutput)
}

// OCID of the Data Labeling dataset.
func (o GetModelsModelCollectionItemValidationDatasetOutput) DatasetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemValidationDataset) string { return v.DatasetId }).(pulumi.StringOutput)
}

// The dataset type, based on where it is stored.
func (o GetModelsModelCollectionItemValidationDatasetOutput) DatasetType() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemValidationDataset) string { return v.DatasetType }).(pulumi.StringOutput)
}

// The namespace name of the Object Storage bucket that contains the input data file.
func (o GetModelsModelCollectionItemValidationDatasetOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemValidationDataset) string { return v.Namespace }).(pulumi.StringOutput)
}

// The object name of the input data file.
func (o GetModelsModelCollectionItemValidationDatasetOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemValidationDataset) string { return v.Object }).(pulumi.StringOutput)
}

type GetModelsModelCollectionItemValidationDatasetArrayOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemValidationDatasetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItemValidationDataset)(nil)).Elem()
}

func (o GetModelsModelCollectionItemValidationDatasetArrayOutput) ToGetModelsModelCollectionItemValidationDatasetArrayOutput() GetModelsModelCollectionItemValidationDatasetArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemValidationDatasetArrayOutput) ToGetModelsModelCollectionItemValidationDatasetArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemValidationDatasetArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemValidationDatasetArrayOutput) Index(i pulumi.IntInput) GetModelsModelCollectionItemValidationDatasetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelsModelCollectionItemValidationDataset {
		return vs[0].([]GetModelsModelCollectionItemValidationDataset)[vs[1].(int)]
	}).(GetModelsModelCollectionItemValidationDatasetOutput)
}

type GetProcessorJobInputLocation struct {
	// Raw document data with Base64 encoding.
	Data string `pulumi:"data"`
	// The list of ObjectLocations.
	ObjectLocations []GetProcessorJobInputLocationObjectLocation `pulumi:"objectLocations"`
	// The type of input location. The allowed values are:
	// * `OBJECT_STORAGE_LOCATIONS`: A list of object locations in Object Storage.
	// * `INLINE_DOCUMENT_CONTENT`: The content of an inline document.
	SourceType string `pulumi:"sourceType"`
}

// GetProcessorJobInputLocationInput is an input type that accepts GetProcessorJobInputLocationArgs and GetProcessorJobInputLocationOutput values.
// You can construct a concrete instance of `GetProcessorJobInputLocationInput` via:
//
//	GetProcessorJobInputLocationArgs{...}
type GetProcessorJobInputLocationInput interface {
	pulumi.Input

	ToGetProcessorJobInputLocationOutput() GetProcessorJobInputLocationOutput
	ToGetProcessorJobInputLocationOutputWithContext(context.Context) GetProcessorJobInputLocationOutput
}

type GetProcessorJobInputLocationArgs struct {
	// Raw document data with Base64 encoding.
	Data pulumi.StringInput `pulumi:"data"`
	// The list of ObjectLocations.
	ObjectLocations GetProcessorJobInputLocationObjectLocationArrayInput `pulumi:"objectLocations"`
	// The type of input location. The allowed values are:
	// * `OBJECT_STORAGE_LOCATIONS`: A list of object locations in Object Storage.
	// * `INLINE_DOCUMENT_CONTENT`: The content of an inline document.
	SourceType pulumi.StringInput `pulumi:"sourceType"`
}

func (GetProcessorJobInputLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProcessorJobInputLocation)(nil)).Elem()
}

func (i GetProcessorJobInputLocationArgs) ToGetProcessorJobInputLocationOutput() GetProcessorJobInputLocationOutput {
	return i.ToGetProcessorJobInputLocationOutputWithContext(context.Background())
}

func (i GetProcessorJobInputLocationArgs) ToGetProcessorJobInputLocationOutputWithContext(ctx context.Context) GetProcessorJobInputLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProcessorJobInputLocationOutput)
}

// GetProcessorJobInputLocationArrayInput is an input type that accepts GetProcessorJobInputLocationArray and GetProcessorJobInputLocationArrayOutput values.
// You can construct a concrete instance of `GetProcessorJobInputLocationArrayInput` via:
//
//	GetProcessorJobInputLocationArray{ GetProcessorJobInputLocationArgs{...} }
type GetProcessorJobInputLocationArrayInput interface {
	pulumi.Input

	ToGetProcessorJobInputLocationArrayOutput() GetProcessorJobInputLocationArrayOutput
	ToGetProcessorJobInputLocationArrayOutputWithContext(context.Context) GetProcessorJobInputLocationArrayOutput
}

type GetProcessorJobInputLocationArray []GetProcessorJobInputLocationInput

func (GetProcessorJobInputLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProcessorJobInputLocation)(nil)).Elem()
}

func (i GetProcessorJobInputLocationArray) ToGetProcessorJobInputLocationArrayOutput() GetProcessorJobInputLocationArrayOutput {
	return i.ToGetProcessorJobInputLocationArrayOutputWithContext(context.Background())
}

func (i GetProcessorJobInputLocationArray) ToGetProcessorJobInputLocationArrayOutputWithContext(ctx context.Context) GetProcessorJobInputLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProcessorJobInputLocationArrayOutput)
}

type GetProcessorJobInputLocationOutput struct{ *pulumi.OutputState }

func (GetProcessorJobInputLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProcessorJobInputLocation)(nil)).Elem()
}

func (o GetProcessorJobInputLocationOutput) ToGetProcessorJobInputLocationOutput() GetProcessorJobInputLocationOutput {
	return o
}

func (o GetProcessorJobInputLocationOutput) ToGetProcessorJobInputLocationOutputWithContext(ctx context.Context) GetProcessorJobInputLocationOutput {
	return o
}

// Raw document data with Base64 encoding.
func (o GetProcessorJobInputLocationOutput) Data() pulumi.StringOutput {
	return o.ApplyT(func(v GetProcessorJobInputLocation) string { return v.Data }).(pulumi.StringOutput)
}

// The list of ObjectLocations.
func (o GetProcessorJobInputLocationOutput) ObjectLocations() GetProcessorJobInputLocationObjectLocationArrayOutput {
	return o.ApplyT(func(v GetProcessorJobInputLocation) []GetProcessorJobInputLocationObjectLocation {
		return v.ObjectLocations
	}).(GetProcessorJobInputLocationObjectLocationArrayOutput)
}

// The type of input location. The allowed values are:
// * `OBJECT_STORAGE_LOCATIONS`: A list of object locations in Object Storage.
// * `INLINE_DOCUMENT_CONTENT`: The content of an inline document.
func (o GetProcessorJobInputLocationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetProcessorJobInputLocation) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetProcessorJobInputLocationArrayOutput struct{ *pulumi.OutputState }

func (GetProcessorJobInputLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProcessorJobInputLocation)(nil)).Elem()
}

func (o GetProcessorJobInputLocationArrayOutput) ToGetProcessorJobInputLocationArrayOutput() GetProcessorJobInputLocationArrayOutput {
	return o
}

func (o GetProcessorJobInputLocationArrayOutput) ToGetProcessorJobInputLocationArrayOutputWithContext(ctx context.Context) GetProcessorJobInputLocationArrayOutput {
	return o
}

func (o GetProcessorJobInputLocationArrayOutput) Index(i pulumi.IntInput) GetProcessorJobInputLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProcessorJobInputLocation {
		return vs[0].([]GetProcessorJobInputLocation)[vs[1].(int)]
	}).(GetProcessorJobInputLocationOutput)
}

type GetProcessorJobInputLocationObjectLocation struct {
	// The Object Storage bucket name.
	Bucket string `pulumi:"bucket"`
	// The Object Storage namespace.
	Namespace string `pulumi:"namespace"`
	// The Object Storage object name.
	Object string `pulumi:"object"`
}

// GetProcessorJobInputLocationObjectLocationInput is an input type that accepts GetProcessorJobInputLocationObjectLocationArgs and GetProcessorJobInputLocationObjectLocationOutput values.
// You can construct a concrete instance of `GetProcessorJobInputLocationObjectLocationInput` via:
//
//	GetProcessorJobInputLocationObjectLocationArgs{...}
type GetProcessorJobInputLocationObjectLocationInput interface {
	pulumi.Input

	ToGetProcessorJobInputLocationObjectLocationOutput() GetProcessorJobInputLocationObjectLocationOutput
	ToGetProcessorJobInputLocationObjectLocationOutputWithContext(context.Context) GetProcessorJobInputLocationObjectLocationOutput
}

type GetProcessorJobInputLocationObjectLocationArgs struct {
	// The Object Storage bucket name.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// The Object Storage namespace.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// The Object Storage object name.
	Object pulumi.StringInput `pulumi:"object"`
}

func (GetProcessorJobInputLocationObjectLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProcessorJobInputLocationObjectLocation)(nil)).Elem()
}

func (i GetProcessorJobInputLocationObjectLocationArgs) ToGetProcessorJobInputLocationObjectLocationOutput() GetProcessorJobInputLocationObjectLocationOutput {
	return i.ToGetProcessorJobInputLocationObjectLocationOutputWithContext(context.Background())
}

func (i GetProcessorJobInputLocationObjectLocationArgs) ToGetProcessorJobInputLocationObjectLocationOutputWithContext(ctx context.Context) GetProcessorJobInputLocationObjectLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProcessorJobInputLocationObjectLocationOutput)
}

// GetProcessorJobInputLocationObjectLocationArrayInput is an input type that accepts GetProcessorJobInputLocationObjectLocationArray and GetProcessorJobInputLocationObjectLocationArrayOutput values.
// You can construct a concrete instance of `GetProcessorJobInputLocationObjectLocationArrayInput` via:
//
//	GetProcessorJobInputLocationObjectLocationArray{ GetProcessorJobInputLocationObjectLocationArgs{...} }
type GetProcessorJobInputLocationObjectLocationArrayInput interface {
	pulumi.Input

	ToGetProcessorJobInputLocationObjectLocationArrayOutput() GetProcessorJobInputLocationObjectLocationArrayOutput
	ToGetProcessorJobInputLocationObjectLocationArrayOutputWithContext(context.Context) GetProcessorJobInputLocationObjectLocationArrayOutput
}

type GetProcessorJobInputLocationObjectLocationArray []GetProcessorJobInputLocationObjectLocationInput

func (GetProcessorJobInputLocationObjectLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProcessorJobInputLocationObjectLocation)(nil)).Elem()
}

func (i GetProcessorJobInputLocationObjectLocationArray) ToGetProcessorJobInputLocationObjectLocationArrayOutput() GetProcessorJobInputLocationObjectLocationArrayOutput {
	return i.ToGetProcessorJobInputLocationObjectLocationArrayOutputWithContext(context.Background())
}

func (i GetProcessorJobInputLocationObjectLocationArray) ToGetProcessorJobInputLocationObjectLocationArrayOutputWithContext(ctx context.Context) GetProcessorJobInputLocationObjectLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProcessorJobInputLocationObjectLocationArrayOutput)
}

type GetProcessorJobInputLocationObjectLocationOutput struct{ *pulumi.OutputState }

func (GetProcessorJobInputLocationObjectLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProcessorJobInputLocationObjectLocation)(nil)).Elem()
}

func (o GetProcessorJobInputLocationObjectLocationOutput) ToGetProcessorJobInputLocationObjectLocationOutput() GetProcessorJobInputLocationObjectLocationOutput {
	return o
}

func (o GetProcessorJobInputLocationObjectLocationOutput) ToGetProcessorJobInputLocationObjectLocationOutputWithContext(ctx context.Context) GetProcessorJobInputLocationObjectLocationOutput {
	return o
}

// The Object Storage bucket name.
func (o GetProcessorJobInputLocationObjectLocationOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetProcessorJobInputLocationObjectLocation) string { return v.Bucket }).(pulumi.StringOutput)
}

// The Object Storage namespace.
func (o GetProcessorJobInputLocationObjectLocationOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetProcessorJobInputLocationObjectLocation) string { return v.Namespace }).(pulumi.StringOutput)
}

// The Object Storage object name.
func (o GetProcessorJobInputLocationObjectLocationOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v GetProcessorJobInputLocationObjectLocation) string { return v.Object }).(pulumi.StringOutput)
}

type GetProcessorJobInputLocationObjectLocationArrayOutput struct{ *pulumi.OutputState }

func (GetProcessorJobInputLocationObjectLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProcessorJobInputLocationObjectLocation)(nil)).Elem()
}

func (o GetProcessorJobInputLocationObjectLocationArrayOutput) ToGetProcessorJobInputLocationObjectLocationArrayOutput() GetProcessorJobInputLocationObjectLocationArrayOutput {
	return o
}

func (o GetProcessorJobInputLocationObjectLocationArrayOutput) ToGetProcessorJobInputLocationObjectLocationArrayOutputWithContext(ctx context.Context) GetProcessorJobInputLocationObjectLocationArrayOutput {
	return o
}

func (o GetProcessorJobInputLocationObjectLocationArrayOutput) Index(i pulumi.IntInput) GetProcessorJobInputLocationObjectLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProcessorJobInputLocationObjectLocation {
		return vs[0].([]GetProcessorJobInputLocationObjectLocation)[vs[1].(int)]
	}).(GetProcessorJobInputLocationObjectLocationOutput)
}

type GetProcessorJobOutputLocation struct {
	// The Object Storage bucket name.
	Bucket string `pulumi:"bucket"`
	// The Object Storage namespace.
	Namespace string `pulumi:"namespace"`
	// The Object Storage folder name.
	Prefix string `pulumi:"prefix"`
}

// GetProcessorJobOutputLocationInput is an input type that accepts GetProcessorJobOutputLocationArgs and GetProcessorJobOutputLocationOutput values.
// You can construct a concrete instance of `GetProcessorJobOutputLocationInput` via:
//
//	GetProcessorJobOutputLocationArgs{...}
type GetProcessorJobOutputLocationInput interface {
	pulumi.Input

	ToGetProcessorJobOutputLocationOutput() GetProcessorJobOutputLocationOutput
	ToGetProcessorJobOutputLocationOutputWithContext(context.Context) GetProcessorJobOutputLocationOutput
}

type GetProcessorJobOutputLocationArgs struct {
	// The Object Storage bucket name.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// The Object Storage namespace.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// The Object Storage folder name.
	Prefix pulumi.StringInput `pulumi:"prefix"`
}

func (GetProcessorJobOutputLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProcessorJobOutputLocation)(nil)).Elem()
}

func (i GetProcessorJobOutputLocationArgs) ToGetProcessorJobOutputLocationOutput() GetProcessorJobOutputLocationOutput {
	return i.ToGetProcessorJobOutputLocationOutputWithContext(context.Background())
}

func (i GetProcessorJobOutputLocationArgs) ToGetProcessorJobOutputLocationOutputWithContext(ctx context.Context) GetProcessorJobOutputLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProcessorJobOutputLocationOutput)
}

// GetProcessorJobOutputLocationArrayInput is an input type that accepts GetProcessorJobOutputLocationArray and GetProcessorJobOutputLocationArrayOutput values.
// You can construct a concrete instance of `GetProcessorJobOutputLocationArrayInput` via:
//
//	GetProcessorJobOutputLocationArray{ GetProcessorJobOutputLocationArgs{...} }
type GetProcessorJobOutputLocationArrayInput interface {
	pulumi.Input

	ToGetProcessorJobOutputLocationArrayOutput() GetProcessorJobOutputLocationArrayOutput
	ToGetProcessorJobOutputLocationArrayOutputWithContext(context.Context) GetProcessorJobOutputLocationArrayOutput
}

type GetProcessorJobOutputLocationArray []GetProcessorJobOutputLocationInput

func (GetProcessorJobOutputLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProcessorJobOutputLocation)(nil)).Elem()
}

func (i GetProcessorJobOutputLocationArray) ToGetProcessorJobOutputLocationArrayOutput() GetProcessorJobOutputLocationArrayOutput {
	return i.ToGetProcessorJobOutputLocationArrayOutputWithContext(context.Background())
}

func (i GetProcessorJobOutputLocationArray) ToGetProcessorJobOutputLocationArrayOutputWithContext(ctx context.Context) GetProcessorJobOutputLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProcessorJobOutputLocationArrayOutput)
}

type GetProcessorJobOutputLocationOutput struct{ *pulumi.OutputState }

func (GetProcessorJobOutputLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProcessorJobOutputLocation)(nil)).Elem()
}

func (o GetProcessorJobOutputLocationOutput) ToGetProcessorJobOutputLocationOutput() GetProcessorJobOutputLocationOutput {
	return o
}

func (o GetProcessorJobOutputLocationOutput) ToGetProcessorJobOutputLocationOutputWithContext(ctx context.Context) GetProcessorJobOutputLocationOutput {
	return o
}

// The Object Storage bucket name.
func (o GetProcessorJobOutputLocationOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetProcessorJobOutputLocation) string { return v.Bucket }).(pulumi.StringOutput)
}

// The Object Storage namespace.
func (o GetProcessorJobOutputLocationOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetProcessorJobOutputLocation) string { return v.Namespace }).(pulumi.StringOutput)
}

// The Object Storage folder name.
func (o GetProcessorJobOutputLocationOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetProcessorJobOutputLocation) string { return v.Prefix }).(pulumi.StringOutput)
}

type GetProcessorJobOutputLocationArrayOutput struct{ *pulumi.OutputState }

func (GetProcessorJobOutputLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProcessorJobOutputLocation)(nil)).Elem()
}

func (o GetProcessorJobOutputLocationArrayOutput) ToGetProcessorJobOutputLocationArrayOutput() GetProcessorJobOutputLocationArrayOutput {
	return o
}

func (o GetProcessorJobOutputLocationArrayOutput) ToGetProcessorJobOutputLocationArrayOutputWithContext(ctx context.Context) GetProcessorJobOutputLocationArrayOutput {
	return o
}

func (o GetProcessorJobOutputLocationArrayOutput) Index(i pulumi.IntInput) GetProcessorJobOutputLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProcessorJobOutputLocation {
		return vs[0].([]GetProcessorJobOutputLocation)[vs[1].(int)]
	}).(GetProcessorJobOutputLocationOutput)
}

type GetProcessorJobProcessorConfig struct {
	// The document type.
	DocumentType string `pulumi:"documentType"`
	// The types of document analysis requested.
	Features []GetProcessorJobProcessorConfigFeature `pulumi:"features"`
	// Whether or not to generate a ZIP file containing the results.
	IsZipOutputEnabled bool `pulumi:"isZipOutputEnabled"`
	// The document language, abbreviated according to the BCP 47 Language-Tag syntax.
	Language string `pulumi:"language"`
	// The type of the processor.
	ProcessorType string `pulumi:"processorType"`
}

// GetProcessorJobProcessorConfigInput is an input type that accepts GetProcessorJobProcessorConfigArgs and GetProcessorJobProcessorConfigOutput values.
// You can construct a concrete instance of `GetProcessorJobProcessorConfigInput` via:
//
//	GetProcessorJobProcessorConfigArgs{...}
type GetProcessorJobProcessorConfigInput interface {
	pulumi.Input

	ToGetProcessorJobProcessorConfigOutput() GetProcessorJobProcessorConfigOutput
	ToGetProcessorJobProcessorConfigOutputWithContext(context.Context) GetProcessorJobProcessorConfigOutput
}

type GetProcessorJobProcessorConfigArgs struct {
	// The document type.
	DocumentType pulumi.StringInput `pulumi:"documentType"`
	// The types of document analysis requested.
	Features GetProcessorJobProcessorConfigFeatureArrayInput `pulumi:"features"`
	// Whether or not to generate a ZIP file containing the results.
	IsZipOutputEnabled pulumi.BoolInput `pulumi:"isZipOutputEnabled"`
	// The document language, abbreviated according to the BCP 47 Language-Tag syntax.
	Language pulumi.StringInput `pulumi:"language"`
	// The type of the processor.
	ProcessorType pulumi.StringInput `pulumi:"processorType"`
}

func (GetProcessorJobProcessorConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProcessorJobProcessorConfig)(nil)).Elem()
}

func (i GetProcessorJobProcessorConfigArgs) ToGetProcessorJobProcessorConfigOutput() GetProcessorJobProcessorConfigOutput {
	return i.ToGetProcessorJobProcessorConfigOutputWithContext(context.Background())
}

func (i GetProcessorJobProcessorConfigArgs) ToGetProcessorJobProcessorConfigOutputWithContext(ctx context.Context) GetProcessorJobProcessorConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProcessorJobProcessorConfigOutput)
}

// GetProcessorJobProcessorConfigArrayInput is an input type that accepts GetProcessorJobProcessorConfigArray and GetProcessorJobProcessorConfigArrayOutput values.
// You can construct a concrete instance of `GetProcessorJobProcessorConfigArrayInput` via:
//
//	GetProcessorJobProcessorConfigArray{ GetProcessorJobProcessorConfigArgs{...} }
type GetProcessorJobProcessorConfigArrayInput interface {
	pulumi.Input

	ToGetProcessorJobProcessorConfigArrayOutput() GetProcessorJobProcessorConfigArrayOutput
	ToGetProcessorJobProcessorConfigArrayOutputWithContext(context.Context) GetProcessorJobProcessorConfigArrayOutput
}

type GetProcessorJobProcessorConfigArray []GetProcessorJobProcessorConfigInput

func (GetProcessorJobProcessorConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProcessorJobProcessorConfig)(nil)).Elem()
}

func (i GetProcessorJobProcessorConfigArray) ToGetProcessorJobProcessorConfigArrayOutput() GetProcessorJobProcessorConfigArrayOutput {
	return i.ToGetProcessorJobProcessorConfigArrayOutputWithContext(context.Background())
}

func (i GetProcessorJobProcessorConfigArray) ToGetProcessorJobProcessorConfigArrayOutputWithContext(ctx context.Context) GetProcessorJobProcessorConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProcessorJobProcessorConfigArrayOutput)
}

type GetProcessorJobProcessorConfigOutput struct{ *pulumi.OutputState }

func (GetProcessorJobProcessorConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProcessorJobProcessorConfig)(nil)).Elem()
}

func (o GetProcessorJobProcessorConfigOutput) ToGetProcessorJobProcessorConfigOutput() GetProcessorJobProcessorConfigOutput {
	return o
}

func (o GetProcessorJobProcessorConfigOutput) ToGetProcessorJobProcessorConfigOutputWithContext(ctx context.Context) GetProcessorJobProcessorConfigOutput {
	return o
}

// The document type.
func (o GetProcessorJobProcessorConfigOutput) DocumentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetProcessorJobProcessorConfig) string { return v.DocumentType }).(pulumi.StringOutput)
}

// The types of document analysis requested.
func (o GetProcessorJobProcessorConfigOutput) Features() GetProcessorJobProcessorConfigFeatureArrayOutput {
	return o.ApplyT(func(v GetProcessorJobProcessorConfig) []GetProcessorJobProcessorConfigFeature { return v.Features }).(GetProcessorJobProcessorConfigFeatureArrayOutput)
}

// Whether or not to generate a ZIP file containing the results.
func (o GetProcessorJobProcessorConfigOutput) IsZipOutputEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProcessorJobProcessorConfig) bool { return v.IsZipOutputEnabled }).(pulumi.BoolOutput)
}

// The document language, abbreviated according to the BCP 47 Language-Tag syntax.
func (o GetProcessorJobProcessorConfigOutput) Language() pulumi.StringOutput {
	return o.ApplyT(func(v GetProcessorJobProcessorConfig) string { return v.Language }).(pulumi.StringOutput)
}

// The type of the processor.
func (o GetProcessorJobProcessorConfigOutput) ProcessorType() pulumi.StringOutput {
	return o.ApplyT(func(v GetProcessorJobProcessorConfig) string { return v.ProcessorType }).(pulumi.StringOutput)
}

type GetProcessorJobProcessorConfigArrayOutput struct{ *pulumi.OutputState }

func (GetProcessorJobProcessorConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProcessorJobProcessorConfig)(nil)).Elem()
}

func (o GetProcessorJobProcessorConfigArrayOutput) ToGetProcessorJobProcessorConfigArrayOutput() GetProcessorJobProcessorConfigArrayOutput {
	return o
}

func (o GetProcessorJobProcessorConfigArrayOutput) ToGetProcessorJobProcessorConfigArrayOutputWithContext(ctx context.Context) GetProcessorJobProcessorConfigArrayOutput {
	return o
}

func (o GetProcessorJobProcessorConfigArrayOutput) Index(i pulumi.IntInput) GetProcessorJobProcessorConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProcessorJobProcessorConfig {
		return vs[0].([]GetProcessorJobProcessorConfig)[vs[1].(int)]
	}).(GetProcessorJobProcessorConfigOutput)
}

type GetProcessorJobProcessorConfigFeature struct {
	// The type of document analysis requested. The allowed values are:
	// * `LANGUAGE_CLASSIFICATION`: Detect the language.
	// * `TEXT_EXTRACTION`: Recognize text.
	// * `TABLE_EXTRACTION`: Detect and extract data in tables.
	// * `KEY_VALUE_EXTRACTION`: Extract form fields.
	// * `DOCUMENT_CLASSIFICATION`: Identify the type of document.
	FeatureType string `pulumi:"featureType"`
	// Whether or not to generate a searchable PDF file.
	GenerateSearchablePdf bool `pulumi:"generateSearchablePdf"`
	// The maximum number of results to return.
	MaxResults int `pulumi:"maxResults"`
	// The custom model ID.
	ModelId string `pulumi:"modelId"`
	// The custom model tenancy ID when modelId represents aliasName.
	TenancyId string `pulumi:"tenancyId"`
}

// GetProcessorJobProcessorConfigFeatureInput is an input type that accepts GetProcessorJobProcessorConfigFeatureArgs and GetProcessorJobProcessorConfigFeatureOutput values.
// You can construct a concrete instance of `GetProcessorJobProcessorConfigFeatureInput` via:
//
//	GetProcessorJobProcessorConfigFeatureArgs{...}
type GetProcessorJobProcessorConfigFeatureInput interface {
	pulumi.Input

	ToGetProcessorJobProcessorConfigFeatureOutput() GetProcessorJobProcessorConfigFeatureOutput
	ToGetProcessorJobProcessorConfigFeatureOutputWithContext(context.Context) GetProcessorJobProcessorConfigFeatureOutput
}

type GetProcessorJobProcessorConfigFeatureArgs struct {
	// The type of document analysis requested. The allowed values are:
	// * `LANGUAGE_CLASSIFICATION`: Detect the language.
	// * `TEXT_EXTRACTION`: Recognize text.
	// * `TABLE_EXTRACTION`: Detect and extract data in tables.
	// * `KEY_VALUE_EXTRACTION`: Extract form fields.
	// * `DOCUMENT_CLASSIFICATION`: Identify the type of document.
	FeatureType pulumi.StringInput `pulumi:"featureType"`
	// Whether or not to generate a searchable PDF file.
	GenerateSearchablePdf pulumi.BoolInput `pulumi:"generateSearchablePdf"`
	// The maximum number of results to return.
	MaxResults pulumi.IntInput `pulumi:"maxResults"`
	// The custom model ID.
	ModelId pulumi.StringInput `pulumi:"modelId"`
	// The custom model tenancy ID when modelId represents aliasName.
	TenancyId pulumi.StringInput `pulumi:"tenancyId"`
}

func (GetProcessorJobProcessorConfigFeatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProcessorJobProcessorConfigFeature)(nil)).Elem()
}

func (i GetProcessorJobProcessorConfigFeatureArgs) ToGetProcessorJobProcessorConfigFeatureOutput() GetProcessorJobProcessorConfigFeatureOutput {
	return i.ToGetProcessorJobProcessorConfigFeatureOutputWithContext(context.Background())
}

func (i GetProcessorJobProcessorConfigFeatureArgs) ToGetProcessorJobProcessorConfigFeatureOutputWithContext(ctx context.Context) GetProcessorJobProcessorConfigFeatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProcessorJobProcessorConfigFeatureOutput)
}

// GetProcessorJobProcessorConfigFeatureArrayInput is an input type that accepts GetProcessorJobProcessorConfigFeatureArray and GetProcessorJobProcessorConfigFeatureArrayOutput values.
// You can construct a concrete instance of `GetProcessorJobProcessorConfigFeatureArrayInput` via:
//
//	GetProcessorJobProcessorConfigFeatureArray{ GetProcessorJobProcessorConfigFeatureArgs{...} }
type GetProcessorJobProcessorConfigFeatureArrayInput interface {
	pulumi.Input

	ToGetProcessorJobProcessorConfigFeatureArrayOutput() GetProcessorJobProcessorConfigFeatureArrayOutput
	ToGetProcessorJobProcessorConfigFeatureArrayOutputWithContext(context.Context) GetProcessorJobProcessorConfigFeatureArrayOutput
}

type GetProcessorJobProcessorConfigFeatureArray []GetProcessorJobProcessorConfigFeatureInput

func (GetProcessorJobProcessorConfigFeatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProcessorJobProcessorConfigFeature)(nil)).Elem()
}

func (i GetProcessorJobProcessorConfigFeatureArray) ToGetProcessorJobProcessorConfigFeatureArrayOutput() GetProcessorJobProcessorConfigFeatureArrayOutput {
	return i.ToGetProcessorJobProcessorConfigFeatureArrayOutputWithContext(context.Background())
}

func (i GetProcessorJobProcessorConfigFeatureArray) ToGetProcessorJobProcessorConfigFeatureArrayOutputWithContext(ctx context.Context) GetProcessorJobProcessorConfigFeatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProcessorJobProcessorConfigFeatureArrayOutput)
}

type GetProcessorJobProcessorConfigFeatureOutput struct{ *pulumi.OutputState }

func (GetProcessorJobProcessorConfigFeatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProcessorJobProcessorConfigFeature)(nil)).Elem()
}

func (o GetProcessorJobProcessorConfigFeatureOutput) ToGetProcessorJobProcessorConfigFeatureOutput() GetProcessorJobProcessorConfigFeatureOutput {
	return o
}

func (o GetProcessorJobProcessorConfigFeatureOutput) ToGetProcessorJobProcessorConfigFeatureOutputWithContext(ctx context.Context) GetProcessorJobProcessorConfigFeatureOutput {
	return o
}

// The type of document analysis requested. The allowed values are:
// * `LANGUAGE_CLASSIFICATION`: Detect the language.
// * `TEXT_EXTRACTION`: Recognize text.
// * `TABLE_EXTRACTION`: Detect and extract data in tables.
// * `KEY_VALUE_EXTRACTION`: Extract form fields.
// * `DOCUMENT_CLASSIFICATION`: Identify the type of document.
func (o GetProcessorJobProcessorConfigFeatureOutput) FeatureType() pulumi.StringOutput {
	return o.ApplyT(func(v GetProcessorJobProcessorConfigFeature) string { return v.FeatureType }).(pulumi.StringOutput)
}

// Whether or not to generate a searchable PDF file.
func (o GetProcessorJobProcessorConfigFeatureOutput) GenerateSearchablePdf() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProcessorJobProcessorConfigFeature) bool { return v.GenerateSearchablePdf }).(pulumi.BoolOutput)
}

// The maximum number of results to return.
func (o GetProcessorJobProcessorConfigFeatureOutput) MaxResults() pulumi.IntOutput {
	return o.ApplyT(func(v GetProcessorJobProcessorConfigFeature) int { return v.MaxResults }).(pulumi.IntOutput)
}

// The custom model ID.
func (o GetProcessorJobProcessorConfigFeatureOutput) ModelId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProcessorJobProcessorConfigFeature) string { return v.ModelId }).(pulumi.StringOutput)
}

// The custom model tenancy ID when modelId represents aliasName.
func (o GetProcessorJobProcessorConfigFeatureOutput) TenancyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProcessorJobProcessorConfigFeature) string { return v.TenancyId }).(pulumi.StringOutput)
}

type GetProcessorJobProcessorConfigFeatureArrayOutput struct{ *pulumi.OutputState }

func (GetProcessorJobProcessorConfigFeatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProcessorJobProcessorConfigFeature)(nil)).Elem()
}

func (o GetProcessorJobProcessorConfigFeatureArrayOutput) ToGetProcessorJobProcessorConfigFeatureArrayOutput() GetProcessorJobProcessorConfigFeatureArrayOutput {
	return o
}

func (o GetProcessorJobProcessorConfigFeatureArrayOutput) ToGetProcessorJobProcessorConfigFeatureArrayOutputWithContext(ctx context.Context) GetProcessorJobProcessorConfigFeatureArrayOutput {
	return o
}

func (o GetProcessorJobProcessorConfigFeatureArrayOutput) Index(i pulumi.IntInput) GetProcessorJobProcessorConfigFeatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProcessorJobProcessorConfigFeature {
		return vs[0].([]GetProcessorJobProcessorConfigFeature)[vs[1].(int)]
	}).(GetProcessorJobProcessorConfigFeatureOutput)
}

type GetProjectsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetProjectsFilterInput is an input type that accepts GetProjectsFilterArgs and GetProjectsFilterOutput values.
// You can construct a concrete instance of `GetProjectsFilterInput` via:
//
//	GetProjectsFilterArgs{...}
type GetProjectsFilterInput interface {
	pulumi.Input

	ToGetProjectsFilterOutput() GetProjectsFilterOutput
	ToGetProjectsFilterOutputWithContext(context.Context) GetProjectsFilterOutput
}

type GetProjectsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetProjectsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsFilter)(nil)).Elem()
}

func (i GetProjectsFilterArgs) ToGetProjectsFilterOutput() GetProjectsFilterOutput {
	return i.ToGetProjectsFilterOutputWithContext(context.Background())
}

func (i GetProjectsFilterArgs) ToGetProjectsFilterOutputWithContext(ctx context.Context) GetProjectsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsFilterOutput)
}

// GetProjectsFilterArrayInput is an input type that accepts GetProjectsFilterArray and GetProjectsFilterArrayOutput values.
// You can construct a concrete instance of `GetProjectsFilterArrayInput` via:
//
//	GetProjectsFilterArray{ GetProjectsFilterArgs{...} }
type GetProjectsFilterArrayInput interface {
	pulumi.Input

	ToGetProjectsFilterArrayOutput() GetProjectsFilterArrayOutput
	ToGetProjectsFilterArrayOutputWithContext(context.Context) GetProjectsFilterArrayOutput
}

type GetProjectsFilterArray []GetProjectsFilterInput

func (GetProjectsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsFilter)(nil)).Elem()
}

func (i GetProjectsFilterArray) ToGetProjectsFilterArrayOutput() GetProjectsFilterArrayOutput {
	return i.ToGetProjectsFilterArrayOutputWithContext(context.Background())
}

func (i GetProjectsFilterArray) ToGetProjectsFilterArrayOutputWithContext(ctx context.Context) GetProjectsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsFilterArrayOutput)
}

type GetProjectsFilterOutput struct{ *pulumi.OutputState }

func (GetProjectsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsFilter)(nil)).Elem()
}

func (o GetProjectsFilterOutput) ToGetProjectsFilterOutput() GetProjectsFilterOutput {
	return o
}

func (o GetProjectsFilterOutput) ToGetProjectsFilterOutputWithContext(ctx context.Context) GetProjectsFilterOutput {
	return o
}

func (o GetProjectsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetProjectsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetProjectsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetProjectsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProjectsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetProjectsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetProjectsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsFilter)(nil)).Elem()
}

func (o GetProjectsFilterArrayOutput) ToGetProjectsFilterArrayOutput() GetProjectsFilterArrayOutput {
	return o
}

func (o GetProjectsFilterArrayOutput) ToGetProjectsFilterArrayOutputWithContext(ctx context.Context) GetProjectsFilterArrayOutput {
	return o
}

func (o GetProjectsFilterArrayOutput) Index(i pulumi.IntInput) GetProjectsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectsFilter {
		return vs[0].([]GetProjectsFilter)[vs[1].(int)]
	}).(GetProjectsFilterOutput)
}

type GetProjectsProjectCollection struct {
	Items []GetProjectsProjectCollectionItem `pulumi:"items"`
}

// GetProjectsProjectCollectionInput is an input type that accepts GetProjectsProjectCollectionArgs and GetProjectsProjectCollectionOutput values.
// You can construct a concrete instance of `GetProjectsProjectCollectionInput` via:
//
//	GetProjectsProjectCollectionArgs{...}
type GetProjectsProjectCollectionInput interface {
	pulumi.Input

	ToGetProjectsProjectCollectionOutput() GetProjectsProjectCollectionOutput
	ToGetProjectsProjectCollectionOutputWithContext(context.Context) GetProjectsProjectCollectionOutput
}

type GetProjectsProjectCollectionArgs struct {
	Items GetProjectsProjectCollectionItemArrayInput `pulumi:"items"`
}

func (GetProjectsProjectCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectCollection)(nil)).Elem()
}

func (i GetProjectsProjectCollectionArgs) ToGetProjectsProjectCollectionOutput() GetProjectsProjectCollectionOutput {
	return i.ToGetProjectsProjectCollectionOutputWithContext(context.Background())
}

func (i GetProjectsProjectCollectionArgs) ToGetProjectsProjectCollectionOutputWithContext(ctx context.Context) GetProjectsProjectCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectCollectionOutput)
}

// GetProjectsProjectCollectionArrayInput is an input type that accepts GetProjectsProjectCollectionArray and GetProjectsProjectCollectionArrayOutput values.
// You can construct a concrete instance of `GetProjectsProjectCollectionArrayInput` via:
//
//	GetProjectsProjectCollectionArray{ GetProjectsProjectCollectionArgs{...} }
type GetProjectsProjectCollectionArrayInput interface {
	pulumi.Input

	ToGetProjectsProjectCollectionArrayOutput() GetProjectsProjectCollectionArrayOutput
	ToGetProjectsProjectCollectionArrayOutputWithContext(context.Context) GetProjectsProjectCollectionArrayOutput
}

type GetProjectsProjectCollectionArray []GetProjectsProjectCollectionInput

func (GetProjectsProjectCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsProjectCollection)(nil)).Elem()
}

func (i GetProjectsProjectCollectionArray) ToGetProjectsProjectCollectionArrayOutput() GetProjectsProjectCollectionArrayOutput {
	return i.ToGetProjectsProjectCollectionArrayOutputWithContext(context.Background())
}

func (i GetProjectsProjectCollectionArray) ToGetProjectsProjectCollectionArrayOutputWithContext(ctx context.Context) GetProjectsProjectCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectCollectionArrayOutput)
}

type GetProjectsProjectCollectionOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectCollection)(nil)).Elem()
}

func (o GetProjectsProjectCollectionOutput) ToGetProjectsProjectCollectionOutput() GetProjectsProjectCollectionOutput {
	return o
}

func (o GetProjectsProjectCollectionOutput) ToGetProjectsProjectCollectionOutputWithContext(ctx context.Context) GetProjectsProjectCollectionOutput {
	return o
}

func (o GetProjectsProjectCollectionOutput) Items() GetProjectsProjectCollectionItemArrayOutput {
	return o.ApplyT(func(v GetProjectsProjectCollection) []GetProjectsProjectCollectionItem { return v.Items }).(GetProjectsProjectCollectionItemArrayOutput)
}

type GetProjectsProjectCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsProjectCollection)(nil)).Elem()
}

func (o GetProjectsProjectCollectionArrayOutput) ToGetProjectsProjectCollectionArrayOutput() GetProjectsProjectCollectionArrayOutput {
	return o
}

func (o GetProjectsProjectCollectionArrayOutput) ToGetProjectsProjectCollectionArrayOutputWithContext(ctx context.Context) GetProjectsProjectCollectionArrayOutput {
	return o
}

func (o GetProjectsProjectCollectionArrayOutput) Index(i pulumi.IntInput) GetProjectsProjectCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectsProjectCollection {
		return vs[0].([]GetProjectsProjectCollection)[vs[1].(int)]
	}).(GetProjectsProjectCollectionOutput)
}

type GetProjectsProjectCollectionItem struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For example: `{"foo-namespace": {"bar-key": "value"}}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// An optional description of the project.
	Description string `pulumi:"description"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The filter to find the project with the given identifier.
	Id string `pulumi:"id"`
	// A message describing the current state in more detail, that can provide actionable information if creation failed.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// The filter to match projects with the given lifecycleState.
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. For example: `{"orcl-cloud": {"free-tier-retained": "true"}}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// When the project was created, as an RFC3339 datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// When the project was updated, as an RFC3339 datetime string.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetProjectsProjectCollectionItemInput is an input type that accepts GetProjectsProjectCollectionItemArgs and GetProjectsProjectCollectionItemOutput values.
// You can construct a concrete instance of `GetProjectsProjectCollectionItemInput` via:
//
//	GetProjectsProjectCollectionItemArgs{...}
type GetProjectsProjectCollectionItemInput interface {
	pulumi.Input

	ToGetProjectsProjectCollectionItemOutput() GetProjectsProjectCollectionItemOutput
	ToGetProjectsProjectCollectionItemOutputWithContext(context.Context) GetProjectsProjectCollectionItemOutput
}

type GetProjectsProjectCollectionItemArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For example: `{"foo-namespace": {"bar-key": "value"}}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// An optional description of the project.
	Description pulumi.StringInput `pulumi:"description"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// The filter to find the project with the given identifier.
	Id pulumi.StringInput `pulumi:"id"`
	// A message describing the current state in more detail, that can provide actionable information if creation failed.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// The filter to match projects with the given lifecycleState.
	State pulumi.StringInput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. For example: `{"orcl-cloud": {"free-tier-retained": "true"}}`
	SystemTags pulumi.StringMapInput `pulumi:"systemTags"`
	// When the project was created, as an RFC3339 datetime string.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// When the project was updated, as an RFC3339 datetime string.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetProjectsProjectCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectCollectionItem)(nil)).Elem()
}

func (i GetProjectsProjectCollectionItemArgs) ToGetProjectsProjectCollectionItemOutput() GetProjectsProjectCollectionItemOutput {
	return i.ToGetProjectsProjectCollectionItemOutputWithContext(context.Background())
}

func (i GetProjectsProjectCollectionItemArgs) ToGetProjectsProjectCollectionItemOutputWithContext(ctx context.Context) GetProjectsProjectCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectCollectionItemOutput)
}

// GetProjectsProjectCollectionItemArrayInput is an input type that accepts GetProjectsProjectCollectionItemArray and GetProjectsProjectCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetProjectsProjectCollectionItemArrayInput` via:
//
//	GetProjectsProjectCollectionItemArray{ GetProjectsProjectCollectionItemArgs{...} }
type GetProjectsProjectCollectionItemArrayInput interface {
	pulumi.Input

	ToGetProjectsProjectCollectionItemArrayOutput() GetProjectsProjectCollectionItemArrayOutput
	ToGetProjectsProjectCollectionItemArrayOutputWithContext(context.Context) GetProjectsProjectCollectionItemArrayOutput
}

type GetProjectsProjectCollectionItemArray []GetProjectsProjectCollectionItemInput

func (GetProjectsProjectCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsProjectCollectionItem)(nil)).Elem()
}

func (i GetProjectsProjectCollectionItemArray) ToGetProjectsProjectCollectionItemArrayOutput() GetProjectsProjectCollectionItemArrayOutput {
	return i.ToGetProjectsProjectCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetProjectsProjectCollectionItemArray) ToGetProjectsProjectCollectionItemArrayOutputWithContext(ctx context.Context) GetProjectsProjectCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectCollectionItemArrayOutput)
}

type GetProjectsProjectCollectionItemOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectCollectionItem)(nil)).Elem()
}

func (o GetProjectsProjectCollectionItemOutput) ToGetProjectsProjectCollectionItemOutput() GetProjectsProjectCollectionItemOutput {
	return o
}

func (o GetProjectsProjectCollectionItemOutput) ToGetProjectsProjectCollectionItemOutputWithContext(ctx context.Context) GetProjectsProjectCollectionItemOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetProjectsProjectCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For example: `{"foo-namespace": {"bar-key": "value"}}`
func (o GetProjectsProjectCollectionItemOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetProjectsProjectCollectionItem) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// An optional description of the project.
func (o GetProjectsProjectCollectionItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectCollectionItem) string { return v.Description }).(pulumi.StringOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetProjectsProjectCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{"bar-key": "value"}`
func (o GetProjectsProjectCollectionItemOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetProjectsProjectCollectionItem) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The filter to find the project with the given identifier.
func (o GetProjectsProjectCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// A message describing the current state in more detail, that can provide actionable information if creation failed.
func (o GetProjectsProjectCollectionItemOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectCollectionItem) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The filter to match projects with the given lifecycleState.
func (o GetProjectsProjectCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. For example: `{"orcl-cloud": {"free-tier-retained": "true"}}`
func (o GetProjectsProjectCollectionItemOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetProjectsProjectCollectionItem) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// When the project was created, as an RFC3339 datetime string.
func (o GetProjectsProjectCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// When the project was updated, as an RFC3339 datetime string.
func (o GetProjectsProjectCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetProjectsProjectCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsProjectCollectionItem)(nil)).Elem()
}

func (o GetProjectsProjectCollectionItemArrayOutput) ToGetProjectsProjectCollectionItemArrayOutput() GetProjectsProjectCollectionItemArrayOutput {
	return o
}

func (o GetProjectsProjectCollectionItemArrayOutput) ToGetProjectsProjectCollectionItemArrayOutputWithContext(ctx context.Context) GetProjectsProjectCollectionItemArrayOutput {
	return o
}

func (o GetProjectsProjectCollectionItemArrayOutput) Index(i pulumi.IntInput) GetProjectsProjectCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectsProjectCollectionItem {
		return vs[0].([]GetProjectsProjectCollectionItem)[vs[1].(int)]
	}).(GetProjectsProjectCollectionItemOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ModelComponentModelInput)(nil)).Elem(), ModelComponentModelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelComponentModelArrayInput)(nil)).Elem(), ModelComponentModelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelMetricInput)(nil)).Elem(), ModelMetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelMetricArrayInput)(nil)).Elem(), ModelMetricArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelMetricDatasetSummaryInput)(nil)).Elem(), ModelMetricDatasetSummaryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelMetricDatasetSummaryArrayInput)(nil)).Elem(), ModelMetricDatasetSummaryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelMetricLabelMetricsReportInput)(nil)).Elem(), ModelMetricLabelMetricsReportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelMetricLabelMetricsReportArrayInput)(nil)).Elem(), ModelMetricLabelMetricsReportArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelMetricLabelMetricsReportConfidenceEntryInput)(nil)).Elem(), ModelMetricLabelMetricsReportConfidenceEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelMetricLabelMetricsReportConfidenceEntryArrayInput)(nil)).Elem(), ModelMetricLabelMetricsReportConfidenceEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelMetricOverallMetricsReportInput)(nil)).Elem(), ModelMetricOverallMetricsReportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelMetricOverallMetricsReportArrayInput)(nil)).Elem(), ModelMetricOverallMetricsReportArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelMetricOverallMetricsReportConfidenceEntryInput)(nil)).Elem(), ModelMetricOverallMetricsReportConfidenceEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelMetricOverallMetricsReportConfidenceEntryArrayInput)(nil)).Elem(), ModelMetricOverallMetricsReportConfidenceEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelTestingDatasetInput)(nil)).Elem(), ModelTestingDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelTestingDatasetPtrInput)(nil)).Elem(), ModelTestingDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelTrainingDatasetInput)(nil)).Elem(), ModelTrainingDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelTrainingDatasetPtrInput)(nil)).Elem(), ModelTrainingDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelValidationDatasetInput)(nil)).Elem(), ModelValidationDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelValidationDatasetPtrInput)(nil)).Elem(), ModelValidationDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessorJobInputLocationInput)(nil)).Elem(), ProcessorJobInputLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessorJobInputLocationPtrInput)(nil)).Elem(), ProcessorJobInputLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessorJobInputLocationObjectLocationInput)(nil)).Elem(), ProcessorJobInputLocationObjectLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessorJobInputLocationObjectLocationArrayInput)(nil)).Elem(), ProcessorJobInputLocationObjectLocationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessorJobOutputLocationInput)(nil)).Elem(), ProcessorJobOutputLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessorJobOutputLocationPtrInput)(nil)).Elem(), ProcessorJobOutputLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessorJobProcessorConfigInput)(nil)).Elem(), ProcessorJobProcessorConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessorJobProcessorConfigPtrInput)(nil)).Elem(), ProcessorJobProcessorConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessorJobProcessorConfigFeatureInput)(nil)).Elem(), ProcessorJobProcessorConfigFeatureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessorJobProcessorConfigFeatureArrayInput)(nil)).Elem(), ProcessorJobProcessorConfigFeatureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelComponentModelInput)(nil)).Elem(), GetModelComponentModelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelComponentModelArrayInput)(nil)).Elem(), GetModelComponentModelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelMetricInput)(nil)).Elem(), GetModelMetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelMetricArrayInput)(nil)).Elem(), GetModelMetricArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelMetricDatasetSummaryInput)(nil)).Elem(), GetModelMetricDatasetSummaryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelMetricDatasetSummaryArrayInput)(nil)).Elem(), GetModelMetricDatasetSummaryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelMetricLabelMetricsReportInput)(nil)).Elem(), GetModelMetricLabelMetricsReportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelMetricLabelMetricsReportArrayInput)(nil)).Elem(), GetModelMetricLabelMetricsReportArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelMetricLabelMetricsReportConfidenceEntryInput)(nil)).Elem(), GetModelMetricLabelMetricsReportConfidenceEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelMetricLabelMetricsReportConfidenceEntryArrayInput)(nil)).Elem(), GetModelMetricLabelMetricsReportConfidenceEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelMetricOverallMetricsReportInput)(nil)).Elem(), GetModelMetricOverallMetricsReportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelMetricOverallMetricsReportArrayInput)(nil)).Elem(), GetModelMetricOverallMetricsReportArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelMetricOverallMetricsReportConfidenceEntryInput)(nil)).Elem(), GetModelMetricOverallMetricsReportConfidenceEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelMetricOverallMetricsReportConfidenceEntryArrayInput)(nil)).Elem(), GetModelMetricOverallMetricsReportConfidenceEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelTestingDatasetInput)(nil)).Elem(), GetModelTestingDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelTestingDatasetArrayInput)(nil)).Elem(), GetModelTestingDatasetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelTrainingDatasetInput)(nil)).Elem(), GetModelTrainingDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelTrainingDatasetArrayInput)(nil)).Elem(), GetModelTrainingDatasetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelValidationDatasetInput)(nil)).Elem(), GetModelValidationDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelValidationDatasetArrayInput)(nil)).Elem(), GetModelValidationDatasetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsFilterInput)(nil)).Elem(), GetModelsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsFilterArrayInput)(nil)).Elem(), GetModelsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionInput)(nil)).Elem(), GetModelsModelCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionArrayInput)(nil)).Elem(), GetModelsModelCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemInput)(nil)).Elem(), GetModelsModelCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemArrayInput)(nil)).Elem(), GetModelsModelCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemComponentModelInput)(nil)).Elem(), GetModelsModelCollectionItemComponentModelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemComponentModelArrayInput)(nil)).Elem(), GetModelsModelCollectionItemComponentModelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemMetricInput)(nil)).Elem(), GetModelsModelCollectionItemMetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemMetricArrayInput)(nil)).Elem(), GetModelsModelCollectionItemMetricArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemMetricDatasetSummaryInput)(nil)).Elem(), GetModelsModelCollectionItemMetricDatasetSummaryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemMetricDatasetSummaryArrayInput)(nil)).Elem(), GetModelsModelCollectionItemMetricDatasetSummaryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemMetricLabelMetricsReportInput)(nil)).Elem(), GetModelsModelCollectionItemMetricLabelMetricsReportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemMetricLabelMetricsReportArrayInput)(nil)).Elem(), GetModelsModelCollectionItemMetricLabelMetricsReportArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryInput)(nil)).Elem(), GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryArrayInput)(nil)).Elem(), GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemMetricOverallMetricsReportInput)(nil)).Elem(), GetModelsModelCollectionItemMetricOverallMetricsReportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemMetricOverallMetricsReportArrayInput)(nil)).Elem(), GetModelsModelCollectionItemMetricOverallMetricsReportArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryInput)(nil)).Elem(), GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryArrayInput)(nil)).Elem(), GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemTestingDatasetInput)(nil)).Elem(), GetModelsModelCollectionItemTestingDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemTestingDatasetArrayInput)(nil)).Elem(), GetModelsModelCollectionItemTestingDatasetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemTrainingDatasetInput)(nil)).Elem(), GetModelsModelCollectionItemTrainingDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemTrainingDatasetArrayInput)(nil)).Elem(), GetModelsModelCollectionItemTrainingDatasetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemValidationDatasetInput)(nil)).Elem(), GetModelsModelCollectionItemValidationDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemValidationDatasetArrayInput)(nil)).Elem(), GetModelsModelCollectionItemValidationDatasetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProcessorJobInputLocationInput)(nil)).Elem(), GetProcessorJobInputLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProcessorJobInputLocationArrayInput)(nil)).Elem(), GetProcessorJobInputLocationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProcessorJobInputLocationObjectLocationInput)(nil)).Elem(), GetProcessorJobInputLocationObjectLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProcessorJobInputLocationObjectLocationArrayInput)(nil)).Elem(), GetProcessorJobInputLocationObjectLocationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProcessorJobOutputLocationInput)(nil)).Elem(), GetProcessorJobOutputLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProcessorJobOutputLocationArrayInput)(nil)).Elem(), GetProcessorJobOutputLocationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProcessorJobProcessorConfigInput)(nil)).Elem(), GetProcessorJobProcessorConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProcessorJobProcessorConfigArrayInput)(nil)).Elem(), GetProcessorJobProcessorConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProcessorJobProcessorConfigFeatureInput)(nil)).Elem(), GetProcessorJobProcessorConfigFeatureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProcessorJobProcessorConfigFeatureArrayInput)(nil)).Elem(), GetProcessorJobProcessorConfigFeatureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsFilterInput)(nil)).Elem(), GetProjectsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsFilterArrayInput)(nil)).Elem(), GetProjectsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectCollectionInput)(nil)).Elem(), GetProjectsProjectCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectCollectionArrayInput)(nil)).Elem(), GetProjectsProjectCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectCollectionItemInput)(nil)).Elem(), GetProjectsProjectCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectCollectionItemArrayInput)(nil)).Elem(), GetProjectsProjectCollectionItemArray{})
	pulumi.RegisterOutputType(ModelComponentModelOutput{})
	pulumi.RegisterOutputType(ModelComponentModelArrayOutput{})
	pulumi.RegisterOutputType(ModelMetricOutput{})
	pulumi.RegisterOutputType(ModelMetricArrayOutput{})
	pulumi.RegisterOutputType(ModelMetricDatasetSummaryOutput{})
	pulumi.RegisterOutputType(ModelMetricDatasetSummaryArrayOutput{})
	pulumi.RegisterOutputType(ModelMetricLabelMetricsReportOutput{})
	pulumi.RegisterOutputType(ModelMetricLabelMetricsReportArrayOutput{})
	pulumi.RegisterOutputType(ModelMetricLabelMetricsReportConfidenceEntryOutput{})
	pulumi.RegisterOutputType(ModelMetricLabelMetricsReportConfidenceEntryArrayOutput{})
	pulumi.RegisterOutputType(ModelMetricOverallMetricsReportOutput{})
	pulumi.RegisterOutputType(ModelMetricOverallMetricsReportArrayOutput{})
	pulumi.RegisterOutputType(ModelMetricOverallMetricsReportConfidenceEntryOutput{})
	pulumi.RegisterOutputType(ModelMetricOverallMetricsReportConfidenceEntryArrayOutput{})
	pulumi.RegisterOutputType(ModelTestingDatasetOutput{})
	pulumi.RegisterOutputType(ModelTestingDatasetPtrOutput{})
	pulumi.RegisterOutputType(ModelTrainingDatasetOutput{})
	pulumi.RegisterOutputType(ModelTrainingDatasetPtrOutput{})
	pulumi.RegisterOutputType(ModelValidationDatasetOutput{})
	pulumi.RegisterOutputType(ModelValidationDatasetPtrOutput{})
	pulumi.RegisterOutputType(ProcessorJobInputLocationOutput{})
	pulumi.RegisterOutputType(ProcessorJobInputLocationPtrOutput{})
	pulumi.RegisterOutputType(ProcessorJobInputLocationObjectLocationOutput{})
	pulumi.RegisterOutputType(ProcessorJobInputLocationObjectLocationArrayOutput{})
	pulumi.RegisterOutputType(ProcessorJobOutputLocationOutput{})
	pulumi.RegisterOutputType(ProcessorJobOutputLocationPtrOutput{})
	pulumi.RegisterOutputType(ProcessorJobProcessorConfigOutput{})
	pulumi.RegisterOutputType(ProcessorJobProcessorConfigPtrOutput{})
	pulumi.RegisterOutputType(ProcessorJobProcessorConfigFeatureOutput{})
	pulumi.RegisterOutputType(ProcessorJobProcessorConfigFeatureArrayOutput{})
	pulumi.RegisterOutputType(GetModelComponentModelOutput{})
	pulumi.RegisterOutputType(GetModelComponentModelArrayOutput{})
	pulumi.RegisterOutputType(GetModelMetricOutput{})
	pulumi.RegisterOutputType(GetModelMetricArrayOutput{})
	pulumi.RegisterOutputType(GetModelMetricDatasetSummaryOutput{})
	pulumi.RegisterOutputType(GetModelMetricDatasetSummaryArrayOutput{})
	pulumi.RegisterOutputType(GetModelMetricLabelMetricsReportOutput{})
	pulumi.RegisterOutputType(GetModelMetricLabelMetricsReportArrayOutput{})
	pulumi.RegisterOutputType(GetModelMetricLabelMetricsReportConfidenceEntryOutput{})
	pulumi.RegisterOutputType(GetModelMetricLabelMetricsReportConfidenceEntryArrayOutput{})
	pulumi.RegisterOutputType(GetModelMetricOverallMetricsReportOutput{})
	pulumi.RegisterOutputType(GetModelMetricOverallMetricsReportArrayOutput{})
	pulumi.RegisterOutputType(GetModelMetricOverallMetricsReportConfidenceEntryOutput{})
	pulumi.RegisterOutputType(GetModelMetricOverallMetricsReportConfidenceEntryArrayOutput{})
	pulumi.RegisterOutputType(GetModelTestingDatasetOutput{})
	pulumi.RegisterOutputType(GetModelTestingDatasetArrayOutput{})
	pulumi.RegisterOutputType(GetModelTrainingDatasetOutput{})
	pulumi.RegisterOutputType(GetModelTrainingDatasetArrayOutput{})
	pulumi.RegisterOutputType(GetModelValidationDatasetOutput{})
	pulumi.RegisterOutputType(GetModelValidationDatasetArrayOutput{})
	pulumi.RegisterOutputType(GetModelsFilterOutput{})
	pulumi.RegisterOutputType(GetModelsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemComponentModelOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemComponentModelArrayOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemMetricOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemMetricArrayOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemMetricDatasetSummaryOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemMetricDatasetSummaryArrayOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemMetricLabelMetricsReportOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemMetricLabelMetricsReportArrayOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemMetricLabelMetricsReportConfidenceEntryArrayOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemMetricOverallMetricsReportOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemMetricOverallMetricsReportArrayOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemMetricOverallMetricsReportConfidenceEntryArrayOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemTestingDatasetOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemTestingDatasetArrayOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemTrainingDatasetOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemTrainingDatasetArrayOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemValidationDatasetOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemValidationDatasetArrayOutput{})
	pulumi.RegisterOutputType(GetProcessorJobInputLocationOutput{})
	pulumi.RegisterOutputType(GetProcessorJobInputLocationArrayOutput{})
	pulumi.RegisterOutputType(GetProcessorJobInputLocationObjectLocationOutput{})
	pulumi.RegisterOutputType(GetProcessorJobInputLocationObjectLocationArrayOutput{})
	pulumi.RegisterOutputType(GetProcessorJobOutputLocationOutput{})
	pulumi.RegisterOutputType(GetProcessorJobOutputLocationArrayOutput{})
	pulumi.RegisterOutputType(GetProcessorJobProcessorConfigOutput{})
	pulumi.RegisterOutputType(GetProcessorJobProcessorConfigArrayOutput{})
	pulumi.RegisterOutputType(GetProcessorJobProcessorConfigFeatureOutput{})
	pulumi.RegisterOutputType(GetProcessorJobProcessorConfigFeatureArrayOutput{})
	pulumi.RegisterOutputType(GetProjectsFilterOutput{})
	pulumi.RegisterOutputType(GetProjectsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectCollectionOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectCollectionItemOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectCollectionItemArrayOutput{})
}
