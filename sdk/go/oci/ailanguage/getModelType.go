// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ailanguage

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Model Type resource in Oracle Cloud Infrastructure Ai Language service.
//
// # Gets model capabilities
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/AiLanguage"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := AiLanguage.GetModelType(ctx, &ailanguage.GetModelTypeArgs{
//				ModelType: modelTypeModelType,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetModelType(ctx *pulumi.Context, args *GetModelTypeArgs, opts ...pulumi.InvokeOption) (*GetModelTypeResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetModelTypeResult
	err := ctx.Invoke("oci:AiLanguage/getModelType:getModelType", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getModelType.
type GetModelTypeArgs struct {
	// Results like version and model supported info by specifying model type
	ModelType string `pulumi:"modelType"`
}

// A collection of values returned by getModelType.
type GetModelTypeResult struct {
	// Model information capabilities related to version
	Capabilities string `pulumi:"capabilities"`
	// The provider-assigned unique ID for this managed resource.
	Id        string `pulumi:"id"`
	ModelType string `pulumi:"modelType"`
	// Model versions available for this model type
	Versions []string `pulumi:"versions"`
}

func GetModelTypeOutput(ctx *pulumi.Context, args GetModelTypeOutputArgs, opts ...pulumi.InvokeOption) GetModelTypeResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetModelTypeResultOutput, error) {
			args := v.(GetModelTypeArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:AiLanguage/getModelType:getModelType", args, GetModelTypeResultOutput{}, options).(GetModelTypeResultOutput), nil
		}).(GetModelTypeResultOutput)
}

// A collection of arguments for invoking getModelType.
type GetModelTypeOutputArgs struct {
	// Results like version and model supported info by specifying model type
	ModelType pulumi.StringInput `pulumi:"modelType"`
}

func (GetModelTypeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelTypeArgs)(nil)).Elem()
}

// A collection of values returned by getModelType.
type GetModelTypeResultOutput struct{ *pulumi.OutputState }

func (GetModelTypeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelTypeResult)(nil)).Elem()
}

func (o GetModelTypeResultOutput) ToGetModelTypeResultOutput() GetModelTypeResultOutput {
	return o
}

func (o GetModelTypeResultOutput) ToGetModelTypeResultOutputWithContext(ctx context.Context) GetModelTypeResultOutput {
	return o
}

// Model information capabilities related to version
func (o GetModelTypeResultOutput) Capabilities() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelTypeResult) string { return v.Capabilities }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetModelTypeResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelTypeResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetModelTypeResultOutput) ModelType() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelTypeResult) string { return v.ModelType }).(pulumi.StringOutput)
}

// Model versions available for this model type
func (o GetModelTypeResultOutput) Versions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetModelTypeResult) []string { return v.Versions }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetModelTypeResultOutput{})
}
