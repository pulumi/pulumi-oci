// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ailanguage

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Projects in Oracle Cloud Infrastructure Ai Language service.
//
// Returns a list of  Projects.
func GetProjects(ctx *pulumi.Context, args *GetProjectsArgs, opts ...pulumi.InvokeOption) (*GetProjectsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetProjectsResult
	err := ctx.Invoke("oci:AiLanguage/getProjects:getProjects", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getProjects.
type GetProjectsArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName *string             `pulumi:"displayName"`
	Filters     []GetProjectsFilter `pulumi:"filters"`
	// Unique identifier OCID of the project
	Id *string `pulumi:"id"`
	// <b>Filter</b> results by the specified lifecycle state. Must be a valid state for the resource type.
	State *string `pulumi:"state"`
}

// A collection of values returned by getProjects.
type GetProjectsResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)  for the project's compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// A user-friendly display name for the resource. It does not have to be unique and can be modified. Avoid entering confidential information.
	DisplayName *string             `pulumi:"displayName"`
	Filters     []GetProjectsFilter `pulumi:"filters"`
	// Unique identifier OCID of the project
	Id *string `pulumi:"id"`
	// The list of project_collection.
	ProjectCollections []GetProjectsProjectCollection `pulumi:"projectCollections"`
	// The state of the project.
	State *string `pulumi:"state"`
}

func GetProjectsOutput(ctx *pulumi.Context, args GetProjectsOutputArgs, opts ...pulumi.InvokeOption) GetProjectsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetProjectsResultOutput, error) {
			args := v.(GetProjectsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:AiLanguage/getProjects:getProjects", args, GetProjectsResultOutput{}, options).(GetProjectsResultOutput), nil
		}).(GetProjectsResultOutput)
}

// A collection of arguments for invoking getProjects.
type GetProjectsOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringPtrInput       `pulumi:"displayName"`
	Filters     GetProjectsFilterArrayInput `pulumi:"filters"`
	// Unique identifier OCID of the project
	Id pulumi.StringPtrInput `pulumi:"id"`
	// <b>Filter</b> results by the specified lifecycle state. Must be a valid state for the resource type.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetProjectsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsArgs)(nil)).Elem()
}

// A collection of values returned by getProjects.
type GetProjectsResultOutput struct{ *pulumi.OutputState }

func (GetProjectsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsResult)(nil)).Elem()
}

func (o GetProjectsResultOutput) ToGetProjectsResultOutput() GetProjectsResultOutput {
	return o
}

func (o GetProjectsResultOutput) ToGetProjectsResultOutputWithContext(ctx context.Context) GetProjectsResultOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)  for the project's compartment.
func (o GetProjectsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// A user-friendly display name for the resource. It does not have to be unique and can be modified. Avoid entering confidential information.
func (o GetProjectsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProjectsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetProjectsResultOutput) Filters() GetProjectsFilterArrayOutput {
	return o.ApplyT(func(v GetProjectsResult) []GetProjectsFilter { return v.Filters }).(GetProjectsFilterArrayOutput)
}

// Unique identifier OCID of the project
func (o GetProjectsResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProjectsResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The list of project_collection.
func (o GetProjectsResultOutput) ProjectCollections() GetProjectsProjectCollectionArrayOutput {
	return o.ApplyT(func(v GetProjectsResult) []GetProjectsProjectCollection { return v.ProjectCollections }).(GetProjectsProjectCollectionArrayOutput)
}

// The state of the project.
func (o GetProjectsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProjectsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetProjectsResultOutput{})
}
