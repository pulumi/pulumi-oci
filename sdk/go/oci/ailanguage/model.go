// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ailanguage

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Model resource in Oracle Cloud Infrastructure Ai Language service.
//
// Creates a new model for training and train the model with date provided.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/AiLanguage"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := AiLanguage.NewModel(ctx, "test_model", &AiLanguage.ModelArgs{
//				CompartmentId: pulumi.Any(compartmentId),
//				ModelDetails: &ailanguage.ModelModelDetailsArgs{
//					ModelType: pulumi.Any(modelModelDetailsModelType),
//					ClassificationMode: &ailanguage.ModelModelDetailsClassificationModeArgs{
//						ClassificationMode: pulumi.Any(modelModelDetailsClassificationModeClassificationMode),
//						Version:            pulumi.Any(modelModelDetailsClassificationModeVersion),
//					},
//					LanguageCode: pulumi.Any(modelModelDetailsLanguageCode),
//					Version:      pulumi.Any(modelModelDetailsVersion),
//				},
//				ProjectId: pulumi.Any(testProject.Id),
//				DefinedTags: pulumi.StringMap{
//					"foo-namespace.bar-key": pulumi.String("value"),
//				},
//				Description: pulumi.Any(modelDescription),
//				DisplayName: pulumi.Any(modelDisplayName),
//				FreeformTags: pulumi.StringMap{
//					"bar-key": pulumi.String("value"),
//				},
//				TestStrategy: &ailanguage.ModelTestStrategyArgs{
//					StrategyType: pulumi.Any(modelTestStrategyStrategyType),
//					TestingDataset: &ailanguage.ModelTestStrategyTestingDatasetArgs{
//						DatasetType: pulumi.Any(modelTestStrategyTestingDatasetDatasetType),
//						DatasetId:   pulumi.Any(testDataset.Id),
//						LocationDetails: &ailanguage.ModelTestStrategyTestingDatasetLocationDetailsArgs{
//							Bucket:       pulumi.Any(modelTestStrategyTestingDatasetLocationDetailsBucket),
//							LocationType: pulumi.Any(modelTestStrategyTestingDatasetLocationDetailsLocationType),
//							Namespace:    pulumi.Any(modelTestStrategyTestingDatasetLocationDetailsNamespace),
//							ObjectNames:  pulumi.Any(modelTestStrategyTestingDatasetLocationDetailsObjectNames),
//						},
//					},
//					ValidationDataset: &ailanguage.ModelTestStrategyValidationDatasetArgs{
//						DatasetType: pulumi.Any(modelTestStrategyValidationDatasetDatasetType),
//						DatasetId:   pulumi.Any(testDataset.Id),
//						LocationDetails: &ailanguage.ModelTestStrategyValidationDatasetLocationDetailsArgs{
//							Bucket:       pulumi.Any(modelTestStrategyValidationDatasetLocationDetailsBucket),
//							LocationType: pulumi.Any(modelTestStrategyValidationDatasetLocationDetailsLocationType),
//							Namespace:    pulumi.Any(modelTestStrategyValidationDatasetLocationDetailsNamespace),
//							ObjectNames:  pulumi.Any(modelTestStrategyValidationDatasetLocationDetailsObjectNames),
//						},
//					},
//				},
//				TrainingDataset: &ailanguage.ModelTrainingDatasetArgs{
//					DatasetType: pulumi.Any(modelTrainingDatasetDatasetType),
//					DatasetId:   pulumi.Any(testDataset.Id),
//					LocationDetails: &ailanguage.ModelTrainingDatasetLocationDetailsArgs{
//						Bucket:       pulumi.Any(modelTrainingDatasetLocationDetailsBucket),
//						LocationType: pulumi.Any(modelTrainingDatasetLocationDetailsLocationType),
//						Namespace:    pulumi.Any(modelTrainingDatasetLocationDetailsNamespace),
//						ObjectNames:  pulumi.Any(modelTrainingDatasetLocationDetailsObjectNames),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Models can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:AiLanguage/model:Model test_model "id"
// ```
type Model struct {
	pulumi.CustomResourceState

	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)  for the models compartment.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapOutput `pulumi:"definedTags"`
	// (Updatable) A short description of the a model.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) A user-friendly display name for the resource. It does not have to be unique and can be modified. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// model training results of different models
	EvaluationResults ModelEvaluationResultArrayOutput `pulumi:"evaluationResults"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapOutput `pulumi:"freeformTags"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in failed state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// Possible model types
	ModelDetails ModelModelDetailsOutput `pulumi:"modelDetails"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project to associate with the model.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// The state of the model.
	State pulumi.StringOutput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapOutput `pulumi:"systemTags"`
	// Possible strategy as testing and validation(optional) dataset.
	TestStrategy ModelTestStrategyOutput `pulumi:"testStrategy"`
	// The time the the model was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time the model was updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
	// Possible data set type
	TrainingDataset ModelTrainingDatasetOutput `pulumi:"trainingDataset"`
	// For pre trained models this will identify model type version used for model creation For custom identifying the model by model id is difficult. This param provides ease of use for end customer. <<service>>::<<service-name>>_<<model-type-version>>::<<custom model on which this training has to be done>> ex: ai-lang::NER_V1::CUSTOM-V0
	Version pulumi.StringOutput `pulumi:"version"`
}

// NewModel registers a new resource with the given unique name, arguments, and options.
func NewModel(ctx *pulumi.Context,
	name string, args *ModelArgs, opts ...pulumi.ResourceOption) (*Model, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.ModelDetails == nil {
		return nil, errors.New("invalid value for required argument 'ModelDetails'")
	}
	if args.ProjectId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectId'")
	}
	if args.TrainingDataset == nil {
		return nil, errors.New("invalid value for required argument 'TrainingDataset'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Model
	err := ctx.RegisterResource("oci:AiLanguage/model:Model", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetModel gets an existing Model resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetModel(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ModelState, opts ...pulumi.ResourceOption) (*Model, error) {
	var resource Model
	err := ctx.ReadResource("oci:AiLanguage/model:Model", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Model resources.
type modelState struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)  for the models compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) A short description of the a model.
	Description *string `pulumi:"description"`
	// (Updatable) A user-friendly display name for the resource. It does not have to be unique and can be modified. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// model training results of different models
	EvaluationResults []ModelEvaluationResult `pulumi:"evaluationResults"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// Possible model types
	ModelDetails *ModelModelDetails `pulumi:"modelDetails"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project to associate with the model.
	ProjectId *string `pulumi:"projectId"`
	// The state of the model.
	State *string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// Possible strategy as testing and validation(optional) dataset.
	TestStrategy *ModelTestStrategy `pulumi:"testStrategy"`
	// The time the the model was created. An RFC3339 formatted datetime string.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time the model was updated. An RFC3339 formatted datetime string.
	TimeUpdated *string `pulumi:"timeUpdated"`
	// Possible data set type
	TrainingDataset *ModelTrainingDataset `pulumi:"trainingDataset"`
	// For pre trained models this will identify model type version used for model creation For custom identifying the model by model id is difficult. This param provides ease of use for end customer. <<service>>::<<service-name>>_<<model-type-version>>::<<custom model on which this training has to be done>> ex: ai-lang::NER_V1::CUSTOM-V0
	Version *string `pulumi:"version"`
}

type ModelState struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)  for the models compartment.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) A short description of the a model.
	Description pulumi.StringPtrInput
	// (Updatable) A user-friendly display name for the resource. It does not have to be unique and can be modified. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// model training results of different models
	EvaluationResults ModelEvaluationResultArrayInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in failed state.
	LifecycleDetails pulumi.StringPtrInput
	// Possible model types
	ModelDetails ModelModelDetailsPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project to associate with the model.
	ProjectId pulumi.StringPtrInput
	// The state of the model.
	State pulumi.StringPtrInput
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput
	// Possible strategy as testing and validation(optional) dataset.
	TestStrategy ModelTestStrategyPtrInput
	// The time the the model was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringPtrInput
	// The time the model was updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringPtrInput
	// Possible data set type
	TrainingDataset ModelTrainingDatasetPtrInput
	// For pre trained models this will identify model type version used for model creation For custom identifying the model by model id is difficult. This param provides ease of use for end customer. <<service>>::<<service-name>>_<<model-type-version>>::<<custom model on which this training has to be done>> ex: ai-lang::NER_V1::CUSTOM-V0
	Version pulumi.StringPtrInput
}

func (ModelState) ElementType() reflect.Type {
	return reflect.TypeOf((*modelState)(nil)).Elem()
}

type modelArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)  for the models compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) A short description of the a model.
	Description *string `pulumi:"description"`
	// (Updatable) A user-friendly display name for the resource. It does not have to be unique and can be modified. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Possible model types
	ModelDetails ModelModelDetails `pulumi:"modelDetails"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project to associate with the model.
	ProjectId string `pulumi:"projectId"`
	// Possible strategy as testing and validation(optional) dataset.
	TestStrategy *ModelTestStrategy `pulumi:"testStrategy"`
	// Possible data set type
	TrainingDataset ModelTrainingDataset `pulumi:"trainingDataset"`
}

// The set of arguments for constructing a Model resource.
type ModelArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)  for the models compartment.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) A short description of the a model.
	Description pulumi.StringPtrInput
	// (Updatable) A user-friendly display name for the resource. It does not have to be unique and can be modified. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput
	// Possible model types
	ModelDetails ModelModelDetailsInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project to associate with the model.
	ProjectId pulumi.StringInput
	// Possible strategy as testing and validation(optional) dataset.
	TestStrategy ModelTestStrategyPtrInput
	// Possible data set type
	TrainingDataset ModelTrainingDatasetInput
}

func (ModelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*modelArgs)(nil)).Elem()
}

type ModelInput interface {
	pulumi.Input

	ToModelOutput() ModelOutput
	ToModelOutputWithContext(ctx context.Context) ModelOutput
}

func (*Model) ElementType() reflect.Type {
	return reflect.TypeOf((**Model)(nil)).Elem()
}

func (i *Model) ToModelOutput() ModelOutput {
	return i.ToModelOutputWithContext(context.Background())
}

func (i *Model) ToModelOutputWithContext(ctx context.Context) ModelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelOutput)
}

// ModelArrayInput is an input type that accepts ModelArray and ModelArrayOutput values.
// You can construct a concrete instance of `ModelArrayInput` via:
//
//	ModelArray{ ModelArgs{...} }
type ModelArrayInput interface {
	pulumi.Input

	ToModelArrayOutput() ModelArrayOutput
	ToModelArrayOutputWithContext(context.Context) ModelArrayOutput
}

type ModelArray []ModelInput

func (ModelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Model)(nil)).Elem()
}

func (i ModelArray) ToModelArrayOutput() ModelArrayOutput {
	return i.ToModelArrayOutputWithContext(context.Background())
}

func (i ModelArray) ToModelArrayOutputWithContext(ctx context.Context) ModelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelArrayOutput)
}

// ModelMapInput is an input type that accepts ModelMap and ModelMapOutput values.
// You can construct a concrete instance of `ModelMapInput` via:
//
//	ModelMap{ "key": ModelArgs{...} }
type ModelMapInput interface {
	pulumi.Input

	ToModelMapOutput() ModelMapOutput
	ToModelMapOutputWithContext(context.Context) ModelMapOutput
}

type ModelMap map[string]ModelInput

func (ModelMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Model)(nil)).Elem()
}

func (i ModelMap) ToModelMapOutput() ModelMapOutput {
	return i.ToModelMapOutputWithContext(context.Background())
}

func (i ModelMap) ToModelMapOutputWithContext(ctx context.Context) ModelMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelMapOutput)
}

type ModelOutput struct{ *pulumi.OutputState }

func (ModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Model)(nil)).Elem()
}

func (o ModelOutput) ToModelOutput() ModelOutput {
	return o
}

func (o ModelOutput) ToModelOutputWithContext(ctx context.Context) ModelOutput {
	return o
}

// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)  for the models compartment.
func (o ModelOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *Model) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o ModelOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Model) pulumi.StringMapOutput { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// (Updatable) A short description of the a model.
func (o ModelOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *Model) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// (Updatable) A user-friendly display name for the resource. It does not have to be unique and can be modified. Avoid entering confidential information.
func (o ModelOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *Model) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// model training results of different models
func (o ModelOutput) EvaluationResults() ModelEvaluationResultArrayOutput {
	return o.ApplyT(func(v *Model) ModelEvaluationResultArrayOutput { return v.EvaluationResults }).(ModelEvaluationResultArrayOutput)
}

// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o ModelOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Model) pulumi.StringMapOutput { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in failed state.
func (o ModelOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *Model) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// Possible model types
func (o ModelOutput) ModelDetails() ModelModelDetailsOutput {
	return o.ApplyT(func(v *Model) ModelModelDetailsOutput { return v.ModelDetails }).(ModelModelDetailsOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project to associate with the model.
func (o ModelOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *Model) pulumi.StringOutput { return v.ProjectId }).(pulumi.StringOutput)
}

// The state of the model.
func (o ModelOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *Model) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o ModelOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Model) pulumi.StringMapOutput { return v.SystemTags }).(pulumi.StringMapOutput)
}

// Possible strategy as testing and validation(optional) dataset.
func (o ModelOutput) TestStrategy() ModelTestStrategyOutput {
	return o.ApplyT(func(v *Model) ModelTestStrategyOutput { return v.TestStrategy }).(ModelTestStrategyOutput)
}

// The time the the model was created. An RFC3339 formatted datetime string.
func (o ModelOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *Model) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the model was updated. An RFC3339 formatted datetime string.
func (o ModelOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *Model) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

// Possible data set type
func (o ModelOutput) TrainingDataset() ModelTrainingDatasetOutput {
	return o.ApplyT(func(v *Model) ModelTrainingDatasetOutput { return v.TrainingDataset }).(ModelTrainingDatasetOutput)
}

// For pre trained models this will identify model type version used for model creation For custom identifying the model by model id is difficult. This param provides ease of use for end customer. <<service>>::<<service-name>>_<<model-type-version>>::<<custom model on which this training has to be done>> ex: ai-lang::NER_V1::CUSTOM-V0
func (o ModelOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v *Model) pulumi.StringOutput { return v.Version }).(pulumi.StringOutput)
}

type ModelArrayOutput struct{ *pulumi.OutputState }

func (ModelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Model)(nil)).Elem()
}

func (o ModelArrayOutput) ToModelArrayOutput() ModelArrayOutput {
	return o
}

func (o ModelArrayOutput) ToModelArrayOutputWithContext(ctx context.Context) ModelArrayOutput {
	return o
}

func (o ModelArrayOutput) Index(i pulumi.IntInput) ModelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Model {
		return vs[0].([]*Model)[vs[1].(int)]
	}).(ModelOutput)
}

type ModelMapOutput struct{ *pulumi.OutputState }

func (ModelMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Model)(nil)).Elem()
}

func (o ModelMapOutput) ToModelMapOutput() ModelMapOutput {
	return o
}

func (o ModelMapOutput) ToModelMapOutputWithContext(ctx context.Context) ModelMapOutput {
	return o
}

func (o ModelMapOutput) MapIndex(k pulumi.StringInput) ModelOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Model {
		return vs[0].(map[string]*Model)[vs[1].(string)]
	}).(ModelOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ModelInput)(nil)).Elem(), &Model{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelArrayInput)(nil)).Elem(), ModelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelMapInput)(nil)).Elem(), ModelMap{})
	pulumi.RegisterOutputType(ModelOutput{})
	pulumi.RegisterOutputType(ModelArrayOutput{})
	pulumi.RegisterOutputType(ModelMapOutput{})
}
