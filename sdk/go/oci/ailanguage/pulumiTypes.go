// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ailanguage

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ModelEvaluationResult struct {
	// List of text classification metrics
	ClassMetrics []ModelEvaluationResultClassMetric `pulumi:"classMetrics"`
	// class level confusion matrix
	ConfusionMatrix *string `pulumi:"confusionMatrix"`
	// List of entity metrics
	EntityMetrics []ModelEvaluationResultEntityMetric `pulumi:"entityMetrics"`
	// labels
	Labels []string `pulumi:"labels"`
	// Model level named entity recognition metrics
	Metrics []ModelEvaluationResultMetric `pulumi:"metrics"`
	// Model type
	ModelType *string `pulumi:"modelType"`
}

// ModelEvaluationResultInput is an input type that accepts ModelEvaluationResultArgs and ModelEvaluationResultOutput values.
// You can construct a concrete instance of `ModelEvaluationResultInput` via:
//
//	ModelEvaluationResultArgs{...}
type ModelEvaluationResultInput interface {
	pulumi.Input

	ToModelEvaluationResultOutput() ModelEvaluationResultOutput
	ToModelEvaluationResultOutputWithContext(context.Context) ModelEvaluationResultOutput
}

type ModelEvaluationResultArgs struct {
	// List of text classification metrics
	ClassMetrics ModelEvaluationResultClassMetricArrayInput `pulumi:"classMetrics"`
	// class level confusion matrix
	ConfusionMatrix pulumi.StringPtrInput `pulumi:"confusionMatrix"`
	// List of entity metrics
	EntityMetrics ModelEvaluationResultEntityMetricArrayInput `pulumi:"entityMetrics"`
	// labels
	Labels pulumi.StringArrayInput `pulumi:"labels"`
	// Model level named entity recognition metrics
	Metrics ModelEvaluationResultMetricArrayInput `pulumi:"metrics"`
	// Model type
	ModelType pulumi.StringPtrInput `pulumi:"modelType"`
}

func (ModelEvaluationResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelEvaluationResult)(nil)).Elem()
}

func (i ModelEvaluationResultArgs) ToModelEvaluationResultOutput() ModelEvaluationResultOutput {
	return i.ToModelEvaluationResultOutputWithContext(context.Background())
}

func (i ModelEvaluationResultArgs) ToModelEvaluationResultOutputWithContext(ctx context.Context) ModelEvaluationResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEvaluationResultOutput)
}

// ModelEvaluationResultArrayInput is an input type that accepts ModelEvaluationResultArray and ModelEvaluationResultArrayOutput values.
// You can construct a concrete instance of `ModelEvaluationResultArrayInput` via:
//
//	ModelEvaluationResultArray{ ModelEvaluationResultArgs{...} }
type ModelEvaluationResultArrayInput interface {
	pulumi.Input

	ToModelEvaluationResultArrayOutput() ModelEvaluationResultArrayOutput
	ToModelEvaluationResultArrayOutputWithContext(context.Context) ModelEvaluationResultArrayOutput
}

type ModelEvaluationResultArray []ModelEvaluationResultInput

func (ModelEvaluationResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelEvaluationResult)(nil)).Elem()
}

func (i ModelEvaluationResultArray) ToModelEvaluationResultArrayOutput() ModelEvaluationResultArrayOutput {
	return i.ToModelEvaluationResultArrayOutputWithContext(context.Background())
}

func (i ModelEvaluationResultArray) ToModelEvaluationResultArrayOutputWithContext(ctx context.Context) ModelEvaluationResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEvaluationResultArrayOutput)
}

type ModelEvaluationResultOutput struct{ *pulumi.OutputState }

func (ModelEvaluationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelEvaluationResult)(nil)).Elem()
}

func (o ModelEvaluationResultOutput) ToModelEvaluationResultOutput() ModelEvaluationResultOutput {
	return o
}

func (o ModelEvaluationResultOutput) ToModelEvaluationResultOutputWithContext(ctx context.Context) ModelEvaluationResultOutput {
	return o
}

// List of text classification metrics
func (o ModelEvaluationResultOutput) ClassMetrics() ModelEvaluationResultClassMetricArrayOutput {
	return o.ApplyT(func(v ModelEvaluationResult) []ModelEvaluationResultClassMetric { return v.ClassMetrics }).(ModelEvaluationResultClassMetricArrayOutput)
}

// class level confusion matrix
func (o ModelEvaluationResultOutput) ConfusionMatrix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelEvaluationResult) *string { return v.ConfusionMatrix }).(pulumi.StringPtrOutput)
}

// List of entity metrics
func (o ModelEvaluationResultOutput) EntityMetrics() ModelEvaluationResultEntityMetricArrayOutput {
	return o.ApplyT(func(v ModelEvaluationResult) []ModelEvaluationResultEntityMetric { return v.EntityMetrics }).(ModelEvaluationResultEntityMetricArrayOutput)
}

// labels
func (o ModelEvaluationResultOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ModelEvaluationResult) []string { return v.Labels }).(pulumi.StringArrayOutput)
}

// Model level named entity recognition metrics
func (o ModelEvaluationResultOutput) Metrics() ModelEvaluationResultMetricArrayOutput {
	return o.ApplyT(func(v ModelEvaluationResult) []ModelEvaluationResultMetric { return v.Metrics }).(ModelEvaluationResultMetricArrayOutput)
}

// Model type
func (o ModelEvaluationResultOutput) ModelType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelEvaluationResult) *string { return v.ModelType }).(pulumi.StringPtrOutput)
}

type ModelEvaluationResultArrayOutput struct{ *pulumi.OutputState }

func (ModelEvaluationResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelEvaluationResult)(nil)).Elem()
}

func (o ModelEvaluationResultArrayOutput) ToModelEvaluationResultArrayOutput() ModelEvaluationResultArrayOutput {
	return o
}

func (o ModelEvaluationResultArrayOutput) ToModelEvaluationResultArrayOutputWithContext(ctx context.Context) ModelEvaluationResultArrayOutput {
	return o
}

func (o ModelEvaluationResultArrayOutput) Index(i pulumi.IntInput) ModelEvaluationResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ModelEvaluationResult {
		return vs[0].([]ModelEvaluationResult)[vs[1].(int)]
	}).(ModelEvaluationResultOutput)
}

type ModelEvaluationResultClassMetric struct {
	// F1-score, is a measure of a model’s accuracy on a dataset
	F1 *float64 `pulumi:"f1"`
	// Entity label
	Label *string `pulumi:"label"`
	// Precision refers to the number of true positives divided by the total number of positive predictions (i.e., the number of true positives plus the number of false positives)
	Precision *float64 `pulumi:"precision"`
	// Measures the model's ability to predict actual positive classes. It is the ratio between the predicted true positives and what was actually tagged. The recall metric reveals how many of the predicted classes are correct.
	Recall *float64 `pulumi:"recall"`
	// number of samples in the test set
	Support *float64 `pulumi:"support"`
}

// ModelEvaluationResultClassMetricInput is an input type that accepts ModelEvaluationResultClassMetricArgs and ModelEvaluationResultClassMetricOutput values.
// You can construct a concrete instance of `ModelEvaluationResultClassMetricInput` via:
//
//	ModelEvaluationResultClassMetricArgs{...}
type ModelEvaluationResultClassMetricInput interface {
	pulumi.Input

	ToModelEvaluationResultClassMetricOutput() ModelEvaluationResultClassMetricOutput
	ToModelEvaluationResultClassMetricOutputWithContext(context.Context) ModelEvaluationResultClassMetricOutput
}

type ModelEvaluationResultClassMetricArgs struct {
	// F1-score, is a measure of a model’s accuracy on a dataset
	F1 pulumi.Float64PtrInput `pulumi:"f1"`
	// Entity label
	Label pulumi.StringPtrInput `pulumi:"label"`
	// Precision refers to the number of true positives divided by the total number of positive predictions (i.e., the number of true positives plus the number of false positives)
	Precision pulumi.Float64PtrInput `pulumi:"precision"`
	// Measures the model's ability to predict actual positive classes. It is the ratio between the predicted true positives and what was actually tagged. The recall metric reveals how many of the predicted classes are correct.
	Recall pulumi.Float64PtrInput `pulumi:"recall"`
	// number of samples in the test set
	Support pulumi.Float64PtrInput `pulumi:"support"`
}

func (ModelEvaluationResultClassMetricArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelEvaluationResultClassMetric)(nil)).Elem()
}

func (i ModelEvaluationResultClassMetricArgs) ToModelEvaluationResultClassMetricOutput() ModelEvaluationResultClassMetricOutput {
	return i.ToModelEvaluationResultClassMetricOutputWithContext(context.Background())
}

func (i ModelEvaluationResultClassMetricArgs) ToModelEvaluationResultClassMetricOutputWithContext(ctx context.Context) ModelEvaluationResultClassMetricOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEvaluationResultClassMetricOutput)
}

// ModelEvaluationResultClassMetricArrayInput is an input type that accepts ModelEvaluationResultClassMetricArray and ModelEvaluationResultClassMetricArrayOutput values.
// You can construct a concrete instance of `ModelEvaluationResultClassMetricArrayInput` via:
//
//	ModelEvaluationResultClassMetricArray{ ModelEvaluationResultClassMetricArgs{...} }
type ModelEvaluationResultClassMetricArrayInput interface {
	pulumi.Input

	ToModelEvaluationResultClassMetricArrayOutput() ModelEvaluationResultClassMetricArrayOutput
	ToModelEvaluationResultClassMetricArrayOutputWithContext(context.Context) ModelEvaluationResultClassMetricArrayOutput
}

type ModelEvaluationResultClassMetricArray []ModelEvaluationResultClassMetricInput

func (ModelEvaluationResultClassMetricArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelEvaluationResultClassMetric)(nil)).Elem()
}

func (i ModelEvaluationResultClassMetricArray) ToModelEvaluationResultClassMetricArrayOutput() ModelEvaluationResultClassMetricArrayOutput {
	return i.ToModelEvaluationResultClassMetricArrayOutputWithContext(context.Background())
}

func (i ModelEvaluationResultClassMetricArray) ToModelEvaluationResultClassMetricArrayOutputWithContext(ctx context.Context) ModelEvaluationResultClassMetricArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEvaluationResultClassMetricArrayOutput)
}

type ModelEvaluationResultClassMetricOutput struct{ *pulumi.OutputState }

func (ModelEvaluationResultClassMetricOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelEvaluationResultClassMetric)(nil)).Elem()
}

func (o ModelEvaluationResultClassMetricOutput) ToModelEvaluationResultClassMetricOutput() ModelEvaluationResultClassMetricOutput {
	return o
}

func (o ModelEvaluationResultClassMetricOutput) ToModelEvaluationResultClassMetricOutputWithContext(ctx context.Context) ModelEvaluationResultClassMetricOutput {
	return o
}

// F1-score, is a measure of a model’s accuracy on a dataset
func (o ModelEvaluationResultClassMetricOutput) F1() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ModelEvaluationResultClassMetric) *float64 { return v.F1 }).(pulumi.Float64PtrOutput)
}

// Entity label
func (o ModelEvaluationResultClassMetricOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelEvaluationResultClassMetric) *string { return v.Label }).(pulumi.StringPtrOutput)
}

// Precision refers to the number of true positives divided by the total number of positive predictions (i.e., the number of true positives plus the number of false positives)
func (o ModelEvaluationResultClassMetricOutput) Precision() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ModelEvaluationResultClassMetric) *float64 { return v.Precision }).(pulumi.Float64PtrOutput)
}

// Measures the model's ability to predict actual positive classes. It is the ratio between the predicted true positives and what was actually tagged. The recall metric reveals how many of the predicted classes are correct.
func (o ModelEvaluationResultClassMetricOutput) Recall() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ModelEvaluationResultClassMetric) *float64 { return v.Recall }).(pulumi.Float64PtrOutput)
}

// number of samples in the test set
func (o ModelEvaluationResultClassMetricOutput) Support() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ModelEvaluationResultClassMetric) *float64 { return v.Support }).(pulumi.Float64PtrOutput)
}

type ModelEvaluationResultClassMetricArrayOutput struct{ *pulumi.OutputState }

func (ModelEvaluationResultClassMetricArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelEvaluationResultClassMetric)(nil)).Elem()
}

func (o ModelEvaluationResultClassMetricArrayOutput) ToModelEvaluationResultClassMetricArrayOutput() ModelEvaluationResultClassMetricArrayOutput {
	return o
}

func (o ModelEvaluationResultClassMetricArrayOutput) ToModelEvaluationResultClassMetricArrayOutputWithContext(ctx context.Context) ModelEvaluationResultClassMetricArrayOutput {
	return o
}

func (o ModelEvaluationResultClassMetricArrayOutput) Index(i pulumi.IntInput) ModelEvaluationResultClassMetricOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ModelEvaluationResultClassMetric {
		return vs[0].([]ModelEvaluationResultClassMetric)[vs[1].(int)]
	}).(ModelEvaluationResultClassMetricOutput)
}

type ModelEvaluationResultEntityMetric struct {
	// F1-score, is a measure of a model’s accuracy on a dataset
	F1 *float64 `pulumi:"f1"`
	// Entity label
	Label *string `pulumi:"label"`
	// Precision refers to the number of true positives divided by the total number of positive predictions (i.e., the number of true positives plus the number of false positives)
	Precision *float64 `pulumi:"precision"`
	// Measures the model's ability to predict actual positive classes. It is the ratio between the predicted true positives and what was actually tagged. The recall metric reveals how many of the predicted classes are correct.
	Recall *float64 `pulumi:"recall"`
}

// ModelEvaluationResultEntityMetricInput is an input type that accepts ModelEvaluationResultEntityMetricArgs and ModelEvaluationResultEntityMetricOutput values.
// You can construct a concrete instance of `ModelEvaluationResultEntityMetricInput` via:
//
//	ModelEvaluationResultEntityMetricArgs{...}
type ModelEvaluationResultEntityMetricInput interface {
	pulumi.Input

	ToModelEvaluationResultEntityMetricOutput() ModelEvaluationResultEntityMetricOutput
	ToModelEvaluationResultEntityMetricOutputWithContext(context.Context) ModelEvaluationResultEntityMetricOutput
}

type ModelEvaluationResultEntityMetricArgs struct {
	// F1-score, is a measure of a model’s accuracy on a dataset
	F1 pulumi.Float64PtrInput `pulumi:"f1"`
	// Entity label
	Label pulumi.StringPtrInput `pulumi:"label"`
	// Precision refers to the number of true positives divided by the total number of positive predictions (i.e., the number of true positives plus the number of false positives)
	Precision pulumi.Float64PtrInput `pulumi:"precision"`
	// Measures the model's ability to predict actual positive classes. It is the ratio between the predicted true positives and what was actually tagged. The recall metric reveals how many of the predicted classes are correct.
	Recall pulumi.Float64PtrInput `pulumi:"recall"`
}

func (ModelEvaluationResultEntityMetricArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelEvaluationResultEntityMetric)(nil)).Elem()
}

func (i ModelEvaluationResultEntityMetricArgs) ToModelEvaluationResultEntityMetricOutput() ModelEvaluationResultEntityMetricOutput {
	return i.ToModelEvaluationResultEntityMetricOutputWithContext(context.Background())
}

func (i ModelEvaluationResultEntityMetricArgs) ToModelEvaluationResultEntityMetricOutputWithContext(ctx context.Context) ModelEvaluationResultEntityMetricOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEvaluationResultEntityMetricOutput)
}

// ModelEvaluationResultEntityMetricArrayInput is an input type that accepts ModelEvaluationResultEntityMetricArray and ModelEvaluationResultEntityMetricArrayOutput values.
// You can construct a concrete instance of `ModelEvaluationResultEntityMetricArrayInput` via:
//
//	ModelEvaluationResultEntityMetricArray{ ModelEvaluationResultEntityMetricArgs{...} }
type ModelEvaluationResultEntityMetricArrayInput interface {
	pulumi.Input

	ToModelEvaluationResultEntityMetricArrayOutput() ModelEvaluationResultEntityMetricArrayOutput
	ToModelEvaluationResultEntityMetricArrayOutputWithContext(context.Context) ModelEvaluationResultEntityMetricArrayOutput
}

type ModelEvaluationResultEntityMetricArray []ModelEvaluationResultEntityMetricInput

func (ModelEvaluationResultEntityMetricArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelEvaluationResultEntityMetric)(nil)).Elem()
}

func (i ModelEvaluationResultEntityMetricArray) ToModelEvaluationResultEntityMetricArrayOutput() ModelEvaluationResultEntityMetricArrayOutput {
	return i.ToModelEvaluationResultEntityMetricArrayOutputWithContext(context.Background())
}

func (i ModelEvaluationResultEntityMetricArray) ToModelEvaluationResultEntityMetricArrayOutputWithContext(ctx context.Context) ModelEvaluationResultEntityMetricArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEvaluationResultEntityMetricArrayOutput)
}

type ModelEvaluationResultEntityMetricOutput struct{ *pulumi.OutputState }

func (ModelEvaluationResultEntityMetricOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelEvaluationResultEntityMetric)(nil)).Elem()
}

func (o ModelEvaluationResultEntityMetricOutput) ToModelEvaluationResultEntityMetricOutput() ModelEvaluationResultEntityMetricOutput {
	return o
}

func (o ModelEvaluationResultEntityMetricOutput) ToModelEvaluationResultEntityMetricOutputWithContext(ctx context.Context) ModelEvaluationResultEntityMetricOutput {
	return o
}

// F1-score, is a measure of a model’s accuracy on a dataset
func (o ModelEvaluationResultEntityMetricOutput) F1() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ModelEvaluationResultEntityMetric) *float64 { return v.F1 }).(pulumi.Float64PtrOutput)
}

// Entity label
func (o ModelEvaluationResultEntityMetricOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelEvaluationResultEntityMetric) *string { return v.Label }).(pulumi.StringPtrOutput)
}

// Precision refers to the number of true positives divided by the total number of positive predictions (i.e., the number of true positives plus the number of false positives)
func (o ModelEvaluationResultEntityMetricOutput) Precision() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ModelEvaluationResultEntityMetric) *float64 { return v.Precision }).(pulumi.Float64PtrOutput)
}

// Measures the model's ability to predict actual positive classes. It is the ratio between the predicted true positives and what was actually tagged. The recall metric reveals how many of the predicted classes are correct.
func (o ModelEvaluationResultEntityMetricOutput) Recall() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ModelEvaluationResultEntityMetric) *float64 { return v.Recall }).(pulumi.Float64PtrOutput)
}

type ModelEvaluationResultEntityMetricArrayOutput struct{ *pulumi.OutputState }

func (ModelEvaluationResultEntityMetricArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelEvaluationResultEntityMetric)(nil)).Elem()
}

func (o ModelEvaluationResultEntityMetricArrayOutput) ToModelEvaluationResultEntityMetricArrayOutput() ModelEvaluationResultEntityMetricArrayOutput {
	return o
}

func (o ModelEvaluationResultEntityMetricArrayOutput) ToModelEvaluationResultEntityMetricArrayOutputWithContext(ctx context.Context) ModelEvaluationResultEntityMetricArrayOutput {
	return o
}

func (o ModelEvaluationResultEntityMetricArrayOutput) Index(i pulumi.IntInput) ModelEvaluationResultEntityMetricOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ModelEvaluationResultEntityMetric {
		return vs[0].([]ModelEvaluationResultEntityMetric)[vs[1].(int)]
	}).(ModelEvaluationResultEntityMetricOutput)
}

type ModelEvaluationResultMetric struct {
	// The fraction of the labels that were correctly recognised .
	Accuracy *float64 `pulumi:"accuracy"`
	// F1-score, is a measure of a model’s accuracy on a dataset
	MacroF1 *float64 `pulumi:"macroF1"`
	// Precision refers to the number of true positives divided by the total number of positive predictions (i.e., the number of true positives plus the number of false positives)
	MacroPrecision *float64 `pulumi:"macroPrecision"`
	// Measures the model's ability to predict actual positive classes. It is the ratio between the predicted true positives and what was actually tagged. The recall metric reveals how many of the predicted classes are correct.
	MacroRecall *float64 `pulumi:"macroRecall"`
	// F1-score, is a measure of a model’s accuracy on a dataset
	MicroF1 *float64 `pulumi:"microF1"`
	// Precision refers to the number of true positives divided by the total number of positive predictions (i.e., the number of true positives plus the number of false positives)
	MicroPrecision *float64 `pulumi:"microPrecision"`
	// Measures the model's ability to predict actual positive classes. It is the ratio between the predicted true positives and what was actually tagged. The recall metric reveals how many of the predicted classes are correct.
	MicroRecall *float64 `pulumi:"microRecall"`
	// F1-score, is a measure of a model’s accuracy on a dataset
	WeightedF1 *float64 `pulumi:"weightedF1"`
	// Precision refers to the number of true positives divided by the total number of positive predictions (i.e., the number of true positives plus the number of false positives)
	WeightedPrecision *float64 `pulumi:"weightedPrecision"`
	// Measures the model's ability to predict actual positive classes. It is the ratio between the predicted true positives and what was actually tagged. The recall metric reveals how many of the predicted classes are correct.
	WeightedRecall *float64 `pulumi:"weightedRecall"`
}

// ModelEvaluationResultMetricInput is an input type that accepts ModelEvaluationResultMetricArgs and ModelEvaluationResultMetricOutput values.
// You can construct a concrete instance of `ModelEvaluationResultMetricInput` via:
//
//	ModelEvaluationResultMetricArgs{...}
type ModelEvaluationResultMetricInput interface {
	pulumi.Input

	ToModelEvaluationResultMetricOutput() ModelEvaluationResultMetricOutput
	ToModelEvaluationResultMetricOutputWithContext(context.Context) ModelEvaluationResultMetricOutput
}

type ModelEvaluationResultMetricArgs struct {
	// The fraction of the labels that were correctly recognised .
	Accuracy pulumi.Float64PtrInput `pulumi:"accuracy"`
	// F1-score, is a measure of a model’s accuracy on a dataset
	MacroF1 pulumi.Float64PtrInput `pulumi:"macroF1"`
	// Precision refers to the number of true positives divided by the total number of positive predictions (i.e., the number of true positives plus the number of false positives)
	MacroPrecision pulumi.Float64PtrInput `pulumi:"macroPrecision"`
	// Measures the model's ability to predict actual positive classes. It is the ratio between the predicted true positives and what was actually tagged. The recall metric reveals how many of the predicted classes are correct.
	MacroRecall pulumi.Float64PtrInput `pulumi:"macroRecall"`
	// F1-score, is a measure of a model’s accuracy on a dataset
	MicroF1 pulumi.Float64PtrInput `pulumi:"microF1"`
	// Precision refers to the number of true positives divided by the total number of positive predictions (i.e., the number of true positives plus the number of false positives)
	MicroPrecision pulumi.Float64PtrInput `pulumi:"microPrecision"`
	// Measures the model's ability to predict actual positive classes. It is the ratio between the predicted true positives and what was actually tagged. The recall metric reveals how many of the predicted classes are correct.
	MicroRecall pulumi.Float64PtrInput `pulumi:"microRecall"`
	// F1-score, is a measure of a model’s accuracy on a dataset
	WeightedF1 pulumi.Float64PtrInput `pulumi:"weightedF1"`
	// Precision refers to the number of true positives divided by the total number of positive predictions (i.e., the number of true positives plus the number of false positives)
	WeightedPrecision pulumi.Float64PtrInput `pulumi:"weightedPrecision"`
	// Measures the model's ability to predict actual positive classes. It is the ratio between the predicted true positives and what was actually tagged. The recall metric reveals how many of the predicted classes are correct.
	WeightedRecall pulumi.Float64PtrInput `pulumi:"weightedRecall"`
}

func (ModelEvaluationResultMetricArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelEvaluationResultMetric)(nil)).Elem()
}

func (i ModelEvaluationResultMetricArgs) ToModelEvaluationResultMetricOutput() ModelEvaluationResultMetricOutput {
	return i.ToModelEvaluationResultMetricOutputWithContext(context.Background())
}

func (i ModelEvaluationResultMetricArgs) ToModelEvaluationResultMetricOutputWithContext(ctx context.Context) ModelEvaluationResultMetricOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEvaluationResultMetricOutput)
}

// ModelEvaluationResultMetricArrayInput is an input type that accepts ModelEvaluationResultMetricArray and ModelEvaluationResultMetricArrayOutput values.
// You can construct a concrete instance of `ModelEvaluationResultMetricArrayInput` via:
//
//	ModelEvaluationResultMetricArray{ ModelEvaluationResultMetricArgs{...} }
type ModelEvaluationResultMetricArrayInput interface {
	pulumi.Input

	ToModelEvaluationResultMetricArrayOutput() ModelEvaluationResultMetricArrayOutput
	ToModelEvaluationResultMetricArrayOutputWithContext(context.Context) ModelEvaluationResultMetricArrayOutput
}

type ModelEvaluationResultMetricArray []ModelEvaluationResultMetricInput

func (ModelEvaluationResultMetricArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelEvaluationResultMetric)(nil)).Elem()
}

func (i ModelEvaluationResultMetricArray) ToModelEvaluationResultMetricArrayOutput() ModelEvaluationResultMetricArrayOutput {
	return i.ToModelEvaluationResultMetricArrayOutputWithContext(context.Background())
}

func (i ModelEvaluationResultMetricArray) ToModelEvaluationResultMetricArrayOutputWithContext(ctx context.Context) ModelEvaluationResultMetricArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEvaluationResultMetricArrayOutput)
}

type ModelEvaluationResultMetricOutput struct{ *pulumi.OutputState }

func (ModelEvaluationResultMetricOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelEvaluationResultMetric)(nil)).Elem()
}

func (o ModelEvaluationResultMetricOutput) ToModelEvaluationResultMetricOutput() ModelEvaluationResultMetricOutput {
	return o
}

func (o ModelEvaluationResultMetricOutput) ToModelEvaluationResultMetricOutputWithContext(ctx context.Context) ModelEvaluationResultMetricOutput {
	return o
}

// The fraction of the labels that were correctly recognised .
func (o ModelEvaluationResultMetricOutput) Accuracy() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ModelEvaluationResultMetric) *float64 { return v.Accuracy }).(pulumi.Float64PtrOutput)
}

// F1-score, is a measure of a model’s accuracy on a dataset
func (o ModelEvaluationResultMetricOutput) MacroF1() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ModelEvaluationResultMetric) *float64 { return v.MacroF1 }).(pulumi.Float64PtrOutput)
}

// Precision refers to the number of true positives divided by the total number of positive predictions (i.e., the number of true positives plus the number of false positives)
func (o ModelEvaluationResultMetricOutput) MacroPrecision() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ModelEvaluationResultMetric) *float64 { return v.MacroPrecision }).(pulumi.Float64PtrOutput)
}

// Measures the model's ability to predict actual positive classes. It is the ratio between the predicted true positives and what was actually tagged. The recall metric reveals how many of the predicted classes are correct.
func (o ModelEvaluationResultMetricOutput) MacroRecall() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ModelEvaluationResultMetric) *float64 { return v.MacroRecall }).(pulumi.Float64PtrOutput)
}

// F1-score, is a measure of a model’s accuracy on a dataset
func (o ModelEvaluationResultMetricOutput) MicroF1() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ModelEvaluationResultMetric) *float64 { return v.MicroF1 }).(pulumi.Float64PtrOutput)
}

// Precision refers to the number of true positives divided by the total number of positive predictions (i.e., the number of true positives plus the number of false positives)
func (o ModelEvaluationResultMetricOutput) MicroPrecision() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ModelEvaluationResultMetric) *float64 { return v.MicroPrecision }).(pulumi.Float64PtrOutput)
}

// Measures the model's ability to predict actual positive classes. It is the ratio between the predicted true positives and what was actually tagged. The recall metric reveals how many of the predicted classes are correct.
func (o ModelEvaluationResultMetricOutput) MicroRecall() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ModelEvaluationResultMetric) *float64 { return v.MicroRecall }).(pulumi.Float64PtrOutput)
}

// F1-score, is a measure of a model’s accuracy on a dataset
func (o ModelEvaluationResultMetricOutput) WeightedF1() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ModelEvaluationResultMetric) *float64 { return v.WeightedF1 }).(pulumi.Float64PtrOutput)
}

// Precision refers to the number of true positives divided by the total number of positive predictions (i.e., the number of true positives plus the number of false positives)
func (o ModelEvaluationResultMetricOutput) WeightedPrecision() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ModelEvaluationResultMetric) *float64 { return v.WeightedPrecision }).(pulumi.Float64PtrOutput)
}

// Measures the model's ability to predict actual positive classes. It is the ratio between the predicted true positives and what was actually tagged. The recall metric reveals how many of the predicted classes are correct.
func (o ModelEvaluationResultMetricOutput) WeightedRecall() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ModelEvaluationResultMetric) *float64 { return v.WeightedRecall }).(pulumi.Float64PtrOutput)
}

type ModelEvaluationResultMetricArrayOutput struct{ *pulumi.OutputState }

func (ModelEvaluationResultMetricArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelEvaluationResultMetric)(nil)).Elem()
}

func (o ModelEvaluationResultMetricArrayOutput) ToModelEvaluationResultMetricArrayOutput() ModelEvaluationResultMetricArrayOutput {
	return o
}

func (o ModelEvaluationResultMetricArrayOutput) ToModelEvaluationResultMetricArrayOutputWithContext(ctx context.Context) ModelEvaluationResultMetricArrayOutput {
	return o
}

func (o ModelEvaluationResultMetricArrayOutput) Index(i pulumi.IntInput) ModelEvaluationResultMetricOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ModelEvaluationResultMetric {
		return vs[0].([]ModelEvaluationResultMetric)[vs[1].(int)]
	}).(ModelEvaluationResultMetricOutput)
}

type ModelModelDetails struct {
	// possible text classification modes
	ClassificationMode *ModelModelDetailsClassificationMode `pulumi:"classificationMode"`
	// supported language default value is en
	LanguageCode *string `pulumi:"languageCode"`
	// Model type
	ModelType string `pulumi:"modelType"`
	// Optional pre trained model version. if nothing specified latest pre trained model will be used.  Supported versions can be found at /modelTypes/{modelType}
	Version *string `pulumi:"version"`
}

// ModelModelDetailsInput is an input type that accepts ModelModelDetailsArgs and ModelModelDetailsOutput values.
// You can construct a concrete instance of `ModelModelDetailsInput` via:
//
//	ModelModelDetailsArgs{...}
type ModelModelDetailsInput interface {
	pulumi.Input

	ToModelModelDetailsOutput() ModelModelDetailsOutput
	ToModelModelDetailsOutputWithContext(context.Context) ModelModelDetailsOutput
}

type ModelModelDetailsArgs struct {
	// possible text classification modes
	ClassificationMode ModelModelDetailsClassificationModePtrInput `pulumi:"classificationMode"`
	// supported language default value is en
	LanguageCode pulumi.StringPtrInput `pulumi:"languageCode"`
	// Model type
	ModelType pulumi.StringInput `pulumi:"modelType"`
	// Optional pre trained model version. if nothing specified latest pre trained model will be used.  Supported versions can be found at /modelTypes/{modelType}
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (ModelModelDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelModelDetails)(nil)).Elem()
}

func (i ModelModelDetailsArgs) ToModelModelDetailsOutput() ModelModelDetailsOutput {
	return i.ToModelModelDetailsOutputWithContext(context.Background())
}

func (i ModelModelDetailsArgs) ToModelModelDetailsOutputWithContext(ctx context.Context) ModelModelDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelModelDetailsOutput)
}

func (i ModelModelDetailsArgs) ToModelModelDetailsPtrOutput() ModelModelDetailsPtrOutput {
	return i.ToModelModelDetailsPtrOutputWithContext(context.Background())
}

func (i ModelModelDetailsArgs) ToModelModelDetailsPtrOutputWithContext(ctx context.Context) ModelModelDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelModelDetailsOutput).ToModelModelDetailsPtrOutputWithContext(ctx)
}

// ModelModelDetailsPtrInput is an input type that accepts ModelModelDetailsArgs, ModelModelDetailsPtr and ModelModelDetailsPtrOutput values.
// You can construct a concrete instance of `ModelModelDetailsPtrInput` via:
//
//	        ModelModelDetailsArgs{...}
//
//	or:
//
//	        nil
type ModelModelDetailsPtrInput interface {
	pulumi.Input

	ToModelModelDetailsPtrOutput() ModelModelDetailsPtrOutput
	ToModelModelDetailsPtrOutputWithContext(context.Context) ModelModelDetailsPtrOutput
}

type modelModelDetailsPtrType ModelModelDetailsArgs

func ModelModelDetailsPtr(v *ModelModelDetailsArgs) ModelModelDetailsPtrInput {
	return (*modelModelDetailsPtrType)(v)
}

func (*modelModelDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelModelDetails)(nil)).Elem()
}

func (i *modelModelDetailsPtrType) ToModelModelDetailsPtrOutput() ModelModelDetailsPtrOutput {
	return i.ToModelModelDetailsPtrOutputWithContext(context.Background())
}

func (i *modelModelDetailsPtrType) ToModelModelDetailsPtrOutputWithContext(ctx context.Context) ModelModelDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelModelDetailsPtrOutput)
}

type ModelModelDetailsOutput struct{ *pulumi.OutputState }

func (ModelModelDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelModelDetails)(nil)).Elem()
}

func (o ModelModelDetailsOutput) ToModelModelDetailsOutput() ModelModelDetailsOutput {
	return o
}

func (o ModelModelDetailsOutput) ToModelModelDetailsOutputWithContext(ctx context.Context) ModelModelDetailsOutput {
	return o
}

func (o ModelModelDetailsOutput) ToModelModelDetailsPtrOutput() ModelModelDetailsPtrOutput {
	return o.ToModelModelDetailsPtrOutputWithContext(context.Background())
}

func (o ModelModelDetailsOutput) ToModelModelDetailsPtrOutputWithContext(ctx context.Context) ModelModelDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelModelDetails) *ModelModelDetails {
		return &v
	}).(ModelModelDetailsPtrOutput)
}

// possible text classification modes
func (o ModelModelDetailsOutput) ClassificationMode() ModelModelDetailsClassificationModePtrOutput {
	return o.ApplyT(func(v ModelModelDetails) *ModelModelDetailsClassificationMode { return v.ClassificationMode }).(ModelModelDetailsClassificationModePtrOutput)
}

// supported language default value is en
func (o ModelModelDetailsOutput) LanguageCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelModelDetails) *string { return v.LanguageCode }).(pulumi.StringPtrOutput)
}

// Model type
func (o ModelModelDetailsOutput) ModelType() pulumi.StringOutput {
	return o.ApplyT(func(v ModelModelDetails) string { return v.ModelType }).(pulumi.StringOutput)
}

// Optional pre trained model version. if nothing specified latest pre trained model will be used.  Supported versions can be found at /modelTypes/{modelType}
func (o ModelModelDetailsOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelModelDetails) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ModelModelDetailsPtrOutput struct{ *pulumi.OutputState }

func (ModelModelDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelModelDetails)(nil)).Elem()
}

func (o ModelModelDetailsPtrOutput) ToModelModelDetailsPtrOutput() ModelModelDetailsPtrOutput {
	return o
}

func (o ModelModelDetailsPtrOutput) ToModelModelDetailsPtrOutputWithContext(ctx context.Context) ModelModelDetailsPtrOutput {
	return o
}

func (o ModelModelDetailsPtrOutput) Elem() ModelModelDetailsOutput {
	return o.ApplyT(func(v *ModelModelDetails) ModelModelDetails {
		if v != nil {
			return *v
		}
		var ret ModelModelDetails
		return ret
	}).(ModelModelDetailsOutput)
}

// possible text classification modes
func (o ModelModelDetailsPtrOutput) ClassificationMode() ModelModelDetailsClassificationModePtrOutput {
	return o.ApplyT(func(v *ModelModelDetails) *ModelModelDetailsClassificationMode {
		if v == nil {
			return nil
		}
		return v.ClassificationMode
	}).(ModelModelDetailsClassificationModePtrOutput)
}

// supported language default value is en
func (o ModelModelDetailsPtrOutput) LanguageCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelModelDetails) *string {
		if v == nil {
			return nil
		}
		return v.LanguageCode
	}).(pulumi.StringPtrOutput)
}

// Model type
func (o ModelModelDetailsPtrOutput) ModelType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelModelDetails) *string {
		if v == nil {
			return nil
		}
		return &v.ModelType
	}).(pulumi.StringPtrOutput)
}

// Optional pre trained model version. if nothing specified latest pre trained model will be used.  Supported versions can be found at /modelTypes/{modelType}
func (o ModelModelDetailsPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelModelDetails) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type ModelModelDetailsClassificationMode struct {
	// classification Modes
	ClassificationMode string `pulumi:"classificationMode"`
	// Optional if nothing specified latest base model will be used for training. Supported versions can be found at /modelTypes/{modelType}
	Version *string `pulumi:"version"`
}

// ModelModelDetailsClassificationModeInput is an input type that accepts ModelModelDetailsClassificationModeArgs and ModelModelDetailsClassificationModeOutput values.
// You can construct a concrete instance of `ModelModelDetailsClassificationModeInput` via:
//
//	ModelModelDetailsClassificationModeArgs{...}
type ModelModelDetailsClassificationModeInput interface {
	pulumi.Input

	ToModelModelDetailsClassificationModeOutput() ModelModelDetailsClassificationModeOutput
	ToModelModelDetailsClassificationModeOutputWithContext(context.Context) ModelModelDetailsClassificationModeOutput
}

type ModelModelDetailsClassificationModeArgs struct {
	// classification Modes
	ClassificationMode pulumi.StringInput `pulumi:"classificationMode"`
	// Optional if nothing specified latest base model will be used for training. Supported versions can be found at /modelTypes/{modelType}
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (ModelModelDetailsClassificationModeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelModelDetailsClassificationMode)(nil)).Elem()
}

func (i ModelModelDetailsClassificationModeArgs) ToModelModelDetailsClassificationModeOutput() ModelModelDetailsClassificationModeOutput {
	return i.ToModelModelDetailsClassificationModeOutputWithContext(context.Background())
}

func (i ModelModelDetailsClassificationModeArgs) ToModelModelDetailsClassificationModeOutputWithContext(ctx context.Context) ModelModelDetailsClassificationModeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelModelDetailsClassificationModeOutput)
}

func (i ModelModelDetailsClassificationModeArgs) ToModelModelDetailsClassificationModePtrOutput() ModelModelDetailsClassificationModePtrOutput {
	return i.ToModelModelDetailsClassificationModePtrOutputWithContext(context.Background())
}

func (i ModelModelDetailsClassificationModeArgs) ToModelModelDetailsClassificationModePtrOutputWithContext(ctx context.Context) ModelModelDetailsClassificationModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelModelDetailsClassificationModeOutput).ToModelModelDetailsClassificationModePtrOutputWithContext(ctx)
}

// ModelModelDetailsClassificationModePtrInput is an input type that accepts ModelModelDetailsClassificationModeArgs, ModelModelDetailsClassificationModePtr and ModelModelDetailsClassificationModePtrOutput values.
// You can construct a concrete instance of `ModelModelDetailsClassificationModePtrInput` via:
//
//	        ModelModelDetailsClassificationModeArgs{...}
//
//	or:
//
//	        nil
type ModelModelDetailsClassificationModePtrInput interface {
	pulumi.Input

	ToModelModelDetailsClassificationModePtrOutput() ModelModelDetailsClassificationModePtrOutput
	ToModelModelDetailsClassificationModePtrOutputWithContext(context.Context) ModelModelDetailsClassificationModePtrOutput
}

type modelModelDetailsClassificationModePtrType ModelModelDetailsClassificationModeArgs

func ModelModelDetailsClassificationModePtr(v *ModelModelDetailsClassificationModeArgs) ModelModelDetailsClassificationModePtrInput {
	return (*modelModelDetailsClassificationModePtrType)(v)
}

func (*modelModelDetailsClassificationModePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelModelDetailsClassificationMode)(nil)).Elem()
}

func (i *modelModelDetailsClassificationModePtrType) ToModelModelDetailsClassificationModePtrOutput() ModelModelDetailsClassificationModePtrOutput {
	return i.ToModelModelDetailsClassificationModePtrOutputWithContext(context.Background())
}

func (i *modelModelDetailsClassificationModePtrType) ToModelModelDetailsClassificationModePtrOutputWithContext(ctx context.Context) ModelModelDetailsClassificationModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelModelDetailsClassificationModePtrOutput)
}

type ModelModelDetailsClassificationModeOutput struct{ *pulumi.OutputState }

func (ModelModelDetailsClassificationModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelModelDetailsClassificationMode)(nil)).Elem()
}

func (o ModelModelDetailsClassificationModeOutput) ToModelModelDetailsClassificationModeOutput() ModelModelDetailsClassificationModeOutput {
	return o
}

func (o ModelModelDetailsClassificationModeOutput) ToModelModelDetailsClassificationModeOutputWithContext(ctx context.Context) ModelModelDetailsClassificationModeOutput {
	return o
}

func (o ModelModelDetailsClassificationModeOutput) ToModelModelDetailsClassificationModePtrOutput() ModelModelDetailsClassificationModePtrOutput {
	return o.ToModelModelDetailsClassificationModePtrOutputWithContext(context.Background())
}

func (o ModelModelDetailsClassificationModeOutput) ToModelModelDetailsClassificationModePtrOutputWithContext(ctx context.Context) ModelModelDetailsClassificationModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelModelDetailsClassificationMode) *ModelModelDetailsClassificationMode {
		return &v
	}).(ModelModelDetailsClassificationModePtrOutput)
}

// classification Modes
func (o ModelModelDetailsClassificationModeOutput) ClassificationMode() pulumi.StringOutput {
	return o.ApplyT(func(v ModelModelDetailsClassificationMode) string { return v.ClassificationMode }).(pulumi.StringOutput)
}

// Optional if nothing specified latest base model will be used for training. Supported versions can be found at /modelTypes/{modelType}
func (o ModelModelDetailsClassificationModeOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelModelDetailsClassificationMode) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ModelModelDetailsClassificationModePtrOutput struct{ *pulumi.OutputState }

func (ModelModelDetailsClassificationModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelModelDetailsClassificationMode)(nil)).Elem()
}

func (o ModelModelDetailsClassificationModePtrOutput) ToModelModelDetailsClassificationModePtrOutput() ModelModelDetailsClassificationModePtrOutput {
	return o
}

func (o ModelModelDetailsClassificationModePtrOutput) ToModelModelDetailsClassificationModePtrOutputWithContext(ctx context.Context) ModelModelDetailsClassificationModePtrOutput {
	return o
}

func (o ModelModelDetailsClassificationModePtrOutput) Elem() ModelModelDetailsClassificationModeOutput {
	return o.ApplyT(func(v *ModelModelDetailsClassificationMode) ModelModelDetailsClassificationMode {
		if v != nil {
			return *v
		}
		var ret ModelModelDetailsClassificationMode
		return ret
	}).(ModelModelDetailsClassificationModeOutput)
}

// classification Modes
func (o ModelModelDetailsClassificationModePtrOutput) ClassificationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelModelDetailsClassificationMode) *string {
		if v == nil {
			return nil
		}
		return &v.ClassificationMode
	}).(pulumi.StringPtrOutput)
}

// Optional if nothing specified latest base model will be used for training. Supported versions can be found at /modelTypes/{modelType}
func (o ModelModelDetailsClassificationModePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelModelDetailsClassificationMode) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type ModelTestStrategy struct {
	// This information will define the test strategy different datasets for test and validation(optional) dataset.
	StrategyType string `pulumi:"strategyType"`
	// Possible data set type
	TestingDataset ModelTestStrategyTestingDataset `pulumi:"testingDataset"`
	// Possible data set type
	ValidationDataset *ModelTestStrategyValidationDataset `pulumi:"validationDataset"`
}

// ModelTestStrategyInput is an input type that accepts ModelTestStrategyArgs and ModelTestStrategyOutput values.
// You can construct a concrete instance of `ModelTestStrategyInput` via:
//
//	ModelTestStrategyArgs{...}
type ModelTestStrategyInput interface {
	pulumi.Input

	ToModelTestStrategyOutput() ModelTestStrategyOutput
	ToModelTestStrategyOutputWithContext(context.Context) ModelTestStrategyOutput
}

type ModelTestStrategyArgs struct {
	// This information will define the test strategy different datasets for test and validation(optional) dataset.
	StrategyType pulumi.StringInput `pulumi:"strategyType"`
	// Possible data set type
	TestingDataset ModelTestStrategyTestingDatasetInput `pulumi:"testingDataset"`
	// Possible data set type
	ValidationDataset ModelTestStrategyValidationDatasetPtrInput `pulumi:"validationDataset"`
}

func (ModelTestStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelTestStrategy)(nil)).Elem()
}

func (i ModelTestStrategyArgs) ToModelTestStrategyOutput() ModelTestStrategyOutput {
	return i.ToModelTestStrategyOutputWithContext(context.Background())
}

func (i ModelTestStrategyArgs) ToModelTestStrategyOutputWithContext(ctx context.Context) ModelTestStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelTestStrategyOutput)
}

func (i ModelTestStrategyArgs) ToModelTestStrategyPtrOutput() ModelTestStrategyPtrOutput {
	return i.ToModelTestStrategyPtrOutputWithContext(context.Background())
}

func (i ModelTestStrategyArgs) ToModelTestStrategyPtrOutputWithContext(ctx context.Context) ModelTestStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelTestStrategyOutput).ToModelTestStrategyPtrOutputWithContext(ctx)
}

// ModelTestStrategyPtrInput is an input type that accepts ModelTestStrategyArgs, ModelTestStrategyPtr and ModelTestStrategyPtrOutput values.
// You can construct a concrete instance of `ModelTestStrategyPtrInput` via:
//
//	        ModelTestStrategyArgs{...}
//
//	or:
//
//	        nil
type ModelTestStrategyPtrInput interface {
	pulumi.Input

	ToModelTestStrategyPtrOutput() ModelTestStrategyPtrOutput
	ToModelTestStrategyPtrOutputWithContext(context.Context) ModelTestStrategyPtrOutput
}

type modelTestStrategyPtrType ModelTestStrategyArgs

func ModelTestStrategyPtr(v *ModelTestStrategyArgs) ModelTestStrategyPtrInput {
	return (*modelTestStrategyPtrType)(v)
}

func (*modelTestStrategyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelTestStrategy)(nil)).Elem()
}

func (i *modelTestStrategyPtrType) ToModelTestStrategyPtrOutput() ModelTestStrategyPtrOutput {
	return i.ToModelTestStrategyPtrOutputWithContext(context.Background())
}

func (i *modelTestStrategyPtrType) ToModelTestStrategyPtrOutputWithContext(ctx context.Context) ModelTestStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelTestStrategyPtrOutput)
}

type ModelTestStrategyOutput struct{ *pulumi.OutputState }

func (ModelTestStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelTestStrategy)(nil)).Elem()
}

func (o ModelTestStrategyOutput) ToModelTestStrategyOutput() ModelTestStrategyOutput {
	return o
}

func (o ModelTestStrategyOutput) ToModelTestStrategyOutputWithContext(ctx context.Context) ModelTestStrategyOutput {
	return o
}

func (o ModelTestStrategyOutput) ToModelTestStrategyPtrOutput() ModelTestStrategyPtrOutput {
	return o.ToModelTestStrategyPtrOutputWithContext(context.Background())
}

func (o ModelTestStrategyOutput) ToModelTestStrategyPtrOutputWithContext(ctx context.Context) ModelTestStrategyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelTestStrategy) *ModelTestStrategy {
		return &v
	}).(ModelTestStrategyPtrOutput)
}

// This information will define the test strategy different datasets for test and validation(optional) dataset.
func (o ModelTestStrategyOutput) StrategyType() pulumi.StringOutput {
	return o.ApplyT(func(v ModelTestStrategy) string { return v.StrategyType }).(pulumi.StringOutput)
}

// Possible data set type
func (o ModelTestStrategyOutput) TestingDataset() ModelTestStrategyTestingDatasetOutput {
	return o.ApplyT(func(v ModelTestStrategy) ModelTestStrategyTestingDataset { return v.TestingDataset }).(ModelTestStrategyTestingDatasetOutput)
}

// Possible data set type
func (o ModelTestStrategyOutput) ValidationDataset() ModelTestStrategyValidationDatasetPtrOutput {
	return o.ApplyT(func(v ModelTestStrategy) *ModelTestStrategyValidationDataset { return v.ValidationDataset }).(ModelTestStrategyValidationDatasetPtrOutput)
}

type ModelTestStrategyPtrOutput struct{ *pulumi.OutputState }

func (ModelTestStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelTestStrategy)(nil)).Elem()
}

func (o ModelTestStrategyPtrOutput) ToModelTestStrategyPtrOutput() ModelTestStrategyPtrOutput {
	return o
}

func (o ModelTestStrategyPtrOutput) ToModelTestStrategyPtrOutputWithContext(ctx context.Context) ModelTestStrategyPtrOutput {
	return o
}

func (o ModelTestStrategyPtrOutput) Elem() ModelTestStrategyOutput {
	return o.ApplyT(func(v *ModelTestStrategy) ModelTestStrategy {
		if v != nil {
			return *v
		}
		var ret ModelTestStrategy
		return ret
	}).(ModelTestStrategyOutput)
}

// This information will define the test strategy different datasets for test and validation(optional) dataset.
func (o ModelTestStrategyPtrOutput) StrategyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelTestStrategy) *string {
		if v == nil {
			return nil
		}
		return &v.StrategyType
	}).(pulumi.StringPtrOutput)
}

// Possible data set type
func (o ModelTestStrategyPtrOutput) TestingDataset() ModelTestStrategyTestingDatasetPtrOutput {
	return o.ApplyT(func(v *ModelTestStrategy) *ModelTestStrategyTestingDataset {
		if v == nil {
			return nil
		}
		return &v.TestingDataset
	}).(ModelTestStrategyTestingDatasetPtrOutput)
}

// Possible data set type
func (o ModelTestStrategyPtrOutput) ValidationDataset() ModelTestStrategyValidationDatasetPtrOutput {
	return o.ApplyT(func(v *ModelTestStrategy) *ModelTestStrategyValidationDataset {
		if v == nil {
			return nil
		}
		return v.ValidationDataset
	}).(ModelTestStrategyValidationDatasetPtrOutput)
}

type ModelTestStrategyTestingDataset struct {
	// Data Science Labelling Service OCID
	DatasetId *string `pulumi:"datasetId"`
	// Possible data sets
	DatasetType string `pulumi:"datasetType"`
	// Possible object storage location types
	LocationDetails *ModelTestStrategyTestingDatasetLocationDetails `pulumi:"locationDetails"`
}

// ModelTestStrategyTestingDatasetInput is an input type that accepts ModelTestStrategyTestingDatasetArgs and ModelTestStrategyTestingDatasetOutput values.
// You can construct a concrete instance of `ModelTestStrategyTestingDatasetInput` via:
//
//	ModelTestStrategyTestingDatasetArgs{...}
type ModelTestStrategyTestingDatasetInput interface {
	pulumi.Input

	ToModelTestStrategyTestingDatasetOutput() ModelTestStrategyTestingDatasetOutput
	ToModelTestStrategyTestingDatasetOutputWithContext(context.Context) ModelTestStrategyTestingDatasetOutput
}

type ModelTestStrategyTestingDatasetArgs struct {
	// Data Science Labelling Service OCID
	DatasetId pulumi.StringPtrInput `pulumi:"datasetId"`
	// Possible data sets
	DatasetType pulumi.StringInput `pulumi:"datasetType"`
	// Possible object storage location types
	LocationDetails ModelTestStrategyTestingDatasetLocationDetailsPtrInput `pulumi:"locationDetails"`
}

func (ModelTestStrategyTestingDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelTestStrategyTestingDataset)(nil)).Elem()
}

func (i ModelTestStrategyTestingDatasetArgs) ToModelTestStrategyTestingDatasetOutput() ModelTestStrategyTestingDatasetOutput {
	return i.ToModelTestStrategyTestingDatasetOutputWithContext(context.Background())
}

func (i ModelTestStrategyTestingDatasetArgs) ToModelTestStrategyTestingDatasetOutputWithContext(ctx context.Context) ModelTestStrategyTestingDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelTestStrategyTestingDatasetOutput)
}

func (i ModelTestStrategyTestingDatasetArgs) ToModelTestStrategyTestingDatasetPtrOutput() ModelTestStrategyTestingDatasetPtrOutput {
	return i.ToModelTestStrategyTestingDatasetPtrOutputWithContext(context.Background())
}

func (i ModelTestStrategyTestingDatasetArgs) ToModelTestStrategyTestingDatasetPtrOutputWithContext(ctx context.Context) ModelTestStrategyTestingDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelTestStrategyTestingDatasetOutput).ToModelTestStrategyTestingDatasetPtrOutputWithContext(ctx)
}

// ModelTestStrategyTestingDatasetPtrInput is an input type that accepts ModelTestStrategyTestingDatasetArgs, ModelTestStrategyTestingDatasetPtr and ModelTestStrategyTestingDatasetPtrOutput values.
// You can construct a concrete instance of `ModelTestStrategyTestingDatasetPtrInput` via:
//
//	        ModelTestStrategyTestingDatasetArgs{...}
//
//	or:
//
//	        nil
type ModelTestStrategyTestingDatasetPtrInput interface {
	pulumi.Input

	ToModelTestStrategyTestingDatasetPtrOutput() ModelTestStrategyTestingDatasetPtrOutput
	ToModelTestStrategyTestingDatasetPtrOutputWithContext(context.Context) ModelTestStrategyTestingDatasetPtrOutput
}

type modelTestStrategyTestingDatasetPtrType ModelTestStrategyTestingDatasetArgs

func ModelTestStrategyTestingDatasetPtr(v *ModelTestStrategyTestingDatasetArgs) ModelTestStrategyTestingDatasetPtrInput {
	return (*modelTestStrategyTestingDatasetPtrType)(v)
}

func (*modelTestStrategyTestingDatasetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelTestStrategyTestingDataset)(nil)).Elem()
}

func (i *modelTestStrategyTestingDatasetPtrType) ToModelTestStrategyTestingDatasetPtrOutput() ModelTestStrategyTestingDatasetPtrOutput {
	return i.ToModelTestStrategyTestingDatasetPtrOutputWithContext(context.Background())
}

func (i *modelTestStrategyTestingDatasetPtrType) ToModelTestStrategyTestingDatasetPtrOutputWithContext(ctx context.Context) ModelTestStrategyTestingDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelTestStrategyTestingDatasetPtrOutput)
}

type ModelTestStrategyTestingDatasetOutput struct{ *pulumi.OutputState }

func (ModelTestStrategyTestingDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelTestStrategyTestingDataset)(nil)).Elem()
}

func (o ModelTestStrategyTestingDatasetOutput) ToModelTestStrategyTestingDatasetOutput() ModelTestStrategyTestingDatasetOutput {
	return o
}

func (o ModelTestStrategyTestingDatasetOutput) ToModelTestStrategyTestingDatasetOutputWithContext(ctx context.Context) ModelTestStrategyTestingDatasetOutput {
	return o
}

func (o ModelTestStrategyTestingDatasetOutput) ToModelTestStrategyTestingDatasetPtrOutput() ModelTestStrategyTestingDatasetPtrOutput {
	return o.ToModelTestStrategyTestingDatasetPtrOutputWithContext(context.Background())
}

func (o ModelTestStrategyTestingDatasetOutput) ToModelTestStrategyTestingDatasetPtrOutputWithContext(ctx context.Context) ModelTestStrategyTestingDatasetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelTestStrategyTestingDataset) *ModelTestStrategyTestingDataset {
		return &v
	}).(ModelTestStrategyTestingDatasetPtrOutput)
}

// Data Science Labelling Service OCID
func (o ModelTestStrategyTestingDatasetOutput) DatasetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelTestStrategyTestingDataset) *string { return v.DatasetId }).(pulumi.StringPtrOutput)
}

// Possible data sets
func (o ModelTestStrategyTestingDatasetOutput) DatasetType() pulumi.StringOutput {
	return o.ApplyT(func(v ModelTestStrategyTestingDataset) string { return v.DatasetType }).(pulumi.StringOutput)
}

// Possible object storage location types
func (o ModelTestStrategyTestingDatasetOutput) LocationDetails() ModelTestStrategyTestingDatasetLocationDetailsPtrOutput {
	return o.ApplyT(func(v ModelTestStrategyTestingDataset) *ModelTestStrategyTestingDatasetLocationDetails {
		return v.LocationDetails
	}).(ModelTestStrategyTestingDatasetLocationDetailsPtrOutput)
}

type ModelTestStrategyTestingDatasetPtrOutput struct{ *pulumi.OutputState }

func (ModelTestStrategyTestingDatasetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelTestStrategyTestingDataset)(nil)).Elem()
}

func (o ModelTestStrategyTestingDatasetPtrOutput) ToModelTestStrategyTestingDatasetPtrOutput() ModelTestStrategyTestingDatasetPtrOutput {
	return o
}

func (o ModelTestStrategyTestingDatasetPtrOutput) ToModelTestStrategyTestingDatasetPtrOutputWithContext(ctx context.Context) ModelTestStrategyTestingDatasetPtrOutput {
	return o
}

func (o ModelTestStrategyTestingDatasetPtrOutput) Elem() ModelTestStrategyTestingDatasetOutput {
	return o.ApplyT(func(v *ModelTestStrategyTestingDataset) ModelTestStrategyTestingDataset {
		if v != nil {
			return *v
		}
		var ret ModelTestStrategyTestingDataset
		return ret
	}).(ModelTestStrategyTestingDatasetOutput)
}

// Data Science Labelling Service OCID
func (o ModelTestStrategyTestingDatasetPtrOutput) DatasetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelTestStrategyTestingDataset) *string {
		if v == nil {
			return nil
		}
		return v.DatasetId
	}).(pulumi.StringPtrOutput)
}

// Possible data sets
func (o ModelTestStrategyTestingDatasetPtrOutput) DatasetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelTestStrategyTestingDataset) *string {
		if v == nil {
			return nil
		}
		return &v.DatasetType
	}).(pulumi.StringPtrOutput)
}

// Possible object storage location types
func (o ModelTestStrategyTestingDatasetPtrOutput) LocationDetails() ModelTestStrategyTestingDatasetLocationDetailsPtrOutput {
	return o.ApplyT(func(v *ModelTestStrategyTestingDataset) *ModelTestStrategyTestingDatasetLocationDetails {
		if v == nil {
			return nil
		}
		return v.LocationDetails
	}).(ModelTestStrategyTestingDatasetLocationDetailsPtrOutput)
}

type ModelTestStrategyTestingDatasetLocationDetails struct {
	// Object storage bucket name
	Bucket string `pulumi:"bucket"`
	// Possible object storage location types
	LocationType string `pulumi:"locationType"`
	// Object storage namespace
	Namespace string `pulumi:"namespace"`
	// Array of files which need to be processed in the bucket
	ObjectNames []string `pulumi:"objectNames"`
}

// ModelTestStrategyTestingDatasetLocationDetailsInput is an input type that accepts ModelTestStrategyTestingDatasetLocationDetailsArgs and ModelTestStrategyTestingDatasetLocationDetailsOutput values.
// You can construct a concrete instance of `ModelTestStrategyTestingDatasetLocationDetailsInput` via:
//
//	ModelTestStrategyTestingDatasetLocationDetailsArgs{...}
type ModelTestStrategyTestingDatasetLocationDetailsInput interface {
	pulumi.Input

	ToModelTestStrategyTestingDatasetLocationDetailsOutput() ModelTestStrategyTestingDatasetLocationDetailsOutput
	ToModelTestStrategyTestingDatasetLocationDetailsOutputWithContext(context.Context) ModelTestStrategyTestingDatasetLocationDetailsOutput
}

type ModelTestStrategyTestingDatasetLocationDetailsArgs struct {
	// Object storage bucket name
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// Possible object storage location types
	LocationType pulumi.StringInput `pulumi:"locationType"`
	// Object storage namespace
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// Array of files which need to be processed in the bucket
	ObjectNames pulumi.StringArrayInput `pulumi:"objectNames"`
}

func (ModelTestStrategyTestingDatasetLocationDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelTestStrategyTestingDatasetLocationDetails)(nil)).Elem()
}

func (i ModelTestStrategyTestingDatasetLocationDetailsArgs) ToModelTestStrategyTestingDatasetLocationDetailsOutput() ModelTestStrategyTestingDatasetLocationDetailsOutput {
	return i.ToModelTestStrategyTestingDatasetLocationDetailsOutputWithContext(context.Background())
}

func (i ModelTestStrategyTestingDatasetLocationDetailsArgs) ToModelTestStrategyTestingDatasetLocationDetailsOutputWithContext(ctx context.Context) ModelTestStrategyTestingDatasetLocationDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelTestStrategyTestingDatasetLocationDetailsOutput)
}

func (i ModelTestStrategyTestingDatasetLocationDetailsArgs) ToModelTestStrategyTestingDatasetLocationDetailsPtrOutput() ModelTestStrategyTestingDatasetLocationDetailsPtrOutput {
	return i.ToModelTestStrategyTestingDatasetLocationDetailsPtrOutputWithContext(context.Background())
}

func (i ModelTestStrategyTestingDatasetLocationDetailsArgs) ToModelTestStrategyTestingDatasetLocationDetailsPtrOutputWithContext(ctx context.Context) ModelTestStrategyTestingDatasetLocationDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelTestStrategyTestingDatasetLocationDetailsOutput).ToModelTestStrategyTestingDatasetLocationDetailsPtrOutputWithContext(ctx)
}

// ModelTestStrategyTestingDatasetLocationDetailsPtrInput is an input type that accepts ModelTestStrategyTestingDatasetLocationDetailsArgs, ModelTestStrategyTestingDatasetLocationDetailsPtr and ModelTestStrategyTestingDatasetLocationDetailsPtrOutput values.
// You can construct a concrete instance of `ModelTestStrategyTestingDatasetLocationDetailsPtrInput` via:
//
//	        ModelTestStrategyTestingDatasetLocationDetailsArgs{...}
//
//	or:
//
//	        nil
type ModelTestStrategyTestingDatasetLocationDetailsPtrInput interface {
	pulumi.Input

	ToModelTestStrategyTestingDatasetLocationDetailsPtrOutput() ModelTestStrategyTestingDatasetLocationDetailsPtrOutput
	ToModelTestStrategyTestingDatasetLocationDetailsPtrOutputWithContext(context.Context) ModelTestStrategyTestingDatasetLocationDetailsPtrOutput
}

type modelTestStrategyTestingDatasetLocationDetailsPtrType ModelTestStrategyTestingDatasetLocationDetailsArgs

func ModelTestStrategyTestingDatasetLocationDetailsPtr(v *ModelTestStrategyTestingDatasetLocationDetailsArgs) ModelTestStrategyTestingDatasetLocationDetailsPtrInput {
	return (*modelTestStrategyTestingDatasetLocationDetailsPtrType)(v)
}

func (*modelTestStrategyTestingDatasetLocationDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelTestStrategyTestingDatasetLocationDetails)(nil)).Elem()
}

func (i *modelTestStrategyTestingDatasetLocationDetailsPtrType) ToModelTestStrategyTestingDatasetLocationDetailsPtrOutput() ModelTestStrategyTestingDatasetLocationDetailsPtrOutput {
	return i.ToModelTestStrategyTestingDatasetLocationDetailsPtrOutputWithContext(context.Background())
}

func (i *modelTestStrategyTestingDatasetLocationDetailsPtrType) ToModelTestStrategyTestingDatasetLocationDetailsPtrOutputWithContext(ctx context.Context) ModelTestStrategyTestingDatasetLocationDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelTestStrategyTestingDatasetLocationDetailsPtrOutput)
}

type ModelTestStrategyTestingDatasetLocationDetailsOutput struct{ *pulumi.OutputState }

func (ModelTestStrategyTestingDatasetLocationDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelTestStrategyTestingDatasetLocationDetails)(nil)).Elem()
}

func (o ModelTestStrategyTestingDatasetLocationDetailsOutput) ToModelTestStrategyTestingDatasetLocationDetailsOutput() ModelTestStrategyTestingDatasetLocationDetailsOutput {
	return o
}

func (o ModelTestStrategyTestingDatasetLocationDetailsOutput) ToModelTestStrategyTestingDatasetLocationDetailsOutputWithContext(ctx context.Context) ModelTestStrategyTestingDatasetLocationDetailsOutput {
	return o
}

func (o ModelTestStrategyTestingDatasetLocationDetailsOutput) ToModelTestStrategyTestingDatasetLocationDetailsPtrOutput() ModelTestStrategyTestingDatasetLocationDetailsPtrOutput {
	return o.ToModelTestStrategyTestingDatasetLocationDetailsPtrOutputWithContext(context.Background())
}

func (o ModelTestStrategyTestingDatasetLocationDetailsOutput) ToModelTestStrategyTestingDatasetLocationDetailsPtrOutputWithContext(ctx context.Context) ModelTestStrategyTestingDatasetLocationDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelTestStrategyTestingDatasetLocationDetails) *ModelTestStrategyTestingDatasetLocationDetails {
		return &v
	}).(ModelTestStrategyTestingDatasetLocationDetailsPtrOutput)
}

// Object storage bucket name
func (o ModelTestStrategyTestingDatasetLocationDetailsOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v ModelTestStrategyTestingDatasetLocationDetails) string { return v.Bucket }).(pulumi.StringOutput)
}

// Possible object storage location types
func (o ModelTestStrategyTestingDatasetLocationDetailsOutput) LocationType() pulumi.StringOutput {
	return o.ApplyT(func(v ModelTestStrategyTestingDatasetLocationDetails) string { return v.LocationType }).(pulumi.StringOutput)
}

// Object storage namespace
func (o ModelTestStrategyTestingDatasetLocationDetailsOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v ModelTestStrategyTestingDatasetLocationDetails) string { return v.Namespace }).(pulumi.StringOutput)
}

// Array of files which need to be processed in the bucket
func (o ModelTestStrategyTestingDatasetLocationDetailsOutput) ObjectNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ModelTestStrategyTestingDatasetLocationDetails) []string { return v.ObjectNames }).(pulumi.StringArrayOutput)
}

type ModelTestStrategyTestingDatasetLocationDetailsPtrOutput struct{ *pulumi.OutputState }

func (ModelTestStrategyTestingDatasetLocationDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelTestStrategyTestingDatasetLocationDetails)(nil)).Elem()
}

func (o ModelTestStrategyTestingDatasetLocationDetailsPtrOutput) ToModelTestStrategyTestingDatasetLocationDetailsPtrOutput() ModelTestStrategyTestingDatasetLocationDetailsPtrOutput {
	return o
}

func (o ModelTestStrategyTestingDatasetLocationDetailsPtrOutput) ToModelTestStrategyTestingDatasetLocationDetailsPtrOutputWithContext(ctx context.Context) ModelTestStrategyTestingDatasetLocationDetailsPtrOutput {
	return o
}

func (o ModelTestStrategyTestingDatasetLocationDetailsPtrOutput) Elem() ModelTestStrategyTestingDatasetLocationDetailsOutput {
	return o.ApplyT(func(v *ModelTestStrategyTestingDatasetLocationDetails) ModelTestStrategyTestingDatasetLocationDetails {
		if v != nil {
			return *v
		}
		var ret ModelTestStrategyTestingDatasetLocationDetails
		return ret
	}).(ModelTestStrategyTestingDatasetLocationDetailsOutput)
}

// Object storage bucket name
func (o ModelTestStrategyTestingDatasetLocationDetailsPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelTestStrategyTestingDatasetLocationDetails) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

// Possible object storage location types
func (o ModelTestStrategyTestingDatasetLocationDetailsPtrOutput) LocationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelTestStrategyTestingDatasetLocationDetails) *string {
		if v == nil {
			return nil
		}
		return &v.LocationType
	}).(pulumi.StringPtrOutput)
}

// Object storage namespace
func (o ModelTestStrategyTestingDatasetLocationDetailsPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelTestStrategyTestingDatasetLocationDetails) *string {
		if v == nil {
			return nil
		}
		return &v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Array of files which need to be processed in the bucket
func (o ModelTestStrategyTestingDatasetLocationDetailsPtrOutput) ObjectNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ModelTestStrategyTestingDatasetLocationDetails) []string {
		if v == nil {
			return nil
		}
		return v.ObjectNames
	}).(pulumi.StringArrayOutput)
}

type ModelTestStrategyValidationDataset struct {
	// Data Science Labelling Service OCID
	DatasetId *string `pulumi:"datasetId"`
	// Possible data sets
	DatasetType string `pulumi:"datasetType"`
	// Possible object storage location types
	LocationDetails *ModelTestStrategyValidationDatasetLocationDetails `pulumi:"locationDetails"`
}

// ModelTestStrategyValidationDatasetInput is an input type that accepts ModelTestStrategyValidationDatasetArgs and ModelTestStrategyValidationDatasetOutput values.
// You can construct a concrete instance of `ModelTestStrategyValidationDatasetInput` via:
//
//	ModelTestStrategyValidationDatasetArgs{...}
type ModelTestStrategyValidationDatasetInput interface {
	pulumi.Input

	ToModelTestStrategyValidationDatasetOutput() ModelTestStrategyValidationDatasetOutput
	ToModelTestStrategyValidationDatasetOutputWithContext(context.Context) ModelTestStrategyValidationDatasetOutput
}

type ModelTestStrategyValidationDatasetArgs struct {
	// Data Science Labelling Service OCID
	DatasetId pulumi.StringPtrInput `pulumi:"datasetId"`
	// Possible data sets
	DatasetType pulumi.StringInput `pulumi:"datasetType"`
	// Possible object storage location types
	LocationDetails ModelTestStrategyValidationDatasetLocationDetailsPtrInput `pulumi:"locationDetails"`
}

func (ModelTestStrategyValidationDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelTestStrategyValidationDataset)(nil)).Elem()
}

func (i ModelTestStrategyValidationDatasetArgs) ToModelTestStrategyValidationDatasetOutput() ModelTestStrategyValidationDatasetOutput {
	return i.ToModelTestStrategyValidationDatasetOutputWithContext(context.Background())
}

func (i ModelTestStrategyValidationDatasetArgs) ToModelTestStrategyValidationDatasetOutputWithContext(ctx context.Context) ModelTestStrategyValidationDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelTestStrategyValidationDatasetOutput)
}

func (i ModelTestStrategyValidationDatasetArgs) ToModelTestStrategyValidationDatasetPtrOutput() ModelTestStrategyValidationDatasetPtrOutput {
	return i.ToModelTestStrategyValidationDatasetPtrOutputWithContext(context.Background())
}

func (i ModelTestStrategyValidationDatasetArgs) ToModelTestStrategyValidationDatasetPtrOutputWithContext(ctx context.Context) ModelTestStrategyValidationDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelTestStrategyValidationDatasetOutput).ToModelTestStrategyValidationDatasetPtrOutputWithContext(ctx)
}

// ModelTestStrategyValidationDatasetPtrInput is an input type that accepts ModelTestStrategyValidationDatasetArgs, ModelTestStrategyValidationDatasetPtr and ModelTestStrategyValidationDatasetPtrOutput values.
// You can construct a concrete instance of `ModelTestStrategyValidationDatasetPtrInput` via:
//
//	        ModelTestStrategyValidationDatasetArgs{...}
//
//	or:
//
//	        nil
type ModelTestStrategyValidationDatasetPtrInput interface {
	pulumi.Input

	ToModelTestStrategyValidationDatasetPtrOutput() ModelTestStrategyValidationDatasetPtrOutput
	ToModelTestStrategyValidationDatasetPtrOutputWithContext(context.Context) ModelTestStrategyValidationDatasetPtrOutput
}

type modelTestStrategyValidationDatasetPtrType ModelTestStrategyValidationDatasetArgs

func ModelTestStrategyValidationDatasetPtr(v *ModelTestStrategyValidationDatasetArgs) ModelTestStrategyValidationDatasetPtrInput {
	return (*modelTestStrategyValidationDatasetPtrType)(v)
}

func (*modelTestStrategyValidationDatasetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelTestStrategyValidationDataset)(nil)).Elem()
}

func (i *modelTestStrategyValidationDatasetPtrType) ToModelTestStrategyValidationDatasetPtrOutput() ModelTestStrategyValidationDatasetPtrOutput {
	return i.ToModelTestStrategyValidationDatasetPtrOutputWithContext(context.Background())
}

func (i *modelTestStrategyValidationDatasetPtrType) ToModelTestStrategyValidationDatasetPtrOutputWithContext(ctx context.Context) ModelTestStrategyValidationDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelTestStrategyValidationDatasetPtrOutput)
}

type ModelTestStrategyValidationDatasetOutput struct{ *pulumi.OutputState }

func (ModelTestStrategyValidationDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelTestStrategyValidationDataset)(nil)).Elem()
}

func (o ModelTestStrategyValidationDatasetOutput) ToModelTestStrategyValidationDatasetOutput() ModelTestStrategyValidationDatasetOutput {
	return o
}

func (o ModelTestStrategyValidationDatasetOutput) ToModelTestStrategyValidationDatasetOutputWithContext(ctx context.Context) ModelTestStrategyValidationDatasetOutput {
	return o
}

func (o ModelTestStrategyValidationDatasetOutput) ToModelTestStrategyValidationDatasetPtrOutput() ModelTestStrategyValidationDatasetPtrOutput {
	return o.ToModelTestStrategyValidationDatasetPtrOutputWithContext(context.Background())
}

func (o ModelTestStrategyValidationDatasetOutput) ToModelTestStrategyValidationDatasetPtrOutputWithContext(ctx context.Context) ModelTestStrategyValidationDatasetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelTestStrategyValidationDataset) *ModelTestStrategyValidationDataset {
		return &v
	}).(ModelTestStrategyValidationDatasetPtrOutput)
}

// Data Science Labelling Service OCID
func (o ModelTestStrategyValidationDatasetOutput) DatasetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelTestStrategyValidationDataset) *string { return v.DatasetId }).(pulumi.StringPtrOutput)
}

// Possible data sets
func (o ModelTestStrategyValidationDatasetOutput) DatasetType() pulumi.StringOutput {
	return o.ApplyT(func(v ModelTestStrategyValidationDataset) string { return v.DatasetType }).(pulumi.StringOutput)
}

// Possible object storage location types
func (o ModelTestStrategyValidationDatasetOutput) LocationDetails() ModelTestStrategyValidationDatasetLocationDetailsPtrOutput {
	return o.ApplyT(func(v ModelTestStrategyValidationDataset) *ModelTestStrategyValidationDatasetLocationDetails {
		return v.LocationDetails
	}).(ModelTestStrategyValidationDatasetLocationDetailsPtrOutput)
}

type ModelTestStrategyValidationDatasetPtrOutput struct{ *pulumi.OutputState }

func (ModelTestStrategyValidationDatasetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelTestStrategyValidationDataset)(nil)).Elem()
}

func (o ModelTestStrategyValidationDatasetPtrOutput) ToModelTestStrategyValidationDatasetPtrOutput() ModelTestStrategyValidationDatasetPtrOutput {
	return o
}

func (o ModelTestStrategyValidationDatasetPtrOutput) ToModelTestStrategyValidationDatasetPtrOutputWithContext(ctx context.Context) ModelTestStrategyValidationDatasetPtrOutput {
	return o
}

func (o ModelTestStrategyValidationDatasetPtrOutput) Elem() ModelTestStrategyValidationDatasetOutput {
	return o.ApplyT(func(v *ModelTestStrategyValidationDataset) ModelTestStrategyValidationDataset {
		if v != nil {
			return *v
		}
		var ret ModelTestStrategyValidationDataset
		return ret
	}).(ModelTestStrategyValidationDatasetOutput)
}

// Data Science Labelling Service OCID
func (o ModelTestStrategyValidationDatasetPtrOutput) DatasetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelTestStrategyValidationDataset) *string {
		if v == nil {
			return nil
		}
		return v.DatasetId
	}).(pulumi.StringPtrOutput)
}

// Possible data sets
func (o ModelTestStrategyValidationDatasetPtrOutput) DatasetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelTestStrategyValidationDataset) *string {
		if v == nil {
			return nil
		}
		return &v.DatasetType
	}).(pulumi.StringPtrOutput)
}

// Possible object storage location types
func (o ModelTestStrategyValidationDatasetPtrOutput) LocationDetails() ModelTestStrategyValidationDatasetLocationDetailsPtrOutput {
	return o.ApplyT(func(v *ModelTestStrategyValidationDataset) *ModelTestStrategyValidationDatasetLocationDetails {
		if v == nil {
			return nil
		}
		return v.LocationDetails
	}).(ModelTestStrategyValidationDatasetLocationDetailsPtrOutput)
}

type ModelTestStrategyValidationDatasetLocationDetails struct {
	// Object storage bucket name
	Bucket string `pulumi:"bucket"`
	// Possible object storage location types
	LocationType string `pulumi:"locationType"`
	// Object storage namespace
	Namespace string `pulumi:"namespace"`
	// Array of files which need to be processed in the bucket
	ObjectNames []string `pulumi:"objectNames"`
}

// ModelTestStrategyValidationDatasetLocationDetailsInput is an input type that accepts ModelTestStrategyValidationDatasetLocationDetailsArgs and ModelTestStrategyValidationDatasetLocationDetailsOutput values.
// You can construct a concrete instance of `ModelTestStrategyValidationDatasetLocationDetailsInput` via:
//
//	ModelTestStrategyValidationDatasetLocationDetailsArgs{...}
type ModelTestStrategyValidationDatasetLocationDetailsInput interface {
	pulumi.Input

	ToModelTestStrategyValidationDatasetLocationDetailsOutput() ModelTestStrategyValidationDatasetLocationDetailsOutput
	ToModelTestStrategyValidationDatasetLocationDetailsOutputWithContext(context.Context) ModelTestStrategyValidationDatasetLocationDetailsOutput
}

type ModelTestStrategyValidationDatasetLocationDetailsArgs struct {
	// Object storage bucket name
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// Possible object storage location types
	LocationType pulumi.StringInput `pulumi:"locationType"`
	// Object storage namespace
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// Array of files which need to be processed in the bucket
	ObjectNames pulumi.StringArrayInput `pulumi:"objectNames"`
}

func (ModelTestStrategyValidationDatasetLocationDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelTestStrategyValidationDatasetLocationDetails)(nil)).Elem()
}

func (i ModelTestStrategyValidationDatasetLocationDetailsArgs) ToModelTestStrategyValidationDatasetLocationDetailsOutput() ModelTestStrategyValidationDatasetLocationDetailsOutput {
	return i.ToModelTestStrategyValidationDatasetLocationDetailsOutputWithContext(context.Background())
}

func (i ModelTestStrategyValidationDatasetLocationDetailsArgs) ToModelTestStrategyValidationDatasetLocationDetailsOutputWithContext(ctx context.Context) ModelTestStrategyValidationDatasetLocationDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelTestStrategyValidationDatasetLocationDetailsOutput)
}

func (i ModelTestStrategyValidationDatasetLocationDetailsArgs) ToModelTestStrategyValidationDatasetLocationDetailsPtrOutput() ModelTestStrategyValidationDatasetLocationDetailsPtrOutput {
	return i.ToModelTestStrategyValidationDatasetLocationDetailsPtrOutputWithContext(context.Background())
}

func (i ModelTestStrategyValidationDatasetLocationDetailsArgs) ToModelTestStrategyValidationDatasetLocationDetailsPtrOutputWithContext(ctx context.Context) ModelTestStrategyValidationDatasetLocationDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelTestStrategyValidationDatasetLocationDetailsOutput).ToModelTestStrategyValidationDatasetLocationDetailsPtrOutputWithContext(ctx)
}

// ModelTestStrategyValidationDatasetLocationDetailsPtrInput is an input type that accepts ModelTestStrategyValidationDatasetLocationDetailsArgs, ModelTestStrategyValidationDatasetLocationDetailsPtr and ModelTestStrategyValidationDatasetLocationDetailsPtrOutput values.
// You can construct a concrete instance of `ModelTestStrategyValidationDatasetLocationDetailsPtrInput` via:
//
//	        ModelTestStrategyValidationDatasetLocationDetailsArgs{...}
//
//	or:
//
//	        nil
type ModelTestStrategyValidationDatasetLocationDetailsPtrInput interface {
	pulumi.Input

	ToModelTestStrategyValidationDatasetLocationDetailsPtrOutput() ModelTestStrategyValidationDatasetLocationDetailsPtrOutput
	ToModelTestStrategyValidationDatasetLocationDetailsPtrOutputWithContext(context.Context) ModelTestStrategyValidationDatasetLocationDetailsPtrOutput
}

type modelTestStrategyValidationDatasetLocationDetailsPtrType ModelTestStrategyValidationDatasetLocationDetailsArgs

func ModelTestStrategyValidationDatasetLocationDetailsPtr(v *ModelTestStrategyValidationDatasetLocationDetailsArgs) ModelTestStrategyValidationDatasetLocationDetailsPtrInput {
	return (*modelTestStrategyValidationDatasetLocationDetailsPtrType)(v)
}

func (*modelTestStrategyValidationDatasetLocationDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelTestStrategyValidationDatasetLocationDetails)(nil)).Elem()
}

func (i *modelTestStrategyValidationDatasetLocationDetailsPtrType) ToModelTestStrategyValidationDatasetLocationDetailsPtrOutput() ModelTestStrategyValidationDatasetLocationDetailsPtrOutput {
	return i.ToModelTestStrategyValidationDatasetLocationDetailsPtrOutputWithContext(context.Background())
}

func (i *modelTestStrategyValidationDatasetLocationDetailsPtrType) ToModelTestStrategyValidationDatasetLocationDetailsPtrOutputWithContext(ctx context.Context) ModelTestStrategyValidationDatasetLocationDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelTestStrategyValidationDatasetLocationDetailsPtrOutput)
}

type ModelTestStrategyValidationDatasetLocationDetailsOutput struct{ *pulumi.OutputState }

func (ModelTestStrategyValidationDatasetLocationDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelTestStrategyValidationDatasetLocationDetails)(nil)).Elem()
}

func (o ModelTestStrategyValidationDatasetLocationDetailsOutput) ToModelTestStrategyValidationDatasetLocationDetailsOutput() ModelTestStrategyValidationDatasetLocationDetailsOutput {
	return o
}

func (o ModelTestStrategyValidationDatasetLocationDetailsOutput) ToModelTestStrategyValidationDatasetLocationDetailsOutputWithContext(ctx context.Context) ModelTestStrategyValidationDatasetLocationDetailsOutput {
	return o
}

func (o ModelTestStrategyValidationDatasetLocationDetailsOutput) ToModelTestStrategyValidationDatasetLocationDetailsPtrOutput() ModelTestStrategyValidationDatasetLocationDetailsPtrOutput {
	return o.ToModelTestStrategyValidationDatasetLocationDetailsPtrOutputWithContext(context.Background())
}

func (o ModelTestStrategyValidationDatasetLocationDetailsOutput) ToModelTestStrategyValidationDatasetLocationDetailsPtrOutputWithContext(ctx context.Context) ModelTestStrategyValidationDatasetLocationDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelTestStrategyValidationDatasetLocationDetails) *ModelTestStrategyValidationDatasetLocationDetails {
		return &v
	}).(ModelTestStrategyValidationDatasetLocationDetailsPtrOutput)
}

// Object storage bucket name
func (o ModelTestStrategyValidationDatasetLocationDetailsOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v ModelTestStrategyValidationDatasetLocationDetails) string { return v.Bucket }).(pulumi.StringOutput)
}

// Possible object storage location types
func (o ModelTestStrategyValidationDatasetLocationDetailsOutput) LocationType() pulumi.StringOutput {
	return o.ApplyT(func(v ModelTestStrategyValidationDatasetLocationDetails) string { return v.LocationType }).(pulumi.StringOutput)
}

// Object storage namespace
func (o ModelTestStrategyValidationDatasetLocationDetailsOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v ModelTestStrategyValidationDatasetLocationDetails) string { return v.Namespace }).(pulumi.StringOutput)
}

// Array of files which need to be processed in the bucket
func (o ModelTestStrategyValidationDatasetLocationDetailsOutput) ObjectNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ModelTestStrategyValidationDatasetLocationDetails) []string { return v.ObjectNames }).(pulumi.StringArrayOutput)
}

type ModelTestStrategyValidationDatasetLocationDetailsPtrOutput struct{ *pulumi.OutputState }

func (ModelTestStrategyValidationDatasetLocationDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelTestStrategyValidationDatasetLocationDetails)(nil)).Elem()
}

func (o ModelTestStrategyValidationDatasetLocationDetailsPtrOutput) ToModelTestStrategyValidationDatasetLocationDetailsPtrOutput() ModelTestStrategyValidationDatasetLocationDetailsPtrOutput {
	return o
}

func (o ModelTestStrategyValidationDatasetLocationDetailsPtrOutput) ToModelTestStrategyValidationDatasetLocationDetailsPtrOutputWithContext(ctx context.Context) ModelTestStrategyValidationDatasetLocationDetailsPtrOutput {
	return o
}

func (o ModelTestStrategyValidationDatasetLocationDetailsPtrOutput) Elem() ModelTestStrategyValidationDatasetLocationDetailsOutput {
	return o.ApplyT(func(v *ModelTestStrategyValidationDatasetLocationDetails) ModelTestStrategyValidationDatasetLocationDetails {
		if v != nil {
			return *v
		}
		var ret ModelTestStrategyValidationDatasetLocationDetails
		return ret
	}).(ModelTestStrategyValidationDatasetLocationDetailsOutput)
}

// Object storage bucket name
func (o ModelTestStrategyValidationDatasetLocationDetailsPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelTestStrategyValidationDatasetLocationDetails) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

// Possible object storage location types
func (o ModelTestStrategyValidationDatasetLocationDetailsPtrOutput) LocationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelTestStrategyValidationDatasetLocationDetails) *string {
		if v == nil {
			return nil
		}
		return &v.LocationType
	}).(pulumi.StringPtrOutput)
}

// Object storage namespace
func (o ModelTestStrategyValidationDatasetLocationDetailsPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelTestStrategyValidationDatasetLocationDetails) *string {
		if v == nil {
			return nil
		}
		return &v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Array of files which need to be processed in the bucket
func (o ModelTestStrategyValidationDatasetLocationDetailsPtrOutput) ObjectNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ModelTestStrategyValidationDatasetLocationDetails) []string {
		if v == nil {
			return nil
		}
		return v.ObjectNames
	}).(pulumi.StringArrayOutput)
}

type ModelTrainingDataset struct {
	// Data Science Labelling Service OCID
	DatasetId *string `pulumi:"datasetId"`
	// Possible data sets
	DatasetType string `pulumi:"datasetType"`
	// Possible object storage location types
	LocationDetails *ModelTrainingDatasetLocationDetails `pulumi:"locationDetails"`
}

// ModelTrainingDatasetInput is an input type that accepts ModelTrainingDatasetArgs and ModelTrainingDatasetOutput values.
// You can construct a concrete instance of `ModelTrainingDatasetInput` via:
//
//	ModelTrainingDatasetArgs{...}
type ModelTrainingDatasetInput interface {
	pulumi.Input

	ToModelTrainingDatasetOutput() ModelTrainingDatasetOutput
	ToModelTrainingDatasetOutputWithContext(context.Context) ModelTrainingDatasetOutput
}

type ModelTrainingDatasetArgs struct {
	// Data Science Labelling Service OCID
	DatasetId pulumi.StringPtrInput `pulumi:"datasetId"`
	// Possible data sets
	DatasetType pulumi.StringInput `pulumi:"datasetType"`
	// Possible object storage location types
	LocationDetails ModelTrainingDatasetLocationDetailsPtrInput `pulumi:"locationDetails"`
}

func (ModelTrainingDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelTrainingDataset)(nil)).Elem()
}

func (i ModelTrainingDatasetArgs) ToModelTrainingDatasetOutput() ModelTrainingDatasetOutput {
	return i.ToModelTrainingDatasetOutputWithContext(context.Background())
}

func (i ModelTrainingDatasetArgs) ToModelTrainingDatasetOutputWithContext(ctx context.Context) ModelTrainingDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelTrainingDatasetOutput)
}

func (i ModelTrainingDatasetArgs) ToModelTrainingDatasetPtrOutput() ModelTrainingDatasetPtrOutput {
	return i.ToModelTrainingDatasetPtrOutputWithContext(context.Background())
}

func (i ModelTrainingDatasetArgs) ToModelTrainingDatasetPtrOutputWithContext(ctx context.Context) ModelTrainingDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelTrainingDatasetOutput).ToModelTrainingDatasetPtrOutputWithContext(ctx)
}

// ModelTrainingDatasetPtrInput is an input type that accepts ModelTrainingDatasetArgs, ModelTrainingDatasetPtr and ModelTrainingDatasetPtrOutput values.
// You can construct a concrete instance of `ModelTrainingDatasetPtrInput` via:
//
//	        ModelTrainingDatasetArgs{...}
//
//	or:
//
//	        nil
type ModelTrainingDatasetPtrInput interface {
	pulumi.Input

	ToModelTrainingDatasetPtrOutput() ModelTrainingDatasetPtrOutput
	ToModelTrainingDatasetPtrOutputWithContext(context.Context) ModelTrainingDatasetPtrOutput
}

type modelTrainingDatasetPtrType ModelTrainingDatasetArgs

func ModelTrainingDatasetPtr(v *ModelTrainingDatasetArgs) ModelTrainingDatasetPtrInput {
	return (*modelTrainingDatasetPtrType)(v)
}

func (*modelTrainingDatasetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelTrainingDataset)(nil)).Elem()
}

func (i *modelTrainingDatasetPtrType) ToModelTrainingDatasetPtrOutput() ModelTrainingDatasetPtrOutput {
	return i.ToModelTrainingDatasetPtrOutputWithContext(context.Background())
}

func (i *modelTrainingDatasetPtrType) ToModelTrainingDatasetPtrOutputWithContext(ctx context.Context) ModelTrainingDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelTrainingDatasetPtrOutput)
}

type ModelTrainingDatasetOutput struct{ *pulumi.OutputState }

func (ModelTrainingDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelTrainingDataset)(nil)).Elem()
}

func (o ModelTrainingDatasetOutput) ToModelTrainingDatasetOutput() ModelTrainingDatasetOutput {
	return o
}

func (o ModelTrainingDatasetOutput) ToModelTrainingDatasetOutputWithContext(ctx context.Context) ModelTrainingDatasetOutput {
	return o
}

func (o ModelTrainingDatasetOutput) ToModelTrainingDatasetPtrOutput() ModelTrainingDatasetPtrOutput {
	return o.ToModelTrainingDatasetPtrOutputWithContext(context.Background())
}

func (o ModelTrainingDatasetOutput) ToModelTrainingDatasetPtrOutputWithContext(ctx context.Context) ModelTrainingDatasetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelTrainingDataset) *ModelTrainingDataset {
		return &v
	}).(ModelTrainingDatasetPtrOutput)
}

// Data Science Labelling Service OCID
func (o ModelTrainingDatasetOutput) DatasetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelTrainingDataset) *string { return v.DatasetId }).(pulumi.StringPtrOutput)
}

// Possible data sets
func (o ModelTrainingDatasetOutput) DatasetType() pulumi.StringOutput {
	return o.ApplyT(func(v ModelTrainingDataset) string { return v.DatasetType }).(pulumi.StringOutput)
}

// Possible object storage location types
func (o ModelTrainingDatasetOutput) LocationDetails() ModelTrainingDatasetLocationDetailsPtrOutput {
	return o.ApplyT(func(v ModelTrainingDataset) *ModelTrainingDatasetLocationDetails { return v.LocationDetails }).(ModelTrainingDatasetLocationDetailsPtrOutput)
}

type ModelTrainingDatasetPtrOutput struct{ *pulumi.OutputState }

func (ModelTrainingDatasetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelTrainingDataset)(nil)).Elem()
}

func (o ModelTrainingDatasetPtrOutput) ToModelTrainingDatasetPtrOutput() ModelTrainingDatasetPtrOutput {
	return o
}

func (o ModelTrainingDatasetPtrOutput) ToModelTrainingDatasetPtrOutputWithContext(ctx context.Context) ModelTrainingDatasetPtrOutput {
	return o
}

func (o ModelTrainingDatasetPtrOutput) Elem() ModelTrainingDatasetOutput {
	return o.ApplyT(func(v *ModelTrainingDataset) ModelTrainingDataset {
		if v != nil {
			return *v
		}
		var ret ModelTrainingDataset
		return ret
	}).(ModelTrainingDatasetOutput)
}

// Data Science Labelling Service OCID
func (o ModelTrainingDatasetPtrOutput) DatasetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelTrainingDataset) *string {
		if v == nil {
			return nil
		}
		return v.DatasetId
	}).(pulumi.StringPtrOutput)
}

// Possible data sets
func (o ModelTrainingDatasetPtrOutput) DatasetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelTrainingDataset) *string {
		if v == nil {
			return nil
		}
		return &v.DatasetType
	}).(pulumi.StringPtrOutput)
}

// Possible object storage location types
func (o ModelTrainingDatasetPtrOutput) LocationDetails() ModelTrainingDatasetLocationDetailsPtrOutput {
	return o.ApplyT(func(v *ModelTrainingDataset) *ModelTrainingDatasetLocationDetails {
		if v == nil {
			return nil
		}
		return v.LocationDetails
	}).(ModelTrainingDatasetLocationDetailsPtrOutput)
}

type ModelTrainingDatasetLocationDetails struct {
	// Object storage bucket name
	Bucket string `pulumi:"bucket"`
	// Possible object storage location types
	LocationType string `pulumi:"locationType"`
	// Object storage namespace
	Namespace string `pulumi:"namespace"`
	// Array of files which need to be processed in the bucket
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ObjectNames []string `pulumi:"objectNames"`
}

// ModelTrainingDatasetLocationDetailsInput is an input type that accepts ModelTrainingDatasetLocationDetailsArgs and ModelTrainingDatasetLocationDetailsOutput values.
// You can construct a concrete instance of `ModelTrainingDatasetLocationDetailsInput` via:
//
//	ModelTrainingDatasetLocationDetailsArgs{...}
type ModelTrainingDatasetLocationDetailsInput interface {
	pulumi.Input

	ToModelTrainingDatasetLocationDetailsOutput() ModelTrainingDatasetLocationDetailsOutput
	ToModelTrainingDatasetLocationDetailsOutputWithContext(context.Context) ModelTrainingDatasetLocationDetailsOutput
}

type ModelTrainingDatasetLocationDetailsArgs struct {
	// Object storage bucket name
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// Possible object storage location types
	LocationType pulumi.StringInput `pulumi:"locationType"`
	// Object storage namespace
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// Array of files which need to be processed in the bucket
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ObjectNames pulumi.StringArrayInput `pulumi:"objectNames"`
}

func (ModelTrainingDatasetLocationDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelTrainingDatasetLocationDetails)(nil)).Elem()
}

func (i ModelTrainingDatasetLocationDetailsArgs) ToModelTrainingDatasetLocationDetailsOutput() ModelTrainingDatasetLocationDetailsOutput {
	return i.ToModelTrainingDatasetLocationDetailsOutputWithContext(context.Background())
}

func (i ModelTrainingDatasetLocationDetailsArgs) ToModelTrainingDatasetLocationDetailsOutputWithContext(ctx context.Context) ModelTrainingDatasetLocationDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelTrainingDatasetLocationDetailsOutput)
}

func (i ModelTrainingDatasetLocationDetailsArgs) ToModelTrainingDatasetLocationDetailsPtrOutput() ModelTrainingDatasetLocationDetailsPtrOutput {
	return i.ToModelTrainingDatasetLocationDetailsPtrOutputWithContext(context.Background())
}

func (i ModelTrainingDatasetLocationDetailsArgs) ToModelTrainingDatasetLocationDetailsPtrOutputWithContext(ctx context.Context) ModelTrainingDatasetLocationDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelTrainingDatasetLocationDetailsOutput).ToModelTrainingDatasetLocationDetailsPtrOutputWithContext(ctx)
}

// ModelTrainingDatasetLocationDetailsPtrInput is an input type that accepts ModelTrainingDatasetLocationDetailsArgs, ModelTrainingDatasetLocationDetailsPtr and ModelTrainingDatasetLocationDetailsPtrOutput values.
// You can construct a concrete instance of `ModelTrainingDatasetLocationDetailsPtrInput` via:
//
//	        ModelTrainingDatasetLocationDetailsArgs{...}
//
//	or:
//
//	        nil
type ModelTrainingDatasetLocationDetailsPtrInput interface {
	pulumi.Input

	ToModelTrainingDatasetLocationDetailsPtrOutput() ModelTrainingDatasetLocationDetailsPtrOutput
	ToModelTrainingDatasetLocationDetailsPtrOutputWithContext(context.Context) ModelTrainingDatasetLocationDetailsPtrOutput
}

type modelTrainingDatasetLocationDetailsPtrType ModelTrainingDatasetLocationDetailsArgs

func ModelTrainingDatasetLocationDetailsPtr(v *ModelTrainingDatasetLocationDetailsArgs) ModelTrainingDatasetLocationDetailsPtrInput {
	return (*modelTrainingDatasetLocationDetailsPtrType)(v)
}

func (*modelTrainingDatasetLocationDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelTrainingDatasetLocationDetails)(nil)).Elem()
}

func (i *modelTrainingDatasetLocationDetailsPtrType) ToModelTrainingDatasetLocationDetailsPtrOutput() ModelTrainingDatasetLocationDetailsPtrOutput {
	return i.ToModelTrainingDatasetLocationDetailsPtrOutputWithContext(context.Background())
}

func (i *modelTrainingDatasetLocationDetailsPtrType) ToModelTrainingDatasetLocationDetailsPtrOutputWithContext(ctx context.Context) ModelTrainingDatasetLocationDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelTrainingDatasetLocationDetailsPtrOutput)
}

type ModelTrainingDatasetLocationDetailsOutput struct{ *pulumi.OutputState }

func (ModelTrainingDatasetLocationDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelTrainingDatasetLocationDetails)(nil)).Elem()
}

func (o ModelTrainingDatasetLocationDetailsOutput) ToModelTrainingDatasetLocationDetailsOutput() ModelTrainingDatasetLocationDetailsOutput {
	return o
}

func (o ModelTrainingDatasetLocationDetailsOutput) ToModelTrainingDatasetLocationDetailsOutputWithContext(ctx context.Context) ModelTrainingDatasetLocationDetailsOutput {
	return o
}

func (o ModelTrainingDatasetLocationDetailsOutput) ToModelTrainingDatasetLocationDetailsPtrOutput() ModelTrainingDatasetLocationDetailsPtrOutput {
	return o.ToModelTrainingDatasetLocationDetailsPtrOutputWithContext(context.Background())
}

func (o ModelTrainingDatasetLocationDetailsOutput) ToModelTrainingDatasetLocationDetailsPtrOutputWithContext(ctx context.Context) ModelTrainingDatasetLocationDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelTrainingDatasetLocationDetails) *ModelTrainingDatasetLocationDetails {
		return &v
	}).(ModelTrainingDatasetLocationDetailsPtrOutput)
}

// Object storage bucket name
func (o ModelTrainingDatasetLocationDetailsOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v ModelTrainingDatasetLocationDetails) string { return v.Bucket }).(pulumi.StringOutput)
}

// Possible object storage location types
func (o ModelTrainingDatasetLocationDetailsOutput) LocationType() pulumi.StringOutput {
	return o.ApplyT(func(v ModelTrainingDatasetLocationDetails) string { return v.LocationType }).(pulumi.StringOutput)
}

// Object storage namespace
func (o ModelTrainingDatasetLocationDetailsOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v ModelTrainingDatasetLocationDetails) string { return v.Namespace }).(pulumi.StringOutput)
}

// Array of files which need to be processed in the bucket
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ModelTrainingDatasetLocationDetailsOutput) ObjectNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ModelTrainingDatasetLocationDetails) []string { return v.ObjectNames }).(pulumi.StringArrayOutput)
}

type ModelTrainingDatasetLocationDetailsPtrOutput struct{ *pulumi.OutputState }

func (ModelTrainingDatasetLocationDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelTrainingDatasetLocationDetails)(nil)).Elem()
}

func (o ModelTrainingDatasetLocationDetailsPtrOutput) ToModelTrainingDatasetLocationDetailsPtrOutput() ModelTrainingDatasetLocationDetailsPtrOutput {
	return o
}

func (o ModelTrainingDatasetLocationDetailsPtrOutput) ToModelTrainingDatasetLocationDetailsPtrOutputWithContext(ctx context.Context) ModelTrainingDatasetLocationDetailsPtrOutput {
	return o
}

func (o ModelTrainingDatasetLocationDetailsPtrOutput) Elem() ModelTrainingDatasetLocationDetailsOutput {
	return o.ApplyT(func(v *ModelTrainingDatasetLocationDetails) ModelTrainingDatasetLocationDetails {
		if v != nil {
			return *v
		}
		var ret ModelTrainingDatasetLocationDetails
		return ret
	}).(ModelTrainingDatasetLocationDetailsOutput)
}

// Object storage bucket name
func (o ModelTrainingDatasetLocationDetailsPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelTrainingDatasetLocationDetails) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

// Possible object storage location types
func (o ModelTrainingDatasetLocationDetailsPtrOutput) LocationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelTrainingDatasetLocationDetails) *string {
		if v == nil {
			return nil
		}
		return &v.LocationType
	}).(pulumi.StringPtrOutput)
}

// Object storage namespace
func (o ModelTrainingDatasetLocationDetailsPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelTrainingDatasetLocationDetails) *string {
		if v == nil {
			return nil
		}
		return &v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Array of files which need to be processed in the bucket
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ModelTrainingDatasetLocationDetailsPtrOutput) ObjectNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ModelTrainingDatasetLocationDetails) []string {
		if v == nil {
			return nil
		}
		return v.ObjectNames
	}).(pulumi.StringArrayOutput)
}

type GetEndpointsEndpointCollection struct {
	Items []GetEndpointsEndpointCollectionItem `pulumi:"items"`
}

// GetEndpointsEndpointCollectionInput is an input type that accepts GetEndpointsEndpointCollectionArgs and GetEndpointsEndpointCollectionOutput values.
// You can construct a concrete instance of `GetEndpointsEndpointCollectionInput` via:
//
//	GetEndpointsEndpointCollectionArgs{...}
type GetEndpointsEndpointCollectionInput interface {
	pulumi.Input

	ToGetEndpointsEndpointCollectionOutput() GetEndpointsEndpointCollectionOutput
	ToGetEndpointsEndpointCollectionOutputWithContext(context.Context) GetEndpointsEndpointCollectionOutput
}

type GetEndpointsEndpointCollectionArgs struct {
	Items GetEndpointsEndpointCollectionItemArrayInput `pulumi:"items"`
}

func (GetEndpointsEndpointCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEndpointsEndpointCollection)(nil)).Elem()
}

func (i GetEndpointsEndpointCollectionArgs) ToGetEndpointsEndpointCollectionOutput() GetEndpointsEndpointCollectionOutput {
	return i.ToGetEndpointsEndpointCollectionOutputWithContext(context.Background())
}

func (i GetEndpointsEndpointCollectionArgs) ToGetEndpointsEndpointCollectionOutputWithContext(ctx context.Context) GetEndpointsEndpointCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEndpointsEndpointCollectionOutput)
}

// GetEndpointsEndpointCollectionArrayInput is an input type that accepts GetEndpointsEndpointCollectionArray and GetEndpointsEndpointCollectionArrayOutput values.
// You can construct a concrete instance of `GetEndpointsEndpointCollectionArrayInput` via:
//
//	GetEndpointsEndpointCollectionArray{ GetEndpointsEndpointCollectionArgs{...} }
type GetEndpointsEndpointCollectionArrayInput interface {
	pulumi.Input

	ToGetEndpointsEndpointCollectionArrayOutput() GetEndpointsEndpointCollectionArrayOutput
	ToGetEndpointsEndpointCollectionArrayOutputWithContext(context.Context) GetEndpointsEndpointCollectionArrayOutput
}

type GetEndpointsEndpointCollectionArray []GetEndpointsEndpointCollectionInput

func (GetEndpointsEndpointCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEndpointsEndpointCollection)(nil)).Elem()
}

func (i GetEndpointsEndpointCollectionArray) ToGetEndpointsEndpointCollectionArrayOutput() GetEndpointsEndpointCollectionArrayOutput {
	return i.ToGetEndpointsEndpointCollectionArrayOutputWithContext(context.Background())
}

func (i GetEndpointsEndpointCollectionArray) ToGetEndpointsEndpointCollectionArrayOutputWithContext(ctx context.Context) GetEndpointsEndpointCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEndpointsEndpointCollectionArrayOutput)
}

type GetEndpointsEndpointCollectionOutput struct{ *pulumi.OutputState }

func (GetEndpointsEndpointCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEndpointsEndpointCollection)(nil)).Elem()
}

func (o GetEndpointsEndpointCollectionOutput) ToGetEndpointsEndpointCollectionOutput() GetEndpointsEndpointCollectionOutput {
	return o
}

func (o GetEndpointsEndpointCollectionOutput) ToGetEndpointsEndpointCollectionOutputWithContext(ctx context.Context) GetEndpointsEndpointCollectionOutput {
	return o
}

func (o GetEndpointsEndpointCollectionOutput) Items() GetEndpointsEndpointCollectionItemArrayOutput {
	return o.ApplyT(func(v GetEndpointsEndpointCollection) []GetEndpointsEndpointCollectionItem { return v.Items }).(GetEndpointsEndpointCollectionItemArrayOutput)
}

type GetEndpointsEndpointCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetEndpointsEndpointCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEndpointsEndpointCollection)(nil)).Elem()
}

func (o GetEndpointsEndpointCollectionArrayOutput) ToGetEndpointsEndpointCollectionArrayOutput() GetEndpointsEndpointCollectionArrayOutput {
	return o
}

func (o GetEndpointsEndpointCollectionArrayOutput) ToGetEndpointsEndpointCollectionArrayOutputWithContext(ctx context.Context) GetEndpointsEndpointCollectionArrayOutput {
	return o
}

func (o GetEndpointsEndpointCollectionArrayOutput) Index(i pulumi.IntInput) GetEndpointsEndpointCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEndpointsEndpointCollection {
		return vs[0].([]GetEndpointsEndpointCollection)[vs[1].(int)]
	}).(GetEndpointsEndpointCollectionOutput)
}

type GetEndpointsEndpointCollectionItem struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// A short description of the endpoint.
	Description string `pulumi:"description"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Unique identifier endpoint OCID of an endpoint that is immutable on creation.
	Id string `pulumi:"id"`
	// Number of replicas required for this endpoint.
	InferenceUnits int `pulumi:"inferenceUnits"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// The ID of the trained model for which to list the endpoints.
	ModelId string `pulumi:"modelId"`
	// The ID of the project for which to list the objects.
	ProjectId string `pulumi:"projectId"`
	// <b>Filter</b> results by the specified lifecycle state. Must be a valid state for the resource type.
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The time the the endpoint was created. An RFC3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// The time the endpoint was updated. An RFC3339 formatted datetime string.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetEndpointsEndpointCollectionItemInput is an input type that accepts GetEndpointsEndpointCollectionItemArgs and GetEndpointsEndpointCollectionItemOutput values.
// You can construct a concrete instance of `GetEndpointsEndpointCollectionItemInput` via:
//
//	GetEndpointsEndpointCollectionItemArgs{...}
type GetEndpointsEndpointCollectionItemInput interface {
	pulumi.Input

	ToGetEndpointsEndpointCollectionItemOutput() GetEndpointsEndpointCollectionItemOutput
	ToGetEndpointsEndpointCollectionItemOutputWithContext(context.Context) GetEndpointsEndpointCollectionItemOutput
}

type GetEndpointsEndpointCollectionItemArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// A short description of the endpoint.
	Description pulumi.StringInput `pulumi:"description"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// Unique identifier endpoint OCID of an endpoint that is immutable on creation.
	Id pulumi.StringInput `pulumi:"id"`
	// Number of replicas required for this endpoint.
	InferenceUnits pulumi.IntInput `pulumi:"inferenceUnits"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in failed state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// The ID of the trained model for which to list the endpoints.
	ModelId pulumi.StringInput `pulumi:"modelId"`
	// The ID of the project for which to list the objects.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// <b>Filter</b> results by the specified lifecycle state. Must be a valid state for the resource type.
	State pulumi.StringInput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput `pulumi:"systemTags"`
	// The time the the endpoint was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time the endpoint was updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetEndpointsEndpointCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEndpointsEndpointCollectionItem)(nil)).Elem()
}

func (i GetEndpointsEndpointCollectionItemArgs) ToGetEndpointsEndpointCollectionItemOutput() GetEndpointsEndpointCollectionItemOutput {
	return i.ToGetEndpointsEndpointCollectionItemOutputWithContext(context.Background())
}

func (i GetEndpointsEndpointCollectionItemArgs) ToGetEndpointsEndpointCollectionItemOutputWithContext(ctx context.Context) GetEndpointsEndpointCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEndpointsEndpointCollectionItemOutput)
}

// GetEndpointsEndpointCollectionItemArrayInput is an input type that accepts GetEndpointsEndpointCollectionItemArray and GetEndpointsEndpointCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetEndpointsEndpointCollectionItemArrayInput` via:
//
//	GetEndpointsEndpointCollectionItemArray{ GetEndpointsEndpointCollectionItemArgs{...} }
type GetEndpointsEndpointCollectionItemArrayInput interface {
	pulumi.Input

	ToGetEndpointsEndpointCollectionItemArrayOutput() GetEndpointsEndpointCollectionItemArrayOutput
	ToGetEndpointsEndpointCollectionItemArrayOutputWithContext(context.Context) GetEndpointsEndpointCollectionItemArrayOutput
}

type GetEndpointsEndpointCollectionItemArray []GetEndpointsEndpointCollectionItemInput

func (GetEndpointsEndpointCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEndpointsEndpointCollectionItem)(nil)).Elem()
}

func (i GetEndpointsEndpointCollectionItemArray) ToGetEndpointsEndpointCollectionItemArrayOutput() GetEndpointsEndpointCollectionItemArrayOutput {
	return i.ToGetEndpointsEndpointCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetEndpointsEndpointCollectionItemArray) ToGetEndpointsEndpointCollectionItemArrayOutputWithContext(ctx context.Context) GetEndpointsEndpointCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEndpointsEndpointCollectionItemArrayOutput)
}

type GetEndpointsEndpointCollectionItemOutput struct{ *pulumi.OutputState }

func (GetEndpointsEndpointCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEndpointsEndpointCollectionItem)(nil)).Elem()
}

func (o GetEndpointsEndpointCollectionItemOutput) ToGetEndpointsEndpointCollectionItemOutput() GetEndpointsEndpointCollectionItemOutput {
	return o
}

func (o GetEndpointsEndpointCollectionItemOutput) ToGetEndpointsEndpointCollectionItemOutputWithContext(ctx context.Context) GetEndpointsEndpointCollectionItemOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetEndpointsEndpointCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointsEndpointCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetEndpointsEndpointCollectionItemOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetEndpointsEndpointCollectionItem) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// A short description of the endpoint.
func (o GetEndpointsEndpointCollectionItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointsEndpointCollectionItem) string { return v.Description }).(pulumi.StringOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetEndpointsEndpointCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointsEndpointCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetEndpointsEndpointCollectionItemOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetEndpointsEndpointCollectionItem) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// Unique identifier endpoint OCID of an endpoint that is immutable on creation.
func (o GetEndpointsEndpointCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointsEndpointCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// Number of replicas required for this endpoint.
func (o GetEndpointsEndpointCollectionItemOutput) InferenceUnits() pulumi.IntOutput {
	return o.ApplyT(func(v GetEndpointsEndpointCollectionItem) int { return v.InferenceUnits }).(pulumi.IntOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in failed state.
func (o GetEndpointsEndpointCollectionItemOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointsEndpointCollectionItem) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The ID of the trained model for which to list the endpoints.
func (o GetEndpointsEndpointCollectionItemOutput) ModelId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointsEndpointCollectionItem) string { return v.ModelId }).(pulumi.StringOutput)
}

// The ID of the project for which to list the objects.
func (o GetEndpointsEndpointCollectionItemOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointsEndpointCollectionItem) string { return v.ProjectId }).(pulumi.StringOutput)
}

// <b>Filter</b> results by the specified lifecycle state. Must be a valid state for the resource type.
func (o GetEndpointsEndpointCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointsEndpointCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetEndpointsEndpointCollectionItemOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetEndpointsEndpointCollectionItem) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The time the the endpoint was created. An RFC3339 formatted datetime string.
func (o GetEndpointsEndpointCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointsEndpointCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the endpoint was updated. An RFC3339 formatted datetime string.
func (o GetEndpointsEndpointCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointsEndpointCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetEndpointsEndpointCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetEndpointsEndpointCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEndpointsEndpointCollectionItem)(nil)).Elem()
}

func (o GetEndpointsEndpointCollectionItemArrayOutput) ToGetEndpointsEndpointCollectionItemArrayOutput() GetEndpointsEndpointCollectionItemArrayOutput {
	return o
}

func (o GetEndpointsEndpointCollectionItemArrayOutput) ToGetEndpointsEndpointCollectionItemArrayOutputWithContext(ctx context.Context) GetEndpointsEndpointCollectionItemArrayOutput {
	return o
}

func (o GetEndpointsEndpointCollectionItemArrayOutput) Index(i pulumi.IntInput) GetEndpointsEndpointCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEndpointsEndpointCollectionItem {
		return vs[0].([]GetEndpointsEndpointCollectionItem)[vs[1].(int)]
	}).(GetEndpointsEndpointCollectionItemOutput)
}

type GetEndpointsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetEndpointsFilterInput is an input type that accepts GetEndpointsFilterArgs and GetEndpointsFilterOutput values.
// You can construct a concrete instance of `GetEndpointsFilterInput` via:
//
//	GetEndpointsFilterArgs{...}
type GetEndpointsFilterInput interface {
	pulumi.Input

	ToGetEndpointsFilterOutput() GetEndpointsFilterOutput
	ToGetEndpointsFilterOutputWithContext(context.Context) GetEndpointsFilterOutput
}

type GetEndpointsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetEndpointsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEndpointsFilter)(nil)).Elem()
}

func (i GetEndpointsFilterArgs) ToGetEndpointsFilterOutput() GetEndpointsFilterOutput {
	return i.ToGetEndpointsFilterOutputWithContext(context.Background())
}

func (i GetEndpointsFilterArgs) ToGetEndpointsFilterOutputWithContext(ctx context.Context) GetEndpointsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEndpointsFilterOutput)
}

// GetEndpointsFilterArrayInput is an input type that accepts GetEndpointsFilterArray and GetEndpointsFilterArrayOutput values.
// You can construct a concrete instance of `GetEndpointsFilterArrayInput` via:
//
//	GetEndpointsFilterArray{ GetEndpointsFilterArgs{...} }
type GetEndpointsFilterArrayInput interface {
	pulumi.Input

	ToGetEndpointsFilterArrayOutput() GetEndpointsFilterArrayOutput
	ToGetEndpointsFilterArrayOutputWithContext(context.Context) GetEndpointsFilterArrayOutput
}

type GetEndpointsFilterArray []GetEndpointsFilterInput

func (GetEndpointsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEndpointsFilter)(nil)).Elem()
}

func (i GetEndpointsFilterArray) ToGetEndpointsFilterArrayOutput() GetEndpointsFilterArrayOutput {
	return i.ToGetEndpointsFilterArrayOutputWithContext(context.Background())
}

func (i GetEndpointsFilterArray) ToGetEndpointsFilterArrayOutputWithContext(ctx context.Context) GetEndpointsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEndpointsFilterArrayOutput)
}

type GetEndpointsFilterOutput struct{ *pulumi.OutputState }

func (GetEndpointsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEndpointsFilter)(nil)).Elem()
}

func (o GetEndpointsFilterOutput) ToGetEndpointsFilterOutput() GetEndpointsFilterOutput {
	return o
}

func (o GetEndpointsFilterOutput) ToGetEndpointsFilterOutputWithContext(ctx context.Context) GetEndpointsFilterOutput {
	return o
}

func (o GetEndpointsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetEndpointsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetEndpointsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetEndpointsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetEndpointsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetEndpointsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetEndpointsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEndpointsFilter)(nil)).Elem()
}

func (o GetEndpointsFilterArrayOutput) ToGetEndpointsFilterArrayOutput() GetEndpointsFilterArrayOutput {
	return o
}

func (o GetEndpointsFilterArrayOutput) ToGetEndpointsFilterArrayOutputWithContext(ctx context.Context) GetEndpointsFilterArrayOutput {
	return o
}

func (o GetEndpointsFilterArrayOutput) Index(i pulumi.IntInput) GetEndpointsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEndpointsFilter {
		return vs[0].([]GetEndpointsFilter)[vs[1].(int)]
	}).(GetEndpointsFilterOutput)
}

type GetModelEvaluationResult struct {
	// List of text classification metrics
	ClassMetrics []GetModelEvaluationResultClassMetric `pulumi:"classMetrics"`
	// class level confusion matrix
	ConfusionMatrix string `pulumi:"confusionMatrix"`
	// List of entity metrics
	EntityMetrics []GetModelEvaluationResultEntityMetric `pulumi:"entityMetrics"`
	// labels
	Labels []string `pulumi:"labels"`
	// Model level named entity recognition metrics
	Metrics []GetModelEvaluationResultMetric `pulumi:"metrics"`
	// Model type
	ModelType string `pulumi:"modelType"`
}

// GetModelEvaluationResultInput is an input type that accepts GetModelEvaluationResultArgs and GetModelEvaluationResultOutput values.
// You can construct a concrete instance of `GetModelEvaluationResultInput` via:
//
//	GetModelEvaluationResultArgs{...}
type GetModelEvaluationResultInput interface {
	pulumi.Input

	ToGetModelEvaluationResultOutput() GetModelEvaluationResultOutput
	ToGetModelEvaluationResultOutputWithContext(context.Context) GetModelEvaluationResultOutput
}

type GetModelEvaluationResultArgs struct {
	// List of text classification metrics
	ClassMetrics GetModelEvaluationResultClassMetricArrayInput `pulumi:"classMetrics"`
	// class level confusion matrix
	ConfusionMatrix pulumi.StringInput `pulumi:"confusionMatrix"`
	// List of entity metrics
	EntityMetrics GetModelEvaluationResultEntityMetricArrayInput `pulumi:"entityMetrics"`
	// labels
	Labels pulumi.StringArrayInput `pulumi:"labels"`
	// Model level named entity recognition metrics
	Metrics GetModelEvaluationResultMetricArrayInput `pulumi:"metrics"`
	// Model type
	ModelType pulumi.StringInput `pulumi:"modelType"`
}

func (GetModelEvaluationResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelEvaluationResult)(nil)).Elem()
}

func (i GetModelEvaluationResultArgs) ToGetModelEvaluationResultOutput() GetModelEvaluationResultOutput {
	return i.ToGetModelEvaluationResultOutputWithContext(context.Background())
}

func (i GetModelEvaluationResultArgs) ToGetModelEvaluationResultOutputWithContext(ctx context.Context) GetModelEvaluationResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelEvaluationResultOutput)
}

// GetModelEvaluationResultArrayInput is an input type that accepts GetModelEvaluationResultArray and GetModelEvaluationResultArrayOutput values.
// You can construct a concrete instance of `GetModelEvaluationResultArrayInput` via:
//
//	GetModelEvaluationResultArray{ GetModelEvaluationResultArgs{...} }
type GetModelEvaluationResultArrayInput interface {
	pulumi.Input

	ToGetModelEvaluationResultArrayOutput() GetModelEvaluationResultArrayOutput
	ToGetModelEvaluationResultArrayOutputWithContext(context.Context) GetModelEvaluationResultArrayOutput
}

type GetModelEvaluationResultArray []GetModelEvaluationResultInput

func (GetModelEvaluationResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelEvaluationResult)(nil)).Elem()
}

func (i GetModelEvaluationResultArray) ToGetModelEvaluationResultArrayOutput() GetModelEvaluationResultArrayOutput {
	return i.ToGetModelEvaluationResultArrayOutputWithContext(context.Background())
}

func (i GetModelEvaluationResultArray) ToGetModelEvaluationResultArrayOutputWithContext(ctx context.Context) GetModelEvaluationResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelEvaluationResultArrayOutput)
}

type GetModelEvaluationResultOutput struct{ *pulumi.OutputState }

func (GetModelEvaluationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelEvaluationResult)(nil)).Elem()
}

func (o GetModelEvaluationResultOutput) ToGetModelEvaluationResultOutput() GetModelEvaluationResultOutput {
	return o
}

func (o GetModelEvaluationResultOutput) ToGetModelEvaluationResultOutputWithContext(ctx context.Context) GetModelEvaluationResultOutput {
	return o
}

// List of text classification metrics
func (o GetModelEvaluationResultOutput) ClassMetrics() GetModelEvaluationResultClassMetricArrayOutput {
	return o.ApplyT(func(v GetModelEvaluationResult) []GetModelEvaluationResultClassMetric { return v.ClassMetrics }).(GetModelEvaluationResultClassMetricArrayOutput)
}

// class level confusion matrix
func (o GetModelEvaluationResultOutput) ConfusionMatrix() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelEvaluationResult) string { return v.ConfusionMatrix }).(pulumi.StringOutput)
}

// List of entity metrics
func (o GetModelEvaluationResultOutput) EntityMetrics() GetModelEvaluationResultEntityMetricArrayOutput {
	return o.ApplyT(func(v GetModelEvaluationResult) []GetModelEvaluationResultEntityMetric { return v.EntityMetrics }).(GetModelEvaluationResultEntityMetricArrayOutput)
}

// labels
func (o GetModelEvaluationResultOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetModelEvaluationResult) []string { return v.Labels }).(pulumi.StringArrayOutput)
}

// Model level named entity recognition metrics
func (o GetModelEvaluationResultOutput) Metrics() GetModelEvaluationResultMetricArrayOutput {
	return o.ApplyT(func(v GetModelEvaluationResult) []GetModelEvaluationResultMetric { return v.Metrics }).(GetModelEvaluationResultMetricArrayOutput)
}

// Model type
func (o GetModelEvaluationResultOutput) ModelType() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelEvaluationResult) string { return v.ModelType }).(pulumi.StringOutput)
}

type GetModelEvaluationResultArrayOutput struct{ *pulumi.OutputState }

func (GetModelEvaluationResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelEvaluationResult)(nil)).Elem()
}

func (o GetModelEvaluationResultArrayOutput) ToGetModelEvaluationResultArrayOutput() GetModelEvaluationResultArrayOutput {
	return o
}

func (o GetModelEvaluationResultArrayOutput) ToGetModelEvaluationResultArrayOutputWithContext(ctx context.Context) GetModelEvaluationResultArrayOutput {
	return o
}

func (o GetModelEvaluationResultArrayOutput) Index(i pulumi.IntInput) GetModelEvaluationResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelEvaluationResult {
		return vs[0].([]GetModelEvaluationResult)[vs[1].(int)]
	}).(GetModelEvaluationResultOutput)
}

type GetModelEvaluationResultClassMetric struct {
	// F1-score, is a measure of a model’s accuracy on a dataset
	F1 float64 `pulumi:"f1"`
	// Entity label
	Label string `pulumi:"label"`
	// Precision refers to the number of true positives divided by the total number of positive predictions (i.e., the number of true positives plus the number of false positives)
	Precision float64 `pulumi:"precision"`
	// Measures the model's ability to predict actual positive classes. It is the ratio between the predicted true positives and what was actually tagged. The recall metric reveals how many of the predicted classes are correct.
	Recall float64 `pulumi:"recall"`
	// number of samples in the test set
	Support float64 `pulumi:"support"`
}

// GetModelEvaluationResultClassMetricInput is an input type that accepts GetModelEvaluationResultClassMetricArgs and GetModelEvaluationResultClassMetricOutput values.
// You can construct a concrete instance of `GetModelEvaluationResultClassMetricInput` via:
//
//	GetModelEvaluationResultClassMetricArgs{...}
type GetModelEvaluationResultClassMetricInput interface {
	pulumi.Input

	ToGetModelEvaluationResultClassMetricOutput() GetModelEvaluationResultClassMetricOutput
	ToGetModelEvaluationResultClassMetricOutputWithContext(context.Context) GetModelEvaluationResultClassMetricOutput
}

type GetModelEvaluationResultClassMetricArgs struct {
	// F1-score, is a measure of a model’s accuracy on a dataset
	F1 pulumi.Float64Input `pulumi:"f1"`
	// Entity label
	Label pulumi.StringInput `pulumi:"label"`
	// Precision refers to the number of true positives divided by the total number of positive predictions (i.e., the number of true positives plus the number of false positives)
	Precision pulumi.Float64Input `pulumi:"precision"`
	// Measures the model's ability to predict actual positive classes. It is the ratio between the predicted true positives and what was actually tagged. The recall metric reveals how many of the predicted classes are correct.
	Recall pulumi.Float64Input `pulumi:"recall"`
	// number of samples in the test set
	Support pulumi.Float64Input `pulumi:"support"`
}

func (GetModelEvaluationResultClassMetricArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelEvaluationResultClassMetric)(nil)).Elem()
}

func (i GetModelEvaluationResultClassMetricArgs) ToGetModelEvaluationResultClassMetricOutput() GetModelEvaluationResultClassMetricOutput {
	return i.ToGetModelEvaluationResultClassMetricOutputWithContext(context.Background())
}

func (i GetModelEvaluationResultClassMetricArgs) ToGetModelEvaluationResultClassMetricOutputWithContext(ctx context.Context) GetModelEvaluationResultClassMetricOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelEvaluationResultClassMetricOutput)
}

// GetModelEvaluationResultClassMetricArrayInput is an input type that accepts GetModelEvaluationResultClassMetricArray and GetModelEvaluationResultClassMetricArrayOutput values.
// You can construct a concrete instance of `GetModelEvaluationResultClassMetricArrayInput` via:
//
//	GetModelEvaluationResultClassMetricArray{ GetModelEvaluationResultClassMetricArgs{...} }
type GetModelEvaluationResultClassMetricArrayInput interface {
	pulumi.Input

	ToGetModelEvaluationResultClassMetricArrayOutput() GetModelEvaluationResultClassMetricArrayOutput
	ToGetModelEvaluationResultClassMetricArrayOutputWithContext(context.Context) GetModelEvaluationResultClassMetricArrayOutput
}

type GetModelEvaluationResultClassMetricArray []GetModelEvaluationResultClassMetricInput

func (GetModelEvaluationResultClassMetricArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelEvaluationResultClassMetric)(nil)).Elem()
}

func (i GetModelEvaluationResultClassMetricArray) ToGetModelEvaluationResultClassMetricArrayOutput() GetModelEvaluationResultClassMetricArrayOutput {
	return i.ToGetModelEvaluationResultClassMetricArrayOutputWithContext(context.Background())
}

func (i GetModelEvaluationResultClassMetricArray) ToGetModelEvaluationResultClassMetricArrayOutputWithContext(ctx context.Context) GetModelEvaluationResultClassMetricArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelEvaluationResultClassMetricArrayOutput)
}

type GetModelEvaluationResultClassMetricOutput struct{ *pulumi.OutputState }

func (GetModelEvaluationResultClassMetricOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelEvaluationResultClassMetric)(nil)).Elem()
}

func (o GetModelEvaluationResultClassMetricOutput) ToGetModelEvaluationResultClassMetricOutput() GetModelEvaluationResultClassMetricOutput {
	return o
}

func (o GetModelEvaluationResultClassMetricOutput) ToGetModelEvaluationResultClassMetricOutputWithContext(ctx context.Context) GetModelEvaluationResultClassMetricOutput {
	return o
}

// F1-score, is a measure of a model’s accuracy on a dataset
func (o GetModelEvaluationResultClassMetricOutput) F1() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelEvaluationResultClassMetric) float64 { return v.F1 }).(pulumi.Float64Output)
}

// Entity label
func (o GetModelEvaluationResultClassMetricOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelEvaluationResultClassMetric) string { return v.Label }).(pulumi.StringOutput)
}

// Precision refers to the number of true positives divided by the total number of positive predictions (i.e., the number of true positives plus the number of false positives)
func (o GetModelEvaluationResultClassMetricOutput) Precision() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelEvaluationResultClassMetric) float64 { return v.Precision }).(pulumi.Float64Output)
}

// Measures the model's ability to predict actual positive classes. It is the ratio between the predicted true positives and what was actually tagged. The recall metric reveals how many of the predicted classes are correct.
func (o GetModelEvaluationResultClassMetricOutput) Recall() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelEvaluationResultClassMetric) float64 { return v.Recall }).(pulumi.Float64Output)
}

// number of samples in the test set
func (o GetModelEvaluationResultClassMetricOutput) Support() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelEvaluationResultClassMetric) float64 { return v.Support }).(pulumi.Float64Output)
}

type GetModelEvaluationResultClassMetricArrayOutput struct{ *pulumi.OutputState }

func (GetModelEvaluationResultClassMetricArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelEvaluationResultClassMetric)(nil)).Elem()
}

func (o GetModelEvaluationResultClassMetricArrayOutput) ToGetModelEvaluationResultClassMetricArrayOutput() GetModelEvaluationResultClassMetricArrayOutput {
	return o
}

func (o GetModelEvaluationResultClassMetricArrayOutput) ToGetModelEvaluationResultClassMetricArrayOutputWithContext(ctx context.Context) GetModelEvaluationResultClassMetricArrayOutput {
	return o
}

func (o GetModelEvaluationResultClassMetricArrayOutput) Index(i pulumi.IntInput) GetModelEvaluationResultClassMetricOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelEvaluationResultClassMetric {
		return vs[0].([]GetModelEvaluationResultClassMetric)[vs[1].(int)]
	}).(GetModelEvaluationResultClassMetricOutput)
}

type GetModelEvaluationResultEntityMetric struct {
	// F1-score, is a measure of a model’s accuracy on a dataset
	F1 float64 `pulumi:"f1"`
	// Entity label
	Label string `pulumi:"label"`
	// Precision refers to the number of true positives divided by the total number of positive predictions (i.e., the number of true positives plus the number of false positives)
	Precision float64 `pulumi:"precision"`
	// Measures the model's ability to predict actual positive classes. It is the ratio between the predicted true positives and what was actually tagged. The recall metric reveals how many of the predicted classes are correct.
	Recall float64 `pulumi:"recall"`
}

// GetModelEvaluationResultEntityMetricInput is an input type that accepts GetModelEvaluationResultEntityMetricArgs and GetModelEvaluationResultEntityMetricOutput values.
// You can construct a concrete instance of `GetModelEvaluationResultEntityMetricInput` via:
//
//	GetModelEvaluationResultEntityMetricArgs{...}
type GetModelEvaluationResultEntityMetricInput interface {
	pulumi.Input

	ToGetModelEvaluationResultEntityMetricOutput() GetModelEvaluationResultEntityMetricOutput
	ToGetModelEvaluationResultEntityMetricOutputWithContext(context.Context) GetModelEvaluationResultEntityMetricOutput
}

type GetModelEvaluationResultEntityMetricArgs struct {
	// F1-score, is a measure of a model’s accuracy on a dataset
	F1 pulumi.Float64Input `pulumi:"f1"`
	// Entity label
	Label pulumi.StringInput `pulumi:"label"`
	// Precision refers to the number of true positives divided by the total number of positive predictions (i.e., the number of true positives plus the number of false positives)
	Precision pulumi.Float64Input `pulumi:"precision"`
	// Measures the model's ability to predict actual positive classes. It is the ratio between the predicted true positives and what was actually tagged. The recall metric reveals how many of the predicted classes are correct.
	Recall pulumi.Float64Input `pulumi:"recall"`
}

func (GetModelEvaluationResultEntityMetricArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelEvaluationResultEntityMetric)(nil)).Elem()
}

func (i GetModelEvaluationResultEntityMetricArgs) ToGetModelEvaluationResultEntityMetricOutput() GetModelEvaluationResultEntityMetricOutput {
	return i.ToGetModelEvaluationResultEntityMetricOutputWithContext(context.Background())
}

func (i GetModelEvaluationResultEntityMetricArgs) ToGetModelEvaluationResultEntityMetricOutputWithContext(ctx context.Context) GetModelEvaluationResultEntityMetricOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelEvaluationResultEntityMetricOutput)
}

// GetModelEvaluationResultEntityMetricArrayInput is an input type that accepts GetModelEvaluationResultEntityMetricArray and GetModelEvaluationResultEntityMetricArrayOutput values.
// You can construct a concrete instance of `GetModelEvaluationResultEntityMetricArrayInput` via:
//
//	GetModelEvaluationResultEntityMetricArray{ GetModelEvaluationResultEntityMetricArgs{...} }
type GetModelEvaluationResultEntityMetricArrayInput interface {
	pulumi.Input

	ToGetModelEvaluationResultEntityMetricArrayOutput() GetModelEvaluationResultEntityMetricArrayOutput
	ToGetModelEvaluationResultEntityMetricArrayOutputWithContext(context.Context) GetModelEvaluationResultEntityMetricArrayOutput
}

type GetModelEvaluationResultEntityMetricArray []GetModelEvaluationResultEntityMetricInput

func (GetModelEvaluationResultEntityMetricArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelEvaluationResultEntityMetric)(nil)).Elem()
}

func (i GetModelEvaluationResultEntityMetricArray) ToGetModelEvaluationResultEntityMetricArrayOutput() GetModelEvaluationResultEntityMetricArrayOutput {
	return i.ToGetModelEvaluationResultEntityMetricArrayOutputWithContext(context.Background())
}

func (i GetModelEvaluationResultEntityMetricArray) ToGetModelEvaluationResultEntityMetricArrayOutputWithContext(ctx context.Context) GetModelEvaluationResultEntityMetricArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelEvaluationResultEntityMetricArrayOutput)
}

type GetModelEvaluationResultEntityMetricOutput struct{ *pulumi.OutputState }

func (GetModelEvaluationResultEntityMetricOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelEvaluationResultEntityMetric)(nil)).Elem()
}

func (o GetModelEvaluationResultEntityMetricOutput) ToGetModelEvaluationResultEntityMetricOutput() GetModelEvaluationResultEntityMetricOutput {
	return o
}

func (o GetModelEvaluationResultEntityMetricOutput) ToGetModelEvaluationResultEntityMetricOutputWithContext(ctx context.Context) GetModelEvaluationResultEntityMetricOutput {
	return o
}

// F1-score, is a measure of a model’s accuracy on a dataset
func (o GetModelEvaluationResultEntityMetricOutput) F1() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelEvaluationResultEntityMetric) float64 { return v.F1 }).(pulumi.Float64Output)
}

// Entity label
func (o GetModelEvaluationResultEntityMetricOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelEvaluationResultEntityMetric) string { return v.Label }).(pulumi.StringOutput)
}

// Precision refers to the number of true positives divided by the total number of positive predictions (i.e., the number of true positives plus the number of false positives)
func (o GetModelEvaluationResultEntityMetricOutput) Precision() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelEvaluationResultEntityMetric) float64 { return v.Precision }).(pulumi.Float64Output)
}

// Measures the model's ability to predict actual positive classes. It is the ratio between the predicted true positives and what was actually tagged. The recall metric reveals how many of the predicted classes are correct.
func (o GetModelEvaluationResultEntityMetricOutput) Recall() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelEvaluationResultEntityMetric) float64 { return v.Recall }).(pulumi.Float64Output)
}

type GetModelEvaluationResultEntityMetricArrayOutput struct{ *pulumi.OutputState }

func (GetModelEvaluationResultEntityMetricArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelEvaluationResultEntityMetric)(nil)).Elem()
}

func (o GetModelEvaluationResultEntityMetricArrayOutput) ToGetModelEvaluationResultEntityMetricArrayOutput() GetModelEvaluationResultEntityMetricArrayOutput {
	return o
}

func (o GetModelEvaluationResultEntityMetricArrayOutput) ToGetModelEvaluationResultEntityMetricArrayOutputWithContext(ctx context.Context) GetModelEvaluationResultEntityMetricArrayOutput {
	return o
}

func (o GetModelEvaluationResultEntityMetricArrayOutput) Index(i pulumi.IntInput) GetModelEvaluationResultEntityMetricOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelEvaluationResultEntityMetric {
		return vs[0].([]GetModelEvaluationResultEntityMetric)[vs[1].(int)]
	}).(GetModelEvaluationResultEntityMetricOutput)
}

type GetModelEvaluationResultMetric struct {
	// The fraction of the labels that were correctly recognised .
	Accuracy float64 `pulumi:"accuracy"`
	// F1-score, is a measure of a model’s accuracy on a dataset
	MacroF1 float64 `pulumi:"macroF1"`
	// Precision refers to the number of true positives divided by the total number of positive predictions (i.e., the number of true positives plus the number of false positives)
	MacroPrecision float64 `pulumi:"macroPrecision"`
	// Measures the model's ability to predict actual positive classes. It is the ratio between the predicted true positives and what was actually tagged. The recall metric reveals how many of the predicted classes are correct.
	MacroRecall float64 `pulumi:"macroRecall"`
	// F1-score, is a measure of a model’s accuracy on a dataset
	MicroF1 float64 `pulumi:"microF1"`
	// Precision refers to the number of true positives divided by the total number of positive predictions (i.e., the number of true positives plus the number of false positives)
	MicroPrecision float64 `pulumi:"microPrecision"`
	// Measures the model's ability to predict actual positive classes. It is the ratio between the predicted true positives and what was actually tagged. The recall metric reveals how many of the predicted classes are correct.
	MicroRecall float64 `pulumi:"microRecall"`
	// F1-score, is a measure of a model’s accuracy on a dataset
	WeightedF1 float64 `pulumi:"weightedF1"`
	// Precision refers to the number of true positives divided by the total number of positive predictions (i.e., the number of true positives plus the number of false positives)
	WeightedPrecision float64 `pulumi:"weightedPrecision"`
	// Measures the model's ability to predict actual positive classes. It is the ratio between the predicted true positives and what was actually tagged. The recall metric reveals how many of the predicted classes are correct.
	WeightedRecall float64 `pulumi:"weightedRecall"`
}

// GetModelEvaluationResultMetricInput is an input type that accepts GetModelEvaluationResultMetricArgs and GetModelEvaluationResultMetricOutput values.
// You can construct a concrete instance of `GetModelEvaluationResultMetricInput` via:
//
//	GetModelEvaluationResultMetricArgs{...}
type GetModelEvaluationResultMetricInput interface {
	pulumi.Input

	ToGetModelEvaluationResultMetricOutput() GetModelEvaluationResultMetricOutput
	ToGetModelEvaluationResultMetricOutputWithContext(context.Context) GetModelEvaluationResultMetricOutput
}

type GetModelEvaluationResultMetricArgs struct {
	// The fraction of the labels that were correctly recognised .
	Accuracy pulumi.Float64Input `pulumi:"accuracy"`
	// F1-score, is a measure of a model’s accuracy on a dataset
	MacroF1 pulumi.Float64Input `pulumi:"macroF1"`
	// Precision refers to the number of true positives divided by the total number of positive predictions (i.e., the number of true positives plus the number of false positives)
	MacroPrecision pulumi.Float64Input `pulumi:"macroPrecision"`
	// Measures the model's ability to predict actual positive classes. It is the ratio between the predicted true positives and what was actually tagged. The recall metric reveals how many of the predicted classes are correct.
	MacroRecall pulumi.Float64Input `pulumi:"macroRecall"`
	// F1-score, is a measure of a model’s accuracy on a dataset
	MicroF1 pulumi.Float64Input `pulumi:"microF1"`
	// Precision refers to the number of true positives divided by the total number of positive predictions (i.e., the number of true positives plus the number of false positives)
	MicroPrecision pulumi.Float64Input `pulumi:"microPrecision"`
	// Measures the model's ability to predict actual positive classes. It is the ratio between the predicted true positives and what was actually tagged. The recall metric reveals how many of the predicted classes are correct.
	MicroRecall pulumi.Float64Input `pulumi:"microRecall"`
	// F1-score, is a measure of a model’s accuracy on a dataset
	WeightedF1 pulumi.Float64Input `pulumi:"weightedF1"`
	// Precision refers to the number of true positives divided by the total number of positive predictions (i.e., the number of true positives plus the number of false positives)
	WeightedPrecision pulumi.Float64Input `pulumi:"weightedPrecision"`
	// Measures the model's ability to predict actual positive classes. It is the ratio between the predicted true positives and what was actually tagged. The recall metric reveals how many of the predicted classes are correct.
	WeightedRecall pulumi.Float64Input `pulumi:"weightedRecall"`
}

func (GetModelEvaluationResultMetricArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelEvaluationResultMetric)(nil)).Elem()
}

func (i GetModelEvaluationResultMetricArgs) ToGetModelEvaluationResultMetricOutput() GetModelEvaluationResultMetricOutput {
	return i.ToGetModelEvaluationResultMetricOutputWithContext(context.Background())
}

func (i GetModelEvaluationResultMetricArgs) ToGetModelEvaluationResultMetricOutputWithContext(ctx context.Context) GetModelEvaluationResultMetricOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelEvaluationResultMetricOutput)
}

// GetModelEvaluationResultMetricArrayInput is an input type that accepts GetModelEvaluationResultMetricArray and GetModelEvaluationResultMetricArrayOutput values.
// You can construct a concrete instance of `GetModelEvaluationResultMetricArrayInput` via:
//
//	GetModelEvaluationResultMetricArray{ GetModelEvaluationResultMetricArgs{...} }
type GetModelEvaluationResultMetricArrayInput interface {
	pulumi.Input

	ToGetModelEvaluationResultMetricArrayOutput() GetModelEvaluationResultMetricArrayOutput
	ToGetModelEvaluationResultMetricArrayOutputWithContext(context.Context) GetModelEvaluationResultMetricArrayOutput
}

type GetModelEvaluationResultMetricArray []GetModelEvaluationResultMetricInput

func (GetModelEvaluationResultMetricArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelEvaluationResultMetric)(nil)).Elem()
}

func (i GetModelEvaluationResultMetricArray) ToGetModelEvaluationResultMetricArrayOutput() GetModelEvaluationResultMetricArrayOutput {
	return i.ToGetModelEvaluationResultMetricArrayOutputWithContext(context.Background())
}

func (i GetModelEvaluationResultMetricArray) ToGetModelEvaluationResultMetricArrayOutputWithContext(ctx context.Context) GetModelEvaluationResultMetricArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelEvaluationResultMetricArrayOutput)
}

type GetModelEvaluationResultMetricOutput struct{ *pulumi.OutputState }

func (GetModelEvaluationResultMetricOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelEvaluationResultMetric)(nil)).Elem()
}

func (o GetModelEvaluationResultMetricOutput) ToGetModelEvaluationResultMetricOutput() GetModelEvaluationResultMetricOutput {
	return o
}

func (o GetModelEvaluationResultMetricOutput) ToGetModelEvaluationResultMetricOutputWithContext(ctx context.Context) GetModelEvaluationResultMetricOutput {
	return o
}

// The fraction of the labels that were correctly recognised .
func (o GetModelEvaluationResultMetricOutput) Accuracy() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelEvaluationResultMetric) float64 { return v.Accuracy }).(pulumi.Float64Output)
}

// F1-score, is a measure of a model’s accuracy on a dataset
func (o GetModelEvaluationResultMetricOutput) MacroF1() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelEvaluationResultMetric) float64 { return v.MacroF1 }).(pulumi.Float64Output)
}

// Precision refers to the number of true positives divided by the total number of positive predictions (i.e., the number of true positives plus the number of false positives)
func (o GetModelEvaluationResultMetricOutput) MacroPrecision() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelEvaluationResultMetric) float64 { return v.MacroPrecision }).(pulumi.Float64Output)
}

// Measures the model's ability to predict actual positive classes. It is the ratio between the predicted true positives and what was actually tagged. The recall metric reveals how many of the predicted classes are correct.
func (o GetModelEvaluationResultMetricOutput) MacroRecall() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelEvaluationResultMetric) float64 { return v.MacroRecall }).(pulumi.Float64Output)
}

// F1-score, is a measure of a model’s accuracy on a dataset
func (o GetModelEvaluationResultMetricOutput) MicroF1() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelEvaluationResultMetric) float64 { return v.MicroF1 }).(pulumi.Float64Output)
}

// Precision refers to the number of true positives divided by the total number of positive predictions (i.e., the number of true positives plus the number of false positives)
func (o GetModelEvaluationResultMetricOutput) MicroPrecision() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelEvaluationResultMetric) float64 { return v.MicroPrecision }).(pulumi.Float64Output)
}

// Measures the model's ability to predict actual positive classes. It is the ratio between the predicted true positives and what was actually tagged. The recall metric reveals how many of the predicted classes are correct.
func (o GetModelEvaluationResultMetricOutput) MicroRecall() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelEvaluationResultMetric) float64 { return v.MicroRecall }).(pulumi.Float64Output)
}

// F1-score, is a measure of a model’s accuracy on a dataset
func (o GetModelEvaluationResultMetricOutput) WeightedF1() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelEvaluationResultMetric) float64 { return v.WeightedF1 }).(pulumi.Float64Output)
}

// Precision refers to the number of true positives divided by the total number of positive predictions (i.e., the number of true positives plus the number of false positives)
func (o GetModelEvaluationResultMetricOutput) WeightedPrecision() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelEvaluationResultMetric) float64 { return v.WeightedPrecision }).(pulumi.Float64Output)
}

// Measures the model's ability to predict actual positive classes. It is the ratio between the predicted true positives and what was actually tagged. The recall metric reveals how many of the predicted classes are correct.
func (o GetModelEvaluationResultMetricOutput) WeightedRecall() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelEvaluationResultMetric) float64 { return v.WeightedRecall }).(pulumi.Float64Output)
}

type GetModelEvaluationResultMetricArrayOutput struct{ *pulumi.OutputState }

func (GetModelEvaluationResultMetricArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelEvaluationResultMetric)(nil)).Elem()
}

func (o GetModelEvaluationResultMetricArrayOutput) ToGetModelEvaluationResultMetricArrayOutput() GetModelEvaluationResultMetricArrayOutput {
	return o
}

func (o GetModelEvaluationResultMetricArrayOutput) ToGetModelEvaluationResultMetricArrayOutputWithContext(ctx context.Context) GetModelEvaluationResultMetricArrayOutput {
	return o
}

func (o GetModelEvaluationResultMetricArrayOutput) Index(i pulumi.IntInput) GetModelEvaluationResultMetricOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelEvaluationResultMetric {
		return vs[0].([]GetModelEvaluationResultMetric)[vs[1].(int)]
	}).(GetModelEvaluationResultMetricOutput)
}

type GetModelEvaluationResultsEvaluationResultCollection struct {
	// List of model evaluation analysis
	Items []GetModelEvaluationResultsEvaluationResultCollectionItem `pulumi:"items"`
}

// GetModelEvaluationResultsEvaluationResultCollectionInput is an input type that accepts GetModelEvaluationResultsEvaluationResultCollectionArgs and GetModelEvaluationResultsEvaluationResultCollectionOutput values.
// You can construct a concrete instance of `GetModelEvaluationResultsEvaluationResultCollectionInput` via:
//
//	GetModelEvaluationResultsEvaluationResultCollectionArgs{...}
type GetModelEvaluationResultsEvaluationResultCollectionInput interface {
	pulumi.Input

	ToGetModelEvaluationResultsEvaluationResultCollectionOutput() GetModelEvaluationResultsEvaluationResultCollectionOutput
	ToGetModelEvaluationResultsEvaluationResultCollectionOutputWithContext(context.Context) GetModelEvaluationResultsEvaluationResultCollectionOutput
}

type GetModelEvaluationResultsEvaluationResultCollectionArgs struct {
	// List of model evaluation analysis
	Items GetModelEvaluationResultsEvaluationResultCollectionItemArrayInput `pulumi:"items"`
}

func (GetModelEvaluationResultsEvaluationResultCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelEvaluationResultsEvaluationResultCollection)(nil)).Elem()
}

func (i GetModelEvaluationResultsEvaluationResultCollectionArgs) ToGetModelEvaluationResultsEvaluationResultCollectionOutput() GetModelEvaluationResultsEvaluationResultCollectionOutput {
	return i.ToGetModelEvaluationResultsEvaluationResultCollectionOutputWithContext(context.Background())
}

func (i GetModelEvaluationResultsEvaluationResultCollectionArgs) ToGetModelEvaluationResultsEvaluationResultCollectionOutputWithContext(ctx context.Context) GetModelEvaluationResultsEvaluationResultCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelEvaluationResultsEvaluationResultCollectionOutput)
}

// GetModelEvaluationResultsEvaluationResultCollectionArrayInput is an input type that accepts GetModelEvaluationResultsEvaluationResultCollectionArray and GetModelEvaluationResultsEvaluationResultCollectionArrayOutput values.
// You can construct a concrete instance of `GetModelEvaluationResultsEvaluationResultCollectionArrayInput` via:
//
//	GetModelEvaluationResultsEvaluationResultCollectionArray{ GetModelEvaluationResultsEvaluationResultCollectionArgs{...} }
type GetModelEvaluationResultsEvaluationResultCollectionArrayInput interface {
	pulumi.Input

	ToGetModelEvaluationResultsEvaluationResultCollectionArrayOutput() GetModelEvaluationResultsEvaluationResultCollectionArrayOutput
	ToGetModelEvaluationResultsEvaluationResultCollectionArrayOutputWithContext(context.Context) GetModelEvaluationResultsEvaluationResultCollectionArrayOutput
}

type GetModelEvaluationResultsEvaluationResultCollectionArray []GetModelEvaluationResultsEvaluationResultCollectionInput

func (GetModelEvaluationResultsEvaluationResultCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelEvaluationResultsEvaluationResultCollection)(nil)).Elem()
}

func (i GetModelEvaluationResultsEvaluationResultCollectionArray) ToGetModelEvaluationResultsEvaluationResultCollectionArrayOutput() GetModelEvaluationResultsEvaluationResultCollectionArrayOutput {
	return i.ToGetModelEvaluationResultsEvaluationResultCollectionArrayOutputWithContext(context.Background())
}

func (i GetModelEvaluationResultsEvaluationResultCollectionArray) ToGetModelEvaluationResultsEvaluationResultCollectionArrayOutputWithContext(ctx context.Context) GetModelEvaluationResultsEvaluationResultCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelEvaluationResultsEvaluationResultCollectionArrayOutput)
}

type GetModelEvaluationResultsEvaluationResultCollectionOutput struct{ *pulumi.OutputState }

func (GetModelEvaluationResultsEvaluationResultCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelEvaluationResultsEvaluationResultCollection)(nil)).Elem()
}

func (o GetModelEvaluationResultsEvaluationResultCollectionOutput) ToGetModelEvaluationResultsEvaluationResultCollectionOutput() GetModelEvaluationResultsEvaluationResultCollectionOutput {
	return o
}

func (o GetModelEvaluationResultsEvaluationResultCollectionOutput) ToGetModelEvaluationResultsEvaluationResultCollectionOutputWithContext(ctx context.Context) GetModelEvaluationResultsEvaluationResultCollectionOutput {
	return o
}

// List of model evaluation analysis
func (o GetModelEvaluationResultsEvaluationResultCollectionOutput) Items() GetModelEvaluationResultsEvaluationResultCollectionItemArrayOutput {
	return o.ApplyT(func(v GetModelEvaluationResultsEvaluationResultCollection) []GetModelEvaluationResultsEvaluationResultCollectionItem {
		return v.Items
	}).(GetModelEvaluationResultsEvaluationResultCollectionItemArrayOutput)
}

type GetModelEvaluationResultsEvaluationResultCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetModelEvaluationResultsEvaluationResultCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelEvaluationResultsEvaluationResultCollection)(nil)).Elem()
}

func (o GetModelEvaluationResultsEvaluationResultCollectionArrayOutput) ToGetModelEvaluationResultsEvaluationResultCollectionArrayOutput() GetModelEvaluationResultsEvaluationResultCollectionArrayOutput {
	return o
}

func (o GetModelEvaluationResultsEvaluationResultCollectionArrayOutput) ToGetModelEvaluationResultsEvaluationResultCollectionArrayOutputWithContext(ctx context.Context) GetModelEvaluationResultsEvaluationResultCollectionArrayOutput {
	return o
}

func (o GetModelEvaluationResultsEvaluationResultCollectionArrayOutput) Index(i pulumi.IntInput) GetModelEvaluationResultsEvaluationResultCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelEvaluationResultsEvaluationResultCollection {
		return vs[0].([]GetModelEvaluationResultsEvaluationResultCollection)[vs[1].(int)]
	}).(GetModelEvaluationResultsEvaluationResultCollectionOutput)
}

type GetModelEvaluationResultsEvaluationResultCollectionItem struct {
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// For CSV format location is rowId(1 is header) and for JSONL location is jsonL line sequence(1 is metadata)
	Location string `pulumi:"location"`
	// Model type
	ModelType string `pulumi:"modelType"`
	// List of true(actual) entities in test data for NER model
	PredictedEntities []GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntity `pulumi:"predictedEntities"`
	// List of predicted labels by custom multi class or multi label TextClassification model
	PredictedLabels []string `pulumi:"predictedLabels"`
	// For CSV format location is rowId(1 is header) and for JSONL location is jsonL line sequence(1 is metadata)
	Record string `pulumi:"record"`
	// List of true(actual) entities in test data for NER model
	TrueEntities []GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntity `pulumi:"trueEntities"`
	// List of true(actual) labels in test data for multi class or multi label TextClassification
	TrueLabels []string `pulumi:"trueLabels"`
}

// GetModelEvaluationResultsEvaluationResultCollectionItemInput is an input type that accepts GetModelEvaluationResultsEvaluationResultCollectionItemArgs and GetModelEvaluationResultsEvaluationResultCollectionItemOutput values.
// You can construct a concrete instance of `GetModelEvaluationResultsEvaluationResultCollectionItemInput` via:
//
//	GetModelEvaluationResultsEvaluationResultCollectionItemArgs{...}
type GetModelEvaluationResultsEvaluationResultCollectionItemInput interface {
	pulumi.Input

	ToGetModelEvaluationResultsEvaluationResultCollectionItemOutput() GetModelEvaluationResultsEvaluationResultCollectionItemOutput
	ToGetModelEvaluationResultsEvaluationResultCollectionItemOutputWithContext(context.Context) GetModelEvaluationResultsEvaluationResultCollectionItemOutput
}

type GetModelEvaluationResultsEvaluationResultCollectionItemArgs struct {
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// For CSV format location is rowId(1 is header) and for JSONL location is jsonL line sequence(1 is metadata)
	Location pulumi.StringInput `pulumi:"location"`
	// Model type
	ModelType pulumi.StringInput `pulumi:"modelType"`
	// List of true(actual) entities in test data for NER model
	PredictedEntities GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityArrayInput `pulumi:"predictedEntities"`
	// List of predicted labels by custom multi class or multi label TextClassification model
	PredictedLabels pulumi.StringArrayInput `pulumi:"predictedLabels"`
	// For CSV format location is rowId(1 is header) and for JSONL location is jsonL line sequence(1 is metadata)
	Record pulumi.StringInput `pulumi:"record"`
	// List of true(actual) entities in test data for NER model
	TrueEntities GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityArrayInput `pulumi:"trueEntities"`
	// List of true(actual) labels in test data for multi class or multi label TextClassification
	TrueLabels pulumi.StringArrayInput `pulumi:"trueLabels"`
}

func (GetModelEvaluationResultsEvaluationResultCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelEvaluationResultsEvaluationResultCollectionItem)(nil)).Elem()
}

func (i GetModelEvaluationResultsEvaluationResultCollectionItemArgs) ToGetModelEvaluationResultsEvaluationResultCollectionItemOutput() GetModelEvaluationResultsEvaluationResultCollectionItemOutput {
	return i.ToGetModelEvaluationResultsEvaluationResultCollectionItemOutputWithContext(context.Background())
}

func (i GetModelEvaluationResultsEvaluationResultCollectionItemArgs) ToGetModelEvaluationResultsEvaluationResultCollectionItemOutputWithContext(ctx context.Context) GetModelEvaluationResultsEvaluationResultCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelEvaluationResultsEvaluationResultCollectionItemOutput)
}

// GetModelEvaluationResultsEvaluationResultCollectionItemArrayInput is an input type that accepts GetModelEvaluationResultsEvaluationResultCollectionItemArray and GetModelEvaluationResultsEvaluationResultCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetModelEvaluationResultsEvaluationResultCollectionItemArrayInput` via:
//
//	GetModelEvaluationResultsEvaluationResultCollectionItemArray{ GetModelEvaluationResultsEvaluationResultCollectionItemArgs{...} }
type GetModelEvaluationResultsEvaluationResultCollectionItemArrayInput interface {
	pulumi.Input

	ToGetModelEvaluationResultsEvaluationResultCollectionItemArrayOutput() GetModelEvaluationResultsEvaluationResultCollectionItemArrayOutput
	ToGetModelEvaluationResultsEvaluationResultCollectionItemArrayOutputWithContext(context.Context) GetModelEvaluationResultsEvaluationResultCollectionItemArrayOutput
}

type GetModelEvaluationResultsEvaluationResultCollectionItemArray []GetModelEvaluationResultsEvaluationResultCollectionItemInput

func (GetModelEvaluationResultsEvaluationResultCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelEvaluationResultsEvaluationResultCollectionItem)(nil)).Elem()
}

func (i GetModelEvaluationResultsEvaluationResultCollectionItemArray) ToGetModelEvaluationResultsEvaluationResultCollectionItemArrayOutput() GetModelEvaluationResultsEvaluationResultCollectionItemArrayOutput {
	return i.ToGetModelEvaluationResultsEvaluationResultCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetModelEvaluationResultsEvaluationResultCollectionItemArray) ToGetModelEvaluationResultsEvaluationResultCollectionItemArrayOutputWithContext(ctx context.Context) GetModelEvaluationResultsEvaluationResultCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelEvaluationResultsEvaluationResultCollectionItemArrayOutput)
}

type GetModelEvaluationResultsEvaluationResultCollectionItemOutput struct{ *pulumi.OutputState }

func (GetModelEvaluationResultsEvaluationResultCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelEvaluationResultsEvaluationResultCollectionItem)(nil)).Elem()
}

func (o GetModelEvaluationResultsEvaluationResultCollectionItemOutput) ToGetModelEvaluationResultsEvaluationResultCollectionItemOutput() GetModelEvaluationResultsEvaluationResultCollectionItemOutput {
	return o
}

func (o GetModelEvaluationResultsEvaluationResultCollectionItemOutput) ToGetModelEvaluationResultsEvaluationResultCollectionItemOutputWithContext(ctx context.Context) GetModelEvaluationResultsEvaluationResultCollectionItemOutput {
	return o
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetModelEvaluationResultsEvaluationResultCollectionItemOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetModelEvaluationResultsEvaluationResultCollectionItem) map[string]string {
		return v.DefinedTags
	}).(pulumi.StringMapOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetModelEvaluationResultsEvaluationResultCollectionItemOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetModelEvaluationResultsEvaluationResultCollectionItem) map[string]string {
		return v.FreeformTags
	}).(pulumi.StringMapOutput)
}

// For CSV format location is rowId(1 is header) and for JSONL location is jsonL line sequence(1 is metadata)
func (o GetModelEvaluationResultsEvaluationResultCollectionItemOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelEvaluationResultsEvaluationResultCollectionItem) string { return v.Location }).(pulumi.StringOutput)
}

// Model type
func (o GetModelEvaluationResultsEvaluationResultCollectionItemOutput) ModelType() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelEvaluationResultsEvaluationResultCollectionItem) string { return v.ModelType }).(pulumi.StringOutput)
}

// List of true(actual) entities in test data for NER model
func (o GetModelEvaluationResultsEvaluationResultCollectionItemOutput) PredictedEntities() GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityArrayOutput {
	return o.ApplyT(func(v GetModelEvaluationResultsEvaluationResultCollectionItem) []GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntity {
		return v.PredictedEntities
	}).(GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityArrayOutput)
}

// List of predicted labels by custom multi class or multi label TextClassification model
func (o GetModelEvaluationResultsEvaluationResultCollectionItemOutput) PredictedLabels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetModelEvaluationResultsEvaluationResultCollectionItem) []string { return v.PredictedLabels }).(pulumi.StringArrayOutput)
}

// For CSV format location is rowId(1 is header) and for JSONL location is jsonL line sequence(1 is metadata)
func (o GetModelEvaluationResultsEvaluationResultCollectionItemOutput) Record() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelEvaluationResultsEvaluationResultCollectionItem) string { return v.Record }).(pulumi.StringOutput)
}

// List of true(actual) entities in test data for NER model
func (o GetModelEvaluationResultsEvaluationResultCollectionItemOutput) TrueEntities() GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityArrayOutput {
	return o.ApplyT(func(v GetModelEvaluationResultsEvaluationResultCollectionItem) []GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntity {
		return v.TrueEntities
	}).(GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityArrayOutput)
}

// List of true(actual) labels in test data for multi class or multi label TextClassification
func (o GetModelEvaluationResultsEvaluationResultCollectionItemOutput) TrueLabels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetModelEvaluationResultsEvaluationResultCollectionItem) []string { return v.TrueLabels }).(pulumi.StringArrayOutput)
}

type GetModelEvaluationResultsEvaluationResultCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetModelEvaluationResultsEvaluationResultCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelEvaluationResultsEvaluationResultCollectionItem)(nil)).Elem()
}

func (o GetModelEvaluationResultsEvaluationResultCollectionItemArrayOutput) ToGetModelEvaluationResultsEvaluationResultCollectionItemArrayOutput() GetModelEvaluationResultsEvaluationResultCollectionItemArrayOutput {
	return o
}

func (o GetModelEvaluationResultsEvaluationResultCollectionItemArrayOutput) ToGetModelEvaluationResultsEvaluationResultCollectionItemArrayOutputWithContext(ctx context.Context) GetModelEvaluationResultsEvaluationResultCollectionItemArrayOutput {
	return o
}

func (o GetModelEvaluationResultsEvaluationResultCollectionItemArrayOutput) Index(i pulumi.IntInput) GetModelEvaluationResultsEvaluationResultCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelEvaluationResultsEvaluationResultCollectionItem {
		return vs[0].([]GetModelEvaluationResultsEvaluationResultCollectionItem)[vs[1].(int)]
	}).(GetModelEvaluationResultsEvaluationResultCollectionItemOutput)
}

type GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntity struct {
	// Length of text
	Length int `pulumi:"length"`
	// Starting index on text.
	Offset int `pulumi:"offset"`
	// Type of entity text like PER, LOC, GPE, NOPE etc.
	Type string `pulumi:"type"`
}

// GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityInput is an input type that accepts GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityArgs and GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityOutput values.
// You can construct a concrete instance of `GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityInput` via:
//
//	GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityArgs{...}
type GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityInput interface {
	pulumi.Input

	ToGetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityOutput() GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityOutput
	ToGetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityOutputWithContext(context.Context) GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityOutput
}

type GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityArgs struct {
	// Length of text
	Length pulumi.IntInput `pulumi:"length"`
	// Starting index on text.
	Offset pulumi.IntInput `pulumi:"offset"`
	// Type of entity text like PER, LOC, GPE, NOPE etc.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntity)(nil)).Elem()
}

func (i GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityArgs) ToGetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityOutput() GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityOutput {
	return i.ToGetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityOutputWithContext(context.Background())
}

func (i GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityArgs) ToGetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityOutputWithContext(ctx context.Context) GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityOutput)
}

// GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityArrayInput is an input type that accepts GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityArray and GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityArrayOutput values.
// You can construct a concrete instance of `GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityArrayInput` via:
//
//	GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityArray{ GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityArgs{...} }
type GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityArrayInput interface {
	pulumi.Input

	ToGetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityArrayOutput() GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityArrayOutput
	ToGetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityArrayOutputWithContext(context.Context) GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityArrayOutput
}

type GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityArray []GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityInput

func (GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntity)(nil)).Elem()
}

func (i GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityArray) ToGetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityArrayOutput() GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityArrayOutput {
	return i.ToGetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityArrayOutputWithContext(context.Background())
}

func (i GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityArray) ToGetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityArrayOutputWithContext(ctx context.Context) GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityArrayOutput)
}

type GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityOutput struct{ *pulumi.OutputState }

func (GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntity)(nil)).Elem()
}

func (o GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityOutput) ToGetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityOutput() GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityOutput {
	return o
}

func (o GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityOutput) ToGetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityOutputWithContext(ctx context.Context) GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityOutput {
	return o
}

// Length of text
func (o GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityOutput) Length() pulumi.IntOutput {
	return o.ApplyT(func(v GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntity) int { return v.Length }).(pulumi.IntOutput)
}

// Starting index on text.
func (o GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityOutput) Offset() pulumi.IntOutput {
	return o.ApplyT(func(v GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntity) int { return v.Offset }).(pulumi.IntOutput)
}

// Type of entity text like PER, LOC, GPE, NOPE etc.
func (o GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntity) string { return v.Type }).(pulumi.StringOutput)
}

type GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityArrayOutput struct{ *pulumi.OutputState }

func (GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntity)(nil)).Elem()
}

func (o GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityArrayOutput) ToGetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityArrayOutput() GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityArrayOutput {
	return o
}

func (o GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityArrayOutput) ToGetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityArrayOutputWithContext(ctx context.Context) GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityArrayOutput {
	return o
}

func (o GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityArrayOutput) Index(i pulumi.IntInput) GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntity {
		return vs[0].([]GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntity)[vs[1].(int)]
	}).(GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityOutput)
}

type GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntity struct {
	// Length of text
	Length int `pulumi:"length"`
	// Starting index on text.
	Offset int `pulumi:"offset"`
	// Type of entity text like PER, LOC, GPE, NOPE etc.
	Type string `pulumi:"type"`
}

// GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityInput is an input type that accepts GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityArgs and GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityOutput values.
// You can construct a concrete instance of `GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityInput` via:
//
//	GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityArgs{...}
type GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityInput interface {
	pulumi.Input

	ToGetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityOutput() GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityOutput
	ToGetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityOutputWithContext(context.Context) GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityOutput
}

type GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityArgs struct {
	// Length of text
	Length pulumi.IntInput `pulumi:"length"`
	// Starting index on text.
	Offset pulumi.IntInput `pulumi:"offset"`
	// Type of entity text like PER, LOC, GPE, NOPE etc.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntity)(nil)).Elem()
}

func (i GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityArgs) ToGetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityOutput() GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityOutput {
	return i.ToGetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityOutputWithContext(context.Background())
}

func (i GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityArgs) ToGetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityOutputWithContext(ctx context.Context) GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityOutput)
}

// GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityArrayInput is an input type that accepts GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityArray and GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityArrayOutput values.
// You can construct a concrete instance of `GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityArrayInput` via:
//
//	GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityArray{ GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityArgs{...} }
type GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityArrayInput interface {
	pulumi.Input

	ToGetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityArrayOutput() GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityArrayOutput
	ToGetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityArrayOutputWithContext(context.Context) GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityArrayOutput
}

type GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityArray []GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityInput

func (GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntity)(nil)).Elem()
}

func (i GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityArray) ToGetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityArrayOutput() GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityArrayOutput {
	return i.ToGetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityArrayOutputWithContext(context.Background())
}

func (i GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityArray) ToGetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityArrayOutputWithContext(ctx context.Context) GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityArrayOutput)
}

type GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityOutput struct{ *pulumi.OutputState }

func (GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntity)(nil)).Elem()
}

func (o GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityOutput) ToGetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityOutput() GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityOutput {
	return o
}

func (o GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityOutput) ToGetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityOutputWithContext(ctx context.Context) GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityOutput {
	return o
}

// Length of text
func (o GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityOutput) Length() pulumi.IntOutput {
	return o.ApplyT(func(v GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntity) int { return v.Length }).(pulumi.IntOutput)
}

// Starting index on text.
func (o GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityOutput) Offset() pulumi.IntOutput {
	return o.ApplyT(func(v GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntity) int { return v.Offset }).(pulumi.IntOutput)
}

// Type of entity text like PER, LOC, GPE, NOPE etc.
func (o GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntity) string { return v.Type }).(pulumi.StringOutput)
}

type GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityArrayOutput struct{ *pulumi.OutputState }

func (GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntity)(nil)).Elem()
}

func (o GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityArrayOutput) ToGetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityArrayOutput() GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityArrayOutput {
	return o
}

func (o GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityArrayOutput) ToGetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityArrayOutputWithContext(ctx context.Context) GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityArrayOutput {
	return o
}

func (o GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityArrayOutput) Index(i pulumi.IntInput) GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntity {
		return vs[0].([]GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntity)[vs[1].(int)]
	}).(GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityOutput)
}

type GetModelEvaluationResultsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetModelEvaluationResultsFilterInput is an input type that accepts GetModelEvaluationResultsFilterArgs and GetModelEvaluationResultsFilterOutput values.
// You can construct a concrete instance of `GetModelEvaluationResultsFilterInput` via:
//
//	GetModelEvaluationResultsFilterArgs{...}
type GetModelEvaluationResultsFilterInput interface {
	pulumi.Input

	ToGetModelEvaluationResultsFilterOutput() GetModelEvaluationResultsFilterOutput
	ToGetModelEvaluationResultsFilterOutputWithContext(context.Context) GetModelEvaluationResultsFilterOutput
}

type GetModelEvaluationResultsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetModelEvaluationResultsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelEvaluationResultsFilter)(nil)).Elem()
}

func (i GetModelEvaluationResultsFilterArgs) ToGetModelEvaluationResultsFilterOutput() GetModelEvaluationResultsFilterOutput {
	return i.ToGetModelEvaluationResultsFilterOutputWithContext(context.Background())
}

func (i GetModelEvaluationResultsFilterArgs) ToGetModelEvaluationResultsFilterOutputWithContext(ctx context.Context) GetModelEvaluationResultsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelEvaluationResultsFilterOutput)
}

// GetModelEvaluationResultsFilterArrayInput is an input type that accepts GetModelEvaluationResultsFilterArray and GetModelEvaluationResultsFilterArrayOutput values.
// You can construct a concrete instance of `GetModelEvaluationResultsFilterArrayInput` via:
//
//	GetModelEvaluationResultsFilterArray{ GetModelEvaluationResultsFilterArgs{...} }
type GetModelEvaluationResultsFilterArrayInput interface {
	pulumi.Input

	ToGetModelEvaluationResultsFilterArrayOutput() GetModelEvaluationResultsFilterArrayOutput
	ToGetModelEvaluationResultsFilterArrayOutputWithContext(context.Context) GetModelEvaluationResultsFilterArrayOutput
}

type GetModelEvaluationResultsFilterArray []GetModelEvaluationResultsFilterInput

func (GetModelEvaluationResultsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelEvaluationResultsFilter)(nil)).Elem()
}

func (i GetModelEvaluationResultsFilterArray) ToGetModelEvaluationResultsFilterArrayOutput() GetModelEvaluationResultsFilterArrayOutput {
	return i.ToGetModelEvaluationResultsFilterArrayOutputWithContext(context.Background())
}

func (i GetModelEvaluationResultsFilterArray) ToGetModelEvaluationResultsFilterArrayOutputWithContext(ctx context.Context) GetModelEvaluationResultsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelEvaluationResultsFilterArrayOutput)
}

type GetModelEvaluationResultsFilterOutput struct{ *pulumi.OutputState }

func (GetModelEvaluationResultsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelEvaluationResultsFilter)(nil)).Elem()
}

func (o GetModelEvaluationResultsFilterOutput) ToGetModelEvaluationResultsFilterOutput() GetModelEvaluationResultsFilterOutput {
	return o
}

func (o GetModelEvaluationResultsFilterOutput) ToGetModelEvaluationResultsFilterOutputWithContext(ctx context.Context) GetModelEvaluationResultsFilterOutput {
	return o
}

func (o GetModelEvaluationResultsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelEvaluationResultsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetModelEvaluationResultsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetModelEvaluationResultsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetModelEvaluationResultsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetModelEvaluationResultsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetModelEvaluationResultsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetModelEvaluationResultsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelEvaluationResultsFilter)(nil)).Elem()
}

func (o GetModelEvaluationResultsFilterArrayOutput) ToGetModelEvaluationResultsFilterArrayOutput() GetModelEvaluationResultsFilterArrayOutput {
	return o
}

func (o GetModelEvaluationResultsFilterArrayOutput) ToGetModelEvaluationResultsFilterArrayOutputWithContext(ctx context.Context) GetModelEvaluationResultsFilterArrayOutput {
	return o
}

func (o GetModelEvaluationResultsFilterArrayOutput) Index(i pulumi.IntInput) GetModelEvaluationResultsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelEvaluationResultsFilter {
		return vs[0].([]GetModelEvaluationResultsFilter)[vs[1].(int)]
	}).(GetModelEvaluationResultsFilterOutput)
}

type GetModelModelDetail struct {
	// classification Modes
	ClassificationModes []GetModelModelDetailClassificationMode `pulumi:"classificationModes"`
	// supported language default value is en
	LanguageCode string `pulumi:"languageCode"`
	// Model type
	ModelType string `pulumi:"modelType"`
	// For pre trained models this will identify model type version used for model creation For custom identifying the model by model id is difficult. This param provides ease of use for end customer. <<service>>::<<service-name>>_<<model-type-version>>::<<custom model on which this training has to be done>> ex: ai-lang::NER_V1::CUSTOM-V0
	Version string `pulumi:"version"`
}

// GetModelModelDetailInput is an input type that accepts GetModelModelDetailArgs and GetModelModelDetailOutput values.
// You can construct a concrete instance of `GetModelModelDetailInput` via:
//
//	GetModelModelDetailArgs{...}
type GetModelModelDetailInput interface {
	pulumi.Input

	ToGetModelModelDetailOutput() GetModelModelDetailOutput
	ToGetModelModelDetailOutputWithContext(context.Context) GetModelModelDetailOutput
}

type GetModelModelDetailArgs struct {
	// classification Modes
	ClassificationModes GetModelModelDetailClassificationModeArrayInput `pulumi:"classificationModes"`
	// supported language default value is en
	LanguageCode pulumi.StringInput `pulumi:"languageCode"`
	// Model type
	ModelType pulumi.StringInput `pulumi:"modelType"`
	// For pre trained models this will identify model type version used for model creation For custom identifying the model by model id is difficult. This param provides ease of use for end customer. <<service>>::<<service-name>>_<<model-type-version>>::<<custom model on which this training has to be done>> ex: ai-lang::NER_V1::CUSTOM-V0
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetModelModelDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelModelDetail)(nil)).Elem()
}

func (i GetModelModelDetailArgs) ToGetModelModelDetailOutput() GetModelModelDetailOutput {
	return i.ToGetModelModelDetailOutputWithContext(context.Background())
}

func (i GetModelModelDetailArgs) ToGetModelModelDetailOutputWithContext(ctx context.Context) GetModelModelDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelModelDetailOutput)
}

// GetModelModelDetailArrayInput is an input type that accepts GetModelModelDetailArray and GetModelModelDetailArrayOutput values.
// You can construct a concrete instance of `GetModelModelDetailArrayInput` via:
//
//	GetModelModelDetailArray{ GetModelModelDetailArgs{...} }
type GetModelModelDetailArrayInput interface {
	pulumi.Input

	ToGetModelModelDetailArrayOutput() GetModelModelDetailArrayOutput
	ToGetModelModelDetailArrayOutputWithContext(context.Context) GetModelModelDetailArrayOutput
}

type GetModelModelDetailArray []GetModelModelDetailInput

func (GetModelModelDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelModelDetail)(nil)).Elem()
}

func (i GetModelModelDetailArray) ToGetModelModelDetailArrayOutput() GetModelModelDetailArrayOutput {
	return i.ToGetModelModelDetailArrayOutputWithContext(context.Background())
}

func (i GetModelModelDetailArray) ToGetModelModelDetailArrayOutputWithContext(ctx context.Context) GetModelModelDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelModelDetailArrayOutput)
}

type GetModelModelDetailOutput struct{ *pulumi.OutputState }

func (GetModelModelDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelModelDetail)(nil)).Elem()
}

func (o GetModelModelDetailOutput) ToGetModelModelDetailOutput() GetModelModelDetailOutput {
	return o
}

func (o GetModelModelDetailOutput) ToGetModelModelDetailOutputWithContext(ctx context.Context) GetModelModelDetailOutput {
	return o
}

// classification Modes
func (o GetModelModelDetailOutput) ClassificationModes() GetModelModelDetailClassificationModeArrayOutput {
	return o.ApplyT(func(v GetModelModelDetail) []GetModelModelDetailClassificationMode { return v.ClassificationModes }).(GetModelModelDetailClassificationModeArrayOutput)
}

// supported language default value is en
func (o GetModelModelDetailOutput) LanguageCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelModelDetail) string { return v.LanguageCode }).(pulumi.StringOutput)
}

// Model type
func (o GetModelModelDetailOutput) ModelType() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelModelDetail) string { return v.ModelType }).(pulumi.StringOutput)
}

// For pre trained models this will identify model type version used for model creation For custom identifying the model by model id is difficult. This param provides ease of use for end customer. <<service>>::<<service-name>>_<<model-type-version>>::<<custom model on which this training has to be done>> ex: ai-lang::NER_V1::CUSTOM-V0
func (o GetModelModelDetailOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelModelDetail) string { return v.Version }).(pulumi.StringOutput)
}

type GetModelModelDetailArrayOutput struct{ *pulumi.OutputState }

func (GetModelModelDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelModelDetail)(nil)).Elem()
}

func (o GetModelModelDetailArrayOutput) ToGetModelModelDetailArrayOutput() GetModelModelDetailArrayOutput {
	return o
}

func (o GetModelModelDetailArrayOutput) ToGetModelModelDetailArrayOutputWithContext(ctx context.Context) GetModelModelDetailArrayOutput {
	return o
}

func (o GetModelModelDetailArrayOutput) Index(i pulumi.IntInput) GetModelModelDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelModelDetail {
		return vs[0].([]GetModelModelDetail)[vs[1].(int)]
	}).(GetModelModelDetailOutput)
}

type GetModelModelDetailClassificationMode struct {
	// classification Modes
	ClassificationMode string `pulumi:"classificationMode"`
	// For pre trained models this will identify model type version used for model creation For custom identifying the model by model id is difficult. This param provides ease of use for end customer. <<service>>::<<service-name>>_<<model-type-version>>::<<custom model on which this training has to be done>> ex: ai-lang::NER_V1::CUSTOM-V0
	Version string `pulumi:"version"`
}

// GetModelModelDetailClassificationModeInput is an input type that accepts GetModelModelDetailClassificationModeArgs and GetModelModelDetailClassificationModeOutput values.
// You can construct a concrete instance of `GetModelModelDetailClassificationModeInput` via:
//
//	GetModelModelDetailClassificationModeArgs{...}
type GetModelModelDetailClassificationModeInput interface {
	pulumi.Input

	ToGetModelModelDetailClassificationModeOutput() GetModelModelDetailClassificationModeOutput
	ToGetModelModelDetailClassificationModeOutputWithContext(context.Context) GetModelModelDetailClassificationModeOutput
}

type GetModelModelDetailClassificationModeArgs struct {
	// classification Modes
	ClassificationMode pulumi.StringInput `pulumi:"classificationMode"`
	// For pre trained models this will identify model type version used for model creation For custom identifying the model by model id is difficult. This param provides ease of use for end customer. <<service>>::<<service-name>>_<<model-type-version>>::<<custom model on which this training has to be done>> ex: ai-lang::NER_V1::CUSTOM-V0
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetModelModelDetailClassificationModeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelModelDetailClassificationMode)(nil)).Elem()
}

func (i GetModelModelDetailClassificationModeArgs) ToGetModelModelDetailClassificationModeOutput() GetModelModelDetailClassificationModeOutput {
	return i.ToGetModelModelDetailClassificationModeOutputWithContext(context.Background())
}

func (i GetModelModelDetailClassificationModeArgs) ToGetModelModelDetailClassificationModeOutputWithContext(ctx context.Context) GetModelModelDetailClassificationModeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelModelDetailClassificationModeOutput)
}

// GetModelModelDetailClassificationModeArrayInput is an input type that accepts GetModelModelDetailClassificationModeArray and GetModelModelDetailClassificationModeArrayOutput values.
// You can construct a concrete instance of `GetModelModelDetailClassificationModeArrayInput` via:
//
//	GetModelModelDetailClassificationModeArray{ GetModelModelDetailClassificationModeArgs{...} }
type GetModelModelDetailClassificationModeArrayInput interface {
	pulumi.Input

	ToGetModelModelDetailClassificationModeArrayOutput() GetModelModelDetailClassificationModeArrayOutput
	ToGetModelModelDetailClassificationModeArrayOutputWithContext(context.Context) GetModelModelDetailClassificationModeArrayOutput
}

type GetModelModelDetailClassificationModeArray []GetModelModelDetailClassificationModeInput

func (GetModelModelDetailClassificationModeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelModelDetailClassificationMode)(nil)).Elem()
}

func (i GetModelModelDetailClassificationModeArray) ToGetModelModelDetailClassificationModeArrayOutput() GetModelModelDetailClassificationModeArrayOutput {
	return i.ToGetModelModelDetailClassificationModeArrayOutputWithContext(context.Background())
}

func (i GetModelModelDetailClassificationModeArray) ToGetModelModelDetailClassificationModeArrayOutputWithContext(ctx context.Context) GetModelModelDetailClassificationModeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelModelDetailClassificationModeArrayOutput)
}

type GetModelModelDetailClassificationModeOutput struct{ *pulumi.OutputState }

func (GetModelModelDetailClassificationModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelModelDetailClassificationMode)(nil)).Elem()
}

func (o GetModelModelDetailClassificationModeOutput) ToGetModelModelDetailClassificationModeOutput() GetModelModelDetailClassificationModeOutput {
	return o
}

func (o GetModelModelDetailClassificationModeOutput) ToGetModelModelDetailClassificationModeOutputWithContext(ctx context.Context) GetModelModelDetailClassificationModeOutput {
	return o
}

// classification Modes
func (o GetModelModelDetailClassificationModeOutput) ClassificationMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelModelDetailClassificationMode) string { return v.ClassificationMode }).(pulumi.StringOutput)
}

// For pre trained models this will identify model type version used for model creation For custom identifying the model by model id is difficult. This param provides ease of use for end customer. <<service>>::<<service-name>>_<<model-type-version>>::<<custom model on which this training has to be done>> ex: ai-lang::NER_V1::CUSTOM-V0
func (o GetModelModelDetailClassificationModeOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelModelDetailClassificationMode) string { return v.Version }).(pulumi.StringOutput)
}

type GetModelModelDetailClassificationModeArrayOutput struct{ *pulumi.OutputState }

func (GetModelModelDetailClassificationModeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelModelDetailClassificationMode)(nil)).Elem()
}

func (o GetModelModelDetailClassificationModeArrayOutput) ToGetModelModelDetailClassificationModeArrayOutput() GetModelModelDetailClassificationModeArrayOutput {
	return o
}

func (o GetModelModelDetailClassificationModeArrayOutput) ToGetModelModelDetailClassificationModeArrayOutputWithContext(ctx context.Context) GetModelModelDetailClassificationModeArrayOutput {
	return o
}

func (o GetModelModelDetailClassificationModeArrayOutput) Index(i pulumi.IntInput) GetModelModelDetailClassificationModeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelModelDetailClassificationMode {
		return vs[0].([]GetModelModelDetailClassificationMode)[vs[1].(int)]
	}).(GetModelModelDetailClassificationModeOutput)
}

type GetModelTestStrategy struct {
	// This information will define the test strategy different datasets for test and validation(optional) dataset.
	StrategyType string `pulumi:"strategyType"`
	// Possible data set type
	TestingDatasets []GetModelTestStrategyTestingDataset `pulumi:"testingDatasets"`
	// Possible data set type
	ValidationDatasets []GetModelTestStrategyValidationDataset `pulumi:"validationDatasets"`
}

// GetModelTestStrategyInput is an input type that accepts GetModelTestStrategyArgs and GetModelTestStrategyOutput values.
// You can construct a concrete instance of `GetModelTestStrategyInput` via:
//
//	GetModelTestStrategyArgs{...}
type GetModelTestStrategyInput interface {
	pulumi.Input

	ToGetModelTestStrategyOutput() GetModelTestStrategyOutput
	ToGetModelTestStrategyOutputWithContext(context.Context) GetModelTestStrategyOutput
}

type GetModelTestStrategyArgs struct {
	// This information will define the test strategy different datasets for test and validation(optional) dataset.
	StrategyType pulumi.StringInput `pulumi:"strategyType"`
	// Possible data set type
	TestingDatasets GetModelTestStrategyTestingDatasetArrayInput `pulumi:"testingDatasets"`
	// Possible data set type
	ValidationDatasets GetModelTestStrategyValidationDatasetArrayInput `pulumi:"validationDatasets"`
}

func (GetModelTestStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelTestStrategy)(nil)).Elem()
}

func (i GetModelTestStrategyArgs) ToGetModelTestStrategyOutput() GetModelTestStrategyOutput {
	return i.ToGetModelTestStrategyOutputWithContext(context.Background())
}

func (i GetModelTestStrategyArgs) ToGetModelTestStrategyOutputWithContext(ctx context.Context) GetModelTestStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelTestStrategyOutput)
}

// GetModelTestStrategyArrayInput is an input type that accepts GetModelTestStrategyArray and GetModelTestStrategyArrayOutput values.
// You can construct a concrete instance of `GetModelTestStrategyArrayInput` via:
//
//	GetModelTestStrategyArray{ GetModelTestStrategyArgs{...} }
type GetModelTestStrategyArrayInput interface {
	pulumi.Input

	ToGetModelTestStrategyArrayOutput() GetModelTestStrategyArrayOutput
	ToGetModelTestStrategyArrayOutputWithContext(context.Context) GetModelTestStrategyArrayOutput
}

type GetModelTestStrategyArray []GetModelTestStrategyInput

func (GetModelTestStrategyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelTestStrategy)(nil)).Elem()
}

func (i GetModelTestStrategyArray) ToGetModelTestStrategyArrayOutput() GetModelTestStrategyArrayOutput {
	return i.ToGetModelTestStrategyArrayOutputWithContext(context.Background())
}

func (i GetModelTestStrategyArray) ToGetModelTestStrategyArrayOutputWithContext(ctx context.Context) GetModelTestStrategyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelTestStrategyArrayOutput)
}

type GetModelTestStrategyOutput struct{ *pulumi.OutputState }

func (GetModelTestStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelTestStrategy)(nil)).Elem()
}

func (o GetModelTestStrategyOutput) ToGetModelTestStrategyOutput() GetModelTestStrategyOutput {
	return o
}

func (o GetModelTestStrategyOutput) ToGetModelTestStrategyOutputWithContext(ctx context.Context) GetModelTestStrategyOutput {
	return o
}

// This information will define the test strategy different datasets for test and validation(optional) dataset.
func (o GetModelTestStrategyOutput) StrategyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelTestStrategy) string { return v.StrategyType }).(pulumi.StringOutput)
}

// Possible data set type
func (o GetModelTestStrategyOutput) TestingDatasets() GetModelTestStrategyTestingDatasetArrayOutput {
	return o.ApplyT(func(v GetModelTestStrategy) []GetModelTestStrategyTestingDataset { return v.TestingDatasets }).(GetModelTestStrategyTestingDatasetArrayOutput)
}

// Possible data set type
func (o GetModelTestStrategyOutput) ValidationDatasets() GetModelTestStrategyValidationDatasetArrayOutput {
	return o.ApplyT(func(v GetModelTestStrategy) []GetModelTestStrategyValidationDataset { return v.ValidationDatasets }).(GetModelTestStrategyValidationDatasetArrayOutput)
}

type GetModelTestStrategyArrayOutput struct{ *pulumi.OutputState }

func (GetModelTestStrategyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelTestStrategy)(nil)).Elem()
}

func (o GetModelTestStrategyArrayOutput) ToGetModelTestStrategyArrayOutput() GetModelTestStrategyArrayOutput {
	return o
}

func (o GetModelTestStrategyArrayOutput) ToGetModelTestStrategyArrayOutputWithContext(ctx context.Context) GetModelTestStrategyArrayOutput {
	return o
}

func (o GetModelTestStrategyArrayOutput) Index(i pulumi.IntInput) GetModelTestStrategyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelTestStrategy {
		return vs[0].([]GetModelTestStrategy)[vs[1].(int)]
	}).(GetModelTestStrategyOutput)
}

type GetModelTestStrategyTestingDataset struct {
	// Data Science Labelling Service OCID
	DatasetId string `pulumi:"datasetId"`
	// Possible data sets
	DatasetType string `pulumi:"datasetType"`
	// Possible object storage location types
	LocationDetails []GetModelTestStrategyTestingDatasetLocationDetail `pulumi:"locationDetails"`
}

// GetModelTestStrategyTestingDatasetInput is an input type that accepts GetModelTestStrategyTestingDatasetArgs and GetModelTestStrategyTestingDatasetOutput values.
// You can construct a concrete instance of `GetModelTestStrategyTestingDatasetInput` via:
//
//	GetModelTestStrategyTestingDatasetArgs{...}
type GetModelTestStrategyTestingDatasetInput interface {
	pulumi.Input

	ToGetModelTestStrategyTestingDatasetOutput() GetModelTestStrategyTestingDatasetOutput
	ToGetModelTestStrategyTestingDatasetOutputWithContext(context.Context) GetModelTestStrategyTestingDatasetOutput
}

type GetModelTestStrategyTestingDatasetArgs struct {
	// Data Science Labelling Service OCID
	DatasetId pulumi.StringInput `pulumi:"datasetId"`
	// Possible data sets
	DatasetType pulumi.StringInput `pulumi:"datasetType"`
	// Possible object storage location types
	LocationDetails GetModelTestStrategyTestingDatasetLocationDetailArrayInput `pulumi:"locationDetails"`
}

func (GetModelTestStrategyTestingDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelTestStrategyTestingDataset)(nil)).Elem()
}

func (i GetModelTestStrategyTestingDatasetArgs) ToGetModelTestStrategyTestingDatasetOutput() GetModelTestStrategyTestingDatasetOutput {
	return i.ToGetModelTestStrategyTestingDatasetOutputWithContext(context.Background())
}

func (i GetModelTestStrategyTestingDatasetArgs) ToGetModelTestStrategyTestingDatasetOutputWithContext(ctx context.Context) GetModelTestStrategyTestingDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelTestStrategyTestingDatasetOutput)
}

// GetModelTestStrategyTestingDatasetArrayInput is an input type that accepts GetModelTestStrategyTestingDatasetArray and GetModelTestStrategyTestingDatasetArrayOutput values.
// You can construct a concrete instance of `GetModelTestStrategyTestingDatasetArrayInput` via:
//
//	GetModelTestStrategyTestingDatasetArray{ GetModelTestStrategyTestingDatasetArgs{...} }
type GetModelTestStrategyTestingDatasetArrayInput interface {
	pulumi.Input

	ToGetModelTestStrategyTestingDatasetArrayOutput() GetModelTestStrategyTestingDatasetArrayOutput
	ToGetModelTestStrategyTestingDatasetArrayOutputWithContext(context.Context) GetModelTestStrategyTestingDatasetArrayOutput
}

type GetModelTestStrategyTestingDatasetArray []GetModelTestStrategyTestingDatasetInput

func (GetModelTestStrategyTestingDatasetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelTestStrategyTestingDataset)(nil)).Elem()
}

func (i GetModelTestStrategyTestingDatasetArray) ToGetModelTestStrategyTestingDatasetArrayOutput() GetModelTestStrategyTestingDatasetArrayOutput {
	return i.ToGetModelTestStrategyTestingDatasetArrayOutputWithContext(context.Background())
}

func (i GetModelTestStrategyTestingDatasetArray) ToGetModelTestStrategyTestingDatasetArrayOutputWithContext(ctx context.Context) GetModelTestStrategyTestingDatasetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelTestStrategyTestingDatasetArrayOutput)
}

type GetModelTestStrategyTestingDatasetOutput struct{ *pulumi.OutputState }

func (GetModelTestStrategyTestingDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelTestStrategyTestingDataset)(nil)).Elem()
}

func (o GetModelTestStrategyTestingDatasetOutput) ToGetModelTestStrategyTestingDatasetOutput() GetModelTestStrategyTestingDatasetOutput {
	return o
}

func (o GetModelTestStrategyTestingDatasetOutput) ToGetModelTestStrategyTestingDatasetOutputWithContext(ctx context.Context) GetModelTestStrategyTestingDatasetOutput {
	return o
}

// Data Science Labelling Service OCID
func (o GetModelTestStrategyTestingDatasetOutput) DatasetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelTestStrategyTestingDataset) string { return v.DatasetId }).(pulumi.StringOutput)
}

// Possible data sets
func (o GetModelTestStrategyTestingDatasetOutput) DatasetType() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelTestStrategyTestingDataset) string { return v.DatasetType }).(pulumi.StringOutput)
}

// Possible object storage location types
func (o GetModelTestStrategyTestingDatasetOutput) LocationDetails() GetModelTestStrategyTestingDatasetLocationDetailArrayOutput {
	return o.ApplyT(func(v GetModelTestStrategyTestingDataset) []GetModelTestStrategyTestingDatasetLocationDetail {
		return v.LocationDetails
	}).(GetModelTestStrategyTestingDatasetLocationDetailArrayOutput)
}

type GetModelTestStrategyTestingDatasetArrayOutput struct{ *pulumi.OutputState }

func (GetModelTestStrategyTestingDatasetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelTestStrategyTestingDataset)(nil)).Elem()
}

func (o GetModelTestStrategyTestingDatasetArrayOutput) ToGetModelTestStrategyTestingDatasetArrayOutput() GetModelTestStrategyTestingDatasetArrayOutput {
	return o
}

func (o GetModelTestStrategyTestingDatasetArrayOutput) ToGetModelTestStrategyTestingDatasetArrayOutputWithContext(ctx context.Context) GetModelTestStrategyTestingDatasetArrayOutput {
	return o
}

func (o GetModelTestStrategyTestingDatasetArrayOutput) Index(i pulumi.IntInput) GetModelTestStrategyTestingDatasetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelTestStrategyTestingDataset {
		return vs[0].([]GetModelTestStrategyTestingDataset)[vs[1].(int)]
	}).(GetModelTestStrategyTestingDatasetOutput)
}

type GetModelTestStrategyTestingDatasetLocationDetail struct {
	// Object storage bucket name
	Bucket string `pulumi:"bucket"`
	// Possible object storage location types
	LocationType string `pulumi:"locationType"`
	// Object storage namespace
	Namespace string `pulumi:"namespace"`
	// Array of files which need to be processed in the bucket
	ObjectNames []string `pulumi:"objectNames"`
}

// GetModelTestStrategyTestingDatasetLocationDetailInput is an input type that accepts GetModelTestStrategyTestingDatasetLocationDetailArgs and GetModelTestStrategyTestingDatasetLocationDetailOutput values.
// You can construct a concrete instance of `GetModelTestStrategyTestingDatasetLocationDetailInput` via:
//
//	GetModelTestStrategyTestingDatasetLocationDetailArgs{...}
type GetModelTestStrategyTestingDatasetLocationDetailInput interface {
	pulumi.Input

	ToGetModelTestStrategyTestingDatasetLocationDetailOutput() GetModelTestStrategyTestingDatasetLocationDetailOutput
	ToGetModelTestStrategyTestingDatasetLocationDetailOutputWithContext(context.Context) GetModelTestStrategyTestingDatasetLocationDetailOutput
}

type GetModelTestStrategyTestingDatasetLocationDetailArgs struct {
	// Object storage bucket name
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// Possible object storage location types
	LocationType pulumi.StringInput `pulumi:"locationType"`
	// Object storage namespace
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// Array of files which need to be processed in the bucket
	ObjectNames pulumi.StringArrayInput `pulumi:"objectNames"`
}

func (GetModelTestStrategyTestingDatasetLocationDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelTestStrategyTestingDatasetLocationDetail)(nil)).Elem()
}

func (i GetModelTestStrategyTestingDatasetLocationDetailArgs) ToGetModelTestStrategyTestingDatasetLocationDetailOutput() GetModelTestStrategyTestingDatasetLocationDetailOutput {
	return i.ToGetModelTestStrategyTestingDatasetLocationDetailOutputWithContext(context.Background())
}

func (i GetModelTestStrategyTestingDatasetLocationDetailArgs) ToGetModelTestStrategyTestingDatasetLocationDetailOutputWithContext(ctx context.Context) GetModelTestStrategyTestingDatasetLocationDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelTestStrategyTestingDatasetLocationDetailOutput)
}

// GetModelTestStrategyTestingDatasetLocationDetailArrayInput is an input type that accepts GetModelTestStrategyTestingDatasetLocationDetailArray and GetModelTestStrategyTestingDatasetLocationDetailArrayOutput values.
// You can construct a concrete instance of `GetModelTestStrategyTestingDatasetLocationDetailArrayInput` via:
//
//	GetModelTestStrategyTestingDatasetLocationDetailArray{ GetModelTestStrategyTestingDatasetLocationDetailArgs{...} }
type GetModelTestStrategyTestingDatasetLocationDetailArrayInput interface {
	pulumi.Input

	ToGetModelTestStrategyTestingDatasetLocationDetailArrayOutput() GetModelTestStrategyTestingDatasetLocationDetailArrayOutput
	ToGetModelTestStrategyTestingDatasetLocationDetailArrayOutputWithContext(context.Context) GetModelTestStrategyTestingDatasetLocationDetailArrayOutput
}

type GetModelTestStrategyTestingDatasetLocationDetailArray []GetModelTestStrategyTestingDatasetLocationDetailInput

func (GetModelTestStrategyTestingDatasetLocationDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelTestStrategyTestingDatasetLocationDetail)(nil)).Elem()
}

func (i GetModelTestStrategyTestingDatasetLocationDetailArray) ToGetModelTestStrategyTestingDatasetLocationDetailArrayOutput() GetModelTestStrategyTestingDatasetLocationDetailArrayOutput {
	return i.ToGetModelTestStrategyTestingDatasetLocationDetailArrayOutputWithContext(context.Background())
}

func (i GetModelTestStrategyTestingDatasetLocationDetailArray) ToGetModelTestStrategyTestingDatasetLocationDetailArrayOutputWithContext(ctx context.Context) GetModelTestStrategyTestingDatasetLocationDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelTestStrategyTestingDatasetLocationDetailArrayOutput)
}

type GetModelTestStrategyTestingDatasetLocationDetailOutput struct{ *pulumi.OutputState }

func (GetModelTestStrategyTestingDatasetLocationDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelTestStrategyTestingDatasetLocationDetail)(nil)).Elem()
}

func (o GetModelTestStrategyTestingDatasetLocationDetailOutput) ToGetModelTestStrategyTestingDatasetLocationDetailOutput() GetModelTestStrategyTestingDatasetLocationDetailOutput {
	return o
}

func (o GetModelTestStrategyTestingDatasetLocationDetailOutput) ToGetModelTestStrategyTestingDatasetLocationDetailOutputWithContext(ctx context.Context) GetModelTestStrategyTestingDatasetLocationDetailOutput {
	return o
}

// Object storage bucket name
func (o GetModelTestStrategyTestingDatasetLocationDetailOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelTestStrategyTestingDatasetLocationDetail) string { return v.Bucket }).(pulumi.StringOutput)
}

// Possible object storage location types
func (o GetModelTestStrategyTestingDatasetLocationDetailOutput) LocationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelTestStrategyTestingDatasetLocationDetail) string { return v.LocationType }).(pulumi.StringOutput)
}

// Object storage namespace
func (o GetModelTestStrategyTestingDatasetLocationDetailOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelTestStrategyTestingDatasetLocationDetail) string { return v.Namespace }).(pulumi.StringOutput)
}

// Array of files which need to be processed in the bucket
func (o GetModelTestStrategyTestingDatasetLocationDetailOutput) ObjectNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetModelTestStrategyTestingDatasetLocationDetail) []string { return v.ObjectNames }).(pulumi.StringArrayOutput)
}

type GetModelTestStrategyTestingDatasetLocationDetailArrayOutput struct{ *pulumi.OutputState }

func (GetModelTestStrategyTestingDatasetLocationDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelTestStrategyTestingDatasetLocationDetail)(nil)).Elem()
}

func (o GetModelTestStrategyTestingDatasetLocationDetailArrayOutput) ToGetModelTestStrategyTestingDatasetLocationDetailArrayOutput() GetModelTestStrategyTestingDatasetLocationDetailArrayOutput {
	return o
}

func (o GetModelTestStrategyTestingDatasetLocationDetailArrayOutput) ToGetModelTestStrategyTestingDatasetLocationDetailArrayOutputWithContext(ctx context.Context) GetModelTestStrategyTestingDatasetLocationDetailArrayOutput {
	return o
}

func (o GetModelTestStrategyTestingDatasetLocationDetailArrayOutput) Index(i pulumi.IntInput) GetModelTestStrategyTestingDatasetLocationDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelTestStrategyTestingDatasetLocationDetail {
		return vs[0].([]GetModelTestStrategyTestingDatasetLocationDetail)[vs[1].(int)]
	}).(GetModelTestStrategyTestingDatasetLocationDetailOutput)
}

type GetModelTestStrategyValidationDataset struct {
	// Data Science Labelling Service OCID
	DatasetId string `pulumi:"datasetId"`
	// Possible data sets
	DatasetType string `pulumi:"datasetType"`
	// Possible object storage location types
	LocationDetails []GetModelTestStrategyValidationDatasetLocationDetail `pulumi:"locationDetails"`
}

// GetModelTestStrategyValidationDatasetInput is an input type that accepts GetModelTestStrategyValidationDatasetArgs and GetModelTestStrategyValidationDatasetOutput values.
// You can construct a concrete instance of `GetModelTestStrategyValidationDatasetInput` via:
//
//	GetModelTestStrategyValidationDatasetArgs{...}
type GetModelTestStrategyValidationDatasetInput interface {
	pulumi.Input

	ToGetModelTestStrategyValidationDatasetOutput() GetModelTestStrategyValidationDatasetOutput
	ToGetModelTestStrategyValidationDatasetOutputWithContext(context.Context) GetModelTestStrategyValidationDatasetOutput
}

type GetModelTestStrategyValidationDatasetArgs struct {
	// Data Science Labelling Service OCID
	DatasetId pulumi.StringInput `pulumi:"datasetId"`
	// Possible data sets
	DatasetType pulumi.StringInput `pulumi:"datasetType"`
	// Possible object storage location types
	LocationDetails GetModelTestStrategyValidationDatasetLocationDetailArrayInput `pulumi:"locationDetails"`
}

func (GetModelTestStrategyValidationDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelTestStrategyValidationDataset)(nil)).Elem()
}

func (i GetModelTestStrategyValidationDatasetArgs) ToGetModelTestStrategyValidationDatasetOutput() GetModelTestStrategyValidationDatasetOutput {
	return i.ToGetModelTestStrategyValidationDatasetOutputWithContext(context.Background())
}

func (i GetModelTestStrategyValidationDatasetArgs) ToGetModelTestStrategyValidationDatasetOutputWithContext(ctx context.Context) GetModelTestStrategyValidationDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelTestStrategyValidationDatasetOutput)
}

// GetModelTestStrategyValidationDatasetArrayInput is an input type that accepts GetModelTestStrategyValidationDatasetArray and GetModelTestStrategyValidationDatasetArrayOutput values.
// You can construct a concrete instance of `GetModelTestStrategyValidationDatasetArrayInput` via:
//
//	GetModelTestStrategyValidationDatasetArray{ GetModelTestStrategyValidationDatasetArgs{...} }
type GetModelTestStrategyValidationDatasetArrayInput interface {
	pulumi.Input

	ToGetModelTestStrategyValidationDatasetArrayOutput() GetModelTestStrategyValidationDatasetArrayOutput
	ToGetModelTestStrategyValidationDatasetArrayOutputWithContext(context.Context) GetModelTestStrategyValidationDatasetArrayOutput
}

type GetModelTestStrategyValidationDatasetArray []GetModelTestStrategyValidationDatasetInput

func (GetModelTestStrategyValidationDatasetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelTestStrategyValidationDataset)(nil)).Elem()
}

func (i GetModelTestStrategyValidationDatasetArray) ToGetModelTestStrategyValidationDatasetArrayOutput() GetModelTestStrategyValidationDatasetArrayOutput {
	return i.ToGetModelTestStrategyValidationDatasetArrayOutputWithContext(context.Background())
}

func (i GetModelTestStrategyValidationDatasetArray) ToGetModelTestStrategyValidationDatasetArrayOutputWithContext(ctx context.Context) GetModelTestStrategyValidationDatasetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelTestStrategyValidationDatasetArrayOutput)
}

type GetModelTestStrategyValidationDatasetOutput struct{ *pulumi.OutputState }

func (GetModelTestStrategyValidationDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelTestStrategyValidationDataset)(nil)).Elem()
}

func (o GetModelTestStrategyValidationDatasetOutput) ToGetModelTestStrategyValidationDatasetOutput() GetModelTestStrategyValidationDatasetOutput {
	return o
}

func (o GetModelTestStrategyValidationDatasetOutput) ToGetModelTestStrategyValidationDatasetOutputWithContext(ctx context.Context) GetModelTestStrategyValidationDatasetOutput {
	return o
}

// Data Science Labelling Service OCID
func (o GetModelTestStrategyValidationDatasetOutput) DatasetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelTestStrategyValidationDataset) string { return v.DatasetId }).(pulumi.StringOutput)
}

// Possible data sets
func (o GetModelTestStrategyValidationDatasetOutput) DatasetType() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelTestStrategyValidationDataset) string { return v.DatasetType }).(pulumi.StringOutput)
}

// Possible object storage location types
func (o GetModelTestStrategyValidationDatasetOutput) LocationDetails() GetModelTestStrategyValidationDatasetLocationDetailArrayOutput {
	return o.ApplyT(func(v GetModelTestStrategyValidationDataset) []GetModelTestStrategyValidationDatasetLocationDetail {
		return v.LocationDetails
	}).(GetModelTestStrategyValidationDatasetLocationDetailArrayOutput)
}

type GetModelTestStrategyValidationDatasetArrayOutput struct{ *pulumi.OutputState }

func (GetModelTestStrategyValidationDatasetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelTestStrategyValidationDataset)(nil)).Elem()
}

func (o GetModelTestStrategyValidationDatasetArrayOutput) ToGetModelTestStrategyValidationDatasetArrayOutput() GetModelTestStrategyValidationDatasetArrayOutput {
	return o
}

func (o GetModelTestStrategyValidationDatasetArrayOutput) ToGetModelTestStrategyValidationDatasetArrayOutputWithContext(ctx context.Context) GetModelTestStrategyValidationDatasetArrayOutput {
	return o
}

func (o GetModelTestStrategyValidationDatasetArrayOutput) Index(i pulumi.IntInput) GetModelTestStrategyValidationDatasetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelTestStrategyValidationDataset {
		return vs[0].([]GetModelTestStrategyValidationDataset)[vs[1].(int)]
	}).(GetModelTestStrategyValidationDatasetOutput)
}

type GetModelTestStrategyValidationDatasetLocationDetail struct {
	// Object storage bucket name
	Bucket string `pulumi:"bucket"`
	// Possible object storage location types
	LocationType string `pulumi:"locationType"`
	// Object storage namespace
	Namespace string `pulumi:"namespace"`
	// Array of files which need to be processed in the bucket
	ObjectNames []string `pulumi:"objectNames"`
}

// GetModelTestStrategyValidationDatasetLocationDetailInput is an input type that accepts GetModelTestStrategyValidationDatasetLocationDetailArgs and GetModelTestStrategyValidationDatasetLocationDetailOutput values.
// You can construct a concrete instance of `GetModelTestStrategyValidationDatasetLocationDetailInput` via:
//
//	GetModelTestStrategyValidationDatasetLocationDetailArgs{...}
type GetModelTestStrategyValidationDatasetLocationDetailInput interface {
	pulumi.Input

	ToGetModelTestStrategyValidationDatasetLocationDetailOutput() GetModelTestStrategyValidationDatasetLocationDetailOutput
	ToGetModelTestStrategyValidationDatasetLocationDetailOutputWithContext(context.Context) GetModelTestStrategyValidationDatasetLocationDetailOutput
}

type GetModelTestStrategyValidationDatasetLocationDetailArgs struct {
	// Object storage bucket name
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// Possible object storage location types
	LocationType pulumi.StringInput `pulumi:"locationType"`
	// Object storage namespace
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// Array of files which need to be processed in the bucket
	ObjectNames pulumi.StringArrayInput `pulumi:"objectNames"`
}

func (GetModelTestStrategyValidationDatasetLocationDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelTestStrategyValidationDatasetLocationDetail)(nil)).Elem()
}

func (i GetModelTestStrategyValidationDatasetLocationDetailArgs) ToGetModelTestStrategyValidationDatasetLocationDetailOutput() GetModelTestStrategyValidationDatasetLocationDetailOutput {
	return i.ToGetModelTestStrategyValidationDatasetLocationDetailOutputWithContext(context.Background())
}

func (i GetModelTestStrategyValidationDatasetLocationDetailArgs) ToGetModelTestStrategyValidationDatasetLocationDetailOutputWithContext(ctx context.Context) GetModelTestStrategyValidationDatasetLocationDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelTestStrategyValidationDatasetLocationDetailOutput)
}

// GetModelTestStrategyValidationDatasetLocationDetailArrayInput is an input type that accepts GetModelTestStrategyValidationDatasetLocationDetailArray and GetModelTestStrategyValidationDatasetLocationDetailArrayOutput values.
// You can construct a concrete instance of `GetModelTestStrategyValidationDatasetLocationDetailArrayInput` via:
//
//	GetModelTestStrategyValidationDatasetLocationDetailArray{ GetModelTestStrategyValidationDatasetLocationDetailArgs{...} }
type GetModelTestStrategyValidationDatasetLocationDetailArrayInput interface {
	pulumi.Input

	ToGetModelTestStrategyValidationDatasetLocationDetailArrayOutput() GetModelTestStrategyValidationDatasetLocationDetailArrayOutput
	ToGetModelTestStrategyValidationDatasetLocationDetailArrayOutputWithContext(context.Context) GetModelTestStrategyValidationDatasetLocationDetailArrayOutput
}

type GetModelTestStrategyValidationDatasetLocationDetailArray []GetModelTestStrategyValidationDatasetLocationDetailInput

func (GetModelTestStrategyValidationDatasetLocationDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelTestStrategyValidationDatasetLocationDetail)(nil)).Elem()
}

func (i GetModelTestStrategyValidationDatasetLocationDetailArray) ToGetModelTestStrategyValidationDatasetLocationDetailArrayOutput() GetModelTestStrategyValidationDatasetLocationDetailArrayOutput {
	return i.ToGetModelTestStrategyValidationDatasetLocationDetailArrayOutputWithContext(context.Background())
}

func (i GetModelTestStrategyValidationDatasetLocationDetailArray) ToGetModelTestStrategyValidationDatasetLocationDetailArrayOutputWithContext(ctx context.Context) GetModelTestStrategyValidationDatasetLocationDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelTestStrategyValidationDatasetLocationDetailArrayOutput)
}

type GetModelTestStrategyValidationDatasetLocationDetailOutput struct{ *pulumi.OutputState }

func (GetModelTestStrategyValidationDatasetLocationDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelTestStrategyValidationDatasetLocationDetail)(nil)).Elem()
}

func (o GetModelTestStrategyValidationDatasetLocationDetailOutput) ToGetModelTestStrategyValidationDatasetLocationDetailOutput() GetModelTestStrategyValidationDatasetLocationDetailOutput {
	return o
}

func (o GetModelTestStrategyValidationDatasetLocationDetailOutput) ToGetModelTestStrategyValidationDatasetLocationDetailOutputWithContext(ctx context.Context) GetModelTestStrategyValidationDatasetLocationDetailOutput {
	return o
}

// Object storage bucket name
func (o GetModelTestStrategyValidationDatasetLocationDetailOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelTestStrategyValidationDatasetLocationDetail) string { return v.Bucket }).(pulumi.StringOutput)
}

// Possible object storage location types
func (o GetModelTestStrategyValidationDatasetLocationDetailOutput) LocationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelTestStrategyValidationDatasetLocationDetail) string { return v.LocationType }).(pulumi.StringOutput)
}

// Object storage namespace
func (o GetModelTestStrategyValidationDatasetLocationDetailOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelTestStrategyValidationDatasetLocationDetail) string { return v.Namespace }).(pulumi.StringOutput)
}

// Array of files which need to be processed in the bucket
func (o GetModelTestStrategyValidationDatasetLocationDetailOutput) ObjectNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetModelTestStrategyValidationDatasetLocationDetail) []string { return v.ObjectNames }).(pulumi.StringArrayOutput)
}

type GetModelTestStrategyValidationDatasetLocationDetailArrayOutput struct{ *pulumi.OutputState }

func (GetModelTestStrategyValidationDatasetLocationDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelTestStrategyValidationDatasetLocationDetail)(nil)).Elem()
}

func (o GetModelTestStrategyValidationDatasetLocationDetailArrayOutput) ToGetModelTestStrategyValidationDatasetLocationDetailArrayOutput() GetModelTestStrategyValidationDatasetLocationDetailArrayOutput {
	return o
}

func (o GetModelTestStrategyValidationDatasetLocationDetailArrayOutput) ToGetModelTestStrategyValidationDatasetLocationDetailArrayOutputWithContext(ctx context.Context) GetModelTestStrategyValidationDatasetLocationDetailArrayOutput {
	return o
}

func (o GetModelTestStrategyValidationDatasetLocationDetailArrayOutput) Index(i pulumi.IntInput) GetModelTestStrategyValidationDatasetLocationDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelTestStrategyValidationDatasetLocationDetail {
		return vs[0].([]GetModelTestStrategyValidationDatasetLocationDetail)[vs[1].(int)]
	}).(GetModelTestStrategyValidationDatasetLocationDetailOutput)
}

type GetModelTrainingDataset struct {
	// Data Science Labelling Service OCID
	DatasetId string `pulumi:"datasetId"`
	// Possible data sets
	DatasetType string `pulumi:"datasetType"`
	// Possible object storage location types
	LocationDetails []GetModelTrainingDatasetLocationDetail `pulumi:"locationDetails"`
}

// GetModelTrainingDatasetInput is an input type that accepts GetModelTrainingDatasetArgs and GetModelTrainingDatasetOutput values.
// You can construct a concrete instance of `GetModelTrainingDatasetInput` via:
//
//	GetModelTrainingDatasetArgs{...}
type GetModelTrainingDatasetInput interface {
	pulumi.Input

	ToGetModelTrainingDatasetOutput() GetModelTrainingDatasetOutput
	ToGetModelTrainingDatasetOutputWithContext(context.Context) GetModelTrainingDatasetOutput
}

type GetModelTrainingDatasetArgs struct {
	// Data Science Labelling Service OCID
	DatasetId pulumi.StringInput `pulumi:"datasetId"`
	// Possible data sets
	DatasetType pulumi.StringInput `pulumi:"datasetType"`
	// Possible object storage location types
	LocationDetails GetModelTrainingDatasetLocationDetailArrayInput `pulumi:"locationDetails"`
}

func (GetModelTrainingDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelTrainingDataset)(nil)).Elem()
}

func (i GetModelTrainingDatasetArgs) ToGetModelTrainingDatasetOutput() GetModelTrainingDatasetOutput {
	return i.ToGetModelTrainingDatasetOutputWithContext(context.Background())
}

func (i GetModelTrainingDatasetArgs) ToGetModelTrainingDatasetOutputWithContext(ctx context.Context) GetModelTrainingDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelTrainingDatasetOutput)
}

// GetModelTrainingDatasetArrayInput is an input type that accepts GetModelTrainingDatasetArray and GetModelTrainingDatasetArrayOutput values.
// You can construct a concrete instance of `GetModelTrainingDatasetArrayInput` via:
//
//	GetModelTrainingDatasetArray{ GetModelTrainingDatasetArgs{...} }
type GetModelTrainingDatasetArrayInput interface {
	pulumi.Input

	ToGetModelTrainingDatasetArrayOutput() GetModelTrainingDatasetArrayOutput
	ToGetModelTrainingDatasetArrayOutputWithContext(context.Context) GetModelTrainingDatasetArrayOutput
}

type GetModelTrainingDatasetArray []GetModelTrainingDatasetInput

func (GetModelTrainingDatasetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelTrainingDataset)(nil)).Elem()
}

func (i GetModelTrainingDatasetArray) ToGetModelTrainingDatasetArrayOutput() GetModelTrainingDatasetArrayOutput {
	return i.ToGetModelTrainingDatasetArrayOutputWithContext(context.Background())
}

func (i GetModelTrainingDatasetArray) ToGetModelTrainingDatasetArrayOutputWithContext(ctx context.Context) GetModelTrainingDatasetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelTrainingDatasetArrayOutput)
}

type GetModelTrainingDatasetOutput struct{ *pulumi.OutputState }

func (GetModelTrainingDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelTrainingDataset)(nil)).Elem()
}

func (o GetModelTrainingDatasetOutput) ToGetModelTrainingDatasetOutput() GetModelTrainingDatasetOutput {
	return o
}

func (o GetModelTrainingDatasetOutput) ToGetModelTrainingDatasetOutputWithContext(ctx context.Context) GetModelTrainingDatasetOutput {
	return o
}

// Data Science Labelling Service OCID
func (o GetModelTrainingDatasetOutput) DatasetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelTrainingDataset) string { return v.DatasetId }).(pulumi.StringOutput)
}

// Possible data sets
func (o GetModelTrainingDatasetOutput) DatasetType() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelTrainingDataset) string { return v.DatasetType }).(pulumi.StringOutput)
}

// Possible object storage location types
func (o GetModelTrainingDatasetOutput) LocationDetails() GetModelTrainingDatasetLocationDetailArrayOutput {
	return o.ApplyT(func(v GetModelTrainingDataset) []GetModelTrainingDatasetLocationDetail { return v.LocationDetails }).(GetModelTrainingDatasetLocationDetailArrayOutput)
}

type GetModelTrainingDatasetArrayOutput struct{ *pulumi.OutputState }

func (GetModelTrainingDatasetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelTrainingDataset)(nil)).Elem()
}

func (o GetModelTrainingDatasetArrayOutput) ToGetModelTrainingDatasetArrayOutput() GetModelTrainingDatasetArrayOutput {
	return o
}

func (o GetModelTrainingDatasetArrayOutput) ToGetModelTrainingDatasetArrayOutputWithContext(ctx context.Context) GetModelTrainingDatasetArrayOutput {
	return o
}

func (o GetModelTrainingDatasetArrayOutput) Index(i pulumi.IntInput) GetModelTrainingDatasetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelTrainingDataset {
		return vs[0].([]GetModelTrainingDataset)[vs[1].(int)]
	}).(GetModelTrainingDatasetOutput)
}

type GetModelTrainingDatasetLocationDetail struct {
	// Object storage bucket name
	Bucket string `pulumi:"bucket"`
	// Possible object storage location types
	LocationType string `pulumi:"locationType"`
	// Object storage namespace
	Namespace string `pulumi:"namespace"`
	// Array of files which need to be processed in the bucket
	ObjectNames []string `pulumi:"objectNames"`
}

// GetModelTrainingDatasetLocationDetailInput is an input type that accepts GetModelTrainingDatasetLocationDetailArgs and GetModelTrainingDatasetLocationDetailOutput values.
// You can construct a concrete instance of `GetModelTrainingDatasetLocationDetailInput` via:
//
//	GetModelTrainingDatasetLocationDetailArgs{...}
type GetModelTrainingDatasetLocationDetailInput interface {
	pulumi.Input

	ToGetModelTrainingDatasetLocationDetailOutput() GetModelTrainingDatasetLocationDetailOutput
	ToGetModelTrainingDatasetLocationDetailOutputWithContext(context.Context) GetModelTrainingDatasetLocationDetailOutput
}

type GetModelTrainingDatasetLocationDetailArgs struct {
	// Object storage bucket name
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// Possible object storage location types
	LocationType pulumi.StringInput `pulumi:"locationType"`
	// Object storage namespace
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// Array of files which need to be processed in the bucket
	ObjectNames pulumi.StringArrayInput `pulumi:"objectNames"`
}

func (GetModelTrainingDatasetLocationDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelTrainingDatasetLocationDetail)(nil)).Elem()
}

func (i GetModelTrainingDatasetLocationDetailArgs) ToGetModelTrainingDatasetLocationDetailOutput() GetModelTrainingDatasetLocationDetailOutput {
	return i.ToGetModelTrainingDatasetLocationDetailOutputWithContext(context.Background())
}

func (i GetModelTrainingDatasetLocationDetailArgs) ToGetModelTrainingDatasetLocationDetailOutputWithContext(ctx context.Context) GetModelTrainingDatasetLocationDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelTrainingDatasetLocationDetailOutput)
}

// GetModelTrainingDatasetLocationDetailArrayInput is an input type that accepts GetModelTrainingDatasetLocationDetailArray and GetModelTrainingDatasetLocationDetailArrayOutput values.
// You can construct a concrete instance of `GetModelTrainingDatasetLocationDetailArrayInput` via:
//
//	GetModelTrainingDatasetLocationDetailArray{ GetModelTrainingDatasetLocationDetailArgs{...} }
type GetModelTrainingDatasetLocationDetailArrayInput interface {
	pulumi.Input

	ToGetModelTrainingDatasetLocationDetailArrayOutput() GetModelTrainingDatasetLocationDetailArrayOutput
	ToGetModelTrainingDatasetLocationDetailArrayOutputWithContext(context.Context) GetModelTrainingDatasetLocationDetailArrayOutput
}

type GetModelTrainingDatasetLocationDetailArray []GetModelTrainingDatasetLocationDetailInput

func (GetModelTrainingDatasetLocationDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelTrainingDatasetLocationDetail)(nil)).Elem()
}

func (i GetModelTrainingDatasetLocationDetailArray) ToGetModelTrainingDatasetLocationDetailArrayOutput() GetModelTrainingDatasetLocationDetailArrayOutput {
	return i.ToGetModelTrainingDatasetLocationDetailArrayOutputWithContext(context.Background())
}

func (i GetModelTrainingDatasetLocationDetailArray) ToGetModelTrainingDatasetLocationDetailArrayOutputWithContext(ctx context.Context) GetModelTrainingDatasetLocationDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelTrainingDatasetLocationDetailArrayOutput)
}

type GetModelTrainingDatasetLocationDetailOutput struct{ *pulumi.OutputState }

func (GetModelTrainingDatasetLocationDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelTrainingDatasetLocationDetail)(nil)).Elem()
}

func (o GetModelTrainingDatasetLocationDetailOutput) ToGetModelTrainingDatasetLocationDetailOutput() GetModelTrainingDatasetLocationDetailOutput {
	return o
}

func (o GetModelTrainingDatasetLocationDetailOutput) ToGetModelTrainingDatasetLocationDetailOutputWithContext(ctx context.Context) GetModelTrainingDatasetLocationDetailOutput {
	return o
}

// Object storage bucket name
func (o GetModelTrainingDatasetLocationDetailOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelTrainingDatasetLocationDetail) string { return v.Bucket }).(pulumi.StringOutput)
}

// Possible object storage location types
func (o GetModelTrainingDatasetLocationDetailOutput) LocationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelTrainingDatasetLocationDetail) string { return v.LocationType }).(pulumi.StringOutput)
}

// Object storage namespace
func (o GetModelTrainingDatasetLocationDetailOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelTrainingDatasetLocationDetail) string { return v.Namespace }).(pulumi.StringOutput)
}

// Array of files which need to be processed in the bucket
func (o GetModelTrainingDatasetLocationDetailOutput) ObjectNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetModelTrainingDatasetLocationDetail) []string { return v.ObjectNames }).(pulumi.StringArrayOutput)
}

type GetModelTrainingDatasetLocationDetailArrayOutput struct{ *pulumi.OutputState }

func (GetModelTrainingDatasetLocationDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelTrainingDatasetLocationDetail)(nil)).Elem()
}

func (o GetModelTrainingDatasetLocationDetailArrayOutput) ToGetModelTrainingDatasetLocationDetailArrayOutput() GetModelTrainingDatasetLocationDetailArrayOutput {
	return o
}

func (o GetModelTrainingDatasetLocationDetailArrayOutput) ToGetModelTrainingDatasetLocationDetailArrayOutputWithContext(ctx context.Context) GetModelTrainingDatasetLocationDetailArrayOutput {
	return o
}

func (o GetModelTrainingDatasetLocationDetailArrayOutput) Index(i pulumi.IntInput) GetModelTrainingDatasetLocationDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelTrainingDatasetLocationDetail {
		return vs[0].([]GetModelTrainingDatasetLocationDetail)[vs[1].(int)]
	}).(GetModelTrainingDatasetLocationDetailOutput)
}

type GetModelsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetModelsFilterInput is an input type that accepts GetModelsFilterArgs and GetModelsFilterOutput values.
// You can construct a concrete instance of `GetModelsFilterInput` via:
//
//	GetModelsFilterArgs{...}
type GetModelsFilterInput interface {
	pulumi.Input

	ToGetModelsFilterOutput() GetModelsFilterOutput
	ToGetModelsFilterOutputWithContext(context.Context) GetModelsFilterOutput
}

type GetModelsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetModelsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsFilter)(nil)).Elem()
}

func (i GetModelsFilterArgs) ToGetModelsFilterOutput() GetModelsFilterOutput {
	return i.ToGetModelsFilterOutputWithContext(context.Background())
}

func (i GetModelsFilterArgs) ToGetModelsFilterOutputWithContext(ctx context.Context) GetModelsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsFilterOutput)
}

// GetModelsFilterArrayInput is an input type that accepts GetModelsFilterArray and GetModelsFilterArrayOutput values.
// You can construct a concrete instance of `GetModelsFilterArrayInput` via:
//
//	GetModelsFilterArray{ GetModelsFilterArgs{...} }
type GetModelsFilterArrayInput interface {
	pulumi.Input

	ToGetModelsFilterArrayOutput() GetModelsFilterArrayOutput
	ToGetModelsFilterArrayOutputWithContext(context.Context) GetModelsFilterArrayOutput
}

type GetModelsFilterArray []GetModelsFilterInput

func (GetModelsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsFilter)(nil)).Elem()
}

func (i GetModelsFilterArray) ToGetModelsFilterArrayOutput() GetModelsFilterArrayOutput {
	return i.ToGetModelsFilterArrayOutputWithContext(context.Background())
}

func (i GetModelsFilterArray) ToGetModelsFilterArrayOutputWithContext(ctx context.Context) GetModelsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsFilterArrayOutput)
}

type GetModelsFilterOutput struct{ *pulumi.OutputState }

func (GetModelsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsFilter)(nil)).Elem()
}

func (o GetModelsFilterOutput) ToGetModelsFilterOutput() GetModelsFilterOutput {
	return o
}

func (o GetModelsFilterOutput) ToGetModelsFilterOutputWithContext(ctx context.Context) GetModelsFilterOutput {
	return o
}

func (o GetModelsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetModelsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetModelsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetModelsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetModelsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetModelsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetModelsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsFilter)(nil)).Elem()
}

func (o GetModelsFilterArrayOutput) ToGetModelsFilterArrayOutput() GetModelsFilterArrayOutput {
	return o
}

func (o GetModelsFilterArrayOutput) ToGetModelsFilterArrayOutputWithContext(ctx context.Context) GetModelsFilterArrayOutput {
	return o
}

func (o GetModelsFilterArrayOutput) Index(i pulumi.IntInput) GetModelsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelsFilter {
		return vs[0].([]GetModelsFilter)[vs[1].(int)]
	}).(GetModelsFilterOutput)
}

type GetModelsModelCollection struct {
	Items []GetModelsModelCollectionItem `pulumi:"items"`
}

// GetModelsModelCollectionInput is an input type that accepts GetModelsModelCollectionArgs and GetModelsModelCollectionOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionInput` via:
//
//	GetModelsModelCollectionArgs{...}
type GetModelsModelCollectionInput interface {
	pulumi.Input

	ToGetModelsModelCollectionOutput() GetModelsModelCollectionOutput
	ToGetModelsModelCollectionOutputWithContext(context.Context) GetModelsModelCollectionOutput
}

type GetModelsModelCollectionArgs struct {
	Items GetModelsModelCollectionItemArrayInput `pulumi:"items"`
}

func (GetModelsModelCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollection)(nil)).Elem()
}

func (i GetModelsModelCollectionArgs) ToGetModelsModelCollectionOutput() GetModelsModelCollectionOutput {
	return i.ToGetModelsModelCollectionOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionArgs) ToGetModelsModelCollectionOutputWithContext(ctx context.Context) GetModelsModelCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionOutput)
}

// GetModelsModelCollectionArrayInput is an input type that accepts GetModelsModelCollectionArray and GetModelsModelCollectionArrayOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionArrayInput` via:
//
//	GetModelsModelCollectionArray{ GetModelsModelCollectionArgs{...} }
type GetModelsModelCollectionArrayInput interface {
	pulumi.Input

	ToGetModelsModelCollectionArrayOutput() GetModelsModelCollectionArrayOutput
	ToGetModelsModelCollectionArrayOutputWithContext(context.Context) GetModelsModelCollectionArrayOutput
}

type GetModelsModelCollectionArray []GetModelsModelCollectionInput

func (GetModelsModelCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollection)(nil)).Elem()
}

func (i GetModelsModelCollectionArray) ToGetModelsModelCollectionArrayOutput() GetModelsModelCollectionArrayOutput {
	return i.ToGetModelsModelCollectionArrayOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionArray) ToGetModelsModelCollectionArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionArrayOutput)
}

type GetModelsModelCollectionOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollection)(nil)).Elem()
}

func (o GetModelsModelCollectionOutput) ToGetModelsModelCollectionOutput() GetModelsModelCollectionOutput {
	return o
}

func (o GetModelsModelCollectionOutput) ToGetModelsModelCollectionOutputWithContext(ctx context.Context) GetModelsModelCollectionOutput {
	return o
}

func (o GetModelsModelCollectionOutput) Items() GetModelsModelCollectionItemArrayOutput {
	return o.ApplyT(func(v GetModelsModelCollection) []GetModelsModelCollectionItem { return v.Items }).(GetModelsModelCollectionItemArrayOutput)
}

type GetModelsModelCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollection)(nil)).Elem()
}

func (o GetModelsModelCollectionArrayOutput) ToGetModelsModelCollectionArrayOutput() GetModelsModelCollectionArrayOutput {
	return o
}

func (o GetModelsModelCollectionArrayOutput) ToGetModelsModelCollectionArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionArrayOutput {
	return o
}

func (o GetModelsModelCollectionArrayOutput) Index(i pulumi.IntInput) GetModelsModelCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelsModelCollection {
		return vs[0].([]GetModelsModelCollection)[vs[1].(int)]
	}).(GetModelsModelCollectionOutput)
}

type GetModelsModelCollectionItem struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// A short description of the Model.
	Description string `pulumi:"description"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// model training results of different models
	EvaluationResults []GetModelsModelCollectionItemEvaluationResult `pulumi:"evaluationResults"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Unique identifier model OCID of a model that is immutable on creation
	Id string `pulumi:"id"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// Possible model types
	ModelDetails []GetModelsModelCollectionItemModelDetail `pulumi:"modelDetails"`
	// The ID of the project for which to list the objects.
	ProjectId string `pulumi:"projectId"`
	// <b>Filter</b> results by the specified lifecycle state. Must be a valid state for the resource type.
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// Possible strategy as testing and validation(optional) dataset.
	TestStrategies []GetModelsModelCollectionItemTestStrategy `pulumi:"testStrategies"`
	// The time the the model was created. An RFC3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// The time the model was updated. An RFC3339 formatted datetime string.
	TimeUpdated string `pulumi:"timeUpdated"`
	// Possible data set type
	TrainingDatasets []GetModelsModelCollectionItemTrainingDataset `pulumi:"trainingDatasets"`
	// For pre trained models this will identify model type version used for model creation For custom identifying the model by model id is difficult. This param provides ease of use for end customer. <<service>>::<<service-name>>_<<model-type-version>>::<<custom model on which this training has to be done>> ex: ai-lang::NER_V1::CUSTOM-V0
	Version string `pulumi:"version"`
}

// GetModelsModelCollectionItemInput is an input type that accepts GetModelsModelCollectionItemArgs and GetModelsModelCollectionItemOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemInput` via:
//
//	GetModelsModelCollectionItemArgs{...}
type GetModelsModelCollectionItemInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemOutput() GetModelsModelCollectionItemOutput
	ToGetModelsModelCollectionItemOutputWithContext(context.Context) GetModelsModelCollectionItemOutput
}

type GetModelsModelCollectionItemArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// A short description of the Model.
	Description pulumi.StringInput `pulumi:"description"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// model training results of different models
	EvaluationResults GetModelsModelCollectionItemEvaluationResultArrayInput `pulumi:"evaluationResults"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// Unique identifier model OCID of a model that is immutable on creation
	Id pulumi.StringInput `pulumi:"id"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in failed state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// Possible model types
	ModelDetails GetModelsModelCollectionItemModelDetailArrayInput `pulumi:"modelDetails"`
	// The ID of the project for which to list the objects.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// <b>Filter</b> results by the specified lifecycle state. Must be a valid state for the resource type.
	State pulumi.StringInput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput `pulumi:"systemTags"`
	// Possible strategy as testing and validation(optional) dataset.
	TestStrategies GetModelsModelCollectionItemTestStrategyArrayInput `pulumi:"testStrategies"`
	// The time the the model was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time the model was updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
	// Possible data set type
	TrainingDatasets GetModelsModelCollectionItemTrainingDatasetArrayInput `pulumi:"trainingDatasets"`
	// For pre trained models this will identify model type version used for model creation For custom identifying the model by model id is difficult. This param provides ease of use for end customer. <<service>>::<<service-name>>_<<model-type-version>>::<<custom model on which this training has to be done>> ex: ai-lang::NER_V1::CUSTOM-V0
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetModelsModelCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItem)(nil)).Elem()
}

func (i GetModelsModelCollectionItemArgs) ToGetModelsModelCollectionItemOutput() GetModelsModelCollectionItemOutput {
	return i.ToGetModelsModelCollectionItemOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemArgs) ToGetModelsModelCollectionItemOutputWithContext(ctx context.Context) GetModelsModelCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemOutput)
}

// GetModelsModelCollectionItemArrayInput is an input type that accepts GetModelsModelCollectionItemArray and GetModelsModelCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemArrayInput` via:
//
//	GetModelsModelCollectionItemArray{ GetModelsModelCollectionItemArgs{...} }
type GetModelsModelCollectionItemArrayInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemArrayOutput() GetModelsModelCollectionItemArrayOutput
	ToGetModelsModelCollectionItemArrayOutputWithContext(context.Context) GetModelsModelCollectionItemArrayOutput
}

type GetModelsModelCollectionItemArray []GetModelsModelCollectionItemInput

func (GetModelsModelCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItem)(nil)).Elem()
}

func (i GetModelsModelCollectionItemArray) ToGetModelsModelCollectionItemArrayOutput() GetModelsModelCollectionItemArrayOutput {
	return i.ToGetModelsModelCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemArray) ToGetModelsModelCollectionItemArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemArrayOutput)
}

type GetModelsModelCollectionItemOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItem)(nil)).Elem()
}

func (o GetModelsModelCollectionItemOutput) ToGetModelsModelCollectionItemOutput() GetModelsModelCollectionItemOutput {
	return o
}

func (o GetModelsModelCollectionItemOutput) ToGetModelsModelCollectionItemOutputWithContext(ctx context.Context) GetModelsModelCollectionItemOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetModelsModelCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetModelsModelCollectionItemOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// A short description of the Model.
func (o GetModelsModelCollectionItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) string { return v.Description }).(pulumi.StringOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetModelsModelCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// model training results of different models
func (o GetModelsModelCollectionItemOutput) EvaluationResults() GetModelsModelCollectionItemEvaluationResultArrayOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) []GetModelsModelCollectionItemEvaluationResult {
		return v.EvaluationResults
	}).(GetModelsModelCollectionItemEvaluationResultArrayOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetModelsModelCollectionItemOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// Unique identifier model OCID of a model that is immutable on creation
func (o GetModelsModelCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in failed state.
func (o GetModelsModelCollectionItemOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// Possible model types
func (o GetModelsModelCollectionItemOutput) ModelDetails() GetModelsModelCollectionItemModelDetailArrayOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) []GetModelsModelCollectionItemModelDetail { return v.ModelDetails }).(GetModelsModelCollectionItemModelDetailArrayOutput)
}

// The ID of the project for which to list the objects.
func (o GetModelsModelCollectionItemOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) string { return v.ProjectId }).(pulumi.StringOutput)
}

// <b>Filter</b> results by the specified lifecycle state. Must be a valid state for the resource type.
func (o GetModelsModelCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetModelsModelCollectionItemOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// Possible strategy as testing and validation(optional) dataset.
func (o GetModelsModelCollectionItemOutput) TestStrategies() GetModelsModelCollectionItemTestStrategyArrayOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) []GetModelsModelCollectionItemTestStrategy {
		return v.TestStrategies
	}).(GetModelsModelCollectionItemTestStrategyArrayOutput)
}

// The time the the model was created. An RFC3339 formatted datetime string.
func (o GetModelsModelCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the model was updated. An RFC3339 formatted datetime string.
func (o GetModelsModelCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// Possible data set type
func (o GetModelsModelCollectionItemOutput) TrainingDatasets() GetModelsModelCollectionItemTrainingDatasetArrayOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) []GetModelsModelCollectionItemTrainingDataset {
		return v.TrainingDatasets
	}).(GetModelsModelCollectionItemTrainingDatasetArrayOutput)
}

// For pre trained models this will identify model type version used for model creation For custom identifying the model by model id is difficult. This param provides ease of use for end customer. <<service>>::<<service-name>>_<<model-type-version>>::<<custom model on which this training has to be done>> ex: ai-lang::NER_V1::CUSTOM-V0
func (o GetModelsModelCollectionItemOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) string { return v.Version }).(pulumi.StringOutput)
}

type GetModelsModelCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItem)(nil)).Elem()
}

func (o GetModelsModelCollectionItemArrayOutput) ToGetModelsModelCollectionItemArrayOutput() GetModelsModelCollectionItemArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemArrayOutput) ToGetModelsModelCollectionItemArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemArrayOutput) Index(i pulumi.IntInput) GetModelsModelCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelsModelCollectionItem {
		return vs[0].([]GetModelsModelCollectionItem)[vs[1].(int)]
	}).(GetModelsModelCollectionItemOutput)
}

type GetModelsModelCollectionItemEvaluationResult struct {
	// List of text classification metrics
	ClassMetrics []GetModelsModelCollectionItemEvaluationResultClassMetric `pulumi:"classMetrics"`
	// class level confusion matrix
	ConfusionMatrix string `pulumi:"confusionMatrix"`
	// List of entity metrics
	EntityMetrics []GetModelsModelCollectionItemEvaluationResultEntityMetric `pulumi:"entityMetrics"`
	// labels
	Labels []string `pulumi:"labels"`
	// Model level named entity recognition metrics
	Metrics []GetModelsModelCollectionItemEvaluationResultMetric `pulumi:"metrics"`
	// Model type
	ModelType string `pulumi:"modelType"`
}

// GetModelsModelCollectionItemEvaluationResultInput is an input type that accepts GetModelsModelCollectionItemEvaluationResultArgs and GetModelsModelCollectionItemEvaluationResultOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemEvaluationResultInput` via:
//
//	GetModelsModelCollectionItemEvaluationResultArgs{...}
type GetModelsModelCollectionItemEvaluationResultInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemEvaluationResultOutput() GetModelsModelCollectionItemEvaluationResultOutput
	ToGetModelsModelCollectionItemEvaluationResultOutputWithContext(context.Context) GetModelsModelCollectionItemEvaluationResultOutput
}

type GetModelsModelCollectionItemEvaluationResultArgs struct {
	// List of text classification metrics
	ClassMetrics GetModelsModelCollectionItemEvaluationResultClassMetricArrayInput `pulumi:"classMetrics"`
	// class level confusion matrix
	ConfusionMatrix pulumi.StringInput `pulumi:"confusionMatrix"`
	// List of entity metrics
	EntityMetrics GetModelsModelCollectionItemEvaluationResultEntityMetricArrayInput `pulumi:"entityMetrics"`
	// labels
	Labels pulumi.StringArrayInput `pulumi:"labels"`
	// Model level named entity recognition metrics
	Metrics GetModelsModelCollectionItemEvaluationResultMetricArrayInput `pulumi:"metrics"`
	// Model type
	ModelType pulumi.StringInput `pulumi:"modelType"`
}

func (GetModelsModelCollectionItemEvaluationResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItemEvaluationResult)(nil)).Elem()
}

func (i GetModelsModelCollectionItemEvaluationResultArgs) ToGetModelsModelCollectionItemEvaluationResultOutput() GetModelsModelCollectionItemEvaluationResultOutput {
	return i.ToGetModelsModelCollectionItemEvaluationResultOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemEvaluationResultArgs) ToGetModelsModelCollectionItemEvaluationResultOutputWithContext(ctx context.Context) GetModelsModelCollectionItemEvaluationResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemEvaluationResultOutput)
}

// GetModelsModelCollectionItemEvaluationResultArrayInput is an input type that accepts GetModelsModelCollectionItemEvaluationResultArray and GetModelsModelCollectionItemEvaluationResultArrayOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemEvaluationResultArrayInput` via:
//
//	GetModelsModelCollectionItemEvaluationResultArray{ GetModelsModelCollectionItemEvaluationResultArgs{...} }
type GetModelsModelCollectionItemEvaluationResultArrayInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemEvaluationResultArrayOutput() GetModelsModelCollectionItemEvaluationResultArrayOutput
	ToGetModelsModelCollectionItemEvaluationResultArrayOutputWithContext(context.Context) GetModelsModelCollectionItemEvaluationResultArrayOutput
}

type GetModelsModelCollectionItemEvaluationResultArray []GetModelsModelCollectionItemEvaluationResultInput

func (GetModelsModelCollectionItemEvaluationResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItemEvaluationResult)(nil)).Elem()
}

func (i GetModelsModelCollectionItemEvaluationResultArray) ToGetModelsModelCollectionItemEvaluationResultArrayOutput() GetModelsModelCollectionItemEvaluationResultArrayOutput {
	return i.ToGetModelsModelCollectionItemEvaluationResultArrayOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemEvaluationResultArray) ToGetModelsModelCollectionItemEvaluationResultArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemEvaluationResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemEvaluationResultArrayOutput)
}

type GetModelsModelCollectionItemEvaluationResultOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemEvaluationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItemEvaluationResult)(nil)).Elem()
}

func (o GetModelsModelCollectionItemEvaluationResultOutput) ToGetModelsModelCollectionItemEvaluationResultOutput() GetModelsModelCollectionItemEvaluationResultOutput {
	return o
}

func (o GetModelsModelCollectionItemEvaluationResultOutput) ToGetModelsModelCollectionItemEvaluationResultOutputWithContext(ctx context.Context) GetModelsModelCollectionItemEvaluationResultOutput {
	return o
}

// List of text classification metrics
func (o GetModelsModelCollectionItemEvaluationResultOutput) ClassMetrics() GetModelsModelCollectionItemEvaluationResultClassMetricArrayOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemEvaluationResult) []GetModelsModelCollectionItemEvaluationResultClassMetric {
		return v.ClassMetrics
	}).(GetModelsModelCollectionItemEvaluationResultClassMetricArrayOutput)
}

// class level confusion matrix
func (o GetModelsModelCollectionItemEvaluationResultOutput) ConfusionMatrix() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemEvaluationResult) string { return v.ConfusionMatrix }).(pulumi.StringOutput)
}

// List of entity metrics
func (o GetModelsModelCollectionItemEvaluationResultOutput) EntityMetrics() GetModelsModelCollectionItemEvaluationResultEntityMetricArrayOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemEvaluationResult) []GetModelsModelCollectionItemEvaluationResultEntityMetric {
		return v.EntityMetrics
	}).(GetModelsModelCollectionItemEvaluationResultEntityMetricArrayOutput)
}

// labels
func (o GetModelsModelCollectionItemEvaluationResultOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemEvaluationResult) []string { return v.Labels }).(pulumi.StringArrayOutput)
}

// Model level named entity recognition metrics
func (o GetModelsModelCollectionItemEvaluationResultOutput) Metrics() GetModelsModelCollectionItemEvaluationResultMetricArrayOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemEvaluationResult) []GetModelsModelCollectionItemEvaluationResultMetric {
		return v.Metrics
	}).(GetModelsModelCollectionItemEvaluationResultMetricArrayOutput)
}

// Model type
func (o GetModelsModelCollectionItemEvaluationResultOutput) ModelType() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemEvaluationResult) string { return v.ModelType }).(pulumi.StringOutput)
}

type GetModelsModelCollectionItemEvaluationResultArrayOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemEvaluationResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItemEvaluationResult)(nil)).Elem()
}

func (o GetModelsModelCollectionItemEvaluationResultArrayOutput) ToGetModelsModelCollectionItemEvaluationResultArrayOutput() GetModelsModelCollectionItemEvaluationResultArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemEvaluationResultArrayOutput) ToGetModelsModelCollectionItemEvaluationResultArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemEvaluationResultArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemEvaluationResultArrayOutput) Index(i pulumi.IntInput) GetModelsModelCollectionItemEvaluationResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelsModelCollectionItemEvaluationResult {
		return vs[0].([]GetModelsModelCollectionItemEvaluationResult)[vs[1].(int)]
	}).(GetModelsModelCollectionItemEvaluationResultOutput)
}

type GetModelsModelCollectionItemEvaluationResultClassMetric struct {
	// F1-score, is a measure of a model’s accuracy on a dataset
	F1 float64 `pulumi:"f1"`
	// Entity label
	Label string `pulumi:"label"`
	// Precision refers to the number of true positives divided by the total number of positive predictions (i.e., the number of true positives plus the number of false positives)
	Precision float64 `pulumi:"precision"`
	// Measures the model's ability to predict actual positive classes. It is the ratio between the predicted true positives and what was actually tagged. The recall metric reveals how many of the predicted classes are correct.
	Recall float64 `pulumi:"recall"`
	// number of samples in the test set
	Support float64 `pulumi:"support"`
}

// GetModelsModelCollectionItemEvaluationResultClassMetricInput is an input type that accepts GetModelsModelCollectionItemEvaluationResultClassMetricArgs and GetModelsModelCollectionItemEvaluationResultClassMetricOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemEvaluationResultClassMetricInput` via:
//
//	GetModelsModelCollectionItemEvaluationResultClassMetricArgs{...}
type GetModelsModelCollectionItemEvaluationResultClassMetricInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemEvaluationResultClassMetricOutput() GetModelsModelCollectionItemEvaluationResultClassMetricOutput
	ToGetModelsModelCollectionItemEvaluationResultClassMetricOutputWithContext(context.Context) GetModelsModelCollectionItemEvaluationResultClassMetricOutput
}

type GetModelsModelCollectionItemEvaluationResultClassMetricArgs struct {
	// F1-score, is a measure of a model’s accuracy on a dataset
	F1 pulumi.Float64Input `pulumi:"f1"`
	// Entity label
	Label pulumi.StringInput `pulumi:"label"`
	// Precision refers to the number of true positives divided by the total number of positive predictions (i.e., the number of true positives plus the number of false positives)
	Precision pulumi.Float64Input `pulumi:"precision"`
	// Measures the model's ability to predict actual positive classes. It is the ratio between the predicted true positives and what was actually tagged. The recall metric reveals how many of the predicted classes are correct.
	Recall pulumi.Float64Input `pulumi:"recall"`
	// number of samples in the test set
	Support pulumi.Float64Input `pulumi:"support"`
}

func (GetModelsModelCollectionItemEvaluationResultClassMetricArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItemEvaluationResultClassMetric)(nil)).Elem()
}

func (i GetModelsModelCollectionItemEvaluationResultClassMetricArgs) ToGetModelsModelCollectionItemEvaluationResultClassMetricOutput() GetModelsModelCollectionItemEvaluationResultClassMetricOutput {
	return i.ToGetModelsModelCollectionItemEvaluationResultClassMetricOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemEvaluationResultClassMetricArgs) ToGetModelsModelCollectionItemEvaluationResultClassMetricOutputWithContext(ctx context.Context) GetModelsModelCollectionItemEvaluationResultClassMetricOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemEvaluationResultClassMetricOutput)
}

// GetModelsModelCollectionItemEvaluationResultClassMetricArrayInput is an input type that accepts GetModelsModelCollectionItemEvaluationResultClassMetricArray and GetModelsModelCollectionItemEvaluationResultClassMetricArrayOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemEvaluationResultClassMetricArrayInput` via:
//
//	GetModelsModelCollectionItemEvaluationResultClassMetricArray{ GetModelsModelCollectionItemEvaluationResultClassMetricArgs{...} }
type GetModelsModelCollectionItemEvaluationResultClassMetricArrayInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemEvaluationResultClassMetricArrayOutput() GetModelsModelCollectionItemEvaluationResultClassMetricArrayOutput
	ToGetModelsModelCollectionItemEvaluationResultClassMetricArrayOutputWithContext(context.Context) GetModelsModelCollectionItemEvaluationResultClassMetricArrayOutput
}

type GetModelsModelCollectionItemEvaluationResultClassMetricArray []GetModelsModelCollectionItemEvaluationResultClassMetricInput

func (GetModelsModelCollectionItemEvaluationResultClassMetricArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItemEvaluationResultClassMetric)(nil)).Elem()
}

func (i GetModelsModelCollectionItemEvaluationResultClassMetricArray) ToGetModelsModelCollectionItemEvaluationResultClassMetricArrayOutput() GetModelsModelCollectionItemEvaluationResultClassMetricArrayOutput {
	return i.ToGetModelsModelCollectionItemEvaluationResultClassMetricArrayOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemEvaluationResultClassMetricArray) ToGetModelsModelCollectionItemEvaluationResultClassMetricArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemEvaluationResultClassMetricArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemEvaluationResultClassMetricArrayOutput)
}

type GetModelsModelCollectionItemEvaluationResultClassMetricOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemEvaluationResultClassMetricOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItemEvaluationResultClassMetric)(nil)).Elem()
}

func (o GetModelsModelCollectionItemEvaluationResultClassMetricOutput) ToGetModelsModelCollectionItemEvaluationResultClassMetricOutput() GetModelsModelCollectionItemEvaluationResultClassMetricOutput {
	return o
}

func (o GetModelsModelCollectionItemEvaluationResultClassMetricOutput) ToGetModelsModelCollectionItemEvaluationResultClassMetricOutputWithContext(ctx context.Context) GetModelsModelCollectionItemEvaluationResultClassMetricOutput {
	return o
}

// F1-score, is a measure of a model’s accuracy on a dataset
func (o GetModelsModelCollectionItemEvaluationResultClassMetricOutput) F1() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelsModelCollectionItemEvaluationResultClassMetric) float64 { return v.F1 }).(pulumi.Float64Output)
}

// Entity label
func (o GetModelsModelCollectionItemEvaluationResultClassMetricOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemEvaluationResultClassMetric) string { return v.Label }).(pulumi.StringOutput)
}

// Precision refers to the number of true positives divided by the total number of positive predictions (i.e., the number of true positives plus the number of false positives)
func (o GetModelsModelCollectionItemEvaluationResultClassMetricOutput) Precision() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelsModelCollectionItemEvaluationResultClassMetric) float64 { return v.Precision }).(pulumi.Float64Output)
}

// Measures the model's ability to predict actual positive classes. It is the ratio between the predicted true positives and what was actually tagged. The recall metric reveals how many of the predicted classes are correct.
func (o GetModelsModelCollectionItemEvaluationResultClassMetricOutput) Recall() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelsModelCollectionItemEvaluationResultClassMetric) float64 { return v.Recall }).(pulumi.Float64Output)
}

// number of samples in the test set
func (o GetModelsModelCollectionItemEvaluationResultClassMetricOutput) Support() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelsModelCollectionItemEvaluationResultClassMetric) float64 { return v.Support }).(pulumi.Float64Output)
}

type GetModelsModelCollectionItemEvaluationResultClassMetricArrayOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemEvaluationResultClassMetricArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItemEvaluationResultClassMetric)(nil)).Elem()
}

func (o GetModelsModelCollectionItemEvaluationResultClassMetricArrayOutput) ToGetModelsModelCollectionItemEvaluationResultClassMetricArrayOutput() GetModelsModelCollectionItemEvaluationResultClassMetricArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemEvaluationResultClassMetricArrayOutput) ToGetModelsModelCollectionItemEvaluationResultClassMetricArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemEvaluationResultClassMetricArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemEvaluationResultClassMetricArrayOutput) Index(i pulumi.IntInput) GetModelsModelCollectionItemEvaluationResultClassMetricOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelsModelCollectionItemEvaluationResultClassMetric {
		return vs[0].([]GetModelsModelCollectionItemEvaluationResultClassMetric)[vs[1].(int)]
	}).(GetModelsModelCollectionItemEvaluationResultClassMetricOutput)
}

type GetModelsModelCollectionItemEvaluationResultEntityMetric struct {
	// F1-score, is a measure of a model’s accuracy on a dataset
	F1 float64 `pulumi:"f1"`
	// Entity label
	Label string `pulumi:"label"`
	// Precision refers to the number of true positives divided by the total number of positive predictions (i.e., the number of true positives plus the number of false positives)
	Precision float64 `pulumi:"precision"`
	// Measures the model's ability to predict actual positive classes. It is the ratio between the predicted true positives and what was actually tagged. The recall metric reveals how many of the predicted classes are correct.
	Recall float64 `pulumi:"recall"`
}

// GetModelsModelCollectionItemEvaluationResultEntityMetricInput is an input type that accepts GetModelsModelCollectionItemEvaluationResultEntityMetricArgs and GetModelsModelCollectionItemEvaluationResultEntityMetricOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemEvaluationResultEntityMetricInput` via:
//
//	GetModelsModelCollectionItemEvaluationResultEntityMetricArgs{...}
type GetModelsModelCollectionItemEvaluationResultEntityMetricInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemEvaluationResultEntityMetricOutput() GetModelsModelCollectionItemEvaluationResultEntityMetricOutput
	ToGetModelsModelCollectionItemEvaluationResultEntityMetricOutputWithContext(context.Context) GetModelsModelCollectionItemEvaluationResultEntityMetricOutput
}

type GetModelsModelCollectionItemEvaluationResultEntityMetricArgs struct {
	// F1-score, is a measure of a model’s accuracy on a dataset
	F1 pulumi.Float64Input `pulumi:"f1"`
	// Entity label
	Label pulumi.StringInput `pulumi:"label"`
	// Precision refers to the number of true positives divided by the total number of positive predictions (i.e., the number of true positives plus the number of false positives)
	Precision pulumi.Float64Input `pulumi:"precision"`
	// Measures the model's ability to predict actual positive classes. It is the ratio between the predicted true positives and what was actually tagged. The recall metric reveals how many of the predicted classes are correct.
	Recall pulumi.Float64Input `pulumi:"recall"`
}

func (GetModelsModelCollectionItemEvaluationResultEntityMetricArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItemEvaluationResultEntityMetric)(nil)).Elem()
}

func (i GetModelsModelCollectionItemEvaluationResultEntityMetricArgs) ToGetModelsModelCollectionItemEvaluationResultEntityMetricOutput() GetModelsModelCollectionItemEvaluationResultEntityMetricOutput {
	return i.ToGetModelsModelCollectionItemEvaluationResultEntityMetricOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemEvaluationResultEntityMetricArgs) ToGetModelsModelCollectionItemEvaluationResultEntityMetricOutputWithContext(ctx context.Context) GetModelsModelCollectionItemEvaluationResultEntityMetricOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemEvaluationResultEntityMetricOutput)
}

// GetModelsModelCollectionItemEvaluationResultEntityMetricArrayInput is an input type that accepts GetModelsModelCollectionItemEvaluationResultEntityMetricArray and GetModelsModelCollectionItemEvaluationResultEntityMetricArrayOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemEvaluationResultEntityMetricArrayInput` via:
//
//	GetModelsModelCollectionItemEvaluationResultEntityMetricArray{ GetModelsModelCollectionItemEvaluationResultEntityMetricArgs{...} }
type GetModelsModelCollectionItemEvaluationResultEntityMetricArrayInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemEvaluationResultEntityMetricArrayOutput() GetModelsModelCollectionItemEvaluationResultEntityMetricArrayOutput
	ToGetModelsModelCollectionItemEvaluationResultEntityMetricArrayOutputWithContext(context.Context) GetModelsModelCollectionItemEvaluationResultEntityMetricArrayOutput
}

type GetModelsModelCollectionItemEvaluationResultEntityMetricArray []GetModelsModelCollectionItemEvaluationResultEntityMetricInput

func (GetModelsModelCollectionItemEvaluationResultEntityMetricArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItemEvaluationResultEntityMetric)(nil)).Elem()
}

func (i GetModelsModelCollectionItemEvaluationResultEntityMetricArray) ToGetModelsModelCollectionItemEvaluationResultEntityMetricArrayOutput() GetModelsModelCollectionItemEvaluationResultEntityMetricArrayOutput {
	return i.ToGetModelsModelCollectionItemEvaluationResultEntityMetricArrayOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemEvaluationResultEntityMetricArray) ToGetModelsModelCollectionItemEvaluationResultEntityMetricArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemEvaluationResultEntityMetricArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemEvaluationResultEntityMetricArrayOutput)
}

type GetModelsModelCollectionItemEvaluationResultEntityMetricOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemEvaluationResultEntityMetricOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItemEvaluationResultEntityMetric)(nil)).Elem()
}

func (o GetModelsModelCollectionItemEvaluationResultEntityMetricOutput) ToGetModelsModelCollectionItemEvaluationResultEntityMetricOutput() GetModelsModelCollectionItemEvaluationResultEntityMetricOutput {
	return o
}

func (o GetModelsModelCollectionItemEvaluationResultEntityMetricOutput) ToGetModelsModelCollectionItemEvaluationResultEntityMetricOutputWithContext(ctx context.Context) GetModelsModelCollectionItemEvaluationResultEntityMetricOutput {
	return o
}

// F1-score, is a measure of a model’s accuracy on a dataset
func (o GetModelsModelCollectionItemEvaluationResultEntityMetricOutput) F1() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelsModelCollectionItemEvaluationResultEntityMetric) float64 { return v.F1 }).(pulumi.Float64Output)
}

// Entity label
func (o GetModelsModelCollectionItemEvaluationResultEntityMetricOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemEvaluationResultEntityMetric) string { return v.Label }).(pulumi.StringOutput)
}

// Precision refers to the number of true positives divided by the total number of positive predictions (i.e., the number of true positives plus the number of false positives)
func (o GetModelsModelCollectionItemEvaluationResultEntityMetricOutput) Precision() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelsModelCollectionItemEvaluationResultEntityMetric) float64 { return v.Precision }).(pulumi.Float64Output)
}

// Measures the model's ability to predict actual positive classes. It is the ratio between the predicted true positives and what was actually tagged. The recall metric reveals how many of the predicted classes are correct.
func (o GetModelsModelCollectionItemEvaluationResultEntityMetricOutput) Recall() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelsModelCollectionItemEvaluationResultEntityMetric) float64 { return v.Recall }).(pulumi.Float64Output)
}

type GetModelsModelCollectionItemEvaluationResultEntityMetricArrayOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemEvaluationResultEntityMetricArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItemEvaluationResultEntityMetric)(nil)).Elem()
}

func (o GetModelsModelCollectionItemEvaluationResultEntityMetricArrayOutput) ToGetModelsModelCollectionItemEvaluationResultEntityMetricArrayOutput() GetModelsModelCollectionItemEvaluationResultEntityMetricArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemEvaluationResultEntityMetricArrayOutput) ToGetModelsModelCollectionItemEvaluationResultEntityMetricArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemEvaluationResultEntityMetricArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemEvaluationResultEntityMetricArrayOutput) Index(i pulumi.IntInput) GetModelsModelCollectionItemEvaluationResultEntityMetricOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelsModelCollectionItemEvaluationResultEntityMetric {
		return vs[0].([]GetModelsModelCollectionItemEvaluationResultEntityMetric)[vs[1].(int)]
	}).(GetModelsModelCollectionItemEvaluationResultEntityMetricOutput)
}

type GetModelsModelCollectionItemEvaluationResultMetric struct {
	// The fraction of the labels that were correctly recognised .
	Accuracy float64 `pulumi:"accuracy"`
	// F1-score, is a measure of a model’s accuracy on a dataset
	MacroF1 float64 `pulumi:"macroF1"`
	// Precision refers to the number of true positives divided by the total number of positive predictions (i.e., the number of true positives plus the number of false positives)
	MacroPrecision float64 `pulumi:"macroPrecision"`
	// Measures the model's ability to predict actual positive classes. It is the ratio between the predicted true positives and what was actually tagged. The recall metric reveals how many of the predicted classes are correct.
	MacroRecall float64 `pulumi:"macroRecall"`
	// F1-score, is a measure of a model’s accuracy on a dataset
	MicroF1 float64 `pulumi:"microF1"`
	// Precision refers to the number of true positives divided by the total number of positive predictions (i.e., the number of true positives plus the number of false positives)
	MicroPrecision float64 `pulumi:"microPrecision"`
	// Measures the model's ability to predict actual positive classes. It is the ratio between the predicted true positives and what was actually tagged. The recall metric reveals how many of the predicted classes are correct.
	MicroRecall float64 `pulumi:"microRecall"`
	// F1-score, is a measure of a model’s accuracy on a dataset
	WeightedF1 float64 `pulumi:"weightedF1"`
	// Precision refers to the number of true positives divided by the total number of positive predictions (i.e., the number of true positives plus the number of false positives)
	WeightedPrecision float64 `pulumi:"weightedPrecision"`
	// Measures the model's ability to predict actual positive classes. It is the ratio between the predicted true positives and what was actually tagged. The recall metric reveals how many of the predicted classes are correct.
	WeightedRecall float64 `pulumi:"weightedRecall"`
}

// GetModelsModelCollectionItemEvaluationResultMetricInput is an input type that accepts GetModelsModelCollectionItemEvaluationResultMetricArgs and GetModelsModelCollectionItemEvaluationResultMetricOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemEvaluationResultMetricInput` via:
//
//	GetModelsModelCollectionItemEvaluationResultMetricArgs{...}
type GetModelsModelCollectionItemEvaluationResultMetricInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemEvaluationResultMetricOutput() GetModelsModelCollectionItemEvaluationResultMetricOutput
	ToGetModelsModelCollectionItemEvaluationResultMetricOutputWithContext(context.Context) GetModelsModelCollectionItemEvaluationResultMetricOutput
}

type GetModelsModelCollectionItemEvaluationResultMetricArgs struct {
	// The fraction of the labels that were correctly recognised .
	Accuracy pulumi.Float64Input `pulumi:"accuracy"`
	// F1-score, is a measure of a model’s accuracy on a dataset
	MacroF1 pulumi.Float64Input `pulumi:"macroF1"`
	// Precision refers to the number of true positives divided by the total number of positive predictions (i.e., the number of true positives plus the number of false positives)
	MacroPrecision pulumi.Float64Input `pulumi:"macroPrecision"`
	// Measures the model's ability to predict actual positive classes. It is the ratio between the predicted true positives and what was actually tagged. The recall metric reveals how many of the predicted classes are correct.
	MacroRecall pulumi.Float64Input `pulumi:"macroRecall"`
	// F1-score, is a measure of a model’s accuracy on a dataset
	MicroF1 pulumi.Float64Input `pulumi:"microF1"`
	// Precision refers to the number of true positives divided by the total number of positive predictions (i.e., the number of true positives plus the number of false positives)
	MicroPrecision pulumi.Float64Input `pulumi:"microPrecision"`
	// Measures the model's ability to predict actual positive classes. It is the ratio between the predicted true positives and what was actually tagged. The recall metric reveals how many of the predicted classes are correct.
	MicroRecall pulumi.Float64Input `pulumi:"microRecall"`
	// F1-score, is a measure of a model’s accuracy on a dataset
	WeightedF1 pulumi.Float64Input `pulumi:"weightedF1"`
	// Precision refers to the number of true positives divided by the total number of positive predictions (i.e., the number of true positives plus the number of false positives)
	WeightedPrecision pulumi.Float64Input `pulumi:"weightedPrecision"`
	// Measures the model's ability to predict actual positive classes. It is the ratio between the predicted true positives and what was actually tagged. The recall metric reveals how many of the predicted classes are correct.
	WeightedRecall pulumi.Float64Input `pulumi:"weightedRecall"`
}

func (GetModelsModelCollectionItemEvaluationResultMetricArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItemEvaluationResultMetric)(nil)).Elem()
}

func (i GetModelsModelCollectionItemEvaluationResultMetricArgs) ToGetModelsModelCollectionItemEvaluationResultMetricOutput() GetModelsModelCollectionItemEvaluationResultMetricOutput {
	return i.ToGetModelsModelCollectionItemEvaluationResultMetricOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemEvaluationResultMetricArgs) ToGetModelsModelCollectionItemEvaluationResultMetricOutputWithContext(ctx context.Context) GetModelsModelCollectionItemEvaluationResultMetricOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemEvaluationResultMetricOutput)
}

// GetModelsModelCollectionItemEvaluationResultMetricArrayInput is an input type that accepts GetModelsModelCollectionItemEvaluationResultMetricArray and GetModelsModelCollectionItemEvaluationResultMetricArrayOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemEvaluationResultMetricArrayInput` via:
//
//	GetModelsModelCollectionItemEvaluationResultMetricArray{ GetModelsModelCollectionItemEvaluationResultMetricArgs{...} }
type GetModelsModelCollectionItemEvaluationResultMetricArrayInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemEvaluationResultMetricArrayOutput() GetModelsModelCollectionItemEvaluationResultMetricArrayOutput
	ToGetModelsModelCollectionItemEvaluationResultMetricArrayOutputWithContext(context.Context) GetModelsModelCollectionItemEvaluationResultMetricArrayOutput
}

type GetModelsModelCollectionItemEvaluationResultMetricArray []GetModelsModelCollectionItemEvaluationResultMetricInput

func (GetModelsModelCollectionItemEvaluationResultMetricArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItemEvaluationResultMetric)(nil)).Elem()
}

func (i GetModelsModelCollectionItemEvaluationResultMetricArray) ToGetModelsModelCollectionItemEvaluationResultMetricArrayOutput() GetModelsModelCollectionItemEvaluationResultMetricArrayOutput {
	return i.ToGetModelsModelCollectionItemEvaluationResultMetricArrayOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemEvaluationResultMetricArray) ToGetModelsModelCollectionItemEvaluationResultMetricArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemEvaluationResultMetricArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemEvaluationResultMetricArrayOutput)
}

type GetModelsModelCollectionItemEvaluationResultMetricOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemEvaluationResultMetricOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItemEvaluationResultMetric)(nil)).Elem()
}

func (o GetModelsModelCollectionItemEvaluationResultMetricOutput) ToGetModelsModelCollectionItemEvaluationResultMetricOutput() GetModelsModelCollectionItemEvaluationResultMetricOutput {
	return o
}

func (o GetModelsModelCollectionItemEvaluationResultMetricOutput) ToGetModelsModelCollectionItemEvaluationResultMetricOutputWithContext(ctx context.Context) GetModelsModelCollectionItemEvaluationResultMetricOutput {
	return o
}

// The fraction of the labels that were correctly recognised .
func (o GetModelsModelCollectionItemEvaluationResultMetricOutput) Accuracy() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelsModelCollectionItemEvaluationResultMetric) float64 { return v.Accuracy }).(pulumi.Float64Output)
}

// F1-score, is a measure of a model’s accuracy on a dataset
func (o GetModelsModelCollectionItemEvaluationResultMetricOutput) MacroF1() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelsModelCollectionItemEvaluationResultMetric) float64 { return v.MacroF1 }).(pulumi.Float64Output)
}

// Precision refers to the number of true positives divided by the total number of positive predictions (i.e., the number of true positives plus the number of false positives)
func (o GetModelsModelCollectionItemEvaluationResultMetricOutput) MacroPrecision() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelsModelCollectionItemEvaluationResultMetric) float64 { return v.MacroPrecision }).(pulumi.Float64Output)
}

// Measures the model's ability to predict actual positive classes. It is the ratio between the predicted true positives and what was actually tagged. The recall metric reveals how many of the predicted classes are correct.
func (o GetModelsModelCollectionItemEvaluationResultMetricOutput) MacroRecall() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelsModelCollectionItemEvaluationResultMetric) float64 { return v.MacroRecall }).(pulumi.Float64Output)
}

// F1-score, is a measure of a model’s accuracy on a dataset
func (o GetModelsModelCollectionItemEvaluationResultMetricOutput) MicroF1() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelsModelCollectionItemEvaluationResultMetric) float64 { return v.MicroF1 }).(pulumi.Float64Output)
}

// Precision refers to the number of true positives divided by the total number of positive predictions (i.e., the number of true positives plus the number of false positives)
func (o GetModelsModelCollectionItemEvaluationResultMetricOutput) MicroPrecision() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelsModelCollectionItemEvaluationResultMetric) float64 { return v.MicroPrecision }).(pulumi.Float64Output)
}

// Measures the model's ability to predict actual positive classes. It is the ratio between the predicted true positives and what was actually tagged. The recall metric reveals how many of the predicted classes are correct.
func (o GetModelsModelCollectionItemEvaluationResultMetricOutput) MicroRecall() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelsModelCollectionItemEvaluationResultMetric) float64 { return v.MicroRecall }).(pulumi.Float64Output)
}

// F1-score, is a measure of a model’s accuracy on a dataset
func (o GetModelsModelCollectionItemEvaluationResultMetricOutput) WeightedF1() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelsModelCollectionItemEvaluationResultMetric) float64 { return v.WeightedF1 }).(pulumi.Float64Output)
}

// Precision refers to the number of true positives divided by the total number of positive predictions (i.e., the number of true positives plus the number of false positives)
func (o GetModelsModelCollectionItemEvaluationResultMetricOutput) WeightedPrecision() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelsModelCollectionItemEvaluationResultMetric) float64 { return v.WeightedPrecision }).(pulumi.Float64Output)
}

// Measures the model's ability to predict actual positive classes. It is the ratio between the predicted true positives and what was actually tagged. The recall metric reveals how many of the predicted classes are correct.
func (o GetModelsModelCollectionItemEvaluationResultMetricOutput) WeightedRecall() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelsModelCollectionItemEvaluationResultMetric) float64 { return v.WeightedRecall }).(pulumi.Float64Output)
}

type GetModelsModelCollectionItemEvaluationResultMetricArrayOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemEvaluationResultMetricArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItemEvaluationResultMetric)(nil)).Elem()
}

func (o GetModelsModelCollectionItemEvaluationResultMetricArrayOutput) ToGetModelsModelCollectionItemEvaluationResultMetricArrayOutput() GetModelsModelCollectionItemEvaluationResultMetricArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemEvaluationResultMetricArrayOutput) ToGetModelsModelCollectionItemEvaluationResultMetricArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemEvaluationResultMetricArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemEvaluationResultMetricArrayOutput) Index(i pulumi.IntInput) GetModelsModelCollectionItemEvaluationResultMetricOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelsModelCollectionItemEvaluationResultMetric {
		return vs[0].([]GetModelsModelCollectionItemEvaluationResultMetric)[vs[1].(int)]
	}).(GetModelsModelCollectionItemEvaluationResultMetricOutput)
}

type GetModelsModelCollectionItemModelDetail struct {
	// classification Modes
	ClassificationModes []GetModelsModelCollectionItemModelDetailClassificationMode `pulumi:"classificationModes"`
	// supported language default value is en
	LanguageCode string `pulumi:"languageCode"`
	// Model type
	ModelType string `pulumi:"modelType"`
	// For pre trained models this will identify model type version used for model creation For custom identifying the model by model id is difficult. This param provides ease of use for end customer. <<service>>::<<service-name>>_<<model-type-version>>::<<custom model on which this training has to be done>> ex: ai-lang::NER_V1::CUSTOM-V0
	Version string `pulumi:"version"`
}

// GetModelsModelCollectionItemModelDetailInput is an input type that accepts GetModelsModelCollectionItemModelDetailArgs and GetModelsModelCollectionItemModelDetailOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemModelDetailInput` via:
//
//	GetModelsModelCollectionItemModelDetailArgs{...}
type GetModelsModelCollectionItemModelDetailInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemModelDetailOutput() GetModelsModelCollectionItemModelDetailOutput
	ToGetModelsModelCollectionItemModelDetailOutputWithContext(context.Context) GetModelsModelCollectionItemModelDetailOutput
}

type GetModelsModelCollectionItemModelDetailArgs struct {
	// classification Modes
	ClassificationModes GetModelsModelCollectionItemModelDetailClassificationModeArrayInput `pulumi:"classificationModes"`
	// supported language default value is en
	LanguageCode pulumi.StringInput `pulumi:"languageCode"`
	// Model type
	ModelType pulumi.StringInput `pulumi:"modelType"`
	// For pre trained models this will identify model type version used for model creation For custom identifying the model by model id is difficult. This param provides ease of use for end customer. <<service>>::<<service-name>>_<<model-type-version>>::<<custom model on which this training has to be done>> ex: ai-lang::NER_V1::CUSTOM-V0
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetModelsModelCollectionItemModelDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItemModelDetail)(nil)).Elem()
}

func (i GetModelsModelCollectionItemModelDetailArgs) ToGetModelsModelCollectionItemModelDetailOutput() GetModelsModelCollectionItemModelDetailOutput {
	return i.ToGetModelsModelCollectionItemModelDetailOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemModelDetailArgs) ToGetModelsModelCollectionItemModelDetailOutputWithContext(ctx context.Context) GetModelsModelCollectionItemModelDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemModelDetailOutput)
}

// GetModelsModelCollectionItemModelDetailArrayInput is an input type that accepts GetModelsModelCollectionItemModelDetailArray and GetModelsModelCollectionItemModelDetailArrayOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemModelDetailArrayInput` via:
//
//	GetModelsModelCollectionItemModelDetailArray{ GetModelsModelCollectionItemModelDetailArgs{...} }
type GetModelsModelCollectionItemModelDetailArrayInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemModelDetailArrayOutput() GetModelsModelCollectionItemModelDetailArrayOutput
	ToGetModelsModelCollectionItemModelDetailArrayOutputWithContext(context.Context) GetModelsModelCollectionItemModelDetailArrayOutput
}

type GetModelsModelCollectionItemModelDetailArray []GetModelsModelCollectionItemModelDetailInput

func (GetModelsModelCollectionItemModelDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItemModelDetail)(nil)).Elem()
}

func (i GetModelsModelCollectionItemModelDetailArray) ToGetModelsModelCollectionItemModelDetailArrayOutput() GetModelsModelCollectionItemModelDetailArrayOutput {
	return i.ToGetModelsModelCollectionItemModelDetailArrayOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemModelDetailArray) ToGetModelsModelCollectionItemModelDetailArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemModelDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemModelDetailArrayOutput)
}

type GetModelsModelCollectionItemModelDetailOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemModelDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItemModelDetail)(nil)).Elem()
}

func (o GetModelsModelCollectionItemModelDetailOutput) ToGetModelsModelCollectionItemModelDetailOutput() GetModelsModelCollectionItemModelDetailOutput {
	return o
}

func (o GetModelsModelCollectionItemModelDetailOutput) ToGetModelsModelCollectionItemModelDetailOutputWithContext(ctx context.Context) GetModelsModelCollectionItemModelDetailOutput {
	return o
}

// classification Modes
func (o GetModelsModelCollectionItemModelDetailOutput) ClassificationModes() GetModelsModelCollectionItemModelDetailClassificationModeArrayOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemModelDetail) []GetModelsModelCollectionItemModelDetailClassificationMode {
		return v.ClassificationModes
	}).(GetModelsModelCollectionItemModelDetailClassificationModeArrayOutput)
}

// supported language default value is en
func (o GetModelsModelCollectionItemModelDetailOutput) LanguageCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemModelDetail) string { return v.LanguageCode }).(pulumi.StringOutput)
}

// Model type
func (o GetModelsModelCollectionItemModelDetailOutput) ModelType() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemModelDetail) string { return v.ModelType }).(pulumi.StringOutput)
}

// For pre trained models this will identify model type version used for model creation For custom identifying the model by model id is difficult. This param provides ease of use for end customer. <<service>>::<<service-name>>_<<model-type-version>>::<<custom model on which this training has to be done>> ex: ai-lang::NER_V1::CUSTOM-V0
func (o GetModelsModelCollectionItemModelDetailOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemModelDetail) string { return v.Version }).(pulumi.StringOutput)
}

type GetModelsModelCollectionItemModelDetailArrayOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemModelDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItemModelDetail)(nil)).Elem()
}

func (o GetModelsModelCollectionItemModelDetailArrayOutput) ToGetModelsModelCollectionItemModelDetailArrayOutput() GetModelsModelCollectionItemModelDetailArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemModelDetailArrayOutput) ToGetModelsModelCollectionItemModelDetailArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemModelDetailArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemModelDetailArrayOutput) Index(i pulumi.IntInput) GetModelsModelCollectionItemModelDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelsModelCollectionItemModelDetail {
		return vs[0].([]GetModelsModelCollectionItemModelDetail)[vs[1].(int)]
	}).(GetModelsModelCollectionItemModelDetailOutput)
}

type GetModelsModelCollectionItemModelDetailClassificationMode struct {
	// classification Modes
	ClassificationMode string `pulumi:"classificationMode"`
	// For pre trained models this will identify model type version used for model creation For custom identifying the model by model id is difficult. This param provides ease of use for end customer. <<service>>::<<service-name>>_<<model-type-version>>::<<custom model on which this training has to be done>> ex: ai-lang::NER_V1::CUSTOM-V0
	Version string `pulumi:"version"`
}

// GetModelsModelCollectionItemModelDetailClassificationModeInput is an input type that accepts GetModelsModelCollectionItemModelDetailClassificationModeArgs and GetModelsModelCollectionItemModelDetailClassificationModeOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemModelDetailClassificationModeInput` via:
//
//	GetModelsModelCollectionItemModelDetailClassificationModeArgs{...}
type GetModelsModelCollectionItemModelDetailClassificationModeInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemModelDetailClassificationModeOutput() GetModelsModelCollectionItemModelDetailClassificationModeOutput
	ToGetModelsModelCollectionItemModelDetailClassificationModeOutputWithContext(context.Context) GetModelsModelCollectionItemModelDetailClassificationModeOutput
}

type GetModelsModelCollectionItemModelDetailClassificationModeArgs struct {
	// classification Modes
	ClassificationMode pulumi.StringInput `pulumi:"classificationMode"`
	// For pre trained models this will identify model type version used for model creation For custom identifying the model by model id is difficult. This param provides ease of use for end customer. <<service>>::<<service-name>>_<<model-type-version>>::<<custom model on which this training has to be done>> ex: ai-lang::NER_V1::CUSTOM-V0
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetModelsModelCollectionItemModelDetailClassificationModeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItemModelDetailClassificationMode)(nil)).Elem()
}

func (i GetModelsModelCollectionItemModelDetailClassificationModeArgs) ToGetModelsModelCollectionItemModelDetailClassificationModeOutput() GetModelsModelCollectionItemModelDetailClassificationModeOutput {
	return i.ToGetModelsModelCollectionItemModelDetailClassificationModeOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemModelDetailClassificationModeArgs) ToGetModelsModelCollectionItemModelDetailClassificationModeOutputWithContext(ctx context.Context) GetModelsModelCollectionItemModelDetailClassificationModeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemModelDetailClassificationModeOutput)
}

// GetModelsModelCollectionItemModelDetailClassificationModeArrayInput is an input type that accepts GetModelsModelCollectionItemModelDetailClassificationModeArray and GetModelsModelCollectionItemModelDetailClassificationModeArrayOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemModelDetailClassificationModeArrayInput` via:
//
//	GetModelsModelCollectionItemModelDetailClassificationModeArray{ GetModelsModelCollectionItemModelDetailClassificationModeArgs{...} }
type GetModelsModelCollectionItemModelDetailClassificationModeArrayInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemModelDetailClassificationModeArrayOutput() GetModelsModelCollectionItemModelDetailClassificationModeArrayOutput
	ToGetModelsModelCollectionItemModelDetailClassificationModeArrayOutputWithContext(context.Context) GetModelsModelCollectionItemModelDetailClassificationModeArrayOutput
}

type GetModelsModelCollectionItemModelDetailClassificationModeArray []GetModelsModelCollectionItemModelDetailClassificationModeInput

func (GetModelsModelCollectionItemModelDetailClassificationModeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItemModelDetailClassificationMode)(nil)).Elem()
}

func (i GetModelsModelCollectionItemModelDetailClassificationModeArray) ToGetModelsModelCollectionItemModelDetailClassificationModeArrayOutput() GetModelsModelCollectionItemModelDetailClassificationModeArrayOutput {
	return i.ToGetModelsModelCollectionItemModelDetailClassificationModeArrayOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemModelDetailClassificationModeArray) ToGetModelsModelCollectionItemModelDetailClassificationModeArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemModelDetailClassificationModeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemModelDetailClassificationModeArrayOutput)
}

type GetModelsModelCollectionItemModelDetailClassificationModeOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemModelDetailClassificationModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItemModelDetailClassificationMode)(nil)).Elem()
}

func (o GetModelsModelCollectionItemModelDetailClassificationModeOutput) ToGetModelsModelCollectionItemModelDetailClassificationModeOutput() GetModelsModelCollectionItemModelDetailClassificationModeOutput {
	return o
}

func (o GetModelsModelCollectionItemModelDetailClassificationModeOutput) ToGetModelsModelCollectionItemModelDetailClassificationModeOutputWithContext(ctx context.Context) GetModelsModelCollectionItemModelDetailClassificationModeOutput {
	return o
}

// classification Modes
func (o GetModelsModelCollectionItemModelDetailClassificationModeOutput) ClassificationMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemModelDetailClassificationMode) string { return v.ClassificationMode }).(pulumi.StringOutput)
}

// For pre trained models this will identify model type version used for model creation For custom identifying the model by model id is difficult. This param provides ease of use for end customer. <<service>>::<<service-name>>_<<model-type-version>>::<<custom model on which this training has to be done>> ex: ai-lang::NER_V1::CUSTOM-V0
func (o GetModelsModelCollectionItemModelDetailClassificationModeOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemModelDetailClassificationMode) string { return v.Version }).(pulumi.StringOutput)
}

type GetModelsModelCollectionItemModelDetailClassificationModeArrayOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemModelDetailClassificationModeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItemModelDetailClassificationMode)(nil)).Elem()
}

func (o GetModelsModelCollectionItemModelDetailClassificationModeArrayOutput) ToGetModelsModelCollectionItemModelDetailClassificationModeArrayOutput() GetModelsModelCollectionItemModelDetailClassificationModeArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemModelDetailClassificationModeArrayOutput) ToGetModelsModelCollectionItemModelDetailClassificationModeArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemModelDetailClassificationModeArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemModelDetailClassificationModeArrayOutput) Index(i pulumi.IntInput) GetModelsModelCollectionItemModelDetailClassificationModeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelsModelCollectionItemModelDetailClassificationMode {
		return vs[0].([]GetModelsModelCollectionItemModelDetailClassificationMode)[vs[1].(int)]
	}).(GetModelsModelCollectionItemModelDetailClassificationModeOutput)
}

type GetModelsModelCollectionItemTestStrategy struct {
	// This information will define the test strategy different datasets for test and validation(optional) dataset.
	StrategyType string `pulumi:"strategyType"`
	// Possible data set type
	TestingDatasets []GetModelsModelCollectionItemTestStrategyTestingDataset `pulumi:"testingDatasets"`
	// Possible data set type
	ValidationDatasets []GetModelsModelCollectionItemTestStrategyValidationDataset `pulumi:"validationDatasets"`
}

// GetModelsModelCollectionItemTestStrategyInput is an input type that accepts GetModelsModelCollectionItemTestStrategyArgs and GetModelsModelCollectionItemTestStrategyOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemTestStrategyInput` via:
//
//	GetModelsModelCollectionItemTestStrategyArgs{...}
type GetModelsModelCollectionItemTestStrategyInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemTestStrategyOutput() GetModelsModelCollectionItemTestStrategyOutput
	ToGetModelsModelCollectionItemTestStrategyOutputWithContext(context.Context) GetModelsModelCollectionItemTestStrategyOutput
}

type GetModelsModelCollectionItemTestStrategyArgs struct {
	// This information will define the test strategy different datasets for test and validation(optional) dataset.
	StrategyType pulumi.StringInput `pulumi:"strategyType"`
	// Possible data set type
	TestingDatasets GetModelsModelCollectionItemTestStrategyTestingDatasetArrayInput `pulumi:"testingDatasets"`
	// Possible data set type
	ValidationDatasets GetModelsModelCollectionItemTestStrategyValidationDatasetArrayInput `pulumi:"validationDatasets"`
}

func (GetModelsModelCollectionItemTestStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItemTestStrategy)(nil)).Elem()
}

func (i GetModelsModelCollectionItemTestStrategyArgs) ToGetModelsModelCollectionItemTestStrategyOutput() GetModelsModelCollectionItemTestStrategyOutput {
	return i.ToGetModelsModelCollectionItemTestStrategyOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemTestStrategyArgs) ToGetModelsModelCollectionItemTestStrategyOutputWithContext(ctx context.Context) GetModelsModelCollectionItemTestStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemTestStrategyOutput)
}

// GetModelsModelCollectionItemTestStrategyArrayInput is an input type that accepts GetModelsModelCollectionItemTestStrategyArray and GetModelsModelCollectionItemTestStrategyArrayOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemTestStrategyArrayInput` via:
//
//	GetModelsModelCollectionItemTestStrategyArray{ GetModelsModelCollectionItemTestStrategyArgs{...} }
type GetModelsModelCollectionItemTestStrategyArrayInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemTestStrategyArrayOutput() GetModelsModelCollectionItemTestStrategyArrayOutput
	ToGetModelsModelCollectionItemTestStrategyArrayOutputWithContext(context.Context) GetModelsModelCollectionItemTestStrategyArrayOutput
}

type GetModelsModelCollectionItemTestStrategyArray []GetModelsModelCollectionItemTestStrategyInput

func (GetModelsModelCollectionItemTestStrategyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItemTestStrategy)(nil)).Elem()
}

func (i GetModelsModelCollectionItemTestStrategyArray) ToGetModelsModelCollectionItemTestStrategyArrayOutput() GetModelsModelCollectionItemTestStrategyArrayOutput {
	return i.ToGetModelsModelCollectionItemTestStrategyArrayOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemTestStrategyArray) ToGetModelsModelCollectionItemTestStrategyArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemTestStrategyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemTestStrategyArrayOutput)
}

type GetModelsModelCollectionItemTestStrategyOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemTestStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItemTestStrategy)(nil)).Elem()
}

func (o GetModelsModelCollectionItemTestStrategyOutput) ToGetModelsModelCollectionItemTestStrategyOutput() GetModelsModelCollectionItemTestStrategyOutput {
	return o
}

func (o GetModelsModelCollectionItemTestStrategyOutput) ToGetModelsModelCollectionItemTestStrategyOutputWithContext(ctx context.Context) GetModelsModelCollectionItemTestStrategyOutput {
	return o
}

// This information will define the test strategy different datasets for test and validation(optional) dataset.
func (o GetModelsModelCollectionItemTestStrategyOutput) StrategyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemTestStrategy) string { return v.StrategyType }).(pulumi.StringOutput)
}

// Possible data set type
func (o GetModelsModelCollectionItemTestStrategyOutput) TestingDatasets() GetModelsModelCollectionItemTestStrategyTestingDatasetArrayOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemTestStrategy) []GetModelsModelCollectionItemTestStrategyTestingDataset {
		return v.TestingDatasets
	}).(GetModelsModelCollectionItemTestStrategyTestingDatasetArrayOutput)
}

// Possible data set type
func (o GetModelsModelCollectionItemTestStrategyOutput) ValidationDatasets() GetModelsModelCollectionItemTestStrategyValidationDatasetArrayOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemTestStrategy) []GetModelsModelCollectionItemTestStrategyValidationDataset {
		return v.ValidationDatasets
	}).(GetModelsModelCollectionItemTestStrategyValidationDatasetArrayOutput)
}

type GetModelsModelCollectionItemTestStrategyArrayOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemTestStrategyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItemTestStrategy)(nil)).Elem()
}

func (o GetModelsModelCollectionItemTestStrategyArrayOutput) ToGetModelsModelCollectionItemTestStrategyArrayOutput() GetModelsModelCollectionItemTestStrategyArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemTestStrategyArrayOutput) ToGetModelsModelCollectionItemTestStrategyArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemTestStrategyArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemTestStrategyArrayOutput) Index(i pulumi.IntInput) GetModelsModelCollectionItemTestStrategyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelsModelCollectionItemTestStrategy {
		return vs[0].([]GetModelsModelCollectionItemTestStrategy)[vs[1].(int)]
	}).(GetModelsModelCollectionItemTestStrategyOutput)
}

type GetModelsModelCollectionItemTestStrategyTestingDataset struct {
	// Data Science Labelling Service OCID
	DatasetId string `pulumi:"datasetId"`
	// Possible data sets
	DatasetType string `pulumi:"datasetType"`
	// Possible object storage location types
	LocationDetails []GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetail `pulumi:"locationDetails"`
}

// GetModelsModelCollectionItemTestStrategyTestingDatasetInput is an input type that accepts GetModelsModelCollectionItemTestStrategyTestingDatasetArgs and GetModelsModelCollectionItemTestStrategyTestingDatasetOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemTestStrategyTestingDatasetInput` via:
//
//	GetModelsModelCollectionItemTestStrategyTestingDatasetArgs{...}
type GetModelsModelCollectionItemTestStrategyTestingDatasetInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemTestStrategyTestingDatasetOutput() GetModelsModelCollectionItemTestStrategyTestingDatasetOutput
	ToGetModelsModelCollectionItemTestStrategyTestingDatasetOutputWithContext(context.Context) GetModelsModelCollectionItemTestStrategyTestingDatasetOutput
}

type GetModelsModelCollectionItemTestStrategyTestingDatasetArgs struct {
	// Data Science Labelling Service OCID
	DatasetId pulumi.StringInput `pulumi:"datasetId"`
	// Possible data sets
	DatasetType pulumi.StringInput `pulumi:"datasetType"`
	// Possible object storage location types
	LocationDetails GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailArrayInput `pulumi:"locationDetails"`
}

func (GetModelsModelCollectionItemTestStrategyTestingDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItemTestStrategyTestingDataset)(nil)).Elem()
}

func (i GetModelsModelCollectionItemTestStrategyTestingDatasetArgs) ToGetModelsModelCollectionItemTestStrategyTestingDatasetOutput() GetModelsModelCollectionItemTestStrategyTestingDatasetOutput {
	return i.ToGetModelsModelCollectionItemTestStrategyTestingDatasetOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemTestStrategyTestingDatasetArgs) ToGetModelsModelCollectionItemTestStrategyTestingDatasetOutputWithContext(ctx context.Context) GetModelsModelCollectionItemTestStrategyTestingDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemTestStrategyTestingDatasetOutput)
}

// GetModelsModelCollectionItemTestStrategyTestingDatasetArrayInput is an input type that accepts GetModelsModelCollectionItemTestStrategyTestingDatasetArray and GetModelsModelCollectionItemTestStrategyTestingDatasetArrayOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemTestStrategyTestingDatasetArrayInput` via:
//
//	GetModelsModelCollectionItemTestStrategyTestingDatasetArray{ GetModelsModelCollectionItemTestStrategyTestingDatasetArgs{...} }
type GetModelsModelCollectionItemTestStrategyTestingDatasetArrayInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemTestStrategyTestingDatasetArrayOutput() GetModelsModelCollectionItemTestStrategyTestingDatasetArrayOutput
	ToGetModelsModelCollectionItemTestStrategyTestingDatasetArrayOutputWithContext(context.Context) GetModelsModelCollectionItemTestStrategyTestingDatasetArrayOutput
}

type GetModelsModelCollectionItemTestStrategyTestingDatasetArray []GetModelsModelCollectionItemTestStrategyTestingDatasetInput

func (GetModelsModelCollectionItemTestStrategyTestingDatasetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItemTestStrategyTestingDataset)(nil)).Elem()
}

func (i GetModelsModelCollectionItemTestStrategyTestingDatasetArray) ToGetModelsModelCollectionItemTestStrategyTestingDatasetArrayOutput() GetModelsModelCollectionItemTestStrategyTestingDatasetArrayOutput {
	return i.ToGetModelsModelCollectionItemTestStrategyTestingDatasetArrayOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemTestStrategyTestingDatasetArray) ToGetModelsModelCollectionItemTestStrategyTestingDatasetArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemTestStrategyTestingDatasetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemTestStrategyTestingDatasetArrayOutput)
}

type GetModelsModelCollectionItemTestStrategyTestingDatasetOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemTestStrategyTestingDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItemTestStrategyTestingDataset)(nil)).Elem()
}

func (o GetModelsModelCollectionItemTestStrategyTestingDatasetOutput) ToGetModelsModelCollectionItemTestStrategyTestingDatasetOutput() GetModelsModelCollectionItemTestStrategyTestingDatasetOutput {
	return o
}

func (o GetModelsModelCollectionItemTestStrategyTestingDatasetOutput) ToGetModelsModelCollectionItemTestStrategyTestingDatasetOutputWithContext(ctx context.Context) GetModelsModelCollectionItemTestStrategyTestingDatasetOutput {
	return o
}

// Data Science Labelling Service OCID
func (o GetModelsModelCollectionItemTestStrategyTestingDatasetOutput) DatasetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemTestStrategyTestingDataset) string { return v.DatasetId }).(pulumi.StringOutput)
}

// Possible data sets
func (o GetModelsModelCollectionItemTestStrategyTestingDatasetOutput) DatasetType() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemTestStrategyTestingDataset) string { return v.DatasetType }).(pulumi.StringOutput)
}

// Possible object storage location types
func (o GetModelsModelCollectionItemTestStrategyTestingDatasetOutput) LocationDetails() GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailArrayOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemTestStrategyTestingDataset) []GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetail {
		return v.LocationDetails
	}).(GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailArrayOutput)
}

type GetModelsModelCollectionItemTestStrategyTestingDatasetArrayOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemTestStrategyTestingDatasetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItemTestStrategyTestingDataset)(nil)).Elem()
}

func (o GetModelsModelCollectionItemTestStrategyTestingDatasetArrayOutput) ToGetModelsModelCollectionItemTestStrategyTestingDatasetArrayOutput() GetModelsModelCollectionItemTestStrategyTestingDatasetArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemTestStrategyTestingDatasetArrayOutput) ToGetModelsModelCollectionItemTestStrategyTestingDatasetArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemTestStrategyTestingDatasetArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemTestStrategyTestingDatasetArrayOutput) Index(i pulumi.IntInput) GetModelsModelCollectionItemTestStrategyTestingDatasetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelsModelCollectionItemTestStrategyTestingDataset {
		return vs[0].([]GetModelsModelCollectionItemTestStrategyTestingDataset)[vs[1].(int)]
	}).(GetModelsModelCollectionItemTestStrategyTestingDatasetOutput)
}

type GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetail struct {
	// Object storage bucket name
	Bucket string `pulumi:"bucket"`
	// Possible object storage location types
	LocationType string `pulumi:"locationType"`
	// Object storage namespace
	Namespace string `pulumi:"namespace"`
	// Array of files which need to be processed in the bucket
	ObjectNames []string `pulumi:"objectNames"`
}

// GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailInput is an input type that accepts GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailArgs and GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailInput` via:
//
//	GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailArgs{...}
type GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailOutput() GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailOutput
	ToGetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailOutputWithContext(context.Context) GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailOutput
}

type GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailArgs struct {
	// Object storage bucket name
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// Possible object storage location types
	LocationType pulumi.StringInput `pulumi:"locationType"`
	// Object storage namespace
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// Array of files which need to be processed in the bucket
	ObjectNames pulumi.StringArrayInput `pulumi:"objectNames"`
}

func (GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetail)(nil)).Elem()
}

func (i GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailArgs) ToGetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailOutput() GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailOutput {
	return i.ToGetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailArgs) ToGetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailOutputWithContext(ctx context.Context) GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailOutput)
}

// GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailArrayInput is an input type that accepts GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailArray and GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailArrayOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailArrayInput` via:
//
//	GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailArray{ GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailArgs{...} }
type GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailArrayInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailArrayOutput() GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailArrayOutput
	ToGetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailArrayOutputWithContext(context.Context) GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailArrayOutput
}

type GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailArray []GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailInput

func (GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetail)(nil)).Elem()
}

func (i GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailArray) ToGetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailArrayOutput() GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailArrayOutput {
	return i.ToGetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailArrayOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailArray) ToGetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailArrayOutput)
}

type GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetail)(nil)).Elem()
}

func (o GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailOutput) ToGetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailOutput() GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailOutput {
	return o
}

func (o GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailOutput) ToGetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailOutputWithContext(ctx context.Context) GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailOutput {
	return o
}

// Object storage bucket name
func (o GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetail) string { return v.Bucket }).(pulumi.StringOutput)
}

// Possible object storage location types
func (o GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailOutput) LocationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetail) string {
		return v.LocationType
	}).(pulumi.StringOutput)
}

// Object storage namespace
func (o GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetail) string {
		return v.Namespace
	}).(pulumi.StringOutput)
}

// Array of files which need to be processed in the bucket
func (o GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailOutput) ObjectNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetail) []string {
		return v.ObjectNames
	}).(pulumi.StringArrayOutput)
}

type GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailArrayOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetail)(nil)).Elem()
}

func (o GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailArrayOutput) ToGetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailArrayOutput() GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailArrayOutput) ToGetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailArrayOutput) Index(i pulumi.IntInput) GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetail {
		return vs[0].([]GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetail)[vs[1].(int)]
	}).(GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailOutput)
}

type GetModelsModelCollectionItemTestStrategyValidationDataset struct {
	// Data Science Labelling Service OCID
	DatasetId string `pulumi:"datasetId"`
	// Possible data sets
	DatasetType string `pulumi:"datasetType"`
	// Possible object storage location types
	LocationDetails []GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetail `pulumi:"locationDetails"`
}

// GetModelsModelCollectionItemTestStrategyValidationDatasetInput is an input type that accepts GetModelsModelCollectionItemTestStrategyValidationDatasetArgs and GetModelsModelCollectionItemTestStrategyValidationDatasetOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemTestStrategyValidationDatasetInput` via:
//
//	GetModelsModelCollectionItemTestStrategyValidationDatasetArgs{...}
type GetModelsModelCollectionItemTestStrategyValidationDatasetInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemTestStrategyValidationDatasetOutput() GetModelsModelCollectionItemTestStrategyValidationDatasetOutput
	ToGetModelsModelCollectionItemTestStrategyValidationDatasetOutputWithContext(context.Context) GetModelsModelCollectionItemTestStrategyValidationDatasetOutput
}

type GetModelsModelCollectionItemTestStrategyValidationDatasetArgs struct {
	// Data Science Labelling Service OCID
	DatasetId pulumi.StringInput `pulumi:"datasetId"`
	// Possible data sets
	DatasetType pulumi.StringInput `pulumi:"datasetType"`
	// Possible object storage location types
	LocationDetails GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailArrayInput `pulumi:"locationDetails"`
}

func (GetModelsModelCollectionItemTestStrategyValidationDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItemTestStrategyValidationDataset)(nil)).Elem()
}

func (i GetModelsModelCollectionItemTestStrategyValidationDatasetArgs) ToGetModelsModelCollectionItemTestStrategyValidationDatasetOutput() GetModelsModelCollectionItemTestStrategyValidationDatasetOutput {
	return i.ToGetModelsModelCollectionItemTestStrategyValidationDatasetOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemTestStrategyValidationDatasetArgs) ToGetModelsModelCollectionItemTestStrategyValidationDatasetOutputWithContext(ctx context.Context) GetModelsModelCollectionItemTestStrategyValidationDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemTestStrategyValidationDatasetOutput)
}

// GetModelsModelCollectionItemTestStrategyValidationDatasetArrayInput is an input type that accepts GetModelsModelCollectionItemTestStrategyValidationDatasetArray and GetModelsModelCollectionItemTestStrategyValidationDatasetArrayOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemTestStrategyValidationDatasetArrayInput` via:
//
//	GetModelsModelCollectionItemTestStrategyValidationDatasetArray{ GetModelsModelCollectionItemTestStrategyValidationDatasetArgs{...} }
type GetModelsModelCollectionItemTestStrategyValidationDatasetArrayInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemTestStrategyValidationDatasetArrayOutput() GetModelsModelCollectionItemTestStrategyValidationDatasetArrayOutput
	ToGetModelsModelCollectionItemTestStrategyValidationDatasetArrayOutputWithContext(context.Context) GetModelsModelCollectionItemTestStrategyValidationDatasetArrayOutput
}

type GetModelsModelCollectionItemTestStrategyValidationDatasetArray []GetModelsModelCollectionItemTestStrategyValidationDatasetInput

func (GetModelsModelCollectionItemTestStrategyValidationDatasetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItemTestStrategyValidationDataset)(nil)).Elem()
}

func (i GetModelsModelCollectionItemTestStrategyValidationDatasetArray) ToGetModelsModelCollectionItemTestStrategyValidationDatasetArrayOutput() GetModelsModelCollectionItemTestStrategyValidationDatasetArrayOutput {
	return i.ToGetModelsModelCollectionItemTestStrategyValidationDatasetArrayOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemTestStrategyValidationDatasetArray) ToGetModelsModelCollectionItemTestStrategyValidationDatasetArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemTestStrategyValidationDatasetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemTestStrategyValidationDatasetArrayOutput)
}

type GetModelsModelCollectionItemTestStrategyValidationDatasetOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemTestStrategyValidationDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItemTestStrategyValidationDataset)(nil)).Elem()
}

func (o GetModelsModelCollectionItemTestStrategyValidationDatasetOutput) ToGetModelsModelCollectionItemTestStrategyValidationDatasetOutput() GetModelsModelCollectionItemTestStrategyValidationDatasetOutput {
	return o
}

func (o GetModelsModelCollectionItemTestStrategyValidationDatasetOutput) ToGetModelsModelCollectionItemTestStrategyValidationDatasetOutputWithContext(ctx context.Context) GetModelsModelCollectionItemTestStrategyValidationDatasetOutput {
	return o
}

// Data Science Labelling Service OCID
func (o GetModelsModelCollectionItemTestStrategyValidationDatasetOutput) DatasetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemTestStrategyValidationDataset) string { return v.DatasetId }).(pulumi.StringOutput)
}

// Possible data sets
func (o GetModelsModelCollectionItemTestStrategyValidationDatasetOutput) DatasetType() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemTestStrategyValidationDataset) string { return v.DatasetType }).(pulumi.StringOutput)
}

// Possible object storage location types
func (o GetModelsModelCollectionItemTestStrategyValidationDatasetOutput) LocationDetails() GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailArrayOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemTestStrategyValidationDataset) []GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetail {
		return v.LocationDetails
	}).(GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailArrayOutput)
}

type GetModelsModelCollectionItemTestStrategyValidationDatasetArrayOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemTestStrategyValidationDatasetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItemTestStrategyValidationDataset)(nil)).Elem()
}

func (o GetModelsModelCollectionItemTestStrategyValidationDatasetArrayOutput) ToGetModelsModelCollectionItemTestStrategyValidationDatasetArrayOutput() GetModelsModelCollectionItemTestStrategyValidationDatasetArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemTestStrategyValidationDatasetArrayOutput) ToGetModelsModelCollectionItemTestStrategyValidationDatasetArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemTestStrategyValidationDatasetArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemTestStrategyValidationDatasetArrayOutput) Index(i pulumi.IntInput) GetModelsModelCollectionItemTestStrategyValidationDatasetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelsModelCollectionItemTestStrategyValidationDataset {
		return vs[0].([]GetModelsModelCollectionItemTestStrategyValidationDataset)[vs[1].(int)]
	}).(GetModelsModelCollectionItemTestStrategyValidationDatasetOutput)
}

type GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetail struct {
	// Object storage bucket name
	Bucket string `pulumi:"bucket"`
	// Possible object storage location types
	LocationType string `pulumi:"locationType"`
	// Object storage namespace
	Namespace string `pulumi:"namespace"`
	// Array of files which need to be processed in the bucket
	ObjectNames []string `pulumi:"objectNames"`
}

// GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailInput is an input type that accepts GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailArgs and GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailInput` via:
//
//	GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailArgs{...}
type GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailOutput() GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailOutput
	ToGetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailOutputWithContext(context.Context) GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailOutput
}

type GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailArgs struct {
	// Object storage bucket name
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// Possible object storage location types
	LocationType pulumi.StringInput `pulumi:"locationType"`
	// Object storage namespace
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// Array of files which need to be processed in the bucket
	ObjectNames pulumi.StringArrayInput `pulumi:"objectNames"`
}

func (GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetail)(nil)).Elem()
}

func (i GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailArgs) ToGetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailOutput() GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailOutput {
	return i.ToGetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailArgs) ToGetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailOutputWithContext(ctx context.Context) GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailOutput)
}

// GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailArrayInput is an input type that accepts GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailArray and GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailArrayOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailArrayInput` via:
//
//	GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailArray{ GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailArgs{...} }
type GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailArrayInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailArrayOutput() GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailArrayOutput
	ToGetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailArrayOutputWithContext(context.Context) GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailArrayOutput
}

type GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailArray []GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailInput

func (GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetail)(nil)).Elem()
}

func (i GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailArray) ToGetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailArrayOutput() GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailArrayOutput {
	return i.ToGetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailArrayOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailArray) ToGetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailArrayOutput)
}

type GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetail)(nil)).Elem()
}

func (o GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailOutput) ToGetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailOutput() GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailOutput {
	return o
}

func (o GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailOutput) ToGetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailOutputWithContext(ctx context.Context) GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailOutput {
	return o
}

// Object storage bucket name
func (o GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetail) string {
		return v.Bucket
	}).(pulumi.StringOutput)
}

// Possible object storage location types
func (o GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailOutput) LocationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetail) string {
		return v.LocationType
	}).(pulumi.StringOutput)
}

// Object storage namespace
func (o GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetail) string {
		return v.Namespace
	}).(pulumi.StringOutput)
}

// Array of files which need to be processed in the bucket
func (o GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailOutput) ObjectNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetail) []string {
		return v.ObjectNames
	}).(pulumi.StringArrayOutput)
}

type GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailArrayOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetail)(nil)).Elem()
}

func (o GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailArrayOutput) ToGetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailArrayOutput() GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailArrayOutput) ToGetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailArrayOutput) Index(i pulumi.IntInput) GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetail {
		return vs[0].([]GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetail)[vs[1].(int)]
	}).(GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailOutput)
}

type GetModelsModelCollectionItemTrainingDataset struct {
	// Data Science Labelling Service OCID
	DatasetId string `pulumi:"datasetId"`
	// Possible data sets
	DatasetType string `pulumi:"datasetType"`
	// Possible object storage location types
	LocationDetails []GetModelsModelCollectionItemTrainingDatasetLocationDetail `pulumi:"locationDetails"`
}

// GetModelsModelCollectionItemTrainingDatasetInput is an input type that accepts GetModelsModelCollectionItemTrainingDatasetArgs and GetModelsModelCollectionItemTrainingDatasetOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemTrainingDatasetInput` via:
//
//	GetModelsModelCollectionItemTrainingDatasetArgs{...}
type GetModelsModelCollectionItemTrainingDatasetInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemTrainingDatasetOutput() GetModelsModelCollectionItemTrainingDatasetOutput
	ToGetModelsModelCollectionItemTrainingDatasetOutputWithContext(context.Context) GetModelsModelCollectionItemTrainingDatasetOutput
}

type GetModelsModelCollectionItemTrainingDatasetArgs struct {
	// Data Science Labelling Service OCID
	DatasetId pulumi.StringInput `pulumi:"datasetId"`
	// Possible data sets
	DatasetType pulumi.StringInput `pulumi:"datasetType"`
	// Possible object storage location types
	LocationDetails GetModelsModelCollectionItemTrainingDatasetLocationDetailArrayInput `pulumi:"locationDetails"`
}

func (GetModelsModelCollectionItemTrainingDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItemTrainingDataset)(nil)).Elem()
}

func (i GetModelsModelCollectionItemTrainingDatasetArgs) ToGetModelsModelCollectionItemTrainingDatasetOutput() GetModelsModelCollectionItemTrainingDatasetOutput {
	return i.ToGetModelsModelCollectionItemTrainingDatasetOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemTrainingDatasetArgs) ToGetModelsModelCollectionItemTrainingDatasetOutputWithContext(ctx context.Context) GetModelsModelCollectionItemTrainingDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemTrainingDatasetOutput)
}

// GetModelsModelCollectionItemTrainingDatasetArrayInput is an input type that accepts GetModelsModelCollectionItemTrainingDatasetArray and GetModelsModelCollectionItemTrainingDatasetArrayOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemTrainingDatasetArrayInput` via:
//
//	GetModelsModelCollectionItemTrainingDatasetArray{ GetModelsModelCollectionItemTrainingDatasetArgs{...} }
type GetModelsModelCollectionItemTrainingDatasetArrayInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemTrainingDatasetArrayOutput() GetModelsModelCollectionItemTrainingDatasetArrayOutput
	ToGetModelsModelCollectionItemTrainingDatasetArrayOutputWithContext(context.Context) GetModelsModelCollectionItemTrainingDatasetArrayOutput
}

type GetModelsModelCollectionItemTrainingDatasetArray []GetModelsModelCollectionItemTrainingDatasetInput

func (GetModelsModelCollectionItemTrainingDatasetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItemTrainingDataset)(nil)).Elem()
}

func (i GetModelsModelCollectionItemTrainingDatasetArray) ToGetModelsModelCollectionItemTrainingDatasetArrayOutput() GetModelsModelCollectionItemTrainingDatasetArrayOutput {
	return i.ToGetModelsModelCollectionItemTrainingDatasetArrayOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemTrainingDatasetArray) ToGetModelsModelCollectionItemTrainingDatasetArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemTrainingDatasetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemTrainingDatasetArrayOutput)
}

type GetModelsModelCollectionItemTrainingDatasetOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemTrainingDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItemTrainingDataset)(nil)).Elem()
}

func (o GetModelsModelCollectionItemTrainingDatasetOutput) ToGetModelsModelCollectionItemTrainingDatasetOutput() GetModelsModelCollectionItemTrainingDatasetOutput {
	return o
}

func (o GetModelsModelCollectionItemTrainingDatasetOutput) ToGetModelsModelCollectionItemTrainingDatasetOutputWithContext(ctx context.Context) GetModelsModelCollectionItemTrainingDatasetOutput {
	return o
}

// Data Science Labelling Service OCID
func (o GetModelsModelCollectionItemTrainingDatasetOutput) DatasetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemTrainingDataset) string { return v.DatasetId }).(pulumi.StringOutput)
}

// Possible data sets
func (o GetModelsModelCollectionItemTrainingDatasetOutput) DatasetType() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemTrainingDataset) string { return v.DatasetType }).(pulumi.StringOutput)
}

// Possible object storage location types
func (o GetModelsModelCollectionItemTrainingDatasetOutput) LocationDetails() GetModelsModelCollectionItemTrainingDatasetLocationDetailArrayOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemTrainingDataset) []GetModelsModelCollectionItemTrainingDatasetLocationDetail {
		return v.LocationDetails
	}).(GetModelsModelCollectionItemTrainingDatasetLocationDetailArrayOutput)
}

type GetModelsModelCollectionItemTrainingDatasetArrayOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemTrainingDatasetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItemTrainingDataset)(nil)).Elem()
}

func (o GetModelsModelCollectionItemTrainingDatasetArrayOutput) ToGetModelsModelCollectionItemTrainingDatasetArrayOutput() GetModelsModelCollectionItemTrainingDatasetArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemTrainingDatasetArrayOutput) ToGetModelsModelCollectionItemTrainingDatasetArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemTrainingDatasetArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemTrainingDatasetArrayOutput) Index(i pulumi.IntInput) GetModelsModelCollectionItemTrainingDatasetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelsModelCollectionItemTrainingDataset {
		return vs[0].([]GetModelsModelCollectionItemTrainingDataset)[vs[1].(int)]
	}).(GetModelsModelCollectionItemTrainingDatasetOutput)
}

type GetModelsModelCollectionItemTrainingDatasetLocationDetail struct {
	// Object storage bucket name
	Bucket string `pulumi:"bucket"`
	// Possible object storage location types
	LocationType string `pulumi:"locationType"`
	// Object storage namespace
	Namespace string `pulumi:"namespace"`
	// Array of files which need to be processed in the bucket
	ObjectNames []string `pulumi:"objectNames"`
}

// GetModelsModelCollectionItemTrainingDatasetLocationDetailInput is an input type that accepts GetModelsModelCollectionItemTrainingDatasetLocationDetailArgs and GetModelsModelCollectionItemTrainingDatasetLocationDetailOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemTrainingDatasetLocationDetailInput` via:
//
//	GetModelsModelCollectionItemTrainingDatasetLocationDetailArgs{...}
type GetModelsModelCollectionItemTrainingDatasetLocationDetailInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemTrainingDatasetLocationDetailOutput() GetModelsModelCollectionItemTrainingDatasetLocationDetailOutput
	ToGetModelsModelCollectionItemTrainingDatasetLocationDetailOutputWithContext(context.Context) GetModelsModelCollectionItemTrainingDatasetLocationDetailOutput
}

type GetModelsModelCollectionItemTrainingDatasetLocationDetailArgs struct {
	// Object storage bucket name
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// Possible object storage location types
	LocationType pulumi.StringInput `pulumi:"locationType"`
	// Object storage namespace
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// Array of files which need to be processed in the bucket
	ObjectNames pulumi.StringArrayInput `pulumi:"objectNames"`
}

func (GetModelsModelCollectionItemTrainingDatasetLocationDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItemTrainingDatasetLocationDetail)(nil)).Elem()
}

func (i GetModelsModelCollectionItemTrainingDatasetLocationDetailArgs) ToGetModelsModelCollectionItemTrainingDatasetLocationDetailOutput() GetModelsModelCollectionItemTrainingDatasetLocationDetailOutput {
	return i.ToGetModelsModelCollectionItemTrainingDatasetLocationDetailOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemTrainingDatasetLocationDetailArgs) ToGetModelsModelCollectionItemTrainingDatasetLocationDetailOutputWithContext(ctx context.Context) GetModelsModelCollectionItemTrainingDatasetLocationDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemTrainingDatasetLocationDetailOutput)
}

// GetModelsModelCollectionItemTrainingDatasetLocationDetailArrayInput is an input type that accepts GetModelsModelCollectionItemTrainingDatasetLocationDetailArray and GetModelsModelCollectionItemTrainingDatasetLocationDetailArrayOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemTrainingDatasetLocationDetailArrayInput` via:
//
//	GetModelsModelCollectionItemTrainingDatasetLocationDetailArray{ GetModelsModelCollectionItemTrainingDatasetLocationDetailArgs{...} }
type GetModelsModelCollectionItemTrainingDatasetLocationDetailArrayInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemTrainingDatasetLocationDetailArrayOutput() GetModelsModelCollectionItemTrainingDatasetLocationDetailArrayOutput
	ToGetModelsModelCollectionItemTrainingDatasetLocationDetailArrayOutputWithContext(context.Context) GetModelsModelCollectionItemTrainingDatasetLocationDetailArrayOutput
}

type GetModelsModelCollectionItemTrainingDatasetLocationDetailArray []GetModelsModelCollectionItemTrainingDatasetLocationDetailInput

func (GetModelsModelCollectionItemTrainingDatasetLocationDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItemTrainingDatasetLocationDetail)(nil)).Elem()
}

func (i GetModelsModelCollectionItemTrainingDatasetLocationDetailArray) ToGetModelsModelCollectionItemTrainingDatasetLocationDetailArrayOutput() GetModelsModelCollectionItemTrainingDatasetLocationDetailArrayOutput {
	return i.ToGetModelsModelCollectionItemTrainingDatasetLocationDetailArrayOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemTrainingDatasetLocationDetailArray) ToGetModelsModelCollectionItemTrainingDatasetLocationDetailArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemTrainingDatasetLocationDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemTrainingDatasetLocationDetailArrayOutput)
}

type GetModelsModelCollectionItemTrainingDatasetLocationDetailOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemTrainingDatasetLocationDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItemTrainingDatasetLocationDetail)(nil)).Elem()
}

func (o GetModelsModelCollectionItemTrainingDatasetLocationDetailOutput) ToGetModelsModelCollectionItemTrainingDatasetLocationDetailOutput() GetModelsModelCollectionItemTrainingDatasetLocationDetailOutput {
	return o
}

func (o GetModelsModelCollectionItemTrainingDatasetLocationDetailOutput) ToGetModelsModelCollectionItemTrainingDatasetLocationDetailOutputWithContext(ctx context.Context) GetModelsModelCollectionItemTrainingDatasetLocationDetailOutput {
	return o
}

// Object storage bucket name
func (o GetModelsModelCollectionItemTrainingDatasetLocationDetailOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemTrainingDatasetLocationDetail) string { return v.Bucket }).(pulumi.StringOutput)
}

// Possible object storage location types
func (o GetModelsModelCollectionItemTrainingDatasetLocationDetailOutput) LocationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemTrainingDatasetLocationDetail) string { return v.LocationType }).(pulumi.StringOutput)
}

// Object storage namespace
func (o GetModelsModelCollectionItemTrainingDatasetLocationDetailOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemTrainingDatasetLocationDetail) string { return v.Namespace }).(pulumi.StringOutput)
}

// Array of files which need to be processed in the bucket
func (o GetModelsModelCollectionItemTrainingDatasetLocationDetailOutput) ObjectNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemTrainingDatasetLocationDetail) []string { return v.ObjectNames }).(pulumi.StringArrayOutput)
}

type GetModelsModelCollectionItemTrainingDatasetLocationDetailArrayOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemTrainingDatasetLocationDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItemTrainingDatasetLocationDetail)(nil)).Elem()
}

func (o GetModelsModelCollectionItemTrainingDatasetLocationDetailArrayOutput) ToGetModelsModelCollectionItemTrainingDatasetLocationDetailArrayOutput() GetModelsModelCollectionItemTrainingDatasetLocationDetailArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemTrainingDatasetLocationDetailArrayOutput) ToGetModelsModelCollectionItemTrainingDatasetLocationDetailArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemTrainingDatasetLocationDetailArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemTrainingDatasetLocationDetailArrayOutput) Index(i pulumi.IntInput) GetModelsModelCollectionItemTrainingDatasetLocationDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelsModelCollectionItemTrainingDatasetLocationDetail {
		return vs[0].([]GetModelsModelCollectionItemTrainingDatasetLocationDetail)[vs[1].(int)]
	}).(GetModelsModelCollectionItemTrainingDatasetLocationDetailOutput)
}

type GetProjectsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetProjectsFilterInput is an input type that accepts GetProjectsFilterArgs and GetProjectsFilterOutput values.
// You can construct a concrete instance of `GetProjectsFilterInput` via:
//
//	GetProjectsFilterArgs{...}
type GetProjectsFilterInput interface {
	pulumi.Input

	ToGetProjectsFilterOutput() GetProjectsFilterOutput
	ToGetProjectsFilterOutputWithContext(context.Context) GetProjectsFilterOutput
}

type GetProjectsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetProjectsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsFilter)(nil)).Elem()
}

func (i GetProjectsFilterArgs) ToGetProjectsFilterOutput() GetProjectsFilterOutput {
	return i.ToGetProjectsFilterOutputWithContext(context.Background())
}

func (i GetProjectsFilterArgs) ToGetProjectsFilterOutputWithContext(ctx context.Context) GetProjectsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsFilterOutput)
}

// GetProjectsFilterArrayInput is an input type that accepts GetProjectsFilterArray and GetProjectsFilterArrayOutput values.
// You can construct a concrete instance of `GetProjectsFilterArrayInput` via:
//
//	GetProjectsFilterArray{ GetProjectsFilterArgs{...} }
type GetProjectsFilterArrayInput interface {
	pulumi.Input

	ToGetProjectsFilterArrayOutput() GetProjectsFilterArrayOutput
	ToGetProjectsFilterArrayOutputWithContext(context.Context) GetProjectsFilterArrayOutput
}

type GetProjectsFilterArray []GetProjectsFilterInput

func (GetProjectsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsFilter)(nil)).Elem()
}

func (i GetProjectsFilterArray) ToGetProjectsFilterArrayOutput() GetProjectsFilterArrayOutput {
	return i.ToGetProjectsFilterArrayOutputWithContext(context.Background())
}

func (i GetProjectsFilterArray) ToGetProjectsFilterArrayOutputWithContext(ctx context.Context) GetProjectsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsFilterArrayOutput)
}

type GetProjectsFilterOutput struct{ *pulumi.OutputState }

func (GetProjectsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsFilter)(nil)).Elem()
}

func (o GetProjectsFilterOutput) ToGetProjectsFilterOutput() GetProjectsFilterOutput {
	return o
}

func (o GetProjectsFilterOutput) ToGetProjectsFilterOutputWithContext(ctx context.Context) GetProjectsFilterOutput {
	return o
}

func (o GetProjectsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetProjectsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetProjectsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetProjectsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProjectsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetProjectsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetProjectsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsFilter)(nil)).Elem()
}

func (o GetProjectsFilterArrayOutput) ToGetProjectsFilterArrayOutput() GetProjectsFilterArrayOutput {
	return o
}

func (o GetProjectsFilterArrayOutput) ToGetProjectsFilterArrayOutputWithContext(ctx context.Context) GetProjectsFilterArrayOutput {
	return o
}

func (o GetProjectsFilterArrayOutput) Index(i pulumi.IntInput) GetProjectsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectsFilter {
		return vs[0].([]GetProjectsFilter)[vs[1].(int)]
	}).(GetProjectsFilterOutput)
}

type GetProjectsProjectCollection struct {
	Items []GetProjectsProjectCollectionItem `pulumi:"items"`
}

// GetProjectsProjectCollectionInput is an input type that accepts GetProjectsProjectCollectionArgs and GetProjectsProjectCollectionOutput values.
// You can construct a concrete instance of `GetProjectsProjectCollectionInput` via:
//
//	GetProjectsProjectCollectionArgs{...}
type GetProjectsProjectCollectionInput interface {
	pulumi.Input

	ToGetProjectsProjectCollectionOutput() GetProjectsProjectCollectionOutput
	ToGetProjectsProjectCollectionOutputWithContext(context.Context) GetProjectsProjectCollectionOutput
}

type GetProjectsProjectCollectionArgs struct {
	Items GetProjectsProjectCollectionItemArrayInput `pulumi:"items"`
}

func (GetProjectsProjectCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectCollection)(nil)).Elem()
}

func (i GetProjectsProjectCollectionArgs) ToGetProjectsProjectCollectionOutput() GetProjectsProjectCollectionOutput {
	return i.ToGetProjectsProjectCollectionOutputWithContext(context.Background())
}

func (i GetProjectsProjectCollectionArgs) ToGetProjectsProjectCollectionOutputWithContext(ctx context.Context) GetProjectsProjectCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectCollectionOutput)
}

// GetProjectsProjectCollectionArrayInput is an input type that accepts GetProjectsProjectCollectionArray and GetProjectsProjectCollectionArrayOutput values.
// You can construct a concrete instance of `GetProjectsProjectCollectionArrayInput` via:
//
//	GetProjectsProjectCollectionArray{ GetProjectsProjectCollectionArgs{...} }
type GetProjectsProjectCollectionArrayInput interface {
	pulumi.Input

	ToGetProjectsProjectCollectionArrayOutput() GetProjectsProjectCollectionArrayOutput
	ToGetProjectsProjectCollectionArrayOutputWithContext(context.Context) GetProjectsProjectCollectionArrayOutput
}

type GetProjectsProjectCollectionArray []GetProjectsProjectCollectionInput

func (GetProjectsProjectCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsProjectCollection)(nil)).Elem()
}

func (i GetProjectsProjectCollectionArray) ToGetProjectsProjectCollectionArrayOutput() GetProjectsProjectCollectionArrayOutput {
	return i.ToGetProjectsProjectCollectionArrayOutputWithContext(context.Background())
}

func (i GetProjectsProjectCollectionArray) ToGetProjectsProjectCollectionArrayOutputWithContext(ctx context.Context) GetProjectsProjectCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectCollectionArrayOutput)
}

type GetProjectsProjectCollectionOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectCollection)(nil)).Elem()
}

func (o GetProjectsProjectCollectionOutput) ToGetProjectsProjectCollectionOutput() GetProjectsProjectCollectionOutput {
	return o
}

func (o GetProjectsProjectCollectionOutput) ToGetProjectsProjectCollectionOutputWithContext(ctx context.Context) GetProjectsProjectCollectionOutput {
	return o
}

func (o GetProjectsProjectCollectionOutput) Items() GetProjectsProjectCollectionItemArrayOutput {
	return o.ApplyT(func(v GetProjectsProjectCollection) []GetProjectsProjectCollectionItem { return v.Items }).(GetProjectsProjectCollectionItemArrayOutput)
}

type GetProjectsProjectCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsProjectCollection)(nil)).Elem()
}

func (o GetProjectsProjectCollectionArrayOutput) ToGetProjectsProjectCollectionArrayOutput() GetProjectsProjectCollectionArrayOutput {
	return o
}

func (o GetProjectsProjectCollectionArrayOutput) ToGetProjectsProjectCollectionArrayOutputWithContext(ctx context.Context) GetProjectsProjectCollectionArrayOutput {
	return o
}

func (o GetProjectsProjectCollectionArrayOutput) Index(i pulumi.IntInput) GetProjectsProjectCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectsProjectCollection {
		return vs[0].([]GetProjectsProjectCollection)[vs[1].(int)]
	}).(GetProjectsProjectCollectionOutput)
}

type GetProjectsProjectCollectionItem struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// A short description of a project.
	Description string `pulumi:"description"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Unique identifier OCID of the project
	Id string `pulumi:"id"`
	// A message describing the current state in more detail.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// <b>Filter</b> results by the specified lifecycle state. Must be a valid state for the resource type.
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The date and time the resource was created in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the resource was updated in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetProjectsProjectCollectionItemInput is an input type that accepts GetProjectsProjectCollectionItemArgs and GetProjectsProjectCollectionItemOutput values.
// You can construct a concrete instance of `GetProjectsProjectCollectionItemInput` via:
//
//	GetProjectsProjectCollectionItemArgs{...}
type GetProjectsProjectCollectionItemInput interface {
	pulumi.Input

	ToGetProjectsProjectCollectionItemOutput() GetProjectsProjectCollectionItemOutput
	ToGetProjectsProjectCollectionItemOutputWithContext(context.Context) GetProjectsProjectCollectionItemOutput
}

type GetProjectsProjectCollectionItemArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// A short description of a project.
	Description pulumi.StringInput `pulumi:"description"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// Unique identifier OCID of the project
	Id pulumi.StringInput `pulumi:"id"`
	// A message describing the current state in more detail.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// <b>Filter</b> results by the specified lifecycle state. Must be a valid state for the resource type.
	State pulumi.StringInput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput `pulumi:"systemTags"`
	// The date and time the resource was created in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the resource was updated in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetProjectsProjectCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectCollectionItem)(nil)).Elem()
}

func (i GetProjectsProjectCollectionItemArgs) ToGetProjectsProjectCollectionItemOutput() GetProjectsProjectCollectionItemOutput {
	return i.ToGetProjectsProjectCollectionItemOutputWithContext(context.Background())
}

func (i GetProjectsProjectCollectionItemArgs) ToGetProjectsProjectCollectionItemOutputWithContext(ctx context.Context) GetProjectsProjectCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectCollectionItemOutput)
}

// GetProjectsProjectCollectionItemArrayInput is an input type that accepts GetProjectsProjectCollectionItemArray and GetProjectsProjectCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetProjectsProjectCollectionItemArrayInput` via:
//
//	GetProjectsProjectCollectionItemArray{ GetProjectsProjectCollectionItemArgs{...} }
type GetProjectsProjectCollectionItemArrayInput interface {
	pulumi.Input

	ToGetProjectsProjectCollectionItemArrayOutput() GetProjectsProjectCollectionItemArrayOutput
	ToGetProjectsProjectCollectionItemArrayOutputWithContext(context.Context) GetProjectsProjectCollectionItemArrayOutput
}

type GetProjectsProjectCollectionItemArray []GetProjectsProjectCollectionItemInput

func (GetProjectsProjectCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsProjectCollectionItem)(nil)).Elem()
}

func (i GetProjectsProjectCollectionItemArray) ToGetProjectsProjectCollectionItemArrayOutput() GetProjectsProjectCollectionItemArrayOutput {
	return i.ToGetProjectsProjectCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetProjectsProjectCollectionItemArray) ToGetProjectsProjectCollectionItemArrayOutputWithContext(ctx context.Context) GetProjectsProjectCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectCollectionItemArrayOutput)
}

type GetProjectsProjectCollectionItemOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectCollectionItem)(nil)).Elem()
}

func (o GetProjectsProjectCollectionItemOutput) ToGetProjectsProjectCollectionItemOutput() GetProjectsProjectCollectionItemOutput {
	return o
}

func (o GetProjectsProjectCollectionItemOutput) ToGetProjectsProjectCollectionItemOutputWithContext(ctx context.Context) GetProjectsProjectCollectionItemOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetProjectsProjectCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetProjectsProjectCollectionItemOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetProjectsProjectCollectionItem) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// A short description of a project.
func (o GetProjectsProjectCollectionItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectCollectionItem) string { return v.Description }).(pulumi.StringOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetProjectsProjectCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetProjectsProjectCollectionItemOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetProjectsProjectCollectionItem) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// Unique identifier OCID of the project
func (o GetProjectsProjectCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// A message describing the current state in more detail.
func (o GetProjectsProjectCollectionItemOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectCollectionItem) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// <b>Filter</b> results by the specified lifecycle state. Must be a valid state for the resource type.
func (o GetProjectsProjectCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetProjectsProjectCollectionItemOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetProjectsProjectCollectionItem) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The date and time the resource was created in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
func (o GetProjectsProjectCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the resource was updated in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
func (o GetProjectsProjectCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetProjectsProjectCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsProjectCollectionItem)(nil)).Elem()
}

func (o GetProjectsProjectCollectionItemArrayOutput) ToGetProjectsProjectCollectionItemArrayOutput() GetProjectsProjectCollectionItemArrayOutput {
	return o
}

func (o GetProjectsProjectCollectionItemArrayOutput) ToGetProjectsProjectCollectionItemArrayOutputWithContext(ctx context.Context) GetProjectsProjectCollectionItemArrayOutput {
	return o
}

func (o GetProjectsProjectCollectionItemArrayOutput) Index(i pulumi.IntInput) GetProjectsProjectCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectsProjectCollectionItem {
		return vs[0].([]GetProjectsProjectCollectionItem)[vs[1].(int)]
	}).(GetProjectsProjectCollectionItemOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ModelEvaluationResultInput)(nil)).Elem(), ModelEvaluationResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelEvaluationResultArrayInput)(nil)).Elem(), ModelEvaluationResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelEvaluationResultClassMetricInput)(nil)).Elem(), ModelEvaluationResultClassMetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelEvaluationResultClassMetricArrayInput)(nil)).Elem(), ModelEvaluationResultClassMetricArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelEvaluationResultEntityMetricInput)(nil)).Elem(), ModelEvaluationResultEntityMetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelEvaluationResultEntityMetricArrayInput)(nil)).Elem(), ModelEvaluationResultEntityMetricArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelEvaluationResultMetricInput)(nil)).Elem(), ModelEvaluationResultMetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelEvaluationResultMetricArrayInput)(nil)).Elem(), ModelEvaluationResultMetricArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelModelDetailsInput)(nil)).Elem(), ModelModelDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelModelDetailsPtrInput)(nil)).Elem(), ModelModelDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelModelDetailsClassificationModeInput)(nil)).Elem(), ModelModelDetailsClassificationModeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelModelDetailsClassificationModePtrInput)(nil)).Elem(), ModelModelDetailsClassificationModeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelTestStrategyInput)(nil)).Elem(), ModelTestStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelTestStrategyPtrInput)(nil)).Elem(), ModelTestStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelTestStrategyTestingDatasetInput)(nil)).Elem(), ModelTestStrategyTestingDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelTestStrategyTestingDatasetPtrInput)(nil)).Elem(), ModelTestStrategyTestingDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelTestStrategyTestingDatasetLocationDetailsInput)(nil)).Elem(), ModelTestStrategyTestingDatasetLocationDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelTestStrategyTestingDatasetLocationDetailsPtrInput)(nil)).Elem(), ModelTestStrategyTestingDatasetLocationDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelTestStrategyValidationDatasetInput)(nil)).Elem(), ModelTestStrategyValidationDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelTestStrategyValidationDatasetPtrInput)(nil)).Elem(), ModelTestStrategyValidationDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelTestStrategyValidationDatasetLocationDetailsInput)(nil)).Elem(), ModelTestStrategyValidationDatasetLocationDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelTestStrategyValidationDatasetLocationDetailsPtrInput)(nil)).Elem(), ModelTestStrategyValidationDatasetLocationDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelTrainingDatasetInput)(nil)).Elem(), ModelTrainingDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelTrainingDatasetPtrInput)(nil)).Elem(), ModelTrainingDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelTrainingDatasetLocationDetailsInput)(nil)).Elem(), ModelTrainingDatasetLocationDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelTrainingDatasetLocationDetailsPtrInput)(nil)).Elem(), ModelTrainingDatasetLocationDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEndpointsEndpointCollectionInput)(nil)).Elem(), GetEndpointsEndpointCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEndpointsEndpointCollectionArrayInput)(nil)).Elem(), GetEndpointsEndpointCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEndpointsEndpointCollectionItemInput)(nil)).Elem(), GetEndpointsEndpointCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEndpointsEndpointCollectionItemArrayInput)(nil)).Elem(), GetEndpointsEndpointCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEndpointsFilterInput)(nil)).Elem(), GetEndpointsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEndpointsFilterArrayInput)(nil)).Elem(), GetEndpointsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelEvaluationResultInput)(nil)).Elem(), GetModelEvaluationResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelEvaluationResultArrayInput)(nil)).Elem(), GetModelEvaluationResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelEvaluationResultClassMetricInput)(nil)).Elem(), GetModelEvaluationResultClassMetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelEvaluationResultClassMetricArrayInput)(nil)).Elem(), GetModelEvaluationResultClassMetricArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelEvaluationResultEntityMetricInput)(nil)).Elem(), GetModelEvaluationResultEntityMetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelEvaluationResultEntityMetricArrayInput)(nil)).Elem(), GetModelEvaluationResultEntityMetricArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelEvaluationResultMetricInput)(nil)).Elem(), GetModelEvaluationResultMetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelEvaluationResultMetricArrayInput)(nil)).Elem(), GetModelEvaluationResultMetricArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelEvaluationResultsEvaluationResultCollectionInput)(nil)).Elem(), GetModelEvaluationResultsEvaluationResultCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelEvaluationResultsEvaluationResultCollectionArrayInput)(nil)).Elem(), GetModelEvaluationResultsEvaluationResultCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelEvaluationResultsEvaluationResultCollectionItemInput)(nil)).Elem(), GetModelEvaluationResultsEvaluationResultCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelEvaluationResultsEvaluationResultCollectionItemArrayInput)(nil)).Elem(), GetModelEvaluationResultsEvaluationResultCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityInput)(nil)).Elem(), GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityArrayInput)(nil)).Elem(), GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityInput)(nil)).Elem(), GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityArrayInput)(nil)).Elem(), GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelEvaluationResultsFilterInput)(nil)).Elem(), GetModelEvaluationResultsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelEvaluationResultsFilterArrayInput)(nil)).Elem(), GetModelEvaluationResultsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelModelDetailInput)(nil)).Elem(), GetModelModelDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelModelDetailArrayInput)(nil)).Elem(), GetModelModelDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelModelDetailClassificationModeInput)(nil)).Elem(), GetModelModelDetailClassificationModeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelModelDetailClassificationModeArrayInput)(nil)).Elem(), GetModelModelDetailClassificationModeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelTestStrategyInput)(nil)).Elem(), GetModelTestStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelTestStrategyArrayInput)(nil)).Elem(), GetModelTestStrategyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelTestStrategyTestingDatasetInput)(nil)).Elem(), GetModelTestStrategyTestingDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelTestStrategyTestingDatasetArrayInput)(nil)).Elem(), GetModelTestStrategyTestingDatasetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelTestStrategyTestingDatasetLocationDetailInput)(nil)).Elem(), GetModelTestStrategyTestingDatasetLocationDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelTestStrategyTestingDatasetLocationDetailArrayInput)(nil)).Elem(), GetModelTestStrategyTestingDatasetLocationDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelTestStrategyValidationDatasetInput)(nil)).Elem(), GetModelTestStrategyValidationDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelTestStrategyValidationDatasetArrayInput)(nil)).Elem(), GetModelTestStrategyValidationDatasetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelTestStrategyValidationDatasetLocationDetailInput)(nil)).Elem(), GetModelTestStrategyValidationDatasetLocationDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelTestStrategyValidationDatasetLocationDetailArrayInput)(nil)).Elem(), GetModelTestStrategyValidationDatasetLocationDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelTrainingDatasetInput)(nil)).Elem(), GetModelTrainingDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelTrainingDatasetArrayInput)(nil)).Elem(), GetModelTrainingDatasetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelTrainingDatasetLocationDetailInput)(nil)).Elem(), GetModelTrainingDatasetLocationDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelTrainingDatasetLocationDetailArrayInput)(nil)).Elem(), GetModelTrainingDatasetLocationDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsFilterInput)(nil)).Elem(), GetModelsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsFilterArrayInput)(nil)).Elem(), GetModelsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionInput)(nil)).Elem(), GetModelsModelCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionArrayInput)(nil)).Elem(), GetModelsModelCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemInput)(nil)).Elem(), GetModelsModelCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemArrayInput)(nil)).Elem(), GetModelsModelCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemEvaluationResultInput)(nil)).Elem(), GetModelsModelCollectionItemEvaluationResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemEvaluationResultArrayInput)(nil)).Elem(), GetModelsModelCollectionItemEvaluationResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemEvaluationResultClassMetricInput)(nil)).Elem(), GetModelsModelCollectionItemEvaluationResultClassMetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemEvaluationResultClassMetricArrayInput)(nil)).Elem(), GetModelsModelCollectionItemEvaluationResultClassMetricArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemEvaluationResultEntityMetricInput)(nil)).Elem(), GetModelsModelCollectionItemEvaluationResultEntityMetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemEvaluationResultEntityMetricArrayInput)(nil)).Elem(), GetModelsModelCollectionItemEvaluationResultEntityMetricArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemEvaluationResultMetricInput)(nil)).Elem(), GetModelsModelCollectionItemEvaluationResultMetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemEvaluationResultMetricArrayInput)(nil)).Elem(), GetModelsModelCollectionItemEvaluationResultMetricArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemModelDetailInput)(nil)).Elem(), GetModelsModelCollectionItemModelDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemModelDetailArrayInput)(nil)).Elem(), GetModelsModelCollectionItemModelDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemModelDetailClassificationModeInput)(nil)).Elem(), GetModelsModelCollectionItemModelDetailClassificationModeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemModelDetailClassificationModeArrayInput)(nil)).Elem(), GetModelsModelCollectionItemModelDetailClassificationModeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemTestStrategyInput)(nil)).Elem(), GetModelsModelCollectionItemTestStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemTestStrategyArrayInput)(nil)).Elem(), GetModelsModelCollectionItemTestStrategyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemTestStrategyTestingDatasetInput)(nil)).Elem(), GetModelsModelCollectionItemTestStrategyTestingDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemTestStrategyTestingDatasetArrayInput)(nil)).Elem(), GetModelsModelCollectionItemTestStrategyTestingDatasetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailInput)(nil)).Elem(), GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailArrayInput)(nil)).Elem(), GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemTestStrategyValidationDatasetInput)(nil)).Elem(), GetModelsModelCollectionItemTestStrategyValidationDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemTestStrategyValidationDatasetArrayInput)(nil)).Elem(), GetModelsModelCollectionItemTestStrategyValidationDatasetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailInput)(nil)).Elem(), GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailArrayInput)(nil)).Elem(), GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemTrainingDatasetInput)(nil)).Elem(), GetModelsModelCollectionItemTrainingDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemTrainingDatasetArrayInput)(nil)).Elem(), GetModelsModelCollectionItemTrainingDatasetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemTrainingDatasetLocationDetailInput)(nil)).Elem(), GetModelsModelCollectionItemTrainingDatasetLocationDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemTrainingDatasetLocationDetailArrayInput)(nil)).Elem(), GetModelsModelCollectionItemTrainingDatasetLocationDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsFilterInput)(nil)).Elem(), GetProjectsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsFilterArrayInput)(nil)).Elem(), GetProjectsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectCollectionInput)(nil)).Elem(), GetProjectsProjectCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectCollectionArrayInput)(nil)).Elem(), GetProjectsProjectCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectCollectionItemInput)(nil)).Elem(), GetProjectsProjectCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectCollectionItemArrayInput)(nil)).Elem(), GetProjectsProjectCollectionItemArray{})
	pulumi.RegisterOutputType(ModelEvaluationResultOutput{})
	pulumi.RegisterOutputType(ModelEvaluationResultArrayOutput{})
	pulumi.RegisterOutputType(ModelEvaluationResultClassMetricOutput{})
	pulumi.RegisterOutputType(ModelEvaluationResultClassMetricArrayOutput{})
	pulumi.RegisterOutputType(ModelEvaluationResultEntityMetricOutput{})
	pulumi.RegisterOutputType(ModelEvaluationResultEntityMetricArrayOutput{})
	pulumi.RegisterOutputType(ModelEvaluationResultMetricOutput{})
	pulumi.RegisterOutputType(ModelEvaluationResultMetricArrayOutput{})
	pulumi.RegisterOutputType(ModelModelDetailsOutput{})
	pulumi.RegisterOutputType(ModelModelDetailsPtrOutput{})
	pulumi.RegisterOutputType(ModelModelDetailsClassificationModeOutput{})
	pulumi.RegisterOutputType(ModelModelDetailsClassificationModePtrOutput{})
	pulumi.RegisterOutputType(ModelTestStrategyOutput{})
	pulumi.RegisterOutputType(ModelTestStrategyPtrOutput{})
	pulumi.RegisterOutputType(ModelTestStrategyTestingDatasetOutput{})
	pulumi.RegisterOutputType(ModelTestStrategyTestingDatasetPtrOutput{})
	pulumi.RegisterOutputType(ModelTestStrategyTestingDatasetLocationDetailsOutput{})
	pulumi.RegisterOutputType(ModelTestStrategyTestingDatasetLocationDetailsPtrOutput{})
	pulumi.RegisterOutputType(ModelTestStrategyValidationDatasetOutput{})
	pulumi.RegisterOutputType(ModelTestStrategyValidationDatasetPtrOutput{})
	pulumi.RegisterOutputType(ModelTestStrategyValidationDatasetLocationDetailsOutput{})
	pulumi.RegisterOutputType(ModelTestStrategyValidationDatasetLocationDetailsPtrOutput{})
	pulumi.RegisterOutputType(ModelTrainingDatasetOutput{})
	pulumi.RegisterOutputType(ModelTrainingDatasetPtrOutput{})
	pulumi.RegisterOutputType(ModelTrainingDatasetLocationDetailsOutput{})
	pulumi.RegisterOutputType(ModelTrainingDatasetLocationDetailsPtrOutput{})
	pulumi.RegisterOutputType(GetEndpointsEndpointCollectionOutput{})
	pulumi.RegisterOutputType(GetEndpointsEndpointCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetEndpointsEndpointCollectionItemOutput{})
	pulumi.RegisterOutputType(GetEndpointsEndpointCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetEndpointsFilterOutput{})
	pulumi.RegisterOutputType(GetEndpointsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetModelEvaluationResultOutput{})
	pulumi.RegisterOutputType(GetModelEvaluationResultArrayOutput{})
	pulumi.RegisterOutputType(GetModelEvaluationResultClassMetricOutput{})
	pulumi.RegisterOutputType(GetModelEvaluationResultClassMetricArrayOutput{})
	pulumi.RegisterOutputType(GetModelEvaluationResultEntityMetricOutput{})
	pulumi.RegisterOutputType(GetModelEvaluationResultEntityMetricArrayOutput{})
	pulumi.RegisterOutputType(GetModelEvaluationResultMetricOutput{})
	pulumi.RegisterOutputType(GetModelEvaluationResultMetricArrayOutput{})
	pulumi.RegisterOutputType(GetModelEvaluationResultsEvaluationResultCollectionOutput{})
	pulumi.RegisterOutputType(GetModelEvaluationResultsEvaluationResultCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetModelEvaluationResultsEvaluationResultCollectionItemOutput{})
	pulumi.RegisterOutputType(GetModelEvaluationResultsEvaluationResultCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityOutput{})
	pulumi.RegisterOutputType(GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntityArrayOutput{})
	pulumi.RegisterOutputType(GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityOutput{})
	pulumi.RegisterOutputType(GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntityArrayOutput{})
	pulumi.RegisterOutputType(GetModelEvaluationResultsFilterOutput{})
	pulumi.RegisterOutputType(GetModelEvaluationResultsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetModelModelDetailOutput{})
	pulumi.RegisterOutputType(GetModelModelDetailArrayOutput{})
	pulumi.RegisterOutputType(GetModelModelDetailClassificationModeOutput{})
	pulumi.RegisterOutputType(GetModelModelDetailClassificationModeArrayOutput{})
	pulumi.RegisterOutputType(GetModelTestStrategyOutput{})
	pulumi.RegisterOutputType(GetModelTestStrategyArrayOutput{})
	pulumi.RegisterOutputType(GetModelTestStrategyTestingDatasetOutput{})
	pulumi.RegisterOutputType(GetModelTestStrategyTestingDatasetArrayOutput{})
	pulumi.RegisterOutputType(GetModelTestStrategyTestingDatasetLocationDetailOutput{})
	pulumi.RegisterOutputType(GetModelTestStrategyTestingDatasetLocationDetailArrayOutput{})
	pulumi.RegisterOutputType(GetModelTestStrategyValidationDatasetOutput{})
	pulumi.RegisterOutputType(GetModelTestStrategyValidationDatasetArrayOutput{})
	pulumi.RegisterOutputType(GetModelTestStrategyValidationDatasetLocationDetailOutput{})
	pulumi.RegisterOutputType(GetModelTestStrategyValidationDatasetLocationDetailArrayOutput{})
	pulumi.RegisterOutputType(GetModelTrainingDatasetOutput{})
	pulumi.RegisterOutputType(GetModelTrainingDatasetArrayOutput{})
	pulumi.RegisterOutputType(GetModelTrainingDatasetLocationDetailOutput{})
	pulumi.RegisterOutputType(GetModelTrainingDatasetLocationDetailArrayOutput{})
	pulumi.RegisterOutputType(GetModelsFilterOutput{})
	pulumi.RegisterOutputType(GetModelsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemEvaluationResultOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemEvaluationResultArrayOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemEvaluationResultClassMetricOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemEvaluationResultClassMetricArrayOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemEvaluationResultEntityMetricOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemEvaluationResultEntityMetricArrayOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemEvaluationResultMetricOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemEvaluationResultMetricArrayOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemModelDetailOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemModelDetailArrayOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemModelDetailClassificationModeOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemModelDetailClassificationModeArrayOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemTestStrategyOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemTestStrategyArrayOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemTestStrategyTestingDatasetOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemTestStrategyTestingDatasetArrayOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemTestStrategyTestingDatasetLocationDetailArrayOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemTestStrategyValidationDatasetOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemTestStrategyValidationDatasetArrayOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemTestStrategyValidationDatasetLocationDetailArrayOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemTrainingDatasetOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemTrainingDatasetArrayOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemTrainingDatasetLocationDetailOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemTrainingDatasetLocationDetailArrayOutput{})
	pulumi.RegisterOutputType(GetProjectsFilterOutput{})
	pulumi.RegisterOutputType(GetProjectsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectCollectionOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectCollectionItemOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectCollectionItemArrayOutput{})
}
