// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aivision

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Stream Job resource in Oracle Cloud Infrastructure Ai Vision service.
//
// Get details of a stream analysis job.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/aivision"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := aivision.GetStreamJob(ctx, &aivision.GetStreamJobArgs{
//				StreamJobId: testStreamJobOciAiVisionStreamJob.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupStreamJob(ctx *pulumi.Context, args *LookupStreamJobArgs, opts ...pulumi.InvokeOption) (*LookupStreamJobResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupStreamJobResult
	err := ctx.Invoke("oci:AiVision/getStreamJob:getStreamJob", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getStreamJob.
type LookupStreamJobArgs struct {
	// Stream job id.
	StreamJobId string `pulumi:"streamJobId"`
}

// A collection of values returned by getStreamJob.
type LookupStreamJobResult struct {
	// participant id of agent where results need to be sent
	AgentParticipantId string `pulumi:"agentParticipantId"`
	// [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of compartment
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For example: `{"foo-namespace": {"bar-key": "value"}}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// Stream job display name.
	DisplayName string `pulumi:"displayName"`
	// a list of document analysis features.
	Features []GetStreamJobFeature `pulumi:"features"`
	// A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the streamJob.
	Id string `pulumi:"id"`
	// Additional details about current state of streamJob
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// The current state of the Stream job.
	State       string `pulumi:"state"`
	StreamJobId string `pulumi:"streamJobId"`
	// Details about a where results will be Sent
	StreamOutputLocations []GetStreamJobStreamOutputLocation `pulumi:"streamOutputLocations"`
	// [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the streamSource
	StreamSourceId string `pulumi:"streamSourceId"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. For example: `{"orcl-cloud": {"free-tier-retained": "true"}}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// When the streamJob was created, as an RFC3339 datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// When the stream job was updated, as an RFC3339 datetime string.
	TimeUpdated string `pulumi:"timeUpdated"`
}

func LookupStreamJobOutput(ctx *pulumi.Context, args LookupStreamJobOutputArgs, opts ...pulumi.InvokeOption) LookupStreamJobResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupStreamJobResultOutput, error) {
			args := v.(LookupStreamJobArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:AiVision/getStreamJob:getStreamJob", args, LookupStreamJobResultOutput{}, options).(LookupStreamJobResultOutput), nil
		}).(LookupStreamJobResultOutput)
}

// A collection of arguments for invoking getStreamJob.
type LookupStreamJobOutputArgs struct {
	// Stream job id.
	StreamJobId pulumi.StringInput `pulumi:"streamJobId"`
}

func (LookupStreamJobOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStreamJobArgs)(nil)).Elem()
}

// A collection of values returned by getStreamJob.
type LookupStreamJobResultOutput struct{ *pulumi.OutputState }

func (LookupStreamJobResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStreamJobResult)(nil)).Elem()
}

func (o LookupStreamJobResultOutput) ToLookupStreamJobResultOutput() LookupStreamJobResultOutput {
	return o
}

func (o LookupStreamJobResultOutput) ToLookupStreamJobResultOutputWithContext(ctx context.Context) LookupStreamJobResultOutput {
	return o
}

// participant id of agent where results need to be sent
func (o LookupStreamJobResultOutput) AgentParticipantId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamJobResult) string { return v.AgentParticipantId }).(pulumi.StringOutput)
}

// [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of compartment
func (o LookupStreamJobResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamJobResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For example: `{"foo-namespace": {"bar-key": "value"}}`
func (o LookupStreamJobResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupStreamJobResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// Stream job display name.
func (o LookupStreamJobResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamJobResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// a list of document analysis features.
func (o LookupStreamJobResultOutput) Features() GetStreamJobFeatureArrayOutput {
	return o.ApplyT(func(v LookupStreamJobResult) []GetStreamJobFeature { return v.Features }).(GetStreamJobFeatureArrayOutput)
}

// A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{"bar-key": "value"}`
func (o LookupStreamJobResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupStreamJobResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the streamJob.
func (o LookupStreamJobResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamJobResult) string { return v.Id }).(pulumi.StringOutput)
}

// Additional details about current state of streamJob
func (o LookupStreamJobResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamJobResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The current state of the Stream job.
func (o LookupStreamJobResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamJobResult) string { return v.State }).(pulumi.StringOutput)
}

func (o LookupStreamJobResultOutput) StreamJobId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamJobResult) string { return v.StreamJobId }).(pulumi.StringOutput)
}

// Details about a where results will be Sent
func (o LookupStreamJobResultOutput) StreamOutputLocations() GetStreamJobStreamOutputLocationArrayOutput {
	return o.ApplyT(func(v LookupStreamJobResult) []GetStreamJobStreamOutputLocation { return v.StreamOutputLocations }).(GetStreamJobStreamOutputLocationArrayOutput)
}

// [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the streamSource
func (o LookupStreamJobResultOutput) StreamSourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamJobResult) string { return v.StreamSourceId }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. For example: `{"orcl-cloud": {"free-tier-retained": "true"}}`
func (o LookupStreamJobResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupStreamJobResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// When the streamJob was created, as an RFC3339 datetime string.
func (o LookupStreamJobResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamJobResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// When the stream job was updated, as an RFC3339 datetime string.
func (o LookupStreamJobResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamJobResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupStreamJobResultOutput{})
}
