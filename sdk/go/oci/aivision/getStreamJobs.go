// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aivision

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Stream Jobs in Oracle Cloud Infrastructure Ai Vision service.
//
// # Get list of stream jobs
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/aivision"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := aivision.GetStreamJobs(ctx, &aivision.GetStreamJobsArgs{
//				CompartmentId: pulumi.StringRef(compartmentId),
//				DisplayName:   pulumi.StringRef(streamJobDisplayName),
//				Id:            pulumi.StringRef(streamJobId),
//				State:         pulumi.StringRef(streamJobState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetStreamJobs(ctx *pulumi.Context, args *GetStreamJobsArgs, opts ...pulumi.InvokeOption) (*GetStreamJobsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetStreamJobsResult
	err := ctx.Invoke("oci:AiVision/getStreamJobs:getStreamJobs", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getStreamJobs.
type GetStreamJobsArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId *string `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName *string               `pulumi:"displayName"`
	Filters     []GetStreamJobsFilter `pulumi:"filters"`
	// The filter to find the streamjob with the given identifier.
	Id *string `pulumi:"id"`
	// The filter to match projects with the given lifecycleState.
	State *string `pulumi:"state"`
}

// A collection of values returned by getStreamJobs.
type GetStreamJobsResult struct {
	// [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of compartment
	CompartmentId *string `pulumi:"compartmentId"`
	// Stream job display name.
	DisplayName *string               `pulumi:"displayName"`
	Filters     []GetStreamJobsFilter `pulumi:"filters"`
	// [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the streamJob.
	Id *string `pulumi:"id"`
	// The current state of the Stream job.
	State *string `pulumi:"state"`
	// The list of stream_job_collection.
	StreamJobCollections []GetStreamJobsStreamJobCollection `pulumi:"streamJobCollections"`
}

func GetStreamJobsOutput(ctx *pulumi.Context, args GetStreamJobsOutputArgs, opts ...pulumi.InvokeOption) GetStreamJobsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetStreamJobsResultOutput, error) {
			args := v.(GetStreamJobsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:AiVision/getStreamJobs:getStreamJobs", args, GetStreamJobsResultOutput{}, options).(GetStreamJobsResultOutput), nil
		}).(GetStreamJobsResultOutput)
}

// A collection of arguments for invoking getStreamJobs.
type GetStreamJobsOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringPtrInput         `pulumi:"displayName"`
	Filters     GetStreamJobsFilterArrayInput `pulumi:"filters"`
	// The filter to find the streamjob with the given identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The filter to match projects with the given lifecycleState.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetStreamJobsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamJobsArgs)(nil)).Elem()
}

// A collection of values returned by getStreamJobs.
type GetStreamJobsResultOutput struct{ *pulumi.OutputState }

func (GetStreamJobsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamJobsResult)(nil)).Elem()
}

func (o GetStreamJobsResultOutput) ToGetStreamJobsResultOutput() GetStreamJobsResultOutput {
	return o
}

func (o GetStreamJobsResultOutput) ToGetStreamJobsResultOutputWithContext(ctx context.Context) GetStreamJobsResultOutput {
	return o
}

// [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of compartment
func (o GetStreamJobsResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetStreamJobsResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// Stream job display name.
func (o GetStreamJobsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetStreamJobsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetStreamJobsResultOutput) Filters() GetStreamJobsFilterArrayOutput {
	return o.ApplyT(func(v GetStreamJobsResult) []GetStreamJobsFilter { return v.Filters }).(GetStreamJobsFilterArrayOutput)
}

// [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the streamJob.
func (o GetStreamJobsResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetStreamJobsResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The current state of the Stream job.
func (o GetStreamJobsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetStreamJobsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The list of stream_job_collection.
func (o GetStreamJobsResultOutput) StreamJobCollections() GetStreamJobsStreamJobCollectionArrayOutput {
	return o.ApplyT(func(v GetStreamJobsResult) []GetStreamJobsStreamJobCollection { return v.StreamJobCollections }).(GetStreamJobsStreamJobCollectionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetStreamJobsResultOutput{})
}
