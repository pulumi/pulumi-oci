// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aivision

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Vision Private Endpoint resource in Oracle Cloud Infrastructure Ai Vision service.
//
// Get a visionPrivateEndpoint by identifier.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/aivision"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := aivision.GetVisionPrivateEndpoint(ctx, &aivision.GetVisionPrivateEndpointArgs{
//				VisionPrivateEndpointId: testVisionPrivateEndpointOciAiVisionVisionPrivateEndpoint.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupVisionPrivateEndpoint(ctx *pulumi.Context, args *LookupVisionPrivateEndpointArgs, opts ...pulumi.InvokeOption) (*LookupVisionPrivateEndpointResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVisionPrivateEndpointResult
	err := ctx.Invoke("oci:AiVision/getVisionPrivateEndpoint:getVisionPrivateEndpoint", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVisionPrivateEndpoint.
type LookupVisionPrivateEndpointArgs struct {
	// Vision private endpoint Id.
	VisionPrivateEndpointId string `pulumi:"visionPrivateEndpointId"`
}

// A collection of values returned by getVisionPrivateEndpoint.
type LookupVisionPrivateEndpointResult struct {
	// A compartment identifier.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For example: `{"foo-namespace": {"bar-key": "value"}}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// An optional description of the visionPrivateEndpoint.
	Description string `pulumi:"description"`
	// A human-friendly name for the visionPrivateEndpoint, which can be changed.
	DisplayName string `pulumi:"displayName"`
	// A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of private endpoint
	Id string `pulumi:"id"`
	// A message describing the current state in more detail, that can provide actionable information if creation failed.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// The current state of the visionPrivateEndpoint.
	State string `pulumi:"state"`
	// [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of subnet
	SubnetId string `pulumi:"subnetId"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. For example: `{"orcl-cloud": {"free-tier-retained": "true"}}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// When the visionPrivateEndpoint was created, as an RFC3339 datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// When the visionPrivateEndpoint was updated, as an RFC3339 datetime string.
	TimeUpdated             string `pulumi:"timeUpdated"`
	VisionPrivateEndpointId string `pulumi:"visionPrivateEndpointId"`
}

func LookupVisionPrivateEndpointOutput(ctx *pulumi.Context, args LookupVisionPrivateEndpointOutputArgs, opts ...pulumi.InvokeOption) LookupVisionPrivateEndpointResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupVisionPrivateEndpointResultOutput, error) {
			args := v.(LookupVisionPrivateEndpointArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:AiVision/getVisionPrivateEndpoint:getVisionPrivateEndpoint", args, LookupVisionPrivateEndpointResultOutput{}, options).(LookupVisionPrivateEndpointResultOutput), nil
		}).(LookupVisionPrivateEndpointResultOutput)
}

// A collection of arguments for invoking getVisionPrivateEndpoint.
type LookupVisionPrivateEndpointOutputArgs struct {
	// Vision private endpoint Id.
	VisionPrivateEndpointId pulumi.StringInput `pulumi:"visionPrivateEndpointId"`
}

func (LookupVisionPrivateEndpointOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVisionPrivateEndpointArgs)(nil)).Elem()
}

// A collection of values returned by getVisionPrivateEndpoint.
type LookupVisionPrivateEndpointResultOutput struct{ *pulumi.OutputState }

func (LookupVisionPrivateEndpointResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVisionPrivateEndpointResult)(nil)).Elem()
}

func (o LookupVisionPrivateEndpointResultOutput) ToLookupVisionPrivateEndpointResultOutput() LookupVisionPrivateEndpointResultOutput {
	return o
}

func (o LookupVisionPrivateEndpointResultOutput) ToLookupVisionPrivateEndpointResultOutputWithContext(ctx context.Context) LookupVisionPrivateEndpointResultOutput {
	return o
}

// A compartment identifier.
func (o LookupVisionPrivateEndpointResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVisionPrivateEndpointResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For example: `{"foo-namespace": {"bar-key": "value"}}`
func (o LookupVisionPrivateEndpointResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupVisionPrivateEndpointResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// An optional description of the visionPrivateEndpoint.
func (o LookupVisionPrivateEndpointResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVisionPrivateEndpointResult) string { return v.Description }).(pulumi.StringOutput)
}

// A human-friendly name for the visionPrivateEndpoint, which can be changed.
func (o LookupVisionPrivateEndpointResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVisionPrivateEndpointResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{"bar-key": "value"}`
func (o LookupVisionPrivateEndpointResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupVisionPrivateEndpointResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of private endpoint
func (o LookupVisionPrivateEndpointResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVisionPrivateEndpointResult) string { return v.Id }).(pulumi.StringOutput)
}

// A message describing the current state in more detail, that can provide actionable information if creation failed.
func (o LookupVisionPrivateEndpointResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVisionPrivateEndpointResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The current state of the visionPrivateEndpoint.
func (o LookupVisionPrivateEndpointResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVisionPrivateEndpointResult) string { return v.State }).(pulumi.StringOutput)
}

// [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of subnet
func (o LookupVisionPrivateEndpointResultOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVisionPrivateEndpointResult) string { return v.SubnetId }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. For example: `{"orcl-cloud": {"free-tier-retained": "true"}}`
func (o LookupVisionPrivateEndpointResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupVisionPrivateEndpointResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// When the visionPrivateEndpoint was created, as an RFC3339 datetime string.
func (o LookupVisionPrivateEndpointResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVisionPrivateEndpointResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// When the visionPrivateEndpoint was updated, as an RFC3339 datetime string.
func (o LookupVisionPrivateEndpointResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVisionPrivateEndpointResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func (o LookupVisionPrivateEndpointResultOutput) VisionPrivateEndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVisionPrivateEndpointResult) string { return v.VisionPrivateEndpointId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVisionPrivateEndpointResultOutput{})
}
