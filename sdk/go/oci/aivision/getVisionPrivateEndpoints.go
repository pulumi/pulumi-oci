// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aivision

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Vision Private Endpoints in Oracle Cloud Infrastructure Ai Vision service.
//
// Returns a list of visionPrivateEndpoints.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/aivision"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := aivision.GetVisionPrivateEndpoints(ctx, &aivision.GetVisionPrivateEndpointsArgs{
//				CompartmentId: pulumi.StringRef(compartmentId),
//				DisplayName:   pulumi.StringRef(visionPrivateEndpointDisplayName),
//				Id:            pulumi.StringRef(visionPrivateEndpointId),
//				State:         pulumi.StringRef(visionPrivateEndpointState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetVisionPrivateEndpoints(ctx *pulumi.Context, args *GetVisionPrivateEndpointsArgs, opts ...pulumi.InvokeOption) (*GetVisionPrivateEndpointsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetVisionPrivateEndpointsResult
	err := ctx.Invoke("oci:AiVision/getVisionPrivateEndpoints:getVisionPrivateEndpoints", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVisionPrivateEndpoints.
type GetVisionPrivateEndpointsArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId *string `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName *string                           `pulumi:"displayName"`
	Filters     []GetVisionPrivateEndpointsFilter `pulumi:"filters"`
	// The filter to find the device with the given identifier.
	Id *string `pulumi:"id"`
	// The filter to match projects with the given lifecycleState.
	State *string `pulumi:"state"`
}

// A collection of values returned by getVisionPrivateEndpoints.
type GetVisionPrivateEndpointsResult struct {
	// A compartment identifier.
	CompartmentId *string `pulumi:"compartmentId"`
	// A human-friendly name for the visionPrivateEndpoint, which can be changed.
	DisplayName *string                           `pulumi:"displayName"`
	Filters     []GetVisionPrivateEndpointsFilter `pulumi:"filters"`
	// [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of private endpoint
	Id *string `pulumi:"id"`
	// The current state of the visionPrivateEndpoint.
	State *string `pulumi:"state"`
	// The list of vision_private_endpoint_collection.
	VisionPrivateEndpointCollections []GetVisionPrivateEndpointsVisionPrivateEndpointCollection `pulumi:"visionPrivateEndpointCollections"`
}

func GetVisionPrivateEndpointsOutput(ctx *pulumi.Context, args GetVisionPrivateEndpointsOutputArgs, opts ...pulumi.InvokeOption) GetVisionPrivateEndpointsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetVisionPrivateEndpointsResultOutput, error) {
			args := v.(GetVisionPrivateEndpointsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:AiVision/getVisionPrivateEndpoints:getVisionPrivateEndpoints", args, GetVisionPrivateEndpointsResultOutput{}, options).(GetVisionPrivateEndpointsResultOutput), nil
		}).(GetVisionPrivateEndpointsResultOutput)
}

// A collection of arguments for invoking getVisionPrivateEndpoints.
type GetVisionPrivateEndpointsOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringPtrInput                     `pulumi:"displayName"`
	Filters     GetVisionPrivateEndpointsFilterArrayInput `pulumi:"filters"`
	// The filter to find the device with the given identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The filter to match projects with the given lifecycleState.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetVisionPrivateEndpointsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVisionPrivateEndpointsArgs)(nil)).Elem()
}

// A collection of values returned by getVisionPrivateEndpoints.
type GetVisionPrivateEndpointsResultOutput struct{ *pulumi.OutputState }

func (GetVisionPrivateEndpointsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVisionPrivateEndpointsResult)(nil)).Elem()
}

func (o GetVisionPrivateEndpointsResultOutput) ToGetVisionPrivateEndpointsResultOutput() GetVisionPrivateEndpointsResultOutput {
	return o
}

func (o GetVisionPrivateEndpointsResultOutput) ToGetVisionPrivateEndpointsResultOutputWithContext(ctx context.Context) GetVisionPrivateEndpointsResultOutput {
	return o
}

// A compartment identifier.
func (o GetVisionPrivateEndpointsResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVisionPrivateEndpointsResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// A human-friendly name for the visionPrivateEndpoint, which can be changed.
func (o GetVisionPrivateEndpointsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVisionPrivateEndpointsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetVisionPrivateEndpointsResultOutput) Filters() GetVisionPrivateEndpointsFilterArrayOutput {
	return o.ApplyT(func(v GetVisionPrivateEndpointsResult) []GetVisionPrivateEndpointsFilter { return v.Filters }).(GetVisionPrivateEndpointsFilterArrayOutput)
}

// [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of private endpoint
func (o GetVisionPrivateEndpointsResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVisionPrivateEndpointsResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The current state of the visionPrivateEndpoint.
func (o GetVisionPrivateEndpointsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVisionPrivateEndpointsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The list of vision_private_endpoint_collection.
func (o GetVisionPrivateEndpointsResultOutput) VisionPrivateEndpointCollections() GetVisionPrivateEndpointsVisionPrivateEndpointCollectionArrayOutput {
	return o.ApplyT(func(v GetVisionPrivateEndpointsResult) []GetVisionPrivateEndpointsVisionPrivateEndpointCollection {
		return v.VisionPrivateEndpointCollections
	}).(GetVisionPrivateEndpointsVisionPrivateEndpointCollectionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetVisionPrivateEndpointsResultOutput{})
}
