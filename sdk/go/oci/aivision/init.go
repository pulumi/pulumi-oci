// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aivision

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "oci:AiVision/model:Model":
		r = &Model{}
	case "oci:AiVision/project:Project":
		r = &Project{}
	case "oci:AiVision/streamGroup:StreamGroup":
		r = &StreamGroup{}
	case "oci:AiVision/streamJob:StreamJob":
		r = &StreamJob{}
	case "oci:AiVision/streamSource:StreamSource":
		r = &StreamSource{}
	case "oci:AiVision/visionPrivateEndpoint:VisionPrivateEndpoint":
		r = &VisionPrivateEndpoint{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := internal.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"oci",
		"AiVision/model",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"AiVision/project",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"AiVision/streamGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"AiVision/streamJob",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"AiVision/streamSource",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"AiVision/visionPrivateEndpoint",
		&module{version},
	)
}
