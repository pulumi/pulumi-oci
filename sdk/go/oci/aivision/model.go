// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aivision

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Model resource in Oracle Cloud Infrastructure Ai Vision service.
//
// Creates a new Model.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/AiVision"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := AiVision.NewModel(ctx, "test_model", &AiVision.ModelArgs{
//				CompartmentId: pulumi.Any(compartmentId),
//				ModelType:     pulumi.Any(modelModelType),
//				ProjectId:     pulumi.Any(testProject.Id),
//				TrainingDataset: &aivision.ModelTrainingDatasetArgs{
//					DatasetType:   pulumi.Any(modelTrainingDatasetDatasetType),
//					Bucket:        pulumi.Any(modelTrainingDatasetBucket),
//					DatasetId:     pulumi.Any(testDataset.Id),
//					NamespaceName: pulumi.Any(modelTrainingDatasetNamespace),
//					Object:        pulumi.Any(modelTrainingDatasetObject),
//				},
//				DefinedTags: pulumi.Map{
//					"foo-namespace.bar-key": pulumi.Any("value"),
//				},
//				Description: pulumi.Any(modelDescription),
//				DisplayName: pulumi.Any(modelDisplayName),
//				FreeformTags: pulumi.Map{
//					"bar-key": pulumi.Any("value"),
//				},
//				IsQuickMode:                pulumi.Any(modelIsQuickMode),
//				MaxTrainingDurationInHours: pulumi.Any(modelMaxTrainingDurationInHours),
//				ModelVersion:               pulumi.Any(modelModelVersion),
//				TestingDataset: &aivision.ModelTestingDatasetArgs{
//					DatasetType:   pulumi.Any(modelTestingDatasetDatasetType),
//					Bucket:        pulumi.Any(modelTestingDatasetBucket),
//					DatasetId:     pulumi.Any(testDataset.Id),
//					NamespaceName: pulumi.Any(modelTestingDatasetNamespace),
//					Object:        pulumi.Any(modelTestingDatasetObject),
//				},
//				ValidationDataset: &aivision.ModelValidationDatasetArgs{
//					DatasetType:   pulumi.Any(modelValidationDatasetDatasetType),
//					Bucket:        pulumi.Any(modelValidationDatasetBucket),
//					DatasetId:     pulumi.Any(testDataset.Id),
//					NamespaceName: pulumi.Any(modelValidationDatasetNamespace),
//					Object:        pulumi.Any(modelValidationDatasetObject),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// Models can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:AiVision/model:Model test_model "id"
// ```
type Model struct {
	pulumi.CustomResourceState

	// Average precision of the trained model
	AveragePrecision pulumi.Float64Output `pulumi:"averagePrecision"`
	// (Updatable) Compartment Identifier
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// Confidence ratio of the calculation
	ConfidenceThreshold pulumi.Float64Output `pulumi:"confidenceThreshold"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) A short description of the Model.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) Model Identifier
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// If It's true, Training is set for recommended epochs needed for quick training.
	IsQuickMode pulumi.BoolOutput `pulumi:"isQuickMode"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// The maximum duration in hours for which the training will run.
	MaxTrainingDurationInHours pulumi.Float64Output `pulumi:"maxTrainingDurationInHours"`
	// Complete Training Metrics for successful trained model
	Metrics pulumi.StringOutput `pulumi:"metrics"`
	// The  type of the model.
	ModelType pulumi.StringOutput `pulumi:"modelType"`
	// Model version.
	ModelVersion pulumi.StringOutput `pulumi:"modelVersion"`
	// Precision of the trained model
	Precision pulumi.Float64Output `pulumi:"precision"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project to associate with the model.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// Recall of the trained model
	Recall pulumi.Float64Output `pulumi:"recall"`
	// The current state of the Model.
	State pulumi.StringOutput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapOutput `pulumi:"systemTags"`
	// Total number of testing Images
	TestImageCount pulumi.IntOutput `pulumi:"testImageCount"`
	// The base entity for a Dataset, which is the input for Model creation.
	TestingDataset ModelTestingDatasetOutput `pulumi:"testingDataset"`
	// The time the Model was created. An RFC3339 formatted datetime string
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time the Model was updated. An RFC3339 formatted datetime string
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
	// Total number of training Images
	TotalImageCount pulumi.IntOutput `pulumi:"totalImageCount"`
	// Total hours actually used for training
	TrainedDurationInHours pulumi.Float64Output `pulumi:"trainedDurationInHours"`
	// The base entity for a Dataset, which is the input for Model creation.
	TrainingDataset ModelTrainingDatasetOutput `pulumi:"trainingDataset"`
	// The base entity for a Dataset, which is the input for Model creation.
	ValidationDataset ModelValidationDatasetOutput `pulumi:"validationDataset"`
}

// NewModel registers a new resource with the given unique name, arguments, and options.
func NewModel(ctx *pulumi.Context,
	name string, args *ModelArgs, opts ...pulumi.ResourceOption) (*Model, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.ModelType == nil {
		return nil, errors.New("invalid value for required argument 'ModelType'")
	}
	if args.ProjectId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectId'")
	}
	if args.TrainingDataset == nil {
		return nil, errors.New("invalid value for required argument 'TrainingDataset'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Model
	err := ctx.RegisterResource("oci:AiVision/model:Model", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetModel gets an existing Model resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetModel(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ModelState, opts ...pulumi.ResourceOption) (*Model, error) {
	var resource Model
	err := ctx.ReadResource("oci:AiVision/model:Model", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Model resources.
type modelState struct {
	// Average precision of the trained model
	AveragePrecision *float64 `pulumi:"averagePrecision"`
	// (Updatable) Compartment Identifier
	CompartmentId *string `pulumi:"compartmentId"`
	// Confidence ratio of the calculation
	ConfidenceThreshold *float64 `pulumi:"confidenceThreshold"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A short description of the Model.
	Description *string `pulumi:"description"`
	// (Updatable) Model Identifier
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// If It's true, Training is set for recommended epochs needed for quick training.
	IsQuickMode *bool `pulumi:"isQuickMode"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// The maximum duration in hours for which the training will run.
	MaxTrainingDurationInHours *float64 `pulumi:"maxTrainingDurationInHours"`
	// Complete Training Metrics for successful trained model
	Metrics *string `pulumi:"metrics"`
	// The  type of the model.
	ModelType *string `pulumi:"modelType"`
	// Model version.
	ModelVersion *string `pulumi:"modelVersion"`
	// Precision of the trained model
	Precision *float64 `pulumi:"precision"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project to associate with the model.
	ProjectId *string `pulumi:"projectId"`
	// Recall of the trained model
	Recall *float64 `pulumi:"recall"`
	// The current state of the Model.
	State *string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// Total number of testing Images
	TestImageCount *int `pulumi:"testImageCount"`
	// The base entity for a Dataset, which is the input for Model creation.
	TestingDataset *ModelTestingDataset `pulumi:"testingDataset"`
	// The time the Model was created. An RFC3339 formatted datetime string
	TimeCreated *string `pulumi:"timeCreated"`
	// The time the Model was updated. An RFC3339 formatted datetime string
	TimeUpdated *string `pulumi:"timeUpdated"`
	// Total number of training Images
	TotalImageCount *int `pulumi:"totalImageCount"`
	// Total hours actually used for training
	TrainedDurationInHours *float64 `pulumi:"trainedDurationInHours"`
	// The base entity for a Dataset, which is the input for Model creation.
	TrainingDataset *ModelTrainingDataset `pulumi:"trainingDataset"`
	// The base entity for a Dataset, which is the input for Model creation.
	ValidationDataset *ModelValidationDataset `pulumi:"validationDataset"`
}

type ModelState struct {
	// Average precision of the trained model
	AveragePrecision pulumi.Float64PtrInput
	// (Updatable) Compartment Identifier
	CompartmentId pulumi.StringPtrInput
	// Confidence ratio of the calculation
	ConfidenceThreshold pulumi.Float64PtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A short description of the Model.
	Description pulumi.StringPtrInput
	// (Updatable) Model Identifier
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// If It's true, Training is set for recommended epochs needed for quick training.
	IsQuickMode pulumi.BoolPtrInput
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringPtrInput
	// The maximum duration in hours for which the training will run.
	MaxTrainingDurationInHours pulumi.Float64PtrInput
	// Complete Training Metrics for successful trained model
	Metrics pulumi.StringPtrInput
	// The  type of the model.
	ModelType pulumi.StringPtrInput
	// Model version.
	ModelVersion pulumi.StringPtrInput
	// Precision of the trained model
	Precision pulumi.Float64PtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project to associate with the model.
	ProjectId pulumi.StringPtrInput
	// Recall of the trained model
	Recall pulumi.Float64PtrInput
	// The current state of the Model.
	State pulumi.StringPtrInput
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput
	// Total number of testing Images
	TestImageCount pulumi.IntPtrInput
	// The base entity for a Dataset, which is the input for Model creation.
	TestingDataset ModelTestingDatasetPtrInput
	// The time the Model was created. An RFC3339 formatted datetime string
	TimeCreated pulumi.StringPtrInput
	// The time the Model was updated. An RFC3339 formatted datetime string
	TimeUpdated pulumi.StringPtrInput
	// Total number of training Images
	TotalImageCount pulumi.IntPtrInput
	// Total hours actually used for training
	TrainedDurationInHours pulumi.Float64PtrInput
	// The base entity for a Dataset, which is the input for Model creation.
	TrainingDataset ModelTrainingDatasetPtrInput
	// The base entity for a Dataset, which is the input for Model creation.
	ValidationDataset ModelValidationDatasetPtrInput
}

func (ModelState) ElementType() reflect.Type {
	return reflect.TypeOf((*modelState)(nil)).Elem()
}

type modelArgs struct {
	// (Updatable) Compartment Identifier
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A short description of the Model.
	Description *string `pulumi:"description"`
	// (Updatable) Model Identifier
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// If It's true, Training is set for recommended epochs needed for quick training.
	IsQuickMode *bool `pulumi:"isQuickMode"`
	// The maximum duration in hours for which the training will run.
	MaxTrainingDurationInHours *float64 `pulumi:"maxTrainingDurationInHours"`
	// The  type of the model.
	ModelType string `pulumi:"modelType"`
	// Model version.
	ModelVersion *string `pulumi:"modelVersion"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project to associate with the model.
	ProjectId string `pulumi:"projectId"`
	// The base entity for a Dataset, which is the input for Model creation.
	TestingDataset *ModelTestingDataset `pulumi:"testingDataset"`
	// The base entity for a Dataset, which is the input for Model creation.
	TrainingDataset ModelTrainingDataset `pulumi:"trainingDataset"`
	// The base entity for a Dataset, which is the input for Model creation.
	ValidationDataset *ModelValidationDataset `pulumi:"validationDataset"`
}

// The set of arguments for constructing a Model resource.
type ModelArgs struct {
	// (Updatable) Compartment Identifier
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A short description of the Model.
	Description pulumi.StringPtrInput
	// (Updatable) Model Identifier
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// If It's true, Training is set for recommended epochs needed for quick training.
	IsQuickMode pulumi.BoolPtrInput
	// The maximum duration in hours for which the training will run.
	MaxTrainingDurationInHours pulumi.Float64PtrInput
	// The  type of the model.
	ModelType pulumi.StringInput
	// Model version.
	ModelVersion pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project to associate with the model.
	ProjectId pulumi.StringInput
	// The base entity for a Dataset, which is the input for Model creation.
	TestingDataset ModelTestingDatasetPtrInput
	// The base entity for a Dataset, which is the input for Model creation.
	TrainingDataset ModelTrainingDatasetInput
	// The base entity for a Dataset, which is the input for Model creation.
	ValidationDataset ModelValidationDatasetPtrInput
}

func (ModelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*modelArgs)(nil)).Elem()
}

type ModelInput interface {
	pulumi.Input

	ToModelOutput() ModelOutput
	ToModelOutputWithContext(ctx context.Context) ModelOutput
}

func (*Model) ElementType() reflect.Type {
	return reflect.TypeOf((**Model)(nil)).Elem()
}

func (i *Model) ToModelOutput() ModelOutput {
	return i.ToModelOutputWithContext(context.Background())
}

func (i *Model) ToModelOutputWithContext(ctx context.Context) ModelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelOutput)
}

// ModelArrayInput is an input type that accepts ModelArray and ModelArrayOutput values.
// You can construct a concrete instance of `ModelArrayInput` via:
//
//	ModelArray{ ModelArgs{...} }
type ModelArrayInput interface {
	pulumi.Input

	ToModelArrayOutput() ModelArrayOutput
	ToModelArrayOutputWithContext(context.Context) ModelArrayOutput
}

type ModelArray []ModelInput

func (ModelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Model)(nil)).Elem()
}

func (i ModelArray) ToModelArrayOutput() ModelArrayOutput {
	return i.ToModelArrayOutputWithContext(context.Background())
}

func (i ModelArray) ToModelArrayOutputWithContext(ctx context.Context) ModelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelArrayOutput)
}

// ModelMapInput is an input type that accepts ModelMap and ModelMapOutput values.
// You can construct a concrete instance of `ModelMapInput` via:
//
//	ModelMap{ "key": ModelArgs{...} }
type ModelMapInput interface {
	pulumi.Input

	ToModelMapOutput() ModelMapOutput
	ToModelMapOutputWithContext(context.Context) ModelMapOutput
}

type ModelMap map[string]ModelInput

func (ModelMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Model)(nil)).Elem()
}

func (i ModelMap) ToModelMapOutput() ModelMapOutput {
	return i.ToModelMapOutputWithContext(context.Background())
}

func (i ModelMap) ToModelMapOutputWithContext(ctx context.Context) ModelMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelMapOutput)
}

type ModelOutput struct{ *pulumi.OutputState }

func (ModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Model)(nil)).Elem()
}

func (o ModelOutput) ToModelOutput() ModelOutput {
	return o
}

func (o ModelOutput) ToModelOutputWithContext(ctx context.Context) ModelOutput {
	return o
}

// Average precision of the trained model
func (o ModelOutput) AveragePrecision() pulumi.Float64Output {
	return o.ApplyT(func(v *Model) pulumi.Float64Output { return v.AveragePrecision }).(pulumi.Float64Output)
}

// (Updatable) Compartment Identifier
func (o ModelOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *Model) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// Confidence ratio of the calculation
func (o ModelOutput) ConfidenceThreshold() pulumi.Float64Output {
	return o.ApplyT(func(v *Model) pulumi.Float64Output { return v.ConfidenceThreshold }).(pulumi.Float64Output)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o ModelOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v *Model) pulumi.MapOutput { return v.DefinedTags }).(pulumi.MapOutput)
}

// (Updatable) A short description of the Model.
func (o ModelOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *Model) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// (Updatable) Model Identifier
func (o ModelOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *Model) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o ModelOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v *Model) pulumi.MapOutput { return v.FreeformTags }).(pulumi.MapOutput)
}

// If It's true, Training is set for recommended epochs needed for quick training.
func (o ModelOutput) IsQuickMode() pulumi.BoolOutput {
	return o.ApplyT(func(v *Model) pulumi.BoolOutput { return v.IsQuickMode }).(pulumi.BoolOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o ModelOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *Model) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The maximum duration in hours for which the training will run.
func (o ModelOutput) MaxTrainingDurationInHours() pulumi.Float64Output {
	return o.ApplyT(func(v *Model) pulumi.Float64Output { return v.MaxTrainingDurationInHours }).(pulumi.Float64Output)
}

// Complete Training Metrics for successful trained model
func (o ModelOutput) Metrics() pulumi.StringOutput {
	return o.ApplyT(func(v *Model) pulumi.StringOutput { return v.Metrics }).(pulumi.StringOutput)
}

// The  type of the model.
func (o ModelOutput) ModelType() pulumi.StringOutput {
	return o.ApplyT(func(v *Model) pulumi.StringOutput { return v.ModelType }).(pulumi.StringOutput)
}

// Model version.
func (o ModelOutput) ModelVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Model) pulumi.StringOutput { return v.ModelVersion }).(pulumi.StringOutput)
}

// Precision of the trained model
func (o ModelOutput) Precision() pulumi.Float64Output {
	return o.ApplyT(func(v *Model) pulumi.Float64Output { return v.Precision }).(pulumi.Float64Output)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project to associate with the model.
func (o ModelOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *Model) pulumi.StringOutput { return v.ProjectId }).(pulumi.StringOutput)
}

// Recall of the trained model
func (o ModelOutput) Recall() pulumi.Float64Output {
	return o.ApplyT(func(v *Model) pulumi.Float64Output { return v.Recall }).(pulumi.Float64Output)
}

// The current state of the Model.
func (o ModelOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *Model) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o ModelOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v *Model) pulumi.MapOutput { return v.SystemTags }).(pulumi.MapOutput)
}

// Total number of testing Images
func (o ModelOutput) TestImageCount() pulumi.IntOutput {
	return o.ApplyT(func(v *Model) pulumi.IntOutput { return v.TestImageCount }).(pulumi.IntOutput)
}

// The base entity for a Dataset, which is the input for Model creation.
func (o ModelOutput) TestingDataset() ModelTestingDatasetOutput {
	return o.ApplyT(func(v *Model) ModelTestingDatasetOutput { return v.TestingDataset }).(ModelTestingDatasetOutput)
}

// The time the Model was created. An RFC3339 formatted datetime string
func (o ModelOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *Model) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the Model was updated. An RFC3339 formatted datetime string
func (o ModelOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *Model) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

// Total number of training Images
func (o ModelOutput) TotalImageCount() pulumi.IntOutput {
	return o.ApplyT(func(v *Model) pulumi.IntOutput { return v.TotalImageCount }).(pulumi.IntOutput)
}

// Total hours actually used for training
func (o ModelOutput) TrainedDurationInHours() pulumi.Float64Output {
	return o.ApplyT(func(v *Model) pulumi.Float64Output { return v.TrainedDurationInHours }).(pulumi.Float64Output)
}

// The base entity for a Dataset, which is the input for Model creation.
func (o ModelOutput) TrainingDataset() ModelTrainingDatasetOutput {
	return o.ApplyT(func(v *Model) ModelTrainingDatasetOutput { return v.TrainingDataset }).(ModelTrainingDatasetOutput)
}

// The base entity for a Dataset, which is the input for Model creation.
func (o ModelOutput) ValidationDataset() ModelValidationDatasetOutput {
	return o.ApplyT(func(v *Model) ModelValidationDatasetOutput { return v.ValidationDataset }).(ModelValidationDatasetOutput)
}

type ModelArrayOutput struct{ *pulumi.OutputState }

func (ModelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Model)(nil)).Elem()
}

func (o ModelArrayOutput) ToModelArrayOutput() ModelArrayOutput {
	return o
}

func (o ModelArrayOutput) ToModelArrayOutputWithContext(ctx context.Context) ModelArrayOutput {
	return o
}

func (o ModelArrayOutput) Index(i pulumi.IntInput) ModelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Model {
		return vs[0].([]*Model)[vs[1].(int)]
	}).(ModelOutput)
}

type ModelMapOutput struct{ *pulumi.OutputState }

func (ModelMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Model)(nil)).Elem()
}

func (o ModelMapOutput) ToModelMapOutput() ModelMapOutput {
	return o
}

func (o ModelMapOutput) ToModelMapOutputWithContext(ctx context.Context) ModelMapOutput {
	return o
}

func (o ModelMapOutput) MapIndex(k pulumi.StringInput) ModelOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Model {
		return vs[0].(map[string]*Model)[vs[1].(string)]
	}).(ModelOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ModelInput)(nil)).Elem(), &Model{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelArrayInput)(nil)).Elem(), ModelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelMapInput)(nil)).Elem(), ModelMap{})
	pulumi.RegisterOutputType(ModelOutput{})
	pulumi.RegisterOutputType(ModelArrayOutput{})
	pulumi.RegisterOutputType(ModelMapOutput{})
}
