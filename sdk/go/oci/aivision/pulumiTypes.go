// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aivision

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ModelTestingDataset struct {
	// The name of the ObjectStorage bucket that contains the input data file.
	Bucket *string `pulumi:"bucket"`
	// The OCID of the Data Science Labeling Dataset.
	DatasetId *string `pulumi:"datasetId"`
	// Type of the Dataset.
	DatasetType string `pulumi:"datasetType"`
	// The namespace name of the ObjectStorage bucket that contains the input data file.
	NamespaceName *string `pulumi:"namespaceName"`
	// The object name of the input data file.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Object *string `pulumi:"object"`
}

// ModelTestingDatasetInput is an input type that accepts ModelTestingDatasetArgs and ModelTestingDatasetOutput values.
// You can construct a concrete instance of `ModelTestingDatasetInput` via:
//
//	ModelTestingDatasetArgs{...}
type ModelTestingDatasetInput interface {
	pulumi.Input

	ToModelTestingDatasetOutput() ModelTestingDatasetOutput
	ToModelTestingDatasetOutputWithContext(context.Context) ModelTestingDatasetOutput
}

type ModelTestingDatasetArgs struct {
	// The name of the ObjectStorage bucket that contains the input data file.
	Bucket pulumi.StringPtrInput `pulumi:"bucket"`
	// The OCID of the Data Science Labeling Dataset.
	DatasetId pulumi.StringPtrInput `pulumi:"datasetId"`
	// Type of the Dataset.
	DatasetType pulumi.StringInput `pulumi:"datasetType"`
	// The namespace name of the ObjectStorage bucket that contains the input data file.
	NamespaceName pulumi.StringPtrInput `pulumi:"namespaceName"`
	// The object name of the input data file.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Object pulumi.StringPtrInput `pulumi:"object"`
}

func (ModelTestingDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelTestingDataset)(nil)).Elem()
}

func (i ModelTestingDatasetArgs) ToModelTestingDatasetOutput() ModelTestingDatasetOutput {
	return i.ToModelTestingDatasetOutputWithContext(context.Background())
}

func (i ModelTestingDatasetArgs) ToModelTestingDatasetOutputWithContext(ctx context.Context) ModelTestingDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelTestingDatasetOutput)
}

func (i ModelTestingDatasetArgs) ToModelTestingDatasetPtrOutput() ModelTestingDatasetPtrOutput {
	return i.ToModelTestingDatasetPtrOutputWithContext(context.Background())
}

func (i ModelTestingDatasetArgs) ToModelTestingDatasetPtrOutputWithContext(ctx context.Context) ModelTestingDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelTestingDatasetOutput).ToModelTestingDatasetPtrOutputWithContext(ctx)
}

// ModelTestingDatasetPtrInput is an input type that accepts ModelTestingDatasetArgs, ModelTestingDatasetPtr and ModelTestingDatasetPtrOutput values.
// You can construct a concrete instance of `ModelTestingDatasetPtrInput` via:
//
//	        ModelTestingDatasetArgs{...}
//
//	or:
//
//	        nil
type ModelTestingDatasetPtrInput interface {
	pulumi.Input

	ToModelTestingDatasetPtrOutput() ModelTestingDatasetPtrOutput
	ToModelTestingDatasetPtrOutputWithContext(context.Context) ModelTestingDatasetPtrOutput
}

type modelTestingDatasetPtrType ModelTestingDatasetArgs

func ModelTestingDatasetPtr(v *ModelTestingDatasetArgs) ModelTestingDatasetPtrInput {
	return (*modelTestingDatasetPtrType)(v)
}

func (*modelTestingDatasetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelTestingDataset)(nil)).Elem()
}

func (i *modelTestingDatasetPtrType) ToModelTestingDatasetPtrOutput() ModelTestingDatasetPtrOutput {
	return i.ToModelTestingDatasetPtrOutputWithContext(context.Background())
}

func (i *modelTestingDatasetPtrType) ToModelTestingDatasetPtrOutputWithContext(ctx context.Context) ModelTestingDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelTestingDatasetPtrOutput)
}

type ModelTestingDatasetOutput struct{ *pulumi.OutputState }

func (ModelTestingDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelTestingDataset)(nil)).Elem()
}

func (o ModelTestingDatasetOutput) ToModelTestingDatasetOutput() ModelTestingDatasetOutput {
	return o
}

func (o ModelTestingDatasetOutput) ToModelTestingDatasetOutputWithContext(ctx context.Context) ModelTestingDatasetOutput {
	return o
}

func (o ModelTestingDatasetOutput) ToModelTestingDatasetPtrOutput() ModelTestingDatasetPtrOutput {
	return o.ToModelTestingDatasetPtrOutputWithContext(context.Background())
}

func (o ModelTestingDatasetOutput) ToModelTestingDatasetPtrOutputWithContext(ctx context.Context) ModelTestingDatasetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelTestingDataset) *ModelTestingDataset {
		return &v
	}).(ModelTestingDatasetPtrOutput)
}

// The name of the ObjectStorage bucket that contains the input data file.
func (o ModelTestingDatasetOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelTestingDataset) *string { return v.Bucket }).(pulumi.StringPtrOutput)
}

// The OCID of the Data Science Labeling Dataset.
func (o ModelTestingDatasetOutput) DatasetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelTestingDataset) *string { return v.DatasetId }).(pulumi.StringPtrOutput)
}

// Type of the Dataset.
func (o ModelTestingDatasetOutput) DatasetType() pulumi.StringOutput {
	return o.ApplyT(func(v ModelTestingDataset) string { return v.DatasetType }).(pulumi.StringOutput)
}

// The namespace name of the ObjectStorage bucket that contains the input data file.
func (o ModelTestingDatasetOutput) NamespaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelTestingDataset) *string { return v.NamespaceName }).(pulumi.StringPtrOutput)
}

// The object name of the input data file.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ModelTestingDatasetOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelTestingDataset) *string { return v.Object }).(pulumi.StringPtrOutput)
}

type ModelTestingDatasetPtrOutput struct{ *pulumi.OutputState }

func (ModelTestingDatasetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelTestingDataset)(nil)).Elem()
}

func (o ModelTestingDatasetPtrOutput) ToModelTestingDatasetPtrOutput() ModelTestingDatasetPtrOutput {
	return o
}

func (o ModelTestingDatasetPtrOutput) ToModelTestingDatasetPtrOutputWithContext(ctx context.Context) ModelTestingDatasetPtrOutput {
	return o
}

func (o ModelTestingDatasetPtrOutput) Elem() ModelTestingDatasetOutput {
	return o.ApplyT(func(v *ModelTestingDataset) ModelTestingDataset {
		if v != nil {
			return *v
		}
		var ret ModelTestingDataset
		return ret
	}).(ModelTestingDatasetOutput)
}

// The name of the ObjectStorage bucket that contains the input data file.
func (o ModelTestingDatasetPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelTestingDataset) *string {
		if v == nil {
			return nil
		}
		return v.Bucket
	}).(pulumi.StringPtrOutput)
}

// The OCID of the Data Science Labeling Dataset.
func (o ModelTestingDatasetPtrOutput) DatasetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelTestingDataset) *string {
		if v == nil {
			return nil
		}
		return v.DatasetId
	}).(pulumi.StringPtrOutput)
}

// Type of the Dataset.
func (o ModelTestingDatasetPtrOutput) DatasetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelTestingDataset) *string {
		if v == nil {
			return nil
		}
		return &v.DatasetType
	}).(pulumi.StringPtrOutput)
}

// The namespace name of the ObjectStorage bucket that contains the input data file.
func (o ModelTestingDatasetPtrOutput) NamespaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelTestingDataset) *string {
		if v == nil {
			return nil
		}
		return v.NamespaceName
	}).(pulumi.StringPtrOutput)
}

// The object name of the input data file.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ModelTestingDatasetPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelTestingDataset) *string {
		if v == nil {
			return nil
		}
		return v.Object
	}).(pulumi.StringPtrOutput)
}

type ModelTrainingDataset struct {
	// The name of the ObjectStorage bucket that contains the input data file.
	Bucket *string `pulumi:"bucket"`
	// The OCID of the Data Science Labeling Dataset.
	DatasetId *string `pulumi:"datasetId"`
	// Type of the Dataset.
	DatasetType string `pulumi:"datasetType"`
	// The namespace name of the ObjectStorage bucket that contains the input data file.
	NamespaceName *string `pulumi:"namespaceName"`
	// The object name of the input data file.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Object *string `pulumi:"object"`
}

// ModelTrainingDatasetInput is an input type that accepts ModelTrainingDatasetArgs and ModelTrainingDatasetOutput values.
// You can construct a concrete instance of `ModelTrainingDatasetInput` via:
//
//	ModelTrainingDatasetArgs{...}
type ModelTrainingDatasetInput interface {
	pulumi.Input

	ToModelTrainingDatasetOutput() ModelTrainingDatasetOutput
	ToModelTrainingDatasetOutputWithContext(context.Context) ModelTrainingDatasetOutput
}

type ModelTrainingDatasetArgs struct {
	// The name of the ObjectStorage bucket that contains the input data file.
	Bucket pulumi.StringPtrInput `pulumi:"bucket"`
	// The OCID of the Data Science Labeling Dataset.
	DatasetId pulumi.StringPtrInput `pulumi:"datasetId"`
	// Type of the Dataset.
	DatasetType pulumi.StringInput `pulumi:"datasetType"`
	// The namespace name of the ObjectStorage bucket that contains the input data file.
	NamespaceName pulumi.StringPtrInput `pulumi:"namespaceName"`
	// The object name of the input data file.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Object pulumi.StringPtrInput `pulumi:"object"`
}

func (ModelTrainingDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelTrainingDataset)(nil)).Elem()
}

func (i ModelTrainingDatasetArgs) ToModelTrainingDatasetOutput() ModelTrainingDatasetOutput {
	return i.ToModelTrainingDatasetOutputWithContext(context.Background())
}

func (i ModelTrainingDatasetArgs) ToModelTrainingDatasetOutputWithContext(ctx context.Context) ModelTrainingDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelTrainingDatasetOutput)
}

func (i ModelTrainingDatasetArgs) ToModelTrainingDatasetPtrOutput() ModelTrainingDatasetPtrOutput {
	return i.ToModelTrainingDatasetPtrOutputWithContext(context.Background())
}

func (i ModelTrainingDatasetArgs) ToModelTrainingDatasetPtrOutputWithContext(ctx context.Context) ModelTrainingDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelTrainingDatasetOutput).ToModelTrainingDatasetPtrOutputWithContext(ctx)
}

// ModelTrainingDatasetPtrInput is an input type that accepts ModelTrainingDatasetArgs, ModelTrainingDatasetPtr and ModelTrainingDatasetPtrOutput values.
// You can construct a concrete instance of `ModelTrainingDatasetPtrInput` via:
//
//	        ModelTrainingDatasetArgs{...}
//
//	or:
//
//	        nil
type ModelTrainingDatasetPtrInput interface {
	pulumi.Input

	ToModelTrainingDatasetPtrOutput() ModelTrainingDatasetPtrOutput
	ToModelTrainingDatasetPtrOutputWithContext(context.Context) ModelTrainingDatasetPtrOutput
}

type modelTrainingDatasetPtrType ModelTrainingDatasetArgs

func ModelTrainingDatasetPtr(v *ModelTrainingDatasetArgs) ModelTrainingDatasetPtrInput {
	return (*modelTrainingDatasetPtrType)(v)
}

func (*modelTrainingDatasetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelTrainingDataset)(nil)).Elem()
}

func (i *modelTrainingDatasetPtrType) ToModelTrainingDatasetPtrOutput() ModelTrainingDatasetPtrOutput {
	return i.ToModelTrainingDatasetPtrOutputWithContext(context.Background())
}

func (i *modelTrainingDatasetPtrType) ToModelTrainingDatasetPtrOutputWithContext(ctx context.Context) ModelTrainingDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelTrainingDatasetPtrOutput)
}

type ModelTrainingDatasetOutput struct{ *pulumi.OutputState }

func (ModelTrainingDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelTrainingDataset)(nil)).Elem()
}

func (o ModelTrainingDatasetOutput) ToModelTrainingDatasetOutput() ModelTrainingDatasetOutput {
	return o
}

func (o ModelTrainingDatasetOutput) ToModelTrainingDatasetOutputWithContext(ctx context.Context) ModelTrainingDatasetOutput {
	return o
}

func (o ModelTrainingDatasetOutput) ToModelTrainingDatasetPtrOutput() ModelTrainingDatasetPtrOutput {
	return o.ToModelTrainingDatasetPtrOutputWithContext(context.Background())
}

func (o ModelTrainingDatasetOutput) ToModelTrainingDatasetPtrOutputWithContext(ctx context.Context) ModelTrainingDatasetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelTrainingDataset) *ModelTrainingDataset {
		return &v
	}).(ModelTrainingDatasetPtrOutput)
}

// The name of the ObjectStorage bucket that contains the input data file.
func (o ModelTrainingDatasetOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelTrainingDataset) *string { return v.Bucket }).(pulumi.StringPtrOutput)
}

// The OCID of the Data Science Labeling Dataset.
func (o ModelTrainingDatasetOutput) DatasetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelTrainingDataset) *string { return v.DatasetId }).(pulumi.StringPtrOutput)
}

// Type of the Dataset.
func (o ModelTrainingDatasetOutput) DatasetType() pulumi.StringOutput {
	return o.ApplyT(func(v ModelTrainingDataset) string { return v.DatasetType }).(pulumi.StringOutput)
}

// The namespace name of the ObjectStorage bucket that contains the input data file.
func (o ModelTrainingDatasetOutput) NamespaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelTrainingDataset) *string { return v.NamespaceName }).(pulumi.StringPtrOutput)
}

// The object name of the input data file.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ModelTrainingDatasetOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelTrainingDataset) *string { return v.Object }).(pulumi.StringPtrOutput)
}

type ModelTrainingDatasetPtrOutput struct{ *pulumi.OutputState }

func (ModelTrainingDatasetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelTrainingDataset)(nil)).Elem()
}

func (o ModelTrainingDatasetPtrOutput) ToModelTrainingDatasetPtrOutput() ModelTrainingDatasetPtrOutput {
	return o
}

func (o ModelTrainingDatasetPtrOutput) ToModelTrainingDatasetPtrOutputWithContext(ctx context.Context) ModelTrainingDatasetPtrOutput {
	return o
}

func (o ModelTrainingDatasetPtrOutput) Elem() ModelTrainingDatasetOutput {
	return o.ApplyT(func(v *ModelTrainingDataset) ModelTrainingDataset {
		if v != nil {
			return *v
		}
		var ret ModelTrainingDataset
		return ret
	}).(ModelTrainingDatasetOutput)
}

// The name of the ObjectStorage bucket that contains the input data file.
func (o ModelTrainingDatasetPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelTrainingDataset) *string {
		if v == nil {
			return nil
		}
		return v.Bucket
	}).(pulumi.StringPtrOutput)
}

// The OCID of the Data Science Labeling Dataset.
func (o ModelTrainingDatasetPtrOutput) DatasetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelTrainingDataset) *string {
		if v == nil {
			return nil
		}
		return v.DatasetId
	}).(pulumi.StringPtrOutput)
}

// Type of the Dataset.
func (o ModelTrainingDatasetPtrOutput) DatasetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelTrainingDataset) *string {
		if v == nil {
			return nil
		}
		return &v.DatasetType
	}).(pulumi.StringPtrOutput)
}

// The namespace name of the ObjectStorage bucket that contains the input data file.
func (o ModelTrainingDatasetPtrOutput) NamespaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelTrainingDataset) *string {
		if v == nil {
			return nil
		}
		return v.NamespaceName
	}).(pulumi.StringPtrOutput)
}

// The object name of the input data file.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ModelTrainingDatasetPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelTrainingDataset) *string {
		if v == nil {
			return nil
		}
		return v.Object
	}).(pulumi.StringPtrOutput)
}

type ModelValidationDataset struct {
	// The name of the ObjectStorage bucket that contains the input data file.
	Bucket *string `pulumi:"bucket"`
	// The OCID of the Data Science Labeling Dataset.
	DatasetId *string `pulumi:"datasetId"`
	// Type of the Dataset.
	DatasetType string `pulumi:"datasetType"`
	// The namespace name of the ObjectStorage bucket that contains the input data file.
	NamespaceName *string `pulumi:"namespaceName"`
	// The object name of the input data file.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Object *string `pulumi:"object"`
}

// ModelValidationDatasetInput is an input type that accepts ModelValidationDatasetArgs and ModelValidationDatasetOutput values.
// You can construct a concrete instance of `ModelValidationDatasetInput` via:
//
//	ModelValidationDatasetArgs{...}
type ModelValidationDatasetInput interface {
	pulumi.Input

	ToModelValidationDatasetOutput() ModelValidationDatasetOutput
	ToModelValidationDatasetOutputWithContext(context.Context) ModelValidationDatasetOutput
}

type ModelValidationDatasetArgs struct {
	// The name of the ObjectStorage bucket that contains the input data file.
	Bucket pulumi.StringPtrInput `pulumi:"bucket"`
	// The OCID of the Data Science Labeling Dataset.
	DatasetId pulumi.StringPtrInput `pulumi:"datasetId"`
	// Type of the Dataset.
	DatasetType pulumi.StringInput `pulumi:"datasetType"`
	// The namespace name of the ObjectStorage bucket that contains the input data file.
	NamespaceName pulumi.StringPtrInput `pulumi:"namespaceName"`
	// The object name of the input data file.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Object pulumi.StringPtrInput `pulumi:"object"`
}

func (ModelValidationDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelValidationDataset)(nil)).Elem()
}

func (i ModelValidationDatasetArgs) ToModelValidationDatasetOutput() ModelValidationDatasetOutput {
	return i.ToModelValidationDatasetOutputWithContext(context.Background())
}

func (i ModelValidationDatasetArgs) ToModelValidationDatasetOutputWithContext(ctx context.Context) ModelValidationDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelValidationDatasetOutput)
}

func (i ModelValidationDatasetArgs) ToModelValidationDatasetPtrOutput() ModelValidationDatasetPtrOutput {
	return i.ToModelValidationDatasetPtrOutputWithContext(context.Background())
}

func (i ModelValidationDatasetArgs) ToModelValidationDatasetPtrOutputWithContext(ctx context.Context) ModelValidationDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelValidationDatasetOutput).ToModelValidationDatasetPtrOutputWithContext(ctx)
}

// ModelValidationDatasetPtrInput is an input type that accepts ModelValidationDatasetArgs, ModelValidationDatasetPtr and ModelValidationDatasetPtrOutput values.
// You can construct a concrete instance of `ModelValidationDatasetPtrInput` via:
//
//	        ModelValidationDatasetArgs{...}
//
//	or:
//
//	        nil
type ModelValidationDatasetPtrInput interface {
	pulumi.Input

	ToModelValidationDatasetPtrOutput() ModelValidationDatasetPtrOutput
	ToModelValidationDatasetPtrOutputWithContext(context.Context) ModelValidationDatasetPtrOutput
}

type modelValidationDatasetPtrType ModelValidationDatasetArgs

func ModelValidationDatasetPtr(v *ModelValidationDatasetArgs) ModelValidationDatasetPtrInput {
	return (*modelValidationDatasetPtrType)(v)
}

func (*modelValidationDatasetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelValidationDataset)(nil)).Elem()
}

func (i *modelValidationDatasetPtrType) ToModelValidationDatasetPtrOutput() ModelValidationDatasetPtrOutput {
	return i.ToModelValidationDatasetPtrOutputWithContext(context.Background())
}

func (i *modelValidationDatasetPtrType) ToModelValidationDatasetPtrOutputWithContext(ctx context.Context) ModelValidationDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelValidationDatasetPtrOutput)
}

type ModelValidationDatasetOutput struct{ *pulumi.OutputState }

func (ModelValidationDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelValidationDataset)(nil)).Elem()
}

func (o ModelValidationDatasetOutput) ToModelValidationDatasetOutput() ModelValidationDatasetOutput {
	return o
}

func (o ModelValidationDatasetOutput) ToModelValidationDatasetOutputWithContext(ctx context.Context) ModelValidationDatasetOutput {
	return o
}

func (o ModelValidationDatasetOutput) ToModelValidationDatasetPtrOutput() ModelValidationDatasetPtrOutput {
	return o.ToModelValidationDatasetPtrOutputWithContext(context.Background())
}

func (o ModelValidationDatasetOutput) ToModelValidationDatasetPtrOutputWithContext(ctx context.Context) ModelValidationDatasetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelValidationDataset) *ModelValidationDataset {
		return &v
	}).(ModelValidationDatasetPtrOutput)
}

// The name of the ObjectStorage bucket that contains the input data file.
func (o ModelValidationDatasetOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelValidationDataset) *string { return v.Bucket }).(pulumi.StringPtrOutput)
}

// The OCID of the Data Science Labeling Dataset.
func (o ModelValidationDatasetOutput) DatasetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelValidationDataset) *string { return v.DatasetId }).(pulumi.StringPtrOutput)
}

// Type of the Dataset.
func (o ModelValidationDatasetOutput) DatasetType() pulumi.StringOutput {
	return o.ApplyT(func(v ModelValidationDataset) string { return v.DatasetType }).(pulumi.StringOutput)
}

// The namespace name of the ObjectStorage bucket that contains the input data file.
func (o ModelValidationDatasetOutput) NamespaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelValidationDataset) *string { return v.NamespaceName }).(pulumi.StringPtrOutput)
}

// The object name of the input data file.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ModelValidationDatasetOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelValidationDataset) *string { return v.Object }).(pulumi.StringPtrOutput)
}

type ModelValidationDatasetPtrOutput struct{ *pulumi.OutputState }

func (ModelValidationDatasetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelValidationDataset)(nil)).Elem()
}

func (o ModelValidationDatasetPtrOutput) ToModelValidationDatasetPtrOutput() ModelValidationDatasetPtrOutput {
	return o
}

func (o ModelValidationDatasetPtrOutput) ToModelValidationDatasetPtrOutputWithContext(ctx context.Context) ModelValidationDatasetPtrOutput {
	return o
}

func (o ModelValidationDatasetPtrOutput) Elem() ModelValidationDatasetOutput {
	return o.ApplyT(func(v *ModelValidationDataset) ModelValidationDataset {
		if v != nil {
			return *v
		}
		var ret ModelValidationDataset
		return ret
	}).(ModelValidationDatasetOutput)
}

// The name of the ObjectStorage bucket that contains the input data file.
func (o ModelValidationDatasetPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelValidationDataset) *string {
		if v == nil {
			return nil
		}
		return v.Bucket
	}).(pulumi.StringPtrOutput)
}

// The OCID of the Data Science Labeling Dataset.
func (o ModelValidationDatasetPtrOutput) DatasetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelValidationDataset) *string {
		if v == nil {
			return nil
		}
		return v.DatasetId
	}).(pulumi.StringPtrOutput)
}

// Type of the Dataset.
func (o ModelValidationDatasetPtrOutput) DatasetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelValidationDataset) *string {
		if v == nil {
			return nil
		}
		return &v.DatasetType
	}).(pulumi.StringPtrOutput)
}

// The namespace name of the ObjectStorage bucket that contains the input data file.
func (o ModelValidationDatasetPtrOutput) NamespaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelValidationDataset) *string {
		if v == nil {
			return nil
		}
		return v.NamespaceName
	}).(pulumi.StringPtrOutput)
}

// The object name of the input data file.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ModelValidationDatasetPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelValidationDataset) *string {
		if v == nil {
			return nil
		}
		return v.Object
	}).(pulumi.StringPtrOutput)
}

type GetModelTestingDataset struct {
	// The name of the ObjectStorage bucket that contains the input data file.
	Bucket string `pulumi:"bucket"`
	// The OCID of the Data Science Labeling Dataset.
	DatasetId string `pulumi:"datasetId"`
	// Type of the Dataset.
	DatasetType string `pulumi:"datasetType"`
	// The namespace name of the ObjectStorage bucket that contains the input data file.
	NamespaceName string `pulumi:"namespaceName"`
	// The object name of the input data file.
	Object string `pulumi:"object"`
}

// GetModelTestingDatasetInput is an input type that accepts GetModelTestingDatasetArgs and GetModelTestingDatasetOutput values.
// You can construct a concrete instance of `GetModelTestingDatasetInput` via:
//
//	GetModelTestingDatasetArgs{...}
type GetModelTestingDatasetInput interface {
	pulumi.Input

	ToGetModelTestingDatasetOutput() GetModelTestingDatasetOutput
	ToGetModelTestingDatasetOutputWithContext(context.Context) GetModelTestingDatasetOutput
}

type GetModelTestingDatasetArgs struct {
	// The name of the ObjectStorage bucket that contains the input data file.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// The OCID of the Data Science Labeling Dataset.
	DatasetId pulumi.StringInput `pulumi:"datasetId"`
	// Type of the Dataset.
	DatasetType pulumi.StringInput `pulumi:"datasetType"`
	// The namespace name of the ObjectStorage bucket that contains the input data file.
	NamespaceName pulumi.StringInput `pulumi:"namespaceName"`
	// The object name of the input data file.
	Object pulumi.StringInput `pulumi:"object"`
}

func (GetModelTestingDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelTestingDataset)(nil)).Elem()
}

func (i GetModelTestingDatasetArgs) ToGetModelTestingDatasetOutput() GetModelTestingDatasetOutput {
	return i.ToGetModelTestingDatasetOutputWithContext(context.Background())
}

func (i GetModelTestingDatasetArgs) ToGetModelTestingDatasetOutputWithContext(ctx context.Context) GetModelTestingDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelTestingDatasetOutput)
}

// GetModelTestingDatasetArrayInput is an input type that accepts GetModelTestingDatasetArray and GetModelTestingDatasetArrayOutput values.
// You can construct a concrete instance of `GetModelTestingDatasetArrayInput` via:
//
//	GetModelTestingDatasetArray{ GetModelTestingDatasetArgs{...} }
type GetModelTestingDatasetArrayInput interface {
	pulumi.Input

	ToGetModelTestingDatasetArrayOutput() GetModelTestingDatasetArrayOutput
	ToGetModelTestingDatasetArrayOutputWithContext(context.Context) GetModelTestingDatasetArrayOutput
}

type GetModelTestingDatasetArray []GetModelTestingDatasetInput

func (GetModelTestingDatasetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelTestingDataset)(nil)).Elem()
}

func (i GetModelTestingDatasetArray) ToGetModelTestingDatasetArrayOutput() GetModelTestingDatasetArrayOutput {
	return i.ToGetModelTestingDatasetArrayOutputWithContext(context.Background())
}

func (i GetModelTestingDatasetArray) ToGetModelTestingDatasetArrayOutputWithContext(ctx context.Context) GetModelTestingDatasetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelTestingDatasetArrayOutput)
}

type GetModelTestingDatasetOutput struct{ *pulumi.OutputState }

func (GetModelTestingDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelTestingDataset)(nil)).Elem()
}

func (o GetModelTestingDatasetOutput) ToGetModelTestingDatasetOutput() GetModelTestingDatasetOutput {
	return o
}

func (o GetModelTestingDatasetOutput) ToGetModelTestingDatasetOutputWithContext(ctx context.Context) GetModelTestingDatasetOutput {
	return o
}

// The name of the ObjectStorage bucket that contains the input data file.
func (o GetModelTestingDatasetOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelTestingDataset) string { return v.Bucket }).(pulumi.StringOutput)
}

// The OCID of the Data Science Labeling Dataset.
func (o GetModelTestingDatasetOutput) DatasetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelTestingDataset) string { return v.DatasetId }).(pulumi.StringOutput)
}

// Type of the Dataset.
func (o GetModelTestingDatasetOutput) DatasetType() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelTestingDataset) string { return v.DatasetType }).(pulumi.StringOutput)
}

// The namespace name of the ObjectStorage bucket that contains the input data file.
func (o GetModelTestingDatasetOutput) NamespaceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelTestingDataset) string { return v.NamespaceName }).(pulumi.StringOutput)
}

// The object name of the input data file.
func (o GetModelTestingDatasetOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelTestingDataset) string { return v.Object }).(pulumi.StringOutput)
}

type GetModelTestingDatasetArrayOutput struct{ *pulumi.OutputState }

func (GetModelTestingDatasetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelTestingDataset)(nil)).Elem()
}

func (o GetModelTestingDatasetArrayOutput) ToGetModelTestingDatasetArrayOutput() GetModelTestingDatasetArrayOutput {
	return o
}

func (o GetModelTestingDatasetArrayOutput) ToGetModelTestingDatasetArrayOutputWithContext(ctx context.Context) GetModelTestingDatasetArrayOutput {
	return o
}

func (o GetModelTestingDatasetArrayOutput) Index(i pulumi.IntInput) GetModelTestingDatasetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelTestingDataset {
		return vs[0].([]GetModelTestingDataset)[vs[1].(int)]
	}).(GetModelTestingDatasetOutput)
}

type GetModelTrainingDataset struct {
	// The name of the ObjectStorage bucket that contains the input data file.
	Bucket string `pulumi:"bucket"`
	// The OCID of the Data Science Labeling Dataset.
	DatasetId string `pulumi:"datasetId"`
	// Type of the Dataset.
	DatasetType string `pulumi:"datasetType"`
	// The namespace name of the ObjectStorage bucket that contains the input data file.
	NamespaceName string `pulumi:"namespaceName"`
	// The object name of the input data file.
	Object string `pulumi:"object"`
}

// GetModelTrainingDatasetInput is an input type that accepts GetModelTrainingDatasetArgs and GetModelTrainingDatasetOutput values.
// You can construct a concrete instance of `GetModelTrainingDatasetInput` via:
//
//	GetModelTrainingDatasetArgs{...}
type GetModelTrainingDatasetInput interface {
	pulumi.Input

	ToGetModelTrainingDatasetOutput() GetModelTrainingDatasetOutput
	ToGetModelTrainingDatasetOutputWithContext(context.Context) GetModelTrainingDatasetOutput
}

type GetModelTrainingDatasetArgs struct {
	// The name of the ObjectStorage bucket that contains the input data file.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// The OCID of the Data Science Labeling Dataset.
	DatasetId pulumi.StringInput `pulumi:"datasetId"`
	// Type of the Dataset.
	DatasetType pulumi.StringInput `pulumi:"datasetType"`
	// The namespace name of the ObjectStorage bucket that contains the input data file.
	NamespaceName pulumi.StringInput `pulumi:"namespaceName"`
	// The object name of the input data file.
	Object pulumi.StringInput `pulumi:"object"`
}

func (GetModelTrainingDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelTrainingDataset)(nil)).Elem()
}

func (i GetModelTrainingDatasetArgs) ToGetModelTrainingDatasetOutput() GetModelTrainingDatasetOutput {
	return i.ToGetModelTrainingDatasetOutputWithContext(context.Background())
}

func (i GetModelTrainingDatasetArgs) ToGetModelTrainingDatasetOutputWithContext(ctx context.Context) GetModelTrainingDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelTrainingDatasetOutput)
}

// GetModelTrainingDatasetArrayInput is an input type that accepts GetModelTrainingDatasetArray and GetModelTrainingDatasetArrayOutput values.
// You can construct a concrete instance of `GetModelTrainingDatasetArrayInput` via:
//
//	GetModelTrainingDatasetArray{ GetModelTrainingDatasetArgs{...} }
type GetModelTrainingDatasetArrayInput interface {
	pulumi.Input

	ToGetModelTrainingDatasetArrayOutput() GetModelTrainingDatasetArrayOutput
	ToGetModelTrainingDatasetArrayOutputWithContext(context.Context) GetModelTrainingDatasetArrayOutput
}

type GetModelTrainingDatasetArray []GetModelTrainingDatasetInput

func (GetModelTrainingDatasetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelTrainingDataset)(nil)).Elem()
}

func (i GetModelTrainingDatasetArray) ToGetModelTrainingDatasetArrayOutput() GetModelTrainingDatasetArrayOutput {
	return i.ToGetModelTrainingDatasetArrayOutputWithContext(context.Background())
}

func (i GetModelTrainingDatasetArray) ToGetModelTrainingDatasetArrayOutputWithContext(ctx context.Context) GetModelTrainingDatasetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelTrainingDatasetArrayOutput)
}

type GetModelTrainingDatasetOutput struct{ *pulumi.OutputState }

func (GetModelTrainingDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelTrainingDataset)(nil)).Elem()
}

func (o GetModelTrainingDatasetOutput) ToGetModelTrainingDatasetOutput() GetModelTrainingDatasetOutput {
	return o
}

func (o GetModelTrainingDatasetOutput) ToGetModelTrainingDatasetOutputWithContext(ctx context.Context) GetModelTrainingDatasetOutput {
	return o
}

// The name of the ObjectStorage bucket that contains the input data file.
func (o GetModelTrainingDatasetOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelTrainingDataset) string { return v.Bucket }).(pulumi.StringOutput)
}

// The OCID of the Data Science Labeling Dataset.
func (o GetModelTrainingDatasetOutput) DatasetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelTrainingDataset) string { return v.DatasetId }).(pulumi.StringOutput)
}

// Type of the Dataset.
func (o GetModelTrainingDatasetOutput) DatasetType() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelTrainingDataset) string { return v.DatasetType }).(pulumi.StringOutput)
}

// The namespace name of the ObjectStorage bucket that contains the input data file.
func (o GetModelTrainingDatasetOutput) NamespaceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelTrainingDataset) string { return v.NamespaceName }).(pulumi.StringOutput)
}

// The object name of the input data file.
func (o GetModelTrainingDatasetOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelTrainingDataset) string { return v.Object }).(pulumi.StringOutput)
}

type GetModelTrainingDatasetArrayOutput struct{ *pulumi.OutputState }

func (GetModelTrainingDatasetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelTrainingDataset)(nil)).Elem()
}

func (o GetModelTrainingDatasetArrayOutput) ToGetModelTrainingDatasetArrayOutput() GetModelTrainingDatasetArrayOutput {
	return o
}

func (o GetModelTrainingDatasetArrayOutput) ToGetModelTrainingDatasetArrayOutputWithContext(ctx context.Context) GetModelTrainingDatasetArrayOutput {
	return o
}

func (o GetModelTrainingDatasetArrayOutput) Index(i pulumi.IntInput) GetModelTrainingDatasetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelTrainingDataset {
		return vs[0].([]GetModelTrainingDataset)[vs[1].(int)]
	}).(GetModelTrainingDatasetOutput)
}

type GetModelValidationDataset struct {
	// The name of the ObjectStorage bucket that contains the input data file.
	Bucket string `pulumi:"bucket"`
	// The OCID of the Data Science Labeling Dataset.
	DatasetId string `pulumi:"datasetId"`
	// Type of the Dataset.
	DatasetType string `pulumi:"datasetType"`
	// The namespace name of the ObjectStorage bucket that contains the input data file.
	NamespaceName string `pulumi:"namespaceName"`
	// The object name of the input data file.
	Object string `pulumi:"object"`
}

// GetModelValidationDatasetInput is an input type that accepts GetModelValidationDatasetArgs and GetModelValidationDatasetOutput values.
// You can construct a concrete instance of `GetModelValidationDatasetInput` via:
//
//	GetModelValidationDatasetArgs{...}
type GetModelValidationDatasetInput interface {
	pulumi.Input

	ToGetModelValidationDatasetOutput() GetModelValidationDatasetOutput
	ToGetModelValidationDatasetOutputWithContext(context.Context) GetModelValidationDatasetOutput
}

type GetModelValidationDatasetArgs struct {
	// The name of the ObjectStorage bucket that contains the input data file.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// The OCID of the Data Science Labeling Dataset.
	DatasetId pulumi.StringInput `pulumi:"datasetId"`
	// Type of the Dataset.
	DatasetType pulumi.StringInput `pulumi:"datasetType"`
	// The namespace name of the ObjectStorage bucket that contains the input data file.
	NamespaceName pulumi.StringInput `pulumi:"namespaceName"`
	// The object name of the input data file.
	Object pulumi.StringInput `pulumi:"object"`
}

func (GetModelValidationDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelValidationDataset)(nil)).Elem()
}

func (i GetModelValidationDatasetArgs) ToGetModelValidationDatasetOutput() GetModelValidationDatasetOutput {
	return i.ToGetModelValidationDatasetOutputWithContext(context.Background())
}

func (i GetModelValidationDatasetArgs) ToGetModelValidationDatasetOutputWithContext(ctx context.Context) GetModelValidationDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelValidationDatasetOutput)
}

// GetModelValidationDatasetArrayInput is an input type that accepts GetModelValidationDatasetArray and GetModelValidationDatasetArrayOutput values.
// You can construct a concrete instance of `GetModelValidationDatasetArrayInput` via:
//
//	GetModelValidationDatasetArray{ GetModelValidationDatasetArgs{...} }
type GetModelValidationDatasetArrayInput interface {
	pulumi.Input

	ToGetModelValidationDatasetArrayOutput() GetModelValidationDatasetArrayOutput
	ToGetModelValidationDatasetArrayOutputWithContext(context.Context) GetModelValidationDatasetArrayOutput
}

type GetModelValidationDatasetArray []GetModelValidationDatasetInput

func (GetModelValidationDatasetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelValidationDataset)(nil)).Elem()
}

func (i GetModelValidationDatasetArray) ToGetModelValidationDatasetArrayOutput() GetModelValidationDatasetArrayOutput {
	return i.ToGetModelValidationDatasetArrayOutputWithContext(context.Background())
}

func (i GetModelValidationDatasetArray) ToGetModelValidationDatasetArrayOutputWithContext(ctx context.Context) GetModelValidationDatasetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelValidationDatasetArrayOutput)
}

type GetModelValidationDatasetOutput struct{ *pulumi.OutputState }

func (GetModelValidationDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelValidationDataset)(nil)).Elem()
}

func (o GetModelValidationDatasetOutput) ToGetModelValidationDatasetOutput() GetModelValidationDatasetOutput {
	return o
}

func (o GetModelValidationDatasetOutput) ToGetModelValidationDatasetOutputWithContext(ctx context.Context) GetModelValidationDatasetOutput {
	return o
}

// The name of the ObjectStorage bucket that contains the input data file.
func (o GetModelValidationDatasetOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelValidationDataset) string { return v.Bucket }).(pulumi.StringOutput)
}

// The OCID of the Data Science Labeling Dataset.
func (o GetModelValidationDatasetOutput) DatasetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelValidationDataset) string { return v.DatasetId }).(pulumi.StringOutput)
}

// Type of the Dataset.
func (o GetModelValidationDatasetOutput) DatasetType() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelValidationDataset) string { return v.DatasetType }).(pulumi.StringOutput)
}

// The namespace name of the ObjectStorage bucket that contains the input data file.
func (o GetModelValidationDatasetOutput) NamespaceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelValidationDataset) string { return v.NamespaceName }).(pulumi.StringOutput)
}

// The object name of the input data file.
func (o GetModelValidationDatasetOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelValidationDataset) string { return v.Object }).(pulumi.StringOutput)
}

type GetModelValidationDatasetArrayOutput struct{ *pulumi.OutputState }

func (GetModelValidationDatasetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelValidationDataset)(nil)).Elem()
}

func (o GetModelValidationDatasetArrayOutput) ToGetModelValidationDatasetArrayOutput() GetModelValidationDatasetArrayOutput {
	return o
}

func (o GetModelValidationDatasetArrayOutput) ToGetModelValidationDatasetArrayOutputWithContext(ctx context.Context) GetModelValidationDatasetArrayOutput {
	return o
}

func (o GetModelValidationDatasetArrayOutput) Index(i pulumi.IntInput) GetModelValidationDatasetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelValidationDataset {
		return vs[0].([]GetModelValidationDataset)[vs[1].(int)]
	}).(GetModelValidationDatasetOutput)
}

type GetModelsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetModelsFilterInput is an input type that accepts GetModelsFilterArgs and GetModelsFilterOutput values.
// You can construct a concrete instance of `GetModelsFilterInput` via:
//
//	GetModelsFilterArgs{...}
type GetModelsFilterInput interface {
	pulumi.Input

	ToGetModelsFilterOutput() GetModelsFilterOutput
	ToGetModelsFilterOutputWithContext(context.Context) GetModelsFilterOutput
}

type GetModelsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetModelsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsFilter)(nil)).Elem()
}

func (i GetModelsFilterArgs) ToGetModelsFilterOutput() GetModelsFilterOutput {
	return i.ToGetModelsFilterOutputWithContext(context.Background())
}

func (i GetModelsFilterArgs) ToGetModelsFilterOutputWithContext(ctx context.Context) GetModelsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsFilterOutput)
}

// GetModelsFilterArrayInput is an input type that accepts GetModelsFilterArray and GetModelsFilterArrayOutput values.
// You can construct a concrete instance of `GetModelsFilterArrayInput` via:
//
//	GetModelsFilterArray{ GetModelsFilterArgs{...} }
type GetModelsFilterArrayInput interface {
	pulumi.Input

	ToGetModelsFilterArrayOutput() GetModelsFilterArrayOutput
	ToGetModelsFilterArrayOutputWithContext(context.Context) GetModelsFilterArrayOutput
}

type GetModelsFilterArray []GetModelsFilterInput

func (GetModelsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsFilter)(nil)).Elem()
}

func (i GetModelsFilterArray) ToGetModelsFilterArrayOutput() GetModelsFilterArrayOutput {
	return i.ToGetModelsFilterArrayOutputWithContext(context.Background())
}

func (i GetModelsFilterArray) ToGetModelsFilterArrayOutputWithContext(ctx context.Context) GetModelsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsFilterArrayOutput)
}

type GetModelsFilterOutput struct{ *pulumi.OutputState }

func (GetModelsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsFilter)(nil)).Elem()
}

func (o GetModelsFilterOutput) ToGetModelsFilterOutput() GetModelsFilterOutput {
	return o
}

func (o GetModelsFilterOutput) ToGetModelsFilterOutputWithContext(ctx context.Context) GetModelsFilterOutput {
	return o
}

func (o GetModelsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetModelsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetModelsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetModelsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetModelsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetModelsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetModelsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsFilter)(nil)).Elem()
}

func (o GetModelsFilterArrayOutput) ToGetModelsFilterArrayOutput() GetModelsFilterArrayOutput {
	return o
}

func (o GetModelsFilterArrayOutput) ToGetModelsFilterArrayOutputWithContext(ctx context.Context) GetModelsFilterArrayOutput {
	return o
}

func (o GetModelsFilterArrayOutput) Index(i pulumi.IntInput) GetModelsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelsFilter {
		return vs[0].([]GetModelsFilter)[vs[1].(int)]
	}).(GetModelsFilterOutput)
}

type GetModelsModelCollection struct {
	Items []GetModelsModelCollectionItem `pulumi:"items"`
}

// GetModelsModelCollectionInput is an input type that accepts GetModelsModelCollectionArgs and GetModelsModelCollectionOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionInput` via:
//
//	GetModelsModelCollectionArgs{...}
type GetModelsModelCollectionInput interface {
	pulumi.Input

	ToGetModelsModelCollectionOutput() GetModelsModelCollectionOutput
	ToGetModelsModelCollectionOutputWithContext(context.Context) GetModelsModelCollectionOutput
}

type GetModelsModelCollectionArgs struct {
	Items GetModelsModelCollectionItemArrayInput `pulumi:"items"`
}

func (GetModelsModelCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollection)(nil)).Elem()
}

func (i GetModelsModelCollectionArgs) ToGetModelsModelCollectionOutput() GetModelsModelCollectionOutput {
	return i.ToGetModelsModelCollectionOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionArgs) ToGetModelsModelCollectionOutputWithContext(ctx context.Context) GetModelsModelCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionOutput)
}

// GetModelsModelCollectionArrayInput is an input type that accepts GetModelsModelCollectionArray and GetModelsModelCollectionArrayOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionArrayInput` via:
//
//	GetModelsModelCollectionArray{ GetModelsModelCollectionArgs{...} }
type GetModelsModelCollectionArrayInput interface {
	pulumi.Input

	ToGetModelsModelCollectionArrayOutput() GetModelsModelCollectionArrayOutput
	ToGetModelsModelCollectionArrayOutputWithContext(context.Context) GetModelsModelCollectionArrayOutput
}

type GetModelsModelCollectionArray []GetModelsModelCollectionInput

func (GetModelsModelCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollection)(nil)).Elem()
}

func (i GetModelsModelCollectionArray) ToGetModelsModelCollectionArrayOutput() GetModelsModelCollectionArrayOutput {
	return i.ToGetModelsModelCollectionArrayOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionArray) ToGetModelsModelCollectionArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionArrayOutput)
}

type GetModelsModelCollectionOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollection)(nil)).Elem()
}

func (o GetModelsModelCollectionOutput) ToGetModelsModelCollectionOutput() GetModelsModelCollectionOutput {
	return o
}

func (o GetModelsModelCollectionOutput) ToGetModelsModelCollectionOutputWithContext(ctx context.Context) GetModelsModelCollectionOutput {
	return o
}

func (o GetModelsModelCollectionOutput) Items() GetModelsModelCollectionItemArrayOutput {
	return o.ApplyT(func(v GetModelsModelCollection) []GetModelsModelCollectionItem { return v.Items }).(GetModelsModelCollectionItemArrayOutput)
}

type GetModelsModelCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollection)(nil)).Elem()
}

func (o GetModelsModelCollectionArrayOutput) ToGetModelsModelCollectionArrayOutput() GetModelsModelCollectionArrayOutput {
	return o
}

func (o GetModelsModelCollectionArrayOutput) ToGetModelsModelCollectionArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionArrayOutput {
	return o
}

func (o GetModelsModelCollectionArrayOutput) Index(i pulumi.IntInput) GetModelsModelCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelsModelCollection {
		return vs[0].([]GetModelsModelCollection)[vs[1].(int)]
	}).(GetModelsModelCollectionOutput)
}

type GetModelsModelCollectionItem struct {
	// Average precision of the trained model
	AveragePrecision float64 `pulumi:"averagePrecision"`
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Confidence ratio of the calculation
	ConfidenceThreshold float64 `pulumi:"confidenceThreshold"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// A short description of the model.
	Description string `pulumi:"description"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// unique Model identifier
	Id string `pulumi:"id"`
	// If It's true, Training is set for recommended epochs needed for quick training.
	IsQuickMode bool `pulumi:"isQuickMode"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// The maximum duration in hours for which the training will run.
	MaxTrainingDurationInHours float64 `pulumi:"maxTrainingDurationInHours"`
	// Complete Training Metrics for successful trained model
	Metrics string `pulumi:"metrics"`
	// Type of the Model.
	ModelType string `pulumi:"modelType"`
	// The version of the model
	ModelVersion string `pulumi:"modelVersion"`
	// Precision of the trained model
	Precision float64 `pulumi:"precision"`
	// The ID of the project for which to list the objects.
	ProjectId string `pulumi:"projectId"`
	// Recall of the trained model
	Recall float64 `pulumi:"recall"`
	// A filter to return only resources their lifecycleState matches the given lifecycleState.
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// Total number of testing Images
	TestImageCount int `pulumi:"testImageCount"`
	// The base entity for a Dataset, which is the input for Model creation.
	TestingDatasets []GetModelsModelCollectionItemTestingDataset `pulumi:"testingDatasets"`
	// The time the Model was created. An RFC3339 formatted datetime string
	TimeCreated string `pulumi:"timeCreated"`
	// The time the Model was updated. An RFC3339 formatted datetime string
	TimeUpdated string `pulumi:"timeUpdated"`
	// Total number of training Images
	TotalImageCount int `pulumi:"totalImageCount"`
	// Total hours actually used for training
	TrainedDurationInHours float64 `pulumi:"trainedDurationInHours"`
	// The base entity for a Dataset, which is the input for Model creation.
	TrainingDatasets []GetModelsModelCollectionItemTrainingDataset `pulumi:"trainingDatasets"`
	// The base entity for a Dataset, which is the input for Model creation.
	ValidationDatasets []GetModelsModelCollectionItemValidationDataset `pulumi:"validationDatasets"`
}

// GetModelsModelCollectionItemInput is an input type that accepts GetModelsModelCollectionItemArgs and GetModelsModelCollectionItemOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemInput` via:
//
//	GetModelsModelCollectionItemArgs{...}
type GetModelsModelCollectionItemInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemOutput() GetModelsModelCollectionItemOutput
	ToGetModelsModelCollectionItemOutputWithContext(context.Context) GetModelsModelCollectionItemOutput
}

type GetModelsModelCollectionItemArgs struct {
	// Average precision of the trained model
	AveragePrecision pulumi.Float64Input `pulumi:"averagePrecision"`
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Confidence ratio of the calculation
	ConfidenceThreshold pulumi.Float64Input `pulumi:"confidenceThreshold"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// A short description of the model.
	Description pulumi.StringInput `pulumi:"description"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// unique Model identifier
	Id pulumi.StringInput `pulumi:"id"`
	// If It's true, Training is set for recommended epochs needed for quick training.
	IsQuickMode pulumi.BoolInput `pulumi:"isQuickMode"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// The maximum duration in hours for which the training will run.
	MaxTrainingDurationInHours pulumi.Float64Input `pulumi:"maxTrainingDurationInHours"`
	// Complete Training Metrics for successful trained model
	Metrics pulumi.StringInput `pulumi:"metrics"`
	// Type of the Model.
	ModelType pulumi.StringInput `pulumi:"modelType"`
	// The version of the model
	ModelVersion pulumi.StringInput `pulumi:"modelVersion"`
	// Precision of the trained model
	Precision pulumi.Float64Input `pulumi:"precision"`
	// The ID of the project for which to list the objects.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// Recall of the trained model
	Recall pulumi.Float64Input `pulumi:"recall"`
	// A filter to return only resources their lifecycleState matches the given lifecycleState.
	State pulumi.StringInput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput `pulumi:"systemTags"`
	// Total number of testing Images
	TestImageCount pulumi.IntInput `pulumi:"testImageCount"`
	// The base entity for a Dataset, which is the input for Model creation.
	TestingDatasets GetModelsModelCollectionItemTestingDatasetArrayInput `pulumi:"testingDatasets"`
	// The time the Model was created. An RFC3339 formatted datetime string
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time the Model was updated. An RFC3339 formatted datetime string
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
	// Total number of training Images
	TotalImageCount pulumi.IntInput `pulumi:"totalImageCount"`
	// Total hours actually used for training
	TrainedDurationInHours pulumi.Float64Input `pulumi:"trainedDurationInHours"`
	// The base entity for a Dataset, which is the input for Model creation.
	TrainingDatasets GetModelsModelCollectionItemTrainingDatasetArrayInput `pulumi:"trainingDatasets"`
	// The base entity for a Dataset, which is the input for Model creation.
	ValidationDatasets GetModelsModelCollectionItemValidationDatasetArrayInput `pulumi:"validationDatasets"`
}

func (GetModelsModelCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItem)(nil)).Elem()
}

func (i GetModelsModelCollectionItemArgs) ToGetModelsModelCollectionItemOutput() GetModelsModelCollectionItemOutput {
	return i.ToGetModelsModelCollectionItemOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemArgs) ToGetModelsModelCollectionItemOutputWithContext(ctx context.Context) GetModelsModelCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemOutput)
}

// GetModelsModelCollectionItemArrayInput is an input type that accepts GetModelsModelCollectionItemArray and GetModelsModelCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemArrayInput` via:
//
//	GetModelsModelCollectionItemArray{ GetModelsModelCollectionItemArgs{...} }
type GetModelsModelCollectionItemArrayInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemArrayOutput() GetModelsModelCollectionItemArrayOutput
	ToGetModelsModelCollectionItemArrayOutputWithContext(context.Context) GetModelsModelCollectionItemArrayOutput
}

type GetModelsModelCollectionItemArray []GetModelsModelCollectionItemInput

func (GetModelsModelCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItem)(nil)).Elem()
}

func (i GetModelsModelCollectionItemArray) ToGetModelsModelCollectionItemArrayOutput() GetModelsModelCollectionItemArrayOutput {
	return i.ToGetModelsModelCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemArray) ToGetModelsModelCollectionItemArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemArrayOutput)
}

type GetModelsModelCollectionItemOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItem)(nil)).Elem()
}

func (o GetModelsModelCollectionItemOutput) ToGetModelsModelCollectionItemOutput() GetModelsModelCollectionItemOutput {
	return o
}

func (o GetModelsModelCollectionItemOutput) ToGetModelsModelCollectionItemOutputWithContext(ctx context.Context) GetModelsModelCollectionItemOutput {
	return o
}

// Average precision of the trained model
func (o GetModelsModelCollectionItemOutput) AveragePrecision() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelsModelCollectionItem) float64 { return v.AveragePrecision }).(pulumi.Float64Output)
}

// The ID of the compartment in which to list resources.
func (o GetModelsModelCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Confidence ratio of the calculation
func (o GetModelsModelCollectionItemOutput) ConfidenceThreshold() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelsModelCollectionItem) float64 { return v.ConfidenceThreshold }).(pulumi.Float64Output)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetModelsModelCollectionItemOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// A short description of the model.
func (o GetModelsModelCollectionItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) string { return v.Description }).(pulumi.StringOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetModelsModelCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetModelsModelCollectionItemOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// unique Model identifier
func (o GetModelsModelCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// If It's true, Training is set for recommended epochs needed for quick training.
func (o GetModelsModelCollectionItemOutput) IsQuickMode() pulumi.BoolOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) bool { return v.IsQuickMode }).(pulumi.BoolOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetModelsModelCollectionItemOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The maximum duration in hours for which the training will run.
func (o GetModelsModelCollectionItemOutput) MaxTrainingDurationInHours() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelsModelCollectionItem) float64 { return v.MaxTrainingDurationInHours }).(pulumi.Float64Output)
}

// Complete Training Metrics for successful trained model
func (o GetModelsModelCollectionItemOutput) Metrics() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) string { return v.Metrics }).(pulumi.StringOutput)
}

// Type of the Model.
func (o GetModelsModelCollectionItemOutput) ModelType() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) string { return v.ModelType }).(pulumi.StringOutput)
}

// The version of the model
func (o GetModelsModelCollectionItemOutput) ModelVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) string { return v.ModelVersion }).(pulumi.StringOutput)
}

// Precision of the trained model
func (o GetModelsModelCollectionItemOutput) Precision() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelsModelCollectionItem) float64 { return v.Precision }).(pulumi.Float64Output)
}

// The ID of the project for which to list the objects.
func (o GetModelsModelCollectionItemOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) string { return v.ProjectId }).(pulumi.StringOutput)
}

// Recall of the trained model
func (o GetModelsModelCollectionItemOutput) Recall() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelsModelCollectionItem) float64 { return v.Recall }).(pulumi.Float64Output)
}

// A filter to return only resources their lifecycleState matches the given lifecycleState.
func (o GetModelsModelCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetModelsModelCollectionItemOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) map[string]interface{} { return v.SystemTags }).(pulumi.MapOutput)
}

// Total number of testing Images
func (o GetModelsModelCollectionItemOutput) TestImageCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) int { return v.TestImageCount }).(pulumi.IntOutput)
}

// The base entity for a Dataset, which is the input for Model creation.
func (o GetModelsModelCollectionItemOutput) TestingDatasets() GetModelsModelCollectionItemTestingDatasetArrayOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) []GetModelsModelCollectionItemTestingDataset {
		return v.TestingDatasets
	}).(GetModelsModelCollectionItemTestingDatasetArrayOutput)
}

// The time the Model was created. An RFC3339 formatted datetime string
func (o GetModelsModelCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the Model was updated. An RFC3339 formatted datetime string
func (o GetModelsModelCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// Total number of training Images
func (o GetModelsModelCollectionItemOutput) TotalImageCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) int { return v.TotalImageCount }).(pulumi.IntOutput)
}

// Total hours actually used for training
func (o GetModelsModelCollectionItemOutput) TrainedDurationInHours() pulumi.Float64Output {
	return o.ApplyT(func(v GetModelsModelCollectionItem) float64 { return v.TrainedDurationInHours }).(pulumi.Float64Output)
}

// The base entity for a Dataset, which is the input for Model creation.
func (o GetModelsModelCollectionItemOutput) TrainingDatasets() GetModelsModelCollectionItemTrainingDatasetArrayOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) []GetModelsModelCollectionItemTrainingDataset {
		return v.TrainingDatasets
	}).(GetModelsModelCollectionItemTrainingDatasetArrayOutput)
}

// The base entity for a Dataset, which is the input for Model creation.
func (o GetModelsModelCollectionItemOutput) ValidationDatasets() GetModelsModelCollectionItemValidationDatasetArrayOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItem) []GetModelsModelCollectionItemValidationDataset {
		return v.ValidationDatasets
	}).(GetModelsModelCollectionItemValidationDatasetArrayOutput)
}

type GetModelsModelCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItem)(nil)).Elem()
}

func (o GetModelsModelCollectionItemArrayOutput) ToGetModelsModelCollectionItemArrayOutput() GetModelsModelCollectionItemArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemArrayOutput) ToGetModelsModelCollectionItemArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemArrayOutput) Index(i pulumi.IntInput) GetModelsModelCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelsModelCollectionItem {
		return vs[0].([]GetModelsModelCollectionItem)[vs[1].(int)]
	}).(GetModelsModelCollectionItemOutput)
}

type GetModelsModelCollectionItemTestingDataset struct {
	// The name of the ObjectStorage bucket that contains the input data file.
	Bucket string `pulumi:"bucket"`
	// The OCID of the Data Science Labeling Dataset.
	DatasetId string `pulumi:"datasetId"`
	// Type of the Dataset.
	DatasetType   string `pulumi:"datasetType"`
	NamespaceName string `pulumi:"namespaceName"`
	// The object name of the input data file.
	Object string `pulumi:"object"`
}

// GetModelsModelCollectionItemTestingDatasetInput is an input type that accepts GetModelsModelCollectionItemTestingDatasetArgs and GetModelsModelCollectionItemTestingDatasetOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemTestingDatasetInput` via:
//
//	GetModelsModelCollectionItemTestingDatasetArgs{...}
type GetModelsModelCollectionItemTestingDatasetInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemTestingDatasetOutput() GetModelsModelCollectionItemTestingDatasetOutput
	ToGetModelsModelCollectionItemTestingDatasetOutputWithContext(context.Context) GetModelsModelCollectionItemTestingDatasetOutput
}

type GetModelsModelCollectionItemTestingDatasetArgs struct {
	// The name of the ObjectStorage bucket that contains the input data file.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// The OCID of the Data Science Labeling Dataset.
	DatasetId pulumi.StringInput `pulumi:"datasetId"`
	// Type of the Dataset.
	DatasetType   pulumi.StringInput `pulumi:"datasetType"`
	NamespaceName pulumi.StringInput `pulumi:"namespaceName"`
	// The object name of the input data file.
	Object pulumi.StringInput `pulumi:"object"`
}

func (GetModelsModelCollectionItemTestingDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItemTestingDataset)(nil)).Elem()
}

func (i GetModelsModelCollectionItemTestingDatasetArgs) ToGetModelsModelCollectionItemTestingDatasetOutput() GetModelsModelCollectionItemTestingDatasetOutput {
	return i.ToGetModelsModelCollectionItemTestingDatasetOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemTestingDatasetArgs) ToGetModelsModelCollectionItemTestingDatasetOutputWithContext(ctx context.Context) GetModelsModelCollectionItemTestingDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemTestingDatasetOutput)
}

// GetModelsModelCollectionItemTestingDatasetArrayInput is an input type that accepts GetModelsModelCollectionItemTestingDatasetArray and GetModelsModelCollectionItemTestingDatasetArrayOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemTestingDatasetArrayInput` via:
//
//	GetModelsModelCollectionItemTestingDatasetArray{ GetModelsModelCollectionItemTestingDatasetArgs{...} }
type GetModelsModelCollectionItemTestingDatasetArrayInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemTestingDatasetArrayOutput() GetModelsModelCollectionItemTestingDatasetArrayOutput
	ToGetModelsModelCollectionItemTestingDatasetArrayOutputWithContext(context.Context) GetModelsModelCollectionItemTestingDatasetArrayOutput
}

type GetModelsModelCollectionItemTestingDatasetArray []GetModelsModelCollectionItemTestingDatasetInput

func (GetModelsModelCollectionItemTestingDatasetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItemTestingDataset)(nil)).Elem()
}

func (i GetModelsModelCollectionItemTestingDatasetArray) ToGetModelsModelCollectionItemTestingDatasetArrayOutput() GetModelsModelCollectionItemTestingDatasetArrayOutput {
	return i.ToGetModelsModelCollectionItemTestingDatasetArrayOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemTestingDatasetArray) ToGetModelsModelCollectionItemTestingDatasetArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemTestingDatasetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemTestingDatasetArrayOutput)
}

type GetModelsModelCollectionItemTestingDatasetOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemTestingDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItemTestingDataset)(nil)).Elem()
}

func (o GetModelsModelCollectionItemTestingDatasetOutput) ToGetModelsModelCollectionItemTestingDatasetOutput() GetModelsModelCollectionItemTestingDatasetOutput {
	return o
}

func (o GetModelsModelCollectionItemTestingDatasetOutput) ToGetModelsModelCollectionItemTestingDatasetOutputWithContext(ctx context.Context) GetModelsModelCollectionItemTestingDatasetOutput {
	return o
}

// The name of the ObjectStorage bucket that contains the input data file.
func (o GetModelsModelCollectionItemTestingDatasetOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemTestingDataset) string { return v.Bucket }).(pulumi.StringOutput)
}

// The OCID of the Data Science Labeling Dataset.
func (o GetModelsModelCollectionItemTestingDatasetOutput) DatasetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemTestingDataset) string { return v.DatasetId }).(pulumi.StringOutput)
}

// Type of the Dataset.
func (o GetModelsModelCollectionItemTestingDatasetOutput) DatasetType() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemTestingDataset) string { return v.DatasetType }).(pulumi.StringOutput)
}

func (o GetModelsModelCollectionItemTestingDatasetOutput) NamespaceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemTestingDataset) string { return v.NamespaceName }).(pulumi.StringOutput)
}

// The object name of the input data file.
func (o GetModelsModelCollectionItemTestingDatasetOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemTestingDataset) string { return v.Object }).(pulumi.StringOutput)
}

type GetModelsModelCollectionItemTestingDatasetArrayOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemTestingDatasetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItemTestingDataset)(nil)).Elem()
}

func (o GetModelsModelCollectionItemTestingDatasetArrayOutput) ToGetModelsModelCollectionItemTestingDatasetArrayOutput() GetModelsModelCollectionItemTestingDatasetArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemTestingDatasetArrayOutput) ToGetModelsModelCollectionItemTestingDatasetArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemTestingDatasetArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemTestingDatasetArrayOutput) Index(i pulumi.IntInput) GetModelsModelCollectionItemTestingDatasetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelsModelCollectionItemTestingDataset {
		return vs[0].([]GetModelsModelCollectionItemTestingDataset)[vs[1].(int)]
	}).(GetModelsModelCollectionItemTestingDatasetOutput)
}

type GetModelsModelCollectionItemTrainingDataset struct {
	// The name of the ObjectStorage bucket that contains the input data file.
	Bucket string `pulumi:"bucket"`
	// The OCID of the Data Science Labeling Dataset.
	DatasetId string `pulumi:"datasetId"`
	// Type of the Dataset.
	DatasetType   string `pulumi:"datasetType"`
	NamespaceName string `pulumi:"namespaceName"`
	// The object name of the input data file.
	Object string `pulumi:"object"`
}

// GetModelsModelCollectionItemTrainingDatasetInput is an input type that accepts GetModelsModelCollectionItemTrainingDatasetArgs and GetModelsModelCollectionItemTrainingDatasetOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemTrainingDatasetInput` via:
//
//	GetModelsModelCollectionItemTrainingDatasetArgs{...}
type GetModelsModelCollectionItemTrainingDatasetInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemTrainingDatasetOutput() GetModelsModelCollectionItemTrainingDatasetOutput
	ToGetModelsModelCollectionItemTrainingDatasetOutputWithContext(context.Context) GetModelsModelCollectionItemTrainingDatasetOutput
}

type GetModelsModelCollectionItemTrainingDatasetArgs struct {
	// The name of the ObjectStorage bucket that contains the input data file.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// The OCID of the Data Science Labeling Dataset.
	DatasetId pulumi.StringInput `pulumi:"datasetId"`
	// Type of the Dataset.
	DatasetType   pulumi.StringInput `pulumi:"datasetType"`
	NamespaceName pulumi.StringInput `pulumi:"namespaceName"`
	// The object name of the input data file.
	Object pulumi.StringInput `pulumi:"object"`
}

func (GetModelsModelCollectionItemTrainingDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItemTrainingDataset)(nil)).Elem()
}

func (i GetModelsModelCollectionItemTrainingDatasetArgs) ToGetModelsModelCollectionItemTrainingDatasetOutput() GetModelsModelCollectionItemTrainingDatasetOutput {
	return i.ToGetModelsModelCollectionItemTrainingDatasetOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemTrainingDatasetArgs) ToGetModelsModelCollectionItemTrainingDatasetOutputWithContext(ctx context.Context) GetModelsModelCollectionItemTrainingDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemTrainingDatasetOutput)
}

// GetModelsModelCollectionItemTrainingDatasetArrayInput is an input type that accepts GetModelsModelCollectionItemTrainingDatasetArray and GetModelsModelCollectionItemTrainingDatasetArrayOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemTrainingDatasetArrayInput` via:
//
//	GetModelsModelCollectionItemTrainingDatasetArray{ GetModelsModelCollectionItemTrainingDatasetArgs{...} }
type GetModelsModelCollectionItemTrainingDatasetArrayInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemTrainingDatasetArrayOutput() GetModelsModelCollectionItemTrainingDatasetArrayOutput
	ToGetModelsModelCollectionItemTrainingDatasetArrayOutputWithContext(context.Context) GetModelsModelCollectionItemTrainingDatasetArrayOutput
}

type GetModelsModelCollectionItemTrainingDatasetArray []GetModelsModelCollectionItemTrainingDatasetInput

func (GetModelsModelCollectionItemTrainingDatasetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItemTrainingDataset)(nil)).Elem()
}

func (i GetModelsModelCollectionItemTrainingDatasetArray) ToGetModelsModelCollectionItemTrainingDatasetArrayOutput() GetModelsModelCollectionItemTrainingDatasetArrayOutput {
	return i.ToGetModelsModelCollectionItemTrainingDatasetArrayOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemTrainingDatasetArray) ToGetModelsModelCollectionItemTrainingDatasetArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemTrainingDatasetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemTrainingDatasetArrayOutput)
}

type GetModelsModelCollectionItemTrainingDatasetOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemTrainingDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItemTrainingDataset)(nil)).Elem()
}

func (o GetModelsModelCollectionItemTrainingDatasetOutput) ToGetModelsModelCollectionItemTrainingDatasetOutput() GetModelsModelCollectionItemTrainingDatasetOutput {
	return o
}

func (o GetModelsModelCollectionItemTrainingDatasetOutput) ToGetModelsModelCollectionItemTrainingDatasetOutputWithContext(ctx context.Context) GetModelsModelCollectionItemTrainingDatasetOutput {
	return o
}

// The name of the ObjectStorage bucket that contains the input data file.
func (o GetModelsModelCollectionItemTrainingDatasetOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemTrainingDataset) string { return v.Bucket }).(pulumi.StringOutput)
}

// The OCID of the Data Science Labeling Dataset.
func (o GetModelsModelCollectionItemTrainingDatasetOutput) DatasetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemTrainingDataset) string { return v.DatasetId }).(pulumi.StringOutput)
}

// Type of the Dataset.
func (o GetModelsModelCollectionItemTrainingDatasetOutput) DatasetType() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemTrainingDataset) string { return v.DatasetType }).(pulumi.StringOutput)
}

func (o GetModelsModelCollectionItemTrainingDatasetOutput) NamespaceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemTrainingDataset) string { return v.NamespaceName }).(pulumi.StringOutput)
}

// The object name of the input data file.
func (o GetModelsModelCollectionItemTrainingDatasetOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemTrainingDataset) string { return v.Object }).(pulumi.StringOutput)
}

type GetModelsModelCollectionItemTrainingDatasetArrayOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemTrainingDatasetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItemTrainingDataset)(nil)).Elem()
}

func (o GetModelsModelCollectionItemTrainingDatasetArrayOutput) ToGetModelsModelCollectionItemTrainingDatasetArrayOutput() GetModelsModelCollectionItemTrainingDatasetArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemTrainingDatasetArrayOutput) ToGetModelsModelCollectionItemTrainingDatasetArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemTrainingDatasetArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemTrainingDatasetArrayOutput) Index(i pulumi.IntInput) GetModelsModelCollectionItemTrainingDatasetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelsModelCollectionItemTrainingDataset {
		return vs[0].([]GetModelsModelCollectionItemTrainingDataset)[vs[1].(int)]
	}).(GetModelsModelCollectionItemTrainingDatasetOutput)
}

type GetModelsModelCollectionItemValidationDataset struct {
	// The name of the ObjectStorage bucket that contains the input data file.
	Bucket string `pulumi:"bucket"`
	// The OCID of the Data Science Labeling Dataset.
	DatasetId string `pulumi:"datasetId"`
	// Type of the Dataset.
	DatasetType   string `pulumi:"datasetType"`
	NamespaceName string `pulumi:"namespaceName"`
	// The object name of the input data file.
	Object string `pulumi:"object"`
}

// GetModelsModelCollectionItemValidationDatasetInput is an input type that accepts GetModelsModelCollectionItemValidationDatasetArgs and GetModelsModelCollectionItemValidationDatasetOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemValidationDatasetInput` via:
//
//	GetModelsModelCollectionItemValidationDatasetArgs{...}
type GetModelsModelCollectionItemValidationDatasetInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemValidationDatasetOutput() GetModelsModelCollectionItemValidationDatasetOutput
	ToGetModelsModelCollectionItemValidationDatasetOutputWithContext(context.Context) GetModelsModelCollectionItemValidationDatasetOutput
}

type GetModelsModelCollectionItemValidationDatasetArgs struct {
	// The name of the ObjectStorage bucket that contains the input data file.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// The OCID of the Data Science Labeling Dataset.
	DatasetId pulumi.StringInput `pulumi:"datasetId"`
	// Type of the Dataset.
	DatasetType   pulumi.StringInput `pulumi:"datasetType"`
	NamespaceName pulumi.StringInput `pulumi:"namespaceName"`
	// The object name of the input data file.
	Object pulumi.StringInput `pulumi:"object"`
}

func (GetModelsModelCollectionItemValidationDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItemValidationDataset)(nil)).Elem()
}

func (i GetModelsModelCollectionItemValidationDatasetArgs) ToGetModelsModelCollectionItemValidationDatasetOutput() GetModelsModelCollectionItemValidationDatasetOutput {
	return i.ToGetModelsModelCollectionItemValidationDatasetOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemValidationDatasetArgs) ToGetModelsModelCollectionItemValidationDatasetOutputWithContext(ctx context.Context) GetModelsModelCollectionItemValidationDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemValidationDatasetOutput)
}

// GetModelsModelCollectionItemValidationDatasetArrayInput is an input type that accepts GetModelsModelCollectionItemValidationDatasetArray and GetModelsModelCollectionItemValidationDatasetArrayOutput values.
// You can construct a concrete instance of `GetModelsModelCollectionItemValidationDatasetArrayInput` via:
//
//	GetModelsModelCollectionItemValidationDatasetArray{ GetModelsModelCollectionItemValidationDatasetArgs{...} }
type GetModelsModelCollectionItemValidationDatasetArrayInput interface {
	pulumi.Input

	ToGetModelsModelCollectionItemValidationDatasetArrayOutput() GetModelsModelCollectionItemValidationDatasetArrayOutput
	ToGetModelsModelCollectionItemValidationDatasetArrayOutputWithContext(context.Context) GetModelsModelCollectionItemValidationDatasetArrayOutput
}

type GetModelsModelCollectionItemValidationDatasetArray []GetModelsModelCollectionItemValidationDatasetInput

func (GetModelsModelCollectionItemValidationDatasetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItemValidationDataset)(nil)).Elem()
}

func (i GetModelsModelCollectionItemValidationDatasetArray) ToGetModelsModelCollectionItemValidationDatasetArrayOutput() GetModelsModelCollectionItemValidationDatasetArrayOutput {
	return i.ToGetModelsModelCollectionItemValidationDatasetArrayOutputWithContext(context.Background())
}

func (i GetModelsModelCollectionItemValidationDatasetArray) ToGetModelsModelCollectionItemValidationDatasetArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemValidationDatasetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelCollectionItemValidationDatasetArrayOutput)
}

type GetModelsModelCollectionItemValidationDatasetOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemValidationDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModelCollectionItemValidationDataset)(nil)).Elem()
}

func (o GetModelsModelCollectionItemValidationDatasetOutput) ToGetModelsModelCollectionItemValidationDatasetOutput() GetModelsModelCollectionItemValidationDatasetOutput {
	return o
}

func (o GetModelsModelCollectionItemValidationDatasetOutput) ToGetModelsModelCollectionItemValidationDatasetOutputWithContext(ctx context.Context) GetModelsModelCollectionItemValidationDatasetOutput {
	return o
}

// The name of the ObjectStorage bucket that contains the input data file.
func (o GetModelsModelCollectionItemValidationDatasetOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemValidationDataset) string { return v.Bucket }).(pulumi.StringOutput)
}

// The OCID of the Data Science Labeling Dataset.
func (o GetModelsModelCollectionItemValidationDatasetOutput) DatasetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemValidationDataset) string { return v.DatasetId }).(pulumi.StringOutput)
}

// Type of the Dataset.
func (o GetModelsModelCollectionItemValidationDatasetOutput) DatasetType() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemValidationDataset) string { return v.DatasetType }).(pulumi.StringOutput)
}

func (o GetModelsModelCollectionItemValidationDatasetOutput) NamespaceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemValidationDataset) string { return v.NamespaceName }).(pulumi.StringOutput)
}

// The object name of the input data file.
func (o GetModelsModelCollectionItemValidationDatasetOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModelCollectionItemValidationDataset) string { return v.Object }).(pulumi.StringOutput)
}

type GetModelsModelCollectionItemValidationDatasetArrayOutput struct{ *pulumi.OutputState }

func (GetModelsModelCollectionItemValidationDatasetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModelCollectionItemValidationDataset)(nil)).Elem()
}

func (o GetModelsModelCollectionItemValidationDatasetArrayOutput) ToGetModelsModelCollectionItemValidationDatasetArrayOutput() GetModelsModelCollectionItemValidationDatasetArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemValidationDatasetArrayOutput) ToGetModelsModelCollectionItemValidationDatasetArrayOutputWithContext(ctx context.Context) GetModelsModelCollectionItemValidationDatasetArrayOutput {
	return o
}

func (o GetModelsModelCollectionItemValidationDatasetArrayOutput) Index(i pulumi.IntInput) GetModelsModelCollectionItemValidationDatasetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelsModelCollectionItemValidationDataset {
		return vs[0].([]GetModelsModelCollectionItemValidationDataset)[vs[1].(int)]
	}).(GetModelsModelCollectionItemValidationDatasetOutput)
}

type GetProjectsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetProjectsFilterInput is an input type that accepts GetProjectsFilterArgs and GetProjectsFilterOutput values.
// You can construct a concrete instance of `GetProjectsFilterInput` via:
//
//	GetProjectsFilterArgs{...}
type GetProjectsFilterInput interface {
	pulumi.Input

	ToGetProjectsFilterOutput() GetProjectsFilterOutput
	ToGetProjectsFilterOutputWithContext(context.Context) GetProjectsFilterOutput
}

type GetProjectsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetProjectsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsFilter)(nil)).Elem()
}

func (i GetProjectsFilterArgs) ToGetProjectsFilterOutput() GetProjectsFilterOutput {
	return i.ToGetProjectsFilterOutputWithContext(context.Background())
}

func (i GetProjectsFilterArgs) ToGetProjectsFilterOutputWithContext(ctx context.Context) GetProjectsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsFilterOutput)
}

// GetProjectsFilterArrayInput is an input type that accepts GetProjectsFilterArray and GetProjectsFilterArrayOutput values.
// You can construct a concrete instance of `GetProjectsFilterArrayInput` via:
//
//	GetProjectsFilterArray{ GetProjectsFilterArgs{...} }
type GetProjectsFilterArrayInput interface {
	pulumi.Input

	ToGetProjectsFilterArrayOutput() GetProjectsFilterArrayOutput
	ToGetProjectsFilterArrayOutputWithContext(context.Context) GetProjectsFilterArrayOutput
}

type GetProjectsFilterArray []GetProjectsFilterInput

func (GetProjectsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsFilter)(nil)).Elem()
}

func (i GetProjectsFilterArray) ToGetProjectsFilterArrayOutput() GetProjectsFilterArrayOutput {
	return i.ToGetProjectsFilterArrayOutputWithContext(context.Background())
}

func (i GetProjectsFilterArray) ToGetProjectsFilterArrayOutputWithContext(ctx context.Context) GetProjectsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsFilterArrayOutput)
}

type GetProjectsFilterOutput struct{ *pulumi.OutputState }

func (GetProjectsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsFilter)(nil)).Elem()
}

func (o GetProjectsFilterOutput) ToGetProjectsFilterOutput() GetProjectsFilterOutput {
	return o
}

func (o GetProjectsFilterOutput) ToGetProjectsFilterOutputWithContext(ctx context.Context) GetProjectsFilterOutput {
	return o
}

func (o GetProjectsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetProjectsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetProjectsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetProjectsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProjectsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetProjectsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetProjectsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsFilter)(nil)).Elem()
}

func (o GetProjectsFilterArrayOutput) ToGetProjectsFilterArrayOutput() GetProjectsFilterArrayOutput {
	return o
}

func (o GetProjectsFilterArrayOutput) ToGetProjectsFilterArrayOutputWithContext(ctx context.Context) GetProjectsFilterArrayOutput {
	return o
}

func (o GetProjectsFilterArrayOutput) Index(i pulumi.IntInput) GetProjectsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectsFilter {
		return vs[0].([]GetProjectsFilter)[vs[1].(int)]
	}).(GetProjectsFilterOutput)
}

type GetProjectsProjectCollection struct {
	Items []GetProjectsProjectCollectionItem `pulumi:"items"`
}

// GetProjectsProjectCollectionInput is an input type that accepts GetProjectsProjectCollectionArgs and GetProjectsProjectCollectionOutput values.
// You can construct a concrete instance of `GetProjectsProjectCollectionInput` via:
//
//	GetProjectsProjectCollectionArgs{...}
type GetProjectsProjectCollectionInput interface {
	pulumi.Input

	ToGetProjectsProjectCollectionOutput() GetProjectsProjectCollectionOutput
	ToGetProjectsProjectCollectionOutputWithContext(context.Context) GetProjectsProjectCollectionOutput
}

type GetProjectsProjectCollectionArgs struct {
	Items GetProjectsProjectCollectionItemArrayInput `pulumi:"items"`
}

func (GetProjectsProjectCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectCollection)(nil)).Elem()
}

func (i GetProjectsProjectCollectionArgs) ToGetProjectsProjectCollectionOutput() GetProjectsProjectCollectionOutput {
	return i.ToGetProjectsProjectCollectionOutputWithContext(context.Background())
}

func (i GetProjectsProjectCollectionArgs) ToGetProjectsProjectCollectionOutputWithContext(ctx context.Context) GetProjectsProjectCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectCollectionOutput)
}

// GetProjectsProjectCollectionArrayInput is an input type that accepts GetProjectsProjectCollectionArray and GetProjectsProjectCollectionArrayOutput values.
// You can construct a concrete instance of `GetProjectsProjectCollectionArrayInput` via:
//
//	GetProjectsProjectCollectionArray{ GetProjectsProjectCollectionArgs{...} }
type GetProjectsProjectCollectionArrayInput interface {
	pulumi.Input

	ToGetProjectsProjectCollectionArrayOutput() GetProjectsProjectCollectionArrayOutput
	ToGetProjectsProjectCollectionArrayOutputWithContext(context.Context) GetProjectsProjectCollectionArrayOutput
}

type GetProjectsProjectCollectionArray []GetProjectsProjectCollectionInput

func (GetProjectsProjectCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsProjectCollection)(nil)).Elem()
}

func (i GetProjectsProjectCollectionArray) ToGetProjectsProjectCollectionArrayOutput() GetProjectsProjectCollectionArrayOutput {
	return i.ToGetProjectsProjectCollectionArrayOutputWithContext(context.Background())
}

func (i GetProjectsProjectCollectionArray) ToGetProjectsProjectCollectionArrayOutputWithContext(ctx context.Context) GetProjectsProjectCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectCollectionArrayOutput)
}

type GetProjectsProjectCollectionOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectCollection)(nil)).Elem()
}

func (o GetProjectsProjectCollectionOutput) ToGetProjectsProjectCollectionOutput() GetProjectsProjectCollectionOutput {
	return o
}

func (o GetProjectsProjectCollectionOutput) ToGetProjectsProjectCollectionOutputWithContext(ctx context.Context) GetProjectsProjectCollectionOutput {
	return o
}

func (o GetProjectsProjectCollectionOutput) Items() GetProjectsProjectCollectionItemArrayOutput {
	return o.ApplyT(func(v GetProjectsProjectCollection) []GetProjectsProjectCollectionItem { return v.Items }).(GetProjectsProjectCollectionItemArrayOutput)
}

type GetProjectsProjectCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsProjectCollection)(nil)).Elem()
}

func (o GetProjectsProjectCollectionArrayOutput) ToGetProjectsProjectCollectionArrayOutput() GetProjectsProjectCollectionArrayOutput {
	return o
}

func (o GetProjectsProjectCollectionArrayOutput) ToGetProjectsProjectCollectionArrayOutputWithContext(ctx context.Context) GetProjectsProjectCollectionArrayOutput {
	return o
}

func (o GetProjectsProjectCollectionArrayOutput) Index(i pulumi.IntInput) GetProjectsProjectCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectsProjectCollection {
		return vs[0].([]GetProjectsProjectCollection)[vs[1].(int)]
	}).(GetProjectsProjectCollectionOutput)
}

type GetProjectsProjectCollectionItem struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// A short description of the project.
	Description string `pulumi:"description"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// unique Project identifier
	Id string `pulumi:"id"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// A filter to return only resources their lifecycleState matches the given lifecycleState.
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The time the Project was created. An RFC3339 formatted datetime string
	TimeCreated string `pulumi:"timeCreated"`
	// The time the Project was updated. An RFC3339 formatted datetime string
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetProjectsProjectCollectionItemInput is an input type that accepts GetProjectsProjectCollectionItemArgs and GetProjectsProjectCollectionItemOutput values.
// You can construct a concrete instance of `GetProjectsProjectCollectionItemInput` via:
//
//	GetProjectsProjectCollectionItemArgs{...}
type GetProjectsProjectCollectionItemInput interface {
	pulumi.Input

	ToGetProjectsProjectCollectionItemOutput() GetProjectsProjectCollectionItemOutput
	ToGetProjectsProjectCollectionItemOutputWithContext(context.Context) GetProjectsProjectCollectionItemOutput
}

type GetProjectsProjectCollectionItemArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// A short description of the project.
	Description pulumi.StringInput `pulumi:"description"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// unique Project identifier
	Id pulumi.StringInput `pulumi:"id"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// A filter to return only resources their lifecycleState matches the given lifecycleState.
	State pulumi.StringInput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput `pulumi:"systemTags"`
	// The time the Project was created. An RFC3339 formatted datetime string
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time the Project was updated. An RFC3339 formatted datetime string
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetProjectsProjectCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectCollectionItem)(nil)).Elem()
}

func (i GetProjectsProjectCollectionItemArgs) ToGetProjectsProjectCollectionItemOutput() GetProjectsProjectCollectionItemOutput {
	return i.ToGetProjectsProjectCollectionItemOutputWithContext(context.Background())
}

func (i GetProjectsProjectCollectionItemArgs) ToGetProjectsProjectCollectionItemOutputWithContext(ctx context.Context) GetProjectsProjectCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectCollectionItemOutput)
}

// GetProjectsProjectCollectionItemArrayInput is an input type that accepts GetProjectsProjectCollectionItemArray and GetProjectsProjectCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetProjectsProjectCollectionItemArrayInput` via:
//
//	GetProjectsProjectCollectionItemArray{ GetProjectsProjectCollectionItemArgs{...} }
type GetProjectsProjectCollectionItemArrayInput interface {
	pulumi.Input

	ToGetProjectsProjectCollectionItemArrayOutput() GetProjectsProjectCollectionItemArrayOutput
	ToGetProjectsProjectCollectionItemArrayOutputWithContext(context.Context) GetProjectsProjectCollectionItemArrayOutput
}

type GetProjectsProjectCollectionItemArray []GetProjectsProjectCollectionItemInput

func (GetProjectsProjectCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsProjectCollectionItem)(nil)).Elem()
}

func (i GetProjectsProjectCollectionItemArray) ToGetProjectsProjectCollectionItemArrayOutput() GetProjectsProjectCollectionItemArrayOutput {
	return i.ToGetProjectsProjectCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetProjectsProjectCollectionItemArray) ToGetProjectsProjectCollectionItemArrayOutputWithContext(ctx context.Context) GetProjectsProjectCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectCollectionItemArrayOutput)
}

type GetProjectsProjectCollectionItemOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectCollectionItem)(nil)).Elem()
}

func (o GetProjectsProjectCollectionItemOutput) ToGetProjectsProjectCollectionItemOutput() GetProjectsProjectCollectionItemOutput {
	return o
}

func (o GetProjectsProjectCollectionItemOutput) ToGetProjectsProjectCollectionItemOutputWithContext(ctx context.Context) GetProjectsProjectCollectionItemOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetProjectsProjectCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetProjectsProjectCollectionItemOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetProjectsProjectCollectionItem) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// A short description of the project.
func (o GetProjectsProjectCollectionItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectCollectionItem) string { return v.Description }).(pulumi.StringOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetProjectsProjectCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetProjectsProjectCollectionItemOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetProjectsProjectCollectionItem) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// unique Project identifier
func (o GetProjectsProjectCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetProjectsProjectCollectionItemOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectCollectionItem) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// A filter to return only resources their lifecycleState matches the given lifecycleState.
func (o GetProjectsProjectCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetProjectsProjectCollectionItemOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetProjectsProjectCollectionItem) map[string]interface{} { return v.SystemTags }).(pulumi.MapOutput)
}

// The time the Project was created. An RFC3339 formatted datetime string
func (o GetProjectsProjectCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the Project was updated. An RFC3339 formatted datetime string
func (o GetProjectsProjectCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetProjectsProjectCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsProjectCollectionItem)(nil)).Elem()
}

func (o GetProjectsProjectCollectionItemArrayOutput) ToGetProjectsProjectCollectionItemArrayOutput() GetProjectsProjectCollectionItemArrayOutput {
	return o
}

func (o GetProjectsProjectCollectionItemArrayOutput) ToGetProjectsProjectCollectionItemArrayOutputWithContext(ctx context.Context) GetProjectsProjectCollectionItemArrayOutput {
	return o
}

func (o GetProjectsProjectCollectionItemArrayOutput) Index(i pulumi.IntInput) GetProjectsProjectCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectsProjectCollectionItem {
		return vs[0].([]GetProjectsProjectCollectionItem)[vs[1].(int)]
	}).(GetProjectsProjectCollectionItemOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ModelTestingDatasetInput)(nil)).Elem(), ModelTestingDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelTestingDatasetPtrInput)(nil)).Elem(), ModelTestingDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelTrainingDatasetInput)(nil)).Elem(), ModelTrainingDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelTrainingDatasetPtrInput)(nil)).Elem(), ModelTrainingDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelValidationDatasetInput)(nil)).Elem(), ModelValidationDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelValidationDatasetPtrInput)(nil)).Elem(), ModelValidationDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelTestingDatasetInput)(nil)).Elem(), GetModelTestingDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelTestingDatasetArrayInput)(nil)).Elem(), GetModelTestingDatasetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelTrainingDatasetInput)(nil)).Elem(), GetModelTrainingDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelTrainingDatasetArrayInput)(nil)).Elem(), GetModelTrainingDatasetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelValidationDatasetInput)(nil)).Elem(), GetModelValidationDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelValidationDatasetArrayInput)(nil)).Elem(), GetModelValidationDatasetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsFilterInput)(nil)).Elem(), GetModelsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsFilterArrayInput)(nil)).Elem(), GetModelsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionInput)(nil)).Elem(), GetModelsModelCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionArrayInput)(nil)).Elem(), GetModelsModelCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemInput)(nil)).Elem(), GetModelsModelCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemArrayInput)(nil)).Elem(), GetModelsModelCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemTestingDatasetInput)(nil)).Elem(), GetModelsModelCollectionItemTestingDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemTestingDatasetArrayInput)(nil)).Elem(), GetModelsModelCollectionItemTestingDatasetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemTrainingDatasetInput)(nil)).Elem(), GetModelsModelCollectionItemTrainingDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemTrainingDatasetArrayInput)(nil)).Elem(), GetModelsModelCollectionItemTrainingDatasetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemValidationDatasetInput)(nil)).Elem(), GetModelsModelCollectionItemValidationDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelCollectionItemValidationDatasetArrayInput)(nil)).Elem(), GetModelsModelCollectionItemValidationDatasetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsFilterInput)(nil)).Elem(), GetProjectsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsFilterArrayInput)(nil)).Elem(), GetProjectsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectCollectionInput)(nil)).Elem(), GetProjectsProjectCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectCollectionArrayInput)(nil)).Elem(), GetProjectsProjectCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectCollectionItemInput)(nil)).Elem(), GetProjectsProjectCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectCollectionItemArrayInput)(nil)).Elem(), GetProjectsProjectCollectionItemArray{})
	pulumi.RegisterOutputType(ModelTestingDatasetOutput{})
	pulumi.RegisterOutputType(ModelTestingDatasetPtrOutput{})
	pulumi.RegisterOutputType(ModelTrainingDatasetOutput{})
	pulumi.RegisterOutputType(ModelTrainingDatasetPtrOutput{})
	pulumi.RegisterOutputType(ModelValidationDatasetOutput{})
	pulumi.RegisterOutputType(ModelValidationDatasetPtrOutput{})
	pulumi.RegisterOutputType(GetModelTestingDatasetOutput{})
	pulumi.RegisterOutputType(GetModelTestingDatasetArrayOutput{})
	pulumi.RegisterOutputType(GetModelTrainingDatasetOutput{})
	pulumi.RegisterOutputType(GetModelTrainingDatasetArrayOutput{})
	pulumi.RegisterOutputType(GetModelValidationDatasetOutput{})
	pulumi.RegisterOutputType(GetModelValidationDatasetArrayOutput{})
	pulumi.RegisterOutputType(GetModelsFilterOutput{})
	pulumi.RegisterOutputType(GetModelsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemTestingDatasetOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemTestingDatasetArrayOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemTrainingDatasetOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemTrainingDatasetArrayOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemValidationDatasetOutput{})
	pulumi.RegisterOutputType(GetModelsModelCollectionItemValidationDatasetArrayOutput{})
	pulumi.RegisterOutputType(GetProjectsFilterOutput{})
	pulumi.RegisterOutputType(GetProjectsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectCollectionOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectCollectionItemOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectCollectionItemArrayOutput{})
}
