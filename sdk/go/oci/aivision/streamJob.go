// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aivision

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Stream Job resource in Oracle Cloud Infrastructure Ai Vision service.
//
// Create a stream analysis job with given inputs and features.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/aivision"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := aivision.NewStreamJob(ctx, "test_stream_job", &aivision.StreamJobArgs{
//				CompartmentId: pulumi.Any(compartmentId),
//				Features: aivision.StreamJobFeatureArray{
//					&aivision.StreamJobFeatureArgs{
//						FeatureType:           pulumi.Any(streamJobFeaturesFeatureType),
//						MaxResults:            pulumi.Any(streamJobFeaturesMaxResults),
//						ShouldReturnLandmarks: pulumi.Any(streamJobFeaturesShouldReturnLandmarks),
//						TrackingTypes: aivision.StreamJobFeatureTrackingTypeArray{
//							&aivision.StreamJobFeatureTrackingTypeArgs{
//								BiometricStoreCompartmentId: pulumi.Any(testCompartment.Id),
//								BiometricStoreId:            pulumi.Any(testBiometricStore.Id),
//								DetectionModelId:            pulumi.Any(testModel.Id),
//								MaxResults:                  pulumi.Any(streamJobFeaturesTrackingTypesMaxResults),
//								Objects:                     pulumi.Any(streamJobFeaturesTrackingTypesObjects),
//								ShouldReturnLandmarks:       pulumi.Any(streamJobFeaturesTrackingTypesShouldReturnLandmarks),
//								TrackingModelId:             pulumi.Any(testModel.Id),
//							},
//						},
//					},
//				},
//				StreamOutputLocation: &aivision.StreamJobStreamOutputLocationArgs{
//					Bucket:             pulumi.Any(streamJobStreamOutputLocationBucket),
//					Namespace:          pulumi.Any(streamJobStreamOutputLocationNamespace),
//					OutputLocationType: pulumi.Any(streamJobStreamOutputLocationOutputLocationType),
//					Prefix:             pulumi.Any(streamJobStreamOutputLocationPrefix),
//					OboToken:           pulumi.Any(streamJobStreamOutputLocationOboToken),
//				},
//				StreamSourceId: pulumi.Any(testStreamSource.Id),
//				DefinedTags:    pulumi.Any(streamJobDefinedTags),
//				DisplayName:    pulumi.Any(streamJobDisplayName),
//				FreeformTags:   pulumi.Any(streamJobFreeformTags),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// StreamJobs can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:AiVision/streamJob:StreamJob test_stream_job "id"
// ```
type StreamJob struct {
	pulumi.CustomResourceState

	// participant id of agent where results need to be sent
	AgentParticipantId pulumi.StringOutput `pulumi:"agentParticipantId"`
	// (Updatable) [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For example: `{"foo-namespace": {"bar-key": "value"}}`
	DefinedTags pulumi.StringMapOutput `pulumi:"definedTags"`
	// (Updatable) Stream job display name.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) a list of stream analysis features.
	Features StreamJobFeatureArrayOutput `pulumi:"features"`
	// (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapOutput `pulumi:"freeformTags"`
	// Additional details about current state of streamJob
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// (Updatable) The target state for the Stream Job. Could be set to `ACTIVE` or `INACTIVE`.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	State pulumi.StringOutput `pulumi:"state"`
	// (Updatable) Details about a where results will be Sent
	StreamOutputLocation StreamJobStreamOutputLocationOutput `pulumi:"streamOutputLocation"`
	// (Updatable) [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of streamSource.
	StreamSourceId pulumi.StringOutput `pulumi:"streamSourceId"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. For example: `{"orcl-cloud": {"free-tier-retained": "true"}}`
	SystemTags pulumi.StringMapOutput `pulumi:"systemTags"`
	// When the streamJob was created, as an RFC3339 datetime string.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// When the stream job was updated, as an RFC3339 datetime string.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewStreamJob registers a new resource with the given unique name, arguments, and options.
func NewStreamJob(ctx *pulumi.Context,
	name string, args *StreamJobArgs, opts ...pulumi.ResourceOption) (*StreamJob, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.Features == nil {
		return nil, errors.New("invalid value for required argument 'Features'")
	}
	if args.StreamOutputLocation == nil {
		return nil, errors.New("invalid value for required argument 'StreamOutputLocation'")
	}
	if args.StreamSourceId == nil {
		return nil, errors.New("invalid value for required argument 'StreamSourceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource StreamJob
	err := ctx.RegisterResource("oci:AiVision/streamJob:StreamJob", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStreamJob gets an existing StreamJob resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStreamJob(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StreamJobState, opts ...pulumi.ResourceOption) (*StreamJob, error) {
	var resource StreamJob
	err := ctx.ReadResource("oci:AiVision/streamJob:StreamJob", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StreamJob resources.
type streamJobState struct {
	// participant id of agent where results need to be sent
	AgentParticipantId *string `pulumi:"agentParticipantId"`
	// (Updatable) [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For example: `{"foo-namespace": {"bar-key": "value"}}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) Stream job display name.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) a list of stream analysis features.
	Features []StreamJobFeature `pulumi:"features"`
	// (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Additional details about current state of streamJob
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// (Updatable) The target state for the Stream Job. Could be set to `ACTIVE` or `INACTIVE`.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	State *string `pulumi:"state"`
	// (Updatable) Details about a where results will be Sent
	StreamOutputLocation *StreamJobStreamOutputLocation `pulumi:"streamOutputLocation"`
	// (Updatable) [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of streamSource.
	StreamSourceId *string `pulumi:"streamSourceId"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. For example: `{"orcl-cloud": {"free-tier-retained": "true"}}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// When the streamJob was created, as an RFC3339 datetime string.
	TimeCreated *string `pulumi:"timeCreated"`
	// When the stream job was updated, as an RFC3339 datetime string.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type StreamJobState struct {
	// participant id of agent where results need to be sent
	AgentParticipantId pulumi.StringPtrInput
	// (Updatable) [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For example: `{"foo-namespace": {"bar-key": "value"}}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) Stream job display name.
	DisplayName pulumi.StringPtrInput
	// (Updatable) a list of stream analysis features.
	Features StreamJobFeatureArrayInput
	// (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput
	// Additional details about current state of streamJob
	LifecycleDetails pulumi.StringPtrInput
	// (Updatable) The target state for the Stream Job. Could be set to `ACTIVE` or `INACTIVE`.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	State pulumi.StringPtrInput
	// (Updatable) Details about a where results will be Sent
	StreamOutputLocation StreamJobStreamOutputLocationPtrInput
	// (Updatable) [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of streamSource.
	StreamSourceId pulumi.StringPtrInput
	// Usage of system tag keys. These predefined keys are scoped to namespaces. For example: `{"orcl-cloud": {"free-tier-retained": "true"}}`
	SystemTags pulumi.StringMapInput
	// When the streamJob was created, as an RFC3339 datetime string.
	TimeCreated pulumi.StringPtrInput
	// When the stream job was updated, as an RFC3339 datetime string.
	TimeUpdated pulumi.StringPtrInput
}

func (StreamJobState) ElementType() reflect.Type {
	return reflect.TypeOf((*streamJobState)(nil)).Elem()
}

type streamJobArgs struct {
	// (Updatable) [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For example: `{"foo-namespace": {"bar-key": "value"}}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) Stream job display name.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) a list of stream analysis features.
	Features []StreamJobFeature `pulumi:"features"`
	// (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// (Updatable) The target state for the Stream Job. Could be set to `ACTIVE` or `INACTIVE`.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	State *string `pulumi:"state"`
	// (Updatable) Details about a where results will be Sent
	StreamOutputLocation StreamJobStreamOutputLocation `pulumi:"streamOutputLocation"`
	// (Updatable) [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of streamSource.
	StreamSourceId string `pulumi:"streamSourceId"`
}

// The set of arguments for constructing a StreamJob resource.
type StreamJobArgs struct {
	// (Updatable) [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For example: `{"foo-namespace": {"bar-key": "value"}}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) Stream job display name.
	DisplayName pulumi.StringPtrInput
	// (Updatable) a list of stream analysis features.
	Features StreamJobFeatureArrayInput
	// (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput
	// (Updatable) The target state for the Stream Job. Could be set to `ACTIVE` or `INACTIVE`.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	State pulumi.StringPtrInput
	// (Updatable) Details about a where results will be Sent
	StreamOutputLocation StreamJobStreamOutputLocationInput
	// (Updatable) [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of streamSource.
	StreamSourceId pulumi.StringInput
}

func (StreamJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*streamJobArgs)(nil)).Elem()
}

type StreamJobInput interface {
	pulumi.Input

	ToStreamJobOutput() StreamJobOutput
	ToStreamJobOutputWithContext(ctx context.Context) StreamJobOutput
}

func (*StreamJob) ElementType() reflect.Type {
	return reflect.TypeOf((**StreamJob)(nil)).Elem()
}

func (i *StreamJob) ToStreamJobOutput() StreamJobOutput {
	return i.ToStreamJobOutputWithContext(context.Background())
}

func (i *StreamJob) ToStreamJobOutputWithContext(ctx context.Context) StreamJobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamJobOutput)
}

// StreamJobArrayInput is an input type that accepts StreamJobArray and StreamJobArrayOutput values.
// You can construct a concrete instance of `StreamJobArrayInput` via:
//
//	StreamJobArray{ StreamJobArgs{...} }
type StreamJobArrayInput interface {
	pulumi.Input

	ToStreamJobArrayOutput() StreamJobArrayOutput
	ToStreamJobArrayOutputWithContext(context.Context) StreamJobArrayOutput
}

type StreamJobArray []StreamJobInput

func (StreamJobArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StreamJob)(nil)).Elem()
}

func (i StreamJobArray) ToStreamJobArrayOutput() StreamJobArrayOutput {
	return i.ToStreamJobArrayOutputWithContext(context.Background())
}

func (i StreamJobArray) ToStreamJobArrayOutputWithContext(ctx context.Context) StreamJobArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamJobArrayOutput)
}

// StreamJobMapInput is an input type that accepts StreamJobMap and StreamJobMapOutput values.
// You can construct a concrete instance of `StreamJobMapInput` via:
//
//	StreamJobMap{ "key": StreamJobArgs{...} }
type StreamJobMapInput interface {
	pulumi.Input

	ToStreamJobMapOutput() StreamJobMapOutput
	ToStreamJobMapOutputWithContext(context.Context) StreamJobMapOutput
}

type StreamJobMap map[string]StreamJobInput

func (StreamJobMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StreamJob)(nil)).Elem()
}

func (i StreamJobMap) ToStreamJobMapOutput() StreamJobMapOutput {
	return i.ToStreamJobMapOutputWithContext(context.Background())
}

func (i StreamJobMap) ToStreamJobMapOutputWithContext(ctx context.Context) StreamJobMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamJobMapOutput)
}

type StreamJobOutput struct{ *pulumi.OutputState }

func (StreamJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StreamJob)(nil)).Elem()
}

func (o StreamJobOutput) ToStreamJobOutput() StreamJobOutput {
	return o
}

func (o StreamJobOutput) ToStreamJobOutputWithContext(ctx context.Context) StreamJobOutput {
	return o
}

// participant id of agent where results need to be sent
func (o StreamJobOutput) AgentParticipantId() pulumi.StringOutput {
	return o.ApplyT(func(v *StreamJob) pulumi.StringOutput { return v.AgentParticipantId }).(pulumi.StringOutput)
}

// (Updatable) [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment
func (o StreamJobOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *StreamJob) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For example: `{"foo-namespace": {"bar-key": "value"}}`
func (o StreamJobOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *StreamJob) pulumi.StringMapOutput { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// (Updatable) Stream job display name.
func (o StreamJobOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *StreamJob) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) a list of stream analysis features.
func (o StreamJobOutput) Features() StreamJobFeatureArrayOutput {
	return o.ApplyT(func(v *StreamJob) StreamJobFeatureArrayOutput { return v.Features }).(StreamJobFeatureArrayOutput)
}

// (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{"bar-key": "value"}`
func (o StreamJobOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *StreamJob) pulumi.StringMapOutput { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// Additional details about current state of streamJob
func (o StreamJobOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *StreamJob) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// (Updatable) The target state for the Stream Job. Could be set to `ACTIVE` or `INACTIVE`.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o StreamJobOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *StreamJob) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// (Updatable) Details about a where results will be Sent
func (o StreamJobOutput) StreamOutputLocation() StreamJobStreamOutputLocationOutput {
	return o.ApplyT(func(v *StreamJob) StreamJobStreamOutputLocationOutput { return v.StreamOutputLocation }).(StreamJobStreamOutputLocationOutput)
}

// (Updatable) [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of streamSource.
func (o StreamJobOutput) StreamSourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *StreamJob) pulumi.StringOutput { return v.StreamSourceId }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. For example: `{"orcl-cloud": {"free-tier-retained": "true"}}`
func (o StreamJobOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *StreamJob) pulumi.StringMapOutput { return v.SystemTags }).(pulumi.StringMapOutput)
}

// When the streamJob was created, as an RFC3339 datetime string.
func (o StreamJobOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *StreamJob) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// When the stream job was updated, as an RFC3339 datetime string.
func (o StreamJobOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *StreamJob) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

type StreamJobArrayOutput struct{ *pulumi.OutputState }

func (StreamJobArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StreamJob)(nil)).Elem()
}

func (o StreamJobArrayOutput) ToStreamJobArrayOutput() StreamJobArrayOutput {
	return o
}

func (o StreamJobArrayOutput) ToStreamJobArrayOutputWithContext(ctx context.Context) StreamJobArrayOutput {
	return o
}

func (o StreamJobArrayOutput) Index(i pulumi.IntInput) StreamJobOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *StreamJob {
		return vs[0].([]*StreamJob)[vs[1].(int)]
	}).(StreamJobOutput)
}

type StreamJobMapOutput struct{ *pulumi.OutputState }

func (StreamJobMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StreamJob)(nil)).Elem()
}

func (o StreamJobMapOutput) ToStreamJobMapOutput() StreamJobMapOutput {
	return o
}

func (o StreamJobMapOutput) ToStreamJobMapOutputWithContext(ctx context.Context) StreamJobMapOutput {
	return o
}

func (o StreamJobMapOutput) MapIndex(k pulumi.StringInput) StreamJobOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *StreamJob {
		return vs[0].(map[string]*StreamJob)[vs[1].(string)]
	}).(StreamJobOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*StreamJobInput)(nil)).Elem(), &StreamJob{})
	pulumi.RegisterInputType(reflect.TypeOf((*StreamJobArrayInput)(nil)).Elem(), StreamJobArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StreamJobMapInput)(nil)).Elem(), StreamJobMap{})
	pulumi.RegisterOutputType(StreamJobOutput{})
	pulumi.RegisterOutputType(StreamJobArrayOutput{})
	pulumi.RegisterOutputType(StreamJobMapOutput{})
}
