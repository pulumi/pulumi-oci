// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aivision

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Vision Private Endpoint resource in Oracle Cloud Infrastructure Ai Vision service.
//
// Create a new visionPrivateEndpoint.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/aivision"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := aivision.NewVisionPrivateEndpoint(ctx, "test_vision_private_endpoint", &aivision.VisionPrivateEndpointArgs{
//				CompartmentId: pulumi.Any(compartmentId),
//				SubnetId:      pulumi.Any(testSubnet.Id),
//				DefinedTags:   pulumi.Any(visionPrivateEndpointDefinedTags),
//				Description:   pulumi.Any(visionPrivateEndpointDescription),
//				DisplayName:   pulumi.Any(visionPrivateEndpointDisplayName),
//				FreeformTags:  pulumi.Any(visionPrivateEndpointFreeformTags),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// VisionPrivateEndpoints can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:AiVision/visionPrivateEndpoint:VisionPrivateEndpoint test_vision_private_endpoint "id"
// ```
type VisionPrivateEndpoint struct {
	pulumi.CustomResourceState

	// (Updatable) The compartment identifier.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For example: `{"foo-namespace": {"bar-key": "value"}}`
	DefinedTags pulumi.StringMapOutput `pulumi:"definedTags"`
	// (Updatable) An optional description of the visionPrivateEndpoint.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) A human-friendly name for the visionPrivateEndpoint, that can be changed.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapOutput `pulumi:"freeformTags"`
	// A message describing the current state in more detail, that can provide actionable information if creation failed.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// The current state of the visionPrivateEndpoint.
	State pulumi.StringOutput `pulumi:"state"`
	// [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of subnet
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SubnetId pulumi.StringOutput `pulumi:"subnetId"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. For example: `{"orcl-cloud": {"free-tier-retained": "true"}}`
	SystemTags pulumi.StringMapOutput `pulumi:"systemTags"`
	// When the visionPrivateEndpoint was created, as an RFC3339 datetime string.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// When the visionPrivateEndpoint was updated, as an RFC3339 datetime string.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewVisionPrivateEndpoint registers a new resource with the given unique name, arguments, and options.
func NewVisionPrivateEndpoint(ctx *pulumi.Context,
	name string, args *VisionPrivateEndpointArgs, opts ...pulumi.ResourceOption) (*VisionPrivateEndpoint, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.SubnetId == nil {
		return nil, errors.New("invalid value for required argument 'SubnetId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VisionPrivateEndpoint
	err := ctx.RegisterResource("oci:AiVision/visionPrivateEndpoint:VisionPrivateEndpoint", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVisionPrivateEndpoint gets an existing VisionPrivateEndpoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVisionPrivateEndpoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VisionPrivateEndpointState, opts ...pulumi.ResourceOption) (*VisionPrivateEndpoint, error) {
	var resource VisionPrivateEndpoint
	err := ctx.ReadResource("oci:AiVision/visionPrivateEndpoint:VisionPrivateEndpoint", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VisionPrivateEndpoint resources.
type visionPrivateEndpointState struct {
	// (Updatable) The compartment identifier.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For example: `{"foo-namespace": {"bar-key": "value"}}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) An optional description of the visionPrivateEndpoint.
	Description *string `pulumi:"description"`
	// (Updatable) A human-friendly name for the visionPrivateEndpoint, that can be changed.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// A message describing the current state in more detail, that can provide actionable information if creation failed.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// The current state of the visionPrivateEndpoint.
	State *string `pulumi:"state"`
	// [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of subnet
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SubnetId *string `pulumi:"subnetId"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. For example: `{"orcl-cloud": {"free-tier-retained": "true"}}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// When the visionPrivateEndpoint was created, as an RFC3339 datetime string.
	TimeCreated *string `pulumi:"timeCreated"`
	// When the visionPrivateEndpoint was updated, as an RFC3339 datetime string.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type VisionPrivateEndpointState struct {
	// (Updatable) The compartment identifier.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For example: `{"foo-namespace": {"bar-key": "value"}}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) An optional description of the visionPrivateEndpoint.
	Description pulumi.StringPtrInput
	// (Updatable) A human-friendly name for the visionPrivateEndpoint, that can be changed.
	DisplayName pulumi.StringPtrInput
	// (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput
	// A message describing the current state in more detail, that can provide actionable information if creation failed.
	LifecycleDetails pulumi.StringPtrInput
	// The current state of the visionPrivateEndpoint.
	State pulumi.StringPtrInput
	// [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of subnet
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SubnetId pulumi.StringPtrInput
	// Usage of system tag keys. These predefined keys are scoped to namespaces. For example: `{"orcl-cloud": {"free-tier-retained": "true"}}`
	SystemTags pulumi.StringMapInput
	// When the visionPrivateEndpoint was created, as an RFC3339 datetime string.
	TimeCreated pulumi.StringPtrInput
	// When the visionPrivateEndpoint was updated, as an RFC3339 datetime string.
	TimeUpdated pulumi.StringPtrInput
}

func (VisionPrivateEndpointState) ElementType() reflect.Type {
	return reflect.TypeOf((*visionPrivateEndpointState)(nil)).Elem()
}

type visionPrivateEndpointArgs struct {
	// (Updatable) The compartment identifier.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For example: `{"foo-namespace": {"bar-key": "value"}}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) An optional description of the visionPrivateEndpoint.
	Description *string `pulumi:"description"`
	// (Updatable) A human-friendly name for the visionPrivateEndpoint, that can be changed.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of subnet
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SubnetId string `pulumi:"subnetId"`
}

// The set of arguments for constructing a VisionPrivateEndpoint resource.
type VisionPrivateEndpointArgs struct {
	// (Updatable) The compartment identifier.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For example: `{"foo-namespace": {"bar-key": "value"}}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) An optional description of the visionPrivateEndpoint.
	Description pulumi.StringPtrInput
	// (Updatable) A human-friendly name for the visionPrivateEndpoint, that can be changed.
	DisplayName pulumi.StringPtrInput
	// (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput
	// [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of subnet
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SubnetId pulumi.StringInput
}

func (VisionPrivateEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*visionPrivateEndpointArgs)(nil)).Elem()
}

type VisionPrivateEndpointInput interface {
	pulumi.Input

	ToVisionPrivateEndpointOutput() VisionPrivateEndpointOutput
	ToVisionPrivateEndpointOutputWithContext(ctx context.Context) VisionPrivateEndpointOutput
}

func (*VisionPrivateEndpoint) ElementType() reflect.Type {
	return reflect.TypeOf((**VisionPrivateEndpoint)(nil)).Elem()
}

func (i *VisionPrivateEndpoint) ToVisionPrivateEndpointOutput() VisionPrivateEndpointOutput {
	return i.ToVisionPrivateEndpointOutputWithContext(context.Background())
}

func (i *VisionPrivateEndpoint) ToVisionPrivateEndpointOutputWithContext(ctx context.Context) VisionPrivateEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VisionPrivateEndpointOutput)
}

// VisionPrivateEndpointArrayInput is an input type that accepts VisionPrivateEndpointArray and VisionPrivateEndpointArrayOutput values.
// You can construct a concrete instance of `VisionPrivateEndpointArrayInput` via:
//
//	VisionPrivateEndpointArray{ VisionPrivateEndpointArgs{...} }
type VisionPrivateEndpointArrayInput interface {
	pulumi.Input

	ToVisionPrivateEndpointArrayOutput() VisionPrivateEndpointArrayOutput
	ToVisionPrivateEndpointArrayOutputWithContext(context.Context) VisionPrivateEndpointArrayOutput
}

type VisionPrivateEndpointArray []VisionPrivateEndpointInput

func (VisionPrivateEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VisionPrivateEndpoint)(nil)).Elem()
}

func (i VisionPrivateEndpointArray) ToVisionPrivateEndpointArrayOutput() VisionPrivateEndpointArrayOutput {
	return i.ToVisionPrivateEndpointArrayOutputWithContext(context.Background())
}

func (i VisionPrivateEndpointArray) ToVisionPrivateEndpointArrayOutputWithContext(ctx context.Context) VisionPrivateEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VisionPrivateEndpointArrayOutput)
}

// VisionPrivateEndpointMapInput is an input type that accepts VisionPrivateEndpointMap and VisionPrivateEndpointMapOutput values.
// You can construct a concrete instance of `VisionPrivateEndpointMapInput` via:
//
//	VisionPrivateEndpointMap{ "key": VisionPrivateEndpointArgs{...} }
type VisionPrivateEndpointMapInput interface {
	pulumi.Input

	ToVisionPrivateEndpointMapOutput() VisionPrivateEndpointMapOutput
	ToVisionPrivateEndpointMapOutputWithContext(context.Context) VisionPrivateEndpointMapOutput
}

type VisionPrivateEndpointMap map[string]VisionPrivateEndpointInput

func (VisionPrivateEndpointMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VisionPrivateEndpoint)(nil)).Elem()
}

func (i VisionPrivateEndpointMap) ToVisionPrivateEndpointMapOutput() VisionPrivateEndpointMapOutput {
	return i.ToVisionPrivateEndpointMapOutputWithContext(context.Background())
}

func (i VisionPrivateEndpointMap) ToVisionPrivateEndpointMapOutputWithContext(ctx context.Context) VisionPrivateEndpointMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VisionPrivateEndpointMapOutput)
}

type VisionPrivateEndpointOutput struct{ *pulumi.OutputState }

func (VisionPrivateEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VisionPrivateEndpoint)(nil)).Elem()
}

func (o VisionPrivateEndpointOutput) ToVisionPrivateEndpointOutput() VisionPrivateEndpointOutput {
	return o
}

func (o VisionPrivateEndpointOutput) ToVisionPrivateEndpointOutputWithContext(ctx context.Context) VisionPrivateEndpointOutput {
	return o
}

// (Updatable) The compartment identifier.
func (o VisionPrivateEndpointOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *VisionPrivateEndpoint) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For example: `{"foo-namespace": {"bar-key": "value"}}`
func (o VisionPrivateEndpointOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VisionPrivateEndpoint) pulumi.StringMapOutput { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// (Updatable) An optional description of the visionPrivateEndpoint.
func (o VisionPrivateEndpointOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *VisionPrivateEndpoint) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// (Updatable) A human-friendly name for the visionPrivateEndpoint, that can be changed.
func (o VisionPrivateEndpointOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *VisionPrivateEndpoint) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{"bar-key": "value"}`
func (o VisionPrivateEndpointOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VisionPrivateEndpoint) pulumi.StringMapOutput { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// A message describing the current state in more detail, that can provide actionable information if creation failed.
func (o VisionPrivateEndpointOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *VisionPrivateEndpoint) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The current state of the visionPrivateEndpoint.
func (o VisionPrivateEndpointOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *VisionPrivateEndpoint) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of subnet
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o VisionPrivateEndpointOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *VisionPrivateEndpoint) pulumi.StringOutput { return v.SubnetId }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. For example: `{"orcl-cloud": {"free-tier-retained": "true"}}`
func (o VisionPrivateEndpointOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VisionPrivateEndpoint) pulumi.StringMapOutput { return v.SystemTags }).(pulumi.StringMapOutput)
}

// When the visionPrivateEndpoint was created, as an RFC3339 datetime string.
func (o VisionPrivateEndpointOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *VisionPrivateEndpoint) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// When the visionPrivateEndpoint was updated, as an RFC3339 datetime string.
func (o VisionPrivateEndpointOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *VisionPrivateEndpoint) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

type VisionPrivateEndpointArrayOutput struct{ *pulumi.OutputState }

func (VisionPrivateEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VisionPrivateEndpoint)(nil)).Elem()
}

func (o VisionPrivateEndpointArrayOutput) ToVisionPrivateEndpointArrayOutput() VisionPrivateEndpointArrayOutput {
	return o
}

func (o VisionPrivateEndpointArrayOutput) ToVisionPrivateEndpointArrayOutputWithContext(ctx context.Context) VisionPrivateEndpointArrayOutput {
	return o
}

func (o VisionPrivateEndpointArrayOutput) Index(i pulumi.IntInput) VisionPrivateEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VisionPrivateEndpoint {
		return vs[0].([]*VisionPrivateEndpoint)[vs[1].(int)]
	}).(VisionPrivateEndpointOutput)
}

type VisionPrivateEndpointMapOutput struct{ *pulumi.OutputState }

func (VisionPrivateEndpointMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VisionPrivateEndpoint)(nil)).Elem()
}

func (o VisionPrivateEndpointMapOutput) ToVisionPrivateEndpointMapOutput() VisionPrivateEndpointMapOutput {
	return o
}

func (o VisionPrivateEndpointMapOutput) ToVisionPrivateEndpointMapOutputWithContext(ctx context.Context) VisionPrivateEndpointMapOutput {
	return o
}

func (o VisionPrivateEndpointMapOutput) MapIndex(k pulumi.StringInput) VisionPrivateEndpointOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VisionPrivateEndpoint {
		return vs[0].(map[string]*VisionPrivateEndpoint)[vs[1].(string)]
	}).(VisionPrivateEndpointOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VisionPrivateEndpointInput)(nil)).Elem(), &VisionPrivateEndpoint{})
	pulumi.RegisterInputType(reflect.TypeOf((*VisionPrivateEndpointArrayInput)(nil)).Elem(), VisionPrivateEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VisionPrivateEndpointMapInput)(nil)).Elem(), VisionPrivateEndpointMap{})
	pulumi.RegisterOutputType(VisionPrivateEndpointOutput{})
	pulumi.RegisterOutputType(VisionPrivateEndpointArrayOutput{})
	pulumi.RegisterOutputType(VisionPrivateEndpointMapOutput{})
}
