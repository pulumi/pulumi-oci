// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package analytics

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Analytics Instances in Oracle Cloud Infrastructure Analytics service.
//
// List Analytics instances.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Analytics"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Analytics.GetAnalyticsInstances(ctx, &analytics.GetAnalyticsInstancesArgs{
//				CompartmentId: _var.Compartment_id,
//				CapacityType:  pulumi.StringRef(_var.Analytics_instance_capacity_type),
//				FeatureSet:    pulumi.StringRef(_var.Analytics_instance_feature_set),
//				Name:          pulumi.StringRef(_var.Analytics_instance_name),
//				State:         pulumi.StringRef(_var.Analytics_instance_state),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetAnalyticsInstances(ctx *pulumi.Context, args *GetAnalyticsInstancesArgs, opts ...pulumi.InvokeOption) (*GetAnalyticsInstancesResult, error) {
	var rv GetAnalyticsInstancesResult
	err := ctx.Invoke("oci:Analytics/getAnalyticsInstances:getAnalyticsInstances", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAnalyticsInstances.
type GetAnalyticsInstancesArgs struct {
	// A filter to only return resources matching the capacity type enum. Values are case-insensitive.
	CapacityType *string `pulumi:"capacityType"`
	// The OCID of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to only return resources matching the feature set. Values are case-insensitive.
	FeatureSet *string                       `pulumi:"featureSet"`
	Filters    []GetAnalyticsInstancesFilter `pulumi:"filters"`
	// A filter to return only resources that match the given name exactly.
	Name *string `pulumi:"name"`
	// A filter to only return resources matching the lifecycle state. The state value is case-insensitive.
	State *string `pulumi:"state"`
}

// A collection of values returned by getAnalyticsInstances.
type GetAnalyticsInstancesResult struct {
	// The list of analytics_instances.
	AnalyticsInstances []GetAnalyticsInstancesAnalyticsInstance `pulumi:"analyticsInstances"`
	// The capacity model to use.
	CapacityType *string `pulumi:"capacityType"`
	// The OCID of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// Analytics feature set.
	FeatureSet *string                       `pulumi:"featureSet"`
	Filters    []GetAnalyticsInstancesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The name of the Analytics instance. This name must be unique in the tenancy and cannot be changed.
	Name *string `pulumi:"name"`
	// The current state of an instance.
	State *string `pulumi:"state"`
}

func GetAnalyticsInstancesOutput(ctx *pulumi.Context, args GetAnalyticsInstancesOutputArgs, opts ...pulumi.InvokeOption) GetAnalyticsInstancesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAnalyticsInstancesResult, error) {
			args := v.(GetAnalyticsInstancesArgs)
			r, err := GetAnalyticsInstances(ctx, &args, opts...)
			var s GetAnalyticsInstancesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetAnalyticsInstancesResultOutput)
}

// A collection of arguments for invoking getAnalyticsInstances.
type GetAnalyticsInstancesOutputArgs struct {
	// A filter to only return resources matching the capacity type enum. Values are case-insensitive.
	CapacityType pulumi.StringPtrInput `pulumi:"capacityType"`
	// The OCID of the compartment.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to only return resources matching the feature set. Values are case-insensitive.
	FeatureSet pulumi.StringPtrInput                 `pulumi:"featureSet"`
	Filters    GetAnalyticsInstancesFilterArrayInput `pulumi:"filters"`
	// A filter to return only resources that match the given name exactly.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A filter to only return resources matching the lifecycle state. The state value is case-insensitive.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetAnalyticsInstancesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAnalyticsInstancesArgs)(nil)).Elem()
}

// A collection of values returned by getAnalyticsInstances.
type GetAnalyticsInstancesResultOutput struct{ *pulumi.OutputState }

func (GetAnalyticsInstancesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAnalyticsInstancesResult)(nil)).Elem()
}

func (o GetAnalyticsInstancesResultOutput) ToGetAnalyticsInstancesResultOutput() GetAnalyticsInstancesResultOutput {
	return o
}

func (o GetAnalyticsInstancesResultOutput) ToGetAnalyticsInstancesResultOutputWithContext(ctx context.Context) GetAnalyticsInstancesResultOutput {
	return o
}

// The list of analytics_instances.
func (o GetAnalyticsInstancesResultOutput) AnalyticsInstances() GetAnalyticsInstancesAnalyticsInstanceArrayOutput {
	return o.ApplyT(func(v GetAnalyticsInstancesResult) []GetAnalyticsInstancesAnalyticsInstance {
		return v.AnalyticsInstances
	}).(GetAnalyticsInstancesAnalyticsInstanceArrayOutput)
}

// The capacity model to use.
func (o GetAnalyticsInstancesResultOutput) CapacityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAnalyticsInstancesResult) *string { return v.CapacityType }).(pulumi.StringPtrOutput)
}

// The OCID of the compartment.
func (o GetAnalyticsInstancesResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAnalyticsInstancesResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Analytics feature set.
func (o GetAnalyticsInstancesResultOutput) FeatureSet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAnalyticsInstancesResult) *string { return v.FeatureSet }).(pulumi.StringPtrOutput)
}

func (o GetAnalyticsInstancesResultOutput) Filters() GetAnalyticsInstancesFilterArrayOutput {
	return o.ApplyT(func(v GetAnalyticsInstancesResult) []GetAnalyticsInstancesFilter { return v.Filters }).(GetAnalyticsInstancesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAnalyticsInstancesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAnalyticsInstancesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the Analytics instance. This name must be unique in the tenancy and cannot be changed.
func (o GetAnalyticsInstancesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAnalyticsInstancesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The current state of an instance.
func (o GetAnalyticsInstancesResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAnalyticsInstancesResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAnalyticsInstancesResultOutput{})
}
